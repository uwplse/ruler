(FPCore (x)
  :name "ENA, Section 1.4, Mentioned, A"
  :cite (conte-et-al-1980)
  :pre (<= -0.01 x 0.01)
  :herbie-target
  (/ (* (sin x) (sin x)) (+ 1 (cos x)))
  (- 1 (cos x)))

(FPCore (x)
  :name "ENA, Section 1.4, Exercise 4a"
  :cite (conte-et-al-1980)
  :pre (<= -1 x 1)
  :herbie-target
  (* 1/6 (* x x))
  (/ (- x (sin x)) (tan x)))

(FPCore
 (e v)
 :name
 "Trigonometry A"
 :pre
 (<= 0 e 1)
 (/ (* e (sin v)) (+ 1 (* e (cos v)))))

(FPCore
 (x)
 :name
 "Trigonometry B"
 (/ (- 1 (* (tan x) (tan x))) (+ 1 (* (tan x) (tan x)))))

(FPCore
 (normAngle u n0_i n1_i)
 :name
 "Curve intersection, scale width based on ribbon orientation"
 :precision
 binary32
 :pre
 (and (<= 0 normAngle (/ PI 2))
      (<= -1 n0_i 1)
      (<= -1 n1_i 1)
      (<= 2328306437/10000000000000000000 u 1))
 (let* ((invSinNormAngle (/ 1 (sin normAngle)))
        (sin0 (* (sin (* (- 1 u) normAngle)) invSinNormAngle))
        (sin1 (* (sin (* u normAngle)) invSinNormAngle)))
   (+ (* sin0 n0_i) (* sin1 n1_i))))

(FPCore
 (x tau)
 :name
 "Lanczos kernel"
 :precision
 binary32
 :pre
 (and (<= 1/100000 x 1) (<= 1 tau 5))
 (let ((xp (* x PI))) (* (/ (sin (* xp tau)) (* xp tau)) (/ (sin xp) xp))))

(FPCore
 (x y z a)
 :name
 "tan-example"
 :pre
 (and (or (== x 0) (<= 2942071/5000000 x 5055909/10000))
      (or (<=
           -179665800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
           y
           -1885117/2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
          (<=
           642469/500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
           y
           175122400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
      (or (<=
           -177670700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
           z
           -2149949/2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
          (<=
           658629/20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
           z
           172515400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
      (or (<=
           -179665800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
           a
           -1885117/2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
          (<=
           642469/500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
           a
           175122400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
 (+ x (- (tan (+ y z)) (tan a))))

(FPCore (r a b) :name "rsin A" (/ (* r (sin b)) (cos (+ a b))))

(FPCore (r a b) :name "rsin B" (* r (/ (sin b) (cos (+ a b)))))

(FPCore
 (x eps)
 :name
 "2sin (example 3.3)"
 :herbie-target
 (* 2 (* (cos (+ x (/ eps 2))) (sin (/ eps 2))))
 (- (sin (+ x eps)) (sin x)))

(FPCore
 (x)
 :name
 "tanhf (example 3.4)"
 :herbie-target
 (tan (/ x 2))
 (/ (- 1 (cos x)) (sin x)))

(FPCore
 (x eps)
 :name
 "2tan (problem 3.3.2)"
 :herbie-target
 (/ (sin eps) (* (cos x) (cos (+ x eps))))
 (- (tan (+ x eps)) (tan x)))

(FPCore (x eps) :name "2cos (problem 3.3.5)" (- (cos (+ x eps)) (cos x)))

(FPCore
 (x)
 :name
 "invcot (example 3.9)"
 :pre
 (and (< -13/500 x) (< x 13/500))
 :herbie-target
 (if (< (fabs x) 13/500)
   (* (/ x 3) (+ 1 (/ (* x x) 15)))
   (- (/ 1 x) (/ 1 (tan x))))
 (- (/ 1 x) (/ 1 (tan x))))

(FPCore (x) :name "cos2 (problem 3.4.1)" (/ (- 1 (cos x)) (* x x)))

(FPCore (x) :name "sintan (problem 3.4.5)" (/ (- x (sin x)) (- x (tan x))))

(FPCore
 (x y z)
 :name
 "Linear.Quaternion:$ctanh from linear-1.19.1.3"
 :herbie-target
 (if (< z -42173720203427147/1000000000000000000000000000000000000000000000)
   (/ (* x (/ 1 (/ y (sin y)))) z)
   (if (< z 44467023691138110000000000000000000000000000000000000000000000000)
     (/ x (* z (/ y (sin y))))
     (/ (* x (/ 1 (/ y (sin y)))) z)))
 (/ (* x (/ (sin y) y)) z))

(FPCore
 (x y)
 :name
 "Linear.Quaternion:$cexp from linear-1.19.1.3"
 (* x (/ (sin y) y)))

;(FPCore
; (x y z t a b)
; :name
; "Codec.Picture.Jpg.FastDct:referenceDct from JuicyPixels-3.2.6.1"
; :herbie-target
; (* x (cos (* (/ b 16) (/ t (+ (- 1 (* a 2)) (pow (* a 2) 2))))))
; (*
;  (* x (cos (/ (* (* (+ (* y 2) 1) z) t) 16)))
;  (cos (/ (* (* (+ (* a 2) 1) b) t) 16))))

(FPCore
 (x y z)
 :name
 "Diagrams.ThreeD.Transform:aboutY from diagrams-lib-1.3.0.3"
 (+ (* x (cos y)) (* z (sin y))))

(FPCore
 (x y z)
 :name
 "Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, A"
 (- (* x (cos y)) (* z (sin y))))

(FPCore
 (x y z)
 :name
 "Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, B"
 (+ (* x (sin y)) (* z (cos y))))

(FPCore
 (x y)
 :name
 "Diagrams.TwoD.Layout.CirclePacking:approxRadius from diagrams-contrib-1.3.0.5"
 :herbie-target
 (if (<
      y
      -1230369091130699400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
   1
   (if (<
        y
        -4551426203405957/500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
     (/
      (sin (/ x (* y 2)))
      (* (sin (/ x (* y 2))) (log (exp (cos (/ x (* y 2)))))))
     1))
 (/ (tan (/ x (* y 2))) (sin (/ x (* y 2)))))

(FPCore
 (x)
 :name
 "Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, A"
 :herbie-target
 (/ (/ (* 8 (sin (* x 1/2))) 3) (/ (sin x) (sin (* x 1/2))))
 (/ (* (* (/ 8 3) (sin (* x 1/2))) (sin (* x 1/2))) (sin x)))

(FPCore
 (x y z)
 :name
 "Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, B"
 (- (+ x (cos y)) (* z (sin y))))

(FPCore
 (x y z)
 :name
 "Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, C"
 (+ (+ x (sin y)) (* z (cos y))))

(FPCore
 (F l)
 :name
 "VandenBroeck and Keller, Equation (6)"
 (- (* PI l) (* (/ 1 (* F F)) (tan (* PI l)))))

(FPCore
 (B x)
 :name
 "VandenBroeck and Keller, Equation (24)"
 (+ (- (* x (/ 1 (tan B)))) (/ 1 (sin B))))

