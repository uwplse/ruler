[
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.87488418017552,
    "avg_bits_err_output": 0.04775,
    "avg_bits_err_improve": 40.82713418017552,
    "time": 6068.5673828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log1p (log1p (expm1 (- (+ (exp (/ (- x (sin x)) (- x (tan x)))) -2.0) -1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 31.180782228138554,
    "avg_bits_err_output": 31.182755927145905,
    "avg_bits_err_improve": -0.001973699007351115,
    "time": 24095.908203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma (* b_2 (/ -1.0 b_2)) b_2 (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 8,
    "avg_bits_err_input": 34.41134914409666,
    "avg_bits_err_output": 34.67091885149845,
    "avg_bits_err_improve": -0.25956970740178775,
    "time": 25132.105712890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.25264941759655,
    "avg_bits_err_output": 34.25264941759655,
    "avg_bits_err_improve": 0,
    "time": 27208.745361328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.575020739923517,
    "avg_bits_err_output": 31.575020739923517,
    "avg_bits_err_improve": 0,
    "time": 30708.79248046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.65983579670954,
    "avg_bits_err_output": 32.65983579670954,
    "avg_bits_err_improve": 0,
    "time": 21955.09619140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (+ (+ (log1p N) 3.0) -3.0) (log N))",
    "output_parens": 5,
    "avg_bits_err_input": 29.89630016366425,
    "avg_bits_err_output": 29.907047915775415,
    "avg_bits_err_improve": -0.010747752111164743,
    "time": 32420.652099609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (- (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (/ 1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.026953453822443,
    "avg_bits_err_output": 0.5347665791958968,
    "avg_bits_err_improve": 13.492186874626547,
    "time": 95070.06982421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (log (exp (cos (+ x eps)))) (* (log (exp (cos (+ x eps)))) (/ 1.0 (log (exp (cos (+ x eps)))))) (- (cos x)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.995185282530144,
    "avg_bits_err_output": 40.07426956519286,
    "avg_bits_err_improve": -0.07908428266271272,
    "time": 48505.671142578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.020420158353453,
    "avg_bits_err_output": 29.721112131143286,
    "avg_bits_err_improve": 0.29930802721016647,
    "time": 33664.503662109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.4562400601662,
    "avg_bits_err_output": 30.460632890079896,
    "avg_bits_err_improve": -0.004392829913697938,
    "time": 89010.0791015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.46033237308252,
    "avg_bits_err_output": 34.46033237308252,
    "avg_bits_err_improve": 0,
    "time": 37783.35595703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.472549351833045,
    "avg_bits_err_output": 34.472549351833045,
    "avg_bits_err_improve": 0,
    "time": 68957.26000976562,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.5) (/ (* (/ 1.0 (- (+ 1.0 (log (- 1.0 x))) 1.0)) (* (log (- 1.0 x)) (log (- 1.0 x)))) (- (- (log1p x) 1.0) -1.0)) (/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x)))",
    "output_parens": 28,
    "avg_bits_err_input": 61.453730727635474,
    "avg_bits_err_output": 59.16515451463565,
    "avg_bits_err_improve": 2.2885762129998213,
    "time": 75934.89990234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.008218201337286,
    "avg_bits_err_output": 0.5745447111017168,
    "avg_bits_err_improve": 62.43367349023557,
    "time": 30769.162841796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.64187700601443,
    "avg_bits_err_output": 58.64187700601443,
    "avg_bits_err_improve": 0,
    "time": 104017.00317382812,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.87792033337887,
    "avg_bits_err_output": 59.8779319098842,
    "avg_bits_err_improve": -1.1576505329458087e-05,
    "time": 42089.625244140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.1572632360821,
    "avg_bits_err_output": 41.44061807890458,
    "avg_bits_err_improve": 18.716645157177524,
    "time": 35345.58203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.31012038960202,
    "avg_bits_err_output": 0.531375,
    "avg_bits_err_improve": 40.77874538960202,
    "time": 4648.7705078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.60569648221609,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.60544648221609,
    "time": 3025.8232421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.540685457791106,
    "avg_bits_err_output": 0.01914441780414224,
    "avg_bits_err_improve": 29.521541039986964,
    "time": 3983.21826171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.637424647862787,
    "avg_bits_err_output": 28.676053042443463,
    "avg_bits_err_improve": 0.9613716054193233,
    "time": 23962.97900390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.14813584865345,
    "avg_bits_err_output": 9.16133441170391,
    "avg_bits_err_improve": -0.013198563050460521,
    "time": 37321.730712890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.94670660178132,
    "avg_bits_err_output": 36.976006711183516,
    "avg_bits_err_improve": -0.029300109402193186,
    "time": 36588.6181640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (- (exp (- (+ -1.0 (sqrt (+ x 1.0))) (sqrt x))) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 30.292353743518234,
    "avg_bits_err_output": 29.579923834147845,
    "avg_bits_err_improve": 0.712429909370389,
    "time": 24627.919677734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (expm1 (log1p (sin x))))",
    "output_parens": 6,
    "avg_bits_err_input": 37.60663541607277,
    "avg_bits_err_output": 37.618537874973896,
    "avg_bits_err_improve": -0.011902458901126067,
    "time": 36465.5615234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (+ (+ (sqrt (+ 1.0 x)) 2.0) -2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 20.151960140066578,
    "avg_bits_err_output": 20.150668060856663,
    "avg_bits_err_improve": 0.0012920792099144762,
    "time": 48724.08056640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ N 1.0)) (* (/ 1.0 (- -1.0 (atan N))) (* (- -1.0 (atan N)) (- -1.0 (atan N))))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 14.787589356586064,
    "avg_bits_err_output": 14.798905227456208,
    "avg_bits_err_improve": -0.01131587087014374,
    "time": 45571.003662109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.99235110276065,
    "avg_bits_err_output": 29.99235110276065,
    "avg_bits_err_improve": 0,
    "time": 28842.30126953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07563928593921272,
    "avg_bits_err_output": 0.07645712249115866,
    "avg_bits_err_improve": -0.0008178365519459357,
    "time": 21126.501220703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* b a) (* b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.83773893043793,
    "avg_bits_err_output": 0.3138140984428186,
    "avg_bits_err_improve": 15.52392483199511,
    "time": 19642.498291015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (/ PI (/ angle 180.0)) (* (* (/ angle 180.0) (/ PI (/ angle 180.0))) (/ 1.0 (/ PI (/ angle 180.0))))) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.320657935588994,
    "avg_bits_err_output": 20.646201507139786,
    "avg_bits_err_improve": -0.32554357155079217,
    "time": 58100.699951171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (cos (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (+ (pow a 2.0) (- (- (pow b 2.0) (pow a 2.0)) (pow a 2.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 31.220150071696498,
    "avg_bits_err_output": 31.209515360830654,
    "avg_bits_err_improve": 0.010634710865844,
    "time": 60385.589111328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) (- (* (+ 1.0 (* PI (/ 1.0 (/ angle 180.0)))) (/ angle 180.0)) (/ angle 180.0))))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.517435164799974,
    "avg_bits_err_output": 20.566076993098854,
    "avg_bits_err_improve": -0.048641828298880085,
    "time": 71941.3583984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17476184218813104,
    "avg_bits_err_output": 0.17476184218813104,
    "avg_bits_err_improve": 0,
    "time": 29194.822265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.30518865959940467,
    "avg_bits_err_output": 0.299576620759291,
    "avg_bits_err_improve": 0.005612038840113687,
    "time": 25656.269775390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13169812031259015,
    "avg_bits_err_output": 0.13169812031259015,
    "avg_bits_err_improve": 0,
    "time": 31369.6611328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.171775623305866,
    "avg_bits_err_output": 17.166654644343684,
    "avg_bits_err_improve": 0.005120978962182221,
    "time": 72334.373046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 7.8e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a)) (/ (+ (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (- (sqrt (fma a (* c -4.0) (* b b))))) (- (+ (sqrt (fma a (* c -4.0) (* b b))) (* (sqrt (fma a (* c -4.0) (* b b))) (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))) b)) (+ a a)))",
    "output_parens": 62,
    "avg_bits_err_input": 52.83969044350404,
    "avg_bits_err_output": 50.73747032942336,
    "avg_bits_err_improve": 2.10222011408068,
    "time": 35322.812744140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma b b (* a (* c -4.0))) (fma (- a) (* 4.0 c) (* 4.0 (* a c)))))) (* a 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 28.219180534707085,
    "avg_bits_err_output": 28.15017656917087,
    "avg_bits_err_improve": 0.0690039655362149,
    "time": 30407.919677734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-21) (/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a)) (/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (- (exp (log1p (/ 1.0 (fma a (* c -4.0) (* b b))))) 1.0)))) b) (+ a a)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.685511367535874,
    "avg_bits_err_output": 42.27401275032741,
    "avg_bits_err_improve": 1.4114986172084656,
    "time": 24692.31298828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.46212258103005,
    "avg_bits_err_output": 34.46212258103005,
    "avg_bits_err_improve": 0,
    "time": 35945.031982421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (* (sin (- lambda1 lambda2)) (* (sin (- lambda1 lambda2)) (/ (/ (sin (- lambda1 lambda2)) (sin (- lambda1 lambda2))) (sin (- lambda1 lambda2)))))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.9203810234809323,
    "avg_bits_err_output": 0.9383947705367117,
    "avg_bits_err_improve": -0.018013747055779405,
    "time": 34043.314208984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.064811471220583,
    "avg_bits_err_output": 29.07045361960981,
    "avg_bits_err_improve": -0.005642148389227941,
    "time": 32335.8349609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.213622374202764,
    "avg_bits_err_output": 1.3133562031259016,
    "avg_bits_err_improve": 56.900266171076865,
    "time": 14422.00341796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.93285336758055,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 57.92535336758055,
    "time": 6135.77734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009912798070799487,
    "avg_bits_err_output": 0.009912798070799487,
    "avg_bits_err_improve": 0,
    "time": 2141.513916015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.60125,
    "avg_bits_err_output": 31.60125,
    "avg_bits_err_improve": 0,
    "time": 5069.69580078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.630511978163696,
    "avg_bits_err_output": 58.630511978163696,
    "avg_bits_err_improve": 0,
    "time": 79104.0009765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.027448120312590144,
    "avg_bits_err_output": 0.027448120312590144,
    "avg_bits_err_improve": 0,
    "time": 3416.153564453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1272712406251803,
    "avg_bits_err_output": 0.1272712406251803,
    "avg_bits_err_improve": 0,
    "time": 68134.32885742188,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.123625,
    "avg_bits_err_output": 0.123625,
    "avg_bits_err_improve": 0,
    "time": 13527.354736328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.35118233120891,
    "avg_bits_err_output": 3.829233784805921,
    "avg_bits_err_improve": 35.52194854640299,
    "time": 44699.99755859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.805285926075854,
    "avg_bits_err_output": 14.805285926075854,
    "avg_bits_err_improve": 0,
    "time": 6787.578857421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.16210147755514773,
    "avg_bits_err_output": 0.15878617751909235,
    "avg_bits_err_improve": 0.003315300036055374,
    "time": 76600.44140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.8e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (log (+ 1.0 (expm1 (* (fma a (* c -3.0) (* b b)) (/ 1.0 (fma a (* c -3.0) (* b b)))))))))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (fma b b (* a (* c -3.0)))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 41,
    "avg_bits_err_input": 52.82050532703905,
    "avg_bits_err_output": 50.72032387817824,
    "avg_bits_err_improve": 2.100181448860809,
    "time": 26234.290283203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma b b (* a (* c -3.0))) (fma (- (* a -3.0)) (- c) (* 3.0 (* a c)))))) (* 3.0 a))",
    "output_parens": 15,
    "avg_bits_err_input": 28.36819594953342,
    "avg_bits_err_output": 28.313541476860404,
    "avg_bits_err_improve": 0.05465447267301471,
    "time": 22962.337890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -5e-22) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) (* a 3.0)) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) (* a 3.0)) (/ 1.0 (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) (* a 3.0))))) (/ (- (- (+ (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (sqrt (fma c (* a -3.0) (* b b)))) b) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (* 3.0 a)))",
    "output_parens": 54,
    "avg_bits_err_input": 43.77758319506283,
    "avg_bits_err_output": 41.44692649844285,
    "avg_bits_err_improve": 2.3306566966199824,
    "time": 28140.21630859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.51819949511365,
    "avg_bits_err_output": 34.51819949511365,
    "avg_bits_err_improve": 0,
    "time": 31518.118896484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.447363567738538,
    "avg_bits_err_output": 13.447363567738538,
    "avg_bits_err_improve": 0,
    "time": 49840.2119140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (log (exp (/ x (+ 1.0 x)))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 28.907142100152114,
    "avg_bits_err_output": 28.911821083951473,
    "avg_bits_err_improve": -0.004678983799358605,
    "time": 22231.171630859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (- (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) 1.0) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.014813721875540867,
    "avg_bits_err_improve": -0.0030637218755408674,
    "time": 4803.085693359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (+ (* (/ 1.0 (+ 1.0 x)) (- 1.0 (/ 1.0 (+ 1.0 x)))) (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) 2.0))) (/ 1.0 (+ x -1.0))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.187970758462768,
    "avg_bits_err_output": 12.357246147792406,
    "avg_bits_err_improve": 1.8307246106703623,
    "time": 195530.20434570312,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.76292766261422,
    "avg_bits_err_output": 52.47385474416338,
    "avg_bits_err_improve": 0.2890729184508345,
    "time": 38579.35986328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.043603710209847,
    "avg_bits_err_output": 29.043603710209847,
    "avg_bits_err_improve": 0,
    "time": 40830.066162109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* C A))) (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.606007567516684,
    "avg_bits_err_output": 52.41457580644223,
    "avg_bits_err_improve": 0.1914317610744547,
    "time": 39931.37890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.171756941918344,
    "avg_bits_err_output": 15.171756941918344,
    "avg_bits_err_improve": 0,
    "time": 1771.182373046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (fma (- g h) g (* h (- g h)))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 35.67640701467552,
    "avg_bits_err_output": 35.67651416859016,
    "avg_bits_err_improve": -0.00010715391464088952,
    "time": 15324.581298828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9912883468827537,
    "avg_bits_err_output": 0.9912883468827537,
    "avg_bits_err_improve": 0,
    "time": 12224.14208984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6610943609377705,
    "avg_bits_err_output": 0.6630118421881311,
    "avg_bits_err_improve": -0.0019174812503606198,
    "time": 5605.864501953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.294396107797018,
    "avg_bits_err_output": 11.294396107797018,
    "avg_bits_err_improve": 0,
    "time": 16320.177734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40895293827427864,
    "avg_bits_err_output": 0.36,
    "avg_bits_err_improve": 0.04895293827427866,
    "time": 16546.015380859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.22922637428044,
    "avg_bits_err_output": 15.9870241326552,
    "avg_bits_err_improve": 37.242202241625236,
    "time": 35675.297119140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.679809565668414,
    "avg_bits_err_output": 5.679809565668414,
    "avg_bits_err_improve": 0,
    "time": 38986.02490234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 7085.18603515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1198.274169921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (/ (* (* r w) (* r w)) 1.0)) (- 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 12.992930689537006,
    "avg_bits_err_output": 6.559168234384897,
    "avg_bits_err_improve": 6.4337624551521095,
    "time": 30243.506591796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) (+ x1 x1))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.524059527574896,
    "avg_bits_err_output": 0.29010983382766886,
    "avg_bits_err_improve": 0.23394969374722718,
    "time": 70471.986328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.045396829725135,
    "avg_bits_err_output": 18.045396829725135,
    "avg_bits_err_improve": 0,
    "time": 62335.879150390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.28223776155338814,
    "avg_bits_err_output": 0.1903043234384916,
    "avg_bits_err_improve": 0.09193343811489654,
    "time": 15875.73974609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003125,
    "avg_bits_err_output": 0.003125,
    "avg_bits_err_improve": 0,
    "time": 3396.475830078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.1091207942105,
    "avg_bits_err_output": 9.304517034835646,
    "avg_bits_err_improve": 4.804603759374855,
    "time": 39047.818115234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (expm1 (log1p (exp (* x (- -1.0 eps))))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.78789341309523,
    "avg_bits_err_output": 1.0020031110871366,
    "avg_bits_err_improve": 28.78589030200809,
    "time": 22502.07763671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.0055,
    "avg_bits_err_output": 0.0055,
    "avg_bits_err_improve": 0,
    "time": 6980.96337890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.008625,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 0,
    "time": 23212.18994140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (fma (/ (+ t t) (+ 1.0 t)) (/ (+ t t) (+ 1.0 t)) 1.0) (fma (/ (+ t t) (+ 1.0 t)) (/ (+ t t) (+ 1.0 t)) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.048625,
    "avg_bits_err_output": 0.0485,
    "avg_bits_err_improve": 0.0001250000000000001,
    "time": 50938.820556640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3589.984130859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2853.481689453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3359.6806640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.822912304428905,
    "avg_bits_err_output": 0.248875,
    "avg_bits_err_improve": 7.574037304428905,
    "time": 79579.21801757812,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3143548054901855,
    "avg_bits_err_output": 7.3143548054901855,
    "avg_bits_err_improve": 0,
    "time": 27621.91943359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (expm1 (log1p (pow (+ x eps) 2.0))) (pow x 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 15.835406440542085,
    "avg_bits_err_output": 15.858399944982853,
    "avg_bits_err_improve": -0.022993504440767865,
    "time": 30157.03369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (exp (* 10.0 (* x x))) (- (exp (log1p (log (+ 1.0 (expm1 (* (+ (expm1 (* 10.0 (* x x))) 2.0) (/ (cos x) (exp (* 10.0 (* x x)))))))))) 1.0)) (* (exp (* 10.0 (* x x))) (/ (cos x) (exp (* 10.0 (* x x))))))",
    "output_parens": 30,
    "avg_bits_err_input": 3.5487659458009073,
    "avg_bits_err_output": 3.5543066752526373,
    "avg_bits_err_improve": -0.005540729451730009,
    "time": 36592.24462890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.020530630351313,
    "avg_bits_err_output": 15.020530630351313,
    "avg_bits_err_improve": 0,
    "time": 186242.75830078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.53511209548896,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.53511209548896,
    "time": 4168.02490234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.803248968089605,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 38.802373968089604,
    "time": 5772.165283203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.295625,
    "avg_bits_err_improve": 63.704375,
    "time": 4285.80126953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84325147286218,
    "avg_bits_err_output": 0.38932800781475363,
    "avg_bits_err_improve": 61.453923465047424,
    "time": 19644.1767578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.472549351833045,
    "avg_bits_err_output": 34.472549351833045,
    "avg_bits_err_improve": 0,
    "time": 65645.21264648438,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.46212258103005,
    "avg_bits_err_output": 34.46212258103005,
    "avg_bits_err_improve": 0,
    "time": 34661.064453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2040.626220703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.76818272521393,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 39.759057725213935,
    "time": 6851.0732421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.798566548015334,
    "avg_bits_err_output": 19.800843052744526,
    "avg_bits_err_improve": -0.0022765047291919416,
    "time": 12397.5791015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6701016891069065,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6701016891069065,
    "time": 4994.524169921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.036,
    "time": 8040.607666015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019073120312590144,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0.008198120312590144,
    "time": 3056.0791015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.015375,
    "avg_bits_err_output": 0.015375,
    "avg_bits_err_improve": 0,
    "time": 2998.207275390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 1085.7109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.38880225625468784,
    "avg_bits_err_output": 0.243125,
    "avg_bits_err_improve": 0.14567725625468783,
    "time": 7257.143798828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.488135785344156,
    "avg_bits_err_output": 29.488135785344156,
    "avg_bits_err_improve": 0,
    "time": 107342.5224609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (- (* x x) eps) (/ (+ (* (- (* x x) eps) (* x (/ x (- (* x x) eps)))) (- eps)) (- (* x x) eps)))))",
    "output_parens": 17,
    "avg_bits_err_input": 24.17771523680861,
    "avg_bits_err_output": 24.199847644524393,
    "avg_bits_err_improve": -0.02213240771578384,
    "time": 20984.7421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) -1.0) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.920272973259017,
    "avg_bits_err_output": 29.92301551129686,
    "avg_bits_err_improve": -0.0027425380378431896,
    "time": 53228.6259765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007681401388979041,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006556401388979041,
    "time": 3496.0244140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.58844782478861,
    "avg_bits_err_output": 47.58844782478861,
    "avg_bits_err_improve": 0,
    "time": 57713.648681640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.675386994784667,
    "avg_bits_err_output": 26.675313874472074,
    "avg_bits_err_improve": 7.312031259232299e-05,
    "time": 21866.74609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.20477483441839,
    "avg_bits_err_output": 26.20477483441839,
    "avg_bits_err_improve": 0,
    "time": 15695.50830078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.031375,
    "avg_bits_err_output": 0.018207016441828858,
    "avg_bits_err_improve": 0.013167983558171142,
    "time": 14305.625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* 2.0 (* uy PI))) (sqrt (- (* ux (* maxCos (+ -2.0 (+ ux (- ux (* ux maxCos)))))) (- (- (* ux ux) ux) ux))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.647832149166652,
    "avg_bits_err_output": 0.5567693278493008,
    "avg_bits_err_improve": 13.091062821317351,
    "time": 34082.9931640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (* ux (* ux maxCos)) (- 0.0 (+ (- (* ux (+ (* maxCos (- (fma ux maxCos 2.0) ux)) (+ ux -1.0))) ux) 0.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.676623533641141,
    "avg_bits_err_output": 0.3238491281311268,
    "avg_bits_err_improve": 13.352774405510015,
    "time": 26659.03271484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (- 1.0 ux) (* ux maxCos)) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33887085912373005,
    "avg_bits_err_output": 0.33962242446645,
    "avg_bits_err_improve": -0.0007515653427199731,
    "time": 61424.4755859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.2029600952810437,
    "avg_bits_err_output": 0.2029600952810437,
    "avg_bits_err_improve": 0,
    "time": 16714.05126953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5324980702766468,
    "avg_bits_err_output": 0.496346407928139,
    "avg_bits_err_improve": 0.03615166234850775,
    "time": 81371.30590820312,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (exp (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.33138921929424436,
    "avg_bits_err_output": 0.3344741817949655,
    "avg_bits_err_improve": -0.0030849625007211556,
    "time": 47162.33544921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))))) (- s) (fma (- (* s (/ -1.0 s))) s (- s)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.33393869296766343,
    "avg_bits_err_output": 0.40263045533521113,
    "avg_bits_err_improve": -0.0686917623675477,
    "time": 39570.067626953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05662766810866245,
    "avg_bits_err_output": 0.05662766810866245,
    "avg_bits_err_improve": 0,
    "time": 16428.23876953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (log (+ 1.0 (expm1 (exp (/ (- (fabs x)) s))))) s)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.17231890009084724,
    "avg_bits_err_output": 0.1584175684509214,
    "avg_bits_err_improve": 0.013901331639925851,
    "time": 32317.2255859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6627989233643427,
    "avg_bits_err_output": 0.6638883949972356,
    "avg_bits_err_improve": -0.0010894716328929688,
    "time": 18595.875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15328271046875777,
    "avg_bits_err_output": 0.1537164668795955,
    "avg_bits_err_improve": -0.0004337564108377323,
    "time": 27998.036865234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.599083711564975,
    "avg_bits_err_output": 2.595183742036864,
    "avg_bits_err_improve": 0.0038999695281112245,
    "time": 103244.13891601562,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* v (* (sinh (/ 1.0 v)) (* v (* (sinh (/ 1.0 v)) (/ (/ 2.0 (sinh (/ 1.0 v))) v))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.4628038478056186,
    "avg_bits_err_output": 0.4874836036848041,
    "avg_bits_err_improve": -0.024679755879185472,
    "time": 48454.219482421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) (+ (log (/ 1.0 (* v 2.0))) 0.6931)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11301117382757771,
    "avg_bits_err_output": 0.1140637391913794,
    "avg_bits_err_improve": -0.0010525653638016885,
    "time": 7720.804443359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (* alpha alpha)) (* PI (* (log (* alpha alpha)) (/ 1.0 (log (* alpha alpha)))))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.4757510659776972,
    "avg_bits_err_output": 0.4920698788679841,
    "avg_bits_err_improve": -0.016318812890286916,
    "time": 27628.334228515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (- (* (* s (/ (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) s)) -3.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 1.328498093227955,
    "avg_bits_err_output": 1.3781712406893156,
    "avg_bits_err_improve": -0.049673147461360534,
    "time": 37748.57666015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(+ (* (+ s s) (log (/ 1.0 (+ 1.0 (* u -4.0))))) (* (log (log (+ 1.0 (expm1 (/ 1.0 (fma u -4.0 1.0)))))) (- s)))",
    "output_parens": 15,
    "avg_bits_err_input": 12.502287367634787,
    "avg_bits_err_output": 12.126599905177173,
    "avg_bits_err_improve": 0.37568746245761453,
    "time": 39101.5205078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (- (* s (+ r (* PI (* r 6.0)))) (* r s))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.12988456576125287,
    "avg_bits_err_output": 0.13936208836754252,
    "avg_bits_err_improve": -0.009477522606289646,
    "time": 51227.210205078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9211871839963994,
    "avg_bits_err_output": 0.9230231034876285,
    "avg_bits_err_improve": -0.0018359194912290766,
    "time": 45340.43212890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (- (* (/ 1.0 (sqrt PI)) (+ 1.0 (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta))) (/ 1.0 (sqrt PI))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.6828617256700389,
    "avg_bits_err_output": 0.6905953725470222,
    "avg_bits_err_improve": -0.007733646876983302,
    "time": 49248.51171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (- (* u2 (- (* 2.0 PI) -1.0)) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.349306948014679,
    "avg_bits_err_output": 13.35980875782765,
    "avg_bits_err_improve": -0.010501809812971885,
    "time": 64091.98876953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (* PI (+ u2 u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 13.394814497583212,
    "avg_bits_err_output": 13.35006574051915,
    "avg_bits_err_improve": 0.04474875706406145,
    "time": 36868.0400390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.280362091942722,
    "avg_bits_err_output": 14.280362091942722,
    "avg_bits_err_improve": 0,
    "time": 38849.7265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.65511148338157,
    "avg_bits_err_output": 12.65511148338157,
    "avg_bits_err_improve": 0,
    "time": 23466.10302734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (log1p (expm1 (tan (* PI l))))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.493597986284563,
    "avg_bits_err_output": 16.658623022239468,
    "avg_bits_err_improve": -0.1650250359549048,
    "time": 57229.298095703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2138327222622215,
    "avg_bits_err_output": 0.21093872187554083,
    "avg_bits_err_improve": 0.0028940003866806674,
    "time": 30638.384765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.859468280720668,
    "avg_bits_err_output": 13.858705925482749,
    "avg_bits_err_improve": 0.0007623552379190102,
    "time": 51162.637939453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (expm1 (log1p (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.53501356036294,
    "avg_bits_err_output": 1.9536633543966198,
    "avg_bits_err_improve": 59.581350205966324,
    "time": 62027.565673828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= l -6.5e+175) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))) (if (<= l 2.15e+198) (/ (fma t (sqrt 2.0) (fma (- (sqrt 2.0)) (- t) (* t (- (sqrt 2.0))))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))))))",
    "output_parens": 69,
    "avg_bits_err_input": 42.87654474662172,
    "avg_bits_err_output": 35.471808589609516,
    "avg_bits_err_improve": 7.404736157012202,
    "time": 40521.83544921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (expm1 (log1p (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 3.8751220386912992,
    "avg_bits_err_output": 3.885669407443823,
    "avg_bits_err_improve": -0.010547368752523933,
    "time": 50122.775390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0164762837965524,
    "avg_bits_err_output": 1.0164762837965524,
    "avg_bits_err_improve": 0,
    "time": 8875.868408203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.501658317288966,
    "avg_bits_err_output": 10.501658317288966,
    "avg_bits_err_improve": 0,
    "time": 56020.513671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (* n (- (* (- U* U) (* n (* (pow (/ l Om) 2.0) U))) (* U (- (* 2.0 (/ (* l l) Om)) t)))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 44,
    "avg_bits_err_input": 34.563245528192134,
    "avg_bits_err_output": 31.920203091325575,
    "avg_bits_err_improve": 2.6430424368665584,
    "time": 30132.299560546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (pow (/ k t) 2.0) 0.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 47.57916968591727,
    "avg_bits_err_output": 40.07449725218584,
    "avg_bits_err_improve": 7.504672433731429,
    "time": 72465.69702148438,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k)))",
    "output_parens": 12,
    "avg_bits_err_input": 33.21556720405132,
    "avg_bits_err_output": 33.18611121780373,
    "avg_bits_err_improve": 0.029455986247590715,
    "time": 39349.33740234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a1 a1) (/ (cos th) (sqrt 2.0))) (* a2 (* a2 (/ (cos th) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5316951156468169,
    "avg_bits_err_output": 0.5207588375223579,
    "avg_bits_err_improve": 0.010936278124459076,
    "time": 31557.11181640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (fma (* (* 2.0 PI) (/ n (* 2.0 PI))) (* 2.0 PI) 0.0) (/ (- 1.0 k) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5182383812897454,
    "avg_bits_err_output": 0.523961664540965,
    "avg_bits_err_improve": -0.005723283251219624,
    "time": 42709.5576171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (* (cos (/ K 2.0)) (- J)) (- (exp (- l)) (exp l)) (fma (* (cos (/ K 2.0)) J) (exp l) (* (cos (/ K 2.0)) (* (- J) (exp l))))) U)",
    "output_parens": 21,
    "avg_bits_err_input": 16.86010227587373,
    "avg_bits_err_output": 16.868607561956324,
    "avg_bits_err_improve": -0.008505286082595376,
    "time": 43229.730224609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* K (* (+ n m) (* (* (+ n m) (/ (/ (/ (/ K K) K) (+ n m)) (+ n m))) (+ n m))))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 60,
    "avg_bits_err_input": 15.470931656540774,
    "avg_bits_err_output": 1.454931656540781,
    "avg_bits_err_improve": 14.015999999999993,
    "time": 38030.341552734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.14964624062518,
    "avg_bits_err_output": 18.14964624062518,
    "avg_bits_err_improve": 0,
    "time": 36063.412109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (- (+ 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))) 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.928901350771833,
    "avg_bits_err_output": 13.928026350771832,
    "avg_bits_err_improve": 0.0008750000000006253,
    "time": 24770.873779296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.465906873322314,
    "avg_bits_err_output": 19.465906873322314,
    "avg_bits_err_improve": 0,
    "time": 19368.882080078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (+ (/ (* d (* c0 d)) (* D (* D (* w h)))) (sqrt (* (- (/ (* d (* c0 d)) (* D (* D (* w h)))) M) (+ (/ (* d (* c0 d)) (* D (* D (* w h)))) M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.429657685104644,
    "avg_bits_err_output": 56.67527869064276,
    "avg_bits_err_improve": 2.754378994461881,
    "time": 39250.733642578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d l) 0.5) (- (pow (/ d h) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (* (/ h l) 0.5) (pow (/ d h) 0.5)))))",
    "output_parens": 16,
    "avg_bits_err_input": 26.602134880330688,
    "avg_bits_err_output": 26.022522680797014,
    "avg_bits_err_improve": 0.579612199533674,
    "time": 49628.377197265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.733236059195152,
    "avg_bits_err_output": 15.733236059195152,
    "avg_bits_err_improve": 0,
    "time": 12072.532958984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (- 1.0 (* v v)) PI) (* 3.0 (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9845731203125901,
    "avg_bits_err_output": 0.013240601562950724,
    "avg_bits_err_improve": 0.9713325187496394,
    "time": 22354.784912109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4586993025406222,
    "avg_bits_err_output": 0.3949684763719057,
    "avg_bits_err_improve": 0.0637308261687165,
    "time": 31666.618408203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (- (/ (sqrt 2.0) 4.0) (* (* v v) (/ (sqrt 2.0) 4.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.012146240625180289,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0.0003962406251802886,
    "time": 18913.22021484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (+ (+ (* 5.0 (* v v)) -2.0) 2.0)) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5546123587068369,
    "avg_bits_err_output": 0.5700823569627713,
    "avg_bits_err_improve": -0.015469998255934425,
    "time": 12404.9990234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8381491208740295,
    "avg_bits_err_output": 1.8205241208740297,
    "avg_bits_err_improve": 0.01762499999999978,
    "time": 20064.055908203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018230344508855918,
    "avg_bits_err_output": 0.018230344508855918,
    "avg_bits_err_improve": 0,
    "time": 7360.425048828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1817998125036057,
    "avg_bits_err_output": 0.1817998125036057,
    "avg_bits_err_improve": 0,
    "time": 29991.343505859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18492463672813633,
    "avg_bits_err_output": 0.18492463672813633,
    "avg_bits_err_improve": 0,
    "time": 28466.9111328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* b (* b (+ 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18631897236993444,
    "avg_bits_err_output": 0.18585185167066365,
    "avg_bits_err_improve": 0.00046712069927079547,
    "time": 8375.499267578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ x (sqrt (fma x x (* 4.0 (* p p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.374506953137011,
    "avg_bits_err_output": 13.377204023885152,
    "avg_bits_err_improve": -0.0026970707481410727,
    "time": 15803.534423828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (* (/ 1.0 (/ (expm1 (+ x x)) (expm1 x))) (* (/ (expm1 (+ x x)) (expm1 x)) (/ (expm1 (+ x x)) (expm1 x)))))",
    "output_parens": 16,
    "avg_bits_err_input": 40.79512143001579,
    "avg_bits_err_output": 0.04925,
    "avg_bits_err_improve": 40.74587143001579,
    "time": 6029.427978515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (- (+ (sin x) -1.0) -1.0)) (- (- (- x -1.0) 1.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.17525936815557,
    "avg_bits_err_output": 25.652816449443193,
    "avg_bits_err_improve": 5.522442918712375,
    "time": 49805.59619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c))))) b_2) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.22785241872434,
    "avg_bits_err_output": 34.23796802028729,
    "avg_bits_err_improve": -0.010115601562951326,
    "time": 21491.912353515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (fma b_2 -1.0 (fma (sqrt (- (* b_2 b_2) (* c a))) -1.0 b_2)) b_2) a)",
    "output_parens": 8,
    "avg_bits_err_input": 34.23761159853698,
    "avg_bits_err_output": 34.24415198453554,
    "avg_bits_err_improve": -0.006540385998562215,
    "time": 23873.84912109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.549309820278808,
    "avg_bits_err_output": 31.549309820278808,
    "avg_bits_err_improve": 0,
    "time": 33992.0048828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.9093314416616,
    "avg_bits_err_output": 32.9093314416616,
    "avg_bits_err_improve": 0,
    "time": 16845.517578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (- (+ (exp (- (log1p N) (log N))) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.543885853594208,
    "avg_bits_err_output": 29.554769597586567,
    "avg_bits_err_improve": -0.01088374399235903,
    "time": 30629.503173828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (+ (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.112249711393671,
    "avg_bits_err_output": 0.5217952190824714,
    "avg_bits_err_improve": 13.5904544923112,
    "time": 88191.552734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (log1p (log1p (expm1 (expm1 (cos (+ x eps)))))) (+ -1.0 (- 1.0 (cos x))))",
    "output_parens": 10,
    "avg_bits_err_input": 39.98961918396757,
    "avg_bits_err_output": 40.04578716323999,
    "avg_bits_err_improve": -0.05616797927242345,
    "time": 43093.359619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.10594522353427,
    "avg_bits_err_output": 29.80219313237363,
    "avg_bits_err_improve": 0.3037520911606393,
    "time": 29343.400634765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.031646316473925,
    "avg_bits_err_output": 30.031646316473925,
    "avg_bits_err_improve": 0,
    "time": 66893.30151367188,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.14834767390882,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": -0.005884921625074924,
    "time": 27285.201904296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* a (* c -4.0))))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.83041998751424,
    "avg_bits_err_output": 33.869505250503664,
    "avg_bits_err_improve": -0.03908526298942405,
    "time": 23628.3798828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.348962375838774,
    "avg_bits_err_output": 59.99532618483644,
    "avg_bits_err_improve": 1.3536361910023302,
    "time": 19939.708740234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.0047477116072,
    "avg_bits_err_output": 0.07847857665566292,
    "avg_bits_err_improve": 62.92626913495154,
    "time": 32798.7490234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (/ 1.0 (/ 1.0 (tan x))) (- 0.0 (+ (/ 1.0 (tan x)) (+ (- (/ 1.0 (/ 1.0 (tan x)))) (- (+ (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (/ 1.0 (tan x)))) (/ 1.0 x))))))",
    "output_parens": 22,
    "avg_bits_err_input": 59.82052690918915,
    "avg_bits_err_output": 52.19507548657276,
    "avg_bits_err_improve": 7.625451422616386,
    "time": 73994.15698242188,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.14925138088946,
    "avg_bits_err_output": 41.399247525897906,
    "avg_bits_err_improve": 18.750003854991554,
    "time": 36621.9130859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.10146429990704,
    "avg_bits_err_output": 0.4136981203125902,
    "avg_bits_err_improve": 40.687766179594455,
    "time": 9766.952392578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.63475144687459,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 58.63362644687459,
    "time": 4131.254638671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.611401246432838,
    "avg_bits_err_output": 0.019765210880563468,
    "avg_bits_err_improve": 29.591636035552273,
    "time": 5291.627197265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.516741666768688,
    "avg_bits_err_output": 28.668947681985866,
    "avg_bits_err_improve": 0.8477939847828218,
    "time": 30531.473388671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.27282688135644,
    "avg_bits_err_output": 9.27282688135644,
    "avg_bits_err_improve": 0,
    "time": 85776.6201171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (- (tan x)) (* (tan x) (/ 1.0 (tan x))) (tan (+ x eps)))",
    "output_parens": 9,
    "avg_bits_err_input": 36.824550139501774,
    "avg_bits_err_output": 36.88845987672322,
    "avg_bits_err_improve": -0.06390973722144366,
    "time": 41133.521728515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.3118285325049,
    "avg_bits_err_output": 29.619561700481384,
    "avg_bits_err_improve": 0.6922668320235168,
    "time": 32159.81201171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (expm1 (log1p (sin (+ x eps)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 37.076640996947305,
    "avg_bits_err_output": 37.14130245692185,
    "avg_bits_err_improve": -0.06466145997454475,
    "time": 53086.08056640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt (+ 1.0 x))) (- (* (/ 1.0 (sqrt (+ 1.0 x))) 2.0) (/ 1.0 (sqrt x))))",
    "output_parens": 11,
    "avg_bits_err_input": 20.160534528008185,
    "avg_bits_err_output": 20.162107648320777,
    "avg_bits_err_improve": -0.0015731203125923798,
    "time": 33217.18212890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (/ 1.0 (atan (+ N 1.0))) (* (atan (+ N 1.0)) (atan (+ N 1.0)))) (atan N))",
    "output_parens": 11,
    "avg_bits_err_input": 14.638241763027859,
    "avg_bits_err_output": 14.642438150506504,
    "avg_bits_err_improve": -0.004196387478645036,
    "time": 25065.98876953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.50977604596259,
    "avg_bits_err_output": 29.50977604596259,
    "avg_bits_err_improve": 0,
    "time": 59515.78076171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(+ -1.0 (- m (* (/ (- m (* m m)) v) (+ m -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07411804531403245,
    "avg_bits_err_output": 0.07431226397322556,
    "avg_bits_err_improve": -0.00019421865919311276,
    "time": 30161.407470703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* a b) (* a b) (* (fma (- a) b (* a b)) (* b (- a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.090487036499425,
    "avg_bits_err_output": 0.151875,
    "avg_bits_err_improve": 15.938612036499425,
    "time": 21634.51171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (fma (/ (/ PI PI) PI) (* (/ angle 180.0) (* PI PI)) 0.0))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.331947925664565,
    "avg_bits_err_output": 20.332948094749984,
    "avg_bits_err_improve": -0.0010001690854188894,
    "time": 71892.1845703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (/ (- (pow b 2.0) (pow a 2.0)) (cos (* PI (/ angle 180.0)))) (* (- (- (cos (* PI (/ angle 180.0)))) (* (cos (* PI (/ angle 180.0))) (- -1.0 (cos (* PI (/ angle 180.0)))))) (sin (* PI (/ angle 180.0))))))",
    "output_parens": 26,
    "avg_bits_err_input": 31.72152342700583,
    "avg_bits_err_output": 31.68664878797117,
    "avg_bits_err_improve": 0.034874639034661925,
    "time": 69095.33129882812,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) (* (/ angle 180.0) (* (* (/ angle 180.0) (/ PI (/ angle 180.0))) (/ 1.0 (/ angle 180.0))))))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.567626989963102,
    "avg_bits_err_output": 20.85134399660417,
    "avg_bits_err_improve": -0.28371700664106925,
    "time": 70239.1416015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18167932343849155,
    "avg_bits_err_output": 0.18143500030065657,
    "avg_bits_err_improve": 0.00024432313783498416,
    "time": 25956.015380859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3253321527932952,
    "avg_bits_err_output": 0.3142967054206411,
    "avg_bits_err_improve": 0.011035447372654106,
    "time": 27301.2119140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13404248125036058,
    "avg_bits_err_output": 0.13404248125036058,
    "avg_bits_err_improve": 0,
    "time": 41040.73828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos (- lambda1 lambda2))) (cos phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.773023324629563,
    "avg_bits_err_output": 16.766391381084418,
    "avg_bits_err_improve": 0.006631943545144736,
    "time": 58196.83544921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 300.0) (/ (fma (sqrt (fma b b (* a (* c -4.0)))) (- (sqrt (fma b b (* a (* c -4.0))))) (- (- (sqrt (fma b b (* a (* c -4.0)))) (- (* (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a)) (/ (- (+ (sqrt (fma b b (* a (* c -4.0)))) (- 1.0 b)) 1.0) (+ a a)))",
    "output_parens": 39,
    "avg_bits_err_input": 52.41577278449764,
    "avg_bits_err_output": 50.690443687633106,
    "avg_bits_err_improve": 1.7253290968645345,
    "time": 25611.825927734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (fma (fma a (* c -4.0) (* b b)) (* (fma a (* c -4.0) (* b b)) (/ (/ 1.0 (fma a (* c -4.0) (* b b))) (fma a (* c -4.0) (* b b)))) 0.0))) b) (+ a a))",
    "output_parens": 24,
    "avg_bits_err_input": 28.773278837012505,
    "avg_bits_err_output": 28.76624862472159,
    "avg_bits_err_improve": 0.007030212290914051,
    "time": 25261.021240234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0))))) (- b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 43.91716270595241,
    "avg_bits_err_output": 43.2073461284189,
    "avg_bits_err_improve": 0.709816577533509,
    "time": 23469.316650390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.1542325955339,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": 0,
    "time": 42715.7177734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (/ 1.0 (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.9275932301321357,
    "avg_bits_err_output": 0.9406144429063709,
    "avg_bits_err_improve": -0.01302121277423518,
    "time": 55840.054443359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 29.428468357254232,
    "avg_bits_err_output": 29.429804032978925,
    "avg_bits_err_improve": -0.001335675724693175,
    "time": 7576.97509765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.248533931562456,
    "avg_bits_err_output": 1.1933656015629508,
    "avg_bits_err_improve": 57.0551683299995,
    "time": 8118.854736328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18737650829796,
    "avg_bits_err_output": 0.007125,
    "avg_bits_err_improve": 58.18025150829796,
    "time": 6174.291259765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(+ (+ (/ 2.0 (+ (exp x) (exp (- x)))) 2.0) -2.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.009026789890100096,
    "avg_bits_err_output": 0.16548222301892276,
    "avg_bits_err_improve": -0.15645543312882268,
    "time": 3620.402099609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.761290241011864,
    "avg_bits_err_output": 32.761290241011864,
    "avg_bits_err_improve": 0,
    "time": 3402.255126953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 58.62976193228778,
    "avg_bits_err_output": 58.635631445172905,
    "avg_bits_err_improve": -0.005869512885126937,
    "time": 73663.63842773438,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.05073836132445107,
    "avg_bits_err_output": 0.05181148163704121,
    "avg_bits_err_improve": -0.0010731203125901381,
    "time": 5102.314453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (fma (cos t) (* (cos t) (/ eh (cos t))) 0.0) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12277124062518029,
    "avg_bits_err_output": 0.17113928593921274,
    "avg_bits_err_improve": -0.04836804531403245,
    "time": 39839.30126953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12832312031259013,
    "avg_bits_err_output": 0.12832312031259013,
    "avg_bits_err_improve": 0,
    "time": 32491.705322265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma lambda1 (cos (/ (+ phi1 phi2) 2.0)) (* (- lambda1) (cos (/ (+ phi1 phi2) 2.0))))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.425490359356836,
    "avg_bits_err_output": 3.7054942909840873,
    "avg_bits_err_improve": 35.71999606837275,
    "time": 42038.531982421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.467379223809136,
    "avg_bits_err_output": 14.467379223809136,
    "avg_bits_err_improve": 0,
    "time": 3868.74267578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15031926026065223,
    "avg_bits_err_output": 0.14698334443421399,
    "avg_bits_err_improve": 0.003335915826438246,
    "time": 63187.459228515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 330.0) (/ (+ (fma (* (sqrt (fma b b (* a (* c -3.0)))) (- (exp (log1p (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))))) (- (sqrt (fma b b (* a (* c -3.0))))) (* (sqrt (fma b b (* a (* c -3.0)))) (* (sqrt (fma b b (* a (* c -3.0)))) (- (exp (log1p (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))))))) (- (sqrt (fma b b (* a (* c -3.0)))) b)) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 56,
    "avg_bits_err_input": 52.432124763581655,
    "avg_bits_err_output": 50.72999539679991,
    "avg_bits_err_improve": 1.7021293667817474,
    "time": 30551.430419921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.98665986906457,
    "avg_bits_err_output": 28.938885274593662,
    "avg_bits_err_improve": 0.04777459447090848,
    "time": 27732.663330078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-21) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (- (exp (log1p (/ 1.0 (fma b b (* a (* c -3.0)))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.988148458846915,
    "avg_bits_err_output": 42.56192919052484,
    "avg_bits_err_improve": 1.4262192683220718,
    "time": 24958.375244140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.200232836986736,
    "avg_bits_err_output": 34.200232836986736,
    "avg_bits_err_improve": 0,
    "time": 21757.070068359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (/ (sin (- lambda1 lambda2)) (cos phi2)) (* (cos phi2) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.309146663637202,
    "avg_bits_err_output": 13.325748269808116,
    "avg_bits_err_improve": -0.016601606170913996,
    "time": 79764.9033203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (- (/ x (+ x 1.0)) (/ (+ x 1.0) (+ x -1.0))) (* (/ (+ 1.0 x) (+ x -1.0)) (fma (/ (+ 1.0 x) (+ x -1.0)) (* (/ (/ 1.0 (/ (+ 1.0 x) (+ x -1.0))) (* (/ (+ 1.0 x) (+ x -1.0)) (/ (+ 1.0 x) (+ x -1.0)))) (* (/ (+ 1.0 x) (+ x -1.0)) (- (/ (+ 1.0 x) (+ x -1.0))))) 1.0)))",
    "output_parens": 36,
    "avg_bits_err_input": 29.22226749814124,
    "avg_bits_err_output": 29.23375394092224,
    "avg_bits_err_improve": -0.011486442781002637,
    "time": 46095.85986328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.013125,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 0,
    "time": 3005.83544921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x)) -1.0)) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.034993816559629,
    "avg_bits_err_output": 12.229277659727442,
    "avg_bits_err_improve": 1.8057161568321867,
    "time": 47445.479736328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (- (* (- (+ F F)) (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* A (* C 4.0)))) (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (pow B 2.0) (+ F F)))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 32,
    "avg_bits_err_input": 51.961170785148546,
    "avg_bits_err_output": 52.00340358772441,
    "avg_bits_err_improve": -0.04223280257586026,
    "time": 39579.205810546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(- (- (* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI)) 1.0) -1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 29.392346234756975,
    "avg_bits_err_output": 29.39573163371522,
    "avg_bits_err_improve": -0.003385398958243968,
    "time": 40651.78125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* C (* 4.0 A))) (* (* 2.0 F) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.00291471876566,
    "avg_bits_err_output": 51.77609473801366,
    "avg_bits_err_improve": 0.22681998075199772,
    "time": 33976.014404296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.184989911331883,
    "avg_bits_err_output": 15.184989911331883,
    "avg_bits_err_improve": 0,
    "time": 1592.694580078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.10907955477037,
    "avg_bits_err_output": 36.10907955477037,
    "avg_bits_err_improve": 0,
    "time": 13662.078369140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9885077078205238,
    "avg_bits_err_output": 0.9885077078205238,
    "avg_bits_err_improve": 0,
    "time": 4823.587646484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6606981203125901,
    "avg_bits_err_output": 0.6606981203125901,
    "avg_bits_err_improve": 0,
    "time": 10393.219970703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.550700597999379,
    "avg_bits_err_output": 11.550700597999379,
    "avg_bits_err_improve": 0,
    "time": 18374.16748046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5152431164648773,
    "avg_bits_err_output": 0.43469812031259014,
    "avg_bits_err_improve": 0.08054499615228716,
    "time": 7202.2158203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -20000000.0) (log (+ (exp (log (fma (+ x (hypot 1.0 x)) 1.0 3.0))) -3.0)) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 53.11708979415488,
    "avg_bits_err_output": 13.064210625406304,
    "avg_bits_err_improve": 40.052879168748575,
    "time": 35185.606689453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.6611866482956055,
    "avg_bits_err_output": 5.661915742243507,
    "avg_bits_err_improve": -0.00072909394790166,
    "time": 32843.18896484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.0155,
    "avg_bits_err_output": 0.014988361324451065,
    "avg_bits_err_improve": 0.0005116386755489345,
    "time": 5494.358154296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1195.12353515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -3.3e+232) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))) (if (<= r 2e+162) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* r w)))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.560425494193913,
    "avg_bits_err_output": 6.662505412782398,
    "avg_bits_err_improve": 5.897920081411515,
    "time": 36132.297119140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (- (* (- (* x1 x1) -1.0) 3.0) 3.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 54,
    "avg_bits_err_input": 0.5183431564370132,
    "avg_bits_err_output": 0.2854275084259821,
    "avg_bits_err_improve": 0.23291564801103115,
    "time": 86106.31494140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.08953280509871,
    "avg_bits_err_output": 18.08953280509871,
    "avg_bits_err_improve": 0,
    "time": 37960.28076171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x x) (* 0.12900613773279798 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2636062031259014,
    "avg_bits_err_output": 0.18745056406367183,
    "avg_bits_err_improve": 0.07615563906222955,
    "time": 22225.88232421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026981203125901448,
    "avg_bits_err_output": 0.0026981203125901448,
    "avg_bits_err_improve": 0,
    "time": 3895.177978515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.646059466340832,
    "avg_bits_err_output": 9.68240403079117,
    "avg_bits_err_improve": 4.963655435549661,
    "time": 42710.356689453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ 1.0 (- (exp (log1p (exp (- (* eps x) x)))) 1.0)) (+ (* (- 1.0 (/ 1.0 eps)) (exp (- (fma eps x x)))) (fma (/ 1.0 eps) (exp (fma eps x (- x))) -1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.306274922815316,
    "avg_bits_err_output": 0.9903739642793579,
    "avg_bits_err_improve": 28.31590095853596,
    "time": 21913.607666015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.018875,
    "avg_bits_err_output": 0.018875,
    "avg_bits_err_improve": 0,
    "time": 8393.437255859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.023,
    "avg_bits_err_output": 0.023,
    "avg_bits_err_improve": 0,
    "time": 13606.6181640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (* (- -1.0 (/ (+ t t) (+ 1.0 t))) (+ (/ (+ t t) (+ 1.0 t)) -1.0)))) (+ 2.0 (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) (/ (+ t t) (+ t 1.0)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.04675,
    "avg_bits_err_output": 0.05015808281331129,
    "avg_bits_err_improve": -0.003408082813311293,
    "time": 41141.140380859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3029.14794921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2647.634765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3196.81298828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8139700812676445,
    "avg_bits_err_output": 0.24525,
    "avg_bits_err_improve": 7.568720081267644,
    "time": 52196.4345703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.418636990969528,
    "avg_bits_err_output": 7.418636990969528,
    "avg_bits_err_improve": 0,
    "time": 28845.524658203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.505556957623671,
    "avg_bits_err_output": 15.505556957623671,
    "avg_bits_err_improve": 0,
    "time": 70246.23559570312,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (- (* (exp (* x (* x 10.0))) (- (* (/ (exp (log1p (exp (log1p (cos x))))) (exp (log1p (exp (log1p (cos x)))))) (exp (log1p (exp (log1p (exp (log1p (cos x)))))))) (/ (exp (log1p (exp (log1p (cos x))))) (exp (log1p (exp (log1p (cos x)))))))) (exp (* x (* x 10.0)))) (exp (* x (* x 10.0))))",
    "output_parens": 43,
    "avg_bits_err_input": 3.5236648542646294,
    "avg_bits_err_output": 3.601204202425394,
    "avg_bits_err_improve": -0.07753934816076447,
    "time": 27985.451171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.070886192041119,
    "avg_bits_err_output": 15.070886192041119,
    "avg_bits_err_improve": 0,
    "time": 130977.63623046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.51272108009075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.51272108009075,
    "time": 4414.784912109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.840564387060496,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.840064387060494,
    "time": 4188.23974609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.296375,
    "avg_bits_err_improve": 63.703625,
    "time": 4471.234619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84324597984583,
    "avg_bits_err_output": 0.384724248439934,
    "avg_bits_err_improve": 61.458521731405895,
    "time": 25145.456787109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* a (* c -4.0))))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.83041998751424,
    "avg_bits_err_output": 33.869505250503664,
    "avg_bits_err_improve": -0.03908526298942405,
    "time": 22113.79736328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.1542325955339,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": 0,
    "time": 39663.6591796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1848.21630859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.153440145217154,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 40.14206514521715,
    "time": 3416.189208984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma y y (* x x)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.24408881976937,
    "avg_bits_err_output": 20.24289069945678,
    "avg_bits_err_improve": 0.0011981203125905893,
    "time": 3664.760498046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6807592107043496,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6807592107043496,
    "time": 3992.69921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03975,
    "avg_bits_err_output": 0.03975,
    "avg_bits_err_improve": 0,
    "time": 3964.515380859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019896240625180292,
    "avg_bits_err_output": 0.010625,
    "avg_bits_err_improve": 0.009271240625180291,
    "time": 3274.466064453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.013125,
    "time": 4361.76513671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1526.854248046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d b) (+ a c)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40911597813022865,
    "avg_bits_err_output": 0.22975,
    "avg_bits_err_improve": 0.17936597813022864,
    "time": 8032.365234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(log (exp (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 29.737439948755863,
    "avg_bits_err_output": 29.763552148914382,
    "avg_bits_err_improve": -0.02611220015851856,
    "time": 92387.5205078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(fma (sqrt (- (* x x) eps)) (sqrt (- (* x x) eps)) (- (+ (* (sqrt (- (* x x) eps)) (sqrt (- (* x x) eps))) (- (sqrt (- (* x x) eps)) x))))",
    "output_parens": 20,
    "avg_bits_err_input": 24.378553841773787,
    "avg_bits_err_output": 24.43623848532323,
    "avg_bits_err_improve": -0.05768464354944314,
    "time": 23917.207275390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (- x (sin x)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.13032666123096,
    "avg_bits_err_output": 30.13032666123096,
    "avg_bits_err_improve": 0,
    "time": 71863.43872070312,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590145,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.006073120312590144,
    "time": 3279.49169921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.562523908102385,
    "avg_bits_err_output": 47.562523908102385,
    "avg_bits_err_improve": 0,
    "time": 39784.548095703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c (* a (* c (/ 1.0 c))) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 9,
    "avg_bits_err_input": 26.13673888214304,
    "avg_bits_err_output": 26.160267454322796,
    "avg_bits_err_improve": -0.02352857217975668,
    "time": 25249.474365234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.721552241386195,
    "avg_bits_err_output": 25.721552241386195,
    "avg_bits_err_improve": 0,
    "time": 14752.732666015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033875,
    "avg_bits_err_output": 0.021859921543825708,
    "avg_bits_err_improve": 0.012015078456174295,
    "time": 13727.9365234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (- ux (* ux maxCos)) (- (* (exp (log1p (* (fma ux maxCos (- 1.0 ux)) (- 1.0 maxCos)))) ux) ux))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.52321638343316,
    "avg_bits_err_output": 0.5175707809064941,
    "avg_bits_err_improve": 13.005645602526666,
    "time": 26728.6708984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* PI (* uy 2.0))) (sqrt (* (- ux (* ux maxCos)) (+ (- 2.0 ux) (* ux maxCos)))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.563306556753554,
    "avg_bits_err_output": 0.33118542778622745,
    "avg_bits_err_improve": 13.232121128967327,
    "time": 28416.747314453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.3314456029260001,
    "avg_bits_err_output": 0.3242799442257529,
    "avg_bits_err_improve": 0.007165658700247213,
    "time": 66675.88330078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19989265691970173,
    "avg_bits_err_output": 0.20014265691970173,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 17249.478759765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5388518745975742,
    "avg_bits_err_output": 0.4882500754176976,
    "avg_bits_err_improve": 0.050601799179876616,
    "time": 87573.78491210938,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3193740149427155,
    "avg_bits_err_output": 0.3193740149427155,
    "avg_bits_err_improve": 0,
    "time": 41211.195068359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33106943524805477,
    "avg_bits_err_output": 0.331340266481731,
    "avg_bits_err_improve": -0.0002708312336762164,
    "time": 36437.1357421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0566284130638754,
    "avg_bits_err_output": 0.0566284130638754,
    "avg_bits_err_improve": 0,
    "time": 14970.5712890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (* s (- (exp (/ (- (fabs x)) s)) -2.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16613285452224863,
    "avg_bits_err_output": 0.14977915950546228,
    "avg_bits_err_improve": 0.01635369501678635,
    "time": 28200.14208984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6683661899137501,
    "avg_bits_err_output": 0.6683661899137501,
    "avg_bits_err_improve": 0,
    "time": 30246.7109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1596515861568558,
    "avg_bits_err_output": 0.15646355769904188,
    "avg_bits_err_improve": 0.0031880284578139073,
    "time": 26350.4736328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5288712353957905,
    "avg_bits_err_output": 2.5288712353957905,
    "avg_bits_err_improve": 0,
    "time": 12139.54931640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ (+ (/ (* sinTheta_i sinTheta_O) v) 1.0) -1.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46140259357247504,
    "avg_bits_err_output": 0.4619734736465656,
    "avg_bits_err_improve": -0.0005708800740905629,
    "time": 35407.950927734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- (expm1 (log1p (+ (log (/ 1.0 (+ v v))) 0.6931))) (/ 1.0 v))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.13207255135387566,
    "avg_bits_err_output": 0.13431713760472122,
    "avg_bits_err_improve": -0.0022445862508455594,
    "time": 9855.2373046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (* alpha alpha)) (+ (* PI (- (* alpha (* (* cosTheta cosTheta) alpha)) (* cosTheta cosTheta))) PI)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4592061850091888,
    "avg_bits_err_output": 0.482519182326948,
    "avg_bits_err_improve": -0.02331299731775921,
    "time": 29800.007080078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (* (- 1.0 (/ (- u 0.25) 0.75)) (- (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) (* (/ (- u 0.25) 0.75) (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 1.3308150195375212,
    "avg_bits_err_output": 1.2913351308845036,
    "avg_bits_err_improve": 0.03947988865301766,
    "time": 27819.454345703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(fma (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0) (* (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0) (/ s (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0))) 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 12.472208825576596,
    "avg_bits_err_output": 12.59998335604662,
    "avg_bits_err_improve": -0.12777453047002396,
    "time": 39318.06640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (fma (* PI (+ s s)) r 0.0)) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (/ s r) (* (* PI 6.0) (* r r)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13923235097205922,
    "avg_bits_err_output": 0.14371225977167504,
    "avg_bits_err_improve": -0.004479908799615823,
    "time": 45002.503662109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (log1p (expm1 (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.8455285600998349,
    "avg_bits_err_output": 0.8541110235258987,
    "avg_bits_err_improve": -0.008582463426063835,
    "time": 46819.794677734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (+ 1.0 (+ (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta))))) c))) (/ 1.0 (/ 1.0 (+ 1.0 (+ (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta))))) c)))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.7076747669225678,
    "avg_bits_err_output": 0.5819492500152641,
    "avg_bits_err_improve": 0.1257255169073037,
    "time": 79151.8837890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* u2 (* PI (fma (/ 2.0 u2) (* (/ 2.0 u2) (/ u2 (/ 2.0 u2))) 0.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.505166915409903,
    "avg_bits_err_output": 13.511167553402528,
    "avg_bits_err_improve": -0.006000637992624291,
    "time": 42147.366455078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (fma (+ u2 u2) (* (+ u2 u2) (/ PI (+ u2 u2))) 0.0)) (- (+ (sqrt (- (log (- 1.0 u1)))) -1.0) -1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 13.554990548217358,
    "avg_bits_err_output": 13.565749713077002,
    "avg_bits_err_improve": -0.010759164859644343,
    "time": 34749.14892578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* alpha (* alpha (* (/ (log (- 1.0 u0)) (* alpha (- alpha))) (* alpha alpha)))) (fma (- alpha) (* alpha (- alpha)) (* (- alpha) (* alpha alpha))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.06827126295669,
    "avg_bits_err_output": 13.740769120994068,
    "avg_bits_err_improve": 0.32750214196262206,
    "time": 39849.583251953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.607422848736979,
    "avg_bits_err_output": 12.610411844952916,
    "avg_bits_err_improve": -0.0029889962159366235,
    "time": 32283.063232421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* (/ l PI) (* PI PI)) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.648886789168525,
    "avg_bits_err_output": 16.65937268910176,
    "avg_bits_err_improve": -0.010485899933236453,
    "time": 26439.97998046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20313176194006882,
    "avg_bits_err_output": 0.2006558425748116,
    "avg_bits_err_improve": 0.0024759193652572342,
    "time": 29772.60107421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.674082945768122,
    "avg_bits_err_output": 13.674082945768122,
    "avg_bits_err_improve": 0,
    "time": 47646.646728515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (* (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (+ (fma (- (exp (* (/ PI 4.0) (- f)))) (/ 1.0 (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f))))) (* (exp (* (/ PI 4.0) (- f))) (/ 1.0 (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f))))))) (* (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (/ 1.0 (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f))))))))))))",
    "output_parens": 71,
    "avg_bits_err_input": 61.512769494777324,
    "avg_bits_err_output": 61.50241994924529,
    "avg_bits_err_improve": 0.010349545532037041,
    "time": 82864.16015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.05e-147) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 2.069e-83) (/ (* (sqrt 2.0) t) (expm1 (log1p (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))))) (/ (* (* t (/ (sqrt 2.0) t)) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 42.729269903665504,
    "avg_bits_err_output": 35.88643993579488,
    "avg_bits_err_improve": 6.842829967870621,
    "time": 43983.580810546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.613972633566915,
    "avg_bits_err_output": 3.613972633566915,
    "avg_bits_err_improve": 0,
    "time": 55217.0107421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0567992787880738,
    "avg_bits_err_output": 1.0567992787880738,
    "avg_bits_err_improve": 0,
    "time": 10444.665283203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 0.0) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))) (+ n n)))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e+150) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* 2.0 (* n (- (* (- U* U) (* n (* (pow (/ l Om) 2.0) U))) (* U (- (* 2.0 (/ (* l l) Om)) t))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.62495036196397,
    "avg_bits_err_output": 30.941785760337634,
    "avg_bits_err_improve": 3.683164601626334,
    "time": 39312.7802734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 50000000000000.0) (/ 2.0 (* (/ (pow (/ k t) 2.0) (tan k)) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (tan k) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)) (* (sin k) (- (tan k)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 47.150159029512665,
    "avg_bits_err_output": 37.48549166649165,
    "avg_bits_err_improve": 9.664667363021017,
    "time": 83150.2080078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (sin k) (+ 2.0 (pow (/ k t) 2.0))) (* (tan k) (/ (pow t 3.0) (* l l)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.954967263930065,
    "avg_bits_err_output": 32.944569136234875,
    "avg_bits_err_improve": 0.010398127695189885,
    "time": 52086.493408203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma a1 (* (/ (cos th) (sqrt 2.0)) (* (/ (cos th) (sqrt 2.0)) (/ a1 (/ (cos th) (sqrt 2.0))))) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.5652188000230793,
    "avg_bits_err_output": 0.5408347781533082,
    "avg_bits_err_improve": 0.024384021869771177,
    "time": 43535.322265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (/ n (* 2.0 PI)) (* PI (* PI 4.0))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.506403650579543,
    "avg_bits_err_output": 0.513873277508426,
    "avg_bits_err_improve": -0.0074696269288830885,
    "time": 42670.6162109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp l)) (- J) (- (* (- J) (exp (log1p (exp l)))) (- J))) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 21,
    "avg_bits_err_input": 17.422381916765367,
    "avg_bits_err_output": 17.465499934213735,
    "avg_bits_err_improve": -0.04311801744836785,
    "time": 45481.546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 2.0) (* (cos (- (/ (* K (* (+ m (+ -1.0 (+ n 1.0))) (* K (/ 1.0 K)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* K (- (* K (exp (log1p (/ 1.0 K)))) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.138600875798987,
    "avg_bits_err_output": 1.289018617584688,
    "avg_bits_err_improve": 13.8495822582143,
    "time": 24731.4658203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.39296936093777,
    "avg_bits_err_output": 18.39296936093777,
    "avg_bits_err_improve": 0,
    "time": 51215.42919921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.148568107581532,
    "avg_bits_err_output": 14.148568107581532,
    "avg_bits_err_improve": 0,
    "time": 27897.406982421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.35037798114036,
    "avg_bits_err_output": 19.35037798114036,
    "avg_bits_err_improve": 0,
    "time": 34839.171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* h (* D (* D w)))) (sqrt (- (* (/ (* d (* d c0)) (* h (* D (* D w)))) (/ (* d (* d c0)) (* h (* D (* D w))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 60.05213465042429,
    "avg_bits_err_output": 57.623245713775994,
    "avg_bits_err_improve": 2.428888936648299,
    "time": 38010.4296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(+ (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (- (* (pow (/ d l) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* 0.5 (/ h l)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 26.719306999155272,
    "avg_bits_err_output": 26.20366054283474,
    "avg_bits_err_improve": 0.5156464563205319,
    "time": 49169.514892578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.169975748055608,
    "avg_bits_err_output": 15.169975748055608,
    "avg_bits_err_improve": 0,
    "time": 18069.757568359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9848962406251803,
    "avg_bits_err_output": 0.01331372187554087,
    "avg_bits_err_improve": 0.9715825187496394,
    "time": 9958.69482421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (- 1.0 (* v v)) (* (sqrt (- 2.0 (* v (* v 6.0)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4319795188744793,
    "avg_bits_err_output": 0.3657573376183488,
    "avg_bits_err_improve": 0.0662221812561305,
    "time": 30680.6357421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* 3.0 v)))) (- (/ (sqrt 2.0) 4.0) (* v (* v (/ (sqrt 2.0) 4.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.010146240625180289,
    "avg_bits_err_improve": 0.0003537593748197121,
    "time": 6811.34716796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5230027583132026,
    "avg_bits_err_output": 0.5230027583132026,
    "avg_bits_err_improve": 0,
    "time": 11882.2236328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0467293448454136,
    "avg_bits_err_output": 2.0298543448454134,
    "avg_bits_err_improve": 0.016875000000000195,
    "time": 19443.138427734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01732905741540336,
    "avg_bits_err_output": 0.01732905741540336,
    "avg_bits_err_improve": 0,
    "time": 7548.968994140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18503757405699392,
    "avg_bits_err_output": 0.18503757405699392,
    "avg_bits_err_improve": 0,
    "time": 43017.84033203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (+ a 1.0) (* (- (- a)) (* (+ a 1.0) (/ a (+ a 1.0))))) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1950031027577738,
    "avg_bits_err_output": 0.1950155447169677,
    "avg_bits_err_improve": -1.2441959193892904e-05,
    "time": 33591.346923828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (- a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19198460929168018,
    "avg_bits_err_output": 0.19273004355717704,
    "avg_bits_err_improve": -0.0007454342654968638,
    "time": 12058.55322265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (+ 0.5 (* 0.5 (/ x (sqrt (fma x x (* 4.0 (* p p))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 13.4454905073507,
    "avg_bits_err_output": 13.444835391636872,
    "avg_bits_err_improve": 0.0006551157138279251,
    "time": 23595.3564453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(* (/ 1.0 (sqrt (/ (expm1 (+ x x)) (expm1 x)))) (* (sqrt (/ (expm1 (+ x x)) (expm1 x))) (sqrt (/ (expm1 (+ x x)) (expm1 x)))))",
    "output_parens": 18,
    "avg_bits_err_input": 41.514317950428634,
    "avg_bits_err_output": 0.06483496250072114,
    "avg_bits_err_improve": 41.449482987927915,
    "time": 10012.190185546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (* (+ 1.0 x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x))))) 1.0) (* (sin x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x)))))) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 31.622030420974493,
    "avg_bits_err_output": 25.93317513148602,
    "avg_bits_err_improve": 5.6888552894884725,
    "time": 40427.646728515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (fma b_2 b_2 (* c (- a))) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c))))) b_2) a)",
    "output_parens": 18,
    "avg_bits_err_input": 33.66020273230366,
    "avg_bits_err_output": 33.664848767842074,
    "avg_bits_err_improve": -0.004646035538414139,
    "time": 17333.093017578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.19653135953239,
    "avg_bits_err_output": 34.19628557627696,
    "avg_bits_err_improve": 0.00024578325542989887,
    "time": 22802.445068359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.767338452662628,
    "avg_bits_err_output": 30.767338452662628,
    "avg_bits_err_improve": 0,
    "time": 28269.27001953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.01816708714132,
    "avg_bits_err_output": 33.01816708714132,
    "avg_bits_err_improve": 0,
    "time": 66291.62939453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log N) (- (* (log N) 2.0) (log1p N)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.59902153910503,
    "avg_bits_err_output": 29.606544466672798,
    "avg_bits_err_improve": -0.007522927567766402,
    "time": 23131.88818359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -1e+146) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 1.65e+153) (- (- (* (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (+ 1.0 (/ 1.0 (/ 1.0 (+ 1.0 x))))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 30,
    "avg_bits_err_input": 14.712999100824304,
    "avg_bits_err_output": 4.164726753167369,
    "avg_bits_err_improve": 10.548272347656933,
    "time": 123942.0556640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (+ -1.0 (- 1.0 (cos x))))",
    "output_parens": 6,
    "avg_bits_err_input": 39.53647609230894,
    "avg_bits_err_output": 39.52389951985099,
    "avg_bits_err_improve": 0.01257657245794519,
    "time": 41794.842041015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.844376805081026,
    "avg_bits_err_output": 29.53493671831749,
    "avg_bits_err_improve": 0.3094400867635372,
    "time": 35070.59814453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.862912215081383,
    "avg_bits_err_output": 29.862912215081383,
    "avg_bits_err_improve": 0,
    "time": 71671.69970703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.558811642659755,
    "avg_bits_err_output": 33.555181521123515,
    "avg_bits_err_improve": 0.003630121536239983,
    "time": 20932.077392578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* c (* a -4.0)) (* b b))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.80157756696032,
    "avg_bits_err_output": 34.10323770426907,
    "avg_bits_err_improve": -0.3016601373087511,
    "time": 30602.12451171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.472647159634384,
    "avg_bits_err_output": 60.12500516970877,
    "avg_bits_err_improve": 1.347641989925613,
    "time": 33093.40576171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00484071284103,
    "avg_bits_err_output": 0.05722711815174952,
    "avg_bits_err_improve": 62.94761359468928,
    "time": 31153.822509765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.49530586794207,
    "avg_bits_err_output": 58.49530586794207,
    "avg_bits_err_improve": 0,
    "time": 90673.13696289062,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (/ 1.0 (tan x)) (* (/ 1.0 (tan x)) (/ -1.0 (/ 1.0 (tan x)))) (/ 1.0 x))",
    "output_parens": 10,
    "avg_bits_err_input": 59.992713143387256,
    "avg_bits_err_output": 60.09462411315705,
    "avg_bits_err_improve": -0.10191096976979708,
    "time": 47629.85205078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.24891967224722,
    "avg_bits_err_output": 41.21300624900268,
    "avg_bits_err_improve": 19.035913423244537,
    "time": 31863.11572265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.9159850089408,
    "avg_bits_err_output": 0.6483646883284826,
    "avg_bits_err_improve": 41.267620320612316,
    "time": 12791.014892578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.66431510498684,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.66381510498684,
    "time": 7369.09375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.68898603451497,
    "avg_bits_err_output": 0.018374784063608936,
    "avg_bits_err_improve": 29.67061125045136,
    "time": 4089.6494140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.529493374551613,
    "avg_bits_err_output": 28.59011585125559,
    "avg_bits_err_improve": 0.9393775232960238,
    "time": 29606.76025390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.719244606835552,
    "avg_bits_err_output": 9.719244606835552,
    "avg_bits_err_improve": 0,
    "time": 135118.6416015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.767742998630105,
    "avg_bits_err_output": 36.80010791093124,
    "avg_bits_err_improve": -0.032364912301133586,
    "time": 36009.433349609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (- (exp (- (+ -1.0 (sqrt (+ x 1.0))) (sqrt x))) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.875174423587065,
    "avg_bits_err_output": 29.16050451842488,
    "avg_bits_err_improve": 0.7146699051621859,
    "time": 28019.484130859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.066784457637866,
    "avg_bits_err_output": 37.066784457637866,
    "avg_bits_err_improve": 0,
    "time": 42185.70703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.157797650223724,
    "avg_bits_err_output": 19.157797650223724,
    "avg_bits_err_improve": 0,
    "time": 25276.37353515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (- (* (+ 1.0 (atan (+ 1.0 N))) (/ (atan (+ 1.0 N)) (+ 1.0 (atan (+ 1.0 N))))) (atan N)) 1.0) (* (+ 1.0 (atan (+ 1.0 N))) (/ -1.0 (+ 1.0 (atan (+ 1.0 N))))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.900590385858418,
    "avg_bits_err_output": 14.906142833279462,
    "avg_bits_err_improve": -0.005552447421043993,
    "time": 53433.26806640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.69295475452943,
    "avg_bits_err_output": 29.69295475452943,
    "avg_bits_err_improve": 0,
    "time": 81133.2890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- 0.0 (- (* (- 1.0 m) (* (+ (/ (- m (* m m)) v) -1.0) (/ m (- 1.0 m)))) (* (- 1.0 m) (/ (+ (/ (- m (* m m)) v) -1.0) (- 1.0 m)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.07188136568158808,
    "avg_bits_err_output": 0.07862237426970294,
    "avg_bits_err_improve": -0.006741008588114855,
    "time": 36274.610107421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (/ (* (* a b) (* a b)) 1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 16.03771741889342,
    "avg_bits_err_output": 0.30754041406655636,
    "avg_bits_err_improve": 15.730177004826862,
    "time": 14033.338134765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma PI (/ angle 180.0) (fma (- (/ angle 180.0)) (- PI) (* PI (- (/ angle 180.0))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 19.8618769896957,
    "avg_bits_err_output": 19.84468163807283,
    "avg_bits_err_improve": 0.017195351622866895,
    "time": 50472.090087890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.801951198756488,
    "avg_bits_err_output": 30.801951198756488,
    "avg_bits_err_improve": 0,
    "time": 64825.173095703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) (* (/ angle 180.0) (* PI (/ 1.0 (/ angle 180.0))))))) 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 20.388018091198553,
    "avg_bits_err_output": 20.65444308920302,
    "avg_bits_err_improve": -0.2664249980044673,
    "time": 78140.16528320312,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17553303878037732,
    "avg_bits_err_output": 0.17553303878037732,
    "avg_bits_err_improve": 0,
    "time": 24417.184326171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (* (fma (tan x) (tan x) -1.0) (* (/ 1.0 (- 1.0 (* (tan x) (tan x)))) (fma (tan x) (tan x) -1.0))) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.3283543319995591,
    "avg_bits_err_output": 0.3934613694226914,
    "avg_bits_err_improve": -0.06510703742313229,
    "time": 22635.390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.14111560156295072,
    "avg_bits_err_output": 0.14111560156295072,
    "avg_bits_err_improve": 0,
    "time": 33559.4609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.785056858727277,
    "avg_bits_err_output": 16.781479311218582,
    "avg_bits_err_improve": 0.003577547508694323,
    "time": 66331.8603515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.82e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (+ (* c (* a -4.0)) (* b b)))) (- b)) (+ a a)) (/ (+ (+ (sqrt (fma b b (* a (* c -4.0)))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 30,
    "avg_bits_err_input": 52.5625467302506,
    "avg_bits_err_output": 50.57186599278572,
    "avg_bits_err_improve": 1.990680737464885,
    "time": 21878.577880859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b))))))))) b) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.566420960658263,
    "avg_bits_err_output": 28.58149866870882,
    "avg_bits_err_improve": -0.015077708050558414,
    "time": 25264.570068359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a))",
    "output_parens": 30,
    "avg_bits_err_input": 43.77825332635467,
    "avg_bits_err_output": 42.97818158883288,
    "avg_bits_err_improve": 0.8000717375217903,
    "time": 28233.592529296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.555181521123515,
    "avg_bits_err_output": 33.555181521123515,
    "avg_bits_err_improve": 0,
    "time": 22257.300537109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8698663842409012,
    "avg_bits_err_output": 0.8698663842409012,
    "avg_bits_err_improve": 0,
    "time": 31847.56982421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.29529444909919,
    "avg_bits_err_output": 29.29529444909919,
    "avg_bits_err_improve": 0,
    "time": 3843.065185546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.179648862205234,
    "avg_bits_err_output": 1.2232312031259016,
    "avg_bits_err_improve": 56.956417659079335,
    "time": 6713.291015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.116196462917856,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 58.108696462917855,
    "time": 5886.902587890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007375,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 0,
    "time": 2077.08837890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.35483755496477,
    "avg_bits_err_output": 32.35483755496477,
    "avg_bits_err_improve": 0,
    "time": 4556.72509765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 58.48491139901325,
    "avg_bits_err_output": 58.4861250356024,
    "avg_bits_err_improve": -0.0012136365891493028,
    "time": 15497.734619140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026698120312590144,
    "avg_bits_err_output": 0.026698120312590144,
    "avg_bits_err_improve": 0,
    "time": 3080.710205078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (+ (+ (cos (atan (/ (/ eh ew) (tan t)))) 1.0) -1.0)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1285,
    "avg_bits_err_output": 0.12931372187554085,
    "avg_bits_err_improve": -0.0008137218755408515,
    "time": 39709.7890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12584436093777043,
    "avg_bits_err_output": 0.12584436093777043,
    "avg_bits_err_improve": 0,
    "time": 24726.044921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 39.12957355708429,
    "avg_bits_err_output": 3.765918484711821,
    "avg_bits_err_improve": 35.363655072372474,
    "time": 49185.714111328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.485065143779895,
    "avg_bits_err_output": 14.485065143779895,
    "avg_bits_err_improve": 0,
    "time": 4371.755615234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.14518239233819433,
    "avg_bits_err_output": 0.13884113776451124,
    "avg_bits_err_improve": 0.006341254573683092,
    "time": 45658.888427734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 2600000000000.0) (/ (+ (sqrt (+ (* b b) (* a (* c -3.0)))) (* (/ -1.0 b) (* b b))) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 22,
    "avg_bits_err_input": 52.63803521654936,
    "avg_bits_err_output": 50.97981661713309,
    "avg_bits_err_improve": 1.6582185994162728,
    "time": 25885.05078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma b b (* a (* c -3.0))) (fma (- (* a -3.0)) (- c) (* 3.0 (* a c)))))) (* 3.0 a))",
    "output_parens": 15,
    "avg_bits_err_input": 28.75543818824443,
    "avg_bits_err_output": 28.697637717526707,
    "avg_bits_err_improve": 0.057800470717722874,
    "time": 23583.542236328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 43.79604538061518,
    "avg_bits_err_output": 43.09562752734323,
    "avg_bits_err_improve": 0.7004178532719507,
    "time": 26307.356689453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.60464308425093,
    "avg_bits_err_output": 33.60464308425093,
    "avg_bits_err_improve": 0,
    "time": 21800.253173828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (fma (* (sin phi1) (/ (* (cos (- lambda1 lambda2)) (cos phi2)) (sin phi1))) (sin phi1) 0.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 13.115325253846082,
    "avg_bits_err_output": 13.131280060493081,
    "avg_bits_err_improve": -0.015954806646998776,
    "time": 50257.3046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (* (/ x (+ x 1.0)) (+ 1.0 (/ -1.0 (/ x (+ x 1.0))))) (- (+ (/ (+ 1.0 x) (- x 1.0)) (/ 0.0 (/ x (+ 1.0 x)))) (/ (/ x (+ 1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 21,
    "avg_bits_err_input": 29.524752988330512,
    "avg_bits_err_output": 29.54545733879375,
    "avg_bits_err_improve": -0.020704350463237375,
    "time": 38049.071533203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 0,
    "time": 6092.334716796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -1.08e+154) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (if (<= x 1.7e+153) (- (- (* (+ 1.0 (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (expm1 (log1p (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 14.755221738489459,
    "avg_bits_err_output": 13.297118479940854,
    "avg_bits_err_improve": 1.4581032585486042,
    "time": 84290.66333007812,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.45772386407188,
    "avg_bits_err_output": 52.14568603306703,
    "avg_bits_err_improve": 0.31203783100485083,
    "time": 36463.193359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.894744119429234,
    "avg_bits_err_output": 30.461526874151197,
    "avg_bits_err_improve": -0.566782754721963,
    "time": 39803.31689453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* C A))) (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.169770239385244,
    "avg_bits_err_output": 51.96655496313465,
    "avg_bits_err_improve": 0.20321527625059588,
    "time": 36504.64013671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.270554961776552,
    "avg_bits_err_output": 15.270554961776552,
    "avg_bits_err_improve": 0,
    "time": 1748.651123046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.99589430439149,
    "avg_bits_err_output": 35.99589430439149,
    "avg_bits_err_improve": 0,
    "time": 15113.0322265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9910808281331139,
    "avg_bits_err_output": 0.9910808281331139,
    "avg_bits_err_improve": 0,
    "time": 5276.421142578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.678375,
    "avg_bits_err_output": 0.678375,
    "avg_bits_err_improve": 0,
    "time": 5432.346435546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.196144545501134,
    "avg_bits_err_output": 11.196144545501134,
    "avg_bits_err_improve": 0,
    "time": 20011.489990234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49046350769904495,
    "avg_bits_err_output": 0.461875,
    "avg_bits_err_improve": 0.028588507699044974,
    "time": 9141.345947265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(- (+ 1.0 (log (+ x (hypot 1.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 52.89821046338433,
    "avg_bits_err_output": 44.719761835026034,
    "avg_bits_err_improve": 8.178448628358296,
    "time": 37920.749267578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.727833059046273,
    "avg_bits_err_output": 5.727833059046273,
    "avg_bits_err_improve": 0,
    "time": 43030.883544921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0)) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.01364624062518029,
    "avg_bits_err_improve": 0.00035375937481971036,
    "time": 9464.121826171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1470.42626953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- (* (* r w) (* r w))) (- (* v 0.25) 0.375)) (- 1.0 v)))",
    "output_parens": 13,
    "avg_bits_err_input": 12.55342337153112,
    "avg_bits_err_output": 6.568410710385759,
    "avg_bits_err_improve": 5.98501266114536,
    "time": 29851.0927734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5125415513252507,
    "avg_bits_err_output": 0.28659368312709743,
    "avg_bits_err_improve": 0.22594786819815327,
    "time": 85663.83471679688,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.393029181735724,
    "avg_bits_err_output": 18.393029181735724,
    "avg_bits_err_improve": 0,
    "time": 32985.59375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.21761336132445105,
    "avg_bits_err_output": 0.19131372187554083,
    "avg_bits_err_improve": 0.026299639448910228,
    "time": 25420.824462890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00275,
    "avg_bits_err_output": 0.00275,
    "avg_bits_err_improve": 0,
    "time": 3441.423583984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (* (/ PI 2.0) (/ 1.0 (* (- b a) (+ b a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.087345127366637,
    "avg_bits_err_output": 9.19837576642884,
    "avg_bits_err_improve": 4.888969360937796,
    "time": 36673.438720703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- 1.0 (- (- (* eps x) -1.0) (- x)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 29.018270759143785,
    "avg_bits_err_output": 0.8762274275024996,
    "avg_bits_err_improve": 28.142043331641286,
    "time": 21248.918212890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (fma (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) 2.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.012,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 11451.680419921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017375,
    "avg_bits_err_output": 0.017375,
    "avg_bits_err_improve": 0,
    "time": 35121.44482421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- 2.0 (- 1.0 (* (/ (+ t t) (+ 1.0 t)) (/ (+ t t) (+ 1.0 t))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.03925,
    "avg_bits_err_output": 0.036875,
    "avg_bits_err_improve": 0.002375000000000002,
    "time": 14015.858642578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2913.441650390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2631.897705078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3283.659423828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.824873496755416,
    "avg_bits_err_output": 0.25625,
    "avg_bits_err_improve": 7.568623496755416,
    "time": 44763.7001953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.275850852148199,
    "avg_bits_err_output": 7.275850852148199,
    "avg_bits_err_improve": 0,
    "time": 38151.882568359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.95633635648257,
    "avg_bits_err_output": 15.95633635648257,
    "avg_bits_err_improve": 0,
    "time": 71712.94775390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (exp (* 10.0 (* x x))) (fma (exp (* x (* x 10.0))) (* (exp (* x (* x 10.0))) (/ (/ 1.0 (* (exp (* x (* x 10.0))) (* (exp (* x (* x 10.0))) (/ 1.0 (exp (* x (* x 10.0))))))) (* (exp (* x (* x 10.0))) (* (exp (* x (* x 10.0))) (/ 1.0 (exp (* x (* x 10.0)))))))) 0.0)))",
    "output_parens": 40,
    "avg_bits_err_input": 3.5403741726438858,
    "avg_bits_err_output": 3.5428313950225747,
    "avg_bits_err_improve": -0.00245722237868895,
    "time": 62694.659423828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.454857748212941,
    "avg_bits_err_output": 14.454857748212941,
    "avg_bits_err_improve": 0,
    "time": 25093.634765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.876912008031375,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.876912008031375,
    "time": 4378.336669921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.914283630750894,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 38.913408630750894,
    "time": 4271.10791015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.294,
    "avg_bits_err_improve": 63.706,
    "time": 3948.788330078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325851722857,
    "avg_bits_err_output": 0.407625,
    "avg_bits_err_improve": 61.43563351722857,
    "time": 20663.903564453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* c (* a -4.0)) (* b b))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.80157756696032,
    "avg_bits_err_output": 34.10323770426907,
    "avg_bits_err_improve": -0.3016601373087511,
    "time": 31331.117431640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.555181521123515,
    "avg_bits_err_output": 33.555181521123515,
    "avg_bits_err_improve": 0,
    "time": 19838.775634765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1636.763916015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.656383154794554,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 39.64725815479456,
    "time": 2256.32763671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.89337487829978,
    "avg_bits_err_output": 19.89337487829978,
    "avg_bits_err_improve": 0,
    "time": 3197.29443359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.656178838185139,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.656178838185139,
    "time": 6685.405517578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.041,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.040375,
    "time": 11610.797119140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01929248125036058,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": 0.00604248125036058,
    "time": 4292.633056640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.018625,
    "avg_bits_err_improve": -0.00375,
    "time": 3138.967529296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00125,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0,
    "time": 1727.391357421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ c (+ b a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39664661719245803,
    "avg_bits_err_output": 0.23825,
    "avg_bits_err_improve": 0.15839661719245804,
    "time": 6913.005126953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.434841256513014,
    "avg_bits_err_output": 30.434841256513014,
    "avg_bits_err_improve": 0,
    "time": 7676.730224609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (expm1 (log1p (sqrt (- (* x x) eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 24.636226017078148,
    "avg_bits_err_output": 24.704153799838743,
    "avg_bits_err_improve": -0.06792778276059508,
    "time": 17081.997314453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.51449603473977,
    "avg_bits_err_output": 30.523984325920097,
    "avg_bits_err_improve": -0.009488291180325348,
    "time": 66553.36376953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005875,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.00475,
    "time": 3364.7041015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.42998750322962,
    "avg_bits_err_output": 47.42998750322962,
    "avg_bits_err_improve": 0,
    "time": 173975.02856445312,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.68809225727731,
    "avg_bits_err_output": 25.68809225727731,
    "avg_bits_err_improve": 0,
    "time": 26809.277587890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* d a) (+ (* c b) (* d (* a -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 25.93468028107988,
    "avg_bits_err_output": 25.95441552792435,
    "avg_bits_err_improve": -0.019735246844469145,
    "time": 36285.125244140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03275,
    "avg_bits_err_output": 0.02091875355086315,
    "avg_bits_err_improve": 0.011831246449136853,
    "time": 19323.7158203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (* ux (* (- (+ ux -2.0) (* ux maxCos)) (+ maxCos -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.47745675145116,
    "avg_bits_err_output": 0.5432700633828056,
    "avg_bits_err_improve": 12.934186688068353,
    "time": 29765.697998046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (* ux (* maxCos (- -1.0 (* ux maxCos)))) (+ (- ux) (+ (* ux (- maxCos (- (fma maxCos ux 1.0) ux))) (* maxCos (* (- ux) ux)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.509575650849145,
    "avg_bits_err_output": 0.3456825699010104,
    "avg_bits_err_improve": 13.163893080948135,
    "time": 36614.185791015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (* (sin (* (* uy uy) (* (/ (* PI 2.0) uy) (* (* uy (/ uy uy)) (/ uy (* uy uy)))))) yi))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.3379176676902881,
    "avg_bits_err_output": 0.37596614310590265,
    "avg_bits_err_improve": -0.03804847541561457,
    "time": 85428.67504882812,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20632376014563122,
    "avg_bits_err_output": 0.20672000077081149,
    "avg_bits_err_improve": -0.0003962406251802608,
    "time": 18181.5576171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5389125018159427,
    "avg_bits_err_output": 0.5000023595440429,
    "avg_bits_err_improve": 0.03891014227189982,
    "time": 48192.023681640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (/ (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2))) (* (cos (* 6.28318530718 u2)) (cos (* 6.28318530718 u2))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.32966220470572555,
    "avg_bits_err_output": 0.36885243013620916,
    "avg_bits_err_improve": -0.039190225430483616,
    "time": 33643.46533203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3328383993812466,
    "avg_bits_err_output": 0.3328333191331844,
    "avg_bits_err_improve": 5.080248062172554e-06,
    "time": 39250.254638671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (exp (log (+ (exp (/ (- x) s)) 1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0629791461110475,
    "avg_bits_err_output": 0.06444846301588399,
    "avg_bits_err_improve": -0.0014693169048364818,
    "time": 16722.00537109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* s (exp (/ (- (fabs x)) s))) (* s (fma (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 1.0) 1.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1524771533391353,
    "avg_bits_err_output": 0.13239298335537575,
    "avg_bits_err_improve": 0.02008416998375956,
    "time": 25242.91943359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (+ (+ (/ (sin (* x PI)) (* x PI)) -1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6763791529307713,
    "avg_bits_err_output": 0.6721399465822946,
    "avg_bits_err_improve": 0.004239206348476743,
    "time": 21352.732666015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (- (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) 1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.16121027039678423,
    "avg_bits_err_output": 0.16847814461581131,
    "avg_bits_err_improve": -0.007267874219027082,
    "time": 40863.853271484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.601394269178739,
    "avg_bits_err_output": 2.598342389491329,
    "avg_bits_err_improve": 0.00305187968740972,
    "time": 104890.72119140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46020301216139614,
    "avg_bits_err_output": 0.46020301216139614,
    "avg_bits_err_improve": 0,
    "time": 37407.037841796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11850146213482501,
    "avg_bits_err_output": 0.11850146213482501,
    "avg_bits_err_improve": 0,
    "time": 46100.007080078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47145509358540966,
    "avg_bits_err_output": 0.47145509358540966,
    "avg_bits_err_improve": 0,
    "time": 25283.477783203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (- 1.0 (- (+ 1.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))))) (+ (* 1.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))))) (* (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 1.3250281364382597,
    "avg_bits_err_output": 1.3404131242028425,
    "avg_bits_err_improve": -0.015384987764582858,
    "time": 56487.144287109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.524832499128747,
    "avg_bits_err_output": 12.141855550394705,
    "avg_bits_err_improve": 0.38297694873404176,
    "time": 40190.63818359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* s (* 2.0 (* PI r)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13214706366884663,
    "avg_bits_err_output": 0.13164706366884663,
    "avg_bits_err_improve": 0.0005000000000000004,
    "time": 48123.240234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9054577894286165,
    "avg_bits_err_output": 0.8961267103629299,
    "avg_bits_err_improve": 0.009331079065686643,
    "time": 43704.60986328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (+ (exp (log (+ c 2.0))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))))) 1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 0.6895539068954744,
    "avg_bits_err_output": 0.6955375537724579,
    "avg_bits_err_improve": -0.005983646876983495,
    "time": 40384.273681640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(+ (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))) (fma (- (* (sin (* 2.0 (* PI u2))) (/ 1.0 (sin (* 2.0 (* PI u2)))))) (sin (* 2.0 (* PI u2))) (sin (* 2.0 (fma (* PI (/ u2 PI)) PI 0.0)))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.516249132322612,
    "avg_bits_err_output": 13.43580939594895,
    "avg_bits_err_improve": 0.08043973637366086,
    "time": 52086.5205078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(log1p (log (+ 1.0 (log (+ 1.0 (expm1 (expm1 (expm1 (* (cos (* PI (+ u2 u2))) (sqrt (- (log (- 1.0 u1)))))))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.568327845070785,
    "avg_bits_err_output": 13.703141646758933,
    "avg_bits_err_improve": -0.13481380168814816,
    "time": 52302.685302734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(- (* 0.0 (* (- alpha) (* alpha alpha))) (fma (- alpha) (* (fma alpha (/ (log (- 1.0 u0)) (* alpha (- alpha))) 1.0) (* alpha alpha)) (* alpha (* alpha alpha))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.133087496674943,
    "avg_bits_err_output": 13.792951317493966,
    "avg_bits_err_improve": 0.34013617918097694,
    "time": 33106.810791015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax))))) (/ 1.0 (/ cos2phi (* alphax alphax))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 23,
    "avg_bits_err_input": 12.67058122986409,
    "avg_bits_err_output": 12.677642090332002,
    "avg_bits_err_improve": -0.007060860467911212,
    "time": 20868.30810546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+37) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l)))) (if (<= (* PI l) 50000000.0) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma (* PI (/ l PI)) PI 0.0)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l))))))",
    "output_parens": 39,
    "avg_bits_err_input": 16.816575316829883,
    "avg_bits_err_output": 13.13910812068343,
    "avg_bits_err_improve": 3.677467196146454,
    "time": 31767.76953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* (/ 1.0 (tan B)) (+ (+ x 3.0) -3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.21608496250072115,
    "avg_bits_err_output": 0.22947424843993383,
    "avg_bits_err_improve": -0.01338928593921268,
    "time": 38828.457763671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.629165918357492,
    "avg_bits_err_output": 13.6285927980449,
    "avg_bits_err_improve": 0.0005731203125911577,
    "time": 60717.10986328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (expm1 (log1p (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.49983771544291,
    "avg_bits_err_output": 2.009830831961356,
    "avg_bits_err_improve": 59.490006883481556,
    "time": 59875.81787109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -5.8e-156) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 3e-162) (/ (* (sqrt 2.0) t) (expm1 (log1p (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 54,
    "avg_bits_err_input": 42.95922449358038,
    "avg_bits_err_output": 35.50825905915446,
    "avg_bits_err_improve": 7.4509654344259175,
    "time": 31358.355224609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.050222550256112,
    "avg_bits_err_output": 4.050222550256112,
    "avg_bits_err_improve": 0,
    "time": 69351.73388671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9870666069875106,
    "avg_bits_err_output": 0.9870666069875106,
    "avg_bits_err_improve": 0,
    "time": 9291.6220703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-296) (sqrt (* 2.0 (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))))",
    "output_parens": 43,
    "avg_bits_err_input": 34.24242992177961,
    "avg_bits_err_output": 32.48549757718816,
    "avg_bits_err_improve": 1.7569323445914478,
    "time": 30307.795166015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 2e-14) (/ 2.0 (* (* (sin k) (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0))) (tan k))) (/ 2.0 (* (pow (/ k t) 2.0) (+ (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))) (fma (- (sin k)) (* (tan k) (/ (sin k) (sin k))) (* (sin k) (tan k)))))))",
    "output_parens": 48,
    "avg_bits_err_input": 47.54258284319369,
    "avg_bits_err_output": 38.064153846399094,
    "avg_bits_err_improve": 9.478428996794598,
    "time": 70069.80346679688,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 32.46389821472174,
    "avg_bits_err_output": 32.46389821472174,
    "avg_bits_err_improve": 0,
    "time": 44706.880126953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5391338375223579,
    "avg_bits_err_output": 0.5391338375223579,
    "avg_bits_err_improve": 0,
    "time": 35564.475341796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.4908464607940856,
    "avg_bits_err_output": 0.4908464607940856,
    "avg_bits_err_improve": 0,
    "time": 51744.2236328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (fma (exp (- l)) (- (cos (/ K 2.0))) (- (* (exp l) (- (cos (/ K 2.0)))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.094553649194772,
    "avg_bits_err_output": 17.09769507224057,
    "avg_bits_err_improve": -0.0031414230457968984,
    "time": 47181.97998046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -1.45e+184) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ (- m -1.0) n) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 2e-12) (* (cos (- (/ (- -1.0 (- (+ (+ (* K m) 2.0) (- (fma K n K) (+ K 1.0))))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ (- m -1.0) n) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 67,
    "avg_bits_err_input": 15.597584544532033,
    "avg_bits_err_output": 10.247148666163476,
    "avg_bits_err_improve": 5.3504358783685575,
    "time": 37529.413818359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.834719360937772,
    "avg_bits_err_output": 17.834719360937772,
    "avg_bits_err_improve": 0,
    "time": 73762.36303710938,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.150926840649017,
    "avg_bits_err_output": 14.150926840649017,
    "avg_bits_err_improve": 0,
    "time": 67273.60424804688,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.987251701785507,
    "avg_bits_err_output": 18.987251701785507,
    "avg_bits_err_improve": 0,
    "time": 42059.066162109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.61431169794126,
    "avg_bits_err_output": 57.127586954143176,
    "avg_bits_err_improve": 2.486724743798085,
    "time": 59634.969970703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d l) 0.5) (+ (pow (/ d h) 0.5) (- (* 0.5 (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (/ h l)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 26.885601663223525,
    "avg_bits_err_output": 26.274824973450688,
    "avg_bits_err_improve": 0.6107766897728375,
    "time": 61607.750244140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.011050498090572,
    "avg_bits_err_output": 15.011050498090572,
    "avg_bits_err_improve": 0,
    "time": 46634.5771484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9837712406251803,
    "avg_bits_err_output": 0.014884601949631355,
    "avg_bits_err_improve": 0.9688866386755489,
    "time": 7601.072998046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42716751275219256,
    "avg_bits_err_output": 0.35783421041011093,
    "avg_bits_err_improve": 0.06933330234208163,
    "time": 25651.178955078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (- (/ (sqrt 2.0) 4.0) (* (* v v) (/ (sqrt 2.0) 4.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.011667481250360576,
    "avg_bits_err_output": 0.012225919365257201,
    "avg_bits_err_improve": -0.0005584381148966248,
    "time": 32285.296630859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5145300913881009,
    "avg_bits_err_output": 0.5145300913881009,
    "avg_bits_err_improve": 0,
    "time": 20026.005126953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1490949785499773,
    "avg_bits_err_output": 2.1067506176122066,
    "avg_bits_err_improve": 0.04234436093777072,
    "time": 16580.657470703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.014188321399553346,
    "avg_bits_err_output": 0.014188321399553346,
    "avg_bits_err_improve": 0,
    "time": 8379.09765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18094172101615547,
    "avg_bits_err_output": 0.1831398413287456,
    "avg_bits_err_improve": -0.002198120312590146,
    "time": 32990.307861328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18970316694580563,
    "avg_bits_err_output": 0.18970316694580563,
    "avg_bits_err_improve": 0,
    "time": 32225.95166015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (- (* a a) (* a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18203309357999456,
    "avg_bits_err_output": 0.18234377193339082,
    "avg_bits_err_improve": -0.00031067835339626537,
    "time": 7313.994384765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.932476742341763,
    "avg_bits_err_output": 12.932476742341763,
    "avg_bits_err_improve": 0,
    "time": 13580.20947265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.15322183461517,
    "avg_bits_err_output": 0.056,
    "avg_bits_err_improve": 41.09722183461517,
    "time": 8415.873291015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (- x -1.0) 1.0) (sin x)) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.533065694187442,
    "avg_bits_err_output": 25.900730520456193,
    "avg_bits_err_improve": 5.632335173731249,
    "time": 46814.6904296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.389283387442845,
    "avg_bits_err_output": 34.389283387442845,
    "avg_bits_err_improve": 0,
    "time": 18439.5810546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.129451249660974,
    "avg_bits_err_output": 34.129451249660974,
    "avg_bits_err_improve": 0,
    "time": 18420.058837890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.134044478686224,
    "avg_bits_err_output": 31.134044478686224,
    "avg_bits_err_improve": 0,
    "time": 25647.609619140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (expm1 (log1p (pow (+ x 1.0) (/ 1.0 n)))) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.23633584885353,
    "avg_bits_err_output": 32.251649149776966,
    "avg_bits_err_improve": -0.015313300923438078,
    "time": 26047.703857421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 29.669629428432366,
    "avg_bits_err_output": 29.68045842383167,
    "avg_bits_err_improve": -0.010828995399304375,
    "time": 24699.513427734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (+ (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.698462470854961,
    "avg_bits_err_output": 0.488153224665064,
    "avg_bits_err_improve": 14.210309246189897,
    "time": 30234.55322265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (log1p (expm1 (log (exp (cos (+ x eps)))))) (cos x))",
    "output_parens": 8,
    "avg_bits_err_input": 39.75990502859051,
    "avg_bits_err_output": 39.85491292337782,
    "avg_bits_err_improve": -0.09500789478730809,
    "time": 37642.18505859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.6509733651925,
    "avg_bits_err_output": 29.34201610720836,
    "avg_bits_err_improve": 0.3089572579841402,
    "time": 32298.647705078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.378223525986172,
    "avg_bits_err_output": 30.38319813197148,
    "avg_bits_err_improve": -0.004974605985307079,
    "time": 57523.925537109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* -4.0 (* a c)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.51695654767653,
    "avg_bits_err_output": 34.51695654767653,
    "avg_bits_err_improve": 0,
    "time": 21836.72021484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.04895770910524,
    "avg_bits_err_output": 34.04895770910524,
    "avg_bits_err_improve": 0,
    "time": 18885.81103515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.285247213091395,
    "avg_bits_err_output": 59.89969937930922,
    "avg_bits_err_improve": 1.3855478337821765,
    "time": 31861.12060546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00828121079103,
    "avg_bits_err_output": 0.054592514271652536,
    "avg_bits_err_improve": 62.95368869651938,
    "time": 27223.30712890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (log1p (expm1 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 58.72873798014717,
    "avg_bits_err_improve": -0.010137596990873021,
    "time": 105039.8994140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(log (exp (- (/ 1.0 x) (/ 1.0 (tan x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 60.00642841108273,
    "avg_bits_err_output": 60.006371007938135,
    "avg_bits_err_improve": 5.7403144595014055e-05,
    "time": 44511.89013671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.17191290402927,
    "avg_bits_err_output": 41.40619993703662,
    "avg_bits_err_improve": 18.765712966992652,
    "time": 31856.384765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.5112415262548,
    "avg_bits_err_output": 0.4749906015629508,
    "avg_bits_err_improve": 41.03625092469185,
    "time": 4165.007568359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.77728461579644,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.77678461579644,
    "time": 3624.941162109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.252303740510047,
    "avg_bits_err_output": 0.016165233569958675,
    "avg_bits_err_improve": 29.23613850694009,
    "time": 4021.444091796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.845495044499835,
    "avg_bits_err_output": 28.969913975962328,
    "avg_bits_err_improve": 0.8755810685375067,
    "time": 29708.24462890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.041605755021347,
    "avg_bits_err_output": 10.051069566116407,
    "avg_bits_err_improve": -0.009463811095059782,
    "time": 46125.346435546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (- (tan x) (* (tan (+ x eps)) (- (+ (tan (+ x eps)) 1.0) (tan (+ x eps))))))",
    "output_parens": 12,
    "avg_bits_err_input": 36.556955566873185,
    "avg_bits_err_output": 36.59356670382545,
    "avg_bits_err_improve": -0.03661113695226703,
    "time": 37366.219482421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (* (sqrt x) (- (+ (/ (sqrt x) (sqrt x)) (/ (- -1.0 (sqrt x)) (sqrt x))) (/ -1.0 (sqrt x)))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 18,
    "avg_bits_err_input": 29.69974681681252,
    "avg_bits_err_output": 28.965976173757117,
    "avg_bits_err_improve": 0.7337706430554043,
    "time": 23785.90625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (expm1 (log1p (sin (+ x eps)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 36.88128012781721,
    "avg_bits_err_output": 36.94388177726828,
    "avg_bits_err_improve": -0.06260164945106794,
    "time": 36602.399169921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.94802338498216,
    "avg_bits_err_output": 19.94802338498216,
    "avg_bits_err_improve": 0,
    "time": 23722.484619140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (log1p (expm1 (atan (+ N 1.0)))) (atan N))",
    "output_parens": 6,
    "avg_bits_err_input": 15.245350639810278,
    "avg_bits_err_output": 15.252622612545817,
    "avg_bits_err_improve": -0.007271972735539478,
    "time": 31589.135009765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.844951854568617,
    "avg_bits_err_output": 29.844951854568617,
    "avg_bits_err_improve": 0,
    "time": 59946.060302734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07497180468885216,
    "avg_bits_err_output": 0.07743688866220536,
    "avg_bits_err_improve": -0.0024650839733531965,
    "time": 37913.91259765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.083028519494206,
    "avg_bits_err_output": 0.3061866546917368,
    "avg_bits_err_improve": 15.776841864802469,
    "time": 21486.764404296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (* PI (- (* (exp (log1p (/ 1.0 PI))) (/ angle 180.0)) (/ angle 180.0)))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.33803249018788,
    "avg_bits_err_output": 20.357129103323544,
    "avg_bits_err_improve": -0.019096613135662466,
    "time": 53702.565185546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (fma (- (pow b 2.0) (pow a 2.0)) (* (cos (* PI (/ angle 180.0))) (sin (* PI (/ angle 180.0)))) (fma (* (cos (* PI (/ angle 180.0))) (- (pow a 2.0))) (sin (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (* (pow a 2.0) (sin (* PI (/ angle 180.0))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 31.145442296575986,
    "avg_bits_err_output": 31.120742857094523,
    "avg_bits_err_improve": 0.024699439481462804,
    "time": 65966.521484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (fma (/ angle 180.0) (* PI (exp (log1p (/ (/ angle 180.0) (/ angle 180.0))))) (- (* (* (/ angle 180.0) (/ PI (/ angle 180.0))) (+ (/ angle 180.0) 0.0)))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 25,
    "avg_bits_err_input": 20.316869005994228,
    "avg_bits_err_output": 20.6648470628556,
    "avg_bits_err_improve": -0.34797805686137195,
    "time": 87568.62670898438,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18225020351258203,
    "avg_bits_err_output": 0.1824634750397233,
    "avg_bits_err_improve": -0.00021327152714126218,
    "time": 24354.489501953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3316504019803842,
    "avg_bits_err_output": 0.31762994799929856,
    "avg_bits_err_improve": 0.014020453981085645,
    "time": 23276.838134765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (- 1.0 (- 1.0 (* e (cos v))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13414624062518027,
    "avg_bits_err_output": 0.13987744375108171,
    "avg_bits_err_improve": -0.005731203125901446,
    "time": 38091.362548828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.799114515947352,
    "avg_bits_err_output": 16.791983961601243,
    "avg_bits_err_improve": 0.007130554346108653,
    "time": 57574.347900390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 2.5e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a)) (/ (+ (+ (sqrt (fma b b (* a (* c -4.0)))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 41,
    "avg_bits_err_input": 52.903880467862585,
    "avg_bits_err_output": 50.79684169907121,
    "avg_bits_err_improve": 2.1070387687913765,
    "time": 25658.727783203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (+ (* b b) (* a (* c -4.0))) (/ 1.0 (+ (* b b) (* a (* c -4.0))))))) b) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.549210173889637,
    "avg_bits_err_output": 28.5286895074937,
    "avg_bits_err_improve": 0.020520666395938747,
    "time": 37622.48193359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -4e-18) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (- (exp (log1p (sqrt (fma b b (* a (* c -4.0)))))) 1.0) b) (+ a a)))",
    "output_parens": 28,
    "avg_bits_err_input": 43.800863444631155,
    "avg_bits_err_output": 42.87715670269445,
    "avg_bits_err_improve": 0.9237067419367051,
    "time": 26445.779296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.52001636568025,
    "avg_bits_err_output": 34.52001636568025,
    "avg_bits_err_improve": 0,
    "time": 23627.286865234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (/ (sin (- lambda1 lambda2)) (cos phi2)) (* (cos phi2) (cos phi2))) (fma (* (cos phi2) (/ (cos (- lambda1 lambda2)) (cos phi2))) (cos phi2) (cos phi1))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.8023021374663263,
    "avg_bits_err_output": 0.8190205405470754,
    "avg_bits_err_improve": -0.016718403080749122,
    "time": 39338.904296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.07521441751625,
    "avg_bits_err_output": 29.07521441751625,
    "avg_bits_err_improve": 0,
    "time": 39189.033203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.215840184959255,
    "avg_bits_err_output": 1.2481486843762621,
    "avg_bits_err_improve": 56.967691500582994,
    "time": 14316.31787109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18402014172814,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.17664514172814,
    "time": 7250.216552734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010635515405487158,
    "avg_bits_err_output": 0.010635515405487158,
    "avg_bits_err_improve": 0,
    "time": 5459.339599609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.90577124062518,
    "avg_bits_err_output": 31.90577124062518,
    "avg_bits_err_improve": 0,
    "time": 4608.3046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 0,
    "time": 12171.2314453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (sin t) (* ew (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12425,
    "avg_bits_err_output": 0.122625,
    "avg_bits_err_improve": 0.0016250000000000014,
    "time": 40797.047607421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1296674812503606,
    "avg_bits_err_output": 0.1296674812503606,
    "avg_bits_err_improve": 0,
    "time": 28500.501708984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda1) (- (cos (/ (+ phi1 phi2) 2.0))) (* lambda1 (- (cos (/ (+ phi1 phi2) 2.0)))))) (- phi1 phi2)))",
    "output_parens": 19,
    "avg_bits_err_input": 39.39515394909506,
    "avg_bits_err_output": 3.8286091216665024,
    "avg_bits_err_improve": 35.56654482742856,
    "time": 52035.4326171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 13.995094089426662,
    "avg_bits_err_output": 13.998068251320325,
    "avg_bits_err_improve": -0.002974161893662952,
    "time": 6483.49951171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin delta) (* (cos phi1) (sin theta))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (* (sin delta) (cos phi1)) (cos theta)))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15595999319001144,
    "avg_bits_err_output": 0.15179935004240333,
    "avg_bits_err_improve": 0.004160643147608112,
    "time": 47081.6533203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1e+16) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (log (+ 1.0 (expm1 (+ (* (/ (/ 1.0 (fma b b (* a (* c -3.0)))) (fma b b (* a (* c -3.0)))) (* (fma b b (* a (* c -3.0))) (* b b))) (* (* (fma b b (* a (* c -3.0))) (/ (/ 1.0 (fma b b (* a (* c -3.0)))) (fma b b (* a (* c -3.0))))) (* a (* c -3.0)))))))))) (* 3.0 a)) (/ (- (- (- (sqrt (fma b b (* a (* c -3.0)))) -1.0) b) 1.0) (* 3.0 a)))",
    "output_parens": 53,
    "avg_bits_err_input": 52.908560327204256,
    "avg_bits_err_output": 51.17484848389952,
    "avg_bits_err_improve": 1.7337118433047394,
    "time": 33829.23828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.717548485991898,
    "avg_bits_err_output": 28.671359637647136,
    "avg_bits_err_improve": 0.046188848344762334,
    "time": 29535.922607421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-18) (/ (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (/ 1.0 (- (sqrt (fma b b (* a (* c -3.0)))) b)))) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (- (exp (log1p (/ 1.0 (fma b b (* a (* c -3.0)))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 51,
    "avg_bits_err_input": 43.82823094140982,
    "avg_bits_err_output": 42.554905062440696,
    "avg_bits_err_improve": 1.2733258789691249,
    "time": 21890.775390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.55748047305467,
    "avg_bits_err_output": 34.55748047305467,
    "avg_bits_err_improve": 0,
    "time": 28746.99169921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.819481171290647,
    "avg_bits_err_output": 12.819858029054178,
    "avg_bits_err_improve": -0.0003768577635305803,
    "time": 73681.67626953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (- 2.0 (- (/ (+ 1.0 x) (+ -1.0 x)) (/ x (+ 1.0 x)))) -2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.702365385298744,
    "avg_bits_err_output": 29.72591888689272,
    "avg_bits_err_improve": -0.023553501593976733,
    "time": 275541.7561035156,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (- (/ 1.0 (+ -1.0 x)) 1.0) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010125,
    "avg_bits_err_output": 0.01382556406367188,
    "avg_bits_err_improve": -0.00370056406367188,
    "time": 4756.52734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (fma (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) -2.0) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (- (/ 1.0 (+ x -1.0)) (fma (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.72004917919412,
    "avg_bits_err_output": 12.80035418332487,
    "avg_bits_err_improve": 1.91969499586925,
    "time": 261128.43505859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (fma F C (fma (+ F F) (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* C F)))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.124822280773145,
    "avg_bits_err_output": 51.80213728732279,
    "avg_bits_err_improve": 0.32268499345035195,
    "time": 50816.18798828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.321259719347697,
    "avg_bits_err_output": 30.321259719347697,
    "avg_bits_err_improve": 0,
    "time": 65106.237548828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.34563997338811,
    "avg_bits_err_output": 52.061052045478895,
    "avg_bits_err_improve": 0.2845879279092145,
    "time": 37272.021728515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.356114480563749,
    "avg_bits_err_output": 15.356114480563749,
    "avg_bits_err_improve": 0,
    "time": 2332.75537109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (* (+ g h) (* (+ g h) (/ (- g h) (+ g h))))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 35.675476118018906,
    "avg_bits_err_output": 35.685646709920285,
    "avg_bits_err_improve": -0.010170591901378145,
    "time": 18304.56689453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9892528203183604,
    "avg_bits_err_output": 0.9892528203183604,
    "avg_bits_err_improve": 0,
    "time": 5394.5244140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (- (expm1 b) (- -1.0 (exp a))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.6456981203125902,
    "avg_bits_err_output": 0.671610568295179,
    "avg_bits_err_improve": -0.025912447982588738,
    "time": 7878.249267578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.785799122496455,
    "avg_bits_err_output": 11.785799122496455,
    "avg_bits_err_improve": 0,
    "time": 23088.921142578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4428257887595321,
    "avg_bits_err_output": 0.396125,
    "avg_bits_err_improve": 0.0467007887595321,
    "time": 9813.007568359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (+ x (hypot 1.0 x)))",
    "output_parens": 3,
    "avg_bits_err_input": 53.11726904540219,
    "avg_bits_err_output": 45.51735660036705,
    "avg_bits_err_improve": 7.599912445035137,
    "time": 7321.44677734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (+ (log b) 1.0) (+ (log a) -1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 5.7380536978855154,
    "avg_bits_err_output": 5.743432106954786,
    "avg_bits_err_improve": -0.00537840906927034,
    "time": 26695.609130859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0)) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.012936481637041208,
    "avg_bits_err_improve": 0.001563518362958793,
    "time": 10687.16015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1178.311279296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -1e+32) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 3.5e-57) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* w (* r (* r (* w 0.125)))) (- 3.0 (+ v v))) (- 1.0 v))) 4.5) (- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* r (* w (* (- r) (* (- 0.375 (* v 0.25)) w))))) (- 1.0 v)))))",
    "output_parens": 44,
    "avg_bits_err_input": 12.970045637983286,
    "avg_bits_err_output": 6.84088477500432,
    "avg_bits_err_improve": 6.129160862978966,
    "time": 28845.992919921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (+ (* (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) (* (+ (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) -3.0) (* x1 2.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0)))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5116868640749087,
    "avg_bits_err_output": 0.28398698570078396,
    "avg_bits_err_improve": 0.22769987837412475,
    "time": 78351.62573242188,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.28419832474688,
    "avg_bits_err_output": 18.28419832474688,
    "avg_bits_err_improve": 0,
    "time": 19921.479736328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- x (* x (+ (* x (* x 0.12900613773279798)) 0.045070341448628)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.22184436093777044,
    "avg_bits_err_output": 0.11120056406367189,
    "avg_bits_err_improve": 0.11064379687409855,
    "time": 17134.44970703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0021981203125901443,
    "avg_bits_err_output": 0.0021981203125901443,
    "avg_bits_err_improve": 0,
    "time": 2400.014892578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.084617614909417,
    "avg_bits_err_output": 9.343907395352737,
    "avg_bits_err_improve": 4.74071021955668,
    "time": 43056.251953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 30.466625857289806,
    "avg_bits_err_output": 0.9537513229732522,
    "avg_bits_err_improve": 29.512874534316552,
    "time": 26399.474853515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (fma (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) 2.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.013125,
    "avg_bits_err_output": 0.015,
    "avg_bits_err_improve": -0.001875,
    "time": 12161.181640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017125,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0,
    "time": 34632.093994140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) -1.0) (/ (+ t t) (+ t 1.0))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.0075,
    "avg_bits_err_output": 0.013084962500721158,
    "avg_bits_err_improve": -0.005584962500721158,
    "time": 11902.98046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3282.224609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2622.328857421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3461.800537109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.808299539132032,
    "avg_bits_err_output": 0.252125,
    "avg_bits_err_improve": 7.556174539132032,
    "time": 57500.289306640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(+ (pow (+ x eps) 5.0) (expm1 (log1p (- (pow x 5.0)))))",
    "output_parens": 7,
    "avg_bits_err_input": 7.307054420725671,
    "avg_bits_err_output": 7.381379728257127,
    "avg_bits_err_improve": -0.07432530753145628,
    "time": 33683.516845703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.95912717625473,
    "avg_bits_err_output": 15.95912717625473,
    "avg_bits_err_improve": 0,
    "time": 35970.385009765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (exp (* x (* x 10.0))) (cos x)) (log (+ 1.0 (expm1 (* (cos x) (cos x))))))",
    "output_parens": 12,
    "avg_bits_err_input": 3.540502444771896,
    "avg_bits_err_output": 3.613896422694132,
    "avg_bits_err_improve": -0.07339397792223634,
    "time": 31473.51953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.506265881854695,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.506265881854695,
    "time": 5158.65234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.6191748059602,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.6189248059602,
    "time": 3889.200439453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.3005,
    "avg_bits_err_improve": 63.6995,
    "time": 3336.28173828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325373223181,
    "avg_bits_err_output": 0.41032312031259016,
    "avg_bits_err_improve": 61.43293061191922,
    "time": 22421.551513671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.04895770910524,
    "avg_bits_err_output": 34.04895770910524,
    "avg_bits_err_improve": 0,
    "time": 20463.069580078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.52001636568025,
    "avg_bits_err_output": 34.52001636568025,
    "avg_bits_err_improve": 0,
    "time": 24611.559326171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2042.593994140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.70703321656496,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 39.69715821656496,
    "time": 5432.577880859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.166642772734377,
    "avg_bits_err_output": 20.166642772734377,
    "avg_bits_err_improve": 0,
    "time": 3051.59423828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6594213341394606,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6594213341394606,
    "time": 4442.495361328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.041125,
    "avg_bits_err_output": 0.0035,
    "avg_bits_err_improve": 0.037625,
    "time": 9146.40087890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.019896240625180292,
    "avg_bits_err_output": 0.019896240625180292,
    "avg_bits_err_improve": 0,
    "time": 3466.942626953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.01225,
    "time": 6545.677490234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.00075,
    "time": 2632.04638671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4036797000057695,
    "avg_bits_err_output": 0.2635,
    "avg_bits_err_improve": 0.14017970000576951,
    "time": 8940.150146484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- (log (+ 1.0 (expm1 (* (- 1.0 (cos x)) (- 2.0 (cos x)))))) (- (- 1.0 (cos x)) (- (cos x) (* (cos x) (cos x)))))",
    "output_parens": 17,
    "avg_bits_err_input": 30.16991500837944,
    "avg_bits_err_output": 30.198033286301023,
    "avg_bits_err_improve": -0.028118277921581836,
    "time": 150808.65478515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.579067066851806,
    "avg_bits_err_output": 24.579067066851806,
    "avg_bits_err_improve": 0,
    "time": 16683.077392578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (- (+ (/ (- x (sin x)) (tan x)) -1.0) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.935148109685397,
    "avg_bits_err_output": 29.93595256847045,
    "avg_bits_err_improve": -0.0008044587850548623,
    "time": 59866.031982421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006625,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 0,
    "time": 1500.207275390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.94170988204123,
    "avg_bits_err_output": 47.976034263451794,
    "avg_bits_err_improve": -0.034324381410563376,
    "time": 105133.34008789062,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.3920867006932,
    "avg_bits_err_output": 26.3920867006932,
    "avg_bits_err_improve": 0,
    "time": 147250.2763671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.16791257004547,
    "avg_bits_err_output": 26.16791257004547,
    "avg_bits_err_improve": 0,
    "time": 23386.391357421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03425,
    "avg_bits_err_output": 0.020240425366668893,
    "avg_bits_err_improve": 0.01400957463333111,
    "time": 18635.6201171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* PI (* 2.0 uy))) (sqrt (* (- 1.0 maxCos) (* (- ux (* ux (- ux (fma maxCos ux 1.0)))) (* (- ux (* ux (- ux (fma maxCos ux 1.0)))) (/ 1.0 (- ux (* ux (- ux (fma maxCos ux 1.0))))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 13.265780636450266,
    "avg_bits_err_output": 0.5514471967215184,
    "avg_bits_err_improve": 12.714333439728748,
    "time": 28785.6640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (fma (* uy (/ (* 2.0 PI) uy)) uy 0.0)) (sqrt (+ (- ux (* ux maxCos)) (- 0.0 (* ux (* (fma ux maxCos (- 1.0 ux)) (+ maxCos -1.0)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.30430100271784,
    "avg_bits_err_output": 0.34734056769530397,
    "avg_bits_err_improve": 12.956960435022538,
    "time": 52380.004150390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.3331290051909574,
    "avg_bits_err_output": 0.3265822893435895,
    "avg_bits_err_improve": 0.006546715847367879,
    "time": 90998.34399414062,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20630759366319829,
    "avg_bits_err_output": 0.20630759366319829,
    "avg_bits_err_improve": 0,
    "time": 18804.57177734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (+ (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))) (fma (/ u1 (- 1.0 u1)) (+ 1.0 (/ 1.0 (/ u1 (- 1.0 u1)))) (* (/ u1 (- 1.0 u1)) (- -1.0 (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 28,
    "avg_bits_err_input": 0.5398968997108202,
    "avg_bits_err_output": 0.5368970983485475,
    "avg_bits_err_improve": 0.002999801362272736,
    "time": 49590.60302734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (+ (fma 6.28318530718 u2 -1.0) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3178456279750203,
    "avg_bits_err_output": 0.3265332982860508,
    "avg_bits_err_improve": -0.008687670311030515,
    "time": 42197.131103515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (- (- (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0)) 1.0) -1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33478257062772354,
    "avg_bits_err_output": 0.33462253535412745,
    "avg_bits_err_improve": 0.00016003527359609304,
    "time": 40974.895751953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05820654601193664,
    "avg_bits_err_output": 0.05881970382380564,
    "avg_bits_err_improve": -0.0006131578118690056,
    "time": 8280.371337890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (- (* s (+ (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) (- -1.0 (exp (/ (- (fabs x)) s))))) (* s (- -2.0 (exp (/ (- (fabs x)) s))))))",
    "output_parens": 29,
    "avg_bits_err_input": 0.1562500466966886,
    "avg_bits_err_output": 0.1455551965522887,
    "avg_bits_err_improve": 0.010694850144399887,
    "time": 45206.705322265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6876513735889636,
    "avg_bits_err_output": 0.6843174074377069,
    "avg_bits_err_improve": 0.0033339661512566954,
    "time": 17690.59423828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (- (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) 1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1753757084092386,
    "avg_bits_err_output": 0.18054690037466858,
    "avg_bits_err_improve": -0.005171191965429978,
    "time": 31984.036865234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5257487598013366,
    "avg_bits_err_output": 2.52174063603113,
    "avg_bits_err_improve": 0.004008123770206762,
    "time": 18640.68212890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (sinh (/ 1.0 v)) (log1p (expm1 (* v 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46658294560228564,
    "avg_bits_err_output": 0.4690808217130728,
    "avg_bits_err_improve": -0.002497876110787167,
    "time": 33730.003173828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10410405243715923,
    "avg_bits_err_output": 0.10410405243715923,
    "avg_bits_err_improve": 0,
    "time": 8245.998291015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (* alpha alpha)) (* PI (* (log (* alpha alpha)) (/ 1.0 (log (* alpha alpha)))))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.4685091442512029,
    "avg_bits_err_output": 0.48794579894294016,
    "avg_bits_err_improve": -0.019436654691737276,
    "time": 23611.729248046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (* s (/ (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) s))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.3159584407674125,
    "avg_bits_err_output": 1.3794889501552445,
    "avg_bits_err_improve": -0.063530509387832,
    "time": 34339.93603515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.56426601420522,
    "avg_bits_err_output": 12.211588691262584,
    "avg_bits_err_improve": 0.3526773229426361,
    "time": 71321.29638671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI 6.0) (* r s))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13847928776050428,
    "avg_bits_err_output": 0.14307994905245738,
    "avg_bits_err_improve": -0.0046006612919531065,
    "time": 77093.67700195312,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8646385385723694,
    "avg_bits_err_output": 0.844581559136661,
    "avg_bits_err_improve": 0.02005697943570839,
    "time": 43619.468505859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (- (* (/ 1.0 (sqrt PI)) (+ 1.0 (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta))) (/ 1.0 (sqrt PI))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.6857721731942664,
    "avg_bits_err_output": 0.692543790386725,
    "avg_bits_err_improve": -0.006771617192458557,
    "time": 48434.198974609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (expm1 (log (- 1.0 u1)))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.653590131905819,
    "avg_bits_err_output": 13.653417084909801,
    "avg_bits_err_improve": 0.00017304699601794482,
    "time": 33136.4453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (fma u2 (exp (log1p (* 2.0 PI))) (- u2))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.691179165085,
    "avg_bits_err_output": 13.695954558792872,
    "avg_bits_err_improve": -0.004775393707872055,
    "time": 40172.82373046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (- (* (* alpha alpha) (/ (- alpha) (* alpha alpha)))) (* alpha alpha) (* alpha (* alpha (- alpha)))) (* alpha (* alpha (* (/ (log (- 1.0 u0)) (* alpha (- alpha))) (* alpha alpha)))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.174956408182862,
    "avg_bits_err_output": 13.805269002657065,
    "avg_bits_err_improve": 0.3696874055257968,
    "time": 38712.905029296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 16,
    "avg_bits_err_input": 12.57253538117605,
    "avg_bits_err_output": 12.573910616903374,
    "avg_bits_err_improve": -0.0013752357273251192,
    "time": 23445.918212890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (+ (/ PI l) 1.0)) l) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.723557015822454,
    "avg_bits_err_output": 12.906283706407653,
    "avg_bits_err_improve": 3.8172733094148015,
    "time": 36434.197998046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2184387218755409,
    "avg_bits_err_output": 0.2184387218755409,
    "avg_bits_err_improve": 0,
    "time": 38001.2685546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 14.13654311864041,
    "avg_bits_err_output": 14.13654311864041,
    "avg_bits_err_improve": 0,
    "time": 41203.68017578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(if (<= (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))) 5e+14) (- (- (* (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))))) (exp (log1p (/ 1.0 (/ PI 4.0))))) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (- 1.0 (exp (log1p (* (/ PI 4.0) f)))))))))) (- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (fma (* f f) (* f (log1p (expm1 (* f (/ (/ (/ PI 4.0) f) (* f f)))))) 0.0)))))))))",
    "output_parens": 94,
    "avg_bits_err_input": 61.477159954499704,
    "avg_bits_err_output": 57.4296045270283,
    "avg_bits_err_improve": 4.047555427471401,
    "time": 75740.61279296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.8e-132) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 6.2e-86) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (+ (fma (- l) l (* l l)) (* l (* l (log (+ 1.0 (expm1 (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x)))))))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 62,
    "avg_bits_err_input": 43.13593552709568,
    "avg_bits_err_output": 36.315364264167705,
    "avg_bits_err_improve": 6.820571262927977,
    "time": 36386.16162109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.142166604141708,
    "avg_bits_err_output": 4.142166604141708,
    "avg_bits_err_improve": 0,
    "time": 52188.143310546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0028867854942232,
    "avg_bits_err_output": 1.0028867854942232,
    "avg_bits_err_improve": 0,
    "time": 10879.28662109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (expm1 (log1p (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+307) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* 2.0 (* n (- (* (- t (* 2.0 (/ (* l l) Om))) U) (* n (* (pow (/ l Om) 2.0) (* U (- U U*))))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 35.07639001983728,
    "avg_bits_err_output": 31.69831458834476,
    "avg_bits_err_improve": 3.3780754314925154,
    "time": 28548.201171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -2.55e-102) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (sin k) (* (pow (/ k t) 2.0) (* (sin k) (/ (tan k) (sin k)))) 0.0))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (tan k) (- (sin k)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 47.59580084174757,
    "avg_bits_err_output": 38.17334471112711,
    "avg_bits_err_improve": 9.42245613062046,
    "time": 58422.557373046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.955668116995383,
    "avg_bits_err_output": 31.925411550648377,
    "avg_bits_err_improve": 0.030256566347006242,
    "time": 42909.314697265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a1) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5340962437741605,
    "avg_bits_err_output": 0.5215562062748818,
    "avg_bits_err_improve": 0.012540037499278789,
    "time": 42075.4287109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* PI (* n (/ 2.0 PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5244609778208092,
    "avg_bits_err_output": 0.5298497065238373,
    "avg_bits_err_improve": -0.0053887287030280895,
    "time": 33436.1875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma (exp (- l)) (- J) (* (exp l) J)) (cos (/ K 2.0))) U)",
    "output_parens": 10,
    "avg_bits_err_input": 17.133124816344267,
    "avg_bits_err_output": 17.13732041071904,
    "avg_bits_err_improve": -0.004195594374774458,
    "time": 38429.283935546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (* (- (/ (* K (+ m n)) 2.0) M) (* (- (/ (* K (+ m n)) 2.0) M) (/ 1.0 (- (/ (* K (+ m n)) 2.0) M))))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 26,
    "avg_bits_err_input": 15.5280737184317,
    "avg_bits_err_output": 15.524207361657991,
    "avg_bits_err_improve": 0.0038663567737096116,
    "time": 13251.390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.995917481250363,
    "avg_bits_err_output": 17.995917481250363,
    "avg_bits_err_improve": 0,
    "time": 49699.43603515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.067381665166643,
    "avg_bits_err_output": 14.067381665166643,
    "avg_bits_err_improve": 0,
    "time": 10666.71533203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.173273755806512,
    "avg_bits_err_output": 19.173273755806512,
    "avg_bits_err_improve": 0,
    "time": 34881.362060546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* c0 d)) (* D (* D (* w h)))) (/ (* d (* c0 d)) (* D (* D (* w h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.477399904622935,
    "avg_bits_err_output": 56.73644802629908,
    "avg_bits_err_improve": 2.7409518783238553,
    "time": 52339.218017578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d h) 0.5) (- (pow (/ d l) 0.5) (* 0.5 (* (/ h l) (* (pow (/ (* M D) (+ d d)) 2.0) (pow (/ d l) 0.5))))))",
    "output_parens": 16,
    "avg_bits_err_input": 26.979217564542626,
    "avg_bits_err_output": 26.912420604214272,
    "avg_bits_err_improve": 0.0667969603283538,
    "time": 62462.14990234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (/ 1.0 (- (+ 1.0 (hypot 1.0 x)) 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.441218408153023,
    "avg_bits_err_output": 15.44402413777434,
    "avg_bits_err_improve": -0.002805729621316644,
    "time": 16676.6455078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9848962406251803,
    "avg_bits_err_output": 0.011948120312590144,
    "avg_bits_err_improve": 0.9729481203125901,
    "time": 12155.50244140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4508996903074717,
    "avg_bits_err_output": 0.38140871217724287,
    "avg_bits_err_improve": 0.06949097813022881,
    "time": 23957.77734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (log1p (expm1 (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.01164624062518029,
    "avg_bits_err_output": 0.011698120312590146,
    "avg_bits_err_improve": -5.1879687409855935e-05,
    "time": 12024.35302734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (+ (+ (* 5.0 (* v v)) -2.0) 2.0)) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5352647360209091,
    "avg_bits_err_output": 0.5539575845738269,
    "avg_bits_err_improve": -0.018692848552917862,
    "time": 14742.330078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.771707114896289,
    "avg_bits_err_output": 1.7632071148962891,
    "avg_bits_err_improve": 0.008499999999999952,
    "time": 22752.294921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (log1p (expm1 (exp (- (- (/ (+ mu (- (+ EDonor Vef) Ec)) KbT) 1.0) -1.0)))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.03188787450397706,
    "avg_bits_err_output": 0.0907979571573888,
    "avg_bits_err_improve": -0.05891008265341174,
    "time": 28092.340087890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(fma b (* b 4.0) (+ (pow (fma a a (* b b)) 2.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.18579697249404314,
    "avg_bits_err_output": 0.18576388968073188,
    "avg_bits_err_improve": 3.308281331126928e-05,
    "time": 37600.711669921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18888333395870788,
    "avg_bits_err_output": 0.18888333395870788,
    "avg_bits_err_improve": 0,
    "time": 44500.12939453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18917557175431662,
    "avg_bits_err_output": 0.18917557175431662,
    "avg_bits_err_improve": 0,
    "time": 7098.729736328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.556949941172181,
    "avg_bits_err_output": 13.556949941172181,
    "avg_bits_err_improve": 0,
    "time": 23362.53955078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.4978094337969,
    "avg_bits_err_output": 0.032375,
    "avg_bits_err_improve": 40.4654344337969,
    "time": 5734.998779296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (- x -1.0) 1.0) (sin x)) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.936707880230397,
    "avg_bits_err_output": 26.144963824692432,
    "avg_bits_err_improve": 5.791744055537965,
    "time": 53190.19140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c))))) b_2) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.3296966223253,
    "avg_bits_err_output": 34.3388947426379,
    "avg_bits_err_improve": -0.009198120312596814,
    "time": 25973.17724609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* c (* a -2.0)) (+ (* b_2 b_2) (fma -1.0 (* c a) (* c (+ a a))))))) a)",
    "output_parens": 13,
    "avg_bits_err_input": 34.0714052041139,
    "avg_bits_err_output": 34.08658345508228,
    "avg_bits_err_improve": -0.01517825096837555,
    "time": 17350.82861328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (log1p (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.100323104351038,
    "avg_bits_err_output": 31.10047682318255,
    "avg_bits_err_improve": -0.0001537188315126059,
    "time": 36944.85595703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.17957847590282,
    "avg_bits_err_output": 33.17957847590282,
    "avg_bits_err_improve": 0,
    "time": 29105.13818359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ (+ (exp (- (log1p N) (log N))) 3.0) -3.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.32475496090731,
    "avg_bits_err_output": 29.337323755466713,
    "avg_bits_err_improve": -0.012568794559403074,
    "time": 26789.388427734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -8e+151) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 5.5e+153) (- (- (* (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (+ 1.0 (/ 1.0 (/ 1.0 (+ 1.0 x))))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 30,
    "avg_bits_err_input": 14.248885183343658,
    "avg_bits_err_output": 3.890324394933126,
    "avg_bits_err_improve": 10.358560788410532,
    "time": 119170.44140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (log1p (log (exp (expm1 (cos x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.46031141867641,
    "avg_bits_err_output": 39.45924891610675,
    "avg_bits_err_improve": 0.0010625025696597845,
    "time": 36868.7607421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.84055146491137,
    "avg_bits_err_output": 29.54252439409256,
    "avg_bits_err_improve": 0.2980270708188115,
    "time": 27657.45068359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.386027519795867,
    "avg_bits_err_output": 30.390391881479246,
    "avg_bits_err_improve": -0.004364361683379059,
    "time": 65192.24560546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.196290081002864,
    "avg_bits_err_output": 34.19244975081406,
    "avg_bits_err_improve": 0.0038403301888010333,
    "time": 20344.94921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.39471082197148,
    "avg_bits_err_output": 34.39017948855141,
    "avg_bits_err_improve": 0.004531333420068506,
    "time": 22225.1484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.22634751687551,
    "avg_bits_err_output": 59.881871309986856,
    "avg_bits_err_improve": 1.3444762068886504,
    "time": 19548.58447265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00267498396311,
    "avg_bits_err_output": 0.06100272605877766,
    "avg_bits_err_improve": 62.94167225790434,
    "time": 28175.053955078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (* (/ 1.0 (/ (- 1.0 eps) (- eps -1.0))) (* (/ (- 1.0 eps) (- eps -1.0)) (/ (- 1.0 eps) (- eps -1.0)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 58.54819709755006,
    "avg_bits_err_output": 58.575430992214976,
    "avg_bits_err_improve": -0.027233894664917102,
    "time": 11892.997314453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (+ 1.0 (/ 1.0 x)) (* (- -1.0 (/ 1.0 (tan x))) (- (/ (/ 1.0 (tan x)) (- -1.0 (/ 1.0 (tan x)))) (/ -1.0 (- -1.0 (/ 1.0 (tan x)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 59.84548669582391,
    "avg_bits_err_output": 59.82975024165624,
    "avg_bits_err_improve": 0.01573645416766567,
    "time": 52311.844970703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.232625251042634,
    "avg_bits_err_output": 41.267452405159915,
    "avg_bits_err_improve": 18.96517284588272,
    "time": 34052.2177734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.86640520061961,
    "avg_bits_err_output": 0.37344812031259017,
    "avg_bits_err_improve": 40.49295708030702,
    "time": 17713.822998046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.54124921015561,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.54074921015561,
    "time": 3558.331298828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.52050738731715,
    "avg_bits_err_output": 0.01785342332290452,
    "avg_bits_err_improve": 29.502653963994245,
    "time": 5012.82373046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.214461849268176,
    "avg_bits_err_output": 28.22764167854361,
    "avg_bits_err_improve": 0.9868201707245667,
    "time": 44961.843017578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.843690680938964,
    "avg_bits_err_output": 9.843690680938964,
    "avg_bits_err_improve": 0,
    "time": 43271.063720703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.7119505772127,
    "avg_bits_err_output": 36.7119505772127,
    "avg_bits_err_improve": 0,
    "time": 51433.5078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(fma (/ 1.0 (sqrt x)) (sqrt x) (- (sqrt (+ x 1.0)) (+ (sqrt x) (* (sqrt x) (/ 1.0 (sqrt x))))))",
    "output_parens": 13,
    "avg_bits_err_input": 30.01322397282652,
    "avg_bits_err_output": 29.261097754321092,
    "avg_bits_err_improve": 0.7521262185054276,
    "time": 25622.71337890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (log1p (expm1 (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.02781205846847,
    "avg_bits_err_output": 37.02979764473692,
    "avg_bits_err_improve": -0.001985586268446582,
    "time": 30136.619873046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (- (+ 1.0 (sqrt (+ 1.0 x))) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.67262804726614,
    "avg_bits_err_output": 19.673021930555443,
    "avg_bits_err_improve": -0.00039388328930201055,
    "time": 26338.08642578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.925742312787628,
    "avg_bits_err_output": 14.925742312787628,
    "avg_bits_err_improve": 0,
    "time": 5022.476806640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.887854101821585,
    "avg_bits_err_output": 29.887854101821585,
    "avg_bits_err_improve": 0,
    "time": 66018.43994140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07366484475338013,
    "avg_bits_err_output": 0.07286152811111554,
    "avg_bits_err_improve": 0.0008033166422645871,
    "time": 28808.734130859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* a b) (* a b) (* (fma (- a) b (* a b)) (* b (- a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.52721110657995,
    "avg_bits_err_output": 0.158375,
    "avg_bits_err_improve": 16.368836106579952,
    "time": 14960.937744140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (* PI (* (/ angle 180.0) (/ 1.0 PI)))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 19.863074373178627,
    "avg_bits_err_output": 19.86309296679063,
    "avg_bits_err_improve": -1.859361200473586e-05,
    "time": 43287.4482421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (* (expm1 (log1p (cos (* PI (/ angle 180.0))))) (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.767193257253773,
    "avg_bits_err_output": 31.763610031684923,
    "avg_bits_err_improve": 0.0035832255688497128,
    "time": 82363.94384765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (- (* (/ angle 180.0) (* (* PI PI) (exp (log1p (/ (/ (/ angle 180.0) (/ angle 180.0)) PI))))) (* (/ angle 180.0) (* PI PI))))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 19.959423476632974,
    "avg_bits_err_output": 19.966767835668044,
    "avg_bits_err_improve": -0.007344359035069914,
    "time": 119829.568359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(fma m (/ (- m (* m m)) v) (- m))",
    "output_parens": 5,
    "avg_bits_err_input": 0.18050055538953297,
    "avg_bits_err_output": 0.1733972650315709,
    "avg_bits_err_improve": 0.007103290357962061,
    "time": 25417.26513671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.32558722911195537,
    "avg_bits_err_output": 0.32218475922053535,
    "avg_bits_err_improve": 0.0034024698914200124,
    "time": 26002.966064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13684436093777044,
    "avg_bits_err_output": 0.13684436093777044,
    "avg_bits_err_improve": 0,
    "time": 31195.408203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (fma (cos (- lambda1 lambda2)) (* (cos phi1) (* (cos (- lambda1 lambda2)) (/ (cos phi2) (cos (- lambda1 lambda2))))) 0.0))) R)",
    "output_parens": 17,
    "avg_bits_err_input": 17.198816294993406,
    "avg_bits_err_output": 17.213147549480873,
    "avg_bits_err_improve": -0.014331254487466083,
    "time": 51660.335693359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 4.8e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (fma (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (/ (/ (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))) (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))) (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))))) 0.0) (- b)) (+ a a)) (/ (- (- (- (sqrt (fma b b (* a (* c -4.0)))) -1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 53,
    "avg_bits_err_input": 52.18668749439654,
    "avg_bits_err_output": 50.29168960469504,
    "avg_bits_err_improve": 1.8949978897015,
    "time": 41249.603515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (- (sqrt (fma b b (* a (* c -4.0))))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (+ a a))",
    "output_parens": 29,
    "avg_bits_err_input": 28.44517071933788,
    "avg_bits_err_output": 28.672547663156315,
    "avg_bits_err_improve": -0.22737694381843454,
    "time": 26215.876953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a))",
    "output_parens": 30,
    "avg_bits_err_input": 43.67076178833966,
    "avg_bits_err_output": 42.80311129075079,
    "avg_bits_err_improve": 0.867650497588869,
    "time": 30037.420166015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.19223999182593,
    "avg_bits_err_output": 34.19223999182593,
    "avg_bits_err_improve": 0,
    "time": 19328.26708984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (* (cos (- lambda1 lambda2)) (* (/ (cos phi2) (cos phi2)) (/ (/ (cos (- lambda1 lambda2)) (cos (- lambda1 lambda2))) (cos phi2)))) (* (cos phi2) (cos phi2)) (cos phi1))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.8229353861021843,
    "avg_bits_err_output": 0.842586547657265,
    "avg_bits_err_improve": -0.01965116155508073,
    "time": 28393.22705078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.257231818172045,
    "avg_bits_err_output": 29.260538879905898,
    "avg_bits_err_improve": -0.0033070617338530894,
    "time": 4627.736572265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.08868462277677,
    "avg_bits_err_output": 1.457200564063672,
    "avg_bits_err_improve": 56.6314840587131,
    "time": 9969.16796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.7514954079555,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 57.742370407955505,
    "time": 6536.158935546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007344360937770433,
    "avg_bits_err_output": 0.007344360937770433,
    "avg_bits_err_improve": 0,
    "time": 2761.4833984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.241125,
    "avg_bits_err_output": 32.241125,
    "avg_bits_err_improve": 0,
    "time": 5656,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (exp (log1p (log (/ (- x -1.0) (- 1.0 x))))) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 58.54673702084727,
    "avg_bits_err_output": 58.57203583224284,
    "avg_bits_err_improve": -0.02529881139557233,
    "time": 221966.48046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (* (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)) (* (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)) (/ 1.0 (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.04369812031259015,
    "avg_bits_err_output": 0.04457312031259015,
    "avg_bits_err_improve": -0.0008750000000000008,
    "time": 8670.238037109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t)))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.125375,
    "avg_bits_err_output": 0.124625,
    "avg_bits_err_improve": 0.0007499999999999868,
    "time": 45556.95458984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12607312031259016,
    "avg_bits_err_output": 0.12607312031259016,
    "avg_bits_err_improve": 0,
    "time": 22889.092041015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.01120546324586,
    "avg_bits_err_output": 3.5470393481337132,
    "avg_bits_err_improve": 35.46416611511214,
    "time": 40975.64306640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a (+ a b)) (* b (+ a b))) (* a a))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.543707163975762,
    "avg_bits_err_output": 14.557253424142894,
    "avg_bits_err_improve": -0.013546260167132118,
    "time": 8005.655029296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.14608197728352681,
    "avg_bits_err_output": 0.14268581537366895,
    "avg_bits_err_improve": 0.0033961619098578644,
    "time": 65450.867431640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.55e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (fma c (* a -3.0) (* b b))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.19193956543452,
    "avg_bits_err_output": 50.23836669397297,
    "avg_bits_err_improve": 1.953572871461546,
    "time": 36960.00146484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.628214395472614,
    "avg_bits_err_output": 28.57248817826433,
    "avg_bits_err_improve": 0.05572621720828508,
    "time": 27098.361572265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (/ 1.0 (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 31,
    "avg_bits_err_input": 43.76212072528842,
    "avg_bits_err_output": 43.00927955059135,
    "avg_bits_err_improve": 0.7528411746970676,
    "time": 26218.86181640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.24197516158707,
    "avg_bits_err_output": 34.24197516158707,
    "avg_bits_err_improve": 0,
    "time": 21711.708251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.380679768160723,
    "avg_bits_err_output": 13.379943647074771,
    "avg_bits_err_improve": 0.0007361210859517797,
    "time": 67716.15209960938,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 6141.611083984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x 5e+159) (+ (* (/ 1.0 (+ -1.0 x)) (- (+ (+ 1.0 (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (/ -1.0 (/ 1.0 (+ -1.0 x))))) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))))",
    "output_parens": 29,
    "avg_bits_err_input": 13.97788253504498,
    "avg_bits_err_output": 13.038530901853909,
    "avg_bits_err_improve": 0.9393516331910714,
    "time": 25629.978271484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.02378954338342,
    "avg_bits_err_output": 51.71551501016611,
    "avg_bits_err_improve": 0.3082745332173147,
    "time": 34194.68603515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.71015275926808,
    "avg_bits_err_output": 29.71015275926808,
    "avg_bits_err_improve": 0,
    "time": 41918.9296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* C A))) (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.740710839481196,
    "avg_bits_err_output": 52.47443911548593,
    "avg_bits_err_improve": 0.266271723995267,
    "time": 38765.417236328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.789346630896121,
    "avg_bits_err_output": 15.789346630896121,
    "avg_bits_err_improve": 0,
    "time": 1813.634033203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (+ (sqrt (fma h (- h) (* g g))) (- (* (sqrt (- (* g g) (* h h))) -2.0) g)))))",
    "output_parens": 25,
    "avg_bits_err_input": 35.98163594674697,
    "avg_bits_err_output": 35.98778118346919,
    "avg_bits_err_improve": -0.006145236722218783,
    "time": 37996.697509765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9887885503953355,
    "avg_bits_err_output": 0.9887885503953355,
    "avg_bits_err_improve": 0,
    "time": 6165.428466796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.684625,
    "avg_bits_err_output": 0.684625,
    "avg_bits_err_improve": 0,
    "time": 7694.7685546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.217747438681487,
    "avg_bits_err_output": 11.217747438681487,
    "avg_bits_err_improve": 0,
    "time": 10724.108642578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.471054483806003,
    "avg_bits_err_output": 0.40075,
    "avg_bits_err_improve": 0.07030448380600302,
    "time": 13546.53076171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.0760533601966,
    "avg_bits_err_output": 15.84345638389306,
    "avg_bits_err_improve": 37.23259697630354,
    "time": 37564.768798828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.739294068766958,
    "avg_bits_err_output": 5.739294068766958,
    "avg_bits_err_improve": 0,
    "time": 34669.651123046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (/ (- 1.0 x) (- x -1.0))) (* (/ (- 1.0 x) (- x -1.0)) (/ (- 1.0 x) (- x -1.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.012,
    "avg_bits_err_improve": 0.0013749999999999995,
    "time": 83755.61083984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1224.33642578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* (* w r) (* w r))) (- 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 12.425687634112146,
    "avg_bits_err_output": 6.378534880446343,
    "avg_bits_err_improve": 6.047152753665803,
    "time": 32082.341064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ -6.0 (* 2.0 (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)))) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.51500260748199,
    "avg_bits_err_output": 0.2628777343100877,
    "avg_bits_err_improve": 0.2521248731719023,
    "time": 75923.57202148438,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.304213894702073,
    "avg_bits_err_output": 18.304213894702073,
    "avg_bits_err_improve": 0,
    "time": 36360.341064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.26071275847734965,
    "avg_bits_err_output": 0.18391484475338007,
    "avg_bits_err_improve": 0.07679791372396957,
    "time": 22266.017333984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0021009193652572005,
    "avg_bits_err_output": 0.0021009193652572005,
    "avg_bits_err_improve": 0,
    "time": 2423.912841796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.757174470309106,
    "avg_bits_err_output": 9.008280673434946,
    "avg_bits_err_improve": 4.74889379687416,
    "time": 40163.985107421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (exp (- (* x eps) x)) (exp (* x (- -1.0 eps))))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 30.03112156650771,
    "avg_bits_err_output": 0.9045180916804294,
    "avg_bits_err_improve": 29.12660347482728,
    "time": 29787.703857421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0,
    "time": 6422.216064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.015625,
    "avg_bits_err_improve": 0,
    "time": 11953.281982421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- 1.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.0095,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 0.002875,
    "time": 18563.996337890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3640.112060546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2848.463623046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2913.147705078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8371841634018695,
    "avg_bits_err_output": 0.247375,
    "avg_bits_err_improve": 7.58980916340187,
    "time": 67104.45727539062,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.484800959171523,
    "avg_bits_err_output": 7.484800959171523,
    "avg_bits_err_improve": 0,
    "time": 61054.378662109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.244735096869938,
    "avg_bits_err_output": 16.244735096869938,
    "avg_bits_err_improve": 0,
    "time": 33474.430908203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (/ 1.0 (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (/ 1.0 (exp (* 10.0 (* x x))))))) (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (cos x))) 0.0)",
    "output_parens": 23,
    "avg_bits_err_input": 3.5386042855481405,
    "avg_bits_err_output": 3.539214211345991,
    "avg_bits_err_improve": -0.0006099257978502415,
    "time": 45033.3359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.06648705772956,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.06648705772956,
    "time": 4084.50830078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.12558211302138,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.124832113021384,
    "time": 3958.41162109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.287625,
    "avg_bits_err_improve": 63.712375,
    "time": 3285.267822265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84325561318282,
    "avg_bits_err_output": 0.389712406251803,
    "avg_bits_err_improve": 61.453543206931016,
    "time": 23024.848388671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.39471082197148,
    "avg_bits_err_output": 34.39017948855141,
    "avg_bits_err_improve": 0.004531333420068506,
    "time": 22336.6845703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.19223999182593,
    "avg_bits_err_output": 34.19223999182593,
    "avg_bits_err_improve": 0,
    "time": 22740.336669921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1559.422119140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.9475805527553,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 39.9349555527553,
    "time": 6016.260009765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.49962911266229,
    "avg_bits_err_output": 20.501046593912648,
    "avg_bits_err_improve": -0.0014174812503569,
    "time": 5266.045654296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.672973892985605,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.672973892985605,
    "time": 4660.9521484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.03725,
    "time": 6246.48681640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.024594360937770437,
    "avg_bits_err_output": 0.012,
    "avg_bits_err_improve": 0.012594360937770437,
    "time": 3677.896240234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016875,
    "avg_bits_err_output": 0.015875,
    "avg_bits_err_improve": 0.0010000000000000009,
    "time": 4911.56298828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.001,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.001,
    "time": 2109.812744140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40579285781763874,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 0.16279285781763875,
    "time": 6849.70068359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.059580929313302,
    "avg_bits_err_output": 30.059580929313302,
    "avg_bits_err_improve": 0,
    "time": 223438.91748046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 23.885156494912707,
    "avg_bits_err_output": 23.885156494912707,
    "avg_bits_err_improve": 0,
    "time": 18663.9453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (- x (sin x)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.292814726161268,
    "avg_bits_err_output": 30.292814726161268,
    "avg_bits_err_improve": 0,
    "time": 51660.4248046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006415241011860921,
    "avg_bits_err_output": 0.006415241011860921,
    "avg_bits_err_improve": 0,
    "time": 1633.53759765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.18973041289681,
    "avg_bits_err_output": 26.18973041289681,
    "avg_bits_err_improve": 0,
    "time": 32235.28662109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.389734815961095,
    "avg_bits_err_output": 26.388984815961095,
    "avg_bits_err_improve": 0.0007500000000000284,
    "time": 23824.92822265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03575,
    "avg_bits_err_output": 0.01993080161791619,
    "avg_bits_err_improve": 0.01581919838208381,
    "time": 6734.248291015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (log1p (expm1 (sin (* uy (* 2.0 PI))))) (sqrt (+ (- ux (* ux maxCos)) (- 0.0 (* ux (* (- (fma ux maxCos 1.0) ux) (+ maxCos -1.0)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.63824748318509,
    "avg_bits_err_output": 0.5469729979369651,
    "avg_bits_err_improve": 13.091274485248125,
    "time": 27232.61865234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (- (- (* ux (+ 1.0 (* ux maxCos))) (* ux (* maxCos (+ (* maxCos ux) (- 1.0 ux))))) (* ux ux)) (- (* ux maxCos) ux))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.67436470532853,
    "avg_bits_err_output": 0.3157955788112247,
    "avg_bits_err_improve": 13.358569126517306,
    "time": 38936.88427734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (- (+ (* PI (+ uy uy)) 1.0) 1.0)) xi) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.34068761311264495,
    "avg_bits_err_output": 0.35181033962294694,
    "avg_bits_err_improve": -0.011122726510301995,
    "time": 70509.26025390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.1992922197419501,
    "avg_bits_err_output": 0.19941721974195012,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 20535.15673828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1))))) (/ 1.0 (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 31,
    "avg_bits_err_input": 0.543569304548471,
    "avg_bits_err_output": 0.5396596540260997,
    "avg_bits_err_improve": 0.003909650522371244,
    "time": 86555.953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(- (sqrt (/ u1 (- 1.0 u1))) (* (- 1.0 (cos (* 6.28318530718 u2))) (sqrt (/ u1 (- 1.0 u1)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3151450401005405,
    "avg_bits_err_output": 0.3288504305415999,
    "avg_bits_err_improve": -0.013705390441059395,
    "time": 42583.80517578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (- (exp (log1p (/ PI s))) 1.0)))) (+ (- u) 1.0)))) -1.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.32963404237189015,
    "avg_bits_err_output": 0.33480396737333246,
    "avg_bits_err_improve": -0.00516992500144231,
    "time": 36641.01123046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06665255881401566,
    "avg_bits_err_output": 0.06665255881401566,
    "avg_bits_err_improve": 0,
    "time": 9907.85498046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (+ (expm1 (/ (- (fabs x)) s)) 1.0)) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 18,
    "avg_bits_err_input": 0.16605002735452667,
    "avg_bits_err_output": 0.14721178628527204,
    "avg_bits_err_improve": 0.018838241069254635,
    "time": 34510.063720703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (- (+ (/ (sin (* x PI)) (* x PI)) -1.0) -1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.659869554704408,
    "avg_bits_err_output": 0.6635052152894634,
    "avg_bits_err_improve": -0.003635660585055378,
    "time": 19122.25048828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (- (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) 1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.16408674862765432,
    "avg_bits_err_output": 0.17194003093183344,
    "avg_bits_err_improve": -0.007853282304179116,
    "time": 29532.98193359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.51106599356844,
    "avg_bits_err_output": 2.51106599356844,
    "avg_bits_err_improve": 0,
    "time": 75848.24291992188,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (/ v (/ (* (sinh (/ 1.0 v)) 2.0) v))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.4632674196993997,
    "avg_bits_err_output": 0.48591773217631945,
    "avg_bits_err_improve": -0.02265031247691973,
    "time": 41120.059326171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11598676697993002,
    "avg_bits_err_output": 0.11598676697993002,
    "avg_bits_err_improve": 0,
    "time": 9137.7275390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4787302764106153,
    "avg_bits_err_output": 0.4787302764106153,
    "avg_bits_err_improve": 0,
    "time": 25026.33251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (+ 1.0 (- (+ (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))) -1.0) -1.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 1.3375915294041014,
    "avg_bits_err_output": 1.3529770465492237,
    "avg_bits_err_improve": -0.015385517145122263,
    "time": 61846.443359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.364197765594707,
    "avg_bits_err_output": 12.011793273442352,
    "avg_bits_err_improve": 0.35240449215235436,
    "time": 40285.621826171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* PI (* r (* s 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1322888898725968,
    "avg_bits_err_output": 0.13599060182367678,
    "avg_bits_err_improve": -0.003701711951079989,
    "time": 52716.140869140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8834567869471265,
    "avg_bits_err_output": 0.8877487154007021,
    "avg_bits_err_improve": -0.004291928453575622,
    "time": 60876.89404296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6912347107001349,
    "avg_bits_err_output": 0.47685977657957307,
    "avg_bits_err_improve": 0.2143749341205618,
    "time": 52661.39111328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (+ (+ 1.0 (log (- 1.0 u1))) -1.0))) (sin (- (* PI (* 2.0 (* (/ u2 (* 2.0 PI)) (exp (log1p (* 2.0 PI)))))) (* PI (* 2.0 (/ u2 (* 2.0 PI)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 13.64238750509035,
    "avg_bits_err_output": 13.750236868795215,
    "avg_bits_err_improve": -0.1078493637048652,
    "time": 47847.788818359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* 2.0 (* PI u2))) (log1p (expm1 (fma (cos (* 2.0 (* PI u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (cos (* 2.0 (* PI u2)))) -1.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.697039825434446,
    "avg_bits_err_output": 13.61603384325365,
    "avg_bits_err_improve": 0.08100598218079647,
    "time": 43503.556640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* (* (* alpha alpha) (* alpha alpha)) (/ (log (- 1.0 u0)) (* alpha (- alpha)))) (fma (* alpha (- alpha)) (* alpha alpha) (* (* alpha alpha) (* alpha alpha))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.002637804717528,
    "avg_bits_err_output": 13.719072797158024,
    "avg_bits_err_improve": 0.2835650075595044,
    "time": 34170.5869140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 16,
    "avg_bits_err_input": 12.555530842915715,
    "avg_bits_err_output": 12.556687811048397,
    "avg_bits_err_improve": -0.0011569681326815129,
    "time": 19953.296630859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (log1p (expm1 (tan (* PI l))))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.697940926346046,
    "avg_bits_err_output": 16.86802913731948,
    "avg_bits_err_improve": -0.1700882109734323,
    "time": 48007.39599609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21540127684030846,
    "avg_bits_err_output": 0.21540127684030846,
    "avg_bits_err_improve": 0,
    "time": 28874.32275390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (* (/ F (sin B)) (* (/ F (sin B)) (/ 1.0 (/ F (sin B))))) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 20,
    "avg_bits_err_input": 14.169776114473212,
    "avg_bits_err_output": 14.18683288166279,
    "avg_bits_err_improve": -0.017056767189577826,
    "time": 51379.205078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.24436236411623,
    "avg_bits_err_output": 2.002529627025709,
    "avg_bits_err_improve": 59.24183273709052,
    "time": 73922.08715820312,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.7e-160) (/ (fma t (sqrt 2.0) (fma (- (sqrt 2.0)) (- t) (* t (- (sqrt 2.0))))) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 2.2e-165) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 59,
    "avg_bits_err_input": 43.24177929978166,
    "avg_bits_err_output": 36.302110284950274,
    "avg_bits_err_improve": 6.939669014831388,
    "time": 34456.99072265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(fma (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (* (sin th) (exp (log1p (/ (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))) (- (* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))))",
    "output_parens": 41,
    "avg_bits_err_input": 3.953121431623882,
    "avg_bits_err_output": 4.0071971983238415,
    "avg_bits_err_improve": -0.054075766699959615,
    "time": 62454.189697265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.1960248549434027,
    "avg_bits_err_output": 1.1960248549434027,
    "avg_bits_err_improve": 0,
    "time": 9264.253662109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e-161) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))) (* 2.0 n)))) (sqrt (- (* (* (* U n) -2.0) (- (* 2.0 (/ (* l l) Om)) t)) (* (- U U*) (/ (* n (* (pow (/ l Om) 2.0) (* U (+ n n)))) 1.0)))))",
    "output_parens": 48,
    "avg_bits_err_input": 34.87608845753049,
    "avg_bits_err_output": 32.007033251820786,
    "avg_bits_err_improve": 2.8690552057097065,
    "time": 26202.9912109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -6.6e-100) (/ 2.0 (* (sin k) (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (exp (log1p (/ (pow t 3.0) (* l l)))) (* (tan k) (sin k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.433712742115276,
    "avg_bits_err_output": 38.40953908268651,
    "avg_bits_err_improve": 9.024173659428769,
    "time": 67873.80981445312,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.875653945299014,
    "avg_bits_err_output": 32.84559241541693,
    "avg_bits_err_improve": 0.030061529882082993,
    "time": 41142.59716796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (fma a1 a1 (* a2 a2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5192069578349481,
    "avg_bits_err_output": 0.5172375968971776,
    "avg_bits_err_improve": 0.001969360937770448,
    "time": 35320.833251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* PI (* (+ n n) (/ (/ n n) PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5133391902296772,
    "avg_bits_err_output": 0.5170634067758805,
    "avg_bits_err_improve": -0.0037242165462032517,
    "time": 35891.652587890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp (- l)) (* (cos (/ K 2.0)) (- J)) (* (exp l) (* J (cos (/ K 2.0))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.536522096306445,
    "avg_bits_err_output": 17.53847605304002,
    "avg_bits_err_improve": -0.0019539567335762342,
    "time": 36670.500244140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -7.2e+133) (* (cos (- (/ (fma (* K (* (fma (* K (/ (/ (/ (/ (+ m n) K) K) K) K)) K 0.0) K)) K 0.0) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 5e+80) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (log1p (expm1 (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))) (* (cos (- (/ (fma (* K (* (- (* (exp (log1p (/ (/ (/ (+ m n) K) K) K))) K) K) K)) K 0.0) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 68,
    "avg_bits_err_input": 15.244949337409441,
    "avg_bits_err_output": 3.79118928631486,
    "avg_bits_err_improve": 11.45376005109458,
    "time": 29115.5380859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.66936560156295,
    "avg_bits_err_output": 17.66936560156295,
    "avg_bits_err_improve": 0,
    "time": 37194.77490234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.942765264523583,
    "avg_bits_err_output": 13.942765264523583,
    "avg_bits_err_improve": 0,
    "time": 33311.10107421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.754043750378862,
    "avg_bits_err_output": 19.754043750378862,
    "avg_bits_err_improve": 0,
    "time": 32876.54248046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (* (/ (* d (* c0 d)) (* D (* w (* D h)))) (/ (* d (* c0 d)) (* D (* w (* D h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.414281227251884,
    "avg_bits_err_output": 56.18695043677531,
    "avg_bits_err_improve": 3.2273307904765716,
    "time": 35923.629150390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d h) 0.5) (* (- 1.0 (* 0.5 (* (/ h l) (pow (/ (* M D) (* d 2.0)) 2.0)))) (pow (/ d l) 0.5)))",
    "output_parens": 14,
    "avg_bits_err_input": 26.216037983146116,
    "avg_bits_err_output": 26.334923949426422,
    "avg_bits_err_improve": -0.11888596628030612,
    "time": 43553.602783203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (- (sqrt (- 2.0 (* v (* v 6.0)))) 0.0) (+ 3.0 (* v (* v -3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9828202803030276,
    "avg_bits_err_output": 0.012021240625180288,
    "avg_bits_err_improve": 0.9707990396778473,
    "time": 16949.63720703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4362961123149945,
    "avg_bits_err_output": 0.36338604400077523,
    "avg_bits_err_improve": 0.07291006831421926,
    "time": 54954.706787109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01322491020269024,
    "avg_bits_err_output": 0.01339624062518029,
    "avg_bits_err_improve": -0.00017133042249004894,
    "time": 14033.341064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5586795959272463,
    "avg_bits_err_output": 0.5586795959272463,
    "avg_bits_err_improve": 0,
    "time": 23536.60498046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8344327472608766,
    "avg_bits_err_output": 1.8258596269482863,
    "avg_bits_err_improve": 0.008573120312590277,
    "time": 90074.23706054688,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02622911122411479,
    "avg_bits_err_output": 0.02622911122411479,
    "avg_bits_err_improve": 0,
    "time": 6738.18701171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(fma b (* b 4.0) (+ (pow (fma a a (* b b)) 2.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.17661109062806482,
    "avg_bits_err_output": 0.17646485000288456,
    "avg_bits_err_improve": 0.0001462406251802606,
    "time": 4369.09912109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1904976065326843,
    "avg_bits_err_output": 0.1904976065326843,
    "avg_bits_err_improve": 0,
    "time": 7896.697509765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18888481622889675,
    "avg_bits_err_output": 0.18888481622889675,
    "avg_bits_err_improve": 0,
    "time": 10575.9853515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(log (+ 1.0 (expm1 (sqrt (+ (* (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.5) 0.5)))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.998031364856104,
    "avg_bits_err_output": 13.008591621815205,
    "avg_bits_err_improve": -0.010560256959101011,
    "time": 16229.9521484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (* (* (expm1 x) (/ 1.0 (expm1 x))) (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 40.94225197430117,
    "avg_bits_err_output": 0.07212458722997718,
    "avg_bits_err_improve": 40.87012738707119,
    "time": 7375.688232421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log (exp (/ (- x (sin x)) (- x (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 31.00025058020758,
    "avg_bits_err_output": 31.00331727528149,
    "avg_bits_err_improve": -0.003066695073908221,
    "time": 51174.783447265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c))))) b_2) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.10190090268774,
    "avg_bits_err_output": 34.11317214331292,
    "avg_bits_err_improve": -0.011271240625184475,
    "time": 16994.336669921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.40190670582469,
    "avg_bits_err_output": 34.40190670582469,
    "avg_bits_err_improve": 0,
    "time": 17713.40478515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (fma (cos x) (- 1.0 (cos x)) (- (- 1.0 (* (cos x) (- 1.0 (cos x)))) (cos x))) (* x x))",
    "output_parens": 13,
    "avg_bits_err_input": 31.351370300103493,
    "avg_bits_err_output": 31.397413401109088,
    "avg_bits_err_improve": -0.04604310100559417,
    "time": 33935.212646484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (expm1 (log1p (pow (+ x 1.0) (/ 1.0 n)))) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 33.09710080445001,
    "avg_bits_err_output": 33.11397655460781,
    "avg_bits_err_improve": -0.016875750157801406,
    "time": 78249.4609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (* -1.0 (log (expm1 (log1p (exp (+ (log N) (- 1.0 (log1p N)))))))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 29.461923562613176,
    "avg_bits_err_output": 29.458754616525177,
    "avg_bits_err_improve": 0.003168946087999558,
    "time": 30444.994140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.989250107322736,
    "avg_bits_err_output": 14.989250107322736,
    "avg_bits_err_improve": 0,
    "time": 54080.064208984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (+ (cos (+ x eps)) (- 1.0 (cos x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 39.667621311749734,
    "avg_bits_err_output": 39.69317234958454,
    "avg_bits_err_improve": -0.025551037834809165,
    "time": 49804.68310546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.80329868934751,
    "avg_bits_err_output": 29.50163538960708,
    "avg_bits_err_improve": 0.3016632997404294,
    "time": 22539.866455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.524368888568375,
    "avg_bits_err_output": 30.529593087117284,
    "avg_bits_err_improve": -0.005224198548908987,
    "time": 77096.71020507812,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (+ (* c (* a -4.0)) (* b b)))) (* 2.0 a))",
    "output_parens": 10,
    "avg_bits_err_input": 33.99866586007448,
    "avg_bits_err_output": 34.1372099913955,
    "avg_bits_err_improve": -0.1385441313210194,
    "time": 20822.40869140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.516884818183726,
    "avg_bits_err_output": 34.516884818183726,
    "avg_bits_err_improve": 0,
    "time": 23494.041259765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.99998) (/ (log (- 1.0 x)) (log (+ 1.0 x))) (/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x)))",
    "output_parens": 18,
    "avg_bits_err_input": 61.15650823780998,
    "avg_bits_err_output": 59.27677956407711,
    "avg_bits_err_improve": 1.8797286737328704,
    "time": 17067.081298828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.00680280572232,
    "avg_bits_err_output": 0.5669481134048123,
    "avg_bits_err_improve": 62.43985469231751,
    "time": 31716.23193359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.77462370524597,
    "avg_bits_err_output": 58.78065534821688,
    "avg_bits_err_improve": -0.006031642970910411,
    "time": 262819.5949707031,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (- -1.0 (/ 1.0 (tan x))) (- (* (/ 1.0 (- -1.0 (/ 1.0 (tan x)))) (- (/ 1.0 (tan x)))) (/ 1.0 (- -1.0 (/ 1.0 (tan x))))) (+ 1.0 (/ 1.0 x)))",
    "output_parens": 19,
    "avg_bits_err_input": 59.95306982695454,
    "avg_bits_err_output": 60.03893284079284,
    "avg_bits_err_improve": -0.0858630138382992,
    "time": 56712.337646484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.128964569987595,
    "avg_bits_err_output": 41.25169560302376,
    "avg_bits_err_improve": 18.877268966963832,
    "time": 31982.363525390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.33835830818711,
    "avg_bits_err_output": 0.405,
    "avg_bits_err_improve": 40.93335830818711,
    "time": 14397.10302734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.77604677655998,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.77529677655998,
    "time": 4734.451171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.492312971654627,
    "avg_bits_err_output": 0.024869335871256167,
    "avg_bits_err_improve": 29.467443635783372,
    "time": 5138.052734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.160152882582313,
    "avg_bits_err_output": 29.16280466329008,
    "avg_bits_err_improve": 0.9973482192922347,
    "time": 36044.2158203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.983138448054993,
    "avg_bits_err_output": 9.983138448054993,
    "avg_bits_err_improve": 0,
    "time": 50108.32080078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (* (tan (+ x eps)) (* (tan (+ x eps)) (/ 1.0 (tan (+ x eps))))) (tan x))",
    "output_parens": 11,
    "avg_bits_err_input": 37.213770144703545,
    "avg_bits_err_output": 37.27436393542496,
    "avg_bits_err_improve": -0.06059379072141269,
    "time": 39350.549072265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (+ 1.0 (sqrt (- x -1.0)))) (+ (+ (- (sqrt (- x -1.0)) (sqrt x)) (* (/ 1.0 (+ 1.0 (sqrt (- x -1.0)))) (- -1.0 (sqrt (- x -1.0))))) (* (sqrt (- x -1.0)) (/ 1.0 (+ 1.0 (sqrt (- x -1.0)))))))",
    "output_parens": 26,
    "avg_bits_err_input": 30.254410173334666,
    "avg_bits_err_output": 25.82394169427107,
    "avg_bits_err_improve": 4.430468479063595,
    "time": 39411.779296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.9918538104059,
    "avg_bits_err_output": 36.9918538104059,
    "avg_bits_err_improve": 0,
    "time": 39020.662109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(+ (- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ 1.0 x)))) (* (fma (/ 1.0 (sqrt (+ x 1.0))) (/ -1.0 (/ 1.0 (sqrt (+ x 1.0)))) 1.0) (- (* (/ (/ 1.0 (sqrt (+ x 1.0))) (/ 1.0 (sqrt (+ x 1.0)))) (+ 1.0 (/ 1.0 (sqrt (+ x 1.0))))) (/ (/ 1.0 (sqrt (+ x 1.0))) (/ 1.0 (sqrt (+ x 1.0)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 19.508638628069466,
    "avg_bits_err_output": 19.454399027906167,
    "avg_bits_err_improve": 0.05423960016329943,
    "time": 57170.2255859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ N 1.0)) (- -1.0 (atan N))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 14.915952475671583,
    "avg_bits_err_output": 14.914859378269574,
    "avg_bits_err_improve": 0.0010930974020091355,
    "time": 60259.831787109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.2586342510356,
    "avg_bits_err_output": 30.2586342510356,
    "avg_bits_err_improve": 0,
    "time": 63428.183837890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(fma (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0) (fma (- (/ (- m (* m m)) v)) (+ m -1.0) (* (/ (- m (* m m)) v) (+ m -1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.07949080507553279,
    "avg_bits_err_output": 0.09477507493184287,
    "avg_bits_err_improve": -0.015284269856310082,
    "time": 33227.20703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.385552720969105,
    "avg_bits_err_output": 0.3090003765672777,
    "avg_bits_err_improve": 16.07655234440183,
    "time": 18384.048583984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (* PI (* (/ (/ angle 180.0) PI) (* (/ (/ angle 180.0) PI) (/ 1.0 (log1p (expm1 (/ (/ angle 180.0) PI))))))) PI 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.039304238767144,
    "avg_bits_err_output": 20.136624791220264,
    "avg_bits_err_improve": -0.09732055245311955,
    "time": 71531.4375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (log1p (expm1 (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.154669206096404,
    "avg_bits_err_output": 31.155033940099894,
    "avg_bits_err_improve": -0.0003647340034902413,
    "time": 55089.719482421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* (/ angle 180.0) (* PI PI))))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.483593051521456,
    "avg_bits_err_output": 20.471149136118484,
    "avg_bits_err_improve": 0.012443915402972294,
    "time": 74760.22119140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17922236042698106,
    "avg_bits_err_output": 0.1786016481333793,
    "avg_bits_err_improve": 0.0006207122936017495,
    "time": 30098.571044921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.30791094300227856,
    "avg_bits_err_output": 0.31057759268006224,
    "avg_bits_err_improve": -0.0026666496777836834,
    "time": 26585.69970703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13743872187554088,
    "avg_bits_err_output": 0.13743872187554088,
    "avg_bits_err_improve": 0,
    "time": 44689.119140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.21888736549553,
    "avg_bits_err_output": 17.216134354192377,
    "avg_bits_err_improve": 0.0027530113031524195,
    "time": 46115.30419921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.6e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (* (fma b b (* c (* a -4.0))) (/ 1.0 (fma b b (* c (* a -4.0)))))))) (- b)) (+ a a)) (/ (- (- (- (sqrt (fma b b (* a (* c -4.0)))) -1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.45237299224613,
    "avg_bits_err_output": 50.42314907396207,
    "avg_bits_err_improve": 2.0292239182840603,
    "time": 41888.818115234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (/ 1.0 (fma b b (* a (* c -4.0))))))) b) (+ a a))",
    "output_parens": 16,
    "avg_bits_err_input": 28.379383801467668,
    "avg_bits_err_output": 28.36744121921523,
    "avg_bits_err_improve": 0.011942582252437717,
    "time": 28163.513427734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 43.97590902782919,
    "avg_bits_err_output": 43.25252258206966,
    "avg_bits_err_improve": 0.7233864457595303,
    "time": 21837.21826171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (+ (* b b) (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.99914084391831,
    "avg_bits_err_output": 34.13674367081144,
    "avg_bits_err_improve": -0.1376028268931293,
    "time": 19951.397705078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (* (* (sin (- lambda1 lambda2)) (/ 1.0 (sin (- lambda1 lambda2)))) (sin (- lambda1 lambda2)))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.8633101713535926,
    "avg_bits_err_output": 0.8856084529092741,
    "avg_bits_err_improve": -0.022298281555681587,
    "time": 31808.12255859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.561451474339556,
    "avg_bits_err_output": 29.561451474339556,
    "avg_bits_err_improve": 0,
    "time": 8230.08544921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (- (+ (exp x) (expm1 (- x))) -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 58.20251103404985,
    "avg_bits_err_output": 1.1873986843762623,
    "avg_bits_err_improve": 57.015112349673586,
    "time": 20956.854736328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.131545867547196,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.12417086754719,
    "time": 7024.810302734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009271240625180288,
    "avg_bits_err_output": 0.009271240625180288,
    "avg_bits_err_improve": 0,
    "time": 2610.7431640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.51375,
    "avg_bits_err_output": 31.51375,
    "avg_bits_err_improve": 0,
    "time": 6834.266845703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.01075,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 4808.35791015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.129375,
    "avg_bits_err_output": 0.1297712406251803,
    "avg_bits_err_improve": -0.00039624062518031633,
    "time": 37358.2294921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* eh (* (sin (atan (/ (* (- eh) (tan t)) ew))) (sin t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12587595881547559,
    "avg_bits_err_output": 0.1257509588154756,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 31976.543701171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.35066410203863,
    "avg_bits_err_output": 3.7905688609331434,
    "avg_bits_err_improve": 35.560095241105486,
    "time": 64688.313232421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.618058391079979,
    "avg_bits_err_output": 14.618058391079979,
    "avg_bits_err_improve": 0,
    "time": 5299.053466796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (/ (fma (sin phi1) (sin (asin (fma (cos phi1) (* (sin delta) (cos theta)) (* (sin phi1) (cos delta))))) (- (cos delta))) 1.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.15662077084698975,
    "avg_bits_err_output": 0.15503329828578416,
    "avg_bits_err_improve": 0.0015874725612055884,
    "time": 47125.414306640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.7e+16) (/ (fma (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (fma (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (/ (/ 1.0 (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) 0.0)) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (+ (* b b) (* a (* c -3.0)))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 55,
    "avg_bits_err_input": 52.47411886526256,
    "avg_bits_err_output": 50.45829885517688,
    "avg_bits_err_improve": 2.015820010085683,
    "time": 32274.155029296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.58994764020808,
    "avg_bits_err_output": 28.576709893184606,
    "avg_bits_err_improve": 0.013237747023474356,
    "time": 26002.47509765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma b b (* -3.0 (* c a)))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 44.01911326624868,
    "avg_bits_err_output": 43.25151513062899,
    "avg_bits_err_improve": 0.7675981356196928,
    "time": 28086.807373046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.031625337564016,
    "avg_bits_err_output": 34.031625337564016,
    "avg_bits_err_improve": 0,
    "time": 21866.37060546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (/ (sin (- lambda1 lambda2)) (cos phi2)) (* (cos phi2) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.194486882436959,
    "avg_bits_err_output": 13.21042497617353,
    "avg_bits_err_improve": -0.015938093736570735,
    "time": 64297.822021484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 0,
    "time": 4487.405517578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (fma (/ 1.0 (+ -1.0 x)) (- (/ 1.0 (+ -1.0 x))) (fma (- (/ 1.0 (+ -1.0 x))) (/ 1.0 (+ -1.0 x)) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x))))) (- (- (/ 1.0 (+ -1.0 x))) (- (* (/ 1.0 (+ -1.0 x)) (- (/ 1.0 (+ -1.0 x)))) (/ 1.0 (+ 1.0 x)))))",
    "output_parens": 31,
    "avg_bits_err_input": 14.85230374844709,
    "avg_bits_err_output": 12.920071113943383,
    "avg_bits_err_improve": 1.9322326345037073,
    "time": 59528.108642578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* 2.0 (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* A (* 4.0 C))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.566082583251784,
    "avg_bits_err_output": 52.25867696688585,
    "avg_bits_err_improve": 0.30740561636593355,
    "time": 34635.801025390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.75221806948308,
    "avg_bits_err_output": 29.75221806948308,
    "avg_bits_err_improve": 0,
    "time": 44454.508056640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.30050522129833,
    "avg_bits_err_output": 52.01729605910263,
    "avg_bits_err_improve": 0.28320916219570336,
    "time": 34851.30419921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.34486327965288,
    "avg_bits_err_output": 15.34486327965288,
    "avg_bits_err_improve": 0,
    "time": 1693.96484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (+ (sqrt (* (- g h) (+ g h))) (- (* (sqrt (* (- g h) (+ g h))) -2.0) g)))))",
    "output_parens": 25,
    "avg_bits_err_input": 35.23042539824691,
    "avg_bits_err_output": 35.233418357159984,
    "avg_bits_err_improve": -0.002992958913075938,
    "time": 24816.488525390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9899345875079336,
    "avg_bits_err_output": 0.9899345875079336,
    "avg_bits_err_improve": 0,
    "time": 5477.465087890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (+ (expm1 a) (expm1 b)) 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.7018656015629509,
    "avg_bits_err_output": 0.820292378612163,
    "avg_bits_err_improve": -0.11842677704921212,
    "time": 5014.331298828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.147461439121788,
    "avg_bits_err_output": 11.147461439121788,
    "avg_bits_err_improve": 0,
    "time": 31032.756591796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (* x y) (- (* y (+ x x)) (log1p (exp x))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.44698812628009865,
    "avg_bits_err_output": 0.4339364816370412,
    "avg_bits_err_improve": 0.01305164464305747,
    "time": 15862.40283203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.36214296657906,
    "avg_bits_err_output": 15.936120453197441,
    "avg_bits_err_improve": 37.42602251338162,
    "time": 38749.637451171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.716441266604496,
    "avg_bits_err_output": 5.716753145067938,
    "avg_bits_err_improve": -0.00031187846344149506,
    "time": 31926.32275390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.010875,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 0.002749999999999999,
    "time": 6229.923095703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1166.273681640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 2e+64) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* w r)))) (- 1.0 v)))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v)))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.010359042811723,
    "avg_bits_err_output": 6.6221960531287785,
    "avg_bits_err_improve": 6.388162989682945,
    "time": 37723.424072265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (+ (* (+ (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) -3.0) (* x1 (* (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) 2.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0)))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5076809803471464,
    "avg_bits_err_output": 0.27613296172426094,
    "avg_bits_err_improve": 0.23154801862288543,
    "time": 71912.81103515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.241386591681053,
    "avg_bits_err_output": 18.241386591681053,
    "avg_bits_err_improve": 0,
    "time": 48353.68505859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- x (* x (+ (* 0.12900613773279798 (* x x)) 0.045070341448628)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2251156015629507,
    "avg_bits_err_output": 0.1145755640636719,
    "avg_bits_err_improve": 0.1105400374992788,
    "time": 27771.759765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003948120312590144,
    "avg_bits_err_output": 0.003948120312590144,
    "avg_bits_err_improve": 0,
    "time": 2080.666259765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.104115558514566,
    "avg_bits_err_output": 9.164952761253751,
    "avg_bits_err_improve": 4.939162797260815,
    "time": 47683.256103515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- 1.0 (- (- (* eps x) -1.0) (- x)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 29.48144291384505,
    "avg_bits_err_output": 0.9077063365651946,
    "avg_bits_err_improve": 28.573736577279856,
    "time": 30311.747314453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01225,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0,
    "time": 7421.6025390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.0155,
    "avg_bits_err_output": 0.017073120312590145,
    "avg_bits_err_improve": -0.0015731203125901455,
    "time": 27714.31201171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (* (- -1.0 (/ (+ t t) (+ 1.0 t))) (+ (/ (+ t t) (+ 1.0 t)) -1.0)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.07075,
    "avg_bits_err_output": 0.07357556406367184,
    "avg_bits_err_improve": -0.002825564063671848,
    "time": 24173.564208984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3028.4765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3206.37255859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3229.4365234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.814598372922784,
    "avg_bits_err_output": 0.25275,
    "avg_bits_err_improve": 7.5618483729227846,
    "time": 58519.381591796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.403162216803511,
    "avg_bits_err_output": 7.403162216803511,
    "avg_bits_err_improve": 0,
    "time": 45458.78125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.029201965016785,
    "avg_bits_err_output": 16.029201965016785,
    "avg_bits_err_improve": 0,
    "time": 24201.876953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (exp (* 10.0 (* x x))) (log1p (expm1 (* (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (/ 1.0 (exp (* 10.0 (* x x)))))) (/ (cos x) (exp (* 10.0 (* x x))))))) 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 3.552710306718202,
    "avg_bits_err_output": 3.5526177116350683,
    "avg_bits_err_improve": 9.259508313386178e-05,
    "time": 38012.078369140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.593630075264166,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.593630075264166,
    "time": 3839.068359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.00222041175863,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 39.00134541175863,
    "time": 5093.529541015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.290875,
    "avg_bits_err_improve": 63.709125,
    "time": 3287.82666015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* t 4e-32)) (- (* (* (/ 1.0 (* t (* t 4e-32))) (* t t)) -4e-32)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.8432554647147,
    "avg_bits_err_output": 0.35799342188131017,
    "avg_bits_err_improve": 61.48526204283339,
    "time": 21430.41748046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.516884818183726,
    "avg_bits_err_output": 34.516884818183726,
    "avg_bits_err_improve": 0,
    "time": 22688.538818359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (+ (* b b) (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.99914084391831,
    "avg_bits_err_output": 34.13674367081144,
    "avg_bits_err_improve": -0.1376028268931293,
    "time": 20988.14990234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1530.282958984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.88220275472192,
    "avg_bits_err_output": 0.018375,
    "avg_bits_err_improve": 39.86382775472192,
    "time": 4567.5478515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.660100310055522,
    "avg_bits_err_output": 20.660100310055522,
    "avg_bits_err_improve": 0,
    "time": 2719.935546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.675222906064817,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.675222906064817,
    "time": 4621.15966796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.039625,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03875,
    "time": 7837.598876953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma (+ a b) b (* a (+ a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.022073120312590146,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0.011198120312590147,
    "time": 4311.080078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01275,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": -0.0008750000000000008,
    "time": 5285.879150390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1758.015380859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ a (+ d (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40046033906799905,
    "avg_bits_err_output": 0.2525,
    "avg_bits_err_improve": 0.14796033906799905,
    "time": 8000.5673828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.882990703357898,
    "avg_bits_err_output": 29.882990703357898,
    "avg_bits_err_improve": 0,
    "time": 148655.74291992188,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.225150136310525,
    "avg_bits_err_output": 24.222525229119885,
    "avg_bits_err_improve": 0.0026249071906399024,
    "time": 15765.7236328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.003921320546326,
    "avg_bits_err_output": 30.016699929535033,
    "avg_bits_err_improve": -0.012778608988707418,
    "time": 80376.76977539062,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007573120312590144,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006448120312590144,
    "time": 2935.38916015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* b d) (* a c)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.152970838189805,
    "avg_bits_err_output": 26.152272717877214,
    "avg_bits_err_improve": 0.0006981203125917546,
    "time": 35055.334716796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* a (- d))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.438523611620948,
    "avg_bits_err_output": 26.43802361162095,
    "avg_bits_err_improve": 0.0004999999999988347,
    "time": 19172.4697265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033125,
    "avg_bits_err_output": 0.020360521314888556,
    "avg_bits_err_improve": 0.012764478685111446,
    "time": 21409.6455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (* (* ux (- (- 1.0 ux) (fma maxCos (- (fma ux maxCos (- 2.0 ux)) ux) -1.0))) (* (* ux (- (- 1.0 ux) (fma maxCos (- (fma ux maxCos (- 2.0 ux)) ux) -1.0))) (/ 1.0 (* ux (- (- 1.0 ux) (fma maxCos (- (fma ux maxCos (- 2.0 ux)) ux) -1.0))))))))",
    "output_parens": 29,
    "avg_bits_err_input": 13.686185619014726,
    "avg_bits_err_output": 0.5401439957248784,
    "avg_bits_err_improve": 13.146041623289847,
    "time": 41057.484619140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(fma (cos (* 2.0 (* uy PI))) (* (cos (* 2.0 (* uy PI))) (/ (sqrt (* ux (- (* ux maxCos) (+ ux (fma maxCos (- (fma ux maxCos 2.0) ux) -2.0))))) (cos (* 2.0 (* uy PI))))) 0.0)",
    "output_parens": 20,
    "avg_bits_err_input": 13.724063613141345,
    "avg_bits_err_output": 0.340743419423257,
    "avg_bits_err_improve": 13.383320193718088,
    "time": 44624.12353515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* 2.0 (* PI uy))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* 2.0 (* PI uy)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3372387253491264,
    "avg_bits_err_output": 0.3266367116333982,
    "avg_bits_err_improve": 0.01060201371572822,
    "time": 85177.96264648438,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20894844765789308,
    "avg_bits_err_output": 0.2090215679704832,
    "avg_bits_err_improve": -7.31203125901303e-05,
    "time": 20305.351806640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5538096882505927,
    "avg_bits_err_output": 0.49422504650558363,
    "avg_bits_err_improve": 0.059584641745009104,
    "time": 92820.62817382812,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* u2 (* 6.28318530718 (* u2 (/ 1.0 u2))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3207886334593113,
    "avg_bits_err_output": 0.32738246910283086,
    "avg_bits_err_improve": -0.006593835643519563,
    "time": 40058.362060546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3318218683702057,
    "avg_bits_err_output": 0.3328218683702057,
    "avg_bits_err_improve": -0.0010000000000000009,
    "time": 40131.974365234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05961664007037485,
    "avg_bits_err_output": 0.06060703812074351,
    "avg_bits_err_improve": -0.0009903980503686571,
    "time": 12287.7763671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12713487757054245,
    "avg_bits_err_output": 0.10970198442709136,
    "avg_bits_err_improve": 0.01743289314345109,
    "time": 19151.61962890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6635499846456265,
    "avg_bits_err_output": 0.6635499846456265,
    "avg_bits_err_improve": 0,
    "time": 17938.037841796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (* (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) (* (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) (/ 1.0 (log (- u (* (exp (/ -2.0 v)) (+ u -1.0))))))) 1.0)",
    "output_parens": 22,
    "avg_bits_err_input": 0.161460654199401,
    "avg_bits_err_output": 0.15943018739318923,
    "avg_bits_err_improve": 0.0020304668062117726,
    "time": 30948.660400390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5778873774689015,
    "avg_bits_err_output": 2.5778873774689015,
    "avg_bits_err_improve": 0,
    "time": 59325.29052734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (/ v v)) (* (/ v (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (/ v v))) (* v (/ (* (sinh (/ 1.0 v)) 2.0) v)))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.45413552700512566,
    "avg_bits_err_output": 0.4861763318457826,
    "avg_bits_err_improve": -0.03204080484065697,
    "time": 41306.36083984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11152254660054957,
    "avg_bits_err_output": 0.11152254660054957,
    "avg_bits_err_improve": 0,
    "time": 13764.01708984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4718355008318359,
    "avg_bits_err_output": 0.4718355008318359,
    "avg_bits_err_improve": 0,
    "time": 34209.509033203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(+ (* -3.0 (- (* s (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))))))) (fma (- s) 3.0 (* s 3.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 1.3317612159065804,
    "avg_bits_err_output": 1.4272735566038688,
    "avg_bits_err_improve": -0.09551234069728842,
    "time": 52405.068359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.37033347220054,
    "avg_bits_err_output": 11.97120085816872,
    "avg_bits_err_improve": 0.39913261403182076,
    "time": 76615.51220703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1504416214531113,
    "avg_bits_err_output": 0.15108786207829158,
    "avg_bits_err_improve": -0.0006462406251802888,
    "time": 106952.111328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9471200880812249,
    "avg_bits_err_output": 0.9349642969878601,
    "avg_bits_err_improve": 0.012155791093364843,
    "time": 52621.085693359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (* (/ 1.0 (sqrt PI)) (fma (/ (/ (/ 1.0 (sqrt PI)) (/ 1.0 (sqrt PI))) (/ 1.0 (sqrt PI))) (- (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.7033159359408594,
    "avg_bits_err_output": 0.7408915547063241,
    "avg_bits_err_improve": -0.03757561876546467,
    "time": 59077.6123046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* u2 (* PI (* u2 (/ 2.0 u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.689376373062071,
    "avg_bits_err_output": 13.692161526667785,
    "avg_bits_err_improve": -0.0027851536057141857,
    "time": 47117.000732421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(- (* (cos (* 2.0 (* PI u2))) (exp (log1p (sqrt (- (log (- 1.0 u1))))))) (cos (* 2.0 (* (/ PI u2) (* u2 u2)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.735547786346128,
    "avg_bits_err_output": 13.789572254917921,
    "avg_bits_err_improve": -0.054024468571792994,
    "time": 40056.569091796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* (/ (log (- 1.0 u0)) (* alpha (- alpha))) (* alpha (* alpha (* alpha alpha)))) (fma (- (* (* alpha (- alpha)) (/ alpha (* alpha (- alpha))))) (* alpha (- alpha)) (* (* alpha alpha) (- alpha))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.959537248136943,
    "avg_bits_err_output": 13.589407581133548,
    "avg_bits_err_improve": 0.3701296670033951,
    "time": 40956.70654296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.729088581998798,
    "avg_bits_err_output": 12.731837734305724,
    "avg_bits_err_improve": -0.0027491523069258506,
    "time": 26151.08642578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (* l (- (- (/ PI l) 1.0) -1.0)) 0.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.981408703704858,
    "avg_bits_err_output": 12.929143318974345,
    "avg_bits_err_improve": 4.052265384730513,
    "time": 40631.424560546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2161770831999919,
    "avg_bits_err_output": 0.2131156015629507,
    "avg_bits_err_improve": 0.0030614816370412024,
    "time": 31570.050048828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.600603606515639,
    "avg_bits_err_output": 13.591936125265276,
    "avg_bits_err_improve": 0.008667481250363096,
    "time": 38078.966796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.35017041931623,
    "avg_bits_err_output": 2.018197154794353,
    "avg_bits_err_improve": 59.33197326452188,
    "time": 68989.09057617188,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.8e-145) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 2.8e-53) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (/ (fma t (* t (/ (sqrt 2.0) t)) 0.0) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 55,
    "avg_bits_err_input": 43.45845029640257,
    "avg_bits_err_output": 36.63670812036208,
    "avg_bits_err_improve": 6.8217421760404875,
    "time": 45359.589111328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.052084893928113,
    "avg_bits_err_output": 4.052084893928113,
    "avg_bits_err_improve": 0,
    "time": 54324.733154296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0803795705210955,
    "avg_bits_err_output": 1.0803795705210955,
    "avg_bits_err_improve": 0,
    "time": 9645.800048828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 43,
    "avg_bits_err_input": 34.06067149106098,
    "avg_bits_err_output": 31.35457130602274,
    "avg_bits_err_improve": 2.7061001850382382,
    "time": 40049.005126953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.95e-108) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (+ (fma (tan k) (* (tan k) (sin k)) (* (sin k) (* (tan k) (- (tan k))))) (* (/ (pow (/ k t) 2.0) (tan k)) (* (sin k) (* (tan k) (tan k))))))) (if (<= t 1.75e-50) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (tan k) (- (sin k)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (+ (fma (tan k) (* (tan k) (sin k)) (* (sin k) (* (tan k) (- (tan k))))) (* (/ (pow (/ k t) 2.0) (tan k)) (* (sin k) (* (tan k) (tan k)))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 47.43296114968898,
    "avg_bits_err_output": 35.71616401778522,
    "avg_bits_err_improve": 11.71679713190376,
    "time": 81078.55078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+212) (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) (/ 2.0 (* (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))))) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))))",
    "output_parens": 47,
    "avg_bits_err_input": 32.220085978087475,
    "avg_bits_err_output": 30.23358437527158,
    "avg_bits_err_improve": 1.9865016028158955,
    "time": 63115.625732421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(- (* (/ (cos th) (sqrt 2.0)) (* a2 a2)) (* (- a1) (* a1 (/ (cos th) (sqrt 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5379875968971776,
    "avg_bits_err_output": 0.5254806422112102,
    "avg_bits_err_improve": 0.012506954685967409,
    "time": 48502.829345703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (+ (- (* 2.0 (* n PI)) n) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5094101744730215,
    "avg_bits_err_output": 0.5093092110748304,
    "avg_bits_err_improve": 0.00010096339819110067,
    "time": 46684.1015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp l) (* (/ J (exp l)) (* (exp l) (cos (/ K 2.0)))) (* (exp (- l)) (* J (- (cos (/ K 2.0)))))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.457157721169843,
    "avg_bits_err_output": 17.465405188951966,
    "avg_bits_err_improve": -0.008247467782123152,
    "time": 48347.96826171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.580029875800928,
    "avg_bits_err_output": 15.580029875800928,
    "avg_bits_err_improve": 0,
    "time": 10740.04150390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.476386842188134,
    "avg_bits_err_output": 18.476386842188134,
    "avg_bits_err_improve": 0,
    "time": 44121.71142578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.652115268102541,
    "avg_bits_err_output": 13.652115268102541,
    "avg_bits_err_improve": 0,
    "time": 31167.0791015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.48360003408157,
    "avg_bits_err_output": 19.48360003408157,
    "avg_bits_err_improve": 0,
    "time": 34557.835693359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= c0 -1.45e-121) (* (/ c0 (+ w w)) (+ (/ (* c0 (* d d)) (* D (* w (* D h)))) (sqrt (- (* (/ (* c0 (* d d)) (* D (* w (* D h)))) (/ (* c0 (* d d)) (* D (* w (* D h))))) (* M M))))) (if (<= c0 4.2e-285) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* w (* D (* D h)))) (sqrt (* (- (/ (* d (* d c0)) (* w (* (* D D) h))) M) (+ (/ (* d (* d c0)) (* w (* (* D D) h))) M))))) (* (/ c0 (+ w w)) (+ (/ (* c0 (* d d)) (* D (* w (* D h)))) (sqrt (- (* (/ (* c0 (* d d)) (* D (* w (* D h)))) (/ (* c0 (* d d)) (* D (* w (* D h))))) (* M M)))))))",
    "output_parens": 82,
    "avg_bits_err_input": 59.29148434905495,
    "avg_bits_err_output": 57.695810028989605,
    "avg_bits_err_improve": 1.595674320065342,
    "time": 44730.609130859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) -1e+230) (- (expm1 (log1p (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)))) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d l) 0.5) (* 0.5 (* (pow (/ d h) 0.5) (/ h l)))))) (- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* (pow (/ d h) 0.5) (* (* (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l))) (pow (/ d l) 0.5)))))",
    "output_parens": 56,
    "avg_bits_err_input": 26.562177345692803,
    "avg_bits_err_output": 26.105430816895495,
    "avg_bits_err_improve": 0.45674652879730715,
    "time": 46656.666015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.733607877400226,
    "avg_bits_err_output": 15.733607877400226,
    "avg_bits_err_improve": 0,
    "time": 201145.5390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (- (* PI (* 3.0 (sqrt (- 2.0 (* v (* v 6.0)))))) (* (* PI (* 3.0 (sqrt (- 2.0 (* v (* v 6.0)))))) (* v v))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.9838443609377705,
    "avg_bits_err_output": 0.012365601562950723,
    "avg_bits_err_improve": 0.9714787593748198,
    "time": 14965.346435546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44108909742812363,
    "avg_bits_err_output": 0.3667823194718666,
    "avg_bits_err_improve": 0.07430677795625701,
    "time": 27369.345947265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012344360937770431,
    "avg_bits_err_output": 0.01189624062518029,
    "avg_bits_err_improve": 0.00044812031259014104,
    "time": 42322.2333984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6181967939153886,
    "avg_bits_err_output": 0.6181967939153886,
    "avg_bits_err_improve": 0,
    "time": 11167.41455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.015190885762199,
    "avg_bits_err_output": 1.9895234045118382,
    "avg_bits_err_improve": 0.025667481250361,
    "time": 15681.064697265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017331650391671637,
    "avg_bits_err_output": 0.017331650391671637,
    "avg_bits_err_improve": 0,
    "time": 6389.46044921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18633289531691705,
    "avg_bits_err_output": 0.18746729375396629,
    "avg_bits_err_improve": -0.0011343984370492388,
    "time": 55523.119140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18874838106592987,
    "avg_bits_err_output": 0.18874838106592987,
    "avg_bits_err_improve": 0,
    "time": 43860.698486328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.1823877602212981,
    "avg_bits_err_output": 0.18204339928352767,
    "avg_bits_err_improve": 0.00034436093777043264,
    "time": 17057.528564453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(+ (+ (sqrt (+ (* (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.5) 0.5)) -1.0) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 13.219543623686569,
    "avg_bits_err_output": 13.219701595953556,
    "avg_bits_err_improve": -0.00015797226698666123,
    "time": 20999.51513671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(exp (log (sqrt (/ (expm1 (+ x x)) (expm1 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.179015890162,
    "avg_bits_err_output": 0.05099796327408242,
    "avg_bits_err_improve": 41.128017926887914,
    "time": 13674.456298828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 7,
    "avg_bits_err_input": 31.90397771703424,
    "avg_bits_err_output": 31.10688009764927,
    "avg_bits_err_improve": 0.7970976193849708,
    "time": 49337.740966796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma (- c) a (* b_2 b_2))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.14185691002886,
    "avg_bits_err_output": 34.141606910028855,
    "avg_bits_err_improve": 0.0002500000000011937,
    "time": 22340.084228515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.84744890084061,
    "avg_bits_err_output": 33.84744890084061,
    "avg_bits_err_improve": 0,
    "time": 15894.445068359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 32.20379012175142,
    "avg_bits_err_output": 32.20379012175142,
    "avg_bits_err_improve": 0,
    "time": 55617.413330078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.25467620735367,
    "avg_bits_err_output": 33.25467620735367,
    "avg_bits_err_improve": 0,
    "time": 31745.2490234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (- (log N)) (+ -2.0 (+ (log1p N) 2.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.486007637322597,
    "avg_bits_err_output": 29.488734537274855,
    "avg_bits_err_improve": -0.002726899952257611,
    "time": 20956.39599609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (+ (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.542454852721805,
    "avg_bits_err_output": 0.5927229489611973,
    "avg_bits_err_improve": 13.949731903760608,
    "time": 28916.15771484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (- (- (cos (+ x eps)) 1.0) -1.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 39.236232941011416,
    "avg_bits_err_output": 39.251442111754635,
    "avg_bits_err_improve": -0.015209170743219147,
    "time": 46795.182861328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log (exp (+ (cbrt (- x -1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.8676301540041,
    "avg_bits_err_output": 29.576238976867174,
    "avg_bits_err_improve": 0.2913911771369264,
    "time": 36287.931884765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.61912989970838,
    "avg_bits_err_output": 30.61912989970838,
    "avg_bits_err_improve": 0,
    "time": 66232.23071289062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96605243463104,
    "avg_bits_err_output": 33.96605243463104,
    "avg_bits_err_improve": 0,
    "time": 56744.458740234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a -4.0) (* b b)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.06103919246469,
    "avg_bits_err_output": 34.07267180740714,
    "avg_bits_err_improve": -0.011632614942449493,
    "time": 29886.420166015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (- (log (- 1.0 x)) 1.0) -1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.468757477423495,
    "avg_bits_err_output": 60.226283120699335,
    "avg_bits_err_improve": 1.2424743567241592,
    "time": 17931.3994140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.005613431672735,
    "avg_bits_err_output": 0.7033374242284052,
    "avg_bits_err_improve": 62.30227600744433,
    "time": 32251.89990234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output_parens": 4,
    "avg_bits_err_input": 59.88804697047933,
    "avg_bits_err_output": 59.88804697047933,
    "avg_bits_err_improve": 0,
    "time": 44919.8486328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (fma (expm1 (* eps (+ a b))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps (+ a b))))) 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 18,
    "avg_bits_err_input": 60.36918945083786,
    "avg_bits_err_output": 41.22036879209889,
    "avg_bits_err_improve": 19.14882065873897,
    "time": 33782.348876953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.51891809206283,
    "avg_bits_err_output": 0.5523155331891328,
    "avg_bits_err_improve": 40.9666025588737,
    "time": 26429.903076171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.58823761586692,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.58736261586692,
    "time": 3643.300537109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.314059832286034,
    "avg_bits_err_output": 0.020062931983547826,
    "avg_bits_err_improve": 29.293996900302485,
    "time": 3151.66357421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.562467002314683,
    "avg_bits_err_output": 28.666241282636342,
    "avg_bits_err_improve": 0.8962257196783412,
    "time": 21607.504638671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.608333295066489,
    "avg_bits_err_output": 9.608333295066489,
    "avg_bits_err_improve": 0,
    "time": 46898.067626953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.840457708542395,
    "avg_bits_err_output": 36.840457708542395,
    "avg_bits_err_improve": 0,
    "time": 46425.59814453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (+ (fma (sqrt (+ x 1.0)) (* (sqrt (+ x 1.0)) (/ 1.0 (sqrt (+ x 1.0)))) (- -1.0 (sqrt x))) (fma (- (* (+ 1.0 (sqrt x)) (/ 1.0 (+ 1.0 (sqrt x))))) (+ 1.0 (sqrt x)) (+ 1.0 (sqrt x)))) -1.0)",
    "output_parens": 25,
    "avg_bits_err_input": 30.04240395230425,
    "avg_bits_err_output": 29.354159729252643,
    "avg_bits_err_improve": 0.6882442230516084,
    "time": 47838.092529296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.05896402966488,
    "avg_bits_err_output": 37.05896402966488,
    "avg_bits_err_improve": 0,
    "time": 41494.093505859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 20.026034465467962,
    "avg_bits_err_output": 20.026034465467962,
    "avg_bits_err_improve": 0,
    "time": 37794.75830078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (atan (+ N 1.0)) (log1p (expm1 (- (atan N)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.991472377652421,
    "avg_bits_err_output": 14.992786937785647,
    "avg_bits_err_improve": -0.0013145601332258394,
    "time": 39153.025146484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.174707168965995,
    "avg_bits_err_output": 30.174707168965995,
    "avg_bits_err_improve": 0,
    "time": 74847.03466796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- (* m (/ (- m (* m m)) v)) (+ m -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07847755746635404,
    "avg_bits_err_output": 0.08030803949007588,
    "avg_bits_err_improve": -0.0018304820237218383,
    "time": 13257.83642578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.852117248422408,
    "avg_bits_err_output": 0.29742481250360575,
    "avg_bits_err_improve": 15.554692435918803,
    "time": 17544.828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (/ angle 180.0) (- (- (/ PI (/ angle 180.0)) 1.0) -1.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 19.82264113287219,
    "avg_bits_err_output": 20.003532268007948,
    "avg_bits_err_improve": -0.18089113513575938,
    "time": 73409.07446289062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.069179065568253,
    "avg_bits_err_output": 31.069179065568253,
    "avg_bits_err_improve": 0,
    "time": 60995.548583984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (fma (/ angle 180.0) (* PI (exp (log1p (/ (/ angle 180.0) (/ angle 180.0))))) (- (* (/ angle 180.0) PI))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.27522524694481,
    "avg_bits_err_output": 20.302412713936604,
    "avg_bits_err_improve": -0.027187466991794196,
    "time": 84954.24975585938,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17585416639998386,
    "avg_bits_err_output": 0.17267025517746534,
    "avg_bits_err_improve": 0.003183911222518515,
    "time": 28143.339599609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.32912410109759316,
    "avg_bits_err_output": 0.3236638249507136,
    "avg_bits_err_improve": 0.00546027614687955,
    "time": 24373.91943359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (log (exp (* e (cos v))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.14231372187554087,
    "avg_bits_err_output": 0.1458870457007131,
    "avg_bits_err_improve": -0.0035733238251722255,
    "time": 36734.11962890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi2) (/ (cos (- lambda1 lambda2)) (cos phi2))) (* (cos phi1) (cos phi2))))) R)",
    "output_parens": 15,
    "avg_bits_err_input": 16.90002975143135,
    "avg_bits_err_output": 16.908643667775728,
    "avg_bits_err_improve": -0.008613916344376804,
    "time": 64255.76220703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 5.8e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a)) (/ (+ (- (+ (sqrt (fma b b (* a (* c -4.0)))) 1.0) b) -1.0) (+ a a)))",
    "output_parens": 41,
    "avg_bits_err_input": 52.823534972120875,
    "avg_bits_err_output": 50.731917576139566,
    "avg_bits_err_improve": 2.0916173959813094,
    "time": 25510.210205078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.784753414520114,
    "avg_bits_err_output": 28.78082977177577,
    "avg_bits_err_improve": 0.003923642744343425,
    "time": 31499.11279296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-19) (/ (* (- (sqrt (fma b b (* a (* c -4.0)))) b) (* (- (sqrt (fma b b (* a (* c -4.0)))) b) (/ 1.0 (- (sqrt (fma b b (* a (* c -4.0)))) b)))) (+ a a)) (/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (- (exp (log1p (/ 1.0 (fma a (* c -4.0) (* b b))))) 1.0)))) b) (+ a a)))",
    "output_parens": 50,
    "avg_bits_err_input": 44.354955677005634,
    "avg_bits_err_output": 43.00178173439999,
    "avg_bits_err_improve": 1.3531739426056433,
    "time": 23702.277099609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9724835388945,
    "avg_bits_err_output": 33.9724835388945,
    "avg_bits_err_improve": 0,
    "time": 53787.572265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (fma (sin (- lambda1 lambda2)) (* (cos phi2) (exp (log1p (/ (cos phi2) (cos phi2))))) (* (sin (- lambda1 lambda2)) (- (cos phi2)))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.9316221955006693,
    "avg_bits_err_output": 0.9356441485949032,
    "avg_bits_err_improve": -0.004021953094233921,
    "time": 40745.60546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (log1p (expm1 (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.48928923050382,
    "avg_bits_err_output": 29.494533575318286,
    "avg_bits_err_improve": -0.005244344814464341,
    "time": 10945.99072265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.10358578893647,
    "avg_bits_err_output": 1.3228043234384919,
    "avg_bits_err_improve": 56.78078146549798,
    "time": 10725.80712890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.02302317436167,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 58.014398174361666,
    "time": 6386.1552734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008240601562950723,
    "avg_bits_err_output": 0.008240601562950723,
    "avg_bits_err_improve": 0,
    "time": 2574.901123046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.161125,
    "avg_bits_err_output": 32.161125,
    "avg_bits_err_improve": 0,
    "time": 6461.33935546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 58.456263283840364,
    "avg_bits_err_output": 58.45778525549785,
    "avg_bits_err_improve": -0.0015219716574890185,
    "time": 156030.83984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04375,
    "avg_bits_err_output": 0.04375,
    "avg_bits_err_improve": 0,
    "time": 3203.533447265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1302712406251803,
    "avg_bits_err_output": 0.1302712406251803,
    "avg_bits_err_improve": 0,
    "time": 40881.426025390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* eh (* (sin (atan (/ (* (- eh) (tan t)) ew))) (sin t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12832312031259016,
    "avg_bits_err_output": 0.128,
    "avg_bits_err_improve": 0.0003231203125901583,
    "time": 30739.1298828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.37138127544293,
    "avg_bits_err_output": 4.013014378076799,
    "avg_bits_err_improve": 35.35836689736613,
    "time": 43957.18603515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(* (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))) (* (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))) (/ 1.0 (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.283674373791138,
    "avg_bits_err_output": 14.285873829922599,
    "avg_bits_err_improve": -0.002199456131460664,
    "time": 4498.83837890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi1) (* (cos phi1) (* (sin theta) (/ (sin delta) (cos phi1))))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (* (sin delta) (cos phi1)) (cos theta)))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.13904330086437403,
    "avg_bits_err_output": 0.1411808520657139,
    "avg_bits_err_improve": -0.0021375512013398767,
    "time": 73555.24169921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 5.8e+15) (/ (fma (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (fma (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (/ (/ 1.0 (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) 0.0)) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (fma a (* c -3.0) (* b b))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 54,
    "avg_bits_err_input": 52.84631070773147,
    "avg_bits_err_output": 50.85024319954253,
    "avg_bits_err_improve": 1.9960675081889363,
    "time": 26675.63671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (* (sqrt (fma a (* c -3.0) (* b b))) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))) (sqrt (+ (* b b) (* -3.0 (* a c)))) (- b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.85335407011293,
    "avg_bits_err_output": 28.87528509770043,
    "avg_bits_err_improve": -0.021931027587502427,
    "time": 29536.342041015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-19) (* (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* a 3.0)) (* (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* a 3.0)) (/ 1.0 (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* a 3.0))))) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (+ -1.0 (exp (log1p (/ 1.0 (fma b b (* a (* c -3.0))))))))))) (* 3.0 a)))",
    "output_parens": 55,
    "avg_bits_err_input": 44.42040056330815,
    "avg_bits_err_output": 43.058313503499996,
    "avg_bits_err_improve": 1.3620870598081538,
    "time": 32365.157958984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma (* a -6.0) c (fma a (* c 3.0) (* b b))))) (* 3.0 a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.013366455742556,
    "avg_bits_err_output": 34.02651936095112,
    "avg_bits_err_improve": -0.013152905208563936,
    "time": 19964.805419921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (log1p (expm1 (cos (- lambda1 lambda2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.70846327050992,
    "avg_bits_err_output": 13.715659699301286,
    "avg_bits_err_improve": -0.007196428791365506,
    "time": 65026.13720703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.027332819947535,
    "avg_bits_err_output": 29.03483207532037,
    "avg_bits_err_improve": -0.007499255372835023,
    "time": 21147.8623046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (- (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) -1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.013344360937770434,
    "avg_bits_err_improve": -0.0014693609377704336,
    "time": 8480.881591796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -2.5e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (+ (* (/ 1.0 (+ -1.0 x)) (* (- (+ (+ 1.0 (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (/ -1.0 (/ 1.0 (+ -1.0 x))))) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (/ 1.0 (+ -1.0 x)))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.619113870524966,
    "avg_bits_err_output": 13.570593204665585,
    "avg_bits_err_improve": 1.0485206658593818,
    "time": 29869.076416015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (* A (* F (* 2.0 (/ (fma A (* C 4.0) (- (pow B 2.0))) (fma A (* C 4.0) (- (pow B 2.0))))))) (- (pow B 2.0) (* C (* A 4.0))) (* 2.0 (* (- (pow B 2.0) (* C (* A 4.0))) (* F (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 37,
    "avg_bits_err_input": 52.557777024598984,
    "avg_bits_err_output": 52.29580346074799,
    "avg_bits_err_improve": 0.2619735638509937,
    "time": 35392.0576171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.85365437021454,
    "avg_bits_err_output": 29.85365437021454,
    "avg_bits_err_improve": 0,
    "time": 32740.7578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (- (* (pow B 2.0) (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (/ (- (pow B 2.0) (* C (* 4.0 A))) (- (pow B 2.0) (* C (* 4.0 A)))) (+ F F)))) (* 4.0 (* (* A C) (* 2.0 (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F (/ (- (pow B 2.0) (* C (* 4.0 A))) (- (pow B 2.0) (* C (* 4.0 A)))))))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 51,
    "avg_bits_err_input": 52.76154166964942,
    "avg_bits_err_output": 52.465726110154144,
    "avg_bits_err_improve": 0.29581555949527427,
    "time": 37230.714599609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.391838770633505,
    "avg_bits_err_output": 15.391838770633505,
    "avg_bits_err_improve": 0,
    "time": 1803.350341796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.81750611425101,
    "avg_bits_err_output": 35.81750611425101,
    "avg_bits_err_improve": 0,
    "time": 34966.72998046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (fma (+ (/ (acos (/ (- g) h)) 3.0) (+ (/ (* 2.0 PI) 3.0) -2.0)) 1.0 4.0) -2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9924015046946224,
    "avg_bits_err_output": 0.9992885503953356,
    "avg_bits_err_improve": -0.00688704570071319,
    "time": 9136.763916015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.931125,
    "avg_bits_err_output": 0.931125,
    "avg_bits_err_improve": 0,
    "time": 6453.20166015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.28370955146603,
    "avg_bits_err_output": 11.28370955146603,
    "avg_bits_err_improve": 0,
    "time": 14703.75390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5119730148866263,
    "avg_bits_err_output": 0.479625,
    "avg_bits_err_improve": 0.03234801488662625,
    "time": 11240.66064453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(- (- (log (+ x (hypot 1.0 x))) 1.0) -1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 52.99372040857784,
    "avg_bits_err_output": 45.1546764459821,
    "avg_bits_err_improve": 7.8390439625957455,
    "time": 43364.45166015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.684403591105956,
    "avg_bits_err_output": 5.685062048275354,
    "avg_bits_err_improve": -0.0006584571693979413,
    "time": 32714.566650390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (/ (- 1.0 x) (- x -1.0))) (* (/ (- 1.0 x) (- x -1.0)) (/ (- 1.0 x) (- x -1.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0.001875,
    "time": 5218.736328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1237.763427734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 5e-93) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (* w r) (- (* (- w) (* v 0.25)) (* w -0.375)))) (- 1.0 v))) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* w (* r (* (- 0.375 (* v 0.25)) (* w r)))) (- 1.0 v))) 4.5))",
    "output_parens": 30,
    "avg_bits_err_input": 12.565362110838905,
    "avg_bits_err_output": 6.787965053515461,
    "avg_bits_err_improve": 5.777397057323443,
    "time": 34501.112060546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (- (* (- (* x1 x1) -1.0) 3.0) 3.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 54,
    "avg_bits_err_input": 0.5180940075640867,
    "avg_bits_err_output": 0.2736750092537485,
    "avg_bits_err_improve": 0.24441899831033825,
    "time": 89375.32250976562,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.25644350928271,
    "avg_bits_err_output": 18.25644350928271,
    "avg_bits_err_improve": 0,
    "time": 49183.303466796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(+ (fma (* x (* x -0.12900613773279798)) x (* x 0.954929658551372)) (* x (fma (* x (- x)) (* 0.12900613773279798 (/ x x)) (* x (* x 0.12900613773279798)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.22679248125036058,
    "avg_bits_err_output": 0.18446936093777042,
    "avg_bits_err_improve": 0.04232312031259017,
    "time": 22947.40771484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0,
    "time": 2660.21923828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.54698531867687,
    "avg_bits_err_output": 9.589977987423586,
    "avg_bits_err_improve": 4.957007331253283,
    "time": 39680.517578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 28.848695455601533,
    "avg_bits_err_output": 0.9287780896524572,
    "avg_bits_err_improve": 27.919917365949075,
    "time": 24179.11083984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- (* (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0) (+ -2.0 (* 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.004125,
    "avg_bits_err_output": 0.004625,
    "avg_bits_err_improve": -0.0004999999999999996,
    "time": 26700.513916015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.0085,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 0,
    "time": 12779.91455078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (* (+ 1.0 (/ (+ t t) (+ t 1.0))) (- (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (/ (+ t t) (+ t 1.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.046573120312590144,
    "avg_bits_err_output": 0.050511842188131005,
    "avg_bits_err_improve": -0.003938721875540861,
    "time": 8021.848388671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3186.519287109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2670.924072265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3130.10009765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.868468556723507,
    "avg_bits_err_output": 0.2465,
    "avg_bits_err_improve": 7.621968556723507,
    "time": 73397.46435546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.2546251846211645,
    "avg_bits_err_output": 7.2546251846211645,
    "avg_bits_err_improve": 0,
    "time": 32193.013916015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (expm1 (log1p (pow (+ x eps) 2.0))) (pow x 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 15.755211617548808,
    "avg_bits_err_output": 15.777665017482345,
    "avg_bits_err_improve": -0.022453399933537455,
    "time": 66815.62548828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (cos x) (- (/ (* (+ (cos x) 1.0) (/ (exp (* 10.0 (* x x))) (cos x))) (cos x)) (/ (* (/ (exp (* 10.0 (* x x))) (cos x)) (/ (cos x) (cos x))) (cos x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 3.532546884364404,
    "avg_bits_err_output": 3.535216155425288,
    "avg_bits_err_improve": -0.002669271060883993,
    "time": 43965.855224609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.344769544218986,
    "avg_bits_err_output": 15.344769544218986,
    "avg_bits_err_improve": 0,
    "time": 49857.80029296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.849550129934634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.849550129934634,
    "time": 5168.815673828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14092750219331,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.140427502193305,
    "time": 3527.279296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.291,
    "avg_bits_err_improve": 63.709,
    "time": 3971.90478515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84325466514815,
    "avg_bits_err_output": 0.3960567671895734,
    "avg_bits_err_improve": 61.44719789795858,
    "time": 19339.457275390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a -4.0) (* b b)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.06103919246469,
    "avg_bits_err_output": 34.07267180740714,
    "avg_bits_err_improve": -0.011632614942449493,
    "time": 29105.224609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9724835388945,
    "avg_bits_err_output": 33.9724835388945,
    "avg_bits_err_improve": 0,
    "time": 51449.4970703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1905.310302734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.804810527354064,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 39.79293552735406,
    "time": 2750.289306640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma y y (* x x)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.48084172065822,
    "avg_bits_err_output": 20.479372359720447,
    "avg_bits_err_improve": 0.0014693609377722794,
    "time": 6549.1064453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6571481356869886,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6571481356869886,
    "time": 5365.5791015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0395,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0.03825,
    "time": 4247.880615234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02239624062518029,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.011021240625180291,
    "time": 3693.322998046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.01425,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 0,
    "time": 3612.205810546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0,
    "time": 1852.13916015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.41169605312878627,
    "avg_bits_err_output": 0.24775,
    "avg_bits_err_improve": 0.16394605312878627,
    "time": 7297.682861328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.224150718920463,
    "avg_bits_err_output": 30.224150718920463,
    "avg_bits_err_improve": 0,
    "time": 84893.57177734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.325377732130907,
    "avg_bits_err_output": 24.31888991565766,
    "avg_bits_err_improve": 0.006487816473246255,
    "time": 24036.6796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.580091874103584,
    "avg_bits_err_output": 29.579934758490257,
    "avg_bits_err_improve": 0.0001571156133266527,
    "time": 61311.389892578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590144,
    "avg_bits_err_output": 0.001625,
    "avg_bits_err_improve": 0.004948120312590144,
    "time": 2822.09130859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.436088356440877,
    "avg_bits_err_output": 25.436088356440877,
    "avg_bits_err_improve": 0,
    "time": 25663.31640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.623499127443804,
    "avg_bits_err_output": 25.623499127443804,
    "avg_bits_err_improve": 0,
    "time": 19793.934326171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(fma (+ maxCos -1.0) ux 1.0)",
    "output_parens": 2,
    "avg_bits_err_input": 0.035,
    "avg_bits_err_output": 0.01800317066803707,
    "avg_bits_err_improve": 0.016996829331962934,
    "time": 23967.537841796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (- ux (* ux maxCos)) (* (- (fma ux maxCos 1.0) ux) (- (* ux maxCos) ux)))))",
    "output_parens": 13,
    "avg_bits_err_input": 13.505415196103039,
    "avg_bits_err_output": 0.5523911852758474,
    "avg_bits_err_improve": 12.95302401082719,
    "time": 33856.465087890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (fma ux (fma maxCos (+ (- (* ux maxCos) ux) (- 2.0 ux)) (+ ux -1.0)) (- ux)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.548809366169355,
    "avg_bits_err_output": 0.3179271851770272,
    "avg_bits_err_improve": 13.230882180992328,
    "time": 38306.243896484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (fma maxCos (- ux (* ux ux)) (fma (- (* maxCos (/ ux ux))) (- ux) (* ux (- maxCos)))) zi))",
    "output_parens": 41,
    "avg_bits_err_input": 0.34026445899576524,
    "avg_bits_err_output": 0.34538279747896955,
    "avg_bits_err_improve": -0.00511833848320431,
    "time": 53981.3935546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20140481469338017,
    "avg_bits_err_output": 0.20140481469338017,
    "avg_bits_err_improve": 0,
    "time": 18136.851806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.542935509015052,
    "avg_bits_err_output": 0.49658282887399213,
    "avg_bits_err_improve": 0.04635268014105992,
    "time": 43813.571533203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (* (cos (* 6.28318530718 u2)) (/ (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))) (cos (* 6.28318530718 u2)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.32672121110921293,
    "avg_bits_err_output": 0.32858664309992514,
    "avg_bits_err_improve": -0.0018654319907122074,
    "time": 47489.791259765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.32466646930498516,
    "avg_bits_err_output": 0.32443546969166587,
    "avg_bits_err_improve": 0.00023099961331929375,
    "time": 36793.947509765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.062307858716118235,
    "avg_bits_err_output": 0.062307858716118235,
    "avg_bits_err_improve": 0,
    "time": 20055.98095703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (+ (+ s s) (* s (exp (/ (- (fabs x)) s)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13040594065941177,
    "avg_bits_err_output": 0.111599438974114,
    "avg_bits_err_improve": 0.018806501685297766,
    "time": 24526.22509765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6827529928988721,
    "avg_bits_err_output": 0.6889228779478774,
    "avg_bits_err_improve": -0.006169885049005286,
    "time": 30038.977294921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.15776153656422884,
    "avg_bits_err_output": 0.15776153656422884,
    "avg_bits_err_improve": 0,
    "time": 30927.040283203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (* -1.0 (fma (- eta) eta (* eta eta)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 2.668334903845633,
    "avg_bits_err_output": 2.667438663220453,
    "avg_bits_err_improve": 0.0008962406251802335,
    "time": 66810.5234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (- 1.0 v) (+ (- -1.0 (- (- v (- (* v (* (sinh (/ 1.0 v)) -2.0)) 1.0)))) -1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.45579228081252515,
    "avg_bits_err_output": 0.4967722596627428,
    "avg_bits_err_improve": -0.040979978850217647,
    "time": 47836.461669921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10260851389960937,
    "avg_bits_err_output": 0.10260851389960937,
    "avg_bits_err_improve": 0,
    "time": 9092.077880859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (* alpha alpha)) (* PI (* (log (* alpha alpha)) (/ (/ PI PI) (log (* alpha alpha)))))) (+ 1.0 (* (- (* alpha (* cosTheta alpha)) cosTheta) cosTheta))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.46990039415795626,
    "avg_bits_err_output": 0.4866787625237999,
    "avg_bits_err_improve": -0.01677836836584362,
    "time": 26048.30859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (* (- 1.0 (/ (- u 0.25) 0.75)) (- (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) (* (/ (- u 0.25) 0.75) (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 1.3279020321432367,
    "avg_bits_err_output": 1.2898398454519724,
    "avg_bits_err_improve": 0.038062186691264266,
    "time": 82932.96118164062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.385976548948085,
    "avg_bits_err_output": 12.012094022639543,
    "avg_bits_err_improve": 0.3738825263085417,
    "time": 39697.0830078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* 6.0 (* (* PI r) (/ s (* 6.0 (* PI r))))) (* (* 6.0 PI) r))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.1447449350722043,
    "avg_bits_err_output": 0.15848528495732928,
    "avg_bits_err_improve": -0.013740349885124986,
    "time": 71153.80493164062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (log1p (expm1 (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.9024449258931355,
    "avg_bits_err_output": 0.9137223573312708,
    "avg_bits_err_improve": -0.01127743143813531,
    "time": 41792.2529296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c))) (/ 1.0 (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.6945803313842076,
    "avg_bits_err_output": 0.5810129718907212,
    "avg_bits_err_improve": 0.1135673594934864,
    "time": 70840.34399414062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* PI (+ u2 u2))) (fma (sin (* PI (+ u2 u2))) (* (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (sin (* PI (+ u2 u2)))) (* (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (sin (* PI (+ u2 u2)))) (/ 1.0 (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (sin (* PI (+ u2 u2))))))) -1.0))",
    "output_parens": 38,
    "avg_bits_err_input": 13.570361051648597,
    "avg_bits_err_output": 13.414538995734723,
    "avg_bits_err_improve": 0.15582205591387321,
    "time": 45552.517578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(fma (cos (* 2.0 (* PI u2))) (* (cos (* 2.0 (* PI u2))) (/ -1.0 (cos (* 2.0 (fma u2 (* u2 (/ PI u2)) 0.0))))) (* (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (cos (* 2.0 (* PI u2)))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.617788886988382,
    "avg_bits_err_output": 13.636833964707426,
    "avg_bits_err_improve": -0.019045077719043846,
    "time": 52312.25,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (* alpha (- alpha)) (fma alpha alpha (* alpha (- alpha))))",
    "output_parens": 8,
    "avg_bits_err_input": 13.988949961053551,
    "avg_bits_err_output": 13.855963050881696,
    "avg_bits_err_improve": 0.13298691017185504,
    "time": 37637.90625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.657846703115,
    "avg_bits_err_output": 12.662237133242364,
    "avg_bits_err_improve": -0.004390430127363842,
    "time": 23484.116455078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output_parens": 7,
    "avg_bits_err_input": 16.51630223095017,
    "avg_bits_err_output": 16.51630223095017,
    "avg_bits_err_improve": 0,
    "time": 40341.439453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.210761842188131,
    "avg_bits_err_output": 0.20961560156295073,
    "avg_bits_err_improve": 0.0011462406251802615,
    "time": 34997.8740234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.812547798383543,
    "avg_bits_err_output": 13.812547798383543,
    "avg_bits_err_improve": 0,
    "time": 61602.59619140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.69592345952694,
    "avg_bits_err_output": 2.1689015626698778,
    "avg_bits_err_improve": 59.52702189685706,
    "time": 46290.890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -9.5e-162) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 7.2e-119) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (/ (* (- t 0.0) (+ -1.0 (+ (sqrt 2.0) 1.0))) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 56,
    "avg_bits_err_input": 42.855677604555986,
    "avg_bits_err_output": 35.91318122478116,
    "avg_bits_err_improve": 6.942496379774823,
    "time": 32799.01806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8710282331018293,
    "avg_bits_err_output": 3.8710282331018293,
    "avg_bits_err_improve": 0,
    "time": 81061.216796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0442544754655605,
    "avg_bits_err_output": 1.0465044754655606,
    "avg_bits_err_improve": -0.0022500000000000853,
    "time": 14125.210205078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.231380863159591,
    "avg_bits_err_output": 10.231380863159591,
    "avg_bits_err_improve": 0,
    "time": 152714.94165039062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+295) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* 2.0 (* n (- (* n (* (pow (/ l Om) 2.0) (* (- U* U) U))) (* U (- (* 2.0 (/ (* l l) Om)) t))))))))",
    "output_parens": 73,
    "avg_bits_err_input": 34.9832577964157,
    "avg_bits_err_output": 31.8887812186748,
    "avg_bits_err_improve": 3.094476577740899,
    "time": 31625.046142578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (tan k) (/ (pow (/ k t) 2.0) (tan k))))))",
    "output_parens": 15,
    "avg_bits_err_input": 47.14853979378786,
    "avg_bits_err_output": 39.34305981990611,
    "avg_bits_err_improve": 7.805479973881752,
    "time": 61822.6083984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.55534704050198,
    "avg_bits_err_output": 32.54539734192483,
    "avg_bits_err_improve": 0.009949698577145227,
    "time": 32445.280517578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4899924843993411,
    "avg_bits_err_output": 0.4899924843993411,
    "avg_bits_err_improve": 0,
    "time": 45024.76171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.48712105639185577,
    "avg_bits_err_output": 0.48712105639185577,
    "avg_bits_err_improve": 0,
    "time": 47031.984619140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (+ (fma (- (exp (- l))) (cos (/ K 2.0)) (* (exp (- l)) (cos (/ K 2.0)))) (+ (* (- (exp l) (exp (- l))) (cos (/ K 2.0))) (fma (- (exp l)) (- (cos (/ K 2.0))) (* (cos (/ K 2.0)) (- (exp l)))))) U)",
    "output_parens": 32,
    "avg_bits_err_input": 16.93383418685015,
    "avg_bits_err_output": 16.938403284551622,
    "avg_bits_err_improve": -0.004569097701473623,
    "time": 36109.75634765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (* (/ (/ (+ m n) (+ m n)) K) (* K (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 60,
    "avg_bits_err_input": 14.87102626627843,
    "avg_bits_err_output": 9.447441902126585,
    "avg_bits_err_improve": 5.423584364151845,
    "time": 25512.33544921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.872313721875543,
    "avg_bits_err_output": 17.872313721875543,
    "avg_bits_err_improve": 0,
    "time": 36239.399169921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))))))))",
    "output_parens": 28,
    "avg_bits_err_input": 13.919590528764356,
    "avg_bits_err_output": 13.926321921420723,
    "avg_bits_err_improve": -0.006731392656366353,
    "time": 9538.6337890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.01020085077524,
    "avg_bits_err_output": 19.01020085077524,
    "avg_bits_err_improve": 0,
    "time": 25016.785888671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* h D)))) (sqrt (* (- (/ (* d (* c0 d)) (* D (* w (* h D)))) M) (+ (/ (* d (* c0 d)) (* D (* w (* h D)))) M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.29488111332215,
    "avg_bits_err_output": 56.06709293366345,
    "avg_bits_err_improve": 3.2277881796586954,
    "time": 39024.93896484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(fma (* (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l))) (fma (pow (/ d l) 0.5) (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (- (pow (/ d h) 0.5)))) (* (pow (/ d l) 0.5) (* (- (pow (/ d h) 0.5)) (fma (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l)) -1.0))))",
    "output_parens": 33,
    "avg_bits_err_input": 26.725104960433168,
    "avg_bits_err_output": 26.72727645440616,
    "avg_bits_err_improve": -0.002171493972991101,
    "time": 55678.42431640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.265705062211147,
    "avg_bits_err_output": 15.265705062211147,
    "avg_bits_err_improve": 0,
    "time": 42308.32177734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(- (/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (+ (* v (* v -3.0)) 3.0)))) 0.0)",
    "output_parens": 11,
    "avg_bits_err_input": 0.9835490396778473,
    "avg_bits_err_output": 0.01406372187554087,
    "avg_bits_err_improve": 0.9694853178023065,
    "time": 6800.969970703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.44247189432537193,
    "avg_bits_err_output": 0.37799275838327434,
    "avg_bits_err_improve": 0.06447913594209759,
    "time": 25636.31689453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.013216520928207924,
    "avg_bits_err_output": 0.013216520928207924,
    "avg_bits_err_improve": 0,
    "time": 3905.451416015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5169218506131418,
    "avg_bits_err_output": 0.5169218506131418,
    "avg_bits_err_improve": 0,
    "time": 11720.188720703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0931415881287134,
    "avg_bits_err_output": 2.075818467816123,
    "avg_bits_err_improve": 0.017323120312590312,
    "time": 46072.3037109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.015361468716510129,
    "avg_bits_err_output": 0.015361468716510129,
    "avg_bits_err_improve": 0,
    "time": 8575.960205078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17933914418249194,
    "avg_bits_err_output": 0.17933914418249194,
    "avg_bits_err_improve": 0,
    "time": 40393.166259765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18458191605492125,
    "avg_bits_err_output": 0.18458191605492125,
    "avg_bits_err_improve": 0,
    "time": 40860.832763671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (- 1.0 a) (expm1 (log1p (* a a)))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.18646520187983545,
    "avg_bits_err_output": 0.1872091124692063,
    "avg_bits_err_improve": -0.0007439105893708442,
    "time": 33783.007568359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.173163709861829,
    "avg_bits_err_output": 13.173163709861829,
    "avg_bits_err_improve": 0,
    "time": 14755.990478515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (- (+ (/ (expm1 (+ x x)) (expm1 x)) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 40.89116367628887,
    "avg_bits_err_output": 0.05,
    "avg_bits_err_improve": 40.84116367628887,
    "time": 8329.98681640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log (+ 1.0 (log (exp (expm1 (/ (- x (sin x)) (- x (tan x))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 31.729140590893675,
    "avg_bits_err_output": 31.731804018782814,
    "avg_bits_err_improve": -0.0026634278891393137,
    "time": 29415.9873046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.53619996649882,
    "avg_bits_err_output": 33.53619996649882,
    "avg_bits_err_improve": 0,
    "time": 21995.358154296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.7289563848553,
    "avg_bits_err_output": 33.7289563848553,
    "avg_bits_err_improve": 0,
    "time": 26004.638916015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.625737249144954,
    "avg_bits_err_output": 31.625737249144954,
    "avg_bits_err_improve": 0,
    "time": 29179.771240234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (expm1 (log1p (pow x (/ 1.0 n)))))",
    "output_parens": 8,
    "avg_bits_err_input": 32.77697784492157,
    "avg_bits_err_output": 32.786034331276575,
    "avg_bits_err_improve": -0.00905648635500711,
    "time": 22294.626708984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (log1p N) (- 4.0 (- (log N) -4.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 30.06302376670628,
    "avg_bits_err_output": 30.076606370017412,
    "avg_bits_err_improve": -0.013582603311132146,
    "time": 27056.152099609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 13.664943789160496,
    "avg_bits_err_output": 13.664943789160496,
    "avg_bits_err_improve": 0,
    "time": 103118.19775390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (- (* (/ 1.0 (- (cos x))) (* (expm1 (log1p (- (/ (cos x) (cos x)) (cos x)))) (- (cos x)))) (* (- (cos x)) (/ 1.0 (- (cos x))))))",
    "output_parens": 24,
    "avg_bits_err_input": 39.57246204492315,
    "avg_bits_err_output": 39.584483307332654,
    "avg_bits_err_improve": -0.01202126240950463,
    "time": 43237.609619140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 30.527942284184142,
    "avg_bits_err_output": 30.22430795888561,
    "avg_bits_err_improve": 0.30363432529853185,
    "time": 33342.920654296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.226092642270725,
    "avg_bits_err_output": 30.226092642270725,
    "avg_bits_err_improve": 0,
    "time": 124076.93090820312,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (- (* b b) (* a (* 4.0 c)))) b) (* 2.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.8680721684986,
    "avg_bits_err_output": 33.895935401092245,
    "avg_bits_err_improve": -0.027863232593645648,
    "time": 18054.8134765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8941878028341,
    "avg_bits_err_output": 33.914625700394,
    "avg_bits_err_improve": -0.02043789755990133,
    "time": 21321.532470703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.33709469106678,
    "avg_bits_err_output": 59.99169854044097,
    "avg_bits_err_improve": 1.3453961506258096,
    "time": 14591.75048828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.0022783914742,
    "avg_bits_err_output": 0.08267961691678018,
    "avg_bits_err_improve": 62.91959877455742,
    "time": 28185.609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.44410861979138,
    "avg_bits_err_output": 58.44410861979138,
    "avg_bits_err_improve": 0,
    "time": 13485.961181640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (+ 1.0 (/ 1.0 x)) (* (- -1.0 (/ 1.0 (tan x))) (- (/ -1.0 (- -1.0 (/ 1.0 (tan x)))) (* 1.0 (/ (/ 1.0 (tan x)) (- -1.0 (/ 1.0 (tan x))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 59.86598605168939,
    "avg_bits_err_output": 59.853081752484115,
    "avg_bits_err_improve": 0.012904299205274583,
    "time": 44750.4931640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.25932700563275,
    "avg_bits_err_output": 41.092679631117704,
    "avg_bits_err_improve": 19.166647374515044,
    "time": 31780.369140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.29180283119123,
    "avg_bits_err_output": 0.3900943609377705,
    "avg_bits_err_improve": 40.90170847025345,
    "time": 4725.74755859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.69584748524195,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.69584748524195,
    "time": 3670.741455078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.58006687886283,
    "avg_bits_err_output": 0.015464992043082168,
    "avg_bits_err_improve": 29.564601886819748,
    "time": 3903.499755859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.587006303554848,
    "avg_bits_err_output": 28.664171428616346,
    "avg_bits_err_improve": 0.922834874938502,
    "time": 36071.518310546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.74572717208754,
    "avg_bits_err_output": 9.74572717208754,
    "avg_bits_err_improve": 0,
    "time": 49354.597412109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.990941654153616,
    "avg_bits_err_output": 36.990941654153616,
    "avg_bits_err_improve": 0,
    "time": 37589.83251953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (expm1 (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.42149008764258,
    "avg_bits_err_output": 29.731287806847043,
    "avg_bits_err_improve": 0.690202280795539,
    "time": 25611.3876953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (* (sin x) (/ -1.0 (sin x))) (sin x) (sin (+ x eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 37.503821979855935,
    "avg_bits_err_output": 37.57698206876934,
    "avg_bits_err_improve": -0.07316008891340431,
    "time": 37409.709228515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (- (+ 1.0 (sqrt (+ 1.0 x))) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.814181388769363,
    "avg_bits_err_output": 19.81354865526756,
    "avg_bits_err_improve": 0.000632733501802818,
    "time": 33262.904052734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ N 1.0)) (- 1.0 (atan N))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 14.277424160347712,
    "avg_bits_err_output": 14.29006086692441,
    "avg_bits_err_improve": -0.012636706576698131,
    "time": 21705.32373046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 28.96638773513798,
    "avg_bits_err_output": 1.2500851671895141,
    "avg_bits_err_improve": 27.716302567948468,
    "time": 30983.05029296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.08487256701560164,
    "avg_bits_err_output": 0.0818396877148724,
    "avg_bits_err_improve": 0.0030328793007292354,
    "time": 33008.650146484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* b a) (* b a) (* (* b (- a)) (fma (- a) b (* b a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.087441263329783,
    "avg_bits_err_output": 0.1565,
    "avg_bits_err_improve": 15.930941263329784,
    "time": 13617.852294921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* (* PI (/ angle 180.0)) (/ 1.0 (log1p (expm1 (* PI (/ angle 180.0)))))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.348666461291202,
    "avg_bits_err_output": 20.34659459512482,
    "avg_bits_err_improve": 0.002071866166382108,
    "time": 57316.43017578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.37059061946111,
    "avg_bits_err_output": 31.37059061946111,
    "avg_bits_err_improve": 0,
    "time": 86254.5419921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma (fma (/ angle 180.0) (* PI PI) (* (/ angle 180.0) PI)) 1.0 (* PI (* (/ angle 180.0) (- PI)))))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.541261682835103,
    "avg_bits_err_output": 20.57609265362807,
    "avg_bits_err_improve": -0.034830970792967264,
    "time": 88537.78002929688,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18474279776851638,
    "avg_bits_err_output": 0.18260642424864698,
    "avg_bits_err_improve": 0.0021363735198693945,
    "time": 28110.859619140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3180175992242749,
    "avg_bits_err_output": 0.3176061407913269,
    "avg_bits_err_improve": 0.00041145843294804196,
    "time": 22280.401611328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13227124062518028,
    "avg_bits_err_output": 0.13227124062518028,
    "avg_bits_err_improve": 0,
    "time": 33488.281982421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.004589539228938,
    "avg_bits_err_output": 17.003400863830354,
    "avg_bits_err_improve": 0.001188675398584138,
    "time": 58703.448486328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 92000000000000.0) (/ (- (sqrt (expm1 (log1p (fma b b (* a (* c -4.0)))))) b) (+ a a)) (/ (fma (+ (sqrt (fma b b (* c (* -4.0 a)))) (- 1.0 b)) 1.0 -1.0) (* a 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.31160300809916,
    "avg_bits_err_output": 50.772043219784244,
    "avg_bits_err_improve": 1.539559788314918,
    "time": 39502.45947265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.508292504147214,
    "avg_bits_err_output": 28.576445459914904,
    "avg_bits_err_improve": -0.06815295576769032,
    "time": 21937.859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-19) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (sqrt (+ (fma a (* c -4.0) -1.0) (expm1 (log1p (fma b b 1.0))))) b) (+ a a)))",
    "output_parens": 28,
    "avg_bits_err_input": 43.87748042462839,
    "avg_bits_err_output": 42.99041613817573,
    "avg_bits_err_improve": 0.8870642864526559,
    "time": 30556.584716796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.88879999874394,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": 0,
    "time": 22391.832763671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (expm1 (log1p (cos (- lambda1 lambda2))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8908471282957333,
    "avg_bits_err_output": 0.9026760529839578,
    "avg_bits_err_improve": -0.011828924688224496,
    "time": 30368.417236328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.039778307518205,
    "avg_bits_err_output": 29.039778307518205,
    "avg_bits_err_improve": 0,
    "time": 4111.942626953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.189138759505,
    "avg_bits_err_output": 1.2014293234384918,
    "avg_bits_err_improve": 56.98770943606651,
    "time": 5013.938720703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.02941010114313,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 58.02191010114313,
    "time": 5872.22314453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008094360937770434,
    "avg_bits_err_output": 0.008094360937770434,
    "avg_bits_err_improve": 0,
    "time": 2779.352783203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.07325,
    "avg_bits_err_output": 32.07325,
    "avg_bits_err_improve": 0,
    "time": 5077.861572265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.43124789208118,
    "avg_bits_err_output": 58.43124789208118,
    "avg_bits_err_improve": 0,
    "time": 79076.77294921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04369812031259015,
    "avg_bits_err_output": 0.04369812031259015,
    "avg_bits_err_improve": 0,
    "time": 3064.250244140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13021936093777042,
    "avg_bits_err_output": 0.129375,
    "avg_bits_err_improve": 0.0008443609377704331,
    "time": 34281.4609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.122625,
    "avg_bits_err_output": 0.122625,
    "avg_bits_err_improve": 0,
    "time": 12903.40625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 38.849716132013,
    "avg_bits_err_output": 3.58124714271852,
    "avg_bits_err_improve": 35.26846898929448,
    "time": 46092.318115234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (log (exp (/ (- (* a a) (* b b)) (* a a))))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.657914333518113,
    "avg_bits_err_output": 14.660261271391908,
    "avg_bits_err_improve": -0.002346937873795696,
    "time": 5510.02099609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (* (sin delta) (cos phi1)) (cos theta)))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.16004668487053925,
    "avg_bits_err_output": 0.15502550622373476,
    "avg_bits_err_improve": 0.005021178646804486,
    "time": 45604.887939453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 25.0) (/ (- (* (sqrt (fma b b (* a (* c -3.0)))) (* (sqrt (fma b b (* a (* c -3.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) b) (* 3.0 a)) (/ (- (- (+ (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (sqrt (fma c (* a -3.0) (* b b)))) b) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (* 3.0 a)))",
    "output_parens": 39,
    "avg_bits_err_input": 52.33944271674547,
    "avg_bits_err_output": 49.520564578360144,
    "avg_bits_err_improve": 2.8188781383853225,
    "time": 29463.4951171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ -1.0 b) (* b b) (sqrt (fma b b (* a (* c -3.0))))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 28.646493578571594,
    "avg_bits_err_output": 28.698941771002882,
    "avg_bits_err_improve": -0.05244819243128873,
    "time": 27846.38916015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-19) (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* 3.0 a)) (/ (- (* (sqrt (fma c (* a -3.0) (* b b))) (* (sqrt (fma c (* a -3.0) (* b b))) (/ 1.0 (sqrt (log1p (expm1 (fma a (* c -3.0) (* b b)))))))) b) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.89042012060226,
    "avg_bits_err_output": 42.32626803337417,
    "avg_bits_err_improve": 1.5641520872280879,
    "time": 26362.089599609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.93005751268642,
    "avg_bits_err_output": 33.93005751268642,
    "avg_bits_err_improve": 0,
    "time": 27794.615234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.362692445980375,
    "avg_bits_err_output": 13.362692445980375,
    "avg_bits_err_improve": 0,
    "time": 64547.40625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.32578772281659,
    "avg_bits_err_output": 29.33337611149923,
    "avg_bits_err_improve": -0.007588388682641778,
    "time": 24538.906005859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011125,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0,
    "time": 8279.857421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x)))) (/ 1.0 (+ x -1.0))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.143255548844879,
    "avg_bits_err_output": 12.29196415082858,
    "avg_bits_err_improve": 1.8512913980162988,
    "time": 50439.815185546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (+ F F) (* C (- (pow B 2.0) (* A (* C 4.0)))) (* (- (* A (* C 4.0)) (pow B 2.0)) (* (+ F F) (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 52.36936568687435,
    "avg_bits_err_output": 52.57759937947592,
    "avg_bits_err_improve": -0.2082336926015671,
    "time": 39479.4892578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (log1p (+ (+ 1.0 (exp (* (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) (/ 1.0 B)))) -2.0))) PI))",
    "output_parens": 16,
    "avg_bits_err_input": 29.552095268521562,
    "avg_bits_err_output": 29.690212075538255,
    "avg_bits_err_improve": -0.1381168070166936,
    "time": 48272.45947265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.91519349146561,
    "avg_bits_err_output": 52.636652756932584,
    "avg_bits_err_improve": 0.2785407345330242,
    "time": 38725.017578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.01564985920578,
    "avg_bits_err_output": 16.01564985920578,
    "avg_bits_err_improve": 0,
    "time": 1854.067138671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (+ (* h (- g h)) (* g (- g h))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 35.977806423664475,
    "avg_bits_err_output": 35.9804042158172,
    "avg_bits_err_improve": -0.002597792152727152,
    "time": 24214.713134765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9911727453198026,
    "avg_bits_err_output": 0.9911727453198026,
    "avg_bits_err_improve": 0,
    "time": 4056.25341796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.9006462406251803,
    "avg_bits_err_output": 0.9006462406251803,
    "avg_bits_err_improve": 0,
    "time": 3544.18505859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.103851474437171,
    "avg_bits_err_output": 11.103851474437171,
    "avg_bits_err_improve": 0,
    "time": 16935.55859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5259289385955593,
    "avg_bits_err_output": 0.434375,
    "avg_bits_err_improve": 0.09155393859555933,
    "time": 14088.45654296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -1.8e-8) (log (+ (/ 1.0 (hypot 1.0 x)) (+ (hypot 1.0 x) (- x (/ 1.0 (hypot 1.0 x)))))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 53.251528206832646,
    "avg_bits_err_output": 10.962048820004433,
    "avg_bits_err_improve": 42.28947938682821,
    "time": 17953.483154296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.740628981971858,
    "avg_bits_err_output": 5.740628981971858,
    "avg_bits_err_improve": 0,
    "time": 23418.191162109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 0,
    "time": 2707.339599609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1210.372802734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* (* w r) (* w r))) (- 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 12.582187331450612,
    "avg_bits_err_output": 6.621946633208632,
    "avg_bits_err_improve": 5.96024069824198,
    "time": 30139.857421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (+ (* (+ (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) -3.0) (* x1 (* (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) 2.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0)))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5148986108851147,
    "avg_bits_err_output": 0.28210826818543194,
    "avg_bits_err_improve": 0.23279034269968274,
    "time": 76304.0224609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma u u (* t1 (+ (+ t1 u) u))))",
    "output_parens": 7,
    "avg_bits_err_input": 18.313158470463996,
    "avg_bits_err_output": 18.311061269516664,
    "avg_bits_err_improve": 0.002097200947332567,
    "time": 11634.478515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2306079264948677,
    "avg_bits_err_output": 0.2306079264948677,
    "avg_bits_err_improve": 0,
    "time": 24713.458984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2649.13525390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (* (/ PI 2.0) (/ 1.0 (* (- b a) (+ b a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.656241829431005,
    "avg_bits_err_output": 9.479470588805777,
    "avg_bits_err_improve": 5.176771240625229,
    "time": 38990.253173828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (+ (exp (- (* x eps) x)) (- -1.0 (exp (* x (- -1.0 eps))))) -1.0)) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.178838880393464,
    "avg_bits_err_output": 1.3031632561436763,
    "avg_bits_err_improve": 27.875675624249787,
    "time": 37471.3232421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.0125,
    "avg_bits_err_output": 0.0125,
    "avg_bits_err_improve": 0,
    "time": 15957.954833984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.01725,
    "avg_bits_err_output": 0.01725,
    "avg_bits_err_improve": 0,
    "time": 25820.70166015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ (+ (* (/ (+ t t) (+ 1.0 t)) (/ (+ t t) (+ 1.0 t))) 2.0) -1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.04275,
    "avg_bits_err_output": 0.0375,
    "avg_bits_err_improve": 0.005250000000000005,
    "time": 22235.247802734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3450.775146484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3353.763916015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2672.880126953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.843910449075863,
    "avg_bits_err_output": 0.249875,
    "avg_bits_err_improve": 7.594035449075863,
    "time": 99606.04418945312,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.7158885577526855,
    "avg_bits_err_output": 7.7158885577526855,
    "avg_bits_err_improve": 0,
    "time": 24162.8369140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.11846614546361,
    "avg_bits_err_output": 16.11846614546361,
    "avg_bits_err_improve": 0,
    "time": 45843.2275390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (cos x) (exp (* 10.0 (* x x))) (fma (- (expm1 (* 10.0 (* x x)))) (- (cos x)) (* (expm1 (* 10.0 (* x x))) (- (cos x)))))",
    "output_parens": 18,
    "avg_bits_err_input": 3.5323393279850985,
    "avg_bits_err_output": 3.5310386966354543,
    "avg_bits_err_improve": 0.001300631349644199,
    "time": 22417.828857421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.29409370700576,
    "avg_bits_err_output": 15.29409370700576,
    "avg_bits_err_improve": 0,
    "time": 63734.183349609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.96791563568305,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.96791563568305,
    "time": 4912.1875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.30441054977922,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 38.30403554977922,
    "time": 4245.651611328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2985,
    "avg_bits_err_improve": 63.7015,
    "time": 3786.662353515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.843251042012014,
    "avg_bits_err_output": 0.3628977468942911,
    "avg_bits_err_improve": 61.48035329511772,
    "time": 23926.215087890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8941878028341,
    "avg_bits_err_output": 33.914625700394,
    "avg_bits_err_improve": -0.02043789755990133,
    "time": 18990.268310546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.88879999874394,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": 0,
    "time": 20208.84375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2237.47265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.16383456716739,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 40.15370956716739,
    "time": 10487.827392578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(log1p (expm1 (/ (- (* x x) (* y y)) (fma x x (* y y)))))",
    "output_parens": 8,
    "avg_bits_err_input": 20.353977514116686,
    "avg_bits_err_output": 20.35893382337495,
    "avg_bits_err_improve": -0.004956309258265179,
    "time": 5385.286376953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6186085787196505,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6186085787196505,
    "time": 4048.626708984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.036,
    "time": 5935.579833984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021969360937770434,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.010594360937770435,
    "time": 4196.15087890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01275,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.0013749999999999995,
    "time": 2285.55810546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1585.66748046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3988729328161961,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 0.15587293281619613,
    "time": 7675.45068359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.483744802675492,
    "avg_bits_err_output": 29.483744802675492,
    "avg_bits_err_improve": 0,
    "time": 87745.20166015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.967283559370152,
    "avg_bits_err_output": 24.967283559370152,
    "avg_bits_err_improve": 0,
    "time": 21370.369384765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.077157344841027,
    "avg_bits_err_output": 30.08894748091618,
    "avg_bits_err_improve": -0.011790136075152446,
    "time": 110866.13916015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00764624062518029,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.00652124062518029,
    "time": 3061.78759765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (- (+ (pow (+ 1.0 (/ i n)) n) -2.0) -1.0))) (/ i n)))",
    "output_parens": 10,
    "avg_bits_err_input": 47.686514191116316,
    "avg_bits_err_output": 47.76096235077127,
    "avg_bits_err_improve": -0.07444815965495621,
    "time": 113813.65698242188,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.1341579976068,
    "avg_bits_err_output": 26.1341579976068,
    "avg_bits_err_improve": 0,
    "time": 31193.971435546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* d a) (+ (* c b) (* d (* a -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 26.197595971955746,
    "avg_bits_err_output": 26.21493124826388,
    "avg_bits_err_improve": -0.017335276308134695,
    "time": 22831.644287109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03375,
    "avg_bits_err_output": 0.023450605288241753,
    "avg_bits_err_improve": 0.01029939471175825,
    "time": 8829.11962890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (fma (exp (log1p (* 2.0 PI))) uy (- uy))) (sqrt (fma (fma ux maxCos (- 1.0 ux)) ux (- (- (* (* ux maxCos) (+ (* ux maxCos) (- 2.0 ux))) ux)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.703806796572488,
    "avg_bits_err_output": 0.6782968054589892,
    "avg_bits_err_improve": 13.025509991113498,
    "time": 33299.25830078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- ux (* ux (+ ux (fma maxCos (fma ux maxCos (- (- 2.0 ux) ux)) -1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.741929338666584,
    "avg_bits_err_output": 0.34270870171322726,
    "avg_bits_err_improve": 13.399220636953356,
    "time": 37938.098876953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (- (* ux maxCos) (* (* ux maxCos) ux)) zi (fma (* (cos (* 2.0 (* PI uy))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* 2.0 (* PI uy)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.33763074281731875,
    "avg_bits_err_output": 0.3265002231014033,
    "avg_bits_err_improve": 0.011130519715915443,
    "time": 131103.34619140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.1906883504838014,
    "avg_bits_err_output": 0.1906883504838014,
    "avg_bits_err_improve": 0,
    "time": 21064.113037109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5439826908594201,
    "avg_bits_err_output": 0.5059567429145606,
    "avg_bits_err_improve": 0.03802594794485947,
    "time": 85281.38452148438,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (exp (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3170521316007832,
    "avg_bits_err_output": 0.3196370941015044,
    "avg_bits_err_improve": -0.0025849625007212107,
    "time": 36068.184814453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(+ (fma (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)) (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))) (* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 57,
    "avg_bits_err_input": 0.33130660728913075,
    "avg_bits_err_output": 0.3324924100556952,
    "avg_bits_err_improve": -0.0011858027665644366,
    "time": 42111.24072265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.061751992049796756,
    "avg_bits_err_output": 0.06278918953951308,
    "avg_bits_err_improve": -0.0010371974897163266,
    "time": 27632.646240234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.15397063354866408,
    "avg_bits_err_output": 0.1318950587183088,
    "avg_bits_err_improve": 0.02207557483035527,
    "time": 36709.30224609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.648488859115783,
    "avg_bits_err_output": 0.648488859115783,
    "avg_bits_err_improve": 0,
    "time": 15207.749755859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1675748508106349,
    "avg_bits_err_output": 0.16345586061346765,
    "avg_bits_err_improve": 0.004118990197167244,
    "time": 25404.786865234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4634390628625606,
    "avg_bits_err_output": 2.461625047994461,
    "avg_bits_err_improve": 0.0018140148680996226,
    "time": 18311.944091796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) (/ 2.0 (sinh (/ 1.0 v)))) (* v (sinh (/ 1.0 v)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.47404769640329625,
    "avg_bits_err_output": 0.48850808402028856,
    "avg_bits_err_improve": -0.01446038761699231,
    "time": 50454.6337890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1179853212986712,
    "avg_bits_err_output": 0.1179853212986712,
    "avg_bits_err_improve": 0,
    "time": 7626.632080078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (* alpha alpha)) (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (* PI (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (/ (/ PI PI) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.47274946954319436,
    "avg_bits_err_output": 0.5075949763022432,
    "avg_bits_err_improve": -0.034845506759048794,
    "time": 24568.33935546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (fma (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) (* (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) (/ s (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))) 0.0))",
    "output_parens": 19,
    "avg_bits_err_input": 1.3164124899728602,
    "avg_bits_err_output": 1.3394317109810108,
    "avg_bits_err_improve": -0.02301922100815057,
    "time": 56115.324462890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.394417548115204,
    "avg_bits_err_output": 11.998586038170728,
    "avg_bits_err_improve": 0.39583150994447536,
    "time": 52112.681640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1410571449845021,
    "avg_bits_err_output": 0.14016090435932183,
    "avg_bits_err_improve": 0.0008962406251802613,
    "time": 31942.499267578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) n1_i (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8889425159661124,
    "avg_bits_err_output": 0.8533539625555218,
    "avg_bits_err_improve": 0.03558855341059064,
    "time": 39844.815185546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (fma (exp (* cosTheta (- cosTheta))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (+ 1.0 c))) (/ 1.0 (/ 1.0 (fma (exp (* cosTheta (- cosTheta))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (+ 1.0 c)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.6715434552179841,
    "avg_bits_err_output": 0.5728667312653308,
    "avg_bits_err_improve": 0.09867672395265326,
    "time": 55004.064697265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (fma (sin (* 2.0 (* PI u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (sin (* 2.0 (* PI u2)))) -1.0) (sin (* 2.0 (* PI u2))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.621784274776658,
    "avg_bits_err_output": 13.44446830383167,
    "avg_bits_err_improve": 0.17731597094498852,
    "time": 43007.347412109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (+ (+ (* PI (+ u2 u2)) 2.0) -2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.665214078245482,
    "avg_bits_err_output": 13.671857909725537,
    "avg_bits_err_improve": -0.006643831480054985,
    "time": 40257.78515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (* alpha (* alpha alpha)) (fma (/ alpha (* alpha (- alpha))) (* (- alpha) (* (exp (log1p (/ (log (- 1.0 u0)) (* alpha (- alpha))))) alpha)) (* alpha (* alpha (/ alpha (* alpha (- alpha)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.170012526780337,
    "avg_bits_err_output": 13.855962089695298,
    "avg_bits_err_improve": 0.3140504370850383,
    "time": 33937.494384765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.597309665124838,
    "avg_bits_err_output": 12.597007242935744,
    "avg_bits_err_improve": 0.0003024221890939316,
    "time": 15769.160888671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+166) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI (* PI (* l (+ (exp (log1p (/ (/ l l) PI))) -1.0))))))) (if (<= (* PI l) -2e+25) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (* l l) (- (exp (log1p (/ PI l))) 1.0))))) (if (<= (* PI l) 20000000.0) (- (* PI l) (* (/ 1.0 (* F F)) (tan (expm1 (log1p (* PI l)))))) (if (<= (* PI l) 1e+144) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (* l l) (- (exp (log1p (/ PI l))) 1.0))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))))))",
    "output_parens": 66,
    "avg_bits_err_input": 16.6436605511083,
    "avg_bits_err_output": 15.175553297905628,
    "avg_bits_err_improve": 1.4681072532026729,
    "time": 26568.775390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20960112287783922,
    "avg_bits_err_output": 0.20853964124079802,
    "avg_bits_err_improve": 0.0010614816370412006,
    "time": 30106.429443359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (* (pow (fma 2.0 x (fma F F 2.0)) -0.5) (* (/ F (sin B)) (/ 1.0 (/ F (sin B)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.19585464388637,
    "avg_bits_err_output": 13.216017614201842,
    "avg_bits_err_improve": -0.02016297031547154,
    "time": 56482.47119140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (expm1 (log1p (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- (- 1.0 f) 1.0))))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 61.58779739507401,
    "avg_bits_err_output": 61.586961963156874,
    "avg_bits_err_improve": 0.0008354319171388624,
    "time": 59658.719970703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= l -1.18e+151) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (if (<= l 1.55e+115) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (/ (* (sqrt 2.0) t) (expm1 (log1p (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 42.70191322909703,
    "avg_bits_err_output": 36.03895196051473,
    "avg_bits_err_improve": 6.6629612685823005,
    "time": 31150.47119140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.202135922791699,
    "avg_bits_err_output": 4.202135922791699,
    "avg_bits_err_improve": 0,
    "time": 67637.91284179688,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.060151335454401,
    "avg_bits_err_output": 1.061276335454401,
    "avg_bits_err_improve": -0.0011250000000000426,
    "time": 12646.981201171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 4e-256) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (- U U*) (pow (/ l Om) 2.0)))) (* 2.0 n)))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 43,
    "avg_bits_err_input": 34.559575328156924,
    "avg_bits_err_output": 32.42507562759448,
    "avg_bits_err_improve": 2.1344997005624435,
    "time": 28019.52783203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+162) (/ 2.0 (* (fma (sin k) (* (/ (pow t 3.0) (* l l)) (tan k)) 0.0) (+ (pow (/ k t) 2.0) 0.0))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (* (sin k) (+ (/ (pow t 3.0) (* l l)) 1.0)) (* (tan k) (- (sin k)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 47.90102348639842,
    "avg_bits_err_output": 37.904539732048505,
    "avg_bits_err_improve": 9.996483754349917,
    "time": 61080.816650390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.68437030765328,
    "avg_bits_err_output": 32.64402744344834,
    "avg_bits_err_improve": 0.04034286420494482,
    "time": 21247.10498046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a2 a2)) (* a1 (* a1 (/ (cos th) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5266481234615706,
    "avg_bits_err_output": 0.4964924843993408,
    "avg_bits_err_improve": 0.030155639062229844,
    "time": 48976.96435546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* (/ 2.0 PI) (* n PI))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5506039723449057,
    "avg_bits_err_output": 0.5531653295687787,
    "avg_bits_err_improve": -0.002561357223873073,
    "time": 46435.009765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (cos (/ K 2.0)) (fma (exp l) (- J) (+ (* (exp l) J) (* J (- (exp l) (exp (- l))))))) U)",
    "output_parens": 15,
    "avg_bits_err_input": 17.57793623564195,
    "avg_bits_err_output": 17.58771088910264,
    "avg_bits_err_improve": -0.009774653460691951,
    "time": 42270.42822265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 2.0) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* (- (* (+ m n) (/ (/ K (+ m n)) (+ m n)))) (- (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 58,
    "avg_bits_err_input": 15.525022680929563,
    "avg_bits_err_output": 10.405022680929564,
    "avg_bits_err_improve": 5.119999999999999,
    "time": 18126.739990234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.301167481250364,
    "avg_bits_err_output": 18.301167481250364,
    "avg_bits_err_improve": 0,
    "time": 36976.827880859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.097235306350637,
    "avg_bits_err_output": 14.097235306350637,
    "avg_bits_err_improve": 0,
    "time": 19468.073486328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.458718662940683,
    "avg_bits_err_output": 18.458718662940683,
    "avg_bits_err_improve": 0,
    "time": 34609.101318359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* w (* D (* D h)))) (sqrt (- (* (/ (* d (* d c0)) (* w (* D (* D h)))) (/ (* d (* d c0)) (* w (* D (* D h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.269508356723485,
    "avg_bits_err_output": 57.11107068736221,
    "avg_bits_err_improve": 2.158437669361277,
    "time": 39074.059326171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* d 2.0)) 2.0)) (/ h l))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.68856513104088,
    "avg_bits_err_output": 26.68856513104088,
    "avg_bits_err_improve": 0,
    "time": 47160.73828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 16.00784359152053,
    "avg_bits_err_output": 16.00784359152053,
    "avg_bits_err_improve": 0,
    "time": 14856.39453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9842193609377705,
    "avg_bits_err_output": 0.015636842188131012,
    "avg_bits_err_improve": 0.9685825187496395,
    "time": 6946.798583984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (fma (- t (* v (* t v))) PI (* (- t (* v (* t v))) (* PI (+ -1.0 (sqrt (- 2.0 (* v (* v 6.0)))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.4448520355945246,
    "avg_bits_err_output": 0.34591028988804196,
    "avg_bits_err_improve": 0.09894174570648262,
    "time": 27283.490966796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014292481250360577,
    "avg_bits_err_output": 0.01214624062518029,
    "avg_bits_err_improve": 0.0021462406251802867,
    "time": 13592.680908203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- (* v (* v -5.0)) -1.0) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.515697075733991,
    "avg_bits_err_output": 0.515572075733991,
    "avg_bits_err_improve": 0.00012500000000004174,
    "time": 13108.589599609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (+ (* k (+ k 10.0)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 2.106638157000591,
    "avg_bits_err_output": 2.0802349616894436,
    "avg_bits_err_improve": 0.02640319531114743,
    "time": 15285.443603515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017997431866599887,
    "avg_bits_err_output": 0.017997431866599887,
    "avg_bits_err_improve": 0,
    "time": 8156.5419921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (- (* (+ (/ 4.0 b) 1.0) (* b (* b b))) (- (* b (fma b b 1.0)) b))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1822479328161959,
    "avg_bits_err_output": 0.2544979328161957,
    "avg_bits_err_improve": -0.07224999999999981,
    "time": 44169.81494140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1846298982688467,
    "avg_bits_err_output": 0.1846298982688467,
    "avg_bits_err_improve": 0,
    "time": 4517.993896484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(+ (* 4.0 (+ (* (* b b) (+ a 3.0)) (* a (* a (- 1.0 a))))) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.18933762053106826,
    "avg_bits_err_output": 0.19340020977346398,
    "avg_bits_err_improve": -0.00406258924239572,
    "time": 6906.3447265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma x x (* p (* 4.0 p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.235230172694507,
    "avg_bits_err_output": 13.243458783089757,
    "avg_bits_err_improve": -0.008228610395249802,
    "time": 14963.93701171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.279883517511536,
    "avg_bits_err_output": 0.050125,
    "avg_bits_err_improve": 40.229758517511534,
    "time": 5349.242919921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (- x -1.0) 1.0) (sin x)) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.887283812701988,
    "avg_bits_err_output": 26.175297035097447,
    "avg_bits_err_improve": 5.71198677760454,
    "time": 25935.962158203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma b_2 b_2 (* c (- a)))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.25679418892966,
    "avg_bits_err_output": 34.25777769128104,
    "avg_bits_err_improve": -0.00098350235138156,
    "time": 21229.456298828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.646977942311466,
    "avg_bits_err_output": 34.64637270027428,
    "avg_bits_err_improve": 0.0006052420371887024,
    "time": 19100.646240234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.51567623839316,
    "avg_bits_err_output": 31.51567623839316,
    "avg_bits_err_improve": 0,
    "time": 42762.977783203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.593478801695994,
    "avg_bits_err_output": 32.593478801695994,
    "avg_bits_err_improve": 0,
    "time": 50453.166259765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 29.482993288620186,
    "avg_bits_err_output": 29.483117328523058,
    "avg_bits_err_improve": -0.00012403990287168654,
    "time": 16359.232177734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.84130662861528,
    "avg_bits_err_output": 0.5772122974384944,
    "avg_bits_err_improve": 14.264094331176786,
    "time": 34160.15087890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (* (* (cos (+ x eps)) (* (cos (+ x eps)) (/ 1.0 (cos (+ x eps))))) (* (cos (+ x eps)) (/ 1.0 (cos (+ x eps))))) (+ -1.0 (+ (- 3.0 (cos x)) -2.0)))",
    "output_parens": 21,
    "avg_bits_err_input": 39.39427075411002,
    "avg_bits_err_output": 39.433959339200875,
    "avg_bits_err_improve": -0.03968858509085749,
    "time": 37615.021728515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.94498734798447,
    "avg_bits_err_output": 29.652496206868527,
    "avg_bits_err_improve": 0.2924911411159421,
    "time": 27556.7509765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.263074593365097,
    "avg_bits_err_output": 30.263074593365097,
    "avg_bits_err_improve": 0,
    "time": 85102.37548828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* a (* c -8.0)))))) (* 2.0 a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.195757106768276,
    "avg_bits_err_output": 34.22626326244955,
    "avg_bits_err_improve": -0.03050615568127313,
    "time": 19399.485595703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.44614432655109,
    "avg_bits_err_output": 34.44614432655109,
    "avg_bits_err_improve": 0,
    "time": 24768.20703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.305152710857946,
    "avg_bits_err_output": 59.9757104432549,
    "avg_bits_err_improve": 1.3294422676030493,
    "time": 52059.78857421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 62.99370881589905,
    "avg_bits_err_output": 0.13109884732707303,
    "avg_bits_err_improve": 62.862609968571974,
    "time": 33902.60693359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.463043797532045,
    "avg_bits_err_output": 58.463043797532045,
    "avg_bits_err_improve": 0,
    "time": 112339.33959960938,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (- -1.0 (/ 1.0 (tan x))) (- (- (exp (log1p (* (/ 1.0 (tan x)) (- (/ 1.0 (- -1.0 (/ 1.0 (tan x)))))))) 1.0) (/ 1.0 (- -1.0 (/ 1.0 (tan x))))) (+ 1.0 (/ 1.0 x)))",
    "output_parens": 22,
    "avg_bits_err_input": 59.90029006700842,
    "avg_bits_err_output": 59.87453564151547,
    "avg_bits_err_improve": 0.025754425492948485,
    "time": 48554.576904296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (fma (expm1 (* eps (+ a b))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps (+ a b))))) 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 18,
    "avg_bits_err_input": 60.35248503890346,
    "avg_bits_err_output": 41.00949456834877,
    "avg_bits_err_improve": 19.34299047055469,
    "time": 29398.53759765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.71257744821935,
    "avg_bits_err_output": 0.4538962406251803,
    "avg_bits_err_improve": 40.25868120759417,
    "time": 8180.74755859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.639894128298145,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.63939412829814,
    "time": 2814.629638671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 28.49945657089388,
    "avg_bits_err_output": 0.01815499375684071,
    "avg_bits_err_improve": 28.48130157713704,
    "time": 4298.742919921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.14058623538579,
    "avg_bits_err_output": 28.224422021859144,
    "avg_bits_err_improve": 0.9161642135266455,
    "time": 28234.48974609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.00177022459701,
    "avg_bits_err_output": 10.00177022459701,
    "avg_bits_err_improve": 0,
    "time": 42030.199462890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.06446869702387,
    "avg_bits_err_output": 37.06446869702387,
    "avg_bits_err_improve": 0,
    "time": 36933.54248046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.073167042723615,
    "avg_bits_err_output": 29.39007016662113,
    "avg_bits_err_improve": 0.6830968761024856,
    "time": 35398.325439453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin x) (log1p (expm1 (+ (sin (+ x eps)) (* (sin x) -2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 37.03248519238114,
    "avg_bits_err_output": 37.09147661021918,
    "avg_bits_err_improve": -0.05899141783804396,
    "time": 37055.3994140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.56944854718025,
    "avg_bits_err_output": 19.56944854718025,
    "avg_bits_err_improve": 0,
    "time": 32053.7216796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (- (atan (+ N 1.0)) 1.0) -1.0) (atan N))",
    "output_parens": 6,
    "avg_bits_err_input": 14.825275473549802,
    "avg_bits_err_output": 14.826014469124623,
    "avg_bits_err_improve": -0.0007389955748209331,
    "time": 29450.40185546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.209372297151717,
    "avg_bits_err_output": 29.209372297151717,
    "avg_bits_err_improve": 0,
    "time": 41953.2255859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07142932343849158,
    "avg_bits_err_output": 0.07551621282076107,
    "avg_bits_err_improve": -0.00408688938226949,
    "time": 28708.068115234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.494462756005221,
    "avg_bits_err_output": 0.31277161719245794,
    "avg_bits_err_improve": 15.181691138812763,
    "time": 17514.561279296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ angle 180.0) (* (/ angle 180.0) (* (* (/ angle 180.0) (/ PI (/ angle 180.0))) (/ 1.0 (/ angle 180.0))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.553976437900413,
    "avg_bits_err_output": 20.82558778900328,
    "avg_bits_err_improve": -0.27161135110286594,
    "time": 55706.183837890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (expm1 (log1p (sin (* PI (/ angle 180.0)))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.68913021245405,
    "avg_bits_err_output": 31.689259622555355,
    "avg_bits_err_improve": -0.00012941010130518293,
    "time": 73427.16821289062,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (fma (/ angle 180.0) (* PI (exp (log1p (/ (/ angle 180.0) (/ angle 180.0))))) (- (* (/ angle 180.0) PI))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.992348440806676,
    "avg_bits_err_output": 21.006496961666315,
    "avg_bits_err_improve": -0.01414852085963858,
    "time": 94014.75341796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18145772226222148,
    "avg_bits_err_output": 0.179590467732707,
    "avg_bits_err_improve": 0.0018672545295144727,
    "time": 20025.060302734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (- (tan x)) 1.0) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.32372057079218763,
    "avg_bits_err_output": 0.31334727931679757,
    "avg_bits_err_improve": 0.010373291475390067,
    "time": 25354.088623046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1403962406251803,
    "avg_bits_err_output": 0.1403962406251803,
    "avg_bits_err_improve": 0,
    "time": 33486.70361328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (/ (sin phi2) (sin phi1)) (* (sin phi1) (sin phi1))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 16,
    "avg_bits_err_input": 16.526754732811064,
    "avg_bits_err_output": 16.534426497732166,
    "avg_bits_err_improve": -0.007671764921102664,
    "time": 58939.22900390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.9e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (* (fma b b (* c (* a -4.0))) (/ 1.0 (fma a (* c -4.0) (* b b))))))) (- b)) (+ a a)) (/ (- (- (- (sqrt (fma b b (* a (* c -4.0)))) -1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.58784690087849,
    "avg_bits_err_output": 50.534361567012034,
    "avg_bits_err_improve": 2.0534853338664547,
    "time": 24781.559326171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.054785036784796,
    "avg_bits_err_output": 27.979981454879578,
    "avg_bits_err_improve": 0.07480358190521841,
    "time": 25886.85986328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-17) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (- (+ (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (sqrt (fma c (* a -4.0) (* b b)))) b) (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))) (+ a a)))",
    "output_parens": 37,
    "avg_bits_err_input": 43.88496704593725,
    "avg_bits_err_output": 41.52411406320321,
    "avg_bits_err_improve": 2.3608529827340448,
    "time": 27588.75341796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* a (* c -8.0)))))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 34.194225814587526,
    "avg_bits_err_output": 34.22626326244955,
    "avg_bits_err_improve": -0.03203744786202378,
    "time": 21638.241943359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos (- lambda1 lambda2)) (+ (fma (cos phi2) (/ (cos (- lambda1 lambda2)) (cos (- lambda1 lambda2))) 1.0) -1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.8901279830007941,
    "avg_bits_err_output": 0.9052532380748534,
    "avg_bits_err_improve": -0.015125255074059263,
    "time": 35248.8525390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.18561948043984,
    "avg_bits_err_output": 29.18561948043984,
    "avg_bits_err_improve": 0,
    "time": 9060.232666015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.03829425603023,
    "avg_bits_err_output": 1.2016062031259016,
    "avg_bits_err_improve": 56.83668805290433,
    "time": 12968.041015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.95333233912599,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 57.945457339125994,
    "time": 6478.24365234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01337461079306209,
    "avg_bits_err_output": 0.01337461079306209,
    "avg_bits_err_improve": 0,
    "time": 2549.420654296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.129375,
    "avg_bits_err_output": 32.129375,
    "avg_bits_err_improve": 0,
    "time": 4599.779541015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.44706635597823,
    "avg_bits_err_output": 58.44706635597823,
    "avg_bits_err_improve": 0,
    "time": 135192.42749023438,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04344812031259015,
    "avg_bits_err_output": 0.04344812031259015,
    "avg_bits_err_improve": 0,
    "time": 2938.19921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (fma (cos t) (* (cos t) (/ eh (cos t))) 0.0) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12591748125036056,
    "avg_bits_err_output": 0.14979492500144231,
    "avg_bits_err_improve": -0.02387744375108175,
    "time": 67583.775390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12221936093777043,
    "avg_bits_err_output": 0.12221936093777043,
    "avg_bits_err_improve": 0,
    "time": 27896.513671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (+ lambda1 (- lambda1 lambda2)) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) (- lambda1))) (- phi1 phi2)))",
    "output_parens": 14,
    "avg_bits_err_input": 38.550200061136444,
    "avg_bits_err_output": 4.125343524210474,
    "avg_bits_err_improve": 34.42485653692597,
    "time": 46510.1953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (fma a a (* b (- b))) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.63862258158851,
    "avg_bits_err_output": 14.639424461275919,
    "avg_bits_err_improve": -0.0008018796874083023,
    "time": 6019.001708984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (log1p (expm1 (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1578551135373302,
    "avg_bits_err_output": 0.1623794626082167,
    "avg_bits_err_improve": -0.004524349070886502,
    "time": 46600.818359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 2.3e+16) (/ (fma (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (fma (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (/ (/ 1.0 (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) 0.0)) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (+ (* b b) (* a (* c -3.0)))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 55,
    "avg_bits_err_input": 52.604906270673375,
    "avg_bits_err_output": 50.575408336510336,
    "avg_bits_err_improve": 2.0294979341630395,
    "time": 36013.63671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.272329037636187,
    "avg_bits_err_output": 28.20570914441888,
    "avg_bits_err_improve": 0.06661989321730744,
    "time": 23420.67822265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (* (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (/ 1.0 (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))))))) (- b)) (* 3.0 a))",
    "output_parens": 39,
    "avg_bits_err_input": 43.96643487876498,
    "avg_bits_err_output": 43.03634898956773,
    "avg_bits_err_improve": 0.930085889197251,
    "time": 29886.264404296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.196854534573504,
    "avg_bits_err_output": 34.196854534573504,
    "avg_bits_err_improve": 0,
    "time": 26079.5087890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (sin phi1) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.156630702960724,
    "avg_bits_err_output": 13.157003140873721,
    "avg_bits_err_improve": -0.00037243791299701456,
    "time": 57024.740966796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (fma (- (* (/ (+ 1.0 x) (+ -1.0 x)) (expm1 (log1p (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))))))) (/ (+ 1.0 x) (+ -1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))) (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))))",
    "output_parens": 25,
    "avg_bits_err_input": 29.514354193511846,
    "avg_bits_err_output": 30.423502858163367,
    "avg_bits_err_improve": -0.9091486646515214,
    "time": 144224.54370117188,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (- (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) 1.0) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.013,
    "avg_bits_err_output": 0.012356203125901449,
    "avg_bits_err_improve": 0.0006437968740985508,
    "time": 6453.549560546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (* (/ 1.0 (/ 1.0 (+ -1.0 x))) (* (* (fma (/ 1.0 (+ -1.0 x)) (/ 1.0 (/ 1.0 (+ -1.0 x))) -1.0) (fma (/ 1.0 (+ -1.0 x)) (/ 1.0 (/ 1.0 (+ -1.0 x))) -1.0)) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))))",
    "output_parens": 29,
    "avg_bits_err_input": 14.359911804127425,
    "avg_bits_err_output": 14.31063524370605,
    "avg_bits_err_improve": 0.04927656042137407,
    "time": 85615.53686523438,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (fma (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* F 2.0) (* A (+ F F)))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.764235445500084,
    "avg_bits_err_output": 52.5002256510978,
    "avg_bits_err_improve": 0.2640097944022841,
    "time": 39883.948974609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.396248183615747,
    "avg_bits_err_output": 29.396248183615747,
    "avg_bits_err_improve": 0,
    "time": 38541.8193359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.38526105972533,
    "avg_bits_err_output": 52.06688519210601,
    "avg_bits_err_improve": 0.31837586761932357,
    "time": 36001.978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.471001910125102,
    "avg_bits_err_output": 15.471001910125102,
    "avg_bits_err_improve": 0,
    "time": 2154.95654296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.41911381376894,
    "avg_bits_err_output": 36.41911381376894,
    "avg_bits_err_improve": 0,
    "time": 22532.329833984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (log (exp (/ (acos (/ (- g) h)) 3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9922577078205239,
    "avg_bits_err_output": 0.9927789484457042,
    "avg_bits_err_improve": -0.0005212406251803303,
    "time": 6777.4453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7405,
    "avg_bits_err_output": 0.7405,
    "avg_bits_err_improve": 0,
    "time": 7703.197509765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.56122765733664,
    "avg_bits_err_output": 11.56122765733664,
    "avg_bits_err_improve": 0,
    "time": 24892.65771484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4620794223799711,
    "avg_bits_err_output": 0.4232259193652572,
    "avg_bits_err_improve": 0.03885350301471391,
    "time": 13628.176025390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.80995237557292,
    "avg_bits_err_output": 16.1562490759144,
    "avg_bits_err_improve": 36.65370329965852,
    "time": 45533.85205078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.6820655613684465,
    "avg_bits_err_output": 5.681033610625166,
    "avg_bits_err_improve": 0.001031950743280774,
    "time": 33862.494140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0)) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.013146240625180288,
    "avg_bits_err_improve": 0.0008537593748197125,
    "time": 21158.990234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1152.426025390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+66) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 1.5e-45) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.81312687351412,
    "avg_bits_err_output": 6.696196053128779,
    "avg_bits_err_improve": 6.116930820385341,
    "time": 27348.33056640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* (+ (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (+ x1 x1) (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)))) (* (* x1 x1) (fma (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5178261617280987,
    "avg_bits_err_output": 0.28704477900030584,
    "avg_bits_err_improve": 0.23078138272779286,
    "time": 76602.79443359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.86576924066963,
    "avg_bits_err_output": 17.86576924066963,
    "avg_bits_err_improve": 0,
    "time": 33083.236572265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2370827222622215,
    "avg_bits_err_output": 0.1859052428037488,
    "avg_bits_err_improve": 0.0511774794584727,
    "time": 21608.2666015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0031981203125901443,
    "avg_bits_err_output": 0.0031981203125901443,
    "avg_bits_err_improve": 0,
    "time": 3142.646240234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.890576369762117,
    "avg_bits_err_output": 9.209588557102698,
    "avg_bits_err_improve": 4.680987812659419,
    "time": 44116.547607421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.582559723460626,
    "avg_bits_err_output": 0.879378619484345,
    "avg_bits_err_improve": 28.70318110397628,
    "time": 34815.507080078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.021875,
    "avg_bits_err_output": 0.021875,
    "avg_bits_err_improve": 0,
    "time": 16131.28759765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025125,
    "avg_bits_err_output": 0.04040601562950719,
    "avg_bits_err_improve": -0.015281015629507191,
    "time": 31381.583984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) (/ (+ t t) (+ t 1.0)))) (+ 2.0 (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) (* (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (- (* (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (+ 1.0 (/ (+ t t) (+ t 1.0)))) (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.033375,
    "avg_bits_err_output": 0.03232312031259015,
    "avg_bits_err_improve": 0.0010518796874098499,
    "time": 36319.440673828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 4133.35791015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2506.147705078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3396.262451171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.85217844556147,
    "avg_bits_err_output": 0.250625,
    "avg_bits_err_improve": 7.6015534455614695,
    "time": 91333.640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.356420441774422,
    "avg_bits_err_output": 7.356420441774422,
    "avg_bits_err_improve": 0,
    "time": 25548.59619140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.065916226199413,
    "avg_bits_err_output": 16.065916226199413,
    "avg_bits_err_improve": 0,
    "time": 29585.442138671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (+ (* (expm1 (* 10.0 (* x x))) (* (expm1 (* 10.0 (* x x))) (/ 1.0 (- (exp (* 10.0 (* x x))) 1.0)))) 1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 3.545927065533903,
    "avg_bits_err_output": 3.5463162546321416,
    "avg_bits_err_improve": -0.00038918909823859593,
    "time": 22084.657958984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.28054089694213,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.28054089694213,
    "time": 3784.76708984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.16200663003109,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.16125663003109,
    "time": 4606.268798828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.297375,
    "avg_bits_err_improve": 63.702625,
    "time": 4469.917724609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.84324714829695,
    "avg_bits_err_output": 0.3452633484572418,
    "avg_bits_err_improve": 61.49798379983971,
    "time": 23182.526123046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.44614432655109,
    "avg_bits_err_output": 34.44614432655109,
    "avg_bits_err_improve": 0,
    "time": 21430.52490234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* a (* c -8.0)))))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 34.194225814587526,
    "avg_bits_err_output": 34.22626326244955,
    "avg_bits_err_improve": -0.03203744786202378,
    "time": 19596.703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1978.46826171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.02494290489038,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 40.01456790489038,
    "time": 3219.516845703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.003784732652008,
    "avg_bits_err_output": 20.003784732652008,
    "avg_bits_err_improve": 0,
    "time": 3491.807861328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.640094545805552,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.640094545805552,
    "time": 5499.049560546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03475,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.034375,
    "time": 6367.978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma (+ a b) b (* a (+ a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.02429248125036058,
    "avg_bits_err_output": 0.01625,
    "avg_bits_err_improve": 0.00804248125036058,
    "time": 4263.567138671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.013375,
    "time": 5702.857421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1553.399169921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e (+ c d)) (+ a b))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4062834593805893,
    "avg_bits_err_output": 0.309625,
    "avg_bits_err_improve": 0.09665845938058931,
    "time": 8085.87890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.794982550211905,
    "avg_bits_err_output": 29.794982550211905,
    "avg_bits_err_improve": 0,
    "time": 8320.605712890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(+ (* (sqrt (- (* x x) eps)) (sqrt (- (* x x) eps))) (- 0.0 (- (+ (sqrt (- (* x x) eps)) (* (sqrt (- (* x x) eps)) (sqrt (- (* x x) eps)))) x)))",
    "output_parens": 21,
    "avg_bits_err_input": 24.974306063092257,
    "avg_bits_err_output": 25.02931281983986,
    "avg_bits_err_improve": -0.055006756747602026,
    "time": 14225.422119140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.917198975434502,
    "avg_bits_err_output": 29.91738556334838,
    "avg_bits_err_improve": -0.0001865879138769344,
    "time": 60774.47119140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005448120312590145,
    "avg_bits_err_output": 0.005448120312590145,
    "avg_bits_err_improve": 0,
    "time": 1684.4716796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.42313709608519,
    "avg_bits_err_output": 47.42313709608519,
    "avg_bits_err_improve": 0,
    "time": 169802.46142578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.400683635839055,
    "avg_bits_err_output": 26.399735515526462,
    "avg_bits_err_improve": 0.0009481203125929483,
    "time": 34393.27001953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* a (- d))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.865055488060655,
    "avg_bits_err_output": 25.86440924743548,
    "avg_bits_err_improve": 0.0006462406251763753,
    "time": 32745.8466796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03575,
    "avg_bits_err_output": 0.03575,
    "avg_bits_err_improve": 0,
    "time": 6902.57763671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- ux (- (+ (* ux (* maxCos (- (- (fma ux maxCos 2.0) ux) ux))) 0.0) (- ux (* ux ux))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.53660620613949,
    "avg_bits_err_output": 0.5391482447825151,
    "avg_bits_err_improve": 12.997457961356975,
    "time": 30718.040771484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* PI (* uy 2.0))) (sqrt (+ (* ux 2.0) (- (* ux (- (* ux maxCos) ux)) (* ux (* maxCos (- (fma ux maxCos 2.0) ux)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.573655209608024,
    "avg_bits_err_output": 0.3214588054204088,
    "avg_bits_err_improve": 13.252196404187615,
    "time": 33786.676025390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3487942396280732,
    "avg_bits_err_output": 0.33880017772938215,
    "avg_bits_err_improve": 0.009994061898691065,
    "time": 65971.18090820312,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19875731732960175,
    "avg_bits_err_output": 0.1988494380288726,
    "avg_bits_err_improve": -9.212069927083677e-05,
    "time": 19422.2412109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5274287772379858,
    "avg_bits_err_output": 0.4887680263550164,
    "avg_bits_err_improve": 0.03866075088296933,
    "time": 98005.24853515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (exp (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3212644161665526,
    "avg_bits_err_output": 0.32340125835468364,
    "avg_bits_err_improve": -0.0021368421881310384,
    "time": 39147.531005859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (- (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3398029990847761,
    "avg_bits_err_output": 0.33895863814700566,
    "avg_bits_err_improve": 0.0008443609377704608,
    "time": 40671.705810546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(log1p (expm1 (/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.055718613676711756,
    "avg_bits_err_output": 0.06371099375684197,
    "avg_bits_err_improve": -0.007992380080130215,
    "time": 18058.35693359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16732094247556387,
    "avg_bits_err_output": 0.14811173126723456,
    "avg_bits_err_improve": 0.019209211208329302,
    "time": 17323.983154296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (* (/ (sin (* x PI)) (* x PI)) (* (/ (sin (* x PI)) (* x PI)) (/ 1.0 (/ (sin (* x PI)) (* x PI))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6693614518190241,
    "avg_bits_err_output": 0.6942432611561251,
    "avg_bits_err_improve": -0.024881809337101046,
    "time": 20864.38427734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.14976554748583387,
    "avg_bits_err_output": 0.15367744657322355,
    "avg_bits_err_improve": -0.003911899087389675,
    "time": 25154.25244140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5517181718552395,
    "avg_bits_err_output": 2.5497890519293303,
    "avg_bits_err_improve": 0.0019291199259092728,
    "time": 13576.6435546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ (+ (/ (* sinTheta_i sinTheta_O) v) 2.0) -2.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46066836139509765,
    "avg_bits_err_output": 0.4610062051299512,
    "avg_bits_err_improve": -0.0003378437348535712,
    "time": 33459.306640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) (+ (log (/ 1.0 (* v 2.0))) 0.6931)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1147120518670971,
    "avg_bits_err_output": 0.11484374615620149,
    "avg_bits_err_improve": -0.00013169428910439485,
    "time": 8031.953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (* alpha alpha)) (* PI (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.45996173427410836,
    "avg_bits_err_output": 0.48726558712031753,
    "avg_bits_err_improve": -0.027303852846209176,
    "time": 20541.564697265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log1p (expm1 (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.317276311743076,
    "avg_bits_err_output": 1.3181888958005106,
    "avg_bits_err_improve": -0.0009125840574346622,
    "time": 35748.066650390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.682042951267007,
    "avg_bits_err_output": 12.268978186197625,
    "avg_bits_err_improve": 0.4130647650693824,
    "time": 62277.727294921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (- (* r (* s (exp (log1p (* PI 6.0))))) (* s r))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.13378643935956866,
    "avg_bits_err_output": 0.13809111447923594,
    "avg_bits_err_improve": -0.004304675119667284,
    "time": 50464.584716796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (log1p (expm1 (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.9084112578988484,
    "avg_bits_err_output": 0.916278647136655,
    "avg_bits_err_improve": -0.00786738923780661,
    "time": 46180.02685546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (- (+ 1.0 (/ 1.0 (sqrt PI))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.678554291109187,
    "avg_bits_err_output": 0.6756671125560814,
    "avg_bits_err_improve": 0.002887178553105607,
    "time": 33709.1640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(fma (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2))) (fma (* (/ 1.0 (sin (* 2.0 (* PI u2)))) (- (sin (* 2.0 (* PI u2))))) (sin (* 2.0 (* u2 (* PI (* (- (- u2)) (/ 1.0 u2)))))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 29,
    "avg_bits_err_input": 13.461463227361117,
    "avg_bits_err_output": 13.340067611184041,
    "avg_bits_err_improve": 0.12139561617707528,
    "time": 78388.7509765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (* PI (+ u2 u2))) (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 13.50769491823571,
    "avg_bits_err_output": 13.440339372912836,
    "avg_bits_err_improve": 0.06735554532287402,
    "time": 47809.635986328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* alpha (- alpha)) (fma (* alpha (* alpha alpha)) (* alpha (/ (log (- 1.0 u0)) (* alpha (- alpha)))) (* alpha (* alpha alpha))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.041905495798238,
    "avg_bits_err_output": 13.696785289895784,
    "avg_bits_err_improve": 0.34512020590245385,
    "time": 44008.822509765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (expm1 (log1p (/ cos2phi (* alphax alphax))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 18,
    "avg_bits_err_input": 12.349824006685278,
    "avg_bits_err_output": 12.353351826812576,
    "avg_bits_err_improve": -0.0035278201272976872,
    "time": 53804.90283203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (+ (/ PI l) 1.0)) l) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 17.053863350340244,
    "avg_bits_err_output": 13.289073312760635,
    "avg_bits_err_improve": 3.7647900375796084,
    "time": 36305.31982421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.217504167120048,
    "avg_bits_err_output": 0.217504167120048,
    "avg_bits_err_improve": 0,
    "time": 32996.483154296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 14.088389699750529,
    "avg_bits_err_output": 14.088389699750529,
    "avg_bits_err_improve": 0,
    "time": 42143.96875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (- (* (/ 1.0 (/ PI 4.0)) (* (/ (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))))) (/ 1.0 (/ PI 4.0))) (exp (log1p (/ 1.0 (/ PI 4.0)))))) (* (/ 1.0 (/ PI 4.0)) (/ (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (- 1.0 (exp (log1p (* (/ PI 4.0) f)))))))) (/ 1.0 (/ PI 4.0))))))",
    "output_parens": 57,
    "avg_bits_err_input": 61.656665015601824,
    "avg_bits_err_output": 61.67727647271379,
    "avg_bits_err_improve": -0.020611457111968434,
    "time": 93483.396484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.15e-69) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l))))) (if (<= t 1.65e-174) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (* l (+ (/ (+ 1.0 x) (+ x -1.0)) (* l (/ -1.0 l))))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l)))))))",
    "output_parens": 61,
    "avg_bits_err_input": 43.0332305403977,
    "avg_bits_err_output": 36.346246212498336,
    "avg_bits_err_improve": 6.686984327899367,
    "time": 42960.777587890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.822046058506583,
    "avg_bits_err_output": 3.822046058506583,
    "avg_bits_err_improve": 0,
    "time": 59047.99755859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0909239778258346,
    "avg_bits_err_output": 1.0909239778258346,
    "avg_bits_err_improve": 0,
    "time": 11672.48779296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.250903229399619,
    "avg_bits_err_output": 10.250903229399619,
    "avg_bits_err_improve": 0,
    "time": 80563.87622070312,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-302) (sqrt (* (+ n n) (* U (- (* (pow (/ l Om) 2.0) (* n (- U* U))) (- (* 2.0 (/ (* l l) Om)) t))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+290) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* (pow (/ l Om) 2.0) (* n (* (- U U*) (* n (* U -2.0))))) (* (* (+ n n) U) (- (* 2.0 (/ (* l l) Om)) t))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.73260626226498,
    "avg_bits_err_output": 31.576607623089963,
    "avg_bits_err_improve": 3.155998639175017,
    "time": 26180.40673828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (sin k) (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (exp (log1p (/ (pow t 3.0) (* l l)))) (* (tan k) (sin k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.42179906374774,
    "avg_bits_err_output": 37.945987862287716,
    "avg_bits_err_improve": 9.475811201460026,
    "time": 50053.3720703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (tan k)) (* (+ 2.0 (pow (/ k t) 2.0)) (sin k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.4004713729434,
    "avg_bits_err_output": 32.38474581777267,
    "avg_bits_err_improve": 0.015725555170732264,
    "time": 36784.61328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (fma a2 a2 (* a1 a1)) (/ (cos th) (sqrt 2.0))) (expm1 (log1p (* (/ (cos th) (sqrt 2.0)) (/ (cos th) (sqrt 2.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5111644765845871,
    "avg_bits_err_output": 0.5919818023709306,
    "avg_bits_err_improve": -0.08081732578634349,
    "time": 40446.942626953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (/ n (* 2.0 PI)) (* PI (* PI 4.0))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4632588704756291,
    "avg_bits_err_output": 0.46606862548820216,
    "avg_bits_err_improve": -0.0028097550125730786,
    "time": 47676.75146484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (* (cos (/ K 2.0)) (* J (- (exp l) (exp (- l))))) (* (cos (/ K 2.0)) (fma (- (exp (- l))) J (* J (exp (- l)))))) U)",
    "output_parens": 20,
    "avg_bits_err_input": 17.31387788804528,
    "avg_bits_err_output": 17.318363321181923,
    "avg_bits_err_improve": -0.004485433136643735,
    "time": 46918.707763671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 2.0) (* (cos (- (/ (* (+ (+ m (+ n 1.0)) -1.0) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* (- (* (+ m n) (- (exp (log1p (/ (/ K (+ m n)) (+ m n)))) 1.0))) (- (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 63,
    "avg_bits_err_input": 15.628191190906573,
    "avg_bits_err_output": 3.3731962182960884,
    "avg_bits_err_improve": 12.254994972610485,
    "time": 32090.858642578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.778667481250363,
    "avg_bits_err_output": 17.778667481250363,
    "avg_bits_err_improve": 0,
    "time": 38728.778564453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.522832118794017,
    "avg_bits_err_output": 14.522832118794017,
    "avg_bits_err_improve": 0,
    "time": 30087.632080078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.03724219765438,
    "avg_bits_err_output": 19.03724219765438,
    "avg_bits_err_improve": 0,
    "time": 23820.22607421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -5.4e+130) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* (* w h) (* D D))) (sqrt (* (- (/ (* d (* d c0)) (* (* w h) (* D D))) M) (+ (/ (* d (* d c0)) (* (* w h) (* D D))) M))))) (if (<= d 4e+99) (* (/ c0 (* 2.0 w)) (/ (+ (/ (* c0 (* d d)) (* w (* D (* h D)))) (sqrt (- (* (/ (* c0 (* d d)) (* w (* D (* h D)))) (/ (* c0 (* d d)) (* w (* D (* h D))))) (* M M)))) 1.0)) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* (* w h) (* D D))) (sqrt (* (- (/ (* d (* c0 d)) (* w (* D (* D h)))) M) (+ (/ (* d (* d c0)) (* (* w h) (* D D))) M)))))))",
    "output_parens": 83,
    "avg_bits_err_input": 59.62991978504072,
    "avg_bits_err_output": 57.91419179049149,
    "avg_bits_err_improve": 1.7157279945492263,
    "time": 41886.42333984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (expm1 (log1p (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)))) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d l) 0.5) (* 0.5 (* (pow (/ d h) 0.5) (/ h l)))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* d 2.0)) 2.0)) (/ h l)))))",
    "output_parens": 52,
    "avg_bits_err_input": 26.625379458411643,
    "avg_bits_err_output": 26.06049673621729,
    "avg_bits_err_improve": 0.5648827221943549,
    "time": 50336.49755859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.827180933665998,
    "avg_bits_err_output": 15.827180933665998,
    "avg_bits_err_improve": 0,
    "time": 60959.2099609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9823231203125902,
    "avg_bits_err_output": 0.012896240625180291,
    "avg_bits_err_improve": 0.9694268796874099,
    "time": 9347.9052734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* v (* v t))) (* (sqrt (fma v (* v -6.0) 2.0)) PI)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46706241769983164,
    "avg_bits_err_output": 0.40548892081996346,
    "avg_bits_err_improve": 0.061573496879868184,
    "time": 20091.103759765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012896240625180291,
    "avg_bits_err_output": 0.012896240625180291,
    "avg_bits_err_improve": 0,
    "time": 3684.451904296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5246140864383407,
    "avg_bits_err_output": 0.5246140864383407,
    "avg_bits_err_improve": 0,
    "time": 11969.656494140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (fma k (+ k 10.0) 1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 2.1306996052535694,
    "avg_bits_err_output": 2.096105244315799,
    "avg_bits_err_improve": 0.034594360937770574,
    "time": 21808.189697265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02299749334274228,
    "avg_bits_err_output": 0.02299749334274228,
    "avg_bits_err_improve": 0,
    "time": 8046.197021484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18560825061850234,
    "avg_bits_err_output": 0.18796200999332205,
    "avg_bits_err_improve": -0.002353759374819714,
    "time": 46079.847900390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1839420758309814,
    "avg_bits_err_output": 0.1839420758309814,
    "avg_bits_err_improve": 0,
    "time": 34355.42529296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (+ (* b (* b a)) (* b (* b 3.0)))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1864564212650287,
    "avg_bits_err_output": 0.18652954157761886,
    "avg_bits_err_improve": -7.312031259015805e-05,
    "time": 26923.380859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log1p (expm1 (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.228236724088283,
    "avg_bits_err_output": 13.228736724088282,
    "avg_bits_err_improve": -0.0004999999999988347,
    "time": 19285.65869140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (+ (+ (/ (expm1 (+ x x)) (expm1 x)) 2.0) -2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 41.60856231977707,
    "avg_bits_err_output": 0.06969812031259014,
    "avg_bits_err_improve": 41.538864199464484,
    "time": 7214.15869140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- (- (- x -1.0) 1.0) (tan x)))",
    "output_parens": 7,
    "avg_bits_err_input": 31.193350173374697,
    "avg_bits_err_output": 30.421821453751793,
    "avg_bits_err_improve": 0.7715287196229035,
    "time": 19946.686279296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.538466372829376,
    "avg_bits_err_output": 34.538466372829376,
    "avg_bits_err_improve": 0,
    "time": 19758.701904296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.359671427520006,
    "avg_bits_err_output": 34.358684847038035,
    "avg_bits_err_improve": 0.0009865804819710888,
    "time": 18319.56396484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.863183204671362,
    "avg_bits_err_output": 31.863183204671362,
    "avg_bits_err_improve": 0,
    "time": 30603.33837890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(log1p (- (+ (expm1 (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))) -1.0) -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 32.715736835205774,
    "avg_bits_err_output": 32.789436624875776,
    "avg_bits_err_improve": -0.07369978967000179,
    "time": 43840.908203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 28.931379202585735,
    "avg_bits_err_output": 28.931974773476032,
    "avg_bits_err_improve": -0.0005955708902973811,
    "time": 32014.623291015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 x)) (* (/ 1.0 x) 2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 14.697968263542883,
    "avg_bits_err_output": 14.727284869940576,
    "avg_bits_err_improve": -0.029316606397692624,
    "time": 24098.765380859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (+ -2.0 (* (/ 1.0 (- 2.0 (cos x))) (* (- 2.0 (cos x)) (- (* (cos x) (* (/ 1.0 (- 2.0 (cos x))) (- (cos x) 2.0))) (* (- 2.0 (cos x)) (* -2.0 (/ 1.0 (- 2.0 (cos x))))))))))",
    "output_parens": 27,
    "avg_bits_err_input": 39.53909484960069,
    "avg_bits_err_output": 39.5608464044894,
    "avg_bits_err_improve": -0.021751554888716385,
    "time": 52094.67724609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(fma (cbrt (+ x 1.0)) (/ 1.0 (cbrt (+ x 1.0))) (fma (/ (+ 1.0 (cbrt (+ x 1.0))) (cbrt (+ x 1.0))) (- (cbrt (+ x 1.0))) (fma (cbrt (+ x 1.0)) 2.0 (- (cbrt x)))))",
    "output_parens": 21,
    "avg_bits_err_input": 29.693757557383183,
    "avg_bits_err_output": 29.312244541529008,
    "avg_bits_err_improve": 0.38151301585417485,
    "time": 38083.466552734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.664429132167218,
    "avg_bits_err_output": 29.664429132167218,
    "avg_bits_err_improve": 0,
    "time": 80202.41918945312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.96952294757647,
    "avg_bits_err_output": 33.96409567475518,
    "avg_bits_err_improve": 0.005427272821293627,
    "time": 19713.45849609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a -4.0) (* b b)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.07549345058352,
    "avg_bits_err_output": 34.070111843947004,
    "avg_bits_err_improve": 0.005381606636518654,
    "time": 19979.096435546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.2319294488308,
    "avg_bits_err_output": 59.94886942771375,
    "avg_bits_err_improve": 1.2830600211170449,
    "time": 15292.78369140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.01122761611562,
    "avg_bits_err_output": 0.6470432163907172,
    "avg_bits_err_improve": 62.3641843997249,
    "time": 33346.730224609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (log (exp (/ (- 1.0 eps) (+ 1.0 eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 58.61476200552469,
    "avg_bits_err_output": 58.630792694114,
    "avg_bits_err_improve": -0.01603068858931067,
    "time": 52082.72119140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (- (/ (/ 1.0 (tan x)) (- -1.0 (/ 1.0 (tan x)))) (/ -1.0 (- -1.0 (/ 1.0 (tan x))))) (+ 1.0 (/ 1.0 (tan x))) (+ 1.0 (/ 1.0 x)))",
    "output_parens": 17,
    "avg_bits_err_input": 59.8891276216965,
    "avg_bits_err_output": 59.876007534191096,
    "avg_bits_err_improve": 0.013120087505406275,
    "time": 49390.909423828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.466944364512365,
    "avg_bits_err_output": 41.327973334181664,
    "avg_bits_err_improve": 19.1389710303307,
    "time": 31593.701904296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.968656923695356,
    "avg_bits_err_output": 0.52325,
    "avg_bits_err_improve": 41.44540692369536,
    "time": 24639.549560546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.45593533040235,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.455435330402345,
    "time": 3662.587890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.140522535259453,
    "avg_bits_err_output": 0.014320968774394887,
    "avg_bits_err_improve": 29.126201566485058,
    "time": 3366.730712890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.22318893748671,
    "avg_bits_err_output": 28.3308935053783,
    "avg_bits_err_improve": 0.892295432108412,
    "time": 29461.322509765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.087273144814745,
    "avg_bits_err_output": 10.102709717984142,
    "avg_bits_err_improve": -0.015436573169397505,
    "time": 111391.58325195312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.007013946764296,
    "avg_bits_err_output": 37.007013946764296,
    "avg_bits_err_improve": 0,
    "time": 40132.3955078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (+ (/ 1.0 (+ 1.0 (sqrt (- x -1.0)))) (- (* (sqrt (- x -1.0)) (/ 1.0 (+ 1.0 (sqrt (- x -1.0))))) 1.0)) (- (* (+ 1.0 (sqrt (+ 1.0 x))) (* 1.0 (/ (sqrt (+ 1.0 x)) (+ 1.0 (sqrt (+ 1.0 x)))))) (sqrt x)))",
    "output_parens": 27,
    "avg_bits_err_input": 29.700997026746272,
    "avg_bits_err_output": 26.115207424657214,
    "avg_bits_err_improve": 3.585789602089058,
    "time": 51342.927734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (expm1 (log1p (sin (+ x eps)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 37.16570685385567,
    "avg_bits_err_output": 37.20982014866593,
    "avg_bits_err_improve": -0.04411329481026627,
    "time": 46517.350830078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.874430557313985,
    "avg_bits_err_output": 19.874430557313985,
    "avg_bits_err_improve": 0,
    "time": 26794.119140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (+ (atan (+ N 1.0)) (- -1.0 (atan N))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 15.409385879312945,
    "avg_bits_err_output": 15.408978396182091,
    "avg_bits_err_improve": 0.000407483130853592,
    "time": 28150.07177734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.50234736225663,
    "avg_bits_err_output": 29.50234736225663,
    "avg_bits_err_improve": 0,
    "time": 100759.32592773438,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07098120312590143,
    "avg_bits_err_output": 0.07098120312590143,
    "avg_bits_err_improve": 0,
    "time": 28294.433837890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.360975021658504,
    "avg_bits_err_output": 0.30055225625468746,
    "avg_bits_err_improve": 16.060422765403818,
    "time": 18408.720458984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ angle 180.0) (- (exp (log1p (* (/ angle 180.0) (/ PI (/ angle 180.0))))) 1.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.387664189979713,
    "avg_bits_err_output": 20.708847344430648,
    "avg_bits_err_improve": -0.32118315445093515,
    "time": 46542.384521484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (+ (+ (* (* (- (pow b 2.0) (pow a 2.0)) (cos (* PI (/ angle 180.0)))) (sin (* PI (/ angle 180.0)))) (fma (- (* (pow a 2.0) (cos (* PI (/ angle 180.0))))) (sin (* PI (/ angle 180.0))) (* (pow a 2.0) (* (cos (* PI (/ angle 180.0))) (sin (* PI (/ angle 180.0))))))) (fma (- (* (pow a 2.0) (cos (* PI (/ angle 180.0))))) (sin (* PI (/ angle 180.0))) (* (pow a 2.0) (* (cos (* PI (/ angle 180.0))) (sin (* PI (/ angle 180.0))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 31.456932807889103,
    "avg_bits_err_output": 31.428566670082745,
    "avg_bits_err_improve": 0.028366137806358438,
    "time": 95599.75073242188,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (* PI (/ (/ angle 180.0) PI)) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.077501069464418,
    "avg_bits_err_output": 20.08111371621794,
    "avg_bits_err_improve": -0.0036126467535204654,
    "time": 74904.8984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17320996250072115,
    "avg_bits_err_output": 0.17320996250072115,
    "avg_bits_err_improve": 0,
    "time": 27698.657958984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.32397650950092693,
    "avg_bits_err_output": 0.3147396380865067,
    "avg_bits_err_improve": 0.009236871414420256,
    "time": 22686.73388671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (log (exp (* e (cos v))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13916748125036058,
    "avg_bits_err_output": 0.14254268476294266,
    "avg_bits_err_improve": -0.003375203512582081,
    "time": 40094.8017578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (expm1 (log1p (* (sin phi1) (sin phi2)))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 16.9079449299305,
    "avg_bits_err_output": 16.915599792994147,
    "avg_bits_err_improve": -0.007654863063645934,
    "time": 43855.04736328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-28) (/ (* (- (sqrt (fma b b (* a (* c -4.0)))) b) (* (- (sqrt (fma b b (* a (* c -4.0)))) b) (/ 1.0 (- (sqrt (fma b b (* a (* c -4.0)))) b)))) (+ a a)) (/ (- (fma (- -1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0) (/ -1.0 (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0))) (- b)) 1.0) (* a 2.0)))",
    "output_parens": 53,
    "avg_bits_err_input": 52.931795447052565,
    "avg_bits_err_output": 51.14963562019144,
    "avg_bits_err_improve": 1.7821598268611254,
    "time": 29077.25390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.60219856016556,
    "avg_bits_err_output": 28.544909743768635,
    "avg_bits_err_improve": 0.057288816396926734,
    "time": 24699.954833984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-20) (* (/ (- (sqrt (fma b b (* -4.0 (* c a)))) b) (+ a a)) (* (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a)) (/ 1.0 (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a))))) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (- (exp (log1p (/ 1.0 (fma a (* c -4.0) (* b b))))) 1.0))))) (* a 2.0)))",
    "output_parens": 55,
    "avg_bits_err_input": 44.26002592204503,
    "avg_bits_err_output": 42.82259617213121,
    "avg_bits_err_improve": 1.437429749913818,
    "time": 26662.083251953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96409567475518,
    "avg_bits_err_output": 33.96409567475518,
    "avg_bits_err_improve": 0,
    "time": 20434.701904296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8975531091494992,
    "avg_bits_err_output": 0.8947254375613894,
    "avg_bits_err_improve": 0.0028276715881097036,
    "time": 43668.20166015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.275680607362645,
    "avg_bits_err_output": 29.275680607362645,
    "avg_bits_err_improve": 0,
    "time": 7343.52734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.096357746333474,
    "avg_bits_err_output": 1.1928656015629509,
    "avg_bits_err_improve": 56.903492144770524,
    "time": 10319.361083984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.96805335612618,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 57.96055335612618,
    "time": 6049.361572265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010417481250360577,
    "avg_bits_err_output": 0.010417481250360577,
    "avg_bits_err_improve": 0,
    "time": 3047.476806640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.698094360937773,
    "avg_bits_err_output": 31.698094360937773,
    "avg_bits_err_improve": 0,
    "time": 4430.5048828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 58.610680513426786,
    "avg_bits_err_output": 58.61071540709044,
    "avg_bits_err_improve": -3.489366365272417e-05,
    "time": 123988.470703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": -0.0002499999999999985,
    "time": 4450.213134765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.124,
    "avg_bits_err_output": 0.124,
    "avg_bits_err_improve": 0,
    "time": 41665.962158203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1261462406251803,
    "avg_bits_err_improve": 0,
    "time": 26702.671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.29166150430416,
    "avg_bits_err_output": 3.74481463425747,
    "avg_bits_err_improve": 35.546846870046686,
    "time": 47659.62109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.241415957400738,
    "avg_bits_err_output": 14.241415957400738,
    "avg_bits_err_improve": 0,
    "time": 5038.531982421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15151540977261335,
    "avg_bits_err_output": 0.15075723029390453,
    "avg_bits_err_improve": 0.0007581794787088203,
    "time": 41187.287109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-34) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (- (exp (log1p (/ 1.0 (fma b b (* a (* c -3.0)))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.923375528437695,
    "avg_bits_err_output": 51.15700441850419,
    "avg_bits_err_improve": 1.7663711099335089,
    "time": 30630.251220703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.7157085658012,
    "avg_bits_err_output": 28.663295015824353,
    "avg_bits_err_improve": 0.05241354997684766,
    "time": 27081.09716796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -4e-20) (/ (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ 1.0 (- (sqrt (fma c (* a -3.0) (* b b))) b)))) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma a (* c -3.0) (* b b)) (- (+ 1.0 (/ 1.0 (fma a (* c -3.0) (* b b)))) 1.0))))) (* 3.0 a)))",
    "output_parens": 50,
    "avg_bits_err_input": 44.29182590516657,
    "avg_bits_err_output": 42.92083628529444,
    "avg_bits_err_improve": 1.3709896198721268,
    "time": 40513.203857421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* (* c (* -3.0 a)) (* a (/ (/ c c) a))))) b) (* 3.0 a))",
    "output_parens": 12,
    "avg_bits_err_input": 34.013940608330714,
    "avg_bits_err_output": 34.02457920532424,
    "avg_bits_err_improve": -0.010638596993523208,
    "time": 25305.4052734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos (- lambda1 lambda2)) (* (cos phi2) (* (cos phi2) (/ (sin phi1) (cos phi2)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.473314311980436,
    "avg_bits_err_output": 13.476614155001183,
    "avg_bits_err_improve": -0.0032998430207467067,
    "time": 83077.23950195312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(fma (/ 1.0 (/ x (+ x 1.0))) (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (- (/ (+ x 1.0) (+ x -1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 28.91820384602095,
    "avg_bits_err_output": 28.924393241588053,
    "avg_bits_err_improve": -0.006189395567101741,
    "time": 35263.54736328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- -1.0 (- -1.0 (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.011,
    "avg_bits_err_output": 0.01599060156295072,
    "avg_bits_err_improve": -0.0049906015629507215,
    "time": 7348.546630859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (fma (- (/ 1.0 (+ 1.0 x))) (- (- (+ 1.0 (/ 1.0 (+ 1.0 x))) 1.0)) (* (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.696180249082623,
    "avg_bits_err_output": 12.78020996670559,
    "avg_bits_err_improve": 1.9159702823770335,
    "time": 33274.270263671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* 2.0 (* F (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.2410603264072,
    "avg_bits_err_output": 51.957573276339225,
    "avg_bits_err_improve": 0.2834870500679756,
    "time": 34970.88720703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.474804534991712,
    "avg_bits_err_output": 29.474804534991712,
    "avg_bits_err_improve": 0,
    "time": 36241.377197265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* 2.0 (+ (* (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* (- (pow B 2.0) (* C (* A 4.0))) F)) (* (- (pow B 2.0) (* C (* A 4.0))) (* A F)))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 27,
    "avg_bits_err_input": 52.72704333584218,
    "avg_bits_err_output": 52.50189452494723,
    "avg_bits_err_improve": 0.2251488108949502,
    "time": 36417.955322265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.773959931546122,
    "avg_bits_err_output": 15.773959931546122,
    "avg_bits_err_improve": 0,
    "time": 1736.978271484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.86431059287852,
    "avg_bits_err_output": 35.86431059287852,
    "avg_bits_err_improve": 0,
    "time": 18363.751953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (* (/ 1.0 (/ (acos (/ (- g) h)) 3.0)) (* (/ (acos (/ (- g) h)) 3.0) (/ (acos (/ (- g) h)) 3.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.9894441894575653,
    "avg_bits_err_output": 0.9908310316456964,
    "avg_bits_err_improve": -0.001386842188131121,
    "time": 7025.717041015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (- (+ (exp a) (expm1 b)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.7002193609377705,
    "avg_bits_err_output": 0.7256982392205324,
    "avg_bits_err_improve": -0.025478878282761963,
    "time": 6856.48974609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.460099516228876,
    "avg_bits_err_output": 11.460099516228876,
    "avg_bits_err_improve": 0,
    "time": 21179.3310546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (* x y) (- (* y (+ x x)) (log1p (exp x))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5379376695931969,
    "avg_bits_err_output": 0.4988231203125902,
    "avg_bits_err_improve": 0.0391145492806067,
    "time": 12538.197509765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (+ (/ 1.0 (hypot 1.0 x)) (- x (- (- (hypot 1.0 x)) (- (/ 1.0 (hypot 1.0 x))))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.0) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (log (+ (/ 1.0 (hypot 1.0 x)) (- x (- (- (hypot 1.0 x)) (- (/ 1.0 (hypot 1.0 x)))))))))",
    "output_parens": 38,
    "avg_bits_err_input": 53.05676708120647,
    "avg_bits_err_output": 11.413480971254714,
    "avg_bits_err_improve": 41.64328610995176,
    "time": 32039.898681640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.675553231529634,
    "avg_bits_err_output": 5.675553231529634,
    "avg_bits_err_improve": 0,
    "time": 29412.41015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0,
    "time": 3918.979248046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1174.037109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (* r w) (* (* r w) (- 0.375 (* 0.25 v)))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.006076314377172,
    "avg_bits_err_output": 6.797104716021937,
    "avg_bits_err_improve": 6.208971598355235,
    "time": 31509.25830078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (+ x1 x1))) (+ (* x1 (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 4.0))) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* (+ x1 x1) -3.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 61,
    "avg_bits_err_input": 0.5146300528268175,
    "avg_bits_err_output": 0.28899836758956576,
    "avg_bits_err_improve": 0.22563168523725174,
    "time": 67269.8173828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.04225740340445,
    "avg_bits_err_output": 18.04225740340445,
    "avg_bits_err_improve": 0,
    "time": 17987.8779296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.19424060156295073,
    "avg_bits_err_output": 0.19424060156295073,
    "avg_bits_err_improve": 0,
    "time": 27668.2822265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0035,
    "avg_bits_err_output": 0.0035,
    "avg_bits_err_improve": 0,
    "time": 3464.21826171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ (- (/ 1.0 a) (/ 1.0 b)) (/ PI 2.0)) (* (/ 1.0 (fma b b (* a (- a)))) (/ PI 2.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.080555225714622,
    "avg_bits_err_output": 9.151272703289912,
    "avg_bits_err_improve": 4.92928252242471,
    "time": 41267.50537109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (+ (- (- (* eps x) x) -1.0) -1.0))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.945426673179135,
    "avg_bits_err_output": 0.9381803717717224,
    "avg_bits_err_improve": 29.007246301407413,
    "time": 20910.045654296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.020125,
    "avg_bits_err_output": 0.02254248125036058,
    "avg_bits_err_improve": -0.0024174812503605786,
    "time": 16691.663330078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.02475,
    "avg_bits_err_output": 0.02475,
    "avg_bits_err_improve": 0,
    "time": 18753.680908203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (log (+ 1.0 (expm1 (* (/ (+ t t) (+ 1.0 t)) (+ 1.0 (/ (+ t t) (+ 1.0 t)))))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 27,
    "avg_bits_err_input": 0.0315,
    "avg_bits_err_output": 0.034459962500721156,
    "avg_bits_err_improve": -0.0029599625007211555,
    "time": 16943.9287109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3114.923828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2574.990966796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2933.2353515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(- (+ 1.0 (/ 10.0 (fma x (- x) 1.0))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 7.860831900243411,
    "avg_bits_err_output": 0.2485,
    "avg_bits_err_improve": 7.612331900243411,
    "time": 76515.29028320312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.365979288052949,
    "avg_bits_err_output": 7.365979288052949,
    "avg_bits_err_improve": 0,
    "time": 29858.642578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.15603944471507,
    "avg_bits_err_output": 16.15603944471507,
    "avg_bits_err_improve": 0,
    "time": 29729.93798828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (/ (cos x) (/ (exp (* 10.0 (* x x))) (cos x))) (* (cos x) (* (/ (exp (* 10.0 (* x x))) (cos x)) (/ (exp (* 10.0 (* x x))) (cos x)))) 0.0)",
    "output_parens": 21,
    "avg_bits_err_input": 3.531589396523647,
    "avg_bits_err_output": 3.5321507576442857,
    "avg_bits_err_improve": -0.0005613611206385372,
    "time": 38755.62158203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.289253767540075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.289253767540075,
    "time": 4699.041259765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.72356555091175,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.72306555091175,
    "time": 4305.98876953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2945,
    "avg_bits_err_improve": 63.7055,
    "time": 4135.66796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84325825111469,
    "avg_bits_err_output": 0.40161804531403256,
    "avg_bits_err_improve": 61.44164020580066,
    "time": 22013.35888671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a -4.0) (* b b)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.07549345058352,
    "avg_bits_err_output": 34.070111843947004,
    "avg_bits_err_improve": 0.005381606636518654,
    "time": 22045.254638671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96409567475518,
    "avg_bits_err_output": 33.96409567475518,
    "avg_bits_err_improve": 0,
    "time": 18338.9580078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1442.896240234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.09852066573798,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 40.08727066573798,
    "time": 6359.99365234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.502515420042872,
    "avg_bits_err_output": 20.502515420042872,
    "avg_bits_err_improve": 0,
    "time": 2831.948486328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6591384579897333,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6591384579897333,
    "time": 4806.08349609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037375,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.0365,
    "time": 6731.05859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021948120312590146,
    "avg_bits_err_output": 0.0175,
    "avg_bits_err_improve": 0.004448120312590145,
    "time": 3275.93798828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.014625,
    "avg_bits_err_output": 0.014625,
    "avg_bits_err_improve": 0,
    "time": 4481.55615234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 2159.88037109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ (+ c b) (+ a e)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39961353437914676,
    "avg_bits_err_output": 0.2533962406251803,
    "avg_bits_err_improve": 0.14621729375396647,
    "time": 8190.666015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.290450352934208,
    "avg_bits_err_output": 30.290450352934208,
    "avg_bits_err_improve": 0,
    "time": 164654.40356445312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.796915210370255,
    "avg_bits_err_output": 24.796915210370255,
    "avg_bits_err_improve": 0,
    "time": 37046.68994140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) 1.0) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.532143519155557,
    "avg_bits_err_output": 29.543306388055353,
    "avg_bits_err_improve": -0.011162868899795342,
    "time": 40095.03955078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006198120312590144,
    "avg_bits_err_output": 0.006198120312590144,
    "avg_bits_err_improve": 0,
    "time": 1679.322021484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.07241525507372,
    "avg_bits_err_output": 26.07241525507372,
    "avg_bits_err_improve": 0,
    "time": 42465.90380859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.106454942368067,
    "avg_bits_err_output": 26.106454942368067,
    "avg_bits_err_improve": 0,
    "time": 52467.671142578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (* ux (+ maxCos (* (* ux (* ux (* ux ux))) (/ -1.0 (* ux (* ux (* ux ux))))))) -1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 0.033625,
    "avg_bits_err_output": 0.03415250307297216,
    "avg_bits_err_improve": -0.0005275030729721547,
    "time": 12857.761474609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (- ux (* ux maxCos)) (+ (fma (* (fma ux maxCos (- 1.0 ux)) (- ux)) maxCos (* (* ux maxCos) (fma ux maxCos (- 1.0 ux)))) (* ux (* (fma ux maxCos (- 1.0 ux)) (- 1.0 maxCos)))))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.369883984414619,
    "avg_bits_err_output": 0.551375876090535,
    "avg_bits_err_improve": 12.818508108324083,
    "time": 29849.259033203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (+ (* (- (* ux maxCos) ux) 2.0) (* (- ux (* ux maxCos)) (- ux (* ux maxCos)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.402046285481308,
    "avg_bits_err_output": 0.3157413601088552,
    "avg_bits_err_improve": 13.086304925372453,
    "time": 35526.50341796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (fma yi (* yi (/ (sin (* PI (+ uy uy))) yi)) 0.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.33738181104624615,
    "avg_bits_err_output": 0.3516629882280617,
    "avg_bits_err_improve": -0.01428117718181554,
    "time": 61142.489990234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20460615593600745,
    "avg_bits_err_output": 0.2047311559360074,
    "avg_bits_err_improve": -0.00012499999999995848,
    "time": 20485.4892578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5396182899107279,
    "avg_bits_err_output": 0.49794027713339056,
    "avg_bits_err_improve": 0.04167801277733735,
    "time": 70990.52587890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(fma (cos (* 6.28318530718 u2)) (* (cos (* 6.28318530718 u2)) (/ (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.3202862910193155,
    "avg_bits_err_output": 0.32436633139645266,
    "avg_bits_err_improve": -0.004080040377137162,
    "time": 65843.3837890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33423293891705724,
    "avg_bits_err_output": 0.3346569785949046,
    "avg_bits_err_improve": -0.0004240396778473765,
    "time": 41965.234130859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (- (+ (expm1 (/ (- x) s)) 3.0) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06337955531749875,
    "avg_bits_err_output": 0.0627488298562971,
    "avg_bits_err_improve": 0.0006307254612016588,
    "time": 12725.444580078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16429215136219916,
    "avg_bits_err_output": 0.1411540649651122,
    "avg_bits_err_improve": 0.02313808639708695,
    "time": 17862.313720703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641084826074513,
    "avg_bits_err_output": 0.6641084826074513,
    "avg_bits_err_improve": 0,
    "time": 16288.317138671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ v (+ (- 1.0 v) (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.16916530269330018,
    "avg_bits_err_output": 0.18873746470502367,
    "avg_bits_err_improve": -0.019572162011723487,
    "time": 30280.31494140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.514782104455441,
    "avg_bits_err_output": 2.5111052247680314,
    "avg_bits_err_improve": 0.0036768796874095955,
    "time": 50791.06494140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* v (* v (* (- (- v)) (* v (/ (/ (* 2.0 (/ (sinh (/ 1.0 v)) v)) v) v))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.4633497118029939,
    "avg_bits_err_output": 0.49063574937505894,
    "avg_bits_err_improve": -0.027286037572065047,
    "time": 37843.616943359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.12518526195804403,
    "avg_bits_err_output": 0.12518526195804403,
    "avg_bits_err_improve": 0,
    "time": 8750.263916015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46386933414691894,
    "avg_bits_err_output": 0.46386933414691894,
    "avg_bits_err_improve": 0,
    "time": 24004.96240234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log1p (- (- (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))) 1.0) -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 1.3216063405233007,
    "avg_bits_err_output": 1.3198145312222411,
    "avg_bits_err_improve": 0.0017918093010595992,
    "time": 36370.628662109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.438894629017375,
    "avg_bits_err_output": 12.076144552132515,
    "avg_bits_err_improve": 0.3627500768848595,
    "time": 48083.859130859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI 6.0) (* r s))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.14841609693991722,
    "avg_bits_err_output": 0.14632159629509073,
    "avg_bits_err_improve": 0.002094500644826497,
    "time": 24853.69970703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9172214596710796,
    "avg_bits_err_output": 0.9054097664321694,
    "avg_bits_err_improve": 0.011811693238910181,
    "time": 46131.267333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.7000439462243894,
    "avg_bits_err_output": 0.4777584609557932,
    "avg_bits_err_improve": 0.22228548526859615,
    "time": 50104.102294921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* u2 (* u2 (* PI (/ 2.0 u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.726960596178067,
    "avg_bits_err_output": 13.735324579435058,
    "avg_bits_err_improve": -0.008363983256991503,
    "time": 61791.37158203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (log1p (expm1 (sqrt (- (log (- 1.0 u1)))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.768073639905353,
    "avg_bits_err_output": 13.769141528182413,
    "avg_bits_err_improve": -0.0010678882770598364,
    "time": 41917.47705078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* (* alpha (* alpha alpha)) (* alpha (/ (log (- 1.0 u0)) (* alpha (- alpha))))) (fma (- (* (* alpha (- alpha)) (/ alpha (* alpha (- alpha))))) (* alpha (- alpha)) (- (* alpha (* alpha alpha)))))",
    "output_parens": 23,
    "avg_bits_err_input": 14.356825423854707,
    "avg_bits_err_output": 13.999800843571448,
    "avg_bits_err_improve": 0.3570245802832588,
    "time": 40327.765869140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (expm1 (log1p (/ cos2phi (* alphax alphax))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 18,
    "avg_bits_err_input": 12.657366776701199,
    "avg_bits_err_output": 12.661908280059418,
    "avg_bits_err_improve": -0.00454150335821879,
    "time": 26850.141357421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) 5e-6) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (if (<= (* PI l) 2e+107) (- (* PI l) (* (/ 1.0 (* F F)) (tan (- (* (* l l) (exp (log1p (/ PI l)))) (* l l))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (expm1 (log1p (* PI l))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 16.61431987146278,
    "avg_bits_err_output": 15.610594612607548,
    "avg_bits_err_improve": 1.0037252588552317,
    "time": 38611.475341796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21891901566846755,
    "avg_bits_err_output": 0.21891901566846755,
    "avg_bits_err_improve": 0,
    "time": 34318.334716796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.808494131170866,
    "avg_bits_err_output": 13.807286408908645,
    "avg_bits_err_improve": 0.0012077222622206563,
    "time": 44061.49169921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.56136905097554,
    "avg_bits_err_output": 2.0607650813229488,
    "avg_bits_err_improve": 59.500603969652595,
    "time": 41899.127197265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.3e-161) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l))))) (if (<= t 3.4e-133) (/ (fma t (sqrt 2.0) (fma (- (sqrt 2.0)) (- t) (* t (- (sqrt 2.0))))) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l)))))))",
    "output_parens": 66,
    "avg_bits_err_input": 42.539973515654495,
    "avg_bits_err_output": 35.851838338323795,
    "avg_bits_err_improve": 6.6881351773307,
    "time": 37113.452392578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8189911087062542,
    "avg_bits_err_output": 3.8189911087062542,
    "avg_bits_err_improve": 0,
    "time": 98815.7080078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8909181020552495,
    "avg_bits_err_output": 0.8909181020552495,
    "avg_bits_err_improve": 0,
    "time": 9975.75146484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 5e-95) (sqrt (- (* U (* n (* (/ (* l l) Om) -4.0))) (* (* n -2.0) (* U (- t (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 46,
    "avg_bits_err_input": 34.25266843955151,
    "avg_bits_err_output": 32.16908494166934,
    "avg_bits_err_improve": 2.0835834978821737,
    "time": 32672.011474609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (sin k) (* (* (pow (/ k t) 2.0) (/ (pow t 3.0) (* l l))) (tan k))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.49037683069059,
    "avg_bits_err_output": 39.63023844012991,
    "avg_bits_err_improve": 7.860138390560685,
    "time": 56872.127197265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.127143358607746,
    "avg_bits_err_output": 32.117027243478816,
    "avg_bits_err_improve": 0.010116115128930403,
    "time": 26196.035400390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (fma a1 a1 (* a2 a2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5379524469000625,
    "avg_bits_err_output": 0.5374312062748822,
    "avg_bits_err_improve": 0.0005212406251803303,
    "time": 35827.828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* n (/ 2.0 PI)) (* PI PI)) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4852067580956259,
    "avg_bits_err_output": 0.4861344203848251,
    "avg_bits_err_improve": -0.0009276622891992159,
    "time": 34522.01708984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma J (+ (* (/ (cos (/ K 2.0)) J) (* (exp (- l)) (- J))) (* J (* (exp l) (/ (cos (/ K 2.0)) J)))) 0.0) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.53553653168156,
    "avg_bits_err_output": 17.564329727436615,
    "avg_bits_err_improve": -0.028793195755053347,
    "time": 48209.373291015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.58374602098597,
    "avg_bits_err_output": 15.58374602098597,
    "avg_bits_err_improve": 0,
    "time": 27090.36181640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.186511842188136,
    "avg_bits_err_output": 18.186511842188136,
    "avg_bits_err_improve": 0,
    "time": 42350.92333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.013086210429998,
    "avg_bits_err_output": 14.013086210429998,
    "avg_bits_err_improve": 0,
    "time": 16286.560302734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.845743201392345,
    "avg_bits_err_output": 18.845743201392345,
    "avg_bits_err_improve": 0,
    "time": 30202.04248046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (+ (/ (* d (* c0 d)) (* (* h D) (* D w))) (sqrt (- (* (/ (* d (* c0 d)) (* (* h D) (* D w))) (/ (* d (* c0 d)) (* (* h D) (* D w)))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.545428212516434,
    "avg_bits_err_output": 56.39127469036015,
    "avg_bits_err_improve": 3.1541535221562853,
    "time": 45484.728515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d l) 0.5) (* (- (pow (/ d h) 0.5)) (- (* (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l))) 1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 26.92738928625457,
    "avg_bits_err_output": 26.92143156426473,
    "avg_bits_err_improve": 0.005957721989840792,
    "time": 59469.38525390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.40199340572836,
    "avg_bits_err_output": 15.40199340572836,
    "avg_bits_err_improve": 0,
    "time": 13168.519287109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9841981203125901,
    "avg_bits_err_output": 0.013408082813311304,
    "avg_bits_err_improve": 0.9707900374992788,
    "time": 7594.73681640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4565768815682678,
    "avg_bits_err_output": 0.3800127831254491,
    "avg_bits_err_improve": 0.0765640984428187,
    "time": 24753.509765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (* (/ (sqrt 2.0) 4.0) (* (- 1.0 (* v v)) (* (- 1.0 (* v v)) (/ 1.0 (- 1.0 (* v v)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.012323120312590145,
    "avg_bits_err_output": 0.013865601562950722,
    "avg_bits_err_improve": -0.0015424812503605778,
    "time": 15491.9560546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.508847125251714,
    "avg_bits_err_output": 0.508847125251714,
    "avg_bits_err_improve": 0,
    "time": 14184.818115234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9987596601181528,
    "avg_bits_err_output": 1.9652384194929726,
    "avg_bits_err_improve": 0.03352124062518014,
    "time": 10903.019287109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.016281150418828574,
    "avg_bits_err_output": 0.016281150418828574,
    "avg_bits_err_improve": 0,
    "time": 35126.263427734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18960735349127605,
    "avg_bits_err_output": 0.18960735349127605,
    "avg_bits_err_improve": 0,
    "time": 3522.31591796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18656697967695074,
    "avg_bits_err_output": 0.18656697967695074,
    "avg_bits_err_improve": 0,
    "time": 41540.0947265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18854912789656242,
    "avg_bits_err_output": 0.18854912789656242,
    "avg_bits_err_improve": 0,
    "time": 13115.017578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (- (+ (/ x (sqrt (fma x x (* 4.0 (* p p))))) 2.0) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 13.75244049231281,
    "avg_bits_err_output": 13.76165628313641,
    "avg_bits_err_improve": -0.009215790823601466,
    "time": 19093.5244140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.75957069438255,
    "avg_bits_err_output": 0.081375,
    "avg_bits_err_improve": 40.67819569438255,
    "time": 8215.067138671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (* (+ 1.0 x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x))))) 1.0) (* (sin x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x)))))) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 31.426259028215274,
    "avg_bits_err_output": 25.798133022433213,
    "avg_bits_err_improve": 5.628126005782061,
    "time": 46105.049072265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.40629718842668,
    "avg_bits_err_output": 34.40629718842668,
    "avg_bits_err_improve": 0,
    "time": 30160.630126953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.97145927407366,
    "avg_bits_err_output": 33.970546510591504,
    "avg_bits_err_improve": 0.0009127634821552988,
    "time": 22565.202392578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.411070634483735,
    "avg_bits_err_output": 31.411070634483735,
    "avg_bits_err_improve": 0,
    "time": 35518.025146484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.65270767685723,
    "avg_bits_err_output": 32.65270767685723,
    "avg_bits_err_improve": 0,
    "time": 29375.025146484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (- (+ (log1p N) 1.0) 1.0) (log N))))",
    "output_parens": 7,
    "avg_bits_err_input": 29.968340199517087,
    "avg_bits_err_output": 29.98115649113813,
    "avg_bits_err_improve": -0.012816291621042808,
    "time": 26471.450927734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.957259567815925,
    "avg_bits_err_output": 0.5172784752171163,
    "avg_bits_err_improve": 14.439981092598808,
    "time": 26860.257080078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (log1p (expm1 (cos (+ x eps)))) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 39.8583013065861,
    "avg_bits_err_output": 39.89626833886512,
    "avg_bits_err_improve": -0.03796703227902043,
    "time": 46108.673583984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(fma (cbrt (+ x 1.0)) (/ 1.0 (cbrt (+ x 1.0))) (- (* (cbrt (+ x 1.0)) (- (* (cbrt (+ x 1.0)) (/ 1.0 (cbrt (+ x 1.0)))) (/ 1.0 (cbrt (+ x 1.0))))) (cbrt x)))",
    "output_parens": 21,
    "avg_bits_err_input": 30.21417733891934,
    "avg_bits_err_output": 29.843636698054546,
    "avg_bits_err_improve": 0.370540640864796,
    "time": 34335.5634765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.98425757669562,
    "avg_bits_err_output": 29.98425757669562,
    "avg_bits_err_improve": 0,
    "time": 78746.82885742188,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.02880879723151,
    "avg_bits_err_output": 34.02880879723151,
    "avg_bits_err_improve": 0,
    "time": 55566.24462890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.31682482700995,
    "avg_bits_err_output": 34.31682482700995,
    "avg_bits_err_improve": 0,
    "time": 173499.890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (+ (* (log (- 1.0 x)) (/ (log (- 1.0 x)) (+ (log (- 1.0 x)) -1.0))) (+ (* (+ (log (- 1.0 x)) -1.0) (/ -1.0 (+ (log (- 1.0 x)) -1.0))) (- 1.0 (/ (log (- 1.0 x)) (+ (log (- 1.0 x)) -1.0))))) (log1p x))",
    "output_parens": 28,
    "avg_bits_err_input": 61.506351104515716,
    "avg_bits_err_output": 60.12166054164715,
    "avg_bits_err_improve": 1.3846905628685633,
    "time": 42982.428466796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 62.99830314314377,
    "avg_bits_err_output": 0.08036968802541841,
    "avg_bits_err_improve": 62.91793345511835,
    "time": 27356.017822265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (* (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (log1p (expm1 (/ 1.0 (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 58.69856530902926,
    "avg_bits_err_output": 58.737931244628555,
    "avg_bits_err_improve": -0.039365935599292357,
    "time": 89432.78149414062,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 60.03390797384855,
    "avg_bits_err_output": 60.0339289617525,
    "avg_bits_err_improve": -2.098790395166361e-05,
    "time": 39690.2080078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.545498997463795,
    "avg_bits_err_output": 41.02165175001736,
    "avg_bits_err_improve": 19.523847247446433,
    "time": 32577.1455078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.14198855681147,
    "avg_bits_err_output": 0.4933656015629508,
    "avg_bits_err_improve": 40.64862295524852,
    "time": 15266.960693359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.72375050291582,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.72312550291582,
    "time": 3357.907470703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.752675469533614,
    "avg_bits_err_output": 0.019508678590172007,
    "avg_bits_err_improve": 29.733166790943443,
    "time": 27718.730224609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.97256274512492,
    "avg_bits_err_output": 29.14061972949673,
    "avg_bits_err_improve": 0.8319430156281911,
    "time": 30660.760498046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.883531490737864,
    "avg_bits_err_output": 9.883531490737864,
    "avg_bits_err_improve": 0,
    "time": 48122.08740234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (tan (+ x eps)) (- (tan (+ x eps))) (- (* (tan (+ x eps)) (+ (tan (+ x eps)) 1.0)) (tan x)))",
    "output_parens": 14,
    "avg_bits_err_input": 36.82708596163752,
    "avg_bits_err_output": 37.03925385867489,
    "avg_bits_err_improve": -0.21216789703736794,
    "time": 28824.291259765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (expm1 (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.46279392718438,
    "avg_bits_err_output": 29.769195304927834,
    "avg_bits_err_improve": 0.6935986222565447,
    "time": 27210.965087890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (expm1 (log1p (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.2820694714606,
    "avg_bits_err_output": 37.294342412325015,
    "avg_bits_err_improve": -0.012272940864413329,
    "time": 29848.126220703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (- (- (/ 1.0 (sqrt x)) 1.0) -1.0) (log (exp (/ 1.0 (sqrt (+ 1.0 x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 19.53816983068328,
    "avg_bits_err_output": 19.720149313152923,
    "avg_bits_err_improve": -0.18197948246964302,
    "time": 29839.741943359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0))))) (atan N))",
    "output_parens": 11,
    "avg_bits_err_input": 15.104404949952972,
    "avg_bits_err_output": 15.107377050500443,
    "avg_bits_err_improve": -0.0029721005474705464,
    "time": 28663.073974609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.58275976293066,
    "avg_bits_err_output": 1.2541989507961064,
    "avg_bits_err_improve": 28.328560812134555,
    "time": 28800.587646484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (* (- 1.0 m) (/ (+ (/ (- m (* m m)) v) -1.0) (- 1.0 m))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07792999596793129,
    "avg_bits_err_output": 0.08650556003160319,
    "avg_bits_err_improve": -0.008575564063671895,
    "time": 30065.078857421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* b a) (* b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.641980543787984,
    "avg_bits_err_output": 0.31394849687986776,
    "avg_bits_err_improve": 16.328032046908117,
    "time": 17139.47412109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* PI (/ (/ (/ angle 180.0) PI) PI)) (* PI PI)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.25536766350176,
    "avg_bits_err_output": 20.269878207356072,
    "avg_bits_err_improve": -0.014510543854310498,
    "time": 73507.24047851562,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.64041768746994,
    "avg_bits_err_output": 31.64041768746994,
    "avg_bits_err_improve": 0,
    "time": 65574.03588867188,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.034816628433592,
    "avg_bits_err_output": 20.044953383321943,
    "avg_bits_err_improve": -0.010136754888350197,
    "time": 82086.185546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(fma m (/ (- m (* m m)) v) (- m))",
    "output_parens": 5,
    "avg_bits_err_input": 0.17814300435713698,
    "avg_bits_err_output": 0.17126516434757447,
    "avg_bits_err_improve": 0.006877840009562514,
    "time": 35876.4541015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.33644979461744556,
    "avg_bits_err_output": 0.3246097765696509,
    "avg_bits_err_improve": 0.011840018047794665,
    "time": 24231.5126953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13521936093777043,
    "avg_bits_err_output": 0.13521936093777043,
    "avg_bits_err_improve": 0,
    "time": 33080.348388671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.959706606356065,
    "avg_bits_err_output": 16.955021869545124,
    "avg_bits_err_improve": 0.004684736810940393,
    "time": 46304.309326171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 3.36e+14) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (fma (* b b) (/ 1.0 (fma a (* c -4.0) (* b b))) (* (* a (* c -4.0)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))) (- b)) (+ a a)) (/ (- (- (- (sqrt (+ (* b b) (* a (* c -4.0)))) -1.0) b) 1.0) (+ a a)))",
    "output_parens": 44,
    "avg_bits_err_input": 52.39074677848369,
    "avg_bits_err_output": 50.45377699155095,
    "avg_bits_err_improve": 1.9369697869327354,
    "time": 28942.56982421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (* (fma b b (* c (* a -4.0))) (/ 1.0 (fma b b (* c (* a -4.0)))))))) (- b)) (+ a a))",
    "output_parens": 27,
    "avg_bits_err_input": 28.434346419993858,
    "avg_bits_err_output": 28.464675802609314,
    "avg_bits_err_improve": -0.030329382615455813,
    "time": 25561.0068359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-20) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (- (- (+ (+ 2.0 (exp (log (+ (sqrt (fma a (* c -4.0) (* b b))) 2.0)))) -2.0) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 32,
    "avg_bits_err_input": 43.21024841021872,
    "avg_bits_err_output": 42.28226180268159,
    "avg_bits_err_improve": 0.9279866075371288,
    "time": 32827.00390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.03373881434307,
    "avg_bits_err_output": 34.03373881434307,
    "avg_bits_err_improve": 0,
    "time": 65668.58227539062,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (- (exp (log1p (cos phi1))) 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9227916492343113,
    "avg_bits_err_output": 0.9441268928380859,
    "avg_bits_err_improve": -0.02133524360377459,
    "time": 46008.9375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log1p (+ 1.0 (- (expm1 (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.48602237292531,
    "avg_bits_err_output": 29.485885566467214,
    "avg_bits_err_improve": 0.00013680645809444059,
    "time": 17325.376708984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.31821049390211,
    "avg_bits_err_output": 1.1460236843762623,
    "avg_bits_err_improve": 57.17218680952585,
    "time": 8068.93798828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.194048431410835,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 58.186173431410836,
    "time": 5611.978759765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007948120312590144,
    "avg_bits_err_output": 0.007948120312590144,
    "avg_bits_err_improve": 0,
    "time": 3024.0966796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.8415,
    "avg_bits_err_output": 31.8415,
    "avg_bits_err_improve": 0,
    "time": 5649.197265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (fma (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 1.0 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))))) -1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 58.690047170071864,
    "avg_bits_err_output": 58.69642725313344,
    "avg_bits_err_improve": -0.0063800830615790005,
    "time": 59888.15625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.04382312031259015,
    "avg_bits_err_output": 0.04382312031259015,
    "avg_bits_err_improve": 0,
    "time": 6358.531982421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12657312031259016,
    "avg_bits_err_output": 0.12657312031259016,
    "avg_bits_err_improve": 0,
    "time": 39679.275146484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13507312031259017,
    "avg_bits_err_output": 0.13507312031259017,
    "avg_bits_err_improve": 0,
    "time": 33175.3857421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.737575955172545,
    "avg_bits_err_output": 3.5274832360267308,
    "avg_bits_err_improve": 35.21009271914581,
    "time": 45687.919921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.581460396180367,
    "avg_bits_err_output": 14.583414548389031,
    "avg_bits_err_improve": -0.0019541522086647944,
    "time": 4856.15380859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta)))))) (expm1 (log1p (- (cos delta))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.14823173516493837,
    "avg_bits_err_output": 0.1487038374550467,
    "avg_bits_err_improve": -0.00047210229010832827,
    "time": 46064.23486328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 3.36e+14) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (log (+ 1.0 (expm1 (* (fma a (* c -3.0) (* b b)) (/ 1.0 (fma a (* c -3.0) (* b b)))))))))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (fma b b (* a (* c -3.0)))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 41,
    "avg_bits_err_input": 52.348724220987485,
    "avg_bits_err_output": 50.36893909123693,
    "avg_bits_err_improve": 1.979785129750553,
    "time": 34191.26513671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.62054275743222,
    "avg_bits_err_output": 28.541422593820432,
    "avg_bits_err_improve": 0.07912016361178686,
    "time": 22707.23388671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 43.33573691100468,
    "avg_bits_err_output": 42.589393339696684,
    "avg_bits_err_improve": 0.746343571307996,
    "time": 24211.523681640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.085782308532885,
    "avg_bits_err_output": 34.085782308532885,
    "avg_bits_err_improve": 0,
    "time": 30349.455078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (expm1 (log1p (sin (- lambda1 lambda2)))) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (cos (- lambda1 lambda2)) (sin phi1)) (cos phi2))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.54259765526681,
    "avg_bits_err_output": 13.552060358271435,
    "avg_bits_err_improve": -0.009462703004624373,
    "time": 95421.908203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.278962175140784,
    "avg_bits_err_output": 29.28625884209808,
    "avg_bits_err_improve": -0.007296666957294917,
    "time": 75290.423828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 4783.59765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (fma (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x))) (- (/ 1.0 (+ x -1.0)))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.511259199520136,
    "avg_bits_err_output": 12.606802962929933,
    "avg_bits_err_improve": 1.9044562365902031,
    "time": 77239.80346679688,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.38712920987268,
    "avg_bits_err_output": 52.05493812799541,
    "avg_bits_err_improve": 0.3321910818772693,
    "time": 34066.879638671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.086011349813948,
    "avg_bits_err_output": 30.086011349813948,
    "avg_bits_err_improve": 0,
    "time": 40722.66650390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* C (* 4.0 A))) (fma (+ F F) C (* F (* (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) 2.0)))))) (- (pow B 2.0) (* C (* 4.0 A))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.49758604289484,
    "avg_bits_err_output": 52.2085473476023,
    "avg_bits_err_improve": 0.28903869529253967,
    "time": 37063.895263671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.747999065916055,
    "avg_bits_err_output": 15.747999065916055,
    "avg_bits_err_improve": 0,
    "time": 15501.85205078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.39747149191954,
    "avg_bits_err_output": 36.39747149191954,
    "avg_bits_err_improve": 0,
    "time": 26201.20263671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (- (+ (+ (/ (acos (/ (- g) h)) 3.0) 3.0) (+ (/ (* 2.0 PI) 3.0) -2.0)) 1.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9896372187554094,
    "avg_bits_err_output": 0.9869366546917374,
    "avg_bits_err_improve": 0.0027005640636720285,
    "time": 7982.087158203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.8134481203125902,
    "avg_bits_err_output": 0.8173680453140325,
    "avg_bits_err_improve": -0.003919925001442337,
    "time": 6169.781005859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.2541952019844,
    "avg_bits_err_output": 11.2541952019844,
    "avg_bits_err_improve": 0,
    "time": 19650.453857421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5053160970876119,
    "avg_bits_err_output": 0.4398231203125902,
    "avg_bits_err_improve": 0.06549297677502175,
    "time": 11104.949951171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.08757398226754,
    "avg_bits_err_output": 15.604742546723276,
    "avg_bits_err_improve": 37.48283143554427,
    "time": 30423.878662109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.738474669718629,
    "avg_bits_err_output": 5.738474669718629,
    "avg_bits_err_improve": 0,
    "time": 26673.198974609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 0,
    "time": 3990.816650390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1188.1708984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* (* w r) (* w r))) (- 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.043903285727616,
    "avg_bits_err_output": 6.876904151958265,
    "avg_bits_err_improve": 6.166999133769351,
    "time": 29054.456787109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (fma (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (* (+ x1 x1) (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0))) (* x1 (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* 4.0 x1)))) (* x1 (* x1 -6.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.511444133549421,
    "avg_bits_err_output": 0.29281665953038355,
    "avg_bits_err_improve": 0.21862747401903743,
    "time": 72222.68872070312,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ u (* (+ t1 u) (/ t1 (+ t1 u))))))",
    "output_parens": 10,
    "avg_bits_err_input": 18.071336238946007,
    "avg_bits_err_output": 18.07205559988378,
    "avg_bits_err_improve": -0.000719360937772251,
    "time": 43484.216552734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2382406015629507,
    "avg_bits_err_output": 0.19248120312590142,
    "avg_bits_err_improve": 0.04575939843704929,
    "time": 15913.7021484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 2215.476806640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (* (- b a) (/ (+ b a) (- b a))))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.060157334164336,
    "avg_bits_err_output": 9.190853417750967,
    "avg_bits_err_improve": 4.869303916413369,
    "time": 37561.57470703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- (+ -1.0 (- 1.0 x)) (* eps x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.404405551391168,
    "avg_bits_err_output": 0.8905068079377706,
    "avg_bits_err_improve": 28.513898743453396,
    "time": 26761.31640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.034,
    "avg_bits_err_output": 0.03857312031259015,
    "avg_bits_err_improve": -0.004573120312590148,
    "time": 11809.56787109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(- (/ (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -5.0) (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)) 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.04125,
    "avg_bits_err_output": 0.03969812031259015,
    "avg_bits_err_improve": 0.0015518796874098503,
    "time": 32017.661865234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.0395,
    "avg_bits_err_output": 0.04068872187554087,
    "avg_bits_err_improve": -0.0011887218755408727,
    "time": 11313.056396484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2941.525634765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2353.49609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3192.853271484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.83415294849226,
    "avg_bits_err_output": 0.242125,
    "avg_bits_err_improve": 7.592027948492261,
    "time": 52119.65087890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.251812304277228,
    "avg_bits_err_output": 7.251812304277228,
    "avg_bits_err_improve": 0,
    "time": 32533.81982421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (- (fma (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) -1.0) (pow (+ x eps) 2.0))) (- (+ (pow (+ x eps) 2.0) (* (pow (+ x eps) 2.0) (pow (+ x eps) 2.0))) (pow x 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 15.811674165106716,
    "avg_bits_err_output": 15.856713784078586,
    "avg_bits_err_improve": -0.045039618971870254,
    "time": 33038.403564453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (exp (* 10.0 (* x x))) (cos x)) (- (expm1 (log1p (* (cos x) (+ (cos x) 1.0)))) (cos x)))",
    "output_parens": 14,
    "avg_bits_err_input": 3.533808319946438,
    "avg_bits_err_output": 3.53874977921571,
    "avg_bits_err_improve": -0.0049414592692720305,
    "time": 30547.742919921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.13321700459055,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.13321700459055,
    "time": 5905.1904296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14235252904971,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.14160252904971,
    "time": 3400.73828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.297375,
    "avg_bits_err_improve": 63.702625,
    "time": 3823.442626953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325748725749,
    "avg_bits_err_output": 0.40519812031259017,
    "avg_bits_err_improve": 61.4380593669449,
    "time": 22483.66357421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.31682482700995,
    "avg_bits_err_output": 34.31682482700995,
    "avg_bits_err_improve": 0,
    "time": 168383.39013671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.03373881434307,
    "avg_bits_err_output": 34.03373881434307,
    "avg_bits_err_improve": 0,
    "time": 61909.083251953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2213.66552734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.27328378007921,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 40.26315878007921,
    "time": 3628.9638671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.603900004970843,
    "avg_bits_err_output": 20.603900004970843,
    "avg_bits_err_improve": 0,
    "time": 3236.437255859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.675466294662739,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.675466294662739,
    "time": 5306.32470703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038125,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.037375,
    "time": 5343.80419921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02052124062518029,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0.00902124062518029,
    "time": 4734.4453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 3216.932373046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1282.708740234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(- (+ (+ e (+ c (+ b 1.0))) (+ a d)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.39513477500432725,
    "avg_bits_err_output": 0.26025,
    "avg_bits_err_improve": 0.13488477500432727,
    "time": 8765.31591796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.82809672115579,
    "avg_bits_err_output": 29.82809672115579,
    "avg_bits_err_improve": 0,
    "time": 9367.416015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 25.156603882026246,
    "avg_bits_err_output": 25.156603882026246,
    "avg_bits_err_improve": 0,
    "time": 26174.516357421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) -1.0) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.202534991187456,
    "avg_bits_err_output": 30.211781528985437,
    "avg_bits_err_improve": -0.009246537797981347,
    "time": 73694.63793945312,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00475,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.00375,
    "time": 4029.756591796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (log1p (expm1 (pow (+ 1.0 (/ i n)) n))) 1.0) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.793414774631046,
    "avg_bits_err_output": 47.80989048039871,
    "avg_bits_err_improve": -0.016475705767660997,
    "time": 52619.93505859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma a c (* b d)) (fma c c (* d d)))",
    "output_parens": 5,
    "avg_bits_err_input": 26.54672000234614,
    "avg_bits_err_output": 26.545948761720965,
    "avg_bits_err_improve": 0.0007712406251769721,
    "time": 28206.395751953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.919322503604423,
    "avg_bits_err_output": 26.919322503604423,
    "avg_bits_err_improve": 0,
    "time": 25580.613525390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.034625,
    "avg_bits_err_output": 0.02209512018848141,
    "avg_bits_err_improve": 0.012529879811518593,
    "time": 5789.0439453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (* ux (* (- ux (fma ux maxCos 1.0)) maxCos)) (* (- (- ux (* ux (- ux (fma ux maxCos 1.0)))) (* ux maxCos)) (log (+ 1.0 (expm1 (* (- (- ux (* ux (- ux (fma ux maxCos 1.0)))) (* ux maxCos)) (/ 1.0 (- (- ux (* ux (- ux (fma ux maxCos 1.0)))) (* ux maxCos)))))))))))",
    "output_parens": 34,
    "avg_bits_err_input": 13.48019772248627,
    "avg_bits_err_output": 0.500759302166894,
    "avg_bits_err_improve": 12.979438420319376,
    "time": 29466.626708984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (+ (* ux (- (* (exp (log1p (- ux (* ux maxCos)))) (+ maxCos -1.0)) (+ maxCos -1.0))) (* 2.0 (- ux (* ux maxCos))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.519301336611504,
    "avg_bits_err_output": 0.33977258227132673,
    "avg_bits_err_improve": 13.179528754340177,
    "time": 30605.291259765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* (- (+ (/ (* 2.0 PI) uy) 1.0) 1.0) (* uy uy))) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 36,
    "avg_bits_err_input": 0.3487379499286087,
    "avg_bits_err_output": 0.3394361244856703,
    "avg_bits_err_improve": 0.009301825442938394,
    "time": 63955.350341796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20178646459810826,
    "avg_bits_err_output": 0.20213082553587872,
    "avg_bits_err_improve": -0.0003443609377704604,
    "time": 19294.011474609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5406407732888537,
    "avg_bits_err_output": 0.5406407732888537,
    "avg_bits_err_improve": 0,
    "time": 42468.52197265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.33783987387645614,
    "avg_bits_err_output": 0.33783987387645614,
    "avg_bits_err_improve": 0,
    "time": 53878.421630859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma s (- (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))) (fma (- (* s (/ -1.0 s))) s (- s)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.34373294970418733,
    "avg_bits_err_output": 0.4255191636889874,
    "avg_bits_err_improve": -0.08178621398480007,
    "time": 39877.31494140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(expm1 (log1p (/ 1.0 (+ 1.0 (exp (/ (- x) s))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.053398950078813255,
    "avg_bits_err_output": 0.058769439143927404,
    "avg_bits_err_improve": -0.005370489065114149,
    "time": 14320.095703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13206295199689416,
    "avg_bits_err_output": 0.11927498168141938,
    "avg_bits_err_improve": 0.012787970315474781,
    "time": 52521.0615234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641972797300889,
    "avg_bits_err_output": 0.6641972797300889,
    "avg_bits_err_improve": 0,
    "time": 20775.3779296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.16187538088854972,
    "avg_bits_err_output": 0.15675208363220644,
    "avg_bits_err_improve": 0.005123297256343279,
    "time": 32437.84228515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.549048912363797,
    "avg_bits_err_output": 2.549048912363797,
    "avg_bits_err_improve": 0,
    "time": 66133.5302734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (fma (sinh (/ 1.0 v)) (+ v v) 1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4686063684886611,
    "avg_bits_err_output": 0.4720853313760629,
    "avg_bits_err_improve": -0.003478962887401793,
    "time": 46338.100830078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11032161080318517,
    "avg_bits_err_output": 0.11032161080318517,
    "avg_bits_err_improve": 0,
    "time": 7431.353271484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (+ (* (* (fma alpha alpha -1.0) (* cosTheta cosTheta)) (* PI (log (* alpha alpha)))) (* PI (log (* alpha alpha)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.47728999914480447,
    "avg_bits_err_output": 0.5116819649294304,
    "avg_bits_err_improve": -0.034391965784625944,
    "time": 34900.01025390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log1p (expm1 (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.2990784434495346,
    "avg_bits_err_output": 1.3081430562337302,
    "avg_bits_err_improve": -0.00906461278419557,
    "time": 66431.81909179688,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (expm1 (log1p (log (/ 1.0 (- 1.0 (* 4.0 u)))))))",
    "output_parens": 7,
    "avg_bits_err_input": 12.58015451999077,
    "avg_bits_err_output": 12.585255205241372,
    "avg_bits_err_improve": -0.0051006852506017,
    "time": 55860.760498046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* (* PI 6.0) (* s (* r (/ (/ s s) r)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1470153545370418,
    "avg_bits_err_output": 0.14859372187253453,
    "avg_bits_err_improve": -0.0015783673354927419,
    "time": 58261.87109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8823517852884531,
    "avg_bits_err_output": 0.8706487787046314,
    "avg_bits_err_improve": 0.011703006583821729,
    "time": 45367.462890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(log1p (expm1 (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.6824175854522285,
    "avg_bits_err_output": 0.6824694651396384,
    "avg_bits_err_improve": -5.187968740982818e-05,
    "time": 30844.4716796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (fma (* u2 u2) (* (* u2 u2) (/ (* u2 (/ (/ (* 2.0 PI) u2) u2)) (* u2 u2))) 0.0)))",
    "output_parens": 16,
    "avg_bits_err_input": 13.323353505942526,
    "avg_bits_err_output": 13.340868857342633,
    "avg_bits_err_improve": -0.017515351400106738,
    "time": 45409.23388671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(log (+ 1.0 (- (exp (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2))))) 1.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.368858134355358,
    "avg_bits_err_output": 13.399156444181235,
    "avg_bits_err_improve": -0.030298309825877112,
    "time": 41776.570556640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(- 0.0 (* alpha (* alpha (* (* (/ (/ (log (- 1.0 u0)) (* alpha (- alpha))) (* alpha (- alpha))) (* alpha alpha)) (* alpha alpha)))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.121224912919445,
    "avg_bits_err_output": 14.124204349459198,
    "avg_bits_err_improve": -0.0029794365397535216,
    "time": 47212.5361328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.447327489928941,
    "avg_bits_err_output": 12.446874054099803,
    "avg_bits_err_improve": 0.0004534358291383711,
    "time": 20904.78759765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+37) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (* l (- (exp (log1p (* PI (* (/ l l) (/ (/ PI PI) l))))) 1.0)))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ l PI) (* PI PI))))))",
    "output_parens": 28,
    "avg_bits_err_input": 16.601878004565418,
    "avg_bits_err_output": 15.117189104100381,
    "avg_bits_err_improve": 1.484688900465036,
    "time": 27799.7880859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2144387218755409,
    "avg_bits_err_output": 0.2144387218755409,
    "avg_bits_err_improve": 0,
    "time": 33213.800537109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (* (/ F (sin B)) (* (/ F (sin B)) (/ 1.0 (/ F (sin B))))) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 20,
    "avg_bits_err_input": 14.15189048950995,
    "avg_bits_err_output": 14.166279775449164,
    "avg_bits_err_improve": -0.014389285939213181,
    "time": 70462.396484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.46676337592357,
    "avg_bits_err_output": 1.9945312259035144,
    "avg_bits_err_improve": 59.472232150020055,
    "time": 69705.25927734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -2.5e-159) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 2.3e-102) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (+ (fma (- l) l (* l l)) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x))))))))) (/ (* t (+ -1.0 (+ (sqrt 2.0) 1.0))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 60,
    "avg_bits_err_input": 43.27858462668803,
    "avg_bits_err_output": 36.117457471800236,
    "avg_bits_err_improve": 7.161127154887794,
    "time": 31040.14599609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.821904746008287,
    "avg_bits_err_output": 3.821904746008287,
    "avg_bits_err_improve": 0,
    "time": 57572.90283203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9649431985483787,
    "avg_bits_err_output": 0.9665681985483787,
    "avg_bits_err_improve": -0.0016249999999999876,
    "time": 14280.13134765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-204) (sqrt (* 2.0 (- (- (* (* n t) U) (* n (* (/ (* l l) Om) (* 2.0 U)))) (* n (fma (* U (- U U*)) (* n (pow (/ l Om) 2.0)) 0.0))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+293) (sqrt (* 2.0 (fma (- (* n U)) (fma 2.0 (/ (* l l) Om) (fma (- U U*) (* n (pow (/ l Om) 2.0)) (- t))) 0.0))) (sqrt (- (* (fma (- U U*) (* n (* (pow (/ l Om) 2.0) (* U -2.0))) 0.0) n) (* n (* (fma 2.0 (/ (* l l) Om) (- t)) (* U 2.0)))))))",
    "output_parens": 79,
    "avg_bits_err_input": 33.972974253867456,
    "avg_bits_err_output": 31.27967004269683,
    "avg_bits_err_improve": 2.693304211170627,
    "time": 33366.14892578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (pow (/ k t) 2.0) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.131482056898776,
    "avg_bits_err_output": 39.25286067983991,
    "avg_bits_err_improve": 7.878621377058863,
    "time": 68431.67626953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (/ (pow t 3.0) (* l l)) (* (sin k) (+ 2.0 (pow (/ k t) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.47317359083393,
    "avg_bits_err_output": 32.45067605294024,
    "avg_bits_err_improve": 0.0224975378936918,
    "time": 62038.08544921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (/ (cos th) (sqrt 2.0)) a1) (* a1 a1)) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5343601531460959,
    "avg_bits_err_output": 0.5691157937828158,
    "avg_bits_err_improve": -0.03475564063671999,
    "time": 45912.448974609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (- (- (+ (fma PI (+ n n) n) n) n) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.49964689433809917,
    "avg_bits_err_output": 0.5336994153601867,
    "avg_bits_err_improve": -0.034052521022087556,
    "time": 54919.951416015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (+ (* J (* (cos (/ K 2.0)) (- (exp l) (exp (- l))))) (fma (- (exp l)) (- (* J (cos (/ K 2.0)))) (* (* J (cos (/ K 2.0))) (- (exp l))))) (* (- (cos (/ K 2.0))) (fma (- (exp l)) J (* (exp l) J)))) U)",
    "output_parens": 33,
    "avg_bits_err_input": 17.01749178768661,
    "avg_bits_err_output": 17.034629883619207,
    "avg_bits_err_improve": -0.017138095932597963,
    "time": 55319.154296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -2e+178) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ (- m -1.0) n) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 4.2e+236) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ (- m -1.0) n) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 61,
    "avg_bits_err_input": 15.429412809716103,
    "avg_bits_err_output": 10.541408392346389,
    "avg_bits_err_improve": 4.888004417369714,
    "time": 15849.43994140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.04782312031259,
    "avg_bits_err_output": 18.04782312031259,
    "avg_bits_err_improve": 0,
    "time": 51678.474365234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.978490889181716,
    "avg_bits_err_output": 13.978490889181716,
    "avg_bits_err_improve": 0,
    "time": 8031.308349609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.650584142982236,
    "avg_bits_err_output": 18.650584142982236,
    "avg_bits_err_improve": 0,
    "time": 25398.9091796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (/ (+ (/ (* d (* d c0)) (* D (* w (* D h)))) (sqrt (* (- (/ (* d (* d c0)) (* D (* w (* D h)))) M) (+ (/ (* d (* d c0)) (* D (* w (* D h)))) M)))) 1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 59.53759391199181,
    "avg_bits_err_output": 56.685582607235254,
    "avg_bits_err_improve": 2.8520113047565587,
    "time": 41001.346435546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d l) 0.5) (+ (pow (/ d h) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* -0.5 (* (/ h l) (pow (/ d h) 0.5))))))",
    "output_parens": 16,
    "avg_bits_err_input": 25.561166891117207,
    "avg_bits_err_output": 24.976227965566633,
    "avg_bits_err_improve": 0.5849389255505741,
    "time": 64961.395751953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.804121893032281,
    "avg_bits_err_output": 15.804121893032281,
    "avg_bits_err_improve": 0,
    "time": 5351.585205078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9842712406251803,
    "avg_bits_err_output": 0.011823120312590146,
    "avg_bits_err_improve": 0.9724481203125902,
    "time": 7019.599853515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.43664791206242864,
    "avg_bits_err_output": 0.3588595651796756,
    "avg_bits_err_improve": 0.07778834688275305,
    "time": 42909.8251953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* v (* v 3.0))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01102124062518029,
    "avg_bits_err_output": 0.01102124062518029,
    "avg_bits_err_improve": 0,
    "time": 42416.61083984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5026736243882015,
    "avg_bits_err_output": 0.5026736243882015,
    "avg_bits_err_improve": 0,
    "time": 12805.73681640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1803358968477475,
    "avg_bits_err_output": 2.179085896847747,
    "avg_bits_err_improve": 0.0012500000000006395,
    "time": 15891.839599609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (- (+ (/ (+ mu (- Vef (- Ec EDonor))) KbT) 1.0) 1.0)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.01842832603964897,
    "avg_bits_err_output": 0.018428326039648966,
    "avg_bits_err_improve": 3.469446951953614e-18,
    "time": 10077.538330078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18791059254041304,
    "avg_bits_err_output": 0.1881749541616579,
    "avg_bits_err_improve": -0.00026436162124485185,
    "time": 3806.759033203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1883576957532427,
    "avg_bits_err_output": 0.1883576957532427,
    "avg_bits_err_improve": 0,
    "time": 28227.161865234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18364499700213033,
    "avg_bits_err_output": 0.18364499700213033,
    "avg_bits_err_improve": 0,
    "time": 28880.435546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (exp (log1p (/ x (sqrt (fma x x (* 4.0 (* p p)))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.064064303577362,
    "avg_bits_err_output": 13.064051566451738,
    "avg_bits_err_improve": 1.2737125624440182e-05,
    "time": 17925.46630859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.81136276382824,
    "avg_bits_err_output": 0.048375,
    "avg_bits_err_improve": 40.76298776382824,
    "time": 6088.4150390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(fma (/ (- x (sin x)) (- x (tan x))) (/ (+ (/ (- x (sin x)) (- x (tan x))) 1.0) (/ (- x (sin x)) (- x (tan x)))) (* (- (+ (/ (- x (sin x)) (- x (tan x))) 1.0) 1.0) (/ -1.0 (/ (- x (sin x)) (- x (tan x))))))",
    "output_parens": 32,
    "avg_bits_err_input": 30.762234360860536,
    "avg_bits_err_output": 30.777278932139364,
    "avg_bits_err_improve": -0.0150445712788283,
    "time": 86008.57080078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.928949676298444,
    "avg_bits_err_output": 33.928949676298444,
    "avg_bits_err_improve": 0,
    "time": 23063.17822265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.00131642707157,
    "avg_bits_err_output": 34.00131642707157,
    "avg_bits_err_improve": 0,
    "time": 19859.118408203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.479503745857624,
    "avg_bits_err_output": 31.479503745857624,
    "avg_bits_err_improve": 0,
    "time": 24432.567626953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (- (- (pow (+ x 1.0) (/ 1.0 n)) -1.0) 1.0) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.72777396419889,
    "avg_bits_err_output": 32.74846589828271,
    "avg_bits_err_improve": -0.020691934083821195,
    "time": 60188.4169921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 29.78660663386939,
    "avg_bits_err_output": 29.787560119503095,
    "avg_bits_err_improve": -0.000953485633704787,
    "time": 22385.9794921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (- (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (/ 1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.227968964086289,
    "avg_bits_err_output": 0.5133559877239681,
    "avg_bits_err_improve": 13.714612976362321,
    "time": 46494.5166015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos (+ x eps)) (fma (* (cos (+ x eps)) (cos (+ x eps))) (/ 1.0 (* (cos (+ x eps)) (cos (+ x eps)))) 0.0) (- (cos x)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.80847367086928,
    "avg_bits_err_output": 39.80441656286319,
    "avg_bits_err_improve": 0.004057108006094268,
    "time": 36480.095947265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(fma (cbrt (+ x 1.0)) (/ 1.0 (cbrt (+ x 1.0))) (+ (- (cbrt x)) (fma (cbrt (+ x 1.0)) (- (/ (+ 1.0 (cbrt (+ x 1.0))) (cbrt (+ x 1.0)))) (- (* (cbrt (+ x 1.0)) -2.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 29.97572181503202,
    "avg_bits_err_output": 29.52554857578414,
    "avg_bits_err_improve": 0.45017323924788144,
    "time": 37356.015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(log (exp (/ (- 1.0 (cos x)) (sin x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.441579290088793,
    "avg_bits_err_output": 30.500896650281355,
    "avg_bits_err_improve": -0.05931736019256206,
    "time": 77429.76196289062,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b))) b) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.157592644304245,
    "avg_bits_err_output": 34.18892411864579,
    "avg_bits_err_improve": -0.03133147434154182,
    "time": 21047.993408203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.35626756182946,
    "avg_bits_err_output": 34.356165350965625,
    "avg_bits_err_improve": 0.00010221086383666034,
    "time": 24125.490966796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.43951174953297,
    "avg_bits_err_output": 60.00743059593478,
    "avg_bits_err_improve": 1.4320811535981903,
    "time": 21397.283203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log (+ n 1.0)) (+ (- -1.0 (* n (log n))) (* n (log (+ n 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 63.00671293506907,
    "avg_bits_err_output": 0.456,
    "avg_bits_err_improve": 62.550712935069065,
    "time": 31634.95458984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.7625527710156,
    "avg_bits_err_output": 58.7625527710156,
    "avg_bits_err_improve": 0,
    "time": 59349.199462890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.934265574616184,
    "avg_bits_err_output": 59.93429598086166,
    "avg_bits_err_improve": -3.0406245478786786e-05,
    "time": 43420.18359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.224248678815805,
    "avg_bits_err_output": 40.68792366289566,
    "avg_bits_err_improve": 19.53632501592014,
    "time": 31340.37255859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.09620958617261,
    "avg_bits_err_output": 0.5038362788644353,
    "avg_bits_err_improve": 40.59237330730818,
    "time": 12353.149658203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.8305333361147,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.8299083361147,
    "time": 3093.54541015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.26460244412646,
    "avg_bits_err_output": 0.017303307870343385,
    "avg_bits_err_improve": 29.247299136256117,
    "time": 3474.945068359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.557129343382474,
    "avg_bits_err_output": 28.734476619697617,
    "avg_bits_err_improve": 0.8226527236848575,
    "time": 32670.593505859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.862247228978633,
    "avg_bits_err_output": 9.862247228978633,
    "avg_bits_err_improve": 0,
    "time": 127218.16845703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.14351349314595,
    "avg_bits_err_output": 37.14351349314595,
    "avg_bits_err_improve": 0,
    "time": 41283.41748046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (fma (sqrt x) (* (sqrt x) (/ -1.0 (sqrt x))) (+ (sqrt (+ x 1.0)) -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 30.103093410625217,
    "avg_bits_err_output": 29.423020224405,
    "avg_bits_err_improve": 0.6800731862202163,
    "time": 31753.49267578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.06058064168207,
    "avg_bits_err_output": 37.06058064168207,
    "avg_bits_err_improve": 0,
    "time": 35130.657958984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.78679781097523,
    "avg_bits_err_output": 19.78679781097523,
    "avg_bits_err_improve": 0,
    "time": 25659.13916015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ -1.0 (atan (+ N 1.0))) (log (exp (- 1.0 (atan N)))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.702685266654953,
    "avg_bits_err_output": 15.71763983850034,
    "avg_bits_err_improve": -0.01495457184538651,
    "time": 13297.6650390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.68373776830271,
    "avg_bits_err_output": 29.68373776830271,
    "avg_bits_err_improve": 0,
    "time": 62104.75927734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (+ m -1.0) (* (/ (- m (* m m)) v) (+ m -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07484680468885217,
    "avg_bits_err_output": 0.07791921918104967,
    "avg_bits_err_improve": -0.0030724144921975005,
    "time": 22230.950439453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* b a) (* b a) (* (* b (- a)) (fma (- a) b (* b a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.346636866611355,
    "avg_bits_err_output": 0.15325,
    "avg_bits_err_improve": 16.193386866611355,
    "time": 15329.625732421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (* (/ angle 180.0) (/ (/ PI PI) PI)) (* PI PI)))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.127718495623387,
    "avg_bits_err_output": 20.126735216581025,
    "avg_bits_err_improve": 0.000983279042362284,
    "time": 60684.42041015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (- (pow b 2.0) (pow a 2.0)) (* 2.0 (sin (* PI (/ angle 180.0)))) (fma (- (* 2.0 (pow a 2.0))) (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (* 2.0 (pow a 2.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 31.189253402311895,
    "avg_bits_err_output": 31.196295473897866,
    "avg_bits_err_improve": -0.007042071585971144,
    "time": 79946.32690429688,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (- (* (- (* (/ angle 180.0) (exp (log1p (* PI PI)))) (/ angle 180.0)) (exp (log1p (/ (/ (/ angle 180.0) (/ angle 180.0)) PI)))) (* (/ angle 180.0) (* PI PI))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 20.250990098620672,
    "avg_bits_err_output": 20.279098534939298,
    "avg_bits_err_improve": -0.02810843631862525,
    "time": 86253.38989257812,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.174386842188131,
    "avg_bits_err_output": 0.174386842188131,
    "avg_bits_err_improve": 0,
    "time": 33078.274169921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32787923409624165,
    "avg_bits_err_output": 0.3239575338647301,
    "avg_bits_err_improve": 0.00392170023151156,
    "time": 28265.57666015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13361560156295077,
    "avg_bits_err_output": 0.13361560156295077,
    "avg_bits_err_improve": 0,
    "time": 32940.675537109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.553132762127607,
    "avg_bits_err_output": 16.55313447732514,
    "avg_bits_err_improve": -1.715197534224444e-06,
    "time": 71395.76586914062,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.1e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (+ (* b b) (* a (* c -4.0)))) (sqrt (+ (* b b) (* a (* c -4.0))))) (- b)) (+ a a)) (/ (- -1.0 (- (+ (sqrt (fma b b (* -4.0 (* a c)))) (- 1.0 b)))) (* a 2.0)))",
    "output_parens": 32,
    "avg_bits_err_input": 52.54578696672873,
    "avg_bits_err_output": 50.53244577246562,
    "avg_bits_err_improve": 2.0133411942631056,
    "time": 25021.033447265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma b b (* a (* c -4.0))) (fma (- a) (* 4.0 c) (* 4.0 (* a c)))))) (* a 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 28.703022829959906,
    "avg_bits_err_output": 28.62720545430969,
    "avg_bits_err_improve": 0.0758173756502174,
    "time": 19301.215087890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (+ (* c (* a -4.0)) (* b b)))) (- b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.95278290847692,
    "avg_bits_err_output": 43.20794650795752,
    "avg_bits_err_improve": 0.7448364005193966,
    "time": 23128.70703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.16796812371057,
    "avg_bits_err_output": 34.18018748464834,
    "avg_bits_err_improve": -0.012219360937770318,
    "time": 21684.292724609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (sin (- lambda1 lambda2)) (* (cos phi2) (* (cos phi2) (/ 1.0 (cos phi2))))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.8658996775858595,
    "avg_bits_err_output": 0.8735856825253077,
    "avg_bits_err_improve": -0.0076860049394481544,
    "time": 53026.837158203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.094274758241443,
    "avg_bits_err_output": 29.094274758241443,
    "avg_bits_err_improve": 0,
    "time": 9689.587646484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.341430065011906,
    "avg_bits_err_output": 0.905075564063672,
    "avg_bits_err_improve": 57.436354500948234,
    "time": 7402.817138671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.420190970130484,
    "avg_bits_err_output": 0.0055,
    "avg_bits_err_improve": 58.414690970130486,
    "time": 12217.786376953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007823120312590144,
    "avg_bits_err_output": 0.007823120312590144,
    "avg_bits_err_improve": 0,
    "time": 6735.082763671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.969375,
    "avg_bits_err_output": 31.969375,
    "avg_bits_err_improve": 0,
    "time": 4194.65283203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (expm1 (log1p (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.75718426350197,
    "avg_bits_err_output": 58.770103263255024,
    "avg_bits_err_improve": -0.01291899975305455,
    "time": 162494.67578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010875,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0,
    "time": 3285.573974609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12107312031259015,
    "avg_bits_err_output": 0.12107312031259015,
    "avg_bits_err_improve": 0,
    "time": 37557.912109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1320212406251803,
    "avg_bits_err_output": 0.1320212406251803,
    "avg_bits_err_improve": 0,
    "time": 14311.455810546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.16164565647196,
    "avg_bits_err_output": 3.7627702589663636,
    "avg_bits_err_improve": 35.3988753975056,
    "time": 61441.94677734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.001870432482269,
    "avg_bits_err_output": 15.001870432482269,
    "avg_bits_err_improve": 0,
    "time": 5855.493408203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (fma (* (sin phi1) (/ (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta)))))) (sin phi1))) (sin phi1) 0.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.15074603719722948,
    "avg_bits_err_output": 0.1508401765840624,
    "avg_bits_err_improve": -9.413938683291989e-05,
    "time": 57197.6123046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 0.82) (/ (- (- (* (sqrt (fma a (* c -3.0) (* b b))) (* (sqrt (fma a (* c -3.0) (* b b))) (+ 1.0 (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) b) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))))) (* 3.0 a)) (/ (- (- (+ (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (sqrt (fma c (* a -3.0) (* b b)))) b) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (* 3.0 a)))",
    "output_parens": 50,
    "avg_bits_err_input": 52.54121187401281,
    "avg_bits_err_output": 49.65433659719255,
    "avg_bits_err_improve": 2.8868752768202626,
    "time": 30495.802978515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.833534575413424,
    "avg_bits_err_output": 28.785303256636688,
    "avg_bits_err_improve": 0.04823131877673603,
    "time": 24436.17041015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-22) (/ (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (/ 1.0 (- (sqrt (fma b b (* a (* c -3.0)))) b)))) (* 3.0 a)) (/ (fma (/ 1.0 (sqrt (log1p (expm1 (fma c (* a -3.0) (* b b)))))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)))",
    "output_parens": 51,
    "avg_bits_err_input": 44.071963725662876,
    "avg_bits_err_output": 42.32589453729446,
    "avg_bits_err_improve": 1.7460691883684163,
    "time": 24889.9990234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.19149044542867,
    "avg_bits_err_output": 34.19149044542867,
    "avg_bits_err_improve": 0,
    "time": 20923.62255859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (/ (sin (- lambda1 lambda2)) (cos phi2)) (* (cos phi2) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.244023484142858,
    "avg_bits_err_output": 13.255961146437034,
    "avg_bits_err_improve": -0.011937662294176477,
    "time": 44430.27880859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (+ (/ x (+ 1.0 x)) (- 3.0 (/ (+ 1.0 x) (+ -1.0 x)))) 3.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.478830136119743,
    "avg_bits_err_output": 29.53288296708929,
    "avg_bits_err_improve": -0.05405283096954605,
    "time": 9191.517333984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 1233.099853515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -2.4e+154) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (+ (* (/ 1.0 (+ -1.0 x)) (- (- (* (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ -1.0 (/ 1.0 (+ -1.0 x))))) -1.0) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 27,
    "avg_bits_err_input": 14.356729808407922,
    "avg_bits_err_output": 13.298914028274611,
    "avg_bits_err_improve": 1.0578157801333106,
    "time": 57955.546630859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* 2.0 (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* A (* 4.0 C))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.68465213343055,
    "avg_bits_err_output": 52.39321274208538,
    "avg_bits_err_improve": 0.2914393913451718,
    "time": 39398.76611328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(+ (+ (* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI)) 2.0) -2.0)",
    "output_parens": 14,
    "avg_bits_err_input": 28.799872016422874,
    "avg_bits_err_output": 28.80281274982984,
    "avg_bits_err_improve": -0.0029407334069659896,
    "time": 45960.62451171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (- (pow B 2.0) (* C (* 4.0 A))) (* 2.0 (* A F)) (fma (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* (- (pow B 2.0) (* C (* 4.0 A))) (* 2.0 F)) (fma (- (* C (* 4.0 A))) (* 2.0 (* A F)) (* (* C (* 4.0 A)) (* 2.0 (* A F)))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 38,
    "avg_bits_err_input": 52.626284500470604,
    "avg_bits_err_output": 52.4017237327383,
    "avg_bits_err_improve": 0.2245607677323065,
    "time": 38828.4697265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.048649245902647,
    "avg_bits_err_output": 15.048649245902647,
    "avg_bits_err_improve": 0,
    "time": 1733.9296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.04933893785269,
    "avg_bits_err_output": 36.04933893785269,
    "avg_bits_err_improve": 0,
    "time": 14770.753173828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (- (+ (/ (* 2.0 PI) 3.0) (+ (/ (acos (/ (- g) h)) 3.0) 1.0)) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9915689859449832,
    "avg_bits_err_output": 0.9913708656323931,
    "avg_bits_err_improve": 0.0001981203125901443,
    "time": 9494.19091796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(- (+ (/ (exp a) (+ (exp a) (exp b))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.6864481203125902,
    "avg_bits_err_output": 0.8021784659415379,
    "avg_bits_err_improve": -0.11573034562894768,
    "time": 6918.0576171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.087774609214982,
    "avg_bits_err_output": 11.087774609214982,
    "avg_bits_err_improve": 0,
    "time": 19983.400634765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5410586298238309,
    "avg_bits_err_output": 0.459,
    "avg_bits_err_improve": 0.08205862982383089,
    "time": 10694.11669921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.053144343062264,
    "avg_bits_err_output": 15.459174688773198,
    "avg_bits_err_improve": 37.59396965428907,
    "time": 31227.799072265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.661814674667153,
    "avg_bits_err_output": 5.662486607515121,
    "avg_bits_err_improve": -0.0006719328479682929,
    "time": 30525.06689453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014125,
    "avg_bits_err_output": 0.014125,
    "avg_bits_err_improve": 0,
    "time": 4084.099609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1177.869140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 2e+49) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* r (* w (- 0.375 (* v 0.25)))))) (- 1.0 v))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* (* w r) (* w (/ r w))))) (- 1.0 v)))))",
    "output_parens": 29,
    "avg_bits_err_input": 12.904227775203816,
    "avg_bits_err_output": 6.790321956035548,
    "avg_bits_err_improve": 6.113905819168268,
    "time": 28575.5126953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) -3.0))) (* (* x1 x1) (fma (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5144545917423572,
    "avg_bits_err_output": 0.294175992570719,
    "avg_bits_err_improve": 0.22027859917163817,
    "time": 71799.33203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.37992929354394,
    "avg_bits_err_output": 18.37992929354394,
    "avg_bits_err_improve": 0,
    "time": 30643.404052734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x x) (* 0.12900613773279798 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2313942038992627,
    "avg_bits_err_output": 0.19552144413776232,
    "avg_bits_err_improve": 0.035872759761500395,
    "time": 21633.560302734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 5270.106689453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.448593729422706,
    "avg_bits_err_output": 9.658499368484906,
    "avg_bits_err_improve": 4.7900943609378,
    "time": 44684.029296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ 1.0 (exp (* x (- -1.0 eps)))) (+ (- -1.0 (* (/ 1.0 eps) (exp (* x (- -1.0 eps))))) (* (+ 1.0 (/ 1.0 eps)) (exp (* x (+ -1.0 eps)))))) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.068608974404512,
    "avg_bits_err_output": 0.9091815564440129,
    "avg_bits_err_improve": 28.1594274179605,
    "time": 21773.657958984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.00525,
    "avg_bits_err_output": 0.00525,
    "avg_bits_err_improve": 0,
    "time": 9395.08740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0)) (* 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))) -4.0)) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.008625,
    "avg_bits_err_output": 0.01309680468885217,
    "avg_bits_err_improve": -0.004471804688852169,
    "time": 94337.98754882812,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- 1.0 (- 1.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.047125,
    "avg_bits_err_output": 0.046625,
    "avg_bits_err_improve": 0.0005000000000000004,
    "time": 18909.8193359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3093.606689453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2850.239990234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3193.045654296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.822439552994903,
    "avg_bits_err_output": 0.2555,
    "avg_bits_err_improve": 7.566939552994904,
    "time": 54442.981689453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.196932921991729,
    "avg_bits_err_output": 7.196932921991729,
    "avg_bits_err_improve": 0,
    "time": 49395.650634765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (expm1 (log1p (pow (+ x eps) 2.0))) (pow x 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 15.775917841363928,
    "avg_bits_err_output": 15.798000033262333,
    "avg_bits_err_improve": -0.022082191898405767,
    "time": 28361.896484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (exp (* 10.0 (* x x))) (cos x)) (* (/ (+ (expm1 (* 10.0 (* x x))) 1.0) (cos x)) (* (log (+ 1.0 (expm1 (* (cos x) (cos x))))) (/ (/ (cos x) (cos x)) (/ (exp (* 10.0 (* x x))) (cos x))))))",
    "output_parens": 29,
    "avg_bits_err_input": 3.5279987713504624,
    "avg_bits_err_output": 3.53638039141887,
    "avg_bits_err_improve": -0.008381620068407702,
    "time": 27643.147705078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.974329284874436,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.974329284874436,
    "time": 4654.177490234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.31492535642638,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.31417535642638,
    "time": 5203.173828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.294375,
    "avg_bits_err_improve": 63.705625,
    "time": 3396.99853515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.843247791892665,
    "avg_bits_err_output": 0.3645297015802592,
    "avg_bits_err_improve": 61.478718090312405,
    "time": 22107.94189453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.35626756182946,
    "avg_bits_err_output": 34.356165350965625,
    "avg_bits_err_improve": 0.00010221086383666034,
    "time": 21786.67333984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.16796812371057,
    "avg_bits_err_output": 34.18018748464834,
    "avg_bits_err_improve": -0.012219360937770318,
    "time": 21935.275146484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2192.3203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.96699280021474,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 39.95649280021474,
    "time": 7795.59228515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.940154839816145,
    "avg_bits_err_output": 19.940154839816145,
    "avg_bits_err_improve": 0,
    "time": 3318.257568359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6135202606315286,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6135202606315286,
    "time": 4737.9443359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.032625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.031875,
    "time": 7052.903564453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* a (* b (/ (+ a b) (+ a b)))) (+ (* a (+ a b)) (* b (* b (/ (+ a b) (+ a b))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.021542481250360578,
    "avg_bits_err_output": 0.019625,
    "avg_bits_err_improve": 0.0019174812503605781,
    "time": 4823.201171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01225,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.011375,
    "time": 5009.6337890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1897.665771484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4040592109406551,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 0.1553092109406551,
    "time": 10316.796142578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- (* (- 1.0 (cos x)) (- 2.0 (cos x))) (- (- 1.0 (cos x)) (- (cos x) (* (cos x) (cos x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.534509587325942,
    "avg_bits_err_output": 30.53442941494847,
    "avg_bits_err_improve": 8.017237747282024e-05,
    "time": 110212.40063476562,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.624325936858042,
    "avg_bits_err_output": 24.624325936858042,
    "avg_bits_err_improve": 0,
    "time": 23132.4765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.735580462747357,
    "avg_bits_err_output": 29.735944549055397,
    "avg_bits_err_improve": -0.00036408630803919095,
    "time": 53169.061279296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0055,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.004625,
    "time": 4418.322265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.906857548174784,
    "avg_bits_err_output": 47.906857548174784,
    "avg_bits_err_improve": 0,
    "time": 29205.10986328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.968229817912984,
    "avg_bits_err_output": 25.968229817912984,
    "avg_bits_err_improve": 0,
    "time": 30957.597900390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a d) (+ (* b c) (* a (* d -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 26.133310396043644,
    "avg_bits_err_output": 26.170119892945838,
    "avg_bits_err_improve": -0.03680949690219393,
    "time": 37346.099853515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.02276184218813101,
    "avg_bits_err_improve": 0.014863157811868987,
    "time": 6708.31640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (* ux (fma ux maxCos (- 1.0 ux))) (- (- (* (* ux maxCos) (+ (* ux maxCos) 2.0)) (* ux (fma ux maxCos 1.0)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.493586621741947,
    "avg_bits_err_output": 0.5525745815255978,
    "avg_bits_err_improve": 12.94101204021635,
    "time": 27546.940673828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.529781691518084,
    "avg_bits_err_output": 0.33121937949813335,
    "avg_bits_err_improve": 13.19856231201995,
    "time": 37004.18359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (* (sin (* PI (* uy (* uy (/ 2.0 uy))))) yi))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.33362818424911234,
    "avg_bits_err_output": 0.3422182126076774,
    "avg_bits_err_improve": -0.008590028358565038,
    "time": 65773.05541992188,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20030153685924734,
    "avg_bits_err_output": 0.20038629584738643,
    "avg_bits_err_improve": -8.475898813908866e-05,
    "time": 19833.01611328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5431772925161444,
    "avg_bits_err_output": 0.5333118836990924,
    "avg_bits_err_improve": 0.009865408817052002,
    "time": 87926.51782226562,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (exp (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3217833431545981,
    "avg_bits_err_output": 0.32424330565531934,
    "avg_bits_err_improve": -0.0024599625007212245,
    "time": 68233.43237304688,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33924215969447646,
    "avg_bits_err_output": 0.3397477089593962,
    "avg_bits_err_improve": -0.0005055492649197468,
    "time": 43149.73486328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06396203401129882,
    "avg_bits_err_output": 0.06396203401129882,
    "avg_bits_err_improve": 0,
    "time": 30242.22900390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (exp (/ (- (fabs x)) s)) (+ (fma s (exp (/ (- (fabs x)) s)) s) s)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13358078798172698,
    "avg_bits_err_output": 0.1206092200717074,
    "avg_bits_err_improve": 0.01297156791001959,
    "time": 14462.70654296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* tau x))) (* PI (* tau x))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641672695097591,
    "avg_bits_err_output": 0.6647208177201474,
    "avg_bits_err_improve": -0.0005535482103882217,
    "time": 28438.613525390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1575425624589511,
    "avg_bits_err_output": 0.15136695170411923,
    "avg_bits_err_improve": 0.006175610754831862,
    "time": 26981.68896484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.537795758433255,
    "avg_bits_err_output": 2.5333745147320363,
    "avg_bits_err_improve": 0.004421243701218547,
    "time": 64144.14697265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (fma v (* (sinh (/ 1.0 v)) 2.0) 1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.45374477729140716,
    "avg_bits_err_output": 0.4588062589284484,
    "avg_bits_err_improve": -0.005061481637041232,
    "time": 39198.71337890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1066016481684797,
    "avg_bits_err_output": 0.1066016481684797,
    "avg_bits_err_improve": 0,
    "time": 116983.68603515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- 1.0 (- (exp (log1p (* cosTheta cosTheta))) (* (* cosTheta cosTheta) (* alpha alpha)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.47146334320773836,
    "avg_bits_err_output": 0.4817015263550899,
    "avg_bits_err_improve": -0.010238183147351532,
    "time": 23555.142822265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (expm1 (log1p (* (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) s))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.3238551415534026,
    "avg_bits_err_output": 1.3441021269112947,
    "avg_bits_err_improve": -0.020246985357892155,
    "time": 61458.8466796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (+ (+ (log (/ 1.0 (- 1.0 (* 4.0 u)))) -1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 12.310275082294115,
    "avg_bits_err_output": 12.341065075637749,
    "avg_bits_err_improve": -0.030789993343633526,
    "time": 42407.30078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (+ s s) (* PI r))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.15304794401725277,
    "avg_bits_err_output": 0.15249606432984292,
    "avg_bits_err_improve": 0.0005518796874098564,
    "time": 43718.682861328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8490767472671129,
    "avg_bits_err_output": 0.839579007344148,
    "avg_bits_err_improve": 0.009497739922964876,
    "time": 47937.658447265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c))) (/ 1.0 (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.7068688293326224,
    "avg_bits_err_output": 0.5801710547040747,
    "avg_bits_err_improve": 0.1266977746285477,
    "time": 102232.951171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (fma u2 (exp (log1p (* 2.0 PI))) (- u2))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.520307270022995,
    "avg_bits_err_output": 13.533678811027412,
    "avg_bits_err_improve": -0.013371541004417509,
    "time": 40023.66064453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (log1p (- (exp (sqrt (- (log (- 1.0 u1))))) 1.0)) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 11,
    "avg_bits_err_input": 13.570601282770717,
    "avg_bits_err_output": 13.593340717433906,
    "avg_bits_err_improve": -0.022739434663188618,
    "time": 45110.283447265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (* alpha (- alpha)) (fma alpha alpha (* alpha (- alpha))))",
    "output_parens": 8,
    "avg_bits_err_input": 13.978770255565019,
    "avg_bits_err_output": 13.913416758027351,
    "avg_bits_err_improve": 0.06535349753766795,
    "time": 41534.401611328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (- (+ 1.0 (log (- 1.0 u0))) 1.0)) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.741572865133525,
    "avg_bits_err_output": 12.818551923279362,
    "avg_bits_err_improve": -0.07697905814583628,
    "time": 21950.24267578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -500000000.0) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (- (* (* l PI) (exp (log1p (/ 1.0 l)))) (* l PI)))))) (if (<= (* PI l) 50.0) (- (* PI l) (* (/ 1.0 (* F F)) (tan (expm1 (log1p (* PI l)))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (- (* (* l PI) (exp (log1p (/ 1.0 l)))) (* l PI))))))))",
    "output_parens": 43,
    "avg_bits_err_input": 16.591322162193293,
    "avg_bits_err_output": 13.115247397717772,
    "avg_bits_err_improve": 3.4760747644755217,
    "time": 37556.3486328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (- 0.0 (* (- (* (/ x x) (* (/ 1.0 (tan B)) (/ (/ x x) (/ 1.0 (tan B)))))) (/ x (/ (/ x x) (/ 1.0 (tan B)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.2183977750432873,
    "avg_bits_err_output": 0.20966450473358164,
    "avg_bits_err_improve": 0.008733270309705665,
    "time": 41911.951171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= F -1.7e+155) (+ (- (- (/ 1.0 (tan B)) (- (* (/ 1.0 (tan B)) (+ 1.0 (/ 1.0 (tan B)))) (* (/ 1.0 (tan B)) (* (/ 1.0 (tan B)) (+ 1.0 (/ x (/ 1.0 (tan B))))))))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))))",
    "output_parens": 42,
    "avg_bits_err_input": 13.678654866980793,
    "avg_bits_err_output": 13.263220880423829,
    "avg_bits_err_improve": 0.4154339865569643,
    "time": 67313.41235351562,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (- (+ (* (/ PI 4.0) f) 1.0) 1.0)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.54165585945417,
    "avg_bits_err_output": 1.8676889245992694,
    "avg_bits_err_improve": 59.673966934854896,
    "time": 74728.8154296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.9e-96) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l))))) (if (<= t 1.2e-131) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma l l (* t (+ t t))) (* l (fma -1.0 l l)))))) (- (exp (log1p (/ (* t (sqrt 2.0)) (sqrt (fma (- (/ (+ 1.0 x) (+ x -1.0))) (- (* t (+ t t))) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))))) 1.0)))",
    "output_parens": 57,
    "avg_bits_err_input": 43.32659585248511,
    "avg_bits_err_output": 36.23829347685241,
    "avg_bits_err_improve": 7.088302375632701,
    "time": 41706.066650390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (expm1 (log1p (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 4.231344212828495,
    "avg_bits_err_output": 4.2445190253320995,
    "avg_bits_err_improve": -0.013174812503604194,
    "time": 42365.177001953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9556506569647484,
    "avg_bits_err_output": 0.9569006569647484,
    "avg_bits_err_improve": -0.0012499999999999734,
    "time": 15519.567626953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 4e-304) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (- U U*) (pow (/ l Om) 2.0)))) (* 2.0 n)))) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))))",
    "output_parens": 43,
    "avg_bits_err_input": 34.715856491886406,
    "avg_bits_err_output": 33.00904728621328,
    "avg_bits_err_improve": 1.7068092056731246,
    "time": 32665.0810546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 5e+266) (/ 2.0 (* (pow (/ k t) 2.0) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (sin k) (* (+ (/ (pow t 3.0) (* l l)) 1.0) (tan k)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 47.454367195334584,
    "avg_bits_err_output": 37.28165571093737,
    "avg_bits_err_improve": 10.172711484397212,
    "time": 67836.38403320312,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.29597966000656,
    "avg_bits_err_output": 32.29233359414297,
    "avg_bits_err_improve": 0.00364606586359173,
    "time": 30252.869384765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (+ (* a2 a2) (* (/ (cos th) (sqrt 2.0)) (* a1 (/ a1 (/ (cos th) (sqrt 2.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5231174843993409,
    "avg_bits_err_output": 0.5824039676108725,
    "avg_bits_err_improve": -0.059286483211531626,
    "time": 39574.469482421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (- (* n (+ (* 2.0 PI) 1.0)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4621902415054958,
    "avg_bits_err_output": 0.47495037351390923,
    "avg_bits_err_improve": -0.012760132008413416,
    "time": 55859.777099609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma (- (exp l) (exp (- l))) (* (* J (/ (cos (/ K 2.0)) J)) J) U)",
    "output_parens": 10,
    "avg_bits_err_input": 17.13823190441733,
    "avg_bits_err_output": 17.138989927061772,
    "avg_bits_err_improve": -0.0007580226444403593,
    "time": 39222.05322265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -2e+160) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ m (+ 1.0 n)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 4e+126) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ m (+ 1.0 n)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 61,
    "avg_bits_err_input": 15.457810561855487,
    "avg_bits_err_output": 10.074043759650769,
    "avg_bits_err_improve": 5.383766802204718,
    "time": 18498.136474609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.109875,
    "avg_bits_err_output": 18.109875,
    "avg_bits_err_improve": 0,
    "time": 41162.33544921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (+ (- (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)) -1.0) -1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 14.03672484659555,
    "avg_bits_err_output": 14.037599846595551,
    "avg_bits_err_improve": -0.0008750000000006253,
    "time": 26619.423583984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 20.075743097737565,
    "avg_bits_err_output": 20.075743097737565,
    "avg_bits_err_improve": 0,
    "time": 28452.60791015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= w -2e-243) (* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* (* D D) (* h w))) (sqrt (- (* (/ (* d (* c0 d)) (* (* D D) (* h w))) (/ (* d (* c0 d)) (* (* D D) (* h w)))) (* M M))))) (* (/ c0 (+ w w)) (+ (/ (* c0 (* d d)) (* (* D h) (* D w))) (sqrt (* (- (/ (* c0 (* d d)) (* (* D h) (* D w))) M) (+ (/ (* c0 (* d d)) (* (* D h) (* D w))) M))))))",
    "output_parens": 54,
    "avg_bits_err_input": 59.4890401168143,
    "avg_bits_err_output": 57.80106392058452,
    "avg_bits_err_improve": 1.6879761962297835,
    "time": 56031.1328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* 0.5 (fma (pow (/ d l) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) (pow (/ d h) 0.5))) 0.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 26.57517247183802,
    "avg_bits_err_output": 25.976881555127758,
    "avg_bits_err_improve": 0.5982909167102619,
    "time": 74582.62744140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.268472142618139,
    "avg_bits_err_output": 15.268472142618139,
    "avg_bits_err_improve": 0,
    "time": 132620.52099609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9855212406251803,
    "avg_bits_err_output": 0.011615601562950722,
    "avg_bits_err_improve": 0.9739056390622296,
    "time": 16892.546142578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42904849037918835,
    "avg_bits_err_output": 0.36353627162377944,
    "avg_bits_err_improve": 0.06551221875540891,
    "time": 59711.125244140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010948120312590145,
    "avg_bits_err_output": 0.010948120312590145,
    "avg_bits_err_improve": 0,
    "time": 17573.36279296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5439001819329498,
    "avg_bits_err_output": 0.5439001819329498,
    "avg_bits_err_improve": 0,
    "time": 24154.633544921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9259301046592883,
    "avg_bits_err_output": 1.9084819843466982,
    "avg_bits_err_improve": 0.01744812031259002,
    "time": 13044.2802734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 2.0 (expm1 (/ (+ EDonor (+ mu (- Vef Ec))) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018231961784336958,
    "avg_bits_err_output": 0.01765024108712188,
    "avg_bits_err_improve": 0.0005817206972150782,
    "time": 13268.74072265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.19278029524739168,
    "avg_bits_err_output": 0.19278029524739168,
    "avg_bits_err_improve": 0,
    "time": 65343.46533203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* a (* 4.0 (* a a))) (+ (fma b (* b (- 4.0 (* a 12.0))) (pow (fma b b (* a a)) 2.0)) (* 4.0 (* a a)))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1859979328161958,
    "avg_bits_err_output": 0.1864725635909671,
    "avg_bits_err_improve": -0.0004746307747712786,
    "time": 34227.116455078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (- a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19748326282425066,
    "avg_bits_err_output": 0.19758218949652429,
    "avg_bits_err_improve": -9.892667227362484e-05,
    "time": 36765.827880859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(+ (+ (sqrt (fma (/ x (sqrt (fma x x (* 4.0 (* p p))))) 0.5 0.5)) -1.0) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 13.033998074617855,
    "avg_bits_err_output": 13.034551090375347,
    "avg_bits_err_improve": -0.0005530157574913375,
    "time": 27646.219970703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.25816847325312,
    "avg_bits_err_output": 0.04775,
    "avg_bits_err_improve": 41.21041847325312,
    "time": 5381.35546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 7,
    "avg_bits_err_input": 31.461052173174245,
    "avg_bits_err_output": 30.70338897421848,
    "avg_bits_err_improve": 0.7576631989557647,
    "time": 43522.382080078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.31137639132593,
    "avg_bits_err_output": 34.31137639132593,
    "avg_bits_err_improve": 0,
    "time": 18871.785888671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (fma b_2 b_2 (* c (- a))) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c)))))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 33.67612592308911,
    "avg_bits_err_output": 33.68442792728272,
    "avg_bits_err_improve": -0.008302004193609491,
    "time": 23487.940673828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (expm1 (- (+ (log (- 3.0 (cos x))) 1.0) 1.0)) -1.0) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 31.736452024498952,
    "avg_bits_err_output": 31.74091920385933,
    "avg_bits_err_improve": -0.004467179360378992,
    "time": 35514.410400390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(+ (+ (pow (+ x 1.0) (/ 1.0 n)) (- -1.0 (pow x (/ 1.0 n)))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 33.29715031191236,
    "avg_bits_err_output": 33.342737411155994,
    "avg_bits_err_improve": -0.045587099243633133,
    "time": 29696.865234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 28.969261763196297,
    "avg_bits_err_output": 28.969739470154316,
    "avg_bits_err_improve": -0.0004777069580192972,
    "time": 18119.635986328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.50278024762384,
    "avg_bits_err_output": 14.50278024762384,
    "avg_bits_err_improve": 0,
    "time": 73922.47216796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (* (/ 1.0 (- (cos x))) (- (exp (log1p (* (cos x) (cos x)))) 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 39.86815598606264,
    "avg_bits_err_output": 39.91201163759183,
    "avg_bits_err_improve": -0.04385565152919213,
    "time": 45783.94775390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.348605674942352,
    "avg_bits_err_output": 29.049296540430397,
    "avg_bits_err_improve": 0.2993091345119545,
    "time": 25835.791015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.28445121235955,
    "avg_bits_err_output": 30.28445121235955,
    "avg_bits_err_improve": 0,
    "time": 77820.97094726562,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b)))) (* 2.0 a))",
    "output_parens": 10,
    "avg_bits_err_input": 33.95559404567842,
    "avg_bits_err_output": 33.98161849345884,
    "avg_bits_err_improve": -0.026024447780422122,
    "time": 39709.3505859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.66758794091285,
    "avg_bits_err_output": 33.713419762928616,
    "avg_bits_err_improve": -0.045831822015763635,
    "time": 19680.705810546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.5) (/ (* (/ 1.0 (* (* (log (- 1.0 x)) (/ 1.0 (log (- 1.0 x)))) (- -1.0 (+ -1.0 (- (log (- 1.0 x))))))) (* (log (- 1.0 x)) (log (- 1.0 x)))) (- (- (log1p x) 1.0) -1.0)) (/ (log (- 1.0 x)) (log1p x)))",
    "output_parens": 34,
    "avg_bits_err_input": 61.270619768826684,
    "avg_bits_err_output": 58.865443316236615,
    "avg_bits_err_improve": 2.4051764525900694,
    "time": 29607.58642578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log (+ n 1.0)) (+ (- -1.0 (* n (log n))) (* n (log (+ n 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 62.99302958475544,
    "avg_bits_err_output": 0.608,
    "avg_bits_err_improve": 62.38502958475544,
    "time": 27084.064453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.74642241238647,
    "avg_bits_err_output": 58.75362374176812,
    "avg_bits_err_improve": -0.007201329381651078,
    "time": 151232.08862304688,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (/ 1.0 (/ 1.0 (tan x))) (- 0.0 (log (exp (+ (/ 1.0 (tan x)) (- (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 x)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 59.8838557877573,
    "avg_bits_err_output": 52.20128972714987,
    "avg_bits_err_improve": 7.682566060607428,
    "time": 47754.4599609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.345378136483426,
    "avg_bits_err_output": 41.071802102379735,
    "avg_bits_err_improve": 19.27357603410369,
    "time": 34256.879150390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.57759652460927,
    "avg_bits_err_output": 0.5278456330786342,
    "avg_bits_err_improve": 41.049750891530635,
    "time": 25877.8935546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64956406296297,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.648939062962974,
    "time": 3939.620849609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.190555501613225,
    "avg_bits_err_output": 0.021933307961146224,
    "avg_bits_err_improve": 29.16862219365208,
    "time": 12890.17529296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (log1p (expm1 (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.97122092094942,
    "avg_bits_err_output": 29.229350150023993,
    "avg_bits_err_improve": 0.7418707709254271,
    "time": 26243.9873046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.863463027586418,
    "avg_bits_err_output": 9.863463027586418,
    "avg_bits_err_improve": 0,
    "time": 63347.446044921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (log1p (expm1 (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 36.57062617300174,
    "avg_bits_err_output": 36.614509543498784,
    "avg_bits_err_improve": -0.04388337049704205,
    "time": 44001.038330078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (- (* (- -1.0 (sqrt x)) (* (- -1.0 (sqrt x)) (* (/ 1.0 (- -1.0 (sqrt x))) (* (/ 1.0 (- -1.0 (sqrt x))) (/ 1.0 (/ 1.0 (- -1.0 (sqrt x)))))))) (- (sqrt (+ x 1.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 29.19445551519674,
    "avg_bits_err_output": 28.570399847208222,
    "avg_bits_err_improve": 0.6240556679885181,
    "time": 26788.689697265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (* (sin (+ x eps)) (/ 1.0 (sin (+ x eps)))) (sin (+ x eps)) (- (sin x)))",
    "output_parens": 11,
    "avg_bits_err_input": 37.310897933782066,
    "avg_bits_err_output": 37.382303454521825,
    "avg_bits_err_improve": -0.07140552073975925,
    "time": 38745.115234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (- (- (/ 1.0 (sqrt x)) 1.0) -1.0) (log (exp (/ 1.0 (sqrt (+ 1.0 x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 20.190462941858282,
    "avg_bits_err_output": 20.430409992790224,
    "avg_bits_err_improve": -0.23994705093194213,
    "time": 31117.698486328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.352790914590928,
    "avg_bits_err_output": 15.352790914590928,
    "avg_bits_err_improve": 0,
    "time": 48778.22314453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp b) (expm1 a)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.13578993921866,
    "avg_bits_err_output": 15.128228276734044,
    "avg_bits_err_improve": 14.007561662484617,
    "time": 54806.290771484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (- m (* (/ 1.0 m) (* (* m m) m))) v) 1.0) (- 1.0 m))",
    "output_parens": 9,
    "avg_bits_err_input": 0.07544116562662259,
    "avg_bits_err_output": 0.11793685820431898,
    "avg_bits_err_improve": -0.04249569257769639,
    "time": 25588.907470703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* b a) (* b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.44636450593131,
    "avg_bits_err_output": 0.30952161719245797,
    "avg_bits_err_improve": 16.13684288873885,
    "time": 17617.919677734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.76230206679157,
    "avg_bits_err_output": 20.762093080222414,
    "avg_bits_err_improve": 0.00020898656915591118,
    "time": 39711.29541015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (- (* (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0))) (exp (log1p (* (sin (* PI (/ angle 180.0))) (/ (cos (* PI (/ angle 180.0))) (sin (* PI (/ angle 180.0)))))))) (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0)))))",
    "output_parens": 30,
    "avg_bits_err_input": 31.402692556196307,
    "avg_bits_err_output": 31.52602052557466,
    "avg_bits_err_improve": -0.12332796937835155,
    "time": 55552.751708984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 21.01613996667177,
    "avg_bits_err_output": 21.020707496327823,
    "avg_bits_err_improve": -0.0045675296560538925,
    "time": 74523.86083984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1709080828133113,
    "avg_bits_err_output": 0.17239868437626202,
    "avg_bits_err_improve": -0.0014906015629507219,
    "time": 26721.257568359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3192409679578293,
    "avg_bits_err_output": 0.31557999513477,
    "avg_bits_err_improve": 0.0036609728230593275,
    "time": 24757.809326171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13709436093777044,
    "avg_bits_err_output": 0.13709436093777044,
    "avg_bits_err_improve": 0,
    "time": 38408.231689453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (log1p (expm1 (* (sin phi1) (sin phi2)))) (* (* (cos (- lambda1 lambda2)) (cos phi1)) (cos phi2)))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 17.26532266119347,
    "avg_bits_err_output": 17.268764736466167,
    "avg_bits_err_improve": -0.0034420752726980197,
    "time": 53029.529052734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.6e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a)) (/ (- (* (+ (sqrt (fma b b (* a (* c -4.0)))) (- 1.0 b)) (fma (exp (log1p (* (/ 1.0 (+ 1.0 (- (sqrt (fma -4.0 (* a c) (* b b))) b))) (+ 1.0 (- (sqrt (fma -4.0 (* a c) (* b b))) b))))) (* (/ 1.0 (+ 1.0 (- (sqrt (fma -4.0 (* a c) (* b b))) b))) (+ 1.0 (- (sqrt (fma -4.0 (* a c) (* b b))) b))) (* (/ 1.0 (+ 1.0 (- (sqrt (fma -4.0 (* a c) (* b b))) b))) (- b (+ 1.0 (sqrt (fma -4.0 (* a c) (* b b)))))))) 1.0) (* a 2.0)))",
    "output_parens": 87,
    "avg_bits_err_input": 52.29929976882252,
    "avg_bits_err_output": 50.18683979101591,
    "avg_bits_err_improve": 2.1124599778066084,
    "time": 40980.736328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma -4.0 (* a c) (* b b)) (* (fma -4.0 (* a c) (* b b)) (/ 1.0 (fma -4.0 (* a c) (* b b))))))) (- b)) (+ a a))",
    "output_parens": 27,
    "avg_bits_err_input": 28.574083879377984,
    "avg_bits_err_output": 28.721329572897087,
    "avg_bits_err_improve": -0.14724569351910333,
    "time": 22803.293212890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma b b (* c (* -4.0 a)))) (sqrt (* (fma -4.0 (* a c) (* b b)) (* (fma -4.0 (* a c) (* b b)) (/ 1.0 (fma -4.0 (* a c) (* b b))))))) (- b)) (+ a a))",
    "output_parens": 27,
    "avg_bits_err_input": 43.86897274401046,
    "avg_bits_err_output": 43.08481469393251,
    "avg_bits_err_improve": 0.7841580500779557,
    "time": 24141.051025390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9597819943698,
    "avg_bits_err_output": 33.9597819943698,
    "avg_bits_err_improve": 0,
    "time": 42302.169677734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (* (cos phi2) (/ (cos (- lambda1 lambda2)) (cos phi2))) (cos phi2) (cos phi1))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9338465601211272,
    "avg_bits_err_output": 0.9418912005561548,
    "avg_bits_err_improve": -0.008044640435027617,
    "time": 31453.367919921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 28.86677195124757,
    "avg_bits_err_output": 28.868079202177178,
    "avg_bits_err_improve": -0.001307250929606596,
    "time": 5705.940673828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.21967768377833,
    "avg_bits_err_output": 1.3600849625007212,
    "avg_bits_err_improve": 56.85959272127761,
    "time": 7106.827880859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.86675641053981,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 57.858756410539804,
    "time": 6303.3974609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010865601562950722,
    "avg_bits_err_output": 0.010865601562950722,
    "avg_bits_err_improve": 0,
    "time": 3056.826416015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.50683755496477,
    "avg_bits_err_output": 32.50683755496477,
    "avg_bits_err_improve": 0,
    "time": 7302.13671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.098125,
    "avg_bits_err_output": 0.098125,
    "avg_bits_err_improve": 0,
    "time": 3840.717529296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.130375,
    "avg_bits_err_output": 0.13107312031259014,
    "avg_bits_err_improve": -0.0006981203125901447,
    "time": 51035.548583984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (fma (* ew (cos (atan (/ (* (- eh) (tan t)) ew)))) (cos t) 0.0) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1270212406251803,
    "avg_bits_err_improve": -0.0008750000000000147,
    "time": 25522.60986328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.78113974327733,
    "avg_bits_err_output": 3.76039455618086,
    "avg_bits_err_improve": 35.020745187096466,
    "time": 52456.77392578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (+ (/ (- (* a a) (* b b)) (* a a)) 1.0) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.835913914949252,
    "avg_bits_err_output": 14.83784076029047,
    "avg_bits_err_improve": -0.0019268453412184527,
    "time": 3791.0634765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (log (+ 1.0 (expm1 (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.1495530779968154,
    "avg_bits_err_output": 0.177774263654134,
    "avg_bits_err_improve": -0.028221185657318626,
    "time": 52297.349609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.6e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.33902114744207,
    "avg_bits_err_output": 50.3471589320633,
    "avg_bits_err_improve": 1.9918622153787666,
    "time": 30523.978515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.737962075875984,
    "avg_bits_err_output": 28.852881500100267,
    "avg_bits_err_improve": -0.1149194242242828,
    "time": 24218.272216796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-20) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (- (exp (log1p (/ 1.0 (fma b b (* a (* c -3.0)))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.860597649161285,
    "avg_bits_err_output": 42.44364697103096,
    "avg_bits_err_improve": 1.416950678130327,
    "time": 28321.509765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.005469977839034,
    "avg_bits_err_output": 34.005469977839034,
    "avg_bits_err_improve": 0,
    "time": 41544.64013671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (/ (* (cos (- lambda1 lambda2)) (cos phi2)) (sin phi1))) (sin phi1))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.731879525442293,
    "avg_bits_err_output": 13.740340185655894,
    "avg_bits_err_improve": -0.00846066021360059,
    "time": 57818.128662109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (log (* (* (exp (/ x (+ 1.0 x))) (/ 1.0 (exp (/ x (+ 1.0 x))))) (exp (/ x (+ 1.0 x))))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 29.29014617868307,
    "avg_bits_err_output": 29.29890889045511,
    "avg_bits_err_improve": -0.008762711772039466,
    "time": 43503.86328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010823120312590145,
    "avg_bits_err_output": 0.010823120312590145,
    "avg_bits_err_improve": 0,
    "time": 4084.285888671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.55267109565867,
    "avg_bits_err_output": 52.269878234942546,
    "avg_bits_err_improve": 0.2827928607161212,
    "time": 43796.654052734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.518849631088848,
    "avg_bits_err_output": 29.518849631088848,
    "avg_bits_err_improve": 0,
    "time": 41271.63818359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* C A))) (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.65280475486105,
    "avg_bits_err_output": 52.426408954351736,
    "avg_bits_err_improve": 0.22639580050931585,
    "time": 35469.111083984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.675261129035539,
    "avg_bits_err_output": 15.675261129035539,
    "avg_bits_err_improve": 0,
    "time": 1783.92138671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.258130008360105,
    "avg_bits_err_output": 36.258130008360105,
    "avg_bits_err_improve": 0,
    "time": 32033.348388671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (log (exp (/ (acos (/ (- g) h)) 3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9892859031316716,
    "avg_bits_err_output": 0.9888165421939011,
    "avg_bits_err_improve": 0.00046936093777050214,
    "time": 4976.77490234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7728231203125902,
    "avg_bits_err_output": 0.7728231203125902,
    "avg_bits_err_improve": 0,
    "time": 3492.68505859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.033263149210494,
    "avg_bits_err_output": 11.033263149210494,
    "avg_bits_err_improve": 0,
    "time": 20856.271728515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5711422606473945,
    "avg_bits_err_output": 0.488,
    "avg_bits_err_improve": 0.0831422606473945,
    "time": 11614.10107421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.001803818880376,
    "avg_bits_err_output": 15.921113571121506,
    "avg_bits_err_improve": 37.08069024775887,
    "time": 17207.109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.71631120409847,
    "avg_bits_err_output": 5.715574211825255,
    "avg_bits_err_improve": 0.000736992273214554,
    "time": 36474.331298828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.01425,
    "avg_bits_err_output": 0.01502124062518029,
    "avg_bits_err_improve": -0.0007712406251802889,
    "time": 8544.417236328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1213.59423828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 2e+73) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* w (* r (* (- 3.0 (+ v v)) (* 0.125 (* w r))))) (- 1.0 v))) 4.5))",
    "output_parens": 29,
    "avg_bits_err_input": 13.234242980792,
    "avg_bits_err_output": 6.834490978130221,
    "avg_bits_err_improve": 6.39975200266178,
    "time": 33826.60595703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (fma (* x1 x1) -6.0 (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (* (+ (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) 2.0)))) (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5027885008178629,
    "avg_bits_err_output": 0.27571971340538365,
    "avg_bits_err_improve": 0.2270687874124792,
    "time": 80102.64282226562,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.37980176535948,
    "avg_bits_err_output": 18.37980176535948,
    "avg_bits_err_improve": 0,
    "time": 15383.181884765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (fma x (* x -0.12900613773279798) 0.954929658551372))",
    "output_parens": 3,
    "avg_bits_err_input": 0.2082830828133113,
    "avg_bits_err_output": 0.19580432343849158,
    "avg_bits_err_improve": 0.012478759374819709,
    "time": 17914.0087890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2679.555419921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (* (/ PI 2.0) (/ 1.0 (* (- b a) (+ b a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.499340347252387,
    "avg_bits_err_output": 9.762797866001991,
    "avg_bits_err_improve": 4.736542481250396,
    "time": 40798.004150390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (- (* (/ 1.0 (+ (exp (- (fma eps x x))) 1.0)) (* (+ (exp (- (fma eps x x))) 1.0) (+ (exp (- (fma eps x x))) 1.0))) 1.0))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 33,
    "avg_bits_err_input": 29.538187497987234,
    "avg_bits_err_output": 0.9605571379759428,
    "avg_bits_err_improve": 28.57763036001129,
    "time": 39974.953369140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.042,
    "avg_bits_err_output": 0.04671936093777043,
    "avg_bits_err_improve": -0.00471936093777043,
    "time": 19901.933349609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.05,
    "avg_bits_err_output": 0.05,
    "avg_bits_err_improve": 0,
    "time": 30092.96630859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.025875,
    "avg_bits_err_output": 0.025875,
    "avg_bits_err_improve": 0,
    "time": 20710.617431640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3442.828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2498.5869140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3013.280517578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.825802818610342,
    "avg_bits_err_output": 0.242625,
    "avg_bits_err_improve": 7.583177818610341,
    "time": 58780.3095703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(+ (- (fma (pow (+ x eps) 5.0) (+ (pow (+ x eps) 5.0) -1.0) (pow (+ x eps) 5.0))) (- (+ (pow (+ x eps) 5.0) (* (pow (+ x eps) 5.0) (pow (+ x eps) 5.0))) (pow x 5.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 7.313456544664289,
    "avg_bits_err_output": 7.365080725084362,
    "avg_bits_err_improve": -0.051624180420072996,
    "time": 29043.01220703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.09118304571128,
    "avg_bits_err_output": 16.09118304571128,
    "avg_bits_err_improve": 0,
    "time": 88299.62744140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(+ (* (exp (* 10.0 (* x x))) (log1p (expm1 (fma (cos x) (exp (log1p (/ (cos x) (cos x)))) -1.0)))) (* (exp (* 10.0 (* x x))) (exp (log1p (- (cos x))))))",
    "output_parens": 22,
    "avg_bits_err_input": 3.556954082220967,
    "avg_bits_err_output": 3.567549394942963,
    "avg_bits_err_improve": -0.010595312721995764,
    "time": 39978.1474609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.3977754163026,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.3977754163026,
    "time": 3572.359130859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.535438043916855,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 39.534563043916854,
    "time": 5534.276611328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29775,
    "avg_bits_err_improve": 63.70225,
    "time": 4510.7314453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.84325919191947,
    "avg_bits_err_output": 0.36694511564681587,
    "avg_bits_err_improve": 61.47631407627266,
    "time": 29204.615478515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.66758794091285,
    "avg_bits_err_output": 33.713419762928616,
    "avg_bits_err_improve": -0.045831822015763635,
    "time": 27073.039306640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9597819943698,
    "avg_bits_err_output": 33.9597819943698,
    "avg_bits_err_improve": 0,
    "time": 49837.0107421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1592.4296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(expm1 (log1p (/ (expm1 x) x)))",
    "output_parens": 4,
    "avg_bits_err_input": 39.2457102326979,
    "avg_bits_err_output": 0.022166488038034567,
    "avg_bits_err_improve": 39.22354374465987,
    "time": 7419.044189453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.59203578829052,
    "avg_bits_err_output": 20.59203578829052,
    "avg_bits_err_improve": 0,
    "time": 3177.56640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.645317901549117,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.645317901549117,
    "time": 5893.830322265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03775,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.036375,
    "time": 7095.267578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019969360937770436,
    "avg_bits_err_output": 0.00975,
    "avg_bits_err_improve": 0.010219360937770436,
    "time": 5009.90673828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.014875,
    "avg_bits_err_improve": 0,
    "time": 5174.382568359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000125,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 0,
    "time": 2975.74267578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3994178578176384,
    "avg_bits_err_output": 0.25475,
    "avg_bits_err_improve": 0.1446678578176384,
    "time": 7853.666748046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.245784507366725,
    "avg_bits_err_output": 30.245784507366725,
    "avg_bits_err_improve": 0,
    "time": 119366.21020507812,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.74729623413098,
    "avg_bits_err_output": 24.74729623413098,
    "avg_bits_err_improve": 0,
    "time": 29495.51123046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.94598572055244,
    "avg_bits_err_output": 29.94592535950508,
    "avg_bits_err_improve": 6.0361047360402154e-05,
    "time": 101224.62866210938,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007073120312590144,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.006698120312590144,
    "time": 4373.538818359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.892560485256006,
    "avg_bits_err_output": 47.965806690630956,
    "avg_bits_err_improve": -0.07324620537495008,
    "time": 42493.830810546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.12211874181536,
    "avg_bits_err_output": 26.12211874181536,
    "avg_bits_err_improve": 0,
    "time": 27057.5380859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.308678419576303,
    "avg_bits_err_output": 26.308480299263714,
    "avg_bits_err_improve": 0.00019812031258936713,
    "time": 13872.36376953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.034,
    "avg_bits_err_output": 0.034,
    "avg_bits_err_improve": 0,
    "time": 3016.837890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (- ux (* ux maxCos)) (* ux (- (fma ux maxCos (- 1.0 ux)) (- (* maxCos (+ (* ux maxCos) 1.0)) (* ux maxCos)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.438470364147909,
    "avg_bits_err_output": 0.542382985271394,
    "avg_bits_err_improve": 12.896087378876516,
    "time": 27964.05029296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (+ (- ux (* ux maxCos)) (- 0.0 (* ux (* (fma ux maxCos (- 1.0 ux)) (+ maxCos -1.0)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.469913441361573,
    "avg_bits_err_output": 0.3350393457435527,
    "avg_bits_err_improve": 13.13487409561802,
    "time": 36771.88818359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* ux maxCos) (- zi (* ux zi))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33065003407957066,
    "avg_bits_err_output": 0.33245120794658795,
    "avg_bits_err_improve": -0.0018011738670172805,
    "time": 113934.01684570312,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20943728552988009,
    "avg_bits_err_output": 0.20943728552988009,
    "avg_bits_err_improve": 0,
    "time": 20511.401611328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (log1p (* (expm1 (sin (* 6.28318530718 u2))) (* (expm1 (sin (* 6.28318530718 u2))) (/ 1.0 (expm1 (sin (* 6.28318530718 u2))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.5440503140067406,
    "avg_bits_err_output": 0.5782559777121097,
    "avg_bits_err_improve": -0.03420566370536904,
    "time": 45934.472900390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.33463633674053544,
    "avg_bits_err_output": 0.33463633674053544,
    "avg_bits_err_improve": 0,
    "time": 31804.7490234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3268509457247941,
    "avg_bits_err_output": 0.32733194533811355,
    "avg_bits_err_improve": -0.00048099961331943275,
    "time": 33838.77294921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05719053371969949,
    "avg_bits_err_output": 0.05719053371969949,
    "avg_bits_err_improve": 0,
    "time": 5244.72119140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1363717012863607,
    "avg_bits_err_output": 0.11282528733881039,
    "avg_bits_err_improve": 0.023546413947550304,
    "time": 13055.556884765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (expm1 (log1p (* x PI)))) (expm1 (log1p (* x PI)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.6721000649712545,
    "avg_bits_err_output": 0.6966673807066,
    "avg_bits_err_improve": -0.02456731573534543,
    "time": 26645.119384765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (log1p (expm1 (exp (/ -2.0 v)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.1595977041511719,
    "avg_bits_err_output": 0.1648577528731995,
    "avg_bits_err_improve": -0.0052600487220276215,
    "time": 25891.875732421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.602624512973444,
    "avg_bits_err_output": 2.597886751420056,
    "avg_bits_err_improve": 0.004737761553388342,
    "time": 86357.68798828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4680016482563398,
    "avg_bits_err_output": 0.4680016482563398,
    "avg_bits_err_improve": 0,
    "time": 38623.59521484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.13372623535774267,
    "avg_bits_err_output": 0.13372623535774267,
    "avg_bits_err_improve": 0,
    "time": 89726.50830078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (/ 1.0 PI) (* PI (* (log (* alpha alpha)) PI))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.47169524392017503,
    "avg_bits_err_output": 0.49594338024895357,
    "avg_bits_err_improve": -0.024248136328778536,
    "time": 26516.54736328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (* (- 1.0 (/ (- u 0.25) 0.75)) (- (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) (* (/ (- u 0.25) 0.75) (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 1.313558536097618,
    "avg_bits_err_output": 1.2891356925340993,
    "avg_bits_err_improve": 0.02442284356351876,
    "time": 47306.374755859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (log1p (+ (/ 1.0 (- 1.0 (* 4.0 u))) -1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 12.496819115533375,
    "avg_bits_err_output": 12.49846981227333,
    "avg_bits_err_improve": -0.001650696739954327,
    "time": 36430.434326171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* PI (* 6.0 (* s r)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1393646669422509,
    "avg_bits_err_output": 0.14630171900665942,
    "avg_bits_err_improve": -0.006937052064408533,
    "time": 41260.192138671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8787843934670551,
    "avg_bits_err_output": 0.8648490597025895,
    "avg_bits_err_improve": 0.01393533376446554,
    "time": 42569.709716796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (* (/ 1.0 (sqrt PI)) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.7050612200225589,
    "avg_bits_err_output": 0.7624782556090836,
    "avg_bits_err_improve": -0.05741703558652467,
    "time": 48384.266357421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(- (* (sin (* 2.0 (* PI u2))) (exp (log1p (sqrt (- (log (- 1.0 u1))))))) (sin (* 2.0 (fma (fma (* PI (* (/ u2 PI) (* (/ u2 PI) (/ 1.0 (/ u2 PI))))) PI 0.0) (* (* PI u2) (/ 1.0 (* PI u2))) 0.0))))",
    "output_parens": 26,
    "avg_bits_err_input": 13.64286270808231,
    "avg_bits_err_output": 13.573139754021064,
    "avg_bits_err_improve": 0.06972295406124651,
    "time": 41787.518798828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* 2.0 (* PI u2))) (log (exp (sqrt (- (log (- 1.0 u1)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.68930644715885,
    "avg_bits_err_output": 13.707737516511017,
    "avg_bits_err_improve": -0.018431069352166318,
    "time": 34769.594482421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* alpha (* (+ 1.0 (/ (log (- 1.0 u0)) alpha)) (- alpha))) (* alpha (* alpha (- alpha 0.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 14.121078724752802,
    "avg_bits_err_output": 13.833768351263117,
    "avg_bits_err_improve": 0.28731037348968513,
    "time": 34477.501953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.559770403455477,
    "avg_bits_err_output": 12.56410662573512,
    "avg_bits_err_improve": -0.0043362222796421435,
    "time": 22928.709716796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -5e-126) (- (* (* l (/ (/ PI PI) PI)) (* PI PI)) (* (/ 1.0 (* F F)) (tan (* PI l)))) (if (<= F 1.95e-85) (- (* PI l) (* (* (/ 1.0 (* F F)) (* (/ 1.0 (* F F)) (log (+ 1.0 (expm1 (/ 1.0 (/ 1.0 (* F F)))))))) (tan (* PI l)))) (- (* PI l) (- (* (+ 1.0 (/ 1.0 (* F F))) (tan (* PI l))) (tan (* PI l))))))",
    "output_parens": 43,
    "avg_bits_err_input": 16.484532653509525,
    "avg_bits_err_output": 17.125742766100515,
    "avg_bits_err_improve": -0.6412101125909899,
    "time": 34816.521728515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2216887218755409,
    "avg_bits_err_output": 0.21763684218813104,
    "avg_bits_err_improve": 0.0040518796874098595,
    "time": 47573.80224609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (- (/ 1.0 (tan B))) x (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.64980104240478,
    "avg_bits_err_output": 13.648358597982103,
    "avg_bits_err_improve": 0.0014424444226772692,
    "time": 52052.39990234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.462011496647925,
    "avg_bits_err_output": 1.9727431075546953,
    "avg_bits_err_improve": 59.489268389093226,
    "time": 48041.814208984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -6e-129) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 2.9e-158) (/ (- (* (/ t t) (* (fma t (/ (sqrt 2.0) t) 1.0) (- (- t)))) t) (sqrt (fma l (- l) (fma t (* t (* (/ (+ 1.0 x) (+ x -1.0)) 2.0)) (* (/ (+ 1.0 x) (+ x -1.0)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 62,
    "avg_bits_err_input": 42.925394382291636,
    "avg_bits_err_output": 35.50028199629387,
    "avg_bits_err_improve": 7.425112385997764,
    "time": 40031.200439453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.6964799854752193,
    "avg_bits_err_output": 3.6964799854752193,
    "avg_bits_err_improve": 0,
    "time": 122621.14916992188,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0654600485173984,
    "avg_bits_err_output": 1.0654600485173984,
    "avg_bits_err_improve": 0,
    "time": 9766.81591796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e-297) (sqrt (+ (* U (fma (- t (* 2.0 (/ (* l l) Om))) (+ n n) (* (- U* U) (* n (* (+ n n) (pow (/ l Om) 2.0)))))) (* (- U) (fma (- (* 2.0 (/ (* l l) Om)) t) (+ n n) (* (- t (* 2.0 (/ (* l l) Om))) (+ n n)))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e+291) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (- (* U (- t (* 2.0 (/ (* l l) Om)))) (* n (* (- U U*) (* U (pow (/ l Om) 2.0))))) (* 2.0 n)))))",
    "output_parens": 89,
    "avg_bits_err_input": 34.57310368756563,
    "avg_bits_err_output": 31.444390594150597,
    "avg_bits_err_improve": 3.12871309341503,
    "time": 30361.337890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0)) (* (sin k) (tan k)))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (exp (log1p (/ (pow t 3.0) (* l l)))) (* (tan k) (sin k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.32513768766738,
    "avg_bits_err_output": 37.657451269509274,
    "avg_bits_err_improve": 9.667686418158105,
    "time": 61297.028076171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (sin k) (* (+ 2.0 (pow (/ k t) 2.0)) (/ (pow t 3.0) (* l l))))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.56549354709639,
    "avg_bits_err_output": 32.516476029012104,
    "avg_bits_err_improve": 0.049017518084284006,
    "time": 39842.725341796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a1) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4966031984601277,
    "avg_bits_err_output": 0.49484380002307865,
    "avg_bits_err_improve": 0.0017593984370490312,
    "time": 40624.323486328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (fma (* (* 2.0 PI) (/ n (* 2.0 PI))) (* 2.0 PI) 0.0) (/ (- 1.0 k) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5202207130428028,
    "avg_bits_err_output": 0.5314770445500896,
    "avg_bits_err_improve": -0.011256331507286776,
    "time": 51780.14599609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp l)) (- J) (* (exp l) (- J))) (fma (exp l) J (* (- J) (exp (- l))))) (cos (/ K 2.0))) U)",
    "output_parens": 18,
    "avg_bits_err_input": 17.5399525058927,
    "avg_bits_err_output": 17.544827435281267,
    "avg_bits_err_improve": -0.00487492938856704,
    "time": 36310.4638671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.777861285819132,
    "avg_bits_err_output": 14.777861285819132,
    "avg_bits_err_improve": 0,
    "time": 26347.119384765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.513615601562954,
    "avg_bits_err_output": 18.513615601562954,
    "avg_bits_err_improve": 0,
    "time": 42367.799072265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.833042091093368,
    "avg_bits_err_output": 13.833042091093368,
    "avg_bits_err_improve": 0,
    "time": 32941.771728515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.087414540911038,
    "avg_bits_err_output": 19.087414540911038,
    "avg_bits_err_improve": 0,
    "time": 26780.69482421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (/ (+ (/ (* d (* c0 d)) (* (* h D) (* w D))) (sqrt (fma (/ (* d (* c0 d)) (* (* h D) (* w D))) (/ (* d (* c0 d)) (* (* h D) (* w D))) (- (* M M))))) 1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 59.588639698190775,
    "avg_bits_err_output": 56.34801018036763,
    "avg_bits_err_improve": 3.2406295178231446,
    "time": 39261.808349609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (+ (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) 0.0) (* 0.5 (* (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d l) 0.5) (pow (/ d h) 0.5))) (/ h l))))",
    "output_parens": 20,
    "avg_bits_err_input": 25.877465678062265,
    "avg_bits_err_output": 25.983595931307995,
    "avg_bits_err_improve": -0.10613025324573044,
    "time": 47632.22900390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.425813022918906,
    "avg_bits_err_output": 15.425813022918906,
    "avg_bits_err_improve": 0,
    "time": 10758.307373046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9855943609377705,
    "avg_bits_err_output": 0.010323120312590145,
    "avg_bits_err_improve": 0.9752712406251803,
    "time": 9967.083251953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.43574238835900414,
    "avg_bits_err_output": 0.362334132490997,
    "avg_bits_err_improve": 0.07340825586800714,
    "time": 26377.257080078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010344360937770435,
    "avg_bits_err_output": 0.009719360937770434,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 5359.78271484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (- (- (+ (/ (fma v (* v -5.0) 1.0) (fma v v -1.0)) 2.0) 1.0) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5108302076528658,
    "avg_bits_err_output": 0.5364750046670814,
    "avg_bits_err_improve": -0.025644797014215626,
    "time": 10819.09228515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.2294409504701145,
    "avg_bits_err_output": 2.2294409504701145,
    "avg_bits_err_improve": 0,
    "time": 5754.093994140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (- (+ (/ (+ Vef (+ Ev (- EAccept mu))) KbT) 1.0) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.025436822098208918,
    "avg_bits_err_output": 0.025113701785618774,
    "avg_bits_err_improve": 0.0003231203125901444,
    "time": 8707.577880859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18291973225554356,
    "avg_bits_err_output": 0.18420545156583526,
    "avg_bits_err_improve": -0.0012857193102916997,
    "time": 33192.96484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1823065744436745,
    "avg_bits_err_output": 0.1823065744436745,
    "avg_bits_err_improve": 0,
    "time": 5423.046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19048803207133594,
    "avg_bits_err_output": 0.19048803207133594,
    "avg_bits_err_improve": 0,
    "time": 5736.88525390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.609559969502971,
    "avg_bits_err_output": 13.609559969502971,
    "avg_bits_err_improve": 0,
    "time": 18063.33837890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.77464088323663,
    "avg_bits_err_output": 0.055875,
    "avg_bits_err_improve": 40.71876588323663,
    "time": 9011.0361328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.428593048015863,
    "avg_bits_err_output": 31.428593048015863,
    "avg_bits_err_improve": 0,
    "time": 35321.603271484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.058381366922966,
    "avg_bits_err_output": 34.058381366922966,
    "avg_bits_err_improve": 0,
    "time": 15272.35498046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.03008086100492,
    "avg_bits_err_output": 34.03008086100492,
    "avg_bits_err_improve": 0,
    "time": 18148.584228515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.90666563524404,
    "avg_bits_err_output": 30.90666563524404,
    "avg_bits_err_improve": 0,
    "time": 27628.638916015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(log (exp (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))))",
    "output_parens": 8,
    "avg_bits_err_input": 32.706754976689055,
    "avg_bits_err_output": 32.81129674618062,
    "avg_bits_err_improve": -0.10454176949156846,
    "time": 30646.6982421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (- (+ (exp (- (log1p N) (log N))) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.18356159511976,
    "avg_bits_err_output": 29.186463478330655,
    "avg_bits_err_improve": -0.002901883210896017,
    "time": 23968.78515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (+ (/ 1.0 x) (/ 1.0 (+ 1.0 x))) (* (/ 1.0 x) -2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 14.669926653435628,
    "avg_bits_err_output": 14.7024048912277,
    "avg_bits_err_improve": -0.032478237792071596,
    "time": 39482.994140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (* (/ 1.0 (* (cos (+ x eps)) (cos (+ x eps)))) (* (cos (+ x eps)) (cos (+ x eps)))) (cos (+ x eps)) (- (cos x)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.62885796385204,
    "avg_bits_err_output": 39.636068709123776,
    "avg_bits_err_improve": -0.007210745271734709,
    "time": 52619.615966796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (fma (+ 1.0 (cbrt (+ 1.0 x))) (/ 1.0 (+ 1.0 (cbrt (+ 1.0 x)))) -1.0) (+ (/ (cbrt (- x -1.0)) (+ 1.0 (cbrt (- x -1.0)))) (- (* (cbrt (- x -1.0)) (/ (cbrt (- x -1.0)) (+ 1.0 (cbrt (- x -1.0))))) (cbrt x))))",
    "output_parens": 27,
    "avg_bits_err_input": 29.672128719980382,
    "avg_bits_err_output": 29.30614070737778,
    "avg_bits_err_improve": 0.36598801260260316,
    "time": 30363.69873046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.002686708335755,
    "avg_bits_err_output": 30.002686708335755,
    "avg_bits_err_improve": 0,
    "time": 65160.614990234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b)))) (* 2.0 a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.234673131877436,
    "avg_bits_err_output": 34.27722836526405,
    "avg_bits_err_improve": -0.04255523338661504,
    "time": 20721.099853515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma c (* a -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.710277482896295,
    "avg_bits_err_output": 33.72186898635007,
    "avg_bits_err_improve": -0.011591503453772134,
    "time": 21314.325439453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.5) (/ (* (/ 1.0 (- (+ 1.0 (log (- 1.0 x))) 1.0)) (* (log (- 1.0 x)) (log (- 1.0 x)))) (- (- (log1p x) 1.0) -1.0)) (- (- (/ (log (- 1.0 x)) (log1p x)) 1.0) -1.0))",
    "output_parens": 28,
    "avg_bits_err_input": 61.368384163634296,
    "avg_bits_err_output": 58.996646530256086,
    "avg_bits_err_improve": 2.37173763337821,
    "time": 42578.086181640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (log1p n) (- (- -1.0 n) (fma n (- (log1p n) (log n)) (- -2.0 n))))",
    "output_parens": 9,
    "avg_bits_err_input": 63.004861545587985,
    "avg_bits_err_output": 0.07207251960426907,
    "avg_bits_err_improve": 62.932789025983716,
    "time": 28107.933349609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.55311717107745,
    "avg_bits_err_output": 58.55797169000805,
    "avg_bits_err_improve": -0.004854518930599738,
    "time": 159321.740234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (- (/ 1.0 (/ 1.0 (tan x))) (- (fma 1.0 (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x))) (/ 1.0 (tan x)))) (- (/ 1.0 x) (/ 1.0 (tan x))))",
    "output_parens": 18,
    "avg_bits_err_input": 59.86659524500726,
    "avg_bits_err_output": 52.20694663369569,
    "avg_bits_err_improve": 7.659648611311567,
    "time": 50986.020263671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.52131561508944,
    "avg_bits_err_output": 40.70842431750771,
    "avg_bits_err_improve": 19.81289129758173,
    "time": 30484.634765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.146003904474156,
    "avg_bits_err_output": 0.3975943609377705,
    "avg_bits_err_improve": 40.74840954353638,
    "time": 21138.9921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.65758867147359,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 58.65721367147359,
    "time": 3541.417724609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.113551741286233,
    "avg_bits_err_output": 0.01916850310022949,
    "avg_bits_err_improve": 29.094383238186005,
    "time": 5038.9560546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.460704682000475,
    "avg_bits_err_output": 28.595772139196423,
    "avg_bits_err_improve": 0.864932542804052,
    "time": 26058.858154296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.633505261051234,
    "avg_bits_err_output": 9.64963316936641,
    "avg_bits_err_improve": -0.016127908315176853,
    "time": 53988.836669921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.7534910911402,
    "avg_bits_err_output": 36.7534910911402,
    "avg_bits_err_improve": 0,
    "time": 40252.837646484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (exp (log (- (- (sqrt (+ x 1.0)) (sqrt x)) -3.0))) -3.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.591864212488453,
    "avg_bits_err_output": 28.566157125504116,
    "avg_bits_err_improve": 1.0257070869843368,
    "time": 33298.53125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (expm1 (log1p (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.01132265054853,
    "avg_bits_err_output": 37.031879417874165,
    "avg_bits_err_improve": -0.020556767325636827,
    "time": 49315.9951171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (+ (+ (sqrt (+ 1.0 x)) 2.0) -2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 20.256004051314022,
    "avg_bits_err_output": 20.255074577086578,
    "avg_bits_err_improve": 0.0009294742274441603,
    "time": 35451.432373046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (+ (atan (+ N 1.0)) (- -1.0 (atan N))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 14.178066987185467,
    "avg_bits_err_output": 14.180248722643814,
    "avg_bits_err_improve": -0.0021817354583468784,
    "time": 33728.679443359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.38078377963852,
    "avg_bits_err_output": 29.38078377963852,
    "avg_bits_err_improve": 0,
    "time": 77120.77075195312,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07448514209423482,
    "avg_bits_err_output": 0.07448514209423482,
    "avg_bits_err_improve": 0,
    "time": 26114.523681640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.067174388564737,
    "avg_bits_err_output": 0.31101917344137625,
    "avg_bits_err_improve": 15.75615521512336,
    "time": 22474.0234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.417983566486676,
    "avg_bits_err_output": 20.419970010984343,
    "avg_bits_err_improve": -0.0019864444976676054,
    "time": 56570.636962890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* (* PI (/ angle 180.0)) (* PI (* (/ angle 180.0) (/ 1.0 (* PI (/ angle 180.0)))))))) (log1p (expm1 (cos (* PI (/ angle 180.0))))))",
    "output_parens": 21,
    "avg_bits_err_input": 31.15099973059393,
    "avg_bits_err_output": 31.282291821999628,
    "avg_bits_err_improve": -0.13129209140569742,
    "time": 55788.915283203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* PI (* (/ angle 180.0) PI))))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.207910606075902,
    "avg_bits_err_output": 20.219218562689093,
    "avg_bits_err_improve": -0.01130795661319084,
    "time": 73897.80541992188,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17090158869586775,
    "avg_bits_err_output": 0.17131034640495865,
    "avg_bits_err_improve": -0.0004087577090909067,
    "time": 25540.804931640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3234814492662428,
    "avg_bits_err_output": 0.3143218244774213,
    "avg_bits_err_improve": 0.009159624788821485,
    "time": 20389.177978515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(log1p (expm1 (/ (* e (sin v)) (+ (* e (cos v)) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13239624062518027,
    "avg_bits_err_output": 0.13221936093777042,
    "avg_bits_err_improve": 0.00017687968740984217,
    "time": 35817.233154296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(/ (* (acos (fma (cos phi2) (* (cos (- lambda1 lambda2)) (cos phi1)) (* (sin phi1) (sin phi2)))) R) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 17.053078116884766,
    "avg_bits_err_output": 17.05141220328939,
    "avg_bits_err_improve": 0.0016659135953744908,
    "time": 94429.427734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 9.5e+15) (/ (fma (* (/ 1.0 (sqrt (fma b b (* c (* a -4.0))))) (fma (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (/ (/ 1.0 (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))) (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))))) 0.0)) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)) (/ (+ (+ (sqrt (fma b b (* a (* c -4.0)))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 54,
    "avg_bits_err_input": 52.41960666705849,
    "avg_bits_err_output": 50.45640019368659,
    "avg_bits_err_improve": 1.9632064733718977,
    "time": 28027.195556640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma b b (* a (* c -4.0))) (fma (- a) (* 4.0 c) (* 4.0 (* a c)))))) (* a 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 28.521127677284223,
    "avg_bits_err_output": 28.4400265579413,
    "avg_bits_err_improve": 0.08110111934292163,
    "time": 20904.600341796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 0.205) (/ (- (* (sqrt (fma b b (* a (* c -4.0)))) (fma (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (/ 1.0 (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))))) 0.0)) b) (+ a a)) (if (<= b 3.3e+15) (/ (+ (fma (- (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (/ (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (+ a a)) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a))))",
    "output_parens": 91,
    "avg_bits_err_input": 43.933839051325805,
    "avg_bits_err_output": 42.22244323727462,
    "avg_bits_err_improve": 1.711395814051187,
    "time": 27931.37939453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.23904482868608,
    "avg_bits_err_output": 34.23904482868608,
    "avg_bits_err_improve": 0,
    "time": 20538.539306640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (expm1 (log1p (sin (- lambda1 lambda2))))) (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9072351064400549,
    "avg_bits_err_output": 0.9162767411398027,
    "avg_bits_err_improve": -0.009041634699747836,
    "time": 34354.32421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (+ 1.0 (expm1 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.07634473132597,
    "avg_bits_err_output": 29.08333279235264,
    "avg_bits_err_improve": -0.0069880610266679355,
    "time": 38555.437255859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.071940921935386,
    "avg_bits_err_output": 1.4171062031259016,
    "avg_bits_err_improve": 56.65483471880948,
    "time": 6727.171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.99240368509231,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 57.98440368509231,
    "time": 6716.764892578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.00789624062518029,
    "avg_bits_err_output": 0.00789624062518029,
    "avg_bits_err_improve": 0,
    "time": 3472.685546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (fma (* x (/ (/ x x) x)) x (sqrt (fma x x -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 32.369375,
    "avg_bits_err_output": 32.36925,
    "avg_bits_err_improve": 0.00012499999999704414,
    "time": 6412.951904296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (expm1 (log1p (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.54309489220731,
    "avg_bits_err_output": 58.56014317435734,
    "avg_bits_err_improve": -0.017048282150035732,
    "time": 57732.420654296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026573120312590147,
    "avg_bits_err_output": 0.026573120312590147,
    "avg_bits_err_improve": 0,
    "time": 3785.45166015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12382312031259014,
    "avg_bits_err_output": 0.12382312031259014,
    "avg_bits_err_improve": 0,
    "time": 39015.717529296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1261462406251803,
    "avg_bits_err_improve": 0,
    "time": 26782.83154296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda1) (- (cos (/ (+ phi1 phi2) 2.0))) (* lambda1 (- (cos (/ (+ phi1 phi2) 2.0)))))) (- phi1 phi2)))",
    "output_parens": 19,
    "avg_bits_err_input": 39.08669208283665,
    "avg_bits_err_output": 3.6934866323323687,
    "avg_bits_err_improve": 35.39320545050428,
    "time": 43932.205322265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.449749711339619,
    "avg_bits_err_output": 14.449749711339619,
    "avg_bits_err_improve": 0,
    "time": 4755.896484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (/ (fma (sin phi1) (sin (asin (fma (cos theta) (* (cos phi1) (sin delta)) (* (sin phi1) (cos delta))))) (- (cos delta))) 1.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1635200668372493,
    "avg_bits_err_output": 0.15583616641836776,
    "avg_bits_err_improve": 0.007683900418881534,
    "time": 81136.96362304688,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (fma b b (* a (* c -3.0)))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.4813404162015,
    "avg_bits_err_output": 50.46403109623203,
    "avg_bits_err_improve": 2.0173093199694705,
    "time": 30741.15966796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma (* a c) -3.0 (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.675928576812307,
    "avg_bits_err_output": 28.77922792120296,
    "avg_bits_err_improve": -0.10329934439065269,
    "time": 33079.854736328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (log (+ 1.0 (expm1 (* (fma a (* c -3.0) (* b b)) (/ 1.0 (fma a (* c -3.0) (* b b)))))))))) (- b)) (* 3.0 a))",
    "output_parens": 30,
    "avg_bits_err_input": 44.010822380376474,
    "avg_bits_err_output": 43.15236031471954,
    "avg_bits_err_improve": 0.8584620656569371,
    "time": 31246.55810546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.27727371167057,
    "avg_bits_err_output": 34.27727371167057,
    "avg_bits_err_improve": 0,
    "time": 20724.116455078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (/ (sin (- lambda1 lambda2)) (cos phi2)) (* (cos phi2) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.235009709166363,
    "avg_bits_err_output": 13.248912966305909,
    "avg_bits_err_improve": -0.013903257139546099,
    "time": 54715.5029296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.474627970452524,
    "avg_bits_err_output": 29.474627970452524,
    "avg_bits_err_improve": 0,
    "time": 240369.92309570312,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (- (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) 1.0) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.010375,
    "avg_bits_err_output": 0.01102124062518029,
    "avg_bits_err_improve": -0.0006462406251802888,
    "time": 4221.612060546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (log1p (expm1 (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.716908677052219,
    "avg_bits_err_output": 14.720784967075375,
    "avg_bits_err_improve": -0.003876290023155704,
    "time": 47772.393798828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.34570415851834,
    "avg_bits_err_output": 52.07560400794074,
    "avg_bits_err_improve": 0.27010015057759773,
    "time": 37199.49853515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.768099971483018,
    "avg_bits_err_output": 29.768099971483018,
    "avg_bits_err_improve": 0,
    "time": 34422.370849609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* 2.0 (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* 4.0 A))) F))))) (- (pow B 2.0) (* C (* 4.0 A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.39194310070474,
    "avg_bits_err_output": 52.08746852961266,
    "avg_bits_err_improve": 0.3044745710920793,
    "time": 39139.01611328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.164742181436335,
    "avg_bits_err_output": 16.164742181436335,
    "avg_bits_err_improve": 0,
    "time": 3013.601318359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (* (+ g h) (* (+ g h) (/ (- g h) (+ g h))))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 35.7464310882645,
    "avg_bits_err_output": 35.75507124610486,
    "avg_bits_err_improve": -0.008640157840360985,
    "time": 10961.32373046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (log1p (expm1 (/ (acos (/ (- g) h)) 3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9913639109464255,
    "avg_bits_err_output": 0.9915620312590158,
    "avg_bits_err_improve": -0.0001981203125902553,
    "time": 8820.517333984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(exp (log (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.667125,
    "avg_bits_err_output": 0.6687684006156179,
    "avg_bits_err_improve": -0.0016434006156179626,
    "time": 6534.384765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.423395897667953,
    "avg_bits_err_output": 11.423395897667953,
    "avg_bits_err_improve": 0,
    "time": 17140.8427734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5129727632595006,
    "avg_bits_err_output": 0.4325,
    "avg_bits_err_improve": 0.08047276325950059,
    "time": 12371.279541015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (/ 1.0 (hypot 1.0 x)) (- (- (/ 1.0 (hypot 1.0 x)) x) (hypot 1.0 x)))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.00000001) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (log (- (/ 1.0 (hypot 1.0 x)) (+ (+ 1.0 (- (/ 1.0 (hypot 1.0 x)) (+ x (hypot 1.0 x)))) -1.0)))))",
    "output_parens": 36,
    "avg_bits_err_input": 52.89206785441452,
    "avg_bits_err_output": 11.205003056323207,
    "avg_bits_err_improve": 41.68706479809131,
    "time": 24797.529296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.651442741400846,
    "avg_bits_err_output": 5.650000246529884,
    "avg_bits_err_improve": 0.00144249487096193,
    "time": 51168.774658203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.013924039677847347,
    "avg_bits_err_improve": -0.001299039677847346,
    "time": 7337.950439453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1183.24462890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -3e-36) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* r w)))) (- 1.0 v))) (if (<= r -4e-150) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (- (* w (exp (log1p (* r r)))) w))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* (* w (* 0.375 r)) (* r w)) (* (* r w) (* r (* (* v 0.25) w)))) (- 1.0 v)))))",
    "output_parens": 47,
    "avg_bits_err_input": 12.357390301486214,
    "avg_bits_err_output": 7.303658632226939,
    "avg_bits_err_improve": 5.0537316692592755,
    "time": 30455.66162109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (+ (fma (+ (* 2.0 (* (+ (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* x1 (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0))))) (* (* x1 x1) (+ (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0) -6.0))) (fma x1 x1 1.0) (* x1 (* x1 (+ x1 (* 3.0 (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0))))))) (fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 48,
    "avg_bits_err_input": 0.5166551153454957,
    "avg_bits_err_output": 0.3039208163243456,
    "avg_bits_err_improve": 0.2127342990211501,
    "time": 67747.90795898438,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.23924039327486,
    "avg_bits_err_output": 18.23924039327486,
    "avg_bits_err_improve": 0,
    "time": 54899.499267578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.21791748125036056,
    "avg_bits_err_output": 0.18373120312590144,
    "avg_bits_err_improve": 0.034186278124459124,
    "time": 9162.419189453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026652410118609203,
    "avg_bits_err_output": 0.0026652410118609203,
    "avg_bits_err_improve": 0,
    "time": 3484.512451171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.487350327184277,
    "avg_bits_err_output": 9.902560289684972,
    "avg_bits_err_improve": 4.584790037499305,
    "time": 40762.79931640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.288659464539627,
    "avg_bits_err_output": 0.8795702427211244,
    "avg_bits_err_improve": 28.4090892218185,
    "time": 30330.65869140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020375,
    "avg_bits_err_output": 0.020375,
    "avg_bits_err_improve": 0,
    "time": 11303.72705078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025625,
    "avg_bits_err_output": 0.025625,
    "avg_bits_err_improve": 0,
    "time": 37750.92919921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.035375,
    "avg_bits_err_output": 0.035375,
    "avg_bits_err_improve": 0,
    "time": 7219.023681640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3700.019287109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2612.230224609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2929.03369140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.80911877941945,
    "avg_bits_err_output": 0.248875,
    "avg_bits_err_improve": 7.56024377941945,
    "time": 49839.612060546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.568363101246445,
    "avg_bits_err_output": 7.568363101246445,
    "avg_bits_err_improve": 0,
    "time": 30449.83056640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.151271773531636,
    "avg_bits_err_output": 16.151271773531636,
    "avg_bits_err_improve": 0,
    "time": 88311.74609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (+ (* (expm1 (* 10.0 (* x x))) (* (expm1 (* 10.0 (* x x))) (/ 1.0 (- (exp (* 10.0 (* x x))) 1.0)))) 1.0) (* (cos x) (exp (log1p (/ (cos x) (cos x))))) (* (exp (* 10.0 (* x x))) (- (cos x))))",
    "output_parens": 28,
    "avg_bits_err_input": 3.5337284328666234,
    "avg_bits_err_output": 3.5373718706236774,
    "avg_bits_err_improve": -0.003643437757054002,
    "time": 38649.4443359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (fma x x 1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 14.775483775594797,
    "avg_bits_err_output": 14.775160655282209,
    "avg_bits_err_improve": 0.00032312031258818763,
    "time": 73057.53784179688,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.41319217748289,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.41319217748289,
    "time": 4791.160400390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.72486944223623,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 38.723869442236236,
    "time": 3970.477294921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.301,
    "avg_bits_err_improve": 63.699,
    "time": 3684.61328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.843250776468324,
    "avg_bits_err_output": 0.3642020703327832,
    "avg_bits_err_improve": 61.47904870613554,
    "time": 26545.3271484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma c (* a -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.710277482896295,
    "avg_bits_err_output": 33.72186898635007,
    "avg_bits_err_improve": -0.011591503453772134,
    "time": 22726.89013671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.23904482868608,
    "avg_bits_err_output": 34.23904482868608,
    "avg_bits_err_improve": 0,
    "time": 19662.048583984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1434.48291015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.02464764542883,
    "avg_bits_err_output": 0.01975,
    "avg_bits_err_improve": 40.00489764542883,
    "time": 10920.246337890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(expm1 (log1p (/ (- (* x x) (* y y)) (fma x x (* y y)))))",
    "output_parens": 8,
    "avg_bits_err_input": 20.27894301975897,
    "avg_bits_err_output": 20.27956384342585,
    "avg_bits_err_improve": -0.0006208236668818756,
    "time": 3083.82958984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.5764649048846247,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.5764649048846247,
    "time": 4912.168701171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0385,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.037125,
    "time": 7198.747802734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.016948120312590145,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0.005823120312590146,
    "time": 5598.283203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.014374999999999999,
    "time": 5701.406494140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1255.454345703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4032691734413764,
    "avg_bits_err_output": 0.237625,
    "avg_bits_err_improve": 0.1656441734413764,
    "time": 6528.09423828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.500441905640464,
    "avg_bits_err_output": 29.500441905640464,
    "avg_bits_err_improve": 0,
    "time": 100168.01000976562,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.28423411580665,
    "avg_bits_err_output": 24.28423411580665,
    "avg_bits_err_improve": 0,
    "time": 19888.677978515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.51516062313163,
    "avg_bits_err_output": 30.514901156009806,
    "avg_bits_err_improve": 0.00025946712182545184,
    "time": 69752.22021484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590144,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.005823120312590144,
    "time": 3466.161865234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.41803412600564,
    "avg_bits_err_output": 26.41803412600564,
    "avg_bits_err_improve": 0,
    "time": 29081.64697265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma (- d) a (* b c)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.36938487891704,
    "avg_bits_err_output": 26.36906175860445,
    "avg_bits_err_improve": 0.000323120312589964,
    "time": 18060.611572265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (* ux (+ maxCos (* ux (/ -1.0 ux)))) -1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 0.033375,
    "avg_bits_err_output": 0.031188753934705153,
    "avg_bits_err_improve": 0.0021862460652948487,
    "time": 6649.62158203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- ux (* ux (+ ux (fma maxCos (- (- (fma ux maxCos 2.0) ux) ux) -1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.604116756017186,
    "avg_bits_err_output": 0.5433783712179935,
    "avg_bits_err_improve": 13.060738384799192,
    "time": 31023.67431640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (* ux (* ux maxCos)) (- 0.0 (* ux (+ (+ (* ux (* maxCos maxCos)) (* maxCos (- 2.0 ux))) (+ ux -2.0)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.633105205358305,
    "avg_bits_err_output": 0.3365879781059323,
    "avg_bits_err_improve": 13.296517227252373,
    "time": 40566.005126953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.3533256941859234,
    "avg_bits_err_output": 0.34699669838471414,
    "avg_bits_err_improve": 0.0063289958012092695,
    "time": 73726.1533203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.21003759491720253,
    "avg_bits_err_output": 0.21016259491720254,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 20071.1669921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (* (/ (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))) (/ (/ (/ 1.0 (/ u1 (- 1.0 u1))) (/ 1.0 (/ u1 (- 1.0 u1)))) (/ (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 35,
    "avg_bits_err_input": 0.5273052096597759,
    "avg_bits_err_output": 0.5131372836819886,
    "avg_bits_err_improve": 0.014167925977787266,
    "time": 64133.152099609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (- (+ (* 6.28318530718 u2) 1.0) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3268196327186358,
    "avg_bits_err_output": 0.3480386216482113,
    "avg_bits_err_improve": -0.021218988929575522,
    "time": 40316.941162109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (- (+ 1.0 (+ (- (/ s s)) (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.33150640204892723,
    "avg_bits_err_output": 0.3325744025556765,
    "avg_bits_err_improve": -0.001068000506749267,
    "time": 33313.47900390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (exp (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05803104458225688,
    "avg_bits_err_output": 0.06563276723115899,
    "avg_bits_err_improve": -0.007601722648902111,
    "time": 68096.5546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (fma s (exp (/ (- (fabs x)) s)) s) (+ 2.0 (expm1 (/ (- (fabs x)) s)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13354197425442763,
    "avg_bits_err_output": 0.11883915918557258,
    "avg_bits_err_improve": 0.01470281506885504,
    "time": 35468.65087890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6751124505807413,
    "avg_bits_err_output": 0.6787023715821615,
    "avg_bits_err_improve": -0.003589921001420193,
    "time": 17772.768798828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (- (+ (log (+ u (* (exp (/ -2.0 v)) (- 1.0 u)))) 1.0) 1.0) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.15663811306823494,
    "avg_bits_err_output": 0.16067534612995507,
    "avg_bits_err_improve": -0.00403723306172013,
    "time": 24034.47216796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.561479138020748,
    "avg_bits_err_output": 2.5558232954459363,
    "avg_bits_err_improve": 0.005655842574811665,
    "time": 43493.817138671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* v (/ (* (sinh (/ 1.0 v)) 2.0) v)) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46465221439493026,
    "avg_bits_err_output": 0.4696312524070488,
    "avg_bits_err_improve": -0.00497903801211852,
    "time": 37325.322021484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10215365043857581,
    "avg_bits_err_output": 0.10215365043857581,
    "avg_bits_err_improve": 0,
    "time": 8370.491455078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4702707101683745,
    "avg_bits_err_output": 0.4702707101683745,
    "avg_bits_err_improve": 0,
    "time": 21690.8896484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* s -3.0) (log (+ 1.0 (expm1 (- (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 1.3115123199176546,
    "avg_bits_err_output": 1.3101051429058521,
    "avg_bits_err_improve": 0.0014071770118024851,
    "time": 64807.609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 12.513838276691208,
    "avg_bits_err_output": 12.626144405864734,
    "avg_bits_err_improve": -0.11230612917352545,
    "time": 56211.68408203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* s (* 2.0 (* PI r)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI (* r s)) 6.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13220703589264557,
    "avg_bits_err_output": 0.13876776298260116,
    "avg_bits_err_improve": -0.006560727089955587,
    "time": 42372.47607421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) n1_i (fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8584023282747201,
    "avg_bits_err_output": 0.8295723507306697,
    "avg_bits_err_improve": 0.028829977544050367,
    "time": 49614.980224609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (+ (exp (log (+ c 2.0))) (* (/ 1.0 (sqrt PI)) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (expm1 (log1p (exp (- (* cosTheta cosTheta)))))))) 1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.6866850533746715,
    "avg_bits_err_output": 0.6969307459523685,
    "avg_bits_err_improve": -0.01024569257769703,
    "time": 64675.151123046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* PI (+ u2 u2))) (fma (sin (* PI (+ u2 u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (sin (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 13.621533033039467,
    "avg_bits_err_output": 13.4342836992868,
    "avg_bits_err_improve": 0.18724933375266772,
    "time": 51601.349365234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (* PI (+ u2 u2))) (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 13.670547721294065,
    "avg_bits_err_output": 13.593653906329383,
    "avg_bits_err_improve": 0.0768938149646825,
    "time": 50617.36376953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (* alpha (* (- (* (/ -1.0 alpha) (- (* (/ alpha alpha) (- 1.0 alpha)) (/ alpha alpha))) (+ 1.0 (/ (log (- 1.0 u0)) (* alpha (- alpha))))) alpha)) (+ (* alpha alpha) (* alpha (* alpha -2.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.035741003659682,
    "avg_bits_err_output": 13.724732058087367,
    "avg_bits_err_improve": 0.31100894557231484,
    "time": 40186.0185546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.619550375658925,
    "avg_bits_err_output": 12.619550375658925,
    "avg_bits_err_improve": 0,
    "time": 16391.723876953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output_parens": 7,
    "avg_bits_err_input": 16.926184191673947,
    "avg_bits_err_output": 16.926184191673947,
    "avg_bits_err_improve": 0,
    "time": 32082.769775390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21206372187554084,
    "avg_bits_err_output": 0.2102406015629507,
    "avg_bits_err_improve": 0.0018231203125901319,
    "time": 34989.389404296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.320328265980981,
    "avg_bits_err_output": 13.320328265980981,
    "avg_bits_err_improve": 0,
    "time": 48191.932861328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (* f (/ PI 4.0)) (* f (/ 1.0 f)))) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 61.322369661325304,
    "avg_bits_err_output": 2.090768200713431,
    "avg_bits_err_improve": 59.23160146061187,
    "time": 82251.48657226562,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -7.8e-160) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 2e-112) (/ (* t (* t (* (sqrt 2.0) (/ 1.0 t)))) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (* t t) (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 61,
    "avg_bits_err_input": 42.89399472837731,
    "avg_bits_err_output": 35.78981681579741,
    "avg_bits_err_improve": 7.1041779125799,
    "time": 49486.742919921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9176017611745624,
    "avg_bits_err_output": 3.9176017611745624,
    "avg_bits_err_improve": 0,
    "time": 46693.627197265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8943742678845564,
    "avg_bits_err_output": 0.8943742678845564,
    "avg_bits_err_improve": 0,
    "time": 12016.98779296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -5e-5) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U 2e-86) (sqrt (* (+ n n) (- (* n (* (pow (/ l Om) 2.0) (* U (- U* U)))) (* U (- (* 2.0 (/ (* l l) Om)) t))))) (if (<= U 2.05e+161) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (- U U*) (pow (/ l Om) 2.0)))) (* 2.0 n)))))))",
    "output_parens": 63,
    "avg_bits_err_input": 34.56024740422174,
    "avg_bits_err_output": 33.06012014986218,
    "avg_bits_err_improve": 1.5001272543595618,
    "time": 30070.552734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -9e-103) (/ 2.0 (* (pow (/ k t) 2.0) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)))) (if (<= t 3.8e-81) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (tan k) (- (sin k)))))) (/ 2.0 (* (/ (pow (/ k t) 2.0) (tan k)) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (tan k) (tan k)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 47.23044222472221,
    "avg_bits_err_output": 36.96973443249807,
    "avg_bits_err_improve": 10.260707792224139,
    "time": 55243.345947265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.163229373401556,
    "avg_bits_err_output": 32.14022164923425,
    "avg_bits_err_improve": 0.02300772416730723,
    "time": 46873.3125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (expm1 (log1p (/ (cos th) (sqrt 2.0)))) (+ (* a1 a1) (* a2 a2)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5397894765845872,
    "avg_bits_err_output": 0.5660024629162506,
    "avg_bits_err_improve": -0.026212986331663357,
    "time": 43517.85986328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* 2.0 (* PI (* (/ 1.0 PI) (* PI n)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4818863233716547,
    "avg_bits_err_output": 0.48386625202666794,
    "avg_bits_err_improve": -0.00197992865501323,
    "time": 42183.354248046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (cos (/ K 2.0)) (fma (exp l) (- J) (* J (- (* (exp l) 2.0) (exp (- l)))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.829651954521946,
    "avg_bits_err_output": 17.84592984187851,
    "avg_bits_err_improve": -0.016277887356565657,
    "time": 35277.28369140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.418386189492933,
    "avg_bits_err_output": 15.418386189492933,
    "avg_bits_err_improve": 0,
    "time": 15706.7109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.46453308281331,
    "avg_bits_err_output": 17.46453308281331,
    "avg_bits_err_improve": 0,
    "time": 36919.54150390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.68570072456706,
    "avg_bits_err_output": 13.68570072456706,
    "avg_bits_err_improve": 0,
    "time": 7347.01708984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.321031222129317,
    "avg_bits_err_output": 19.321031222129317,
    "avg_bits_err_improve": 0,
    "time": 25707.127197265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* h (* D w)))) (sqrt (- (* (/ (* d (* c0 d)) (* D (* h (* D w)))) (/ (* d (* c0 d)) (* D (* h (* D w))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.72345062510315,
    "avg_bits_err_output": 56.18943954362408,
    "avg_bits_err_improve": 3.534011081479065,
    "time": 36612.245849609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* (* (pow (/ (* M D) (+ d d)) 2.0) (pow (/ d l) 0.5)) (* (pow (/ d h) 0.5) (* 0.5 (/ h l)))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.54313077399435,
    "avg_bits_err_output": 26.016598924538126,
    "avg_bits_err_improve": 0.526531849456223,
    "time": 67297.69213867188,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* (/ 1.0 (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)) (* (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5) (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))))",
    "output_parens": 14,
    "avg_bits_err_input": 16.014168059511185,
    "avg_bits_err_output": 16.02006673454318,
    "avg_bits_err_improve": -0.005898675031996703,
    "time": 143929.91455078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* 3.0 (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9868656015629508,
    "avg_bits_err_output": 0.014856203125901444,
    "avg_bits_err_improve": 0.9720093984370494,
    "time": 13029.816650390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42591781149169733,
    "avg_bits_err_output": 0.3651714087676425,
    "avg_bits_err_improve": 0.06074640272405485,
    "time": 36339.251708984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012707722262221501,
    "avg_bits_err_output": 0.012707722262221501,
    "avg_bits_err_improve": 0,
    "time": 15645.891845703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5507649356150287,
    "avg_bits_err_output": 0.5507649356150287,
    "avg_bits_err_improve": 0,
    "time": 15360.232421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.14736174471255,
    "avg_bits_err_output": 2.14736174471255,
    "avg_bits_err_improve": 0,
    "time": 6271.240234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (expm1 (log1p (exp (/ (+ Vef (- (+ Ev EAccept) mu)) KbT)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.022732716761480035,
    "avg_bits_err_output": 0.023732716761480036,
    "avg_bits_err_improve": -0.0010000000000000009,
    "time": 8525.69677734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18781373264222415,
    "avg_bits_err_output": 0.18754249201704384,
    "avg_bits_err_improve": 0.00027124062518030234,
    "time": 29401.73486328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (+ a (* a a))) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18910664275575975,
    "avg_bits_err_output": 0.18967452977192065,
    "avg_bits_err_improve": -0.0005678870161608951,
    "time": 23918.81201171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18459005351546667,
    "avg_bits_err_output": 0.18459005351546667,
    "avg_bits_err_improve": 0,
    "time": 8040.210205078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.296697980081309,
    "avg_bits_err_output": 13.296697980081309,
    "avg_bits_err_improve": 0,
    "time": 12068.574462890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.59271767812149,
    "avg_bits_err_output": 0.049125,
    "avg_bits_err_improve": 40.54359267812149,
    "time": 6361.99755859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (* (+ 1.0 x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x))))) 1.0) (* (sin x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x)))))) (+ x (+ (- 2.0 (tan x)) -2.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 31.110674265336044,
    "avg_bits_err_output": 25.562235657105493,
    "avg_bits_err_improve": 5.548438608230551,
    "time": 30257.8056640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c))))) b_2) a)",
    "output_parens": 18,
    "avg_bits_err_input": 33.820198183972245,
    "avg_bits_err_output": 33.828323183972245,
    "avg_bits_err_improve": -0.008124999999999716,
    "time": 26001.533203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c)))))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 34.05588322986994,
    "avg_bits_err_output": 34.063404470495115,
    "avg_bits_err_improve": -0.007521240625173675,
    "time": 24558.01513671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (expm1 (- (+ (log (- 3.0 (cos x))) 1.0) 1.0)) -1.0) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 31.329167050767772,
    "avg_bits_err_output": 31.3487859030031,
    "avg_bits_err_improve": -0.019618852235328887,
    "time": 31108.436767578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.00250505090117,
    "avg_bits_err_output": 32.00250505090117,
    "avg_bits_err_improve": 0,
    "time": 43118.28759765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (- (log1p N) (+ (log N) 2.0)) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.40489672648931,
    "avg_bits_err_output": 29.409743150449984,
    "avg_bits_err_improve": -0.004846423960675139,
    "time": 17332.7666015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (* (/ 1.0 x) (- (- (* (/ 1.0 x) (+ 1.0 (/ -1.0 (/ 1.0 x)))) -1.0) (/ 1.0 x))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x)))",
    "output_parens": 15,
    "avg_bits_err_input": 14.392850973268146,
    "avg_bits_err_output": 3.4347834374362765,
    "avg_bits_err_improve": 10.95806753583187,
    "time": 76628.83447265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (- (* (/ 1.0 (- (cos x))) (* (- (log1p (expm1 (- (cos x) (/ (cos x) (cos x)))))) (- (cos x)))) (* (- (cos x)) (/ 1.0 (- (cos x))))))",
    "output_parens": 25,
    "avg_bits_err_input": 39.940981555116096,
    "avg_bits_err_output": 39.99407416680526,
    "avg_bits_err_improve": -0.05309261168916635,
    "time": 45222.382080078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.536233998661956,
    "avg_bits_err_output": 29.23825010113481,
    "avg_bits_err_improve": 0.29798389752714627,
    "time": 25027.0419921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.938340772734886,
    "avg_bits_err_output": 29.938340772734886,
    "avg_bits_err_improve": 0,
    "time": 121557.89111328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.148113047899024,
    "avg_bits_err_output": 34.149267869523726,
    "avg_bits_err_improve": -0.0011548216247021514,
    "time": 29271.25146484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* (* a -4.0) (+ c c)))))) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 34.4079375625893,
    "avg_bits_err_output": 34.432377982926454,
    "avg_bits_err_improve": -0.02444042033715732,
    "time": 20414.343017578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.41774068935821,
    "avg_bits_err_output": 60.05531601229109,
    "avg_bits_err_improve": 1.362424677067125,
    "time": 11864.6220703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.00128345677194,
    "avg_bits_err_output": 0.6159013302608417,
    "avg_bits_err_improve": 62.3853821265111,
    "time": 26667.812744140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.5901143684253,
    "avg_bits_err_output": 58.5901143684253,
    "avg_bits_err_improve": 0,
    "time": 174263.60302734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log (+ (+ (exp (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x))))) 2.0) -2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 59.937304562023,
    "avg_bits_err_output": 59.937043016033165,
    "avg_bits_err_improve": 0.0002615459898365202,
    "time": 44453.22265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -8.5e-182) (/ (* eps (expm1 (+ (* eps b) (* eps a)))) (* (expm1 (* eps b)) (* (expm1 (* eps a)) (* (expm1 (* eps b)) (/ 1.0 (expm1 (* eps b))))))) (if (<= eps 9e-215) (/ (+ (fma (- (* eps eps)) (/ 1.0 eps) eps) (* eps (expm1 (* eps (+ b a))))) (- (* (expm1 (* eps b)) (exp (* eps a))) (- (exp (* eps b)) 1.0))) (/ (* eps (expm1 (* eps (+ a b)))) (fma (* (* (expm1 (* eps a)) (/ (/ (expm1 (* eps a)) (expm1 (* eps a))) (expm1 (* eps a)))) (expm1 (* eps b))) (expm1 (* eps a)) 0.0))))",
    "output_parens": 63,
    "avg_bits_err_input": 60.549631115990856,
    "avg_bits_err_output": 41.39247141270455,
    "avg_bits_err_improve": 19.157159703286304,
    "time": 40938.79150390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.02666931851472,
    "avg_bits_err_output": 0.4600943609377705,
    "avg_bits_err_improve": 40.56657495757695,
    "time": 11576.198486328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.78338549412474,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.78263549412474,
    "time": 4136.24658203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.372772749799932,
    "avg_bits_err_output": 0.017067347324700076,
    "avg_bits_err_improve": 29.35570540247523,
    "time": 10579.090087890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.072393212563146,
    "avg_bits_err_output": 29.159963823743894,
    "avg_bits_err_improve": 0.9124293888192518,
    "time": 31570.217041015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.623785173793717,
    "avg_bits_err_output": 9.623785173793717,
    "avg_bits_err_improve": 0,
    "time": 66977.89624023438,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.96683802788382,
    "avg_bits_err_output": 36.96683802788382,
    "avg_bits_err_improve": 0,
    "time": 49950.7421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log (exp (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.598634197073682,
    "avg_bits_err_output": 28.920168442448457,
    "avg_bits_err_improve": 0.6784657546252255,
    "time": 23384.775390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (log1p (expm1 (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.26211806434747,
    "avg_bits_err_output": 37.27334184223484,
    "avg_bits_err_improve": -0.011223777887373387,
    "time": 38117.6240234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (+ (+ (/ 1.0 (sqrt x)) -2.0) 2.0) (log (exp (/ 1.0 (sqrt (+ 1.0 x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 20.01758811801997,
    "avg_bits_err_output": 20.15581753650057,
    "avg_bits_err_improve": -0.1382294184806021,
    "time": 43678.3037109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.61891513363768,
    "avg_bits_err_output": 15.61891513363768,
    "avg_bits_err_improve": 0,
    "time": 53946.554443359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.872719925704544,
    "avg_bits_err_output": 1.2385504134265952,
    "avg_bits_err_improve": 28.63416951227795,
    "time": 30120.258544921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.08473027599603312,
    "avg_bits_err_output": 0.08292072124054027,
    "avg_bits_err_improve": 0.0018095547554928537,
    "time": 27174.916259765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.945028183788345,
    "avg_bits_err_output": 0.30325977500432677,
    "avg_bits_err_improve": 15.641768408784019,
    "time": 28523.9423828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ (/ angle 180.0) PI) PI) (* (/ PI (* PI PI)) (expm1 (log1p (* (* PI PI) (* PI PI)))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.515547362137298,
    "avg_bits_err_output": 20.530113245104225,
    "avg_bits_err_improve": -0.01456588296692729,
    "time": 56422.1767578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 32.063659563320776,
    "avg_bits_err_output": 32.06545144682524,
    "avg_bits_err_improve": -0.0017918835044667958,
    "time": 53579.05712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* PI (* (/ angle 180.0) PI))))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.54605131535058,
    "avg_bits_err_output": 20.54669241546152,
    "avg_bits_err_improve": -0.000641100110939874,
    "time": 98187.4794921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1838492043822976,
    "avg_bits_err_output": 0.1838492043822976,
    "avg_bits_err_improve": 0,
    "time": 32702.27490234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3173243178783786,
    "avg_bits_err_output": 0.3068733597106021,
    "avg_bits_err_improve": 0.010450958167776525,
    "time": 23473.25146484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13806372187554086,
    "avg_bits_err_output": 0.13806372187554086,
    "avg_bits_err_improve": 0,
    "time": 27542.9462890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.69982691895783,
    "avg_bits_err_output": 16.697546309644128,
    "avg_bits_err_improve": 0.0022806093137006656,
    "time": 64791.986083984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 3.3) (/ (+ (fma (- (sqrt (fma b b (* a (* c -4.0))))) (sqrt (fma b b (* a (* c -4.0)))) (* (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0)))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (+ a a)) (/ (- (- (+ (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (sqrt (fma c (* a -4.0) (* b b)))) b) (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))) (+ a a)))",
    "output_parens": 48,
    "avg_bits_err_input": 52.48820756036882,
    "avg_bits_err_output": 49.483760039238376,
    "avg_bits_err_improve": 3.0044475211304444,
    "time": 29541.855712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* a (* c -8.0)))))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 28.15600209448868,
    "avg_bits_err_output": 28.164752992238757,
    "avg_bits_err_improve": -0.008750897750076092,
    "time": 23174.71484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-21) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (- (+ (exp (log (+ (sqrt (fma c (* a -4.0) (* b b))) 3.0))) -2.0) 1.0) b) (+ a a)))",
    "output_parens": 30,
    "avg_bits_err_input": 43.623192487426074,
    "avg_bits_err_output": 42.677315336364835,
    "avg_bits_err_improve": 0.9458771510612394,
    "time": 24189.702880859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.15091079335884,
    "avg_bits_err_output": 34.149267869523726,
    "avg_bits_err_improve": 0.0016429238351136632,
    "time": 21467.07958984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (* (cos (- lambda1 lambda2)) (cos phi2)) (* (* (cos (- lambda1 lambda2)) (cos phi2)) (/ 1.0 (* (cos (- lambda1 lambda2)) (cos phi2)))) (cos phi1))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.8504595051628373,
    "avg_bits_err_output": 0.8629366944905491,
    "avg_bits_err_improve": -0.012477189327711802,
    "time": 29138.369384765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.14982067071498,
    "avg_bits_err_output": 29.14982067071498,
    "avg_bits_err_improve": 0,
    "time": 3732.3603515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (+ (expm1 (- x)) 2.0) (expm1 x)))",
    "output_parens": 10,
    "avg_bits_err_input": 58.448047843824696,
    "avg_bits_err_output": 1.3059411656266229,
    "avg_bits_err_improve": 57.142106678198076,
    "time": 10615.354736328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18063737195172,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 58.17363737195172,
    "time": 10100.130859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009521240625180288,
    "avg_bits_err_output": 0.009521240625180288,
    "avg_bits_err_improve": 0,
    "time": 2558.77099609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.13066524101186,
    "avg_bits_err_output": 32.13066524101186,
    "avg_bits_err_improve": 0,
    "time": 4627.26318359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026698120312590144,
    "avg_bits_err_output": 0.026698120312590144,
    "avg_bits_err_improve": 0,
    "time": 3197.873291015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.11932312031259014,
    "avg_bits_err_output": 0.11932312031259014,
    "avg_bits_err_improve": 0,
    "time": 36428.414794921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1252712406251803,
    "avg_bits_err_output": 0.1252712406251803,
    "avg_bits_err_improve": 0,
    "time": 22082.20458984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.89351583101381,
    "avg_bits_err_output": 3.801823956046491,
    "avg_bits_err_improve": 35.09169187496732,
    "time": 41137.077880859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.201469142944786,
    "avg_bits_err_output": 14.201469142944786,
    "avg_bits_err_improve": 0,
    "time": 5994.124755859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15155727584531054,
    "avg_bits_err_output": 0.14634838704981984,
    "avg_bits_err_improve": 0.005208888795490696,
    "time": 58817.190185546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 2.5e+15) (/ (- (* (sqrt (fma b b (* a (* c -3.0)))) (* (sqrt (fma b b (* a (* c -3.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) b) (* 3.0 a)) (/ (fma (+ (sqrt (fma b b (* a (* -3.0 c)))) (- 1.0 b)) 1.0 -1.0) (* 3.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.52465316488392,
    "avg_bits_err_output": 50.77610256358725,
    "avg_bits_err_improve": 1.748550601296671,
    "time": 31472.705078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.28270455726747,
    "avg_bits_err_output": 28.2246283231184,
    "avg_bits_err_improve": 0.058076234149069705,
    "time": 21403.525146484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-20) (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a)) (/ (- (* (sqrt (fma c (* a -3.0) (* b b))) (* (sqrt (fma c (* a -3.0) (* b b))) (/ 1.0 (sqrt (log1p (expm1 (fma a (* c -3.0) (* b b)))))))) b) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.671751270778614,
    "avg_bits_err_output": 42.06396099985378,
    "avg_bits_err_improve": 1.6077902709248377,
    "time": 31041.20654296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a (* c (/ -3.0 c)))) (* b b))) b) (* 3.0 a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.18203478559806,
    "avg_bits_err_output": 34.2040466277862,
    "avg_bits_err_improve": -0.022011842188135233,
    "time": 26547.55712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (log1p (expm1 (* (cos phi1) (sin phi2)))) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.058333628631958,
    "avg_bits_err_output": 13.065829965662974,
    "avg_bits_err_improve": -0.007496337031016154,
    "time": 67462.9111328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 28.988357069377088,
    "avg_bits_err_output": 28.997629735087777,
    "avg_bits_err_improve": -0.00927266571068941,
    "time": 23777.604736328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (log1p (expm1 (/ 1.0 (+ -1.0 x)))) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.021519226984736083,
    "avg_bits_err_improve": -0.009769226984736083,
    "time": 5593.03662109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(fma (/ 1.0 (+ x -1.0)) (/ 1.0 (+ x -1.0)) (- (+ (* (/ 1.0 (+ x -1.0)) (/ 1.0 (+ x -1.0))) (fma (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x)) (fma (/ 1.0 (+ -1.0 x)) (- 1.0 (/ 1.0 (+ -1.0 x))) (- (/ 1.0 (+ x 1.0))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.406561586031108,
    "avg_bits_err_output": 12.519730439145238,
    "avg_bits_err_improve": 1.8868311468858696,
    "time": 36261.412109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.35448496416277,
    "avg_bits_err_output": 52.05679473491485,
    "avg_bits_err_improve": 0.29769022924791955,
    "time": 34534.6875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(- (- (* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI)) 1.0) -1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 29.9966691977714,
    "avg_bits_err_output": 30.000962923767272,
    "avg_bits_err_improve": -0.0042937259958719665,
    "time": 38320.412841796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (fma (- (pow B 2.0) (* A (* C 4.0))) (+ F F) (fma (- (* A (* C 4.0))) (+ F F) (* A (* (+ F F) (* C 4.0)))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 30,
    "avg_bits_err_input": 52.60273035188702,
    "avg_bits_err_output": 52.5276560302201,
    "avg_bits_err_improve": 0.07507432166691785,
    "time": 33524.240966796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.795443944367163,
    "avg_bits_err_output": 15.795443944367163,
    "avg_bits_err_improve": 0,
    "time": 1833.974609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.48752067575829,
    "avg_bits_err_output": 36.48752067575829,
    "avg_bits_err_improve": 0,
    "time": 19556.942138671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9910877828190814,
    "avg_bits_err_output": 0.9910877828190814,
    "avg_bits_err_improve": 0,
    "time": 4404.26513671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7174693609377705,
    "avg_bits_err_output": 0.7174693609377705,
    "avg_bits_err_improve": 0,
    "time": 2823.667236328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.130581512558171,
    "avg_bits_err_output": 11.130581512558171,
    "avg_bits_err_improve": 0,
    "time": 20514.137451171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.504616368894811,
    "avg_bits_err_output": 0.43307312031259015,
    "avg_bits_err_improve": 0.07154324858222083,
    "time": 10849.38232421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.246138133384655,
    "avg_bits_err_output": 15.75782851477759,
    "avg_bits_err_improve": 37.48830961860706,
    "time": 51580.234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.657056111221792,
    "avg_bits_err_output": 5.657056111221792,
    "avg_bits_err_improve": 0,
    "time": 44757.90185546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0.0013750000000000012,
    "time": 37302.90771484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1162.3408203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 12.816982311973051,
    "avg_bits_err_output": 8.032979135942085,
    "avg_bits_err_improve": 4.784003176030966,
    "time": 37135.732177734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) (* x1 (+ (* x1 4.0) (+ -6.0 (* (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) 2.0)))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.516347479053766,
    "avg_bits_err_output": 0.27631422586448284,
    "avg_bits_err_improve": 0.24003325318928315,
    "time": 71467.1044921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.34940208147552,
    "avg_bits_err_output": 18.34940208147552,
    "avg_bits_err_improve": 0,
    "time": 14733.122314453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(+ (fma (* x (* x -0.12900613773279798)) x (* x 0.954929658551372)) (* x (fma (* x -0.12900613773279798) x (* x (* x 0.12900613773279798)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.25451515121455115,
    "avg_bits_err_output": 0.18932028030302764,
    "avg_bits_err_improve": 0.06519487091152351,
    "time": 25732.4375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002875,
    "avg_bits_err_output": 0.002875,
    "avg_bits_err_improve": 0,
    "time": 3298.86083984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.666970671311079,
    "avg_bits_err_output": 9.97410253880116,
    "avg_bits_err_improve": 4.692868132509918,
    "time": 51574.56787109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 30.225742800812153,
    "avg_bits_err_output": 0.8751658011908874,
    "avg_bits_err_improve": 29.350576999621264,
    "time": 16047.832763671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01925,
    "avg_bits_err_output": 0.01925,
    "avg_bits_err_improve": 0,
    "time": 9067.34326171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025375,
    "avg_bits_err_output": 0.025375,
    "avg_bits_err_improve": 0,
    "time": 16676.363037109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.057125,
    "avg_bits_err_output": 0.057125,
    "avg_bits_err_improve": 0,
    "time": 11955.535400390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3013.263427734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2393.14306640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3150.112548828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.816005798380656,
    "avg_bits_err_output": 0.251875,
    "avg_bits_err_improve": 7.564130798380656,
    "time": 75946.40405273438,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(+ (pow (+ x eps) 5.0) (expm1 (log1p (- (pow x 5.0)))))",
    "output_parens": 7,
    "avg_bits_err_input": 7.538505130238594,
    "avg_bits_err_output": 7.621111828990496,
    "avg_bits_err_improve": -0.08260669875190185,
    "time": 32073.216064453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (expm1 (log1p (pow (+ x eps) 2.0))) (pow x 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 15.801908414872768,
    "avg_bits_err_output": 15.823831792776112,
    "avg_bits_err_improve": -0.021923377903343422,
    "time": 31543.41943359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (log (+ 1.0 (expm1 (expm1 (cos x)))))) (* (exp (* 10.0 (* x x))) (* (+ (expm1 (* 10.0 (* x x))) 1.0) (/ 1.0 (exp (* 10.0 (* x x)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 3.5229290729726883,
    "avg_bits_err_output": 3.524286132282139,
    "avg_bits_err_improve": -0.0013570593094507366,
    "time": 29421.41455078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.824278310572428,
    "avg_bits_err_output": 14.824278310572428,
    "avg_bits_err_improve": 0,
    "time": 137746.01147460938,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 46.07436253481996,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 46.07436253481996,
    "time": 4439.46728515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.92231583010681,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 38.92169083010681,
    "time": 4435.081787109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2985,
    "avg_bits_err_improve": 63.7015,
    "time": 5697.568603515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 4e-32) (* 8e-32 (* t (/ 1.0 (* t 8e-32))))))",
    "output_parens": 7,
    "avg_bits_err_input": 61.84325161638259,
    "avg_bits_err_output": 0.3893137218755409,
    "avg_bits_err_improve": 61.45393789450705,
    "time": 24264.67724609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* (* a -4.0) (+ c c)))))) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 34.4079375625893,
    "avg_bits_err_output": 34.432377982926454,
    "avg_bits_err_improve": -0.02444042033715732,
    "time": 24337.17919921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.15091079335884,
    "avg_bits_err_output": 34.149267869523726,
    "avg_bits_err_improve": 0.0016429238351136632,
    "time": 22064.1201171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3400.61376953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.913044624331306,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 39.902919624331304,
    "time": 6731.894287109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.96967203494729,
    "avg_bits_err_output": 19.96967203494729,
    "avg_bits_err_improve": 0,
    "time": 4077.478271484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6203335493770865,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6203335493770865,
    "time": 4515.25732421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036125,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03525,
    "time": 4700.216796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02189624062518029,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0.01077124062518029,
    "time": 4170.306884765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.014,
    "time": 4725.12548828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1401.12841796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40043665469173684,
    "avg_bits_err_output": 0.255625,
    "avg_bits_err_improve": 0.14481165469173685,
    "time": 6570.547607421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.191106099795643,
    "avg_bits_err_output": 30.191106099795643,
    "avg_bits_err_improve": 0,
    "time": 133128.47265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.514198845606824,
    "avg_bits_err_output": 24.514198845606824,
    "avg_bits_err_improve": 0,
    "time": 19410.537109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.620194048603626,
    "avg_bits_err_output": 30.620140722590055,
    "avg_bits_err_improve": 5.332601357110889e-05,
    "time": 73134.89135742188,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.008985521314888553,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.007860521314888553,
    "time": 3311.7666015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.51389797100418,
    "avg_bits_err_output": 47.51389797100418,
    "avg_bits_err_improve": 0,
    "time": 174554.62182617188,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.23347368555568,
    "avg_bits_err_output": 26.233653405252657,
    "avg_bits_err_improve": -0.0001797196969768322,
    "time": 17621.892333984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a d) (+ (* b c) (* a (* d -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 25.817283732166857,
    "avg_bits_err_output": 25.8271114024811,
    "avg_bits_err_improve": -0.009827670314244585,
    "time": 19197.914306640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035,
    "avg_bits_err_output": 0.021386842188131014,
    "avg_bits_err_improve": 0.01361315781186899,
    "time": 16411.5361328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (fma ux (* ux (/ (- (fma ux maxCos 1.0) ux) ux)) (- ux (* ux maxCos))) (* ux (+ maxCos (* ux (* maxCos (+ maxCos -1.0))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.477731247355846,
    "avg_bits_err_output": 0.5353546076237733,
    "avg_bits_err_improve": 12.942376639732073,
    "time": 34005.497314453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (* ux (- (fma ux maxCos 1.0) (+ maxCos (* (fma ux maxCos 1.0) (+ maxCos -1.0))))) (* ux ux))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.512545684136345,
    "avg_bits_err_output": 0.3203895516910632,
    "avg_bits_err_improve": 13.192156132445282,
    "time": 35102.35595703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.335919802336988,
    "avg_bits_err_output": 0.3236609131210348,
    "avg_bits_err_improve": 0.012258889215953195,
    "time": 56767.51123046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.2037270697866437,
    "avg_bits_err_output": 0.20385206978664372,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 19022.31494140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5349836831455806,
    "avg_bits_err_output": 0.494762399516537,
    "avg_bits_err_improve": 0.04022128362904365,
    "time": 83375.09887695312,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3227656436061535,
    "avg_bits_err_output": 0.3227656436061535,
    "avg_bits_err_improve": 0,
    "time": 52731.676513671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.35156261527631183,
    "avg_bits_err_output": 0.3520385346415691,
    "avg_bits_err_improve": -0.0004759193652572602,
    "time": 35203.64404296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (- (expm1 (/ (- x) s)) -1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06832913801329205,
    "avg_bits_err_output": 0.06898775731046426,
    "avg_bits_err_improve": -0.0006586192971722166,
    "time": 10996.519287109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16523170877488302,
    "avg_bits_err_output": 0.14231777288775121,
    "avg_bits_err_improve": 0.02291393588713181,
    "time": 34181.566650390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* tau x))) (* PI (* tau x))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.682310690196305,
    "avg_bits_err_output": 0.6833658585772157,
    "avg_bits_err_improve": -0.001055168380910687,
    "time": 26851.862060546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15861638220756208,
    "avg_bits_err_output": 0.15347524502718632,
    "avg_bits_err_improve": 0.00514113718037576,
    "time": 45164.085205078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5935418963603016,
    "avg_bits_err_output": 2.5935418963603016,
    "avg_bits_err_improve": 0,
    "time": 74232.6025390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* v (- (* v (/ (fma (sinh (/ 1.0 v)) 2.0 1.0) v)) 1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4720714258862903,
    "avg_bits_err_output": 0.4892317597047851,
    "avg_bits_err_improve": -0.0171603338184948,
    "time": 44535.277099609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (- (/ 1.0 v) (log (/ 1.0 (+ v v)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10872540520199615,
    "avg_bits_err_output": 0.10882217817670436,
    "avg_bits_err_improve": -9.677297470821189e-05,
    "time": 9878.3623046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (+ (* PI (* (log (* alpha alpha)) (* (fma alpha alpha -1.0) (* cosTheta cosTheta)))) (* PI (log (* alpha alpha)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4721451103973117,
    "avg_bits_err_output": 0.4970869232417641,
    "avg_bits_err_improve": -0.024941812844452405,
    "time": 26885.096923828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))",
    "output_parens": 7,
    "avg_bits_err_input": 1.316074137437004,
    "avg_bits_err_output": 1.3069989009885385,
    "avg_bits_err_improve": 0.009075236448465418,
    "time": 41137.7822265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.215416280237807,
    "avg_bits_err_output": 11.86614668183424,
    "avg_bits_err_improve": 0.3492695984035681,
    "time": 38808.798583984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* (* s 6.0) (* PI (* (* s 6.0) (/ 1.0 (* s 6.0))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.14434114182003469,
    "avg_bits_err_output": 0.14518818984669662,
    "avg_bits_err_improve": -0.0008470480266619396,
    "time": 44526.433349609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8396854338492937,
    "avg_bits_err_output": 0.8277430110765538,
    "avg_bits_err_improve": 0.011942422772739936,
    "time": 46678.18310546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (- (+ 1.0 (/ 1.0 (sqrt PI))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.6941100610671365,
    "avg_bits_err_output": 0.7027592332556881,
    "avg_bits_err_improve": -0.008649172188551657,
    "time": 48195.51904296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* PI (+ u2 u2))) (fma (sin (* PI (+ u2 u2))) (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (sin (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 13.628203123889442,
    "avg_bits_err_output": 13.431449595034032,
    "avg_bits_err_improve": 0.1967535288554103,
    "time": 61258.899658203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (- (+ (* PI (+ u2 u2)) 1.0) 1.0)) (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 13.681134453204013,
    "avg_bits_err_output": 13.60785976798617,
    "avg_bits_err_improve": 0.07327468521784297,
    "time": 49214.31494140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (+ 1.0 (expm1 (+ 1.0 (log (- 1.0 u0)))))) (* alpha (- alpha)) (* alpha alpha))",
    "output_parens": 10,
    "avg_bits_err_input": 14.204926261487806,
    "avg_bits_err_output": 13.765123362641974,
    "avg_bits_err_improve": 0.4398028988458318,
    "time": 39254.031005859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.649040992138502,
    "avg_bits_err_output": 12.649040992138502,
    "avg_bits_err_improve": 0,
    "time": 32243.0966796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ l PI) (* PI PI)))))",
    "output_parens": 9,
    "avg_bits_err_input": 17.075932214308526,
    "avg_bits_err_output": 17.092924721346094,
    "avg_bits_err_improve": -0.016992507037567606,
    "time": 24646.283203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21093872187554086,
    "avg_bits_err_output": 0.20784436093777042,
    "avg_bits_err_improve": 0.003094360937770435,
    "time": 38687.581298828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.431978838362001,
    "avg_bits_err_output": 14.431055973521403,
    "avg_bits_err_improve": 0.0009228648405983364,
    "time": 45280.226806640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(if (<= (* (/ PI 4.0) f) 2e-17) (- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* f (* (- (- f)) (log1p (expm1 (* f (/ (/ (/ PI 4.0) f) f))))))))))))) (- (* (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (log (exp (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))))))) (- (* (/ (/ 1.0 (/ PI 4.0)) (/ 1.0 (/ PI 4.0))) (exp (log1p (/ 1.0 (/ PI 4.0))))) (/ (/ 1.0 (/ PI 4.0)) (/ 1.0 (/ PI 4.0)))))))",
    "output_parens": 72,
    "avg_bits_err_input": 61.47967505940285,
    "avg_bits_err_output": 53.48982298227034,
    "avg_bits_err_improve": 7.989852077132511,
    "time": 67086.75439453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.6e-129) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 4.6e-139) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (- (exp (log1p (/ (* t (sqrt 2.0)) (sqrt (fma t (* (/ (+ 1.0 x) (+ -1.0 x)) (+ t t)) (* l (fma (/ (+ 1.0 x) (+ -1.0 x)) l (- l)))))))) 1.0)))",
    "output_parens": 55,
    "avg_bits_err_input": 42.7656167302722,
    "avg_bits_err_output": 35.23539896870014,
    "avg_bits_err_improve": 7.530217761572061,
    "time": 38934.0087890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.0281374659385,
    "avg_bits_err_output": 4.0281374659385,
    "avg_bits_err_improve": 0,
    "time": 52744.336181640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9678373356809318,
    "avg_bits_err_output": 0.9698373356809318,
    "avg_bits_err_improve": -0.0020000000000000018,
    "time": 14248.620849609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (- (pow (/ t l) 2.0) -1.0) 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.220808766035601,
    "avg_bits_err_output": 10.233219418688812,
    "avg_bits_err_improve": -0.012410652653210619,
    "time": 137471.4453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-303) (sqrt (* 2.0 (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+307) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* 2.0 (* n (- (* (- U* U) (fma n (* n (/ (* U (pow (/ l Om) 2.0)) n)) 0.0)) (* U (- (* 2.0 (/ (* l l) Om)) t))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.04677738193184,
    "avg_bits_err_output": 30.416640106186403,
    "avg_bits_err_improve": 3.6301372757454367,
    "time": 29495.322021484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (pow (/ k t) 2.0) 0.0))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (tan k) (* (sin k) (exp (log1p (/ (pow t 3.0) (* l l))))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 47.5559019041451,
    "avg_bits_err_output": 38.14959825559985,
    "avg_bits_err_improve": 9.406303648545254,
    "time": 52910.56982421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k)))",
    "output_parens": 12,
    "avg_bits_err_input": 31.979910067780295,
    "avg_bits_err_output": 31.940361751033706,
    "avg_bits_err_improve": 0.03954831674658976,
    "time": 54608.484619140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* a1 (* (* a1 (/ (/ (cos th) (sqrt 2.0)) a1)) a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5648131609608497,
    "avg_bits_err_output": 0.5404550941637262,
    "avg_bits_err_improve": 0.02435806679712349,
    "time": 45287.337646484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5456900857066218,
    "avg_bits_err_output": 0.5456900857066218,
    "avg_bits_err_improve": 0,
    "time": 52116.542236328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (- (* (exp l) (cos (/ K 2.0))) (* (cos (/ K 2.0)) (exp (- l))))) U)",
    "output_parens": 12,
    "avg_bits_err_input": 17.53336760725125,
    "avg_bits_err_output": 17.54285461116602,
    "avg_bits_err_improve": -0.009487003914770753,
    "time": 41100.6005859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (- (* K (+ m (- n -1.0))) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.488595464350512,
    "avg_bits_err_output": 15.54537506042657,
    "avg_bits_err_improve": -0.056779596076058425,
    "time": 11908.86181640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.323688721875545,
    "avg_bits_err_output": 18.323688721875545,
    "avg_bits_err_improve": 0,
    "time": 43799.181396484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.83694474873081,
    "avg_bits_err_output": 13.83694474873081,
    "avg_bits_err_improve": 0,
    "time": 25280.5537109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.374822214766585,
    "avg_bits_err_output": 19.374822214766585,
    "avg_bits_err_improve": 0,
    "time": 25028.149658203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (+ (/ (* d (* c0 d)) (* D (* D (* w h)))) (sqrt (fma (/ (* d (* c0 d)) (* D (* D (* w h)))) (/ (* d (* c0 d)) (* D (* D (* w h)))) (* M (- M))))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.372895800855844,
    "avg_bits_err_output": 57.00077625096287,
    "avg_bits_err_improve": 2.3721195498929717,
    "time": 34028.4404296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (- (exp (log1p (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)))) 1.0) (* (pow (/ d l) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* 0.5 (/ h l)))))) (* (pow (/ d l) 0.5) (* (pow (/ d h) 0.5) (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l)))))))",
    "output_parens": 53,
    "avg_bits_err_input": 26.50709304258459,
    "avg_bits_err_output": 25.932889193699907,
    "avg_bits_err_improve": 0.5742038488846823,
    "time": 46754.977783203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.410765365702012,
    "avg_bits_err_output": 15.410765365702012,
    "avg_bits_err_improve": 0,
    "time": 11583.07763671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9845050362151283,
    "avg_bits_err_output": 0.013567210125112104,
    "avg_bits_err_improve": 0.9709378260900162,
    "time": 5571.280029296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* t (* PI (sqrt (- 2.0 (* 6.0 (* v v)))))) (- 1.0 (* v v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4633783556607222,
    "avg_bits_err_output": 0.40093865744684054,
    "avg_bits_err_improve": 0.06243969821388168,
    "time": 25913.537841796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011417481250360578,
    "avg_bits_err_output": 0.011417481250360578,
    "avg_bits_err_improve": 0,
    "time": 13248.033447265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- (fma 5.0 (* v v) 1.0) 1.0)) (- (* v v) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5266227886698662,
    "avg_bits_err_output": 0.5445263380619986,
    "avg_bits_err_improve": -0.017903549392132345,
    "time": 12819.067138671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (fma k (+ k 10.0) 1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 1.8686203510089219,
    "avg_bits_err_output": 1.851620351008922,
    "avg_bits_err_improve": 0.016999999999999904,
    "time": 11948.246337890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01684419868296054,
    "avg_bits_err_output": 0.01684419868296054,
    "avg_bits_err_improve": 0,
    "time": 13457.935302734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18172445195251588,
    "avg_bits_err_output": 0.18172445195251588,
    "avg_bits_err_improve": 0,
    "time": 41681.072265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (+ (* a (* a a)) (* a a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1894806141215219,
    "avg_bits_err_output": 0.19000398893587206,
    "avg_bits_err_improve": -0.0005233748143501638,
    "time": 25436.09326171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* b (* b (+ 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19098629414064683,
    "avg_bits_err_output": 0.19111129414064684,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 31585.0146484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (expm1 (log1p (/ x (sqrt (fma 4.0 (* p p) (* x x)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.1530980595127,
    "avg_bits_err_output": 13.153223059512701,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 19625.505126953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.69647215902946,
    "avg_bits_err_output": 0.031625,
    "avg_bits_err_improve": 40.66484715902946,
    "time": 6136.0087890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (* (+ 1.0 x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x))))) 1.0) (* (sin x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x)))))) (+ x (+ 1.0 (- -1.0 (tan x)))))",
    "output_parens": 25,
    "avg_bits_err_input": 31.956759432176327,
    "avg_bits_err_output": 26.237720408317394,
    "avg_bits_err_improve": 5.719039023858933,
    "time": 27290.11083984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (* a c) (+ (+ (* b_2 b_2) (* a (- c))) (* c (- a))))) b_2) a)",
    "output_parens": 12,
    "avg_bits_err_input": 34.406898499133696,
    "avg_bits_err_output": 34.4228984991337,
    "avg_bits_err_improve": -0.016000000000005343,
    "time": 21505.385009765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.130214017463175,
    "avg_bits_err_output": 34.130214017463175,
    "avg_bits_err_improve": 0,
    "time": 17047.253173828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(log1p (expm1 (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.26032868957306,
    "avg_bits_err_output": 31.260214567458704,
    "avg_bits_err_improve": 0.00011412211435768427,
    "time": 31214.282470703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(+ (+ (pow (+ 1.0 x) (/ 1.0 n)) (- -2.0 (pow x (/ 1.0 n)))) 2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 32.901508937959015,
    "avg_bits_err_output": 32.94148013023775,
    "avg_bits_err_improve": -0.03997119227873469,
    "time": 29783.197509765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ (+ (exp (- (log1p N) (log N))) 3.0) -3.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.93056365801526,
    "avg_bits_err_output": 29.94361151957921,
    "avg_bits_err_improve": -0.013047861563951102,
    "time": 27823.867431640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -1.28e+154) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 1.2e+149) (- (- (* (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (+ 1.0 (/ 1.0 (/ 1.0 (+ 1.0 x))))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 30,
    "avg_bits_err_input": 14.68472582155708,
    "avg_bits_err_output": 4.081437579595546,
    "avg_bits_err_improve": 10.603288241961534,
    "time": 97976.65698242188,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (+ -1.0 (- (+ (/ (cos x) (cos x)) (- 1.0 (cos x))) (/ (cos x) (cos x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 39.05257047549476,
    "avg_bits_err_output": 39.057304517684535,
    "avg_bits_err_improve": -0.004734042189774357,
    "time": 45259.026611328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 30.197480960898407,
    "avg_bits_err_output": 29.894238213959085,
    "avg_bits_err_improve": 0.30324274693932196,
    "time": 32377.8603515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.07695533708086,
    "avg_bits_err_output": 30.07695533708086,
    "avg_bits_err_improve": 0,
    "time": 118686.55126953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* (* a -4.0) (+ c c)))))) (* 2.0 a))",
    "output_parens": 12,
    "avg_bits_err_input": 34.3501025909059,
    "avg_bits_err_output": 34.403217315614725,
    "avg_bits_err_improve": -0.053114724708827055,
    "time": 25309.986572265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* (* a -4.0) (+ c c)))))) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 33.77893227627691,
    "avg_bits_err_output": 33.83443518688333,
    "avg_bits_err_improve": -0.055502910606421096,
    "time": 24079.53173828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.8) (/ (* (/ 1.0 (- (+ 1.0 (log (- 1.0 x))) 1.0)) (* (log (- 1.0 x)) (log (- 1.0 x)))) (- (- (log1p x) 1.0) -1.0)) (log1p (expm1 (/ (log (- 1.0 x)) (log1p x)))))",
    "output_parens": 28,
    "avg_bits_err_input": 61.27502969496562,
    "avg_bits_err_output": 58.96976652452582,
    "avg_bits_err_improve": 2.305263170439801,
    "time": 60992.215087890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00398418059162,
    "avg_bits_err_output": 0.06073506767617707,
    "avg_bits_err_improve": 62.943249112915446,
    "time": 28463.735107421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.60424749611224,
    "avg_bits_err_output": 58.60424749611224,
    "avg_bits_err_improve": 0,
    "time": 14101.4443359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (+ (/ 1.0 x) 2.0) (/ (+ (/ 1.0 x) 3.0) (+ (/ 1.0 x) 2.0)) (+ (- (+ 2.0 (/ 1.0 (tan x)))) (- (* (+ (/ 1.0 x) 2.0) (/ 1.0 (+ (/ 1.0 x) 2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.92112891366323,
    "avg_bits_err_output": 59.856948686512396,
    "avg_bits_err_improve": 0.06418022715083538,
    "time": 44020.56201171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.140743792295865,
    "avg_bits_err_output": 41.183291798852416,
    "avg_bits_err_improve": 18.95745199344345,
    "time": 28364.111083984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.01706065155699,
    "avg_bits_err_output": 0.3081462406251803,
    "avg_bits_err_improve": 40.70891441093181,
    "time": 4729.01953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.7997733144941,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.7991483144941,
    "time": 3063.113525390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.25061422360539,
    "avg_bits_err_output": 0.021366638851527356,
    "avg_bits_err_improve": 29.22924758475386,
    "time": 16263.662841796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.786134354770688,
    "avg_bits_err_output": 28.88854563661383,
    "avg_bits_err_improve": 0.8975887181568574,
    "time": 33181.314208984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(fma (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ 1.0 (+ -1.0 x))) (- (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 16,
    "avg_bits_err_input": 9.997585651399895,
    "avg_bits_err_output": 9.980432847094786,
    "avg_bits_err_improve": 0.017152804305109015,
    "time": 70916.01708984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (* (tan x) (* (tan x) (/ -1.0 (tan x)))))",
    "output_parens": 9,
    "avg_bits_err_input": 36.81786670156528,
    "avg_bits_err_output": 36.85846858154387,
    "avg_bits_err_improve": -0.04060187997858833,
    "time": 55089.399658203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (- (exp (- (+ -1.0 (sqrt (+ x 1.0))) (sqrt x))) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 30.252629808651058,
    "avg_bits_err_output": 29.54695551290095,
    "avg_bits_err_improve": 0.7056742957501072,
    "time": 23734.5703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (log1p (expm1 (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.32264449718903,
    "avg_bits_err_output": 36.3392994589094,
    "avg_bits_err_improve": -0.016654961720369954,
    "time": 39778.627197265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.81417387830634,
    "avg_bits_err_output": 19.81417387830634,
    "avg_bits_err_improve": 0,
    "time": 25526.21875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.39863673234765,
    "avg_bits_err_output": 15.39863673234765,
    "avg_bits_err_improve": 0,
    "time": 33503.5810546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(- (+ (log (+ (exp a) (exp b))) -1.0) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.97896328006593,
    "avg_bits_err_output": 29.996857199856997,
    "avg_bits_err_improve": -0.017893919791067248,
    "time": 47644.984619140625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (- m (* (* m (/ 1.0 m)) (* m m))) v) 1.0) (- 1.0 m))",
    "output_parens": 9,
    "avg_bits_err_input": 0.07897149133190084,
    "avg_bits_err_output": 0.10659351481512211,
    "avg_bits_err_improve": -0.027622023483221264,
    "time": 26084.23046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.903204116975754,
    "avg_bits_err_output": 0.3044578953169171,
    "avg_bits_err_improve": 15.598746221658837,
    "time": 17444.065673828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* (/ angle 180.0) PI) (* (* (/ angle 180.0) PI) (/ 1.0 (log1p (expm1 (* (/ angle 180.0) PI)))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.387206927066792,
    "avg_bits_err_output": 20.328372210806993,
    "avg_bits_err_improve": 0.05883471625979908,
    "time": 72061.93969726562,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (- (pow a 2.0) (pow b 2.0)) (+ (sin (* PI (/ angle 180.0))) (* (expm1 (log1p (sin (* PI (/ angle 180.0))))) (- -1.0 (cos (* PI (/ angle 180.0))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 30.9352262690336,
    "avg_bits_err_output": 30.901660530984177,
    "avg_bits_err_improve": 0.03356573804942187,
    "time": 78113.35278320312,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* PI (* PI (fma (exp (log1p (/ (/ (/ angle 180.0) (/ angle 180.0)) PI))) (* (/ angle 180.0) (/ PI PI)) (- (* (/ angle 180.0) (/ PI PI)))))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 25,
    "avg_bits_err_input": 20.48632514778673,
    "avg_bits_err_output": 20.64703695399605,
    "avg_bits_err_improve": -0.16071180620932068,
    "time": 89706.99267578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18276502308887604,
    "avg_bits_err_output": 0.18223379506936926,
    "avg_bits_err_improve": 0.0005312280195067798,
    "time": 27393.566162109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3224571174867323,
    "avg_bits_err_output": 0.3125559392174768,
    "avg_bits_err_improve": 0.009901178269255462,
    "time": 25301.783935546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13652124062518028,
    "avg_bits_err_output": 0.13652124062518028,
    "avg_bits_err_improve": 0,
    "time": 34061.27294921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.75292398859684,
    "avg_bits_err_output": 16.75184946268735,
    "avg_bits_err_improve": 0.0010745259094910864,
    "time": 65389.5810546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.8e+16) (/ (- (sqrt (expm1 (* (log1p (fma a (* c -4.0) (* b b))) (* (log1p (fma a (* c -4.0) (* b b))) (* (/ 1.0 (log1p (fma c (* a -4.0) (* b b)))) (* (/ 1.0 (log1p (fma c (* a -4.0) (* b b)))) (/ 1.0 (/ 1.0 (log1p (fma c (* a -4.0) (* b b))))))))))) b) (+ a a)) (/ (- (- (- (sqrt (fma b b (* a (* c -4.0)))) -1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 44,
    "avg_bits_err_input": 52.74444090573376,
    "avg_bits_err_output": 51.15995894582612,
    "avg_bits_err_improve": 1.5844819599076416,
    "time": 22488.701416015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* a (* c -4.0)) (* (* b b) (* (* b b) (/ 1.0 (* b b)))))) b) (+ a a))",
    "output_parens": 13,
    "avg_bits_err_input": 28.281940080108033,
    "avg_bits_err_output": 28.312362794870225,
    "avg_bits_err_improve": -0.03042271476219227,
    "time": 30445.625244140625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-21) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (sqrt (- (+ (exp (log1p (* b b))) (* a (* c -4.0))) 1.0)) b) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 44.09986219561546,
    "avg_bits_err_output": 43.15744430355407,
    "avg_bits_err_improve": 0.9424178920613855,
    "time": 25890.466796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.37159669082678,
    "avg_bits_err_output": 34.37159669082678,
    "avg_bits_err_improve": 0,
    "time": 23062.19189453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (- (exp (log1p (* (cos (- lambda1 lambda2)) (cos phi2)))) 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9558991854781022,
    "avg_bits_err_output": 0.9749102023464638,
    "avg_bits_err_improve": -0.019011016868361597,
    "time": 31724.32861328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (- (+ -2.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 30.090555670984433,
    "avg_bits_err_output": 30.096196348868833,
    "avg_bits_err_improve": -0.005640677884400702,
    "time": 12743.71337890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.27648372474449,
    "avg_bits_err_output": 1.158063721875541,
    "avg_bits_err_improve": 57.118420002868945,
    "time": 10752.56787109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.126209404233144,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 58.119584404233144,
    "time": 6199.746337890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.015559970711631062,
    "avg_bits_err_output": 0.015559970711631062,
    "avg_bits_err_improve": 0,
    "time": 1986.669677734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.17,
    "avg_bits_err_output": 32.17,
    "avg_bits_err_improve": 0,
    "time": 5329.15380859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.59154683982613,
    "avg_bits_err_output": 58.59154683982613,
    "avg_bits_err_improve": 0,
    "time": 50094.42822265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.027521240625180292,
    "avg_bits_err_output": 0.027521240625180292,
    "avg_bits_err_improve": 0,
    "time": 4629.644775390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (sin t) (fma (exp (log1p (* (cos (atan (/ (/ eh ew) (tan t)))) (/ ew ew)))) ew (- ew)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12882312031259016,
    "avg_bits_err_output": 0.1311887218755409,
    "avg_bits_err_improve": -0.0023656015629507365,
    "time": 40749.17041015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1260212406251803,
    "avg_bits_err_output": 0.1260212406251803,
    "avg_bits_err_improve": 0,
    "time": 12229.530029296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.80015680612026,
    "avg_bits_err_output": 3.7637794875901585,
    "avg_bits_err_improve": 35.03637731853011,
    "time": 50700.6279296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (fma a a (* b (- b))) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.633290516393384,
    "avg_bits_err_output": 14.634613636705973,
    "avg_bits_err_improve": -0.0013231203125894098,
    "time": 8445.72802734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (* (sin delta) (cos phi1)) (cos theta)))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1623259767667463,
    "avg_bits_err_output": 0.15785531282607174,
    "avg_bits_err_improve": 0.004470663940674552,
    "time": 56661.182373046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 2.2e+16) (/ (+ (- b) (sqrt (expm1 (log1p (fma b b (* a (* c -3.0))))))) (* 3.0 a)) (/ (- (- (- (+ (sqrt (fma b b (* a (* c -3.0)))) 2.0) 1.0) b) 1.0) (* 3.0 a)))",
    "output_parens": 22,
    "avg_bits_err_input": 52.72143720535621,
    "avg_bits_err_output": 51.21876006431964,
    "avg_bits_err_improve": 1.5026771410365711,
    "time": 22996.73388671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.434287850800708,
    "avg_bits_err_output": 28.368814742123806,
    "avg_bits_err_improve": 0.06547310867690115,
    "time": 26969.722900390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 44.163788074526806,
    "avg_bits_err_output": 43.382844448679684,
    "avg_bits_err_improve": 0.7809436258471223,
    "time": 22327.9638671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.420186962105916,
    "avg_bits_err_output": 34.420186962105916,
    "avg_bits_err_improve": 0,
    "time": 20679.9033203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.414988571793534,
    "avg_bits_err_output": 13.415363571793531,
    "avg_bits_err_improve": -0.0003749999999964615,
    "time": 49657.115966796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (expm1 (log1p (/ x (+ 1.0 x)))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.565583672812078,
    "avg_bits_err_output": 29.58109961105563,
    "avg_bits_err_improve": -0.015515938243552796,
    "time": 21984.240478515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (- (+ (/ x (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) 1.0) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.012125,
    "avg_bits_err_output": 0.011698120312590146,
    "avg_bits_err_improve": 0.00042687968740985453,
    "time": 6484.662353515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x 5e+161) (- (- (- (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (+ (/ 1.0 (/ 1.0 (+ 1.0 x))) 2.0))) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.508512973173719,
    "avg_bits_err_output": 2.571181234771114,
    "avg_bits_err_improve": 11.937331738402605,
    "time": 56358.60595703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (+ (* (* -2.0 (fma A (* C 4.0) (- (pow B 2.0)))) (* A F)) (* 2.0 (* (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* (- (pow B 2.0) (* A (* C 4.0))) F)))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 28,
    "avg_bits_err_input": 52.25923150834944,
    "avg_bits_err_output": 52.06642833192928,
    "avg_bits_err_improve": 0.19280317642015632,
    "time": 37416.94189453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 28.93617685401632,
    "avg_bits_err_output": 28.93617685401632,
    "avg_bits_err_improve": 0,
    "time": 38877.43017578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* C A))) (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.02030090309533,
    "avg_bits_err_output": 51.721768358707585,
    "avg_bits_err_improve": 0.2985325443877471,
    "time": 40837.45849609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.826817317709503,
    "avg_bits_err_output": 15.826817317709503,
    "avg_bits_err_improve": 0,
    "time": 1685.905029296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (* (+ g h) (* (+ g h) (/ (- g h) (+ g h)))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 36.579882857277,
    "avg_bits_err_output": 36.589279260938326,
    "avg_bits_err_improve": -0.009396403661327213,
    "time": 19628.575927734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9890996250072126,
    "avg_bits_err_output": 0.9890996250072126,
    "avg_bits_err_improve": 0,
    "time": 11024.739501953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.5879777323043995,
    "avg_bits_err_output": 0.5879777323043995,
    "avg_bits_err_improve": 0,
    "time": 7092.75830078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.981464548096051,
    "avg_bits_err_output": 10.981464548096051,
    "avg_bits_err_improve": 0,
    "time": 21548.177001953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4043473413791487,
    "avg_bits_err_output": 0.365875,
    "avg_bits_err_improve": 0.03847234137914868,
    "time": 12711.95849609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.552911619301796,
    "avg_bits_err_output": 15.353458759228811,
    "avg_bits_err_improve": 38.19945286007298,
    "time": 24304.3916015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.661859374034152,
    "avg_bits_err_output": 5.661859374034152,
    "avg_bits_err_improve": 0,
    "time": 37349.4462890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01375,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0.002875000000000001,
    "time": 9010.660888671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1290.452880859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= w -6.8e+118) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* w r) (* (* (* w r) (* w (/ r (* r (* w w))))) w))) (- 1.0 v))) 4.5) (if (<= w 8.2e+175) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* w r) (* (* (* w r) (* w (/ r (* r (* w w))))) w))) (- 1.0 v))) 4.5)))",
    "output_parens": 56,
    "avg_bits_err_input": 12.788903629004727,
    "avg_bits_err_output": 7.843007398838749,
    "avg_bits_err_improve": 4.945896230165978,
    "time": 37278.401123046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.505693749776676,
    "avg_bits_err_output": 0.27542735079058617,
    "avg_bits_err_improve": 0.23026639898608986,
    "time": 80443.74462890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.173742226920712,
    "avg_bits_err_output": 18.173742226920712,
    "avg_bits_err_improve": 0,
    "time": 37592.960693359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.262886842188131,
    "avg_bits_err_output": 0.262886842188131,
    "avg_bits_err_improve": 0,
    "time": 30741.160400390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 1918.501708984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (* (/ PI 2.0) (/ 1.0 (* (- b a) (+ b a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.359633506226235,
    "avg_bits_err_output": 9.647217193227586,
    "avg_bits_err_improve": 4.7124163129986485,
    "time": 43862.09765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (+ (- -1.0 (* (+ -1.0 (/ 1.0 eps)) (exp (* x (- -1.0 eps))))) (* (exp (- (* eps x) x)) (/ 1.0 eps))) (exp (- (* eps x) x))) 1.0) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.37776484209796,
    "avg_bits_err_output": 0.9165648105458852,
    "avg_bits_err_improve": 28.461200031552075,
    "time": 43255.27197265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020875,
    "avg_bits_err_output": 0.020875,
    "avg_bits_err_improve": 0,
    "time": 8526.879638671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (- 1.0 (- (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0)) 1.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.022125,
    "avg_bits_err_output": 0.0215,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 23733.587646484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- 1.0 (- 1.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.02375,
    "avg_bits_err_output": 0.023625,
    "avg_bits_err_improve": 0.0001250000000000001,
    "time": 16317.8095703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3298.1435546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2516.111572265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3213.567626953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.825823433141715,
    "avg_bits_err_output": 0.244,
    "avg_bits_err_improve": 7.581823433141715,
    "time": 59012.33837890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3515319460888335,
    "avg_bits_err_output": 7.3515319460888335,
    "avg_bits_err_improve": 0,
    "time": 48609.325927734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.847349048417943,
    "avg_bits_err_output": 15.847349048417943,
    "avg_bits_err_improve": 0,
    "time": 42157.202392578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (cos x) (fma (exp (log1p (exp (log1p (cos x))))) (/ (* (exp (* x (* x 10.0))) (* (exp (* x (* x 10.0))) (/ 1.0 (exp (* x (* x 10.0)))))) (cos x)) (- (/ (exp (* x (* x 10.0))) (cos x))))) (* (cos x) (/ (exp (* x (* x 10.0))) (cos x))))",
    "output_parens": 36,
    "avg_bits_err_input": 3.5123727756933536,
    "avg_bits_err_output": 3.585769981389603,
    "avg_bits_err_improve": -0.0733972056962493,
    "time": 30016.225830078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.166612181515402,
    "avg_bits_err_output": 15.166612181515402,
    "avg_bits_err_improve": 0,
    "time": 164781.83813476562,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.42165213534209,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.42165213534209,
    "time": 4221.677490234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.114711767779134,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 39.114336767779136,
    "time": 4766.255126953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.302375,
    "avg_bits_err_improve": 63.697625,
    "time": 4792.7451171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.843254462246236,
    "avg_bits_err_output": 0.4058492484399341,
    "avg_bits_err_improve": 61.4374052138063,
    "time": 22358.283447265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* (* a -4.0) (+ c c)))))) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 33.77893227627691,
    "avg_bits_err_output": 33.83443518688333,
    "avg_bits_err_improve": -0.055502910606421096,
    "time": 24900.449462890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.37159669082678,
    "avg_bits_err_output": 34.37159669082678,
    "avg_bits_err_improve": 0,
    "time": 22750.416748046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2237.29541015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.22072273549194,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 40.21109773549194,
    "time": 6481.132080078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.40656451780972,
    "avg_bits_err_output": 20.409472600623033,
    "avg_bits_err_improve": -0.0029080828133132286,
    "time": 4131.99658203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.671258470053417,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.671258470053417,
    "time": 4681.572265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04025,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.03925,
    "time": 5439.421630859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021219360937770434,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.008969360937770433,
    "time": 3917.380615234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x (* x x) (* x x))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.01475,
    "avg_bits_err_improve": -0.0002499999999999985,
    "time": 5023.595458984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1356.67626953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39365357187842565,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 0.14490357187842565,
    "time": 6753.289306640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.024454308598948,
    "avg_bits_err_output": 30.024454308598948,
    "avg_bits_err_improve": 0,
    "time": 64219.474853515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.370254713542884,
    "avg_bits_err_output": 24.370254713542884,
    "avg_bits_err_improve": 0,
    "time": 23835.685546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) 1.0) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.915080730161787,
    "avg_bits_err_output": 29.929772717473128,
    "avg_bits_err_improve": -0.014691987311341137,
    "time": 79738.203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.007375,
    "time": 2973.62646484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.993224218479938,
    "avg_bits_err_output": 25.993276098167346,
    "avg_bits_err_improve": -5.187968740827387e-05,
    "time": 24801.483154296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.82646100911031,
    "avg_bits_err_output": 25.82558600911031,
    "avg_bits_err_improve": 0.0008750000000006253,
    "time": 20768.13916015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037375,
    "avg_bits_err_output": 0.02080641359472751,
    "avg_bits_err_improve": 0.01656858640527249,
    "time": 17647.681884765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (* (- (+ (* ux maxCos) 2.0) ux) (- ux (* ux maxCos)))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.446977237234336,
    "avg_bits_err_output": 0.5515456255452216,
    "avg_bits_err_improve": 12.895431611689114,
    "time": 28055.45947265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (+ (* 2.0 (* ux maxCos)) (+ (* ux (* (- (* ux maxCos) ux) (+ maxCos -1.0))) (* ux -2.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.488496597821669,
    "avg_bits_err_output": 0.30998450757153956,
    "avg_bits_err_improve": 13.178512090250129,
    "time": 31510.07861328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (+ (fma PI uy 1.0) (- (* PI uy) 1.0))) xi) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.33099399119083023,
    "avg_bits_err_output": 0.343697302513879,
    "avg_bits_err_improve": -0.01270331132304875,
    "time": 76523.39453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20555927976382687,
    "avg_bits_err_output": 0.20555927976382687,
    "avg_bits_err_improve": 0,
    "time": 20083.09521484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (* (/ 1.0 (/ u1 (- 1.0 u1))) (* (/ 1.0 (/ u1 (- 1.0 u1))) (/ 1.0 (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.5456668669841892,
    "avg_bits_err_output": 0.5372216005164787,
    "avg_bits_err_improve": 0.008445266467710488,
    "time": 42191.078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* 6.28318530718 u2) (* (/ 1.0 (* 6.28318530718 u2)) (* 6.28318530718 u2)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3175356435446397,
    "avg_bits_err_output": 0.3208712406166569,
    "avg_bits_err_improve": -0.0033355970720171935,
    "time": 58538.06787109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3393021149501038,
    "avg_bits_err_output": 0.33835399463751364,
    "avg_bits_err_improve": 0.0009481203125901727,
    "time": 47184.964599609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06095025814003622,
    "avg_bits_err_output": 0.06095025814003622,
    "avg_bits_err_improve": 0,
    "time": 21215.55224609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (- (* (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) s) (- s)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13555194388532374,
    "avg_bits_err_output": 0.11818272948705204,
    "avg_bits_err_improve": 0.0173692143982717,
    "time": 28893.435302734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6725417830419382,
    "avg_bits_err_output": 0.6725417830419382,
    "avg_bits_err_improve": 0,
    "time": 18625.248291015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (+ (log1p (expm1 (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))))) (fma v (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (* v (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))))) -1.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.1565655748760634,
    "avg_bits_err_output": 0.18721560323205177,
    "avg_bits_err_improve": -0.030650028355988373,
    "time": 34971.779296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5370615514369237,
    "avg_bits_err_output": 2.5353462431838647,
    "avg_bits_err_improve": 0.0017153082530589892,
    "time": 66908.66723632812,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (+ (* (sinh (/ 1.0 v)) (+ v v)) (- -1.0 v)) (+ 1.0 v)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4635854936640751,
    "avg_bits_err_output": 0.4660550581144278,
    "avg_bits_err_improve": -0.0024695644503527348,
    "time": 33614.893798828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.12413746575755602,
    "avg_bits_err_output": 0.12413746575755602,
    "avg_bits_err_improve": 0,
    "time": 8897.09326171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (* (* alpha (* cosTheta alpha)) (* (fma alpha alpha -1.0) (* (/ cosTheta (* (fma alpha alpha -1.0) cosTheta)) cosTheta))) (* (* (fma alpha alpha -1.0) (* (/ cosTheta (* (fma alpha alpha -1.0) cosTheta)) cosTheta)) cosTheta)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.45308520440294736,
    "avg_bits_err_output": 0.45416309160664836,
    "avg_bits_err_improve": -0.001077887203701,
    "time": 25458.784912109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (* 3.0 (log (/ 1.0 (* (- 1.0 (/ (- u 0.25) 0.75)) (- (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) (* (/ (- u 0.25) 0.75) (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 1.3284716984949052,
    "avg_bits_err_output": 1.291592730664059,
    "avg_bits_err_improve": 0.0368789678308461,
    "time": 44299.69189453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.48234462060713,
    "avg_bits_err_output": 12.11736799769519,
    "avg_bits_err_improve": 0.36497662291193933,
    "time": 41156.541015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* s r) (* (/ 1.0 (* s r)) (* 6.0 (* PI (* s r)))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.14111506861303263,
    "avg_bits_err_output": 0.14975932876967069,
    "avg_bits_err_improve": -0.00864426015663805,
    "time": 65560.97485351562,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9105841127247802,
    "avg_bits_err_output": 0.9153163318864185,
    "avg_bits_err_improve": -0.00473221916163824,
    "time": 39979.27587890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) (+ 1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6943907046587724,
    "avg_bits_err_output": 0.6923175843461822,
    "avg_bits_err_improve": 0.0020731203125902153,
    "time": 49135.487060546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (/ (/ (* 2.0 PI) u2) u2) (* u2 (* u2 u2)))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.523444399449476,
    "avg_bits_err_output": 13.538962106348363,
    "avg_bits_err_improve": -0.015517706898886985,
    "time": 45381.51953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (log (exp (sqrt (- (log (- 1.0 u1)))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.569321538697196,
    "avg_bits_err_output": 13.589628693970688,
    "avg_bits_err_improve": -0.020307155273492583,
    "time": 44564.8388671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* alpha (* (+ 1.0 (/ (log (- 1.0 u0)) alpha)) (- alpha))) (fma alpha (* alpha alpha) (* alpha (fma alpha alpha (* alpha (- alpha))))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.36378234277145,
    "avg_bits_err_output": 14.036059170774843,
    "avg_bits_err_improve": 0.32772317199660783,
    "time": 46372.96484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.555894410737363,
    "avg_bits_err_output": 12.558398518086054,
    "avg_bits_err_improve": -0.0025041073486917753,
    "time": 19842.918212890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -4e+36) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (exp (log1p (/ PI l)))) l) 0.0)))) (if (<= (* PI l) 5e-7) (- (* PI l) (fma (tan (* PI l)) (/ 1.0 (* F F)) (fma (- (/ 1.0 (* F F))) (- (tan (* PI l))) (* (tan (* PI l)) (- (/ 1.0 (* F F))))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (exp (log1p (/ PI l)))) l) 0.0))))))",
    "output_parens": 50,
    "avg_bits_err_input": 15.773801323529252,
    "avg_bits_err_output": 12.369217524899357,
    "avg_bits_err_improve": 3.4045837986298952,
    "time": 31949.886474609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21324615082787057,
    "avg_bits_err_output": 0.21324615082787057,
    "avg_bits_err_improve": 0,
    "time": 29508.360107421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ 1.0 (tan B)) (- x) (* (/ F (sin B)) (pow (fma F F (fma x 2.0 2.0)) -0.5)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.305414975164256,
    "avg_bits_err_output": 13.296797561155094,
    "avg_bits_err_improve": 0.008617414009162161,
    "time": 57582.433837890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (- (* (/ 1.0 (/ PI 4.0)) (exp (log1p (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (expm1 (log1p (exp (* (/ PI 4.0) (- f))))))))))) (/ 1.0 (/ PI 4.0))))",
    "output_parens": 29,
    "avg_bits_err_input": 61.495448534344035,
    "avg_bits_err_output": 61.53937277290571,
    "avg_bits_err_improve": -0.04392423856167227,
    "time": 68320.82421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -6.4e-161) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 4.2e-164) (/ (expm1 (log1p (* t (sqrt 2.0)))) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* l l) (* 2.0 (* t t))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 54,
    "avg_bits_err_input": 43.08167959874521,
    "avg_bits_err_output": 35.39254407477154,
    "avg_bits_err_improve": 7.689135523973668,
    "time": 33947.9423828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.7811349724727923,
    "avg_bits_err_output": 3.7811349724727923,
    "avg_bits_err_improve": 0,
    "time": 58143.310546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9849839384753238,
    "avg_bits_err_output": 0.9849839384753238,
    "avg_bits_err_improve": 0,
    "time": 8757.42138671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -2.3e-63) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U 3.9e-26) (sqrt (* 2.0 (* n (- (* U (- t (* 2.0 (/ (* l l) Om)))) (* (pow (/ l Om) 2.0) (* n (* U (- U U*)))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 34.158295003873945,
    "avg_bits_err_output": 31.853660947183485,
    "avg_bits_err_improve": 2.3046340566904604,
    "time": 30382.60400390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e-125) (/ 2.0 (* (pow (/ k t) 2.0) (* (sin k) (* (/ (pow t 3.0) (* l l)) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (* (sin k) (+ (/ (pow t 3.0) (* l l)) 1.0)) (* (tan k) (- (sin k)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 47.94815009988665,
    "avg_bits_err_output": 37.98791646673942,
    "avg_bits_err_improve": 9.960233633147226,
    "time": 50717.387451171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 33.04164693993361,
    "avg_bits_err_output": 33.01220284080484,
    "avg_bits_err_improve": 0.02944409912876722,
    "time": 40219.78369140625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (/ a1 (/ (cos th) (sqrt 2.0))) (* (/ (cos th) (sqrt 2.0)) (* (/ (cos th) (sqrt 2.0)) a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.5554900406482592,
    "avg_bits_err_output": 0.5524229375396668,
    "avg_bits_err_improve": 0.003067103108592484,
    "time": 34548.132080078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* n (* n (* (/ (/ 1.0 n) (* PI 2.0)) (* 2.0 (* (* PI 2.0) PI))))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5035408448820499,
    "avg_bits_err_output": 0.5521616550169823,
    "avg_bits_err_improve": -0.04862081013493247,
    "time": 50814.3701171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (- (* (* (exp l) J) (cos (/ K 2.0))) (* J (* (cos (/ K 2.0)) (exp (- l))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.975882678524336,
    "avg_bits_err_output": 17.99734323473083,
    "avg_bits_err_improve": -0.02146055620649534,
    "time": 64585.04150390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (* (- (/ (* K (+ m n)) 2.0) M) (* (/ 1.0 (- (/ (* K (+ m n)) 2.0) M)) (* (* (- (/ (* K (+ m n)) 2.0) M) (/ -1.0 (- (/ (* K (+ m n)) 2.0) M))) (- M (/ (* K (+ m n)) 2.0)))))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 37,
    "avg_bits_err_input": 15.11939821613272,
    "avg_bits_err_output": 15.112494278606986,
    "avg_bits_err_improve": 0.006903937525732928,
    "time": 47608.56201171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* -2.0 (* (cos (/ K 2.0)) J)) (sqrt (+ 1.0 (pow (/ U (* J (* (cos (/ K 2.0)) 2.0))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.053417481250364,
    "avg_bits_err_output": 18.053417481250364,
    "avg_bits_err_improve": 0,
    "time": 75560.26220703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.461150724602188,
    "avg_bits_err_output": 14.461150724602188,
    "avg_bits_err_improve": 0,
    "time": 40903.88525390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.365234728141775,
    "avg_bits_err_output": 18.365234728141775,
    "avg_bits_err_improve": 0,
    "time": 26928.404541015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* w (* D (* D h)))) (sqrt (fma (/ (* d (* d c0)) (* w (* D (* D h)))) (/ (* d (* d c0)) (* w (* D (* D h)))) (- (* M M))))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.66478830287663,
    "avg_bits_err_output": 57.46384694910029,
    "avg_bits_err_improve": 2.2009413537763436,
    "time": 41881.162841796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* d 2.0)) 2.0)) (/ h l))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.39968467194701,
    "avg_bits_err_output": 26.39968467194701,
    "avg_bits_err_improve": 0,
    "time": 47902.188720703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (+ (+ (/ 1.0 (hypot 1.0 x)) 2.0) -2.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.823127177455826,
    "avg_bits_err_output": 15.83991153306996,
    "avg_bits_err_improve": -0.016784355614134938,
    "time": 27657.4921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9849481203125902,
    "avg_bits_err_output": 0.013615601562950722,
    "avg_bits_err_improve": 0.9713325187496394,
    "time": 7227.588623046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.45465630542840224,
    "avg_bits_err_output": 0.3817588849522988,
    "avg_bits_err_improve": 0.07289742047610343,
    "time": 47816.838623046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* 3.0 v)))) (- (/ (sqrt 2.0) 4.0) (* v (* v (/ (sqrt 2.0) 4.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.011594360937770434,
    "avg_bits_err_output": 0.009948120312590146,
    "avg_bits_err_improve": 0.001646240625180288,
    "time": 10420.79150390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.540316684964843,
    "avg_bits_err_output": 0.540316684964843,
    "avg_bits_err_improve": 0,
    "time": 19840.868896484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1102546721326263,
    "avg_bits_err_output": 2.0755353111948556,
    "avg_bits_err_improve": 0.03471936093777073,
    "time": 46899.746337890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01231245750865524,
    "avg_bits_err_output": 0.01231245750865524,
    "avg_bits_err_improve": 0,
    "time": 12116.451416015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17756308742908467,
    "avg_bits_err_output": 0.17756308742908467,
    "avg_bits_err_improve": 0,
    "time": 47156.056640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18674727088642265,
    "avg_bits_err_output": 0.18674727088642265,
    "avg_bits_err_improve": 0,
    "time": 7355.3681640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19231989481123013,
    "avg_bits_err_output": 0.19231989481123013,
    "avg_bits_err_improve": 0,
    "time": 27034.72265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma x x (* p (* 4.0 p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 12.608469703750725,
    "avg_bits_err_output": 12.619004046359777,
    "avg_bits_err_improve": -0.010534342609052061,
    "time": 27933.7607421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.431867444974664,
    "avg_bits_err_output": 0.040875,
    "avg_bits_err_improve": 41.390992444974664,
    "time": 7265.537841796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (* (+ 1.0 x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x))))) 1.0) (* (sin x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x)))))) (+ x (+ (- 2.0 (tan x)) -2.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 32.18348031684792,
    "avg_bits_err_output": 26.418111065881416,
    "avg_bits_err_improve": 5.765369250966504,
    "time": 35689.525146484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma (- c) a (* b_2 b_2))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.63248713143524,
    "avg_bits_err_output": 33.632164011122654,
    "avg_bits_err_improve": 0.0003231203125864113,
    "time": 28652.260498046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c)))))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 33.83693593573938,
    "avg_bits_err_output": 33.84955153730234,
    "avg_bits_err_improve": -0.012615601562956158,
    "time": 24771.435302734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (log1p (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.972926340166577,
    "avg_bits_err_output": 30.97306444608949,
    "avg_bits_err_improve": -0.00013810592291463308,
    "time": 26097.111572265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.80354560491808,
    "avg_bits_err_output": 32.80354560491808,
    "avg_bits_err_improve": 0,
    "time": 18729.3359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log N) (- (* (log N) 2.0) (log1p N)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.60636451278117,
    "avg_bits_err_output": 29.61450633104694,
    "avg_bits_err_improve": -0.008141818265769984,
    "time": 26645.6337890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (- (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (/ 1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.483121854825036,
    "avg_bits_err_output": 0.5179877641730568,
    "avg_bits_err_improve": 13.96513409065198,
    "time": 22272.576416015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (* (cos (+ x eps)) (/ 1.0 (log1p (expm1 (cos (+ x eps)))))) (cos (+ x eps)) (- (cos x)))",
    "output_parens": 13,
    "avg_bits_err_input": 39.31030765211852,
    "avg_bits_err_output": 39.32161066280089,
    "avg_bits_err_improve": -0.011303010682375714,
    "time": 45153.813232421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (fma (+ 1.0 (cbrt (+ 1.0 x))) (/ 1.0 (+ 1.0 (cbrt (+ 1.0 x)))) -1.0) (fma (* (+ 1.0 (cbrt (- x -1.0))) (/ 1.0 (+ 1.0 (cbrt (- x -1.0))))) (cbrt (- x -1.0)) (- (cbrt x))))",
    "output_parens": 22,
    "avg_bits_err_input": 29.89126835068925,
    "avg_bits_err_output": 29.773343868362197,
    "avg_bits_err_improve": 0.11792448232705155,
    "time": 27020.830810546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.11700333397715,
    "avg_bits_err_output": 30.11700333397715,
    "avg_bits_err_improve": 0,
    "time": 64748.740234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.32765323271245,
    "avg_bits_err_output": 34.33352993524726,
    "avg_bits_err_improve": -0.005876702534813205,
    "time": 20708.598876953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* c (* a -4.0)) (* b b))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.79028626161961,
    "avg_bits_err_output": 34.04680046348895,
    "avg_bits_err_improve": -0.2565142018693365,
    "time": 24947.018310546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (- (log (- 1.0 x)) 1.0) -1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.43207225054348,
    "avg_bits_err_output": 60.062856955745666,
    "avg_bits_err_improve": 1.3692152947978116,
    "time": 39306.88330078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00466487177278,
    "avg_bits_err_output": 0.08022575314515995,
    "avg_bits_err_improve": 62.924439118627625,
    "time": 29437.558349609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (exp (+ -1.0 (/ (- 1.0 eps) (+ 1.0 eps))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.596153017157654,
    "avg_bits_err_output": 58.6012186320364,
    "avg_bits_err_improve": -0.00506561487874535,
    "time": 104966.83715820312,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.85900928057009,
    "avg_bits_err_output": 59.858991338707135,
    "avg_bits_err_improve": 1.7941862957115973e-05,
    "time": 94922.39624023438,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.058192328871215,
    "avg_bits_err_output": 41.182789852719225,
    "avg_bits_err_improve": 18.87540247615199,
    "time": 28968.838623046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.789398730570014,
    "avg_bits_err_output": 0.3798443609377704,
    "avg_bits_err_improve": 41.40955436963225,
    "time": 38343.57861328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.5733929586296,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.5727679586296,
    "time": 4566.4990234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.440749570452372,
    "avg_bits_err_output": 0.01680195072789178,
    "avg_bits_err_improve": 29.42394761972448,
    "time": 5581.11279296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.261318308666194,
    "avg_bits_err_output": 28.299955127747292,
    "avg_bits_err_improve": 0.9613631809189016,
    "time": 41003.939697265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.8563395808831,
    "avg_bits_err_output": 9.868947500685223,
    "avg_bits_err_improve": -0.01260791980212339,
    "time": 105742.00415039062,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.53202988348641,
    "avg_bits_err_output": 37.53202988348641,
    "avg_bits_err_improve": 0,
    "time": 34845.499755859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (+ (sqrt (+ 1.0 x)) -1.0) (* (- 1.0 (sqrt x)) (/ (sqrt x) (- 1.0 (sqrt x))))) (* (/ 1.0 (- 1.0 (sqrt x))) (+ (sqrt x) -1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 29.986196283008077,
    "avg_bits_err_output": 29.288750546237708,
    "avg_bits_err_improve": 0.6974457367703693,
    "time": 22097.72265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.6590889673482,
    "avg_bits_err_output": 36.6590889673482,
    "avg_bits_err_improve": 0,
    "time": 51853.74560546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.679766766756835,
    "avg_bits_err_output": 19.679766766756835,
    "avg_bits_err_improve": 0,
    "time": 44088.639404296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (log (exp (- 1.0 (atan N)))) (* (- 1.0 (atan N)) (/ 1.0 (- 1.0 (atan N)))) (+ (atan (+ N 1.0)) -1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 14.616473437918307,
    "avg_bits_err_output": 14.62757256316839,
    "avg_bits_err_improve": -0.01109912525008383,
    "time": 27779.337890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.030601608617232,
    "avg_bits_err_output": 30.030601608617232,
    "avg_bits_err_improve": 0,
    "time": 41341.538330078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(+ -1.0 (- m (* (/ (- m (* m m)) v) (+ m -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07089868437626201,
    "avg_bits_err_output": 0.07135282559915973,
    "avg_bits_err_improve": -0.0004541412228977193,
    "time": 28175.461181640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (/ (* (* a b) (* a b)) 1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 16.222949566939832,
    "avg_bits_err_output": 0.31890601562950727,
    "avg_bits_err_improve": 15.904043551310325,
    "time": 15635.75830078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.63888738572131,
    "avg_bits_err_output": 20.64095268552375,
    "avg_bits_err_improve": -0.002065299802438858,
    "time": 80306.26733398438,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (expm1 (log1p (sin (* PI (/ angle 180.0)))))) (log1p (expm1 (cos (* PI (/ angle 180.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 31.005119747765104,
    "avg_bits_err_output": 31.005647667310534,
    "avg_bits_err_improve": -0.0005279195454299668,
    "time": 55583.570556640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma (/ angle 180.0) (* PI (exp (log1p (/ (/ angle 180.0) (/ angle 180.0))))) (- (- (* (/ angle 180.0) (exp (log1p (* PI (/ (/ angle 180.0) (/ angle 180.0)))))) (/ angle 180.0)))))) 2.0))",
    "output_parens": 28,
    "avg_bits_err_input": 20.73157717929106,
    "avg_bits_err_output": 20.72598820733485,
    "avg_bits_err_improve": 0.005588971956210997,
    "time": 119370.6435546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1753656015629507,
    "avg_bits_err_output": 0.1706172084824607,
    "avg_bits_err_improve": 0.004748393080489993,
    "time": 27704.06396484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.337931329582567,
    "avg_bits_err_output": 0.321403294084734,
    "avg_bits_err_improve": 0.016528035497832994,
    "time": 23449.57470703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13375,
    "avg_bits_err_output": 0.13375,
    "avg_bits_err_improve": 0,
    "time": 29513.906005859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.303448346569223,
    "avg_bits_err_output": 17.30200123814658,
    "avg_bits_err_improve": 0.0014471084226421738,
    "time": 41856.2763671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-35) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (+ (fma (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (- (sqrt (fma b b (* a (* c -4.0))))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (+ a a)))",
    "output_parens": 47,
    "avg_bits_err_input": 52.41704766489184,
    "avg_bits_err_output": 50.4747302849126,
    "avg_bits_err_improve": 1.9423173799792366,
    "time": 28056.568359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 28.070033190974513,
    "avg_bits_err_output": 28.070033190974513,
    "avg_bits_err_improve": 0,
    "time": 21449.7060546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 82000000.0) (/ (+ (fma (- -1.0 (sqrt (fma b b (* -4.0 (* a c))))) (/ (sqrt (fma b b (* -4.0 (* a c)))) (- -1.0 (sqrt (fma b b (* -4.0 (* a c)))))) (- b)) (+ -1.0 (* (+ 1.0 (sqrt (fma b b (* -4.0 (* a c))))) (/ 1.0 (+ 1.0 (sqrt (fma b b (* -4.0 (* a c))))))))) (* a 2.0)) (/ (- (+ (* (sqrt (fma a (* c -4.0) (* b b))) (/ 1.0 (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0))) (- (fma (- -1.0 (sqrt (fma b b (* -4.0 (* a c))))) (/ (sqrt (fma b b (* -4.0 (* a c)))) (- -1.0 (sqrt (fma b b (* -4.0 (* a c)))))) (/ 1.0 (+ (sqrt (fma b b (* -4.0 (* a c)))) 1.0))) b)) 1.0) (* a 2.0)))",
    "output_parens": 73,
    "avg_bits_err_input": 44.1178578555359,
    "avg_bits_err_output": 41.68459306297094,
    "avg_bits_err_improve": 2.4332647925649624,
    "time": 30217.754150390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.33352993524726,
    "avg_bits_err_output": 34.33352993524726,
    "avg_bits_err_improve": 0,
    "time": 19799.930908203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8863062573141274,
    "avg_bits_err_output": 0.8863062573141274,
    "avg_bits_err_improve": 0,
    "time": 37427.6640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.548493054417236,
    "avg_bits_err_output": 29.548493054417236,
    "avg_bits_err_improve": 0,
    "time": 52912.253662109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.16080974381946,
    "avg_bits_err_output": 1.151950564063672,
    "avg_bits_err_improve": 57.00885917975579,
    "time": 10880.669677734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.911683130642594,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 57.903808130642595,
    "time": 6206.644287109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.00827124062518029,
    "avg_bits_err_output": 0.00827124062518029,
    "avg_bits_err_improve": 0,
    "time": 2155.86328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.5055,
    "avg_bits_err_output": 31.5055,
    "avg_bits_err_improve": 0,
    "time": 5020.8916015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (* (/ 1.0 (/ (+ 1.0 x) (- 1.0 x))) (* (/ (+ 1.0 x) (- 1.0 x)) (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 14,
    "avg_bits_err_input": 58.581499101870136,
    "avg_bits_err_output": 58.60029493358953,
    "avg_bits_err_improve": -0.018795831719394585,
    "time": 200062.16845703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.0595,
    "avg_bits_err_output": 0.05925,
    "avg_bits_err_improve": 0.0002500000000000002,
    "time": 5243.847900390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t)))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13082312031259016,
    "avg_bits_err_output": 0.130125,
    "avg_bits_err_improve": 0.0006981203125901725,
    "time": 39225.292236328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13344812031259015,
    "avg_bits_err_output": 0.13344812031259015,
    "avg_bits_err_improve": 0,
    "time": 26462.247802734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.331420605937446,
    "avg_bits_err_output": 3.889548600518053,
    "avg_bits_err_improve": 35.44187200541939,
    "time": 49361.849365234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (log (exp (/ (- (* a a) (* b b)) (* a a))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.897197625531357,
    "avg_bits_err_output": 13.899032384519495,
    "avg_bits_err_improve": -0.0018347589881386739,
    "time": 5020.174072265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15194354739338634,
    "avg_bits_err_output": 0.14650149020440148,
    "avg_bits_err_improve": 0.005442057188984856,
    "time": 79999.72998046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-34) (/ (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (/ 1.0 (- (sqrt (fma b b (* a (* c -3.0)))) b)))) (* 3.0 a)) (/ (+ (fma (- (sqrt (fma a (* c -3.0) (* b b)))) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) (- (sqrt (fma a (* c -3.0) (* b b))) b)) (* 3.0 a)))",
    "output_parens": 60,
    "avg_bits_err_input": 52.43019930029488,
    "avg_bits_err_output": 50.49731283298918,
    "avg_bits_err_improve": 1.9328864673056998,
    "time": 25871.811767578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.225461096610402,
    "avg_bits_err_output": 28.165978643238756,
    "avg_bits_err_improve": 0.059482453371646926,
    "time": 19561.254150390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -4e-21) (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a)) (/ (- (sqrt (* (fma c (* a -3.0) (* b b)) (fma (fma a (* c -3.0) (* b b)) (* (fma a (* c -3.0) (* b b)) (- (exp (log1p (/ (/ 1.0 (fma c (* a -3.0) (* b b))) (fma c (* a -3.0) (* b b))))) 1.0)) 0.0))) b) (* 3.0 a)))",
    "output_parens": 45,
    "avg_bits_err_input": 44.135650546231574,
    "avg_bits_err_output": 42.45869285116046,
    "avg_bits_err_improve": 1.676957695071117,
    "time": 40611.881591796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.36338207535971,
    "avg_bits_err_output": 34.36338207535971,
    "avg_bits_err_improve": 0,
    "time": 19284.47412109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.574238166279743,
    "avg_bits_err_output": 12.574697616736092,
    "avg_bits_err_improve": -0.0004594504563488755,
    "time": 66111.53002929688,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(fma (/ (+ 1.0 x) (+ x -1.0)) (log (exp (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))))) (- (/ x (+ 1.0 x)) (fma (/ (+ 1.0 x) (+ x -1.0)) (/ 1.0 (/ (+ 1.0 x) (+ x -1.0))) (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 24,
    "avg_bits_err_input": 28.480170105057223,
    "avg_bits_err_output": 28.496910677679207,
    "avg_bits_err_improve": -0.01674057262198403,
    "time": 56106.77392578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 0,
    "time": 6084.89892578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.24985535555293,
    "avg_bits_err_output": 14.24985535555293,
    "avg_bits_err_improve": 0,
    "time": 48336.1943359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (* (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* F (* 2.0 (/ (fma A (* C 4.0) (- (pow B 2.0))) (fma A (* C 4.0) (- (pow B 2.0))))))) (- (pow B 2.0) (* C (* A 4.0))) (* A (* (* (fma A (* C 4.0) (- (pow B 2.0))) -2.0) F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 37,
    "avg_bits_err_input": 52.29320011853661,
    "avg_bits_err_output": 52.06015532918228,
    "avg_bits_err_improve": 0.23304478935433082,
    "time": 34872.21435546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.835945267164455,
    "avg_bits_err_output": 29.835945267164455,
    "avg_bits_err_improve": 0,
    "time": 41933.63671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.51048112459206,
    "avg_bits_err_output": 52.17658548231966,
    "avg_bits_err_improve": 0.3338956422724024,
    "time": 38718.00146484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.627804421622432,
    "avg_bits_err_output": 15.627804421622432,
    "avg_bits_err_improve": 0,
    "time": 2448.68017578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (* -1.0 (- (* h (+ g h)) (* g (+ g h)))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 36.08011519144055,
    "avg_bits_err_output": 36.080438145542566,
    "avg_bits_err_improve": -0.0003229541020175475,
    "time": 19247.565185546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9912152265701634,
    "avg_bits_err_output": 0.9912152265701634,
    "avg_bits_err_improve": 0,
    "time": 5640.01220703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6922712406251803,
    "avg_bits_err_output": 0.6922712406251803,
    "avg_bits_err_improve": 0,
    "time": 2885.8642578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.372823166249141,
    "avg_bits_err_output": 11.372823166249141,
    "avg_bits_err_improve": 0,
    "time": 22890.406982421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4780040635518175,
    "avg_bits_err_output": 0.442625,
    "avg_bits_err_improve": 0.035379063551817524,
    "time": 9096.309814453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.93568994831417,
    "avg_bits_err_output": 15.414730352200678,
    "avg_bits_err_improve": 37.52095959611349,
    "time": 52803.134033203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (- (+ (log b) -1.0) (- -1.0 (log a))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.77550359204577,
    "avg_bits_err_output": 5.775939020973291,
    "avg_bits_err_improve": -0.0004354289275205758,
    "time": 29142.925048828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.013875,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0,
    "time": 3556.99365234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1220.707763671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* w r) (* (* w r) (- 0.375 (* (+ v v) 0.125)))) (- 1.0 v))) 4.5)",
    "output_parens": 14,
    "avg_bits_err_input": 12.285871629202978,
    "avg_bits_err_output": 6.741549792812382,
    "avg_bits_err_improve": 5.544321836390596,
    "time": 32722.564697265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (+ x1 x1) (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)))) (* x1 (* -6.0 x1))) (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5128226024455851,
    "avg_bits_err_output": 0.3069417023576391,
    "avg_bits_err_improve": 0.20588090008794596,
    "time": 83155.9453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.10776151392575,
    "avg_bits_err_output": 18.10776151392575,
    "avg_bits_err_improve": 0,
    "time": 35455.7392578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2234789628874018,
    "avg_bits_err_output": 0.2234789628874018,
    "avg_bits_err_improve": 0,
    "time": 27808.06005859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026981203125901448,
    "avg_bits_err_output": 0.0026981203125901448,
    "avg_bits_err_improve": 0,
    "time": 3017.658447265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (/ (- (/ 1.0 a) (/ 1.0 b)) (/ PI 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.28120578385956,
    "avg_bits_err_output": 9.724840762376436,
    "avg_bits_err_improve": 4.556365021483124,
    "time": 40768.912353515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (- (- (exp (- (* x eps) x)) -1.0) (exp (* x (- -1.0 eps)))) 1.0)) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.59160663785604,
    "avg_bits_err_output": 1.3248480759167156,
    "avg_bits_err_improve": 28.266758561939323,
    "time": 20443.282470703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 0,
    "time": 8942.994873046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.016375,
    "avg_bits_err_output": 0.016375,
    "avg_bits_err_improve": 0,
    "time": 22535.989013671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (fma (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)) 2.0) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.048375,
    "avg_bits_err_output": 0.04539624062518029,
    "avg_bits_err_improve": 0.0029787593748197144,
    "time": 20468.166748046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3171.810546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2431.767578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2773.848876953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8035933305167395,
    "avg_bits_err_output": 0.245375,
    "avg_bits_err_improve": 7.558218330516739,
    "time": 59767.17236328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (expm1 (log1p (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 7.0989590952705415,
    "avg_bits_err_output": 7.125674744144543,
    "avg_bits_err_improve": -0.026715648874001907,
    "time": 61709.824951171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.626894356708267,
    "avg_bits_err_output": 15.626894356708267,
    "avg_bits_err_improve": 0,
    "time": 36121.217041015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (exp (* 10.0 (* x x))) (+ (- (cos x)) (log1p (expm1 (* (exp (* 10.0 (* x x))) (* (/ (* (cos x) (exp (log1p (/ (cos x) (cos x))))) (exp (* 10.0 (* x x)))) (* (/ (* (cos x) (exp (log1p (/ (cos x) (cos x))))) (exp (* 10.0 (* x x)))) (/ 1.0 (/ (* (cos x) (exp (log1p (/ (cos x) (cos x))))) (exp (* 10.0 (* x x))))))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 3.555339469037401,
    "avg_bits_err_output": 3.563314943145816,
    "avg_bits_err_improve": -0.00797547410841526,
    "time": 42340.817626953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.8233887960941,
    "avg_bits_err_output": 14.8233887960941,
    "avg_bits_err_improve": 0,
    "time": 108222.04052734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.17150046941011,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.17150046941011,
    "time": 4495.55224609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.086585328122624,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.08633532812262,
    "time": 3530.23291015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.287625,
    "avg_bits_err_improve": 63.712375,
    "time": 3387.409912109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 4e-32) (* 8e-32 (* t (/ 1.0 (* t 8e-32))))))",
    "output_parens": 7,
    "avg_bits_err_input": 61.84325163339247,
    "avg_bits_err_output": 0.38840808281331135,
    "avg_bits_err_improve": 61.454843550579156,
    "time": 22812.15283203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* c (* a -4.0)) (* b b))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.79028626161961,
    "avg_bits_err_output": 34.04680046348895,
    "avg_bits_err_improve": -0.2565142018693365,
    "time": 25084.41845703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.33352993524726,
    "avg_bits_err_output": 34.33352993524726,
    "avg_bits_err_improve": 0,
    "time": 21863.685302734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1632.17431640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.379538544695365,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 39.369913544695365,
    "time": 2548.40625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.832435837777357,
    "avg_bits_err_output": 19.832435837777357,
    "avg_bits_err_improve": 0,
    "time": 2306.522705078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.7066968622617615,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.7066968622617615,
    "time": 4736.0107421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.039,
    "time": 5620.576171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.020844360937770434,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 0.006594360937770433,
    "time": 5104.03271484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.016,
    "time": 3963.3984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.000375,
    "time": 2764.73291015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4018659781302286,
    "avg_bits_err_output": 0.263625,
    "avg_bits_err_improve": 0.13824097813022862,
    "time": 7636.49658203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.15436374729859,
    "avg_bits_err_output": 30.15436374729859,
    "avg_bits_err_improve": 0,
    "time": 8556.609130859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (expm1 (expm1 (log1p (log1p (sqrt (- (* x x) eps)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 24.62497337338717,
    "avg_bits_err_output": 24.6930137535515,
    "avg_bits_err_improve": -0.06804038016433012,
    "time": 17891.23583984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.982081294775853,
    "avg_bits_err_output": 30.004479841849687,
    "avg_bits_err_improve": -0.022398547073834152,
    "time": 64219.18212890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00725,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.006625000000000001,
    "time": 4036.564208984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.579275910185075,
    "avg_bits_err_output": 47.579275910185075,
    "avg_bits_err_improve": 0,
    "time": 14689.17578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.56655196064843,
    "avg_bits_err_output": 26.56655196064843,
    "avg_bits_err_improve": 0,
    "time": 28771.900390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.48909648430748,
    "avg_bits_err_output": 25.48909648430748,
    "avg_bits_err_improve": 0,
    "time": 15574.080810546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037875,
    "avg_bits_err_output": 0.020860521314888556,
    "avg_bits_err_improve": 0.017014478685111443,
    "time": 27483.744873046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (* ux (fma maxCos (+ (- (* ux maxCos) ux) (- 2.0 ux)) (+ ux -2.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 13.770385221272825,
    "avg_bits_err_output": 0.5407138740144942,
    "avg_bits_err_improve": 13.22967134725833,
    "time": 38242.218994140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (- ux (* (- ux (* ux maxCos)) (+ (- -1.0 (* ux maxCos)) ux))) (* ux maxCos))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.808443394040077,
    "avg_bits_err_output": 0.34594393572032384,
    "avg_bits_err_improve": 13.462499458319753,
    "time": 37855.66845703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.33048018785438493,
    "avg_bits_err_output": 0.3251147447597045,
    "avg_bits_err_improve": 0.0053654430946804554,
    "time": 87879.43310546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19787968083262134,
    "avg_bits_err_output": 0.1979074798852884,
    "avg_bits_err_improve": -2.7799052667060176e-05,
    "time": 21206.690185546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5395669897023756,
    "avg_bits_err_output": 0.4875653355386488,
    "avg_bits_err_improve": 0.05200165416372682,
    "time": 95183.23583984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3182523052562121,
    "avg_bits_err_output": 0.3182523052562121,
    "avg_bits_err_improve": 0,
    "time": 40580.531005859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (- (+ (/ PI s) 1.0) 1.0)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.3291006081264169,
    "avg_bits_err_output": 0.3304819010496281,
    "avg_bits_err_improve": -0.0013812929232112081,
    "time": 35636.290771484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06253090445323171,
    "avg_bits_err_output": 0.06253090445323171,
    "avg_bits_err_improve": 0,
    "time": 10369.333984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1602904943487237,
    "avg_bits_err_output": 0.13839673074087575,
    "avg_bits_err_improve": 0.02189376360784795,
    "time": 22097.5595703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6678888130575138,
    "avg_bits_err_output": 0.6697037708744058,
    "avg_bits_err_improve": -0.0018149578168920044,
    "time": 24299.74951171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (* (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) (* (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) (/ 1.0 (log (- u (* (exp (/ -2.0 v)) (+ u -1.0))))))) 1.0)",
    "output_parens": 22,
    "avg_bits_err_input": 0.151137259172071,
    "avg_bits_err_output": 0.15105976274588265,
    "avg_bits_err_improve": 7.749642618834485e-05,
    "time": 33028.156005859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5843473848796834,
    "avg_bits_err_output": 2.5843473848796834,
    "avg_bits_err_improve": 0,
    "time": 64632.98583984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.45646508831999544,
    "avg_bits_err_output": 0.45646508831999544,
    "avg_bits_err_improve": 0,
    "time": 48369.49072265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1017916211995896,
    "avg_bits_err_output": 0.1017916211995896,
    "avg_bits_err_improve": 0,
    "time": 7906.976318359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (* (* alpha alpha) (* cosTheta cosTheta)) (* cosTheta cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.47458210654791216,
    "avg_bits_err_output": 0.47455095297212363,
    "avg_bits_err_improve": 3.115357578853395e-05,
    "time": 28077.892333984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log1p (- (exp (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 1.3262383922843086,
    "avg_bits_err_output": 1.326434386434553,
    "avg_bits_err_improve": -0.00019599415024429412,
    "time": 40348.292236328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.264057598280885,
    "avg_bits_err_output": 11.919988025482242,
    "avg_bits_err_improve": 0.34406957279864336,
    "time": 45561.246337890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* PI (expm1 (log1p (* s (* r 6.0)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1294345796303651,
    "avg_bits_err_output": 0.14548810970086115,
    "avg_bits_err_improve": -0.016053530070496064,
    "time": 72570.18896484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.946681081244515,
    "avg_bits_err_output": 0.9353972451419523,
    "avg_bits_err_improve": 0.011283836102562672,
    "time": 39818.913818359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (+ (exp (log (+ c 2.0))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))))) 1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 0.7156405514643401,
    "avg_bits_err_output": 0.7143905514643399,
    "avg_bits_err_improve": 0.0012500000000001954,
    "time": 46739.26513671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(+ (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))) (fma (- (* (sin (* 2.0 (fma (* PI u2) (* u2 (* (/ 1.0 (* PI u2)) PI)) 0.0))) (/ 1.0 (sin (* 2.0 (* PI u2)))))) (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 30,
    "avg_bits_err_input": 13.541846383590148,
    "avg_bits_err_output": 13.43535689434052,
    "avg_bits_err_improve": 0.10648948924962731,
    "time": 45389.091552734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (fma u2 (* u2 (/ (* 2.0 PI) u2)) 0.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.591794425307109,
    "avg_bits_err_output": 13.594931889171685,
    "avg_bits_err_improve": -0.003137463864575807,
    "time": 47638.212158203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* (log (- 1.0 u0)) (* alpha (- alpha))) (fma alpha alpha (* alpha (- alpha))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.192672930035418,
    "avg_bits_err_output": 14.10435196734053,
    "avg_bits_err_improve": 0.08832096269488687,
    "time": 32531.489990234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (* (/ cos2phi (* alphax alphax)) (log (+ 1.0 (expm1 (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax)))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 21,
    "avg_bits_err_input": 12.561665502677593,
    "avg_bits_err_output": 12.572018655144374,
    "avg_bits_err_improve": -0.010353152466780813,
    "time": 54696.8037109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1e+33) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l)))) (if (<= (* PI l) 200000000000.0) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ l PI) (* PI PI))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l))))))",
    "output_parens": 39,
    "avg_bits_err_input": 16.87330777360657,
    "avg_bits_err_output": 13.083135010499161,
    "avg_bits_err_improve": 3.7901727631074085,
    "time": 39046.517578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.22167019050571782,
    "avg_bits_err_output": 0.21829248125036058,
    "avg_bits_err_improve": 0.003377709255357242,
    "time": 32212.539306640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.174091690595713,
    "avg_bits_err_output": 14.17136827697323,
    "avg_bits_err_improve": 0.002723413622483406,
    "time": 38291.670654296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (expm1 (log1p (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (- f) (+ (/ PI 4.0) (/ (/ PI 4.0) (/ PI 4.0)))) (* (/ (/ PI 4.0) (/ PI 4.0)) (+ (- 1.0 f) -1.0)))))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 61.491432612763994,
    "avg_bits_err_output": 61.488563604344066,
    "avg_bits_err_improve": 0.0028690084199283206,
    "time": 64137.049560546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.1e-98) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 6.8e-170) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma 2.0 (* t t) (* l l)) (* l (fma l -1.0 l)))))) (/ (* t (* t (/ (sqrt 2.0) t))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 54,
    "avg_bits_err_input": 42.840952807663975,
    "avg_bits_err_output": 36.071286728319876,
    "avg_bits_err_improve": 6.769666079344098,
    "time": 33358.512939453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.980989365904106,
    "avg_bits_err_output": 3.980989365904106,
    "avg_bits_err_improve": 0,
    "time": 53575.54296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.094125,
    "avg_bits_err_output": 1.094125,
    "avg_bits_err_improve": 0,
    "time": 9638.87158203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (+ (fma (- (* 2.0 (/ (* l l) Om))) (* n U) (* 2.0 (* (/ (* l l) Om) (* n U)))) (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0))))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 55,
    "avg_bits_err_input": 34.67842107000908,
    "avg_bits_err_output": 32.11962409051455,
    "avg_bits_err_improve": 2.558796979494531,
    "time": 29681.004638671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (tan k) (sin k)))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.336429510506825,
    "avg_bits_err_output": 39.666831016292825,
    "avg_bits_err_improve": 7.669598494214,
    "time": 67673.62060546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.277784931514574,
    "avg_bits_err_output": 32.23890597270672,
    "avg_bits_err_improve": 0.038878958807856634,
    "time": 41373.447265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a1) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5807400406482597,
    "avg_bits_err_output": 0.5506056422112101,
    "avg_bits_err_improve": 0.03013439843704957,
    "time": 38536.884765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(fma (/ 1.0 (sqrt k)) (* (pow (* PI (* n 2.0)) (/ (- 1.0 k) 2.0)) (exp (log1p (/ (/ 1.0 (sqrt k)) (/ 1.0 (sqrt k)))))) (* (pow (* PI (* n 2.0)) (/ (- 1.0 k) 2.0)) (- (/ 1.0 (sqrt k)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.5224056608305663,
    "avg_bits_err_output": 0.569780915236039,
    "avg_bits_err_improve": -0.047375254405472744,
    "time": 36319.4716796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (+ (* (exp l) (* (cos (/ K 2.0)) J)) (* (* (cos (/ K 2.0)) (exp (- l))) (- J))) (* (- J) (fma (- (* (exp l) (/ (cos (/ K 2.0)) (exp l)))) (exp l) (* (exp l) (cos (/ K 2.0)))))) U)",
    "output_parens": 30,
    "avg_bits_err_input": 17.31369576187562,
    "avg_bits_err_output": 17.326769618885166,
    "avg_bits_err_improve": -0.013073857009544554,
    "time": 39954.3056640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.274467448716402,
    "avg_bits_err_output": 15.274467448716402,
    "avg_bits_err_improve": 0,
    "time": 7219.1181640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.00421936093777,
    "avg_bits_err_output": 18.00421936093777,
    "avg_bits_err_improve": 0,
    "time": 51839.36181640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 1e+307) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (pow (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ 1.0 (log1p (expm1 (/ (* M D) (+ d d))))))) 2.0) (/ h l))))))",
    "output_parens": 38,
    "avg_bits_err_input": 14.127842899506629,
    "avg_bits_err_output": 13.377438831326351,
    "avg_bits_err_improve": 0.750404068180277,
    "time": 46925.51416015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.331082942441245,
    "avg_bits_err_output": 19.331082942441245,
    "avg_bits_err_improve": 0,
    "time": 34541.056884765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (/ (+ (/ (* d (* d c0)) (* D (* w (* D h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* w (* D h)))) (/ (* d (* d c0)) (* D (* w (* D h))))) (* M M)))) 1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 59.43901740849568,
    "avg_bits_err_output": 56.404996423315076,
    "avg_bits_err_improve": 3.0340209851806037,
    "time": 61222.87744140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(fma (- (pow (/ d l) 0.5)) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* 0.5 (/ h l)))) (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)))",
    "output_parens": 19,
    "avg_bits_err_input": 26.404284773602452,
    "avg_bits_err_output": 25.77227033523145,
    "avg_bits_err_improve": 0.6320144383710016,
    "time": 68947.23974609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.707598007090736,
    "avg_bits_err_output": 15.707598007090736,
    "avg_bits_err_improve": 0,
    "time": 246132.60229492188,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9818340531677464,
    "avg_bits_err_output": 0.013365601562950724,
    "avg_bits_err_improve": 0.9684684516047957,
    "time": 8168.70556640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* 5.0 v))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44198733279738894,
    "avg_bits_err_output": 0.374036392166439,
    "avg_bits_err_improve": 0.06795094063094992,
    "time": 46219.99365234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (- (sqrt (- 1.0 (* v (* v 3.0)))) (* (sqrt (- 1.0 (* v (* v 3.0)))) (* v v))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01320366957750995,
    "avg_bits_err_output": 0.01152124062518029,
    "avg_bits_err_improve": 0.001682428952329661,
    "time": 18436.61669921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5152070115660735,
    "avg_bits_err_output": 0.5152070115660735,
    "avg_bits_err_improve": 0,
    "time": 13601.5634765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9546565265742808,
    "avg_bits_err_output": 1.9546565265742808,
    "avg_bits_err_improve": 0,
    "time": 23367.677490234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.021912583770241124,
    "avg_bits_err_output": 0.021912583770241124,
    "avg_bits_err_improve": 0,
    "time": 12711.48583984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18203655590132128,
    "avg_bits_err_output": 0.18396343558873113,
    "avg_bits_err_improve": -0.0019268796874098437,
    "time": 32701.2685546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18997040104138205,
    "avg_bits_err_output": 0.18997040104138205,
    "avg_bits_err_improve": 0,
    "time": 12798.676513671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18842033202660644,
    "avg_bits_err_output": 0.18842033202660644,
    "avg_bits_err_improve": 0,
    "time": 8271.89794921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.208008860755024,
    "avg_bits_err_output": 13.208008860755024,
    "avg_bits_err_improve": 0,
    "time": 16156.85693359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.59321119733226,
    "avg_bits_err_output": 0.056875,
    "avg_bits_err_improve": 40.53633619733226,
    "time": 5829.12451171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (- x -1.0) 1.0) (sin x)) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.68612750779363,
    "avg_bits_err_output": 26.007087341434083,
    "avg_bits_err_improve": 5.679040166359545,
    "time": 58719.0234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (* a c) (+ (fma b_2 b_2 (* c (- a))) (* c (- a))))) b_2) a)",
    "output_parens": 11,
    "avg_bits_err_input": 33.730158327203675,
    "avg_bits_err_output": 33.747297360449195,
    "avg_bits_err_improve": -0.017139033245520352,
    "time": 19112.425048828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.53854291580848,
    "avg_bits_err_output": 33.53854291580848,
    "avg_bits_err_improve": 0,
    "time": 20756.490234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.106342939284794,
    "avg_bits_err_output": 31.106342939284794,
    "avg_bits_err_improve": 0,
    "time": 35346.235107421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(fma (/ 1.0 (+ 1.0 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) (* (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))) (+ 1.0 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) (fma (+ 1.0 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) (/ 1.0 (+ 1.0 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) -1.0))",
    "output_parens": 39,
    "avg_bits_err_input": 32.4629577493785,
    "avg_bits_err_output": 32.48436738039422,
    "avg_bits_err_improve": -0.02140963101571458,
    "time": 33293.4736328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 29.500741789756933,
    "avg_bits_err_output": 29.501627644789174,
    "avg_bits_err_improve": -0.0008858550322408121,
    "time": 19376.75146484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) -2e-25) (+ (* (/ 1.0 x) (* (- (+ (+ 1.0 (/ 1.0 x)) (* (/ 1.0 x) (/ -1.0 (/ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 x) (/ 1.0 (/ 1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x))) (if (<= (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) 0.0) (+ (* (/ 1.0 x) (* (- (- (* (/ 1.0 x) (+ 1.0 (/ -1.0 (/ 1.0 x)))) -1.0) (/ 1.0 x)) (fma (/ 1.0 (/ 1.0 x)) (* (/ 1.0 (/ 1.0 x)) (/ (/ 1.0 x) (/ 1.0 (/ 1.0 x)))) 0.0))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 63,
    "avg_bits_err_input": 14.328016796907551,
    "avg_bits_err_output": 2.0286292390492373,
    "avg_bits_err_improve": 12.299387557858314,
    "time": 37364.4130859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (+ (* (- 2.0 (cos x)) (* (* (- 2.0 (cos x)) (/ 1.0 (- 2.0 (cos x)))) (* (- 2.0 (cos x)) (/ (/ (- 2.0 (cos x)) (- 2.0 (cos x))) (- 2.0 (cos x)))))) -2.0))",
    "output_parens": 25,
    "avg_bits_err_input": 39.60068821796507,
    "avg_bits_err_output": 39.636969167894215,
    "avg_bits_err_improve": -0.03628094992914299,
    "time": 37950.392822265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (- (* (* (cbrt x) (/ -1.0 (cbrt x))) (cbrt x)) (+ (- (cbrt (+ x 1.0))) 1.0)) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 29.750049245808967,
    "avg_bits_err_output": 29.504956178855124,
    "avg_bits_err_improve": 0.24509306695384225,
    "time": 30022.429443359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.96797140621094,
    "avg_bits_err_output": 29.96797140621094,
    "avg_bits_err_improve": 0,
    "time": 59975.661376953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70671116528833,
    "avg_bits_err_output": 33.70671116528833,
    "avg_bits_err_improve": 0,
    "time": 19122.615966796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.13804826137772,
    "avg_bits_err_output": 33.138047667366116,
    "avg_bits_err_improve": 5.940116025726638e-07,
    "time": 22295.732177734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.182643001630375,
    "avg_bits_err_output": 59.87574634915573,
    "avg_bits_err_improve": 1.3068966524746415,
    "time": 17891.494140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.01021685974004,
    "avg_bits_err_output": 0.05442845320144381,
    "avg_bits_err_improve": 62.955788406538595,
    "time": 20637.923828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.60315345304578,
    "avg_bits_err_output": 58.59890115649773,
    "avg_bits_err_improve": 0.00425229654804582,
    "time": 13719.448974609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (/ 1.0 (tan x)) (fma (/ 1.0 (tan x)) (* (/ 1.0 (tan x)) (/ (/ (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x))) (/ 1.0 (tan x)))) 0.0) (- (/ 1.0 x) (* (/ 1.0 (tan x)) (+ 1.0 (/ 1.0 (/ 1.0 (tan x)))))))",
    "output_parens": 27,
    "avg_bits_err_input": 59.887347463261065,
    "avg_bits_err_output": 59.67821976855519,
    "avg_bits_err_improve": 0.20912769470587733,
    "time": 49113.772705078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.538691125731525,
    "avg_bits_err_output": 40.50487944660691,
    "avg_bits_err_improve": 20.033811679124618,
    "time": 30543.8056640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 40.86726586985108,
    "avg_bits_err_output": 0.5421156015629508,
    "avg_bits_err_improve": 40.325150268288134,
    "time": 24864.376220703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64070708086842,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.639832080868416,
    "time": 3736.95166015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.486760751671497,
    "avg_bits_err_output": 0.022180644893423293,
    "avg_bits_err_improve": 29.464580106778072,
    "time": 3853.159423828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.683117156777303,
    "avg_bits_err_output": 28.74672544517191,
    "avg_bits_err_improve": 0.9363917116053919,
    "time": 31217.336181640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(fma (/ 2.0 x) (/ (/ 2.0 x) (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x))) (- (fma (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x))) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ (/ 2.0 x) (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x))))))",
    "output_parens": 32,
    "avg_bits_err_input": 9.791196462515073,
    "avg_bits_err_output": 9.801995565101876,
    "avg_bits_err_improve": -0.0107991025868035,
    "time": 64617.265380859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (* (log (+ 1.0 (expm1 (tan (+ x eps))))) (- (fma (tan (+ x eps)) (- (/ 1.0 (tan (+ x eps)))) (/ (tan (+ x eps)) (tan (+ x eps)))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 24,
    "avg_bits_err_input": 37.32211213782556,
    "avg_bits_err_output": 37.47520533046968,
    "avg_bits_err_improve": -0.15309319264411414,
    "time": 42493.91748046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.89520388300476,
    "avg_bits_err_output": 29.21680853077633,
    "avg_bits_err_improve": 0.6783953522284314,
    "time": 29036.3115234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (* (sin (+ x eps)) (/ 1.0 (sin (+ x eps)))) (sin (+ x eps)) (- (sin x)))",
    "output_parens": 11,
    "avg_bits_err_input": 37.076021656316286,
    "avg_bits_err_output": 37.129970569618486,
    "avg_bits_err_improve": -0.0539489133022002,
    "time": 42724.739501953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(+ (* (/ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) (* (fma (/ 1.0 (sqrt (- x -1.0))) (/ -1.0 (/ 1.0 (sqrt (- x -1.0)))) 1.0) (- (* (/ 1.0 (sqrt (+ 1.0 x))) (exp (log1p (/ 1.0 (sqrt (+ 1.0 x)))))) (/ 1.0 (sqrt (+ 1.0 x)))))) (- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 34,
    "avg_bits_err_input": 19.768123257986957,
    "avg_bits_err_output": 19.708653140701095,
    "avg_bits_err_improve": 0.059470117285862045,
    "time": 41919.734130859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0)))) (atan (+ N 1.0)) (- (atan N)))",
    "output_parens": 11,
    "avg_bits_err_input": 14.990133460485552,
    "avg_bits_err_output": 14.9869941696175,
    "avg_bits_err_improve": 0.0031392908680523135,
    "time": 24141.40869140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.77134824367137,
    "avg_bits_err_output": 29.77134824367137,
    "avg_bits_err_improve": 0,
    "time": 39668.492431640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (fma (- m) m m) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07404492500144229,
    "avg_bits_err_output": 0.06843872187554087,
    "avg_bits_err_improve": 0.005606203125901418,
    "time": 41421.7109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (+ (* (* b a) (* b a)) (* (* b (- a)) (fma (- b) a (* b a)))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.864693567269725,
    "avg_bits_err_output": 0.259375,
    "avg_bits_err_improve": 16.605318567269727,
    "time": 13568.365478515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* PI (/ angle 180.0)))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.318325708829597,
    "avg_bits_err_output": 20.31672697415921,
    "avg_bits_err_improve": 0.001598734670388069,
    "time": 45533.195068359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (fma (- (pow b 2.0) (pow a 2.0)) (* (sin (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))) (fma (- (pow a 2.0)) (* (sin (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))) (* (sin (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (pow a 2.0))))))",
    "output_parens": 31,
    "avg_bits_err_input": 31.073264448467892,
    "avg_bits_err_output": 31.081136791559608,
    "avg_bits_err_improve": -0.007872343091715805,
    "time": 59419.817138671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.21627943539432,
    "avg_bits_err_output": 20.22071349333656,
    "avg_bits_err_improve": -0.004434057942241054,
    "time": 58603.204345703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (* m (- (* m (/ (/ m m) m)) m)) v)) m)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17499060156295074,
    "avg_bits_err_output": 0.2168140984428183,
    "avg_bits_err_improve": -0.041823496879867555,
    "time": 32472.927001953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.32144531176572927,
    "avg_bits_err_output": 0.31217223772641384,
    "avg_bits_err_improve": 0.009273074039315432,
    "time": 28890.756591796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13386560156295074,
    "avg_bits_err_output": 0.13386560156295074,
    "avg_bits_err_improve": 0,
    "time": 39586.45556640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (/ (sin phi2) (sin phi1)) (* (sin phi1) (sin phi1))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 16,
    "avg_bits_err_input": 16.50614705770733,
    "avg_bits_err_output": 16.51317660406752,
    "avg_bits_err_improve": -0.007029546360190153,
    "time": 49212.45458984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 2.45e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)) (/ (+ (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.60920530351322,
    "avg_bits_err_output": 50.601583746234304,
    "avg_bits_err_improve": 2.0076215572789167,
    "time": 20498.7685546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.32917868863751,
    "avg_bits_err_output": 28.281091782701825,
    "avg_bits_err_improve": 0.04808690593568343,
    "time": 26716.61279296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-20) (/ (* (- (sqrt (fma b b (* a (* c -4.0)))) b) (fma (sqrt (fma a (* c -4.0) (* b b))) (/ 1.0 (- (sqrt (fma a (* c -4.0) (* b b))) b)) (- (* b (/ 1.0 (- (sqrt (fma a (* c -4.0) (* b b))) b)))))) (+ a a)) (/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (- (exp (log1p (/ 1.0 (fma a (* c -4.0) (* b b))))) 1.0)))) b) (+ a a)))",
    "output_parens": 57,
    "avg_bits_err_input": 43.78874762707837,
    "avg_bits_err_output": 42.52310941242474,
    "avg_bits_err_improve": 1.2656382146536345,
    "time": 28235.985107421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70310996181358,
    "avg_bits_err_output": 33.70310996181358,
    "avg_bits_err_improve": 0,
    "time": 23374.384521484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (- (exp (log1p (* (cos (- lambda1 lambda2)) (cos phi2)))) 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8872506754157247,
    "avg_bits_err_output": 0.9122694946934103,
    "avg_bits_err_improve": -0.025018819277685678,
    "time": 37397.058837890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (- (+ 2.0 (exp (* -2.0 x))) 1.0)) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.361745493776258,
    "avg_bits_err_output": 29.365231265078098,
    "avg_bits_err_improve": -0.0034857713018396908,
    "time": 65595.84033203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.118687058443555,
    "avg_bits_err_output": 1.2238255640636722,
    "avg_bits_err_improve": 56.89486149437988,
    "time": 12422.949462890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.0167606326519,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 58.0080106326519,
    "time": 6538.50537109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007469360937770434,
    "avg_bits_err_output": 0.007469360937770434,
    "avg_bits_err_improve": 0,
    "time": 2801.919189453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.55375,
    "avg_bits_err_output": 31.55375,
    "avg_bits_err_improve": 0,
    "time": 6279.9755859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (log1p (expm1 (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.59061824405141,
    "avg_bits_err_output": 58.594420140941956,
    "avg_bits_err_improve": -0.0038018968905433326,
    "time": 122729.84448242188,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.020625,
    "avg_bits_err_output": 0.020625,
    "avg_bits_err_improve": 0,
    "time": 4854.955078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13032312031259013,
    "avg_bits_err_output": 0.13032312031259013,
    "avg_bits_err_improve": 0,
    "time": 24993.986083984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12325,
    "avg_bits_err_output": 0.12325,
    "avg_bits_err_improve": 0,
    "time": 33683.841064453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) (/ (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) 0.0) (- phi1 phi2)))",
    "output_parens": 16,
    "avg_bits_err_input": 39.03542395506298,
    "avg_bits_err_output": 3.6267191902702516,
    "avg_bits_err_improve": 35.40870476479273,
    "time": 54180.065673828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.14076196427245,
    "avg_bits_err_output": 14.142964589961812,
    "avg_bits_err_improve": -0.0022026256893621365,
    "time": 5017.213134765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (- (exp (log1p (* (cos phi1) (sin delta)))) 1.0) (cos theta)))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.15376049262704158,
    "avg_bits_err_output": 0.1579164521560576,
    "avg_bits_err_improve": -0.004155959529016012,
    "time": 54858.099853515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.1e+16) (/ (- (* (sqrt (fma b b (* a (* c -3.0)))) (* (sqrt (fma b b (* a (* c -3.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) b) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.643515077095074,
    "avg_bits_err_output": 50.88622267200353,
    "avg_bits_err_improve": 1.7572924050915475,
    "time": 25264.419189453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.449788997139287,
    "avg_bits_err_output": 28.424661279448493,
    "avg_bits_err_improve": 0.02512771769079336,
    "time": 23447.95068359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-20) (/ (- (sqrt (+ (* b b) (* a (* c -3.0)))) b) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) b)) (- (exp (log1p (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) 1.0)) (* 3.0 a)))",
    "output_parens": 41,
    "avg_bits_err_input": 43.86024444686531,
    "avg_bits_err_output": 41.45987961591507,
    "avg_bits_err_improve": 2.400364830950238,
    "time": 24559.9765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.75598930418483,
    "avg_bits_err_output": 33.75598930418483,
    "avg_bits_err_improve": 0,
    "time": 16987.66259765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (+ (+ (cos (- lambda1 lambda2)) 1.0) -1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.83495008420797,
    "avg_bits_err_output": 12.843312055177245,
    "avg_bits_err_improve": -0.00836197096927549,
    "time": 69384.00122070312,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(fma (/ x (+ 1.0 x)) (* (/ x (+ 1.0 x)) (/ 1.0 (/ x (+ 1.0 x)))) (- (/ (+ 1.0 x) (+ x -1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 29.214774936467396,
    "avg_bits_err_output": 29.215989437817647,
    "avg_bits_err_improve": -0.0012145013502511404,
    "time": 22833.72119140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01325,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": 0,
    "time": 3105.593994140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (+ (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (/ 1.0 (+ x -1.0))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.2279152119211,
    "avg_bits_err_output": 12.394378715809596,
    "avg_bits_err_improve": 1.8335364961115044,
    "time": 26593.983642578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.022102674683836,
    "avg_bits_err_output": 51.727791363534564,
    "avg_bits_err_improve": 0.2943113111492721,
    "time": 38015.66845703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.622284869091633,
    "avg_bits_err_output": 29.622284869091633,
    "avg_bits_err_improve": 0,
    "time": 37124.813720703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma 2.0 (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (+ (pow B 2.0) (* (* A C) -4.0)) F)) (fma 2.0 (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (* (* A C) -4.0) F)) (* F (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (* A C) 8.0))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 44,
    "avg_bits_err_input": 52.20052644554488,
    "avg_bits_err_output": 52.02038258894483,
    "avg_bits_err_improve": 0.18014385660005416,
    "time": 37960.084228515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.173155062949267,
    "avg_bits_err_output": 16.173155062949267,
    "avg_bits_err_improve": 0,
    "time": 1722.484130859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.10844214362376,
    "avg_bits_err_output": 36.10844214362376,
    "avg_bits_err_improve": 0,
    "time": 32974.959716796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.990130264069442,
    "avg_bits_err_output": 0.990130264069442,
    "avg_bits_err_improve": 0,
    "time": 4969.54052734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6863101077719279,
    "avg_bits_err_output": 0.6863101077719279,
    "avg_bits_err_improve": 0,
    "time": 10749.58837890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.756077792918333,
    "avg_bits_err_output": 11.756077792918333,
    "avg_bits_err_improve": 0,
    "time": 21313.356689453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4106678932626421,
    "avg_bits_err_output": 0.3514693609377705,
    "avg_bits_err_improve": 0.0591985323248716,
    "time": 8296.542236328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (+ x (hypot 1.0 x)))",
    "output_parens": 3,
    "avg_bits_err_input": 53.188717752877125,
    "avg_bits_err_output": 45.22064463256449,
    "avg_bits_err_improve": 7.968073120312631,
    "time": 56078.576904296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.688435062155849,
    "avg_bits_err_output": 5.688435062155849,
    "avg_bits_err_improve": 0,
    "time": 30082.12890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (+ (+ (sqrt (/ (- 1.0 x) (- x -1.0))) 2.0) -2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.01525,
    "avg_bits_err_output": 0.034526128127343764,
    "avg_bits_err_improve": -0.019276128127343764,
    "time": 4205.51611328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1238.1904296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e-64) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (* w r) (- 0.375 (* v 0.25))))) (- 1.0 v))) (if (<= r 2e-118) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* w (* (- 0.375 (* v 0.25)) (- (* w (exp (log1p (* r r)))) w))) (- 1.0 v)))) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* (* w (* w r)) (* r 0.125)) (- 3.0 (+ v v))) (- 1.0 v))) 4.5)))",
    "output_parens": 45,
    "avg_bits_err_input": 13.409354168210111,
    "avg_bits_err_output": 7.712746178618929,
    "avg_bits_err_improve": 5.6966079895911825,
    "time": 31101.201171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) (+ x1 x1))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5119075524366935,
    "avg_bits_err_output": 0.2896583089229266,
    "avg_bits_err_improve": 0.2222492435137669,
    "time": 71890.74169921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.199758453382344,
    "avg_bits_err_output": 18.199758453382344,
    "avg_bits_err_improve": 0,
    "time": 31413.1767578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.24974869440854447,
    "avg_bits_err_output": 0.18134436093777043,
    "avg_bits_err_improve": 0.06840433347077404,
    "time": 14151.01318359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0,
    "time": 3636.65185546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.513709106071017,
    "avg_bits_err_output": 9.681004936493464,
    "avg_bits_err_improve": 4.832704169577553,
    "time": 48414.36767578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- 1.0 (- (- (* eps x) -1.0) (- x)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 29.52543822715212,
    "avg_bits_err_output": 0.9264650271370661,
    "avg_bits_err_improve": 28.598973200015052,
    "time": 30864.21044921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 12490.60205078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (- (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) 1.0)))",
    "output_parens": 27,
    "avg_bits_err_input": 0.017875,
    "avg_bits_err_output": 0.015125,
    "avg_bits_err_improve": 0.002749999999999999,
    "time": 32841.698974609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.047625,
    "avg_bits_err_output": 0.047625,
    "avg_bits_err_improve": 0,
    "time": 7715.571044921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3304.593017578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2380.867431640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2941.471435546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.856874630548388,
    "avg_bits_err_output": 0.2415,
    "avg_bits_err_improve": 7.615374630548388,
    "time": 55642.966064453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.5660326112087155,
    "avg_bits_err_output": 7.5660326112087155,
    "avg_bits_err_improve": 0,
    "time": 35014.162109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.333745352421747,
    "avg_bits_err_output": 15.333745352421747,
    "avg_bits_err_improve": 0,
    "time": 59726.887939453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (fma (+ (expm1 (* 10.0 (* x x))) 2.0) (* (+ (expm1 (* 10.0 (* x x))) 2.0) (/ (/ (cos x) (exp (* 10.0 (* x x)))) (+ (expm1 (* 10.0 (* x x))) 2.0))) 0.0) (+ (expm1 (* 10.0 (* x x))) 1.0)) (* (exp (* 10.0 (* x x))) (/ (cos x) (exp (* 10.0 (* x x))))))",
    "output_parens": 35,
    "avg_bits_err_input": 3.5732909029815776,
    "avg_bits_err_output": 3.5743282373520486,
    "avg_bits_err_improve": -0.0010373343704710436,
    "time": 36813.44873046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.26257073515229,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.26257073515229,
    "time": 4025.529052734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.62585231336359,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.625352313363585,
    "time": 3399.362060546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.295125,
    "avg_bits_err_improve": 63.704875,
    "time": 3770.894287109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.843251581151,
    "avg_bits_err_output": 0.36387443908530737,
    "avg_bits_err_improve": 61.479377142065694,
    "time": 27129.33447265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.13804826137772,
    "avg_bits_err_output": 33.138047667366116,
    "avg_bits_err_improve": 5.940116025726638e-07,
    "time": 25528.153076171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70310996181358,
    "avg_bits_err_output": 33.70310996181358,
    "avg_bits_err_improve": 0,
    "time": 26224.97314453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1766.79443359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.778903636442365,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 39.76665363644236,
    "time": 6642.080810546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.43269442652045,
    "avg_bits_err_output": 20.43269442652045,
    "avg_bits_err_improve": 0,
    "time": 7773.40966796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6682673616342902,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6682673616342902,
    "time": 4583.250244140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.037,
    "time": 7101.17578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma b b (* a (+ b (+ b a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.02454248125036058,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.02454248125036058,
    "time": 4822.06005859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": -0.0006250000000000006,
    "time": 4020.598876953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1333.91943359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ a (+ d (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40139417344137657,
    "avg_bits_err_output": 0.257375,
    "avg_bits_err_improve": 0.14401917344137655,
    "time": 8524.84716796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.175013497041636,
    "avg_bits_err_output": 30.175013497041636,
    "avg_bits_err_improve": 0,
    "time": 115945.40356445312,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.807716904491198,
    "avg_bits_err_output": 24.80277194022622,
    "avg_bits_err_improve": 0.004944964264979035,
    "time": 19234.85107421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (- x (sin x)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.112599360710764,
    "avg_bits_err_output": 30.112599360710764,
    "avg_bits_err_improve": 0,
    "time": 65301.008056640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005875,
    "avg_bits_err_output": 0.005875,
    "avg_bits_err_improve": 0,
    "time": 1723.183837890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.77211882117193,
    "avg_bits_err_output": 47.83690004576012,
    "avg_bits_err_improve": -0.06478122458818802,
    "time": 137477.83447265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.981051375107914,
    "avg_bits_err_output": 25.981051375107914,
    "avg_bits_err_improve": 0,
    "time": 98822.552734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.025556527964095,
    "avg_bits_err_output": 26.024983407651504,
    "avg_bits_err_improve": 0.0005731203125911577,
    "time": 20515.083251953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.036,
    "avg_bits_err_output": 0.022500203512582077,
    "avg_bits_err_improve": 0.01349979648741792,
    "time": 8638.91943359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (* (* (- ux (* ux maxCos)) (+ (* ux maxCos) (- 2.0 ux))) (* (- ux (* ux maxCos)) (* (- (fma ux maxCos 2.0) ux) (/ 1.0 (* (- ux (* ux maxCos)) (- (fma ux maxCos 2.0) ux))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 13.628666110642111,
    "avg_bits_err_output": 0.5281178336664025,
    "avg_bits_err_improve": 13.100548276975708,
    "time": 36309.41162109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (+ ux ux) (* ux (fma maxCos (- (fma ux maxCos (- 2.0 ux)) ux) ux)))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.67249297037591,
    "avg_bits_err_output": 0.31426591216564004,
    "avg_bits_err_improve": 13.35822705821027,
    "time": 36546.238037109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (* (sin (* (* PI (+ uy uy)) (* uy (/ 1.0 uy)))) yi))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.33726015310460555,
    "avg_bits_err_output": 0.3469242641782285,
    "avg_bits_err_improve": -0.009664111073622972,
    "time": 77392.7216796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20730650370629405,
    "avg_bits_err_output": 0.20718150370629404,
    "avg_bits_err_improve": 0.000125000000000014,
    "time": 22067.23046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (* (sin (* 6.28318530718 u2)) (* (sin (* 6.28318530718 u2)) (/ 1.0 (sin (* 6.28318530718 u2))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5367695534358211,
    "avg_bits_err_output": 0.5605088202606509,
    "avg_bits_err_improve": -0.02373926682482974,
    "time": 41075.494384765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (- (sqrt (/ u1 (- 1.0 u1)))) (- (exp (log1p (- (cos (* 6.28318530718 u2))))) 1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3323867862721689,
    "avg_bits_err_output": 0.34121231471187746,
    "avg_bits_err_improve": -0.008825528439708574,
    "time": 44088.444580078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (- (log1p (expm1 (+ -1.0 (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))))) -1.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.3336518788743524,
    "avg_bits_err_output": 0.3487469251455632,
    "avg_bits_err_improve": -0.015095046271210832,
    "time": 40696.018798828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (expm1 (log1p (+ 1.0 (exp (/ (- x) s))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06429548788115326,
    "avg_bits_err_output": 0.09268298179234942,
    "avg_bits_err_improve": -0.02838749391119616,
    "time": 33710.091064453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14993301787864208,
    "avg_bits_err_output": 0.1288584155023427,
    "avg_bits_err_improve": 0.02107460237629938,
    "time": 32436.022216796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (* (/ (sin (* x PI)) (* x PI)) (* (/ (sin (* x PI)) (* x PI)) (/ 1.0 (/ (sin (* x PI)) (* x PI))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6669101577778684,
    "avg_bits_err_output": 0.702520137750001,
    "avg_bits_err_improve": -0.035609979972132555,
    "time": 24062.408935546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (* v (log1p (* (- 1.0 u) (expm1 (/ -2.0 v))))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15813005669845615,
    "avg_bits_err_output": 0.2744096165228757,
    "avg_bits_err_improve": -0.11627955982441956,
    "time": 95278.3955078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4823853075992357,
    "avg_bits_err_output": 2.4797694026941106,
    "avg_bits_err_improve": 0.0026159049051250882,
    "time": 76926.60986328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (* (sinh (/ 1.0 v)) (- (/ 1.0 (sinh (/ 1.0 v))) (* (/ 1.0 (sinh (/ 1.0 v))) (- 1.0 (sinh (/ 1.0 v)))))) 2.0) v))",
    "output_parens": 24,
    "avg_bits_err_input": 0.46618866059225506,
    "avg_bits_err_output": 0.475461868871164,
    "avg_bits_err_improve": -0.009273208278908929,
    "time": 42299.333984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (+ (- 0.6931 (/ 1.0 v)) (expm1 (log1p (log (/ 1.0 (+ v v))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.11093281078861096,
    "avg_bits_err_output": 0.11021001790935475,
    "avg_bits_err_improve": 0.0007227928792562094,
    "time": 57896.358642578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (* alpha alpha)) (* PI (* (log (* alpha alpha)) (/ (/ PI PI) (log (* alpha alpha)))))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.466228432430596,
    "avg_bits_err_output": 0.48801905000973494,
    "avg_bits_err_improve": -0.02179061757913897,
    "time": 23332.4619140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (+ 1.0 (* (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))) (* (* (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))) (/ 1.0 (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))))) (* (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))) (/ (/ (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))) (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))))))) (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))))))))))))",
    "output_parens": 59,
    "avg_bits_err_input": 1.3193486567454937,
    "avg_bits_err_output": 1.3275449448341983,
    "avg_bits_err_improve": -0.00819628808870454,
    "time": 128682.81982421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.206946242590604,
    "avg_bits_err_output": 11.876106590560292,
    "avg_bits_err_improve": 0.3308396520303116,
    "time": 51800.932373046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12661813465590116,
    "avg_bits_err_output": 0.12661813465590116,
    "avg_bits_err_improve": 0,
    "time": 54570.5244140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) n1_i (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8848375306681342,
    "avg_bits_err_output": 0.8677392956188815,
    "avg_bits_err_improve": 0.017098235049252675,
    "time": 49151.669921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.6889490988543148,
    "avg_bits_err_output": 0.6889490988543148,
    "avg_bits_err_improve": 0,
    "time": 79080.67431640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(+ (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))) (fma (- (* (sin (* 2.0 (* PI u2))) (/ 1.0 (sin (* 2.0 (* PI u2)))))) (sin (* 2.0 (* PI u2))) (sin (* 2.0 (fma u2 (expm1 (log1p (* u2 (/ PI u2)))) 0.0)))))",
    "output_parens": 29,
    "avg_bits_err_input": 13.639527819892129,
    "avg_bits_err_output": 13.271016181637716,
    "avg_bits_err_improve": 0.3685116382544127,
    "time": 43499.758544921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (* PI (+ u2 u2))) (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 13.688588634235135,
    "avg_bits_err_output": 13.601182147131233,
    "avg_bits_err_improve": 0.08740648710390175,
    "time": 45039.689453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (* alpha (- alpha)) (fma (- (* alpha (- -1.0 (log (- 1.0 u0))))) (- alpha) (* alpha (- alpha (* (log (- 1.0 u0)) (- alpha))))))",
    "output_parens": 18,
    "avg_bits_err_input": 14.112642639836032,
    "avg_bits_err_output": 14.174835982775951,
    "avg_bits_err_improve": -0.06219334293991885,
    "time": 35152.318359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax)))) (* (/ cos2phi (* alphax alphax)) (* (/ -1.0 (/ cos2phi (* alphax alphax))) (* (/ cos2phi (* alphax alphax)) (/ -1.0 (/ cos2phi (* alphax alphax)))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 30,
    "avg_bits_err_input": 12.548936959150813,
    "avg_bits_err_output": 12.555253627484152,
    "avg_bits_err_improve": -0.006316668333338882,
    "time": 28287.27587890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+25) (- (* PI l) (* (* (/ 1.0 (* F F)) (- (+ 1.0 (/ 1.0 (* F F))) (/ 1.0 (* F F)))) (tan (* PI l)))) (if (<= (* PI l) 5e-23) (- (* PI l) (* (- (- (/ 1.0 (* F F)) -1.0) 1.0) (tan (* PI l)))) (- (* PI l) (* (* (/ 1.0 (* F F)) (- (+ 1.0 (/ 1.0 (* F F))) (/ 1.0 (* F F)))) (tan (* PI l))))))",
    "output_parens": 43,
    "avg_bits_err_input": 16.827125798040637,
    "avg_bits_err_output": 13.365659945316683,
    "avg_bits_err_improve": 3.461465852723954,
    "time": 38231.244140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21240808281331133,
    "avg_bits_err_output": 0.21074060156295074,
    "avg_bits_err_improve": 0.0016674812503605918,
    "time": 41628.80712890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (- (/ 1.0 (tan B))) x (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.72987245158614,
    "avg_bits_err_output": 13.727872451586139,
    "avg_bits_err_improve": 0.002000000000000668,
    "time": 45292.9326171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (- (+ (* (/ PI 4.0) f) 1.0) 1.0)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.54822637419554,
    "avg_bits_err_output": 2.0318159133107607,
    "avg_bits_err_improve": 59.516410460884785,
    "time": 71418.36645507812,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= (* l l) 9.5e+299) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 40,
    "avg_bits_err_input": 43.43996276536648,
    "avg_bits_err_output": 36.43553516713717,
    "avg_bits_err_improve": 7.004427598229313,
    "time": 35273.599853515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8436816310052255,
    "avg_bits_err_output": 3.8436816310052255,
    "avg_bits_err_improve": 0,
    "time": 53963.4462890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0800849081295463,
    "avg_bits_err_output": 1.0817099081295463,
    "avg_bits_err_improve": -0.0016249999999999876,
    "time": 14006.291015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (* n (- (* U (- t (* 2.0 (/ (* l l) Om)))) (* (pow (/ l Om) 2.0) (* n (* U (- U U*)))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 44,
    "avg_bits_err_input": 34.65783381182702,
    "avg_bits_err_output": 31.970788137796628,
    "avg_bits_err_improve": 2.68704567403039,
    "time": 31438.630126953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+57) (/ 2.0 (* (* (sin k) (tan k)) (* (tan k) (* (sin k) (/ (* (pow (/ k t) 2.0) (/ (pow t 3.0) (* l l))) (* (sin k) (tan k))))))) (/ 2.0 (* (pow (/ k t) 2.0) (+ (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))) (fma (- (sin k)) (* (tan k) (/ (sin k) (sin k))) (* (sin k) (tan k)))))))",
    "output_parens": 57,
    "avg_bits_err_input": 47.600965719084996,
    "avg_bits_err_output": 37.26106218247539,
    "avg_bits_err_improve": 10.339903536609604,
    "time": 55285.34521484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.70258891534153,
    "avg_bits_err_output": 32.67455325864328,
    "avg_bits_err_improve": 0.028035656698250477,
    "time": 38598.83837890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a2) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5150255672126525,
    "avg_bits_err_output": 0.5065774469000622,
    "avg_bits_err_improve": 0.008448120312590235,
    "time": 36315.354248046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* PI (* n (/ 2.0 PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5365099251197049,
    "avg_bits_err_output": 0.5416812786670202,
    "avg_bits_err_improve": -0.005171353547315349,
    "time": 53728.623046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- J) (exp (- l)) (* (exp (- l)) J)) (* J (+ (exp (- l)) (* (+ (- (exp l) (exp (- l))) (- (exp (- l)))) 1.0)))) (cos (/ K 2.0))) U)",
    "output_parens": 25,
    "avg_bits_err_input": 17.293928584652306,
    "avg_bits_err_output": 17.305799799425497,
    "avg_bits_err_improve": -0.01187121477319053,
    "time": 40904.879638671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -8e+182) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 1e+132) (* (cos (- (/ (* (* K (/ 1.0 K)) (* K (+ m n))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 64,
    "avg_bits_err_input": 15.446249203110485,
    "avg_bits_err_output": 10.037871371172455,
    "avg_bits_err_improve": 5.408377831938029,
    "time": 16778.135498046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.973542481250362,
    "avg_bits_err_output": 17.973542481250362,
    "avg_bits_err_improve": 0,
    "time": 31958.34228515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+304) (* w0 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))))) (* w0 (sqrt (- 1.0 (* (pow (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ 1.0 (log1p (expm1 (/ (* M D) (+ d d))))))) 2.0) (/ h l))))))",
    "output_parens": 57,
    "avg_bits_err_input": 14.15935888795238,
    "avg_bits_err_output": 13.47633403481721,
    "avg_bits_err_improve": 0.6830248531351693,
    "time": 62183.193115234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.553756028197697,
    "avg_bits_err_output": 19.553756028197697,
    "avg_bits_err_improve": 0,
    "time": 27730.475341796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.488770402858144,
    "avg_bits_err_output": 56.669377671556184,
    "avg_bits_err_improve": 2.81939273130196,
    "time": 52564.61376953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d h) 0.5) (* (- 1.0 (* 0.5 (* (/ h l) (pow (/ (* M D) (* d 2.0)) 2.0)))) (pow (/ d l) 0.5)))",
    "output_parens": 14,
    "avg_bits_err_input": 26.928219754942614,
    "avg_bits_err_output": 27.01672692077347,
    "avg_bits_err_improve": -0.08850716583085472,
    "time": 80058.26293945312,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (expm1 (log1p (/ 1.0 (hypot 1.0 x))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.2251660647968,
    "avg_bits_err_output": 15.22654512744705,
    "avg_bits_err_improve": -0.0013790626502494518,
    "time": 28537.760498046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9836462406251804,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": 0.971125,
    "time": 26970.836181640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44761267390050846,
    "avg_bits_err_output": 0.3800492812780824,
    "avg_bits_err_improve": 0.06756339262242606,
    "time": 28815.951904296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012719360937770433,
    "avg_bits_err_output": 0.01341748125036058,
    "avg_bits_err_improve": -0.0006981203125901465,
    "time": 13074.706298828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5217996194694392,
    "avg_bits_err_output": 0.5217996194694392,
    "avg_bits_err_improve": 0,
    "time": 14758.744140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.06863836397435,
    "avg_bits_err_output": 2.0035864842869398,
    "avg_bits_err_improve": 0.06505187968741044,
    "time": 10232.904052734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017803982015155383,
    "avg_bits_err_output": 0.017803982015155383,
    "avg_bits_err_improve": 0,
    "time": 7000.380126953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.1843212018417508,
    "avg_bits_err_output": 0.18517496121657046,
    "avg_bits_err_improve": -0.000853759374819657,
    "time": 53816.428466796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1849417761643687,
    "avg_bits_err_output": 0.1849417761643687,
    "avg_bits_err_improve": 0,
    "time": 39075.3916015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18395327522396127,
    "avg_bits_err_output": 0.18395327522396127,
    "avg_bits_err_improve": 0,
    "time": 27095.92138671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (+ 0.5 (* 0.5 (log (exp (/ x (sqrt (fma 4.0 (* p p) (* x x)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.511156673774472,
    "avg_bits_err_output": 13.51350069518821,
    "avg_bits_err_improve": -0.0023440214137373516,
    "time": 20735.45068359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.110354816562136,
    "avg_bits_err_output": 0.063,
    "avg_bits_err_improve": 41.047354816562134,
    "time": 6183.537353515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log1p (log1p (expm1 (expm1 (/ (- x (sin x)) (- x (tan x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.762109247225116,
    "avg_bits_err_output": 31.763168975039985,
    "avg_bits_err_improve": -0.0010597278148694045,
    "time": 26570.845947265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.13426978784239,
    "avg_bits_err_output": 34.13426978784239,
    "avg_bits_err_improve": 0,
    "time": 33447.768310546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* a c) (- (* b_2 b_2) (* (* a c) 2.0))))) a)",
    "output_parens": 10,
    "avg_bits_err_input": 34.2973491957779,
    "avg_bits_err_output": 34.298655141033294,
    "avg_bits_err_improve": -0.0013059452553960682,
    "time": 18295.107666015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(log1p (expm1 (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.54762944792096,
    "avg_bits_err_output": 31.547700673166766,
    "avg_bits_err_improve": -7.122524580438494e-05,
    "time": 26802.51123046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.52726198764511,
    "avg_bits_err_output": 32.52726198764511,
    "avg_bits_err_improve": 0,
    "time": 15730.906982421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (* (log N) (+ (/ (log N) (log N)) (- (/ (- -1.0 (log N)) (log N)) (/ -1.0 (log N))))) (- (log1p N) (log N)))",
    "output_parens": 17,
    "avg_bits_err_input": 29.188278670226154,
    "avg_bits_err_output": 29.19753606957987,
    "avg_bits_err_improve": -0.00925739935371439,
    "time": 26679.605712890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -8.5e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 1.25e+154) (- (- (* (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (+ 1.0 (/ 1.0 (/ 1.0 (+ 1.0 x))))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (+ (+ (/ 1.0 (+ 1.0 x)) (* (/ 1.0 x) 2.0)) (* (/ 1.0 x) -3.0))))",
    "output_parens": 34,
    "avg_bits_err_input": 14.899962691339875,
    "avg_bits_err_output": 3.90771893136378,
    "avg_bits_err_improve": 10.992243759976095,
    "time": 70787.48022460938,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (* (cos (+ x eps)) (* (/ (/ 1.0 (cos (+ x eps))) (cos (+ x eps))) (log1p (expm1 (* (cos (+ x eps)) (cos (+ x eps))))))) (cos x))",
    "output_parens": 19,
    "avg_bits_err_input": 39.72788865800732,
    "avg_bits_err_output": 39.82176197822197,
    "avg_bits_err_improve": -0.093873320214648,
    "time": 46432.437255859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.449209773693745,
    "avg_bits_err_output": 29.161806043769925,
    "avg_bits_err_improve": 0.28740372992382035,
    "time": 31517.73583984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.38121018738277,
    "avg_bits_err_output": 29.38121018738277,
    "avg_bits_err_improve": 0,
    "time": 132463.44677734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.09578963633692,
    "avg_bits_err_output": 34.095156801186484,
    "avg_bits_err_improve": 0.0006328351504336638,
    "time": 24400.0283203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.95) (/ (* (* (log (- 1.0 x)) (/ 1.0 (- (+ 1.0 (log (- 1.0 x))) 1.0))) (log (- 1.0 x))) (- (- (log1p x) 1.0) -1.0)) (/ (- (- (log (- 1.0 x)) 1.0) -1.0) (log1p x)))",
    "output_parens": 28,
    "avg_bits_err_input": 61.26492470872319,
    "avg_bits_err_output": 58.97838360129929,
    "avg_bits_err_improve": 2.2865411074239006,
    "time": 78420.53051757812,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log (+ n 1.0)) (+ (- -1.0 (* n (log n))) (* n (log (+ n 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 63.00460421687091,
    "avg_bits_err_output": 0.648,
    "avg_bits_err_improve": 62.356604216870906,
    "time": 29129.399169921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.61421781599877,
    "avg_bits_err_output": 58.63377001871932,
    "avg_bits_err_improve": -0.01955220272054703,
    "time": 70521.08911132812,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log (+ (+ (exp (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x))))) 2.0) -2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 59.95428283110227,
    "avg_bits_err_output": 59.95474523800272,
    "avg_bits_err_improve": -0.00046240690045351585,
    "time": 61661.6650390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.32324488120562,
    "avg_bits_err_output": 40.54043176072831,
    "avg_bits_err_improve": 19.782813120477307,
    "time": 30260.463623046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.37114770170423,
    "avg_bits_err_output": 0.4982260303549763,
    "avg_bits_err_improve": 40.87292167134925,
    "time": 17096.73876953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.694040926597964,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.693415926597964,
    "time": 3457.681640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.25158828609527,
    "avg_bits_err_output": 0.01600607606577124,
    "avg_bits_err_improve": 29.2355822100295,
    "time": 3994.966796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.636062920659565,
    "avg_bits_err_output": 28.658079784944363,
    "avg_bits_err_improve": 0.9779831357152027,
    "time": 25542.1572265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.084907377362468,
    "avg_bits_err_output": 10.084907377362468,
    "avg_bits_err_improve": 0,
    "time": 83649.10327148438,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.269582755506676,
    "avg_bits_err_output": 37.269582755506676,
    "avg_bits_err_improve": 0,
    "time": 34124.23046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(fma (+ 1.0 (sqrt (+ 1.0 x))) (/ 1.0 (+ 1.0 (sqrt (+ 1.0 x)))) (log1p (expm1 (- (fma (+ 1.0 (sqrt (+ 1.0 x))) (/ (sqrt (+ 1.0 x)) (+ 1.0 (sqrt (+ 1.0 x)))) -1.0) (sqrt x)))))",
    "output_parens": 22,
    "avg_bits_err_input": 29.50086927330795,
    "avg_bits_err_output": 28.753009581134336,
    "avg_bits_err_improve": 0.7478596921736127,
    "time": 34827.60693359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.201022185864595,
    "avg_bits_err_output": 37.201022185864595,
    "avg_bits_err_improve": 0,
    "time": 40976.777099609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 20.403880175719536,
    "avg_bits_err_output": 20.403880175719536,
    "avg_bits_err_improve": 0,
    "time": 61847.03271484375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (atan (+ 1.0 N)) (+ -1.0 (+ (- 3.0 (atan N)) -2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 14.088187256374939,
    "avg_bits_err_output": 14.10494585618711,
    "avg_bits_err_improve": -0.01675859981217087,
    "time": 26658.06103515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp b) (expm1 a)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.37658192425628,
    "avg_bits_err_output": 15.417596337266538,
    "avg_bits_err_improve": 13.95898558698974,
    "time": 60817.869384765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 (/ (- m (* m m)) v)) (* (+ m -1.0) (* (+ m -1.0) (/ 1.0 (+ m -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.0742920849918798,
    "avg_bits_err_output": 0.08456068912007972,
    "avg_bits_err_improve": -0.010268604128199924,
    "time": 32891.0576171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.250279562481776,
    "avg_bits_err_output": 0.31243665469173687,
    "avg_bits_err_improve": 15.937842907790039,
    "time": 16278.830322265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma PI (/ angle 180.0) (fma (- (/ angle 180.0)) (- PI) (* PI (- (/ angle 180.0))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.38239609746375,
    "avg_bits_err_output": 20.39482616669639,
    "avg_bits_err_improve": -0.01243006923263934,
    "time": 75915.25024414062,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (/ (- (pow b 2.0) (pow a 2.0)) (cos (* PI (/ angle 180.0)))) (* (sin (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 31.088215511093885,
    "avg_bits_err_output": 31.095009009833916,
    "avg_bits_err_improve": -0.006793498740030657,
    "time": 55051.0537109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (- (* (/ angle 180.0) (* (* PI PI) (exp (log1p (/ (/ (/ angle 180.0) (/ angle 180.0)) PI))))) (* (/ angle 180.0) (* PI PI))))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 20.56853517139335,
    "avg_bits_err_output": 20.59258100499717,
    "avg_bits_err_improve": -0.02404583360382162,
    "time": 65820.904296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17595056406367185,
    "avg_bits_err_output": 0.17476045370222215,
    "avg_bits_err_improve": 0.0011901103614496977,
    "time": 33396.177734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3189410841024603,
    "avg_bits_err_output": 0.31038988561268716,
    "avg_bits_err_improve": 0.008551198489773149,
    "time": 32153.69384765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.14049060156295073,
    "avg_bits_err_output": 0.14049060156295073,
    "avg_bits_err_improve": 0,
    "time": 35006.41943359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.351595573944635,
    "avg_bits_err_output": 16.348689768928722,
    "avg_bits_err_improve": 0.002905805015913643,
    "time": 50688.001708984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.6e+16) (/ (- (* (sqrt (fma b b (* a (* c -4.0)))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b) (+ a a)) (/ (- (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b)) 1.0) (* a 2.0)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.37542226341931,
    "avg_bits_err_output": 50.62992433813265,
    "avg_bits_err_improve": 1.7454979252866565,
    "time": 28773.795166015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -8e-9) (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a)) (/ (- (log (+ (+ (exp (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b))) 2.0) -2.0)) 1.0) (* a 2.0)))",
    "output_parens": 31,
    "avg_bits_err_input": 28.841902841350603,
    "avg_bits_err_output": 27.67054116933303,
    "avg_bits_err_improve": 1.1713616720175715,
    "time": 21172.865234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-19) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (sqrt (- (+ (exp (log1p (* b b))) (* a (* c -4.0))) 1.0)) b) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 43.7664966882125,
    "avg_bits_err_output": 42.88252176208264,
    "avg_bits_err_improve": 0.8839749261298593,
    "time": 32202.650390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.09730309892419,
    "avg_bits_err_output": 34.095156801186484,
    "avg_bits_err_improve": 0.0021462977377098014,
    "time": 20606.09765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (expm1 (log1p (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9115798475594101,
    "avg_bits_err_output": 0.9237694725799128,
    "avg_bits_err_improve": -0.012189625020502692,
    "time": 46322.443603515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 28.889383349182452,
    "avg_bits_err_output": 28.890710559014746,
    "avg_bits_err_improve": -0.0013272098322936188,
    "time": 8258.775634765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.0612262879322,
    "avg_bits_err_output": 1.2429293234384917,
    "avg_bits_err_improve": 56.81829696449371,
    "time": 10887.462890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.71578129667867,
    "avg_bits_err_output": 0.00825,
    "avg_bits_err_improve": 57.707531296678674,
    "time": 8864.0361328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.007719360937770434,
    "avg_bits_err_output": 0.09378928621442392,
    "avg_bits_err_improve": -0.08606992527665348,
    "time": 4813.317626953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.89775,
    "avg_bits_err_output": 31.89775,
    "avg_bits_err_improve": 0,
    "time": 6284.654541015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 58.60761187666961,
    "avg_bits_err_output": 58.6053194322978,
    "avg_bits_err_improve": 0.0022924443718110865,
    "time": 23920.56103515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.05141524101186092,
    "avg_bits_err_output": 0.05141524101186092,
    "avg_bits_err_improve": 0,
    "time": 4642.623291015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t)))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12225,
    "avg_bits_err_output": 0.1215,
    "avg_bits_err_improve": 0.0007500000000000007,
    "time": 30928.87158203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1295,
    "avg_bits_err_output": 0.1295,
    "avg_bits_err_improve": 0,
    "time": 26488.344482421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 40.385934374038776,
    "avg_bits_err_output": 3.778640136639726,
    "avg_bits_err_improve": 36.60729423739905,
    "time": 52284.9052734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.264119382402065,
    "avg_bits_err_output": 14.264119382402065,
    "avg_bits_err_improve": 0,
    "time": 5165.214111328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (fma (* (sin theta) (/ (sin delta) (sin theta))) (sin theta) 0.0) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.1612182612364986,
    "avg_bits_err_output": 0.16802352747816662,
    "avg_bits_err_improve": -0.006805266241668023,
    "time": 45018.0732421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-30) (* (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* a 3.0)) (* (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* a 3.0)) (/ 1.0 (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* a 3.0))))) (/ (fma (/ 1.0 (sqrt (log1p (expm1 (fma c (* a -3.0) (* b b)))))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)))",
    "output_parens": 55,
    "avg_bits_err_input": 52.381283108553,
    "avg_bits_err_output": 50.525285092496304,
    "avg_bits_err_improve": 1.8559980160566951,
    "time": 58109.9970703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ (sqrt (fma b b (* a (* c -3.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (- b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 29.000176910769337,
    "avg_bits_err_output": 28.66837386837903,
    "avg_bits_err_improve": 0.33180304239030534,
    "time": 27692.419677734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-19) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (fma (/ 1.0 (sqrt (log (+ 1.0 (expm1 (fma c (* a -3.0) (* b b))))))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)))",
    "output_parens": 39,
    "avg_bits_err_input": 43.800473786413896,
    "avg_bits_err_output": 42.192094202502886,
    "avg_bits_err_improve": 1.6083795839110095,
    "time": 28022.78759765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.136680201286005,
    "avg_bits_err_output": 34.136680201286005,
    "avg_bits_err_improve": 0,
    "time": 34078.36474609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (fma (* (cos (- lambda1 lambda2)) (cos phi2)) (* (cos (- lambda1 lambda2)) (* (/ (sin phi1) (* (cos (- lambda1 lambda2)) (cos phi2))) (cos phi2))) 0.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 13.090280293143818,
    "avg_bits_err_output": 13.09580141243888,
    "avg_bits_err_improve": -0.005521119295060828,
    "time": 58585.26708984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (* (/ 1.0 (/ x (+ 1.0 x))) (* (/ x (+ 1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.03982312031259015,
    "avg_bits_err_improve": -0.028323120312590152,
    "time": 9305.061279296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (* (/ 1.0 (+ -1.0 x)) (- (- (* (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ -1.0 (/ 1.0 (+ -1.0 x))))) -1.0) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))))",
    "output_parens": 20,
    "avg_bits_err_input": 14.87853005323882,
    "avg_bits_err_output": 14.374569561367467,
    "avg_bits_err_improve": 0.5039604918713518,
    "time": 54805.418701171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma C (* (+ F F) (- (pow B 2.0) (* A (* C 4.0)))) (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (* (+ F F) (- (* A (* C 4.0)) (pow B 2.0))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 52.28084410863378,
    "avg_bits_err_output": 51.95750079580235,
    "avg_bits_err_improve": 0.32334331283142603,
    "time": 43394.0537109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C (- (+ A 1.0) 1.0)) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 29.631214795776373,
    "avg_bits_err_output": 29.84515333298928,
    "avg_bits_err_improve": -0.21393853721290768,
    "time": 42750.18505859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.13494609591828,
    "avg_bits_err_output": 51.85274961858212,
    "avg_bits_err_improve": 0.28219647733615716,
    "time": 38829.877685546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.375658357687337,
    "avg_bits_err_output": 15.375658357687337,
    "avg_bits_err_improve": 0,
    "time": 1865.679443359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.11006560959621,
    "avg_bits_err_output": 36.11006560959621,
    "avg_bits_err_improve": 0,
    "time": 37558.421142578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9898921062575732,
    "avg_bits_err_output": 0.9898921062575732,
    "avg_bits_err_improve": 0,
    "time": 4780.046142578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.5634481203125902,
    "avg_bits_err_output": 0.5634481203125902,
    "avg_bits_err_improve": 0,
    "time": 3332.5869140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.160701667980266,
    "avg_bits_err_output": 11.160701667980266,
    "avg_bits_err_improve": 0,
    "time": 18716.552734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49714040828653017,
    "avg_bits_err_output": 0.44719812031259015,
    "avg_bits_err_improve": 0.049942287973940014,
    "time": 8833.739501953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.115667577270706,
    "avg_bits_err_output": 15.329017592399001,
    "avg_bits_err_improve": 37.7866499848717,
    "time": 140902.38720703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.680914404955915,
    "avg_bits_err_output": 5.681142041675973,
    "avg_bits_err_improve": -0.00022763672005865487,
    "time": 25851.921142578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.013375,
    "avg_bits_err_improve": 0,
    "time": 5173.111083984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1158.104248046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (/ (* (* w r) (* w r)) 1.0)) (- 1.0 v))) 4.5)",
    "output_parens": 15,
    "avg_bits_err_input": 13.229562452244346,
    "avg_bits_err_output": 7.2183175805239195,
    "avg_bits_err_improve": 6.011244871720427,
    "time": 30767.029296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) (+ x1 x1))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5125338784601732,
    "avg_bits_err_output": 0.2890207686353107,
    "avg_bits_err_improve": 0.2235131098248625,
    "time": 73949.43017578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.856409227374165,
    "avg_bits_err_output": 17.856409227374165,
    "avg_bits_err_improve": 0,
    "time": 34468.65966796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.22539340061561777,
    "avg_bits_err_output": 0.18787673793068907,
    "avg_bits_err_improve": 0.0375166626849287,
    "time": 20231.6005859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2968.80517578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.761072592660604,
    "avg_bits_err_output": 9.228836502032523,
    "avg_bits_err_improve": 4.53223609062808,
    "time": 43867.384765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.204602081864202,
    "avg_bits_err_output": 0.8963239148839316,
    "avg_bits_err_improve": 28.30827816698027,
    "time": 23025.5419921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- (- (* (- (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 3.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))) (+ (* 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) -4.0)) (- (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 27,
    "avg_bits_err_input": 0.019375,
    "avg_bits_err_output": 0.022125,
    "avg_bits_err_improve": -0.002749999999999999,
    "time": 17660.45458984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.023,
    "avg_bits_err_output": 0.023,
    "avg_bits_err_improve": 0,
    "time": 52813.712646484375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (+ (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) 2.0) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.036625,
    "avg_bits_err_improve": 0.003500000000000003,
    "time": 22602.370361328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2934.509033203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2404.642333984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3631.0546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.859650380151461,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 7.6109003801514605,
    "time": 51615.151123046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.644378882563689,
    "avg_bits_err_output": 7.644378882563689,
    "avg_bits_err_improve": 0,
    "time": 41995.5078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.52739149729937,
    "avg_bits_err_output": 16.52739149729937,
    "avg_bits_err_improve": 0,
    "time": 55075.45068359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (* (cos x) (* (- (- (exp (* 10.0 (* x x))))) (* (/ 1.0 (exp (* 10.0 (* x x)))) (/ (/ (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x)))) (exp (* 10.0 (* x x)))))))))",
    "output_parens": 32,
    "avg_bits_err_input": 3.5098863314918933,
    "avg_bits_err_output": 3.514058956433691,
    "avg_bits_err_improve": -0.004172624941797487,
    "time": 46918.44775390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.124525152334634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.124525152334634,
    "time": 5895.833251953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.42814559085069,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.42789559085069,
    "time": 4712.132080078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.302375,
    "avg_bits_err_improve": 63.697625,
    "time": 3393.481689453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 4e-32) (* 8e-32 (* t (/ 1.0 (* t 8e-32))))))",
    "output_parens": 7,
    "avg_bits_err_input": 61.843251666115286,
    "avg_bits_err_output": 0.39448120312590146,
    "avg_bits_err_improve": 61.44877046298939,
    "time": 25726.49755859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.09730309892419,
    "avg_bits_err_output": 34.095156801186484,
    "avg_bits_err_improve": 0.0021462977377098014,
    "time": 28143.590087890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 4657.371826171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.957346973747235,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 39.949221973747235,
    "time": 4796.952880859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.07051112173985,
    "avg_bits_err_output": 20.07051112173985,
    "avg_bits_err_improve": 0,
    "time": 2724.321044921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6618832283851797,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6618832283851797,
    "time": 7774.881591796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.035375,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.034874999999999996,
    "time": 9310.477294921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.023698120312590144,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.013323120312590144,
    "time": 5530.278564453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.01325,
    "time": 5517.66259765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 1538.7880859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ c a) (+ d b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40413477500432715,
    "avg_bits_err_output": 0.241,
    "avg_bits_err_improve": 0.16313477500432716,
    "time": 7932.85498046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.33689209056337,
    "avg_bits_err_output": 29.33689209056337,
    "avg_bits_err_improve": 0,
    "time": 110816.35009765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (expm1 (expm1 (log1p (log1p (sqrt (- (* x x) eps)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 24.32207227533444,
    "avg_bits_err_output": 24.382193057553103,
    "avg_bits_err_improve": -0.06012078221866446,
    "time": 41754.657958984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.891511944556225,
    "avg_bits_err_output": 29.891876632181834,
    "avg_bits_err_improve": -0.00036468762560915025,
    "time": 62004.428955078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.008719360937770431,
    "avg_bits_err_output": 0.008719360937770431,
    "avg_bits_err_improve": 0,
    "time": 1600.6298828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.55933602860441,
    "avg_bits_err_output": 47.59986702835558,
    "avg_bits_err_improve": -0.04053099975116936,
    "time": 104671.91918945312,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.282295503603127,
    "avg_bits_err_output": 26.282295503603127,
    "avg_bits_err_improve": 0,
    "time": 30013.019775390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a d) (fma (* d -2.0) a (* c b))) (+ (* c c) (* d d)))",
    "output_parens": 9,
    "avg_bits_err_input": 25.908890223171973,
    "avg_bits_err_output": 25.910543159747828,
    "avg_bits_err_improve": -0.0016529365758550796,
    "time": 18609.061767578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03425,
    "avg_bits_err_output": 0.024210878354688034,
    "avg_bits_err_improve": 0.010039121645311969,
    "time": 7158.26318359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (* (* (- ux (* ux maxCos)) (+ (* ux maxCos) (- 2.0 ux))) (* (* (- ux (* ux maxCos)) (+ (* ux maxCos) (- 2.0 ux))) (/ 1.0 (* (- ux (* ux maxCos)) (+ (* ux maxCos) (- 2.0 ux))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 13.532161296898241,
    "avg_bits_err_output": 0.5346081801125163,
    "avg_bits_err_improve": 12.997553116785726,
    "time": 26183.390380859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (fma ux (* (+ -2.0 (- ux (* ux maxCos))) (+ maxCos -1.0)) (fma (- (+ ux -2.0)) (- ux (* ux maxCos)) (* (- ux (* ux maxCos)) (+ ux -2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.571100165100978,
    "avg_bits_err_output": 0.3576556615094004,
    "avg_bits_err_improve": 13.213444503591578,
    "time": 36350.428955078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (- 1.0 ux) (* ux (* maxCos zi))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33834245490952625,
    "avg_bits_err_output": 0.3385557288030075,
    "avg_bits_err_improve": -0.00021327389348124726,
    "time": 74302.8779296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20443398826188036,
    "avg_bits_err_output": 0.2047571085744705,
    "avg_bits_err_improve": -0.0003231203125901305,
    "time": 20774.900390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (log1p (expm1 (sqrt (/ u1 (- 1.0 u1))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5322783060501183,
    "avg_bits_err_output": 0.5388138326145117,
    "avg_bits_err_improve": -0.006535526564393379,
    "time": 53464.4365234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.32006129259685334,
    "avg_bits_err_output": 0.32006129259685334,
    "avg_bits_err_improve": 0,
    "time": 48084.973876953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (- (fma s (/ 1.0 s) -1.0) (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3359695363788537,
    "avg_bits_err_output": 0.41034741732172364,
    "avg_bits_err_improve": -0.07437788094286996,
    "time": 37446.110107421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05602140916728211,
    "avg_bits_err_output": 0.05516270029860545,
    "avg_bits_err_improve": 0.000858708868676665,
    "time": 42206.921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (+ (expm1 (/ (- (fabs x)) s)) 1.0) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13045220970122418,
    "avg_bits_err_output": 0.11194855564133345,
    "avg_bits_err_improve": 0.018503654059890726,
    "time": 28264.762451171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6725636303603195,
    "avg_bits_err_output": 0.6763994120276566,
    "avg_bits_err_improve": -0.0038357816673371126,
    "time": 19623.97314453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (* (/ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.15501197676078995,
    "avg_bits_err_output": 0.1598597345282149,
    "avg_bits_err_improve": -0.004847757767424937,
    "time": 29576.027099609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.6561803163408895,
    "avg_bits_err_output": 2.65427467727866,
    "avg_bits_err_improve": 0.0019056390622296249,
    "time": 76314.67797851562,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (* v v) (/ (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v v))) (* v v)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.4647366230633134,
    "avg_bits_err_output": 0.486900686066417,
    "avg_bits_err_improve": -0.022164063003103585,
    "time": 43062.61279296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.13299457682521126,
    "avg_bits_err_output": 0.13299457682521126,
    "avg_bits_err_improve": 0,
    "time": 7659.76513671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (- (* alpha (* cosTheta alpha)) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4683460707194643,
    "avg_bits_err_output": 0.46872107071946434,
    "avg_bits_err_improve": -0.0003750000000000142,
    "time": 22500.562255859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* s (* s (/ (* (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) (/ (* s 3.0) (* s 3.0))) (* s 3.0)))) 9.0)",
    "output_parens": 14,
    "avg_bits_err_input": 1.3189906511052305,
    "avg_bits_err_output": 1.3857103136669626,
    "avg_bits_err_improve": -0.06671966256173212,
    "time": 44986.136474609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.41898949309484,
    "avg_bits_err_output": 12.050445324403645,
    "avg_bits_err_improve": 0.36854416869119433,
    "time": 61010.932861328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* (* 6.0 s) (/ PI s))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1354666053125164,
    "avg_bits_err_output": 0.1446227561635502,
    "avg_bits_err_improve": -0.0091561508510338,
    "time": 77615.44799804688,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8720949351974231,
    "avg_bits_err_output": 0.8616307190448435,
    "avg_bits_err_improve": 0.010464216152579642,
    "time": 41341.11181640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (- (/ 1.0 (sqrt PI)) (- (* (/ 1.0 (sqrt PI)) (+ 1.0 (/ 1.0 (sqrt PI)))) (+ (* 1.0 (* (/ 1.0 (sqrt PI)) (/ 1.0 (sqrt PI)))) (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.7015683320417706,
    "avg_bits_err_output": 0.7163269148283956,
    "avg_bits_err_improve": -0.014758582786625007,
    "time": 60945.578369140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(+ (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))) (fma (- (* (sin (* 2.0 (* PI u2))) (/ 1.0 (sin (* 2.0 (fma (* PI u2) (* PI (expm1 (log1p (* u2 (/ 1.0 (* PI u2)))))) 0.0)))))) (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 32,
    "avg_bits_err_input": 13.702145640368503,
    "avg_bits_err_output": 13.318636265872298,
    "avg_bits_err_improve": 0.3835093744962048,
    "time": 60653.61279296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (* PI (+ u2 u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 13.752268772711531,
    "avg_bits_err_output": 13.686464028056726,
    "avg_bits_err_improve": 0.06580474465480535,
    "time": 44584.735107421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* (+ 1.0 (/ (log (- 1.0 u0)) alpha)) (* alpha (- alpha))) (* alpha (* alpha (- alpha 0.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 14.252310686522181,
    "avg_bits_err_output": 13.887203368059144,
    "avg_bits_err_improve": 0.36510731846303734,
    "time": 38780.975830078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.511917658031727,
    "avg_bits_err_output": 12.516724958269606,
    "avg_bits_err_improve": -0.0048073002378785645,
    "time": 30307.441650390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* (/ l PI) (* PI PI)) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.467013265433167,
    "avg_bits_err_output": 16.488763266370658,
    "avg_bits_err_improve": -0.02175000093749091,
    "time": 31597.46337890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.213636842188131,
    "avg_bits_err_output": 0.213636842188131,
    "avg_bits_err_improve": 0,
    "time": 32837.2470703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 14.485261577706648,
    "avg_bits_err_output": 14.485261577706648,
    "avg_bits_err_improve": 0,
    "time": 40679.274658203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (fma (/ PI 4.0) (- f) (fma (- f) (/ PI 4.0) (* (/ PI 4.0) f)))))))))",
    "output_parens": 27,
    "avg_bits_err_input": 61.58862009234665,
    "avg_bits_err_output": 2.036082559151781,
    "avg_bits_err_improve": 59.55253753319487,
    "time": 61215.661376953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -2.45e-147) (/ (* (* (* (sqrt 2.0) t) (/ 1.0 (* (sqrt 2.0) t))) (* (sqrt 2.0) t)) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 1.22e-182) (/ (* (sqrt 2.0) t) (sqrt (expm1 (log1p (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 61,
    "avg_bits_err_input": 42.7452470102987,
    "avg_bits_err_output": 35.81268461298242,
    "avg_bits_err_improve": 6.932562397316275,
    "time": 32541.235595703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9675895151539873,
    "avg_bits_err_output": 3.9675895151539873,
    "avg_bits_err_improve": 0,
    "time": 75453.68041992188,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.967667200391513,
    "avg_bits_err_output": 0.967667200391513,
    "avg_bits_err_improve": 0,
    "time": 10252.281982421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-235) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (- U U*) (pow (/ l Om) 2.0)))) (* 2.0 n)))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 43,
    "avg_bits_err_input": 34.772395436123226,
    "avg_bits_err_output": 32.991829719600936,
    "avg_bits_err_improve": 1.7805657165222897,
    "time": 33599.35546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -2.3e-102) (/ 2.0 (* (pow (/ k t) 2.0) (* (tan k) (* (/ (pow t 3.0) (* l l)) (sin k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (tan k) (- (sin k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.968548489729244,
    "avg_bits_err_output": 38.81529343248236,
    "avg_bits_err_improve": 9.15325505724688,
    "time": 51604.14990234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+278) (/ 2.0 (fma (tan k) (* (tan k) (/ (* (sin k) (* (/ (pow t 3.0) (* l l)) (+ 2.0 (pow (/ k t) 2.0)))) (tan k))) 0.0)) (/ 2.0 (* (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))))",
    "output_parens": 50,
    "avg_bits_err_input": 33.357204472368096,
    "avg_bits_err_output": 30.971070216894336,
    "avg_bits_err_improve": 2.3861342554737597,
    "time": 54944.351806640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma a1 (* (/ (cos th) (sqrt 2.0)) a1) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5120276343964563,
    "avg_bits_err_output": 0.493216356271997,
    "avg_bits_err_improve": 0.018811278124459263,
    "time": 43231.21630859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* PI (* (+ n n) (/ (/ n n) PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5343900507637622,
    "avg_bits_err_output": 0.539236562317911,
    "avg_bits_err_improve": -0.004846511554148725,
    "time": 39820.070556640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (+ (* (- (exp l) (exp (- l))) (cos (/ K 2.0))) (fma (- (exp l)) (- (cos (/ K 2.0))) (* (exp l) (- (cos (/ K 2.0)))))) U)",
    "output_parens": 20,
    "avg_bits_err_input": 17.52382925669616,
    "avg_bits_err_output": 17.523607231997033,
    "avg_bits_err_improve": 0.0002220246991271324,
    "time": 40265.9091796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -1.28e+41) (* (cos (- (/ (* K (* K (- (* (- (* K (/ (+ 1.0 (+ m n)) K)) (* (/ K K) (/ K K))) (exp (log1p (/ (/ K K) K)))) (- (* K (/ (+ 1.0 (+ m n)) K)) (* (/ K K) (/ K K)))))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 1e+15) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* K (- (* (- (* K (/ (+ 1.0 (+ m n)) K)) (* (/ K K) (/ K K))) (exp (log1p (/ (/ K K) K)))) (- (* K (/ (+ 1.0 (+ m n)) K)) (* (/ K K) (/ K K)))))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 93,
    "avg_bits_err_input": 15.372463040371839,
    "avg_bits_err_output": 1.4798851656836227,
    "avg_bits_err_improve": 13.892577874688216,
    "time": 18362.718994140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.87244812031259,
    "avg_bits_err_output": 18.87244812031259,
    "avg_bits_err_improve": 0,
    "time": 25320.164306640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.208183454186809,
    "avg_bits_err_output": 14.208183454186809,
    "avg_bits_err_improve": 0,
    "time": 7544.071044921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.039959213284444,
    "avg_bits_err_output": 19.039959213284444,
    "avg_bits_err_improve": 0,
    "time": 24615.2958984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* h D)))) (sqrt (fma (/ (* d (* c0 d)) (* D (* w (* h D)))) (/ (* d (* c0 d)) (* D (* w (* h D)))) (* M (- M))))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.97466461697975,
    "avg_bits_err_output": 56.80723638845538,
    "avg_bits_err_improve": 3.167428228524372,
    "time": 32302.29638671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* (pow (/ d l) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (* (/ h l) (pow (/ d h) 0.5)) 0.5))))",
    "output_parens": 19,
    "avg_bits_err_input": 27.179215347818232,
    "avg_bits_err_output": 26.61931054453473,
    "avg_bits_err_improve": 0.5599048032835015,
    "time": 50146.253662109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 16.0976448010201,
    "avg_bits_err_output": 16.0976448010201,
    "avg_bits_err_improve": 0,
    "time": 37749.414794921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9851981203125901,
    "avg_bits_err_output": 0.010990601562950723,
    "avg_bits_err_improve": 0.9742075187496394,
    "time": 8508.284423828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) t))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4699651755792754,
    "avg_bits_err_output": 0.4032384833882595,
    "avg_bits_err_improve": 0.0667266921910159,
    "time": 22060.378662109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011448120312590146,
    "avg_bits_err_output": 0.009698120312590146,
    "avg_bits_err_improve": 0.0017499999999999998,
    "time": 15386.326171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5498065734829228,
    "avg_bits_err_output": 0.5498065734829228,
    "avg_bits_err_improve": 0,
    "time": 8658.45849609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.8855198915566997,
    "avg_bits_err_output": 1.8855198915566997,
    "avg_bits_err_improve": 0,
    "time": 11815.7001953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.023025757404635052,
    "avg_bits_err_output": 0.023025757404635052,
    "avg_bits_err_improve": 0,
    "time": 13146.7734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(fma b (* b 4.0) (+ (pow (fma a a (* b b)) 2.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.18252857187842536,
    "avg_bits_err_output": 0.18241297031547463,
    "avg_bits_err_improve": 0.00011560156295073454,
    "time": 38368.520751953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18674133035577506,
    "avg_bits_err_output": 0.1865432100431849,
    "avg_bits_err_improve": 0.00019812031259017204,
    "time": 40131.3994140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18881329892135118,
    "avg_bits_err_output": 0.18881329892135118,
    "avg_bits_err_improve": 0,
    "time": 6397.435546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (+ 1.0 (expm1 (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.46761535571047,
    "avg_bits_err_output": 13.4735993299632,
    "avg_bits_err_improve": -0.005983974252730562,
    "time": 17948.0908203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.82770324993401,
    "avg_bits_err_output": 0.073375,
    "avg_bits_err_improve": 40.75432824993401,
    "time": 9015.5419921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log1p (log1p (expm1 (- (+ (log1p (expm1 (expm1 (/ (- x (sin x)) (- x (tan x)))))) -1.0) -1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 31.2218692274709,
    "avg_bits_err_output": 31.223996256987824,
    "avg_bits_err_improve": -0.002127029516923784,
    "time": 50605.293212890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma b_2 (* b_2 (/ (/ (* b_2 b_2) b_2) b_2)) (* c (- a)))) b_2) a)",
    "output_parens": 10,
    "avg_bits_err_input": 33.3586201905314,
    "avg_bits_err_output": 33.398087020077554,
    "avg_bits_err_improve": -0.0394668295461571,
    "time": 18069.746337890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.39088452413298,
    "avg_bits_err_output": 34.39088452413298,
    "avg_bits_err_improve": 0,
    "time": 18880.765869140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (log1p (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.249751031140796,
    "avg_bits_err_output": 31.250493105110593,
    "avg_bits_err_improve": -0.0007420739697963086,
    "time": 31452.845703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (expm1 (log1p (pow x (/ 1.0 n)))))",
    "output_parens": 8,
    "avg_bits_err_input": 32.315236178028606,
    "avg_bits_err_output": 32.340621337588914,
    "avg_bits_err_improve": -0.025385159560308068,
    "time": 24258.08203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 29.67818123973979,
    "avg_bits_err_output": 29.69521551679269,
    "avg_bits_err_improve": -0.017034277052900393,
    "time": 28345.458740234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (* (/ 1.0 x) (- (- (+ (+ (/ (/ 1.0 x) (/ 1.0 x)) (/ 0.0 (/ 1.0 x))) (/ 1.0 x)) (/ (/ 1.0 x) (/ 1.0 x))) (/ 1.0 x))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x)))",
    "output_parens": 21,
    "avg_bits_err_input": 14.62474502994269,
    "avg_bits_err_output": 0.8134068039688076,
    "avg_bits_err_improve": 13.811338225973884,
    "time": 23800.0361328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (+ (cos (+ x eps)) (fma (- 3.0 (cos x)) (* (- 3.0 (cos x)) (- (exp (log1p (/ 1.0 (- 3.0 (cos x))))) 1.0)) -2.0)) -1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 39.42344523042765,
    "avg_bits_err_output": 39.451546558282885,
    "avg_bits_err_improve": -0.028101327855232228,
    "time": 41646.2529296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.974136662457955,
    "avg_bits_err_output": 29.681593557062122,
    "avg_bits_err_improve": 0.2925431053958327,
    "time": 35157.53955078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.415523609635727,
    "avg_bits_err_output": 30.415523609635727,
    "avg_bits_err_improve": 0,
    "time": 76073.75463867188,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma a (* (* c a) (/ -4.0 a)) (* b b)))) (* 2.0 a))",
    "output_parens": 10,
    "avg_bits_err_input": 33.67674917748502,
    "avg_bits_err_output": 33.70240907212763,
    "avg_bits_err_improve": -0.025659894642608094,
    "time": 20481.5703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.2952012372741,
    "avg_bits_err_output": 34.29534534809398,
    "avg_bits_err_improve": -0.0001441108198818597,
    "time": 22563.7529296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.48234358383173,
    "avg_bits_err_output": 60.15458355723339,
    "avg_bits_err_improve": 1.327760026598341,
    "time": 15366.84326171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log (+ n 1.0)) (+ (- -1.0 (* n (log n))) (* n (log (+ n 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 63.003586208812294,
    "avg_bits_err_output": 0.528,
    "avg_bits_err_improve": 62.475586208812295,
    "time": 30526.781494140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.50507453227207,
    "avg_bits_err_output": 58.50507453227207,
    "avg_bits_err_improve": 0,
    "time": 255909.8173828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 (/ 1.0 (tan x))) (- (fma (+ 1.0 (/ 1.0 (/ 1.0 (tan x)))) (+ 1.0 (/ 1.0 (tan x))) -1.0) (fma (/ 1.0 (tan x)) (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 x))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.88408315217295,
    "avg_bits_err_output": 52.244056289425025,
    "avg_bits_err_improve": 7.6400268627479235,
    "time": 45103.92529296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (fma (expm1 (* eps (+ a b))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps (+ a b))))) 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 18,
    "avg_bits_err_input": 60.029807782035185,
    "avg_bits_err_output": 40.3876312771914,
    "avg_bits_err_improve": 19.642176504843782,
    "time": 31121.792724609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.20346794511585,
    "avg_bits_err_output": 0.46777124062518033,
    "avg_bits_err_improve": 40.735696704490664,
    "time": 9770.119384765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.72378344594542,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.723033445945426,
    "time": 4583.494384765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.601623270563962,
    "avg_bits_err_output": 0.02071736561972104,
    "avg_bits_err_improve": 29.58090590494424,
    "time": 5046.45703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.934927720364247,
    "avg_bits_err_output": 29.006232617270932,
    "avg_bits_err_improve": 0.9286951030933146,
    "time": 23260.356689453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.74829177130195,
    "avg_bits_err_output": 9.74829177130195,
    "avg_bits_err_improve": 0,
    "time": 90181.24487304688,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.43921113191494,
    "avg_bits_err_output": 36.43921113191494,
    "avg_bits_err_improve": 0,
    "time": 43576.332763671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (expm1 (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.0311619115621,
    "avg_bits_err_output": 29.35710302753917,
    "avg_bits_err_improve": 0.67405888402293,
    "time": 29866.3720703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.6909443846718,
    "avg_bits_err_output": 36.6909443846718,
    "avg_bits_err_improve": 0,
    "time": 48323.273681640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.65787767276261,
    "avg_bits_err_output": 19.65787767276261,
    "avg_bits_err_improve": 0,
    "time": 30706.62841796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (+ (atan (+ N 1.0)) (- -1.0 (atan N))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 14.706098295422246,
    "avg_bits_err_output": 14.70706319916667,
    "avg_bits_err_improve": -0.0009649037444248165,
    "time": 12917.760009765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.49036338333371,
    "avg_bits_err_output": 29.49036338333371,
    "avg_bits_err_improve": 0,
    "time": 38676.376953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07734252772443494,
    "avg_bits_err_output": 0.07790096583933155,
    "avg_bits_err_improve": -0.0005584381148966144,
    "time": 46409.638671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.085804749389116,
    "avg_bits_err_output": 0.30406165469173674,
    "avg_bits_err_improve": 15.78174309469738,
    "time": 22351.51220703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.213355120457617,
    "avg_bits_err_output": 20.22467442179162,
    "avg_bits_err_improve": -0.011319301334001608,
    "time": 57938.298583984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (cos (* PI (/ angle 180.0))) (* (* (sin (* PI (/ angle 180.0))) (- (pow a 2.0) (pow b 2.0))) (* (expm1 (log1p (cos (* PI (/ angle 180.0))))) (/ -1.0 (cos (* PI (/ angle 180.0))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 31.50825619267726,
    "avg_bits_err_output": 31.465285977318008,
    "avg_bits_err_improve": 0.04297021535925083,
    "time": 81836.69311523438,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* PI (* (* (/ angle 180.0) PI) (/ (/ (/ angle 180.0) (/ angle 180.0)) PI))))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.177170824327334,
    "avg_bits_err_output": 20.17769440663425,
    "avg_bits_err_improve": -0.0005235823069149603,
    "time": 70147.25512695312,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17100804548200058,
    "avg_bits_err_output": 0.16955148342892906,
    "avg_bits_err_improve": 0.001456562053071514,
    "time": 24293.187744140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.33175743549675557,
    "avg_bits_err_output": 0.3332832874467403,
    "avg_bits_err_improve": -0.0015258519499847245,
    "time": 21946.88232421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (log (exp (* e (cos v))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.1347193609377704,
    "avg_bits_err_output": 0.136386842188131,
    "avg_bits_err_improve": -0.0016674812503605918,
    "time": 32774.5224609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.104720361712022,
    "avg_bits_err_output": 17.098447668484702,
    "avg_bits_err_improve": 0.0062726932273200475,
    "time": 50352.176025390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 20000000000000.0) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (/ 1.0 (fma b b (* a (* c -4.0)))))))) (* a 2.0)) (/ (+ (- (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0) b) -1.0) (+ a a)))",
    "output_parens": 28,
    "avg_bits_err_input": 52.76154780897245,
    "avg_bits_err_output": 51.10874619922355,
    "avg_bits_err_improve": 1.6528016097488987,
    "time": 29918.159423828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma -4.0 (* c a) (* b b)))) (* (sqrt (fma -4.0 (* c a) (* b b))) (sqrt (fma -4.0 (* c a) (* b b)))) (- b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.529744901384003,
    "avg_bits_err_output": 28.619641613643477,
    "avg_bits_err_improve": -0.08989671225947404,
    "time": 24415.705078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 0.28) (/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (/ 1.0 (fma b b (* a (* c -4.0))))))) b) (+ a a)) (/ (+ (fma (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (- (sqrt (fma b b (* a (* c -4.0))))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (+ a a)))",
    "output_parens": 47,
    "avg_bits_err_input": 43.742041672974686,
    "avg_bits_err_output": 41.93027040551291,
    "avg_bits_err_improve": 1.8117712674617792,
    "time": 39989.177978515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.678949773148155,
    "avg_bits_err_output": 33.6959750033507,
    "avg_bits_err_improve": -0.01702523020254887,
    "time": 17835.669921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (expm1 (log1p (sin (- lambda1 lambda2))))) (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8554353573512197,
    "avg_bits_err_output": 0.8663791153331781,
    "avg_bits_err_improve": -0.010943757981958457,
    "time": 30777.119140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(fma (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) (/ 1.0 (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) (fma (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) (* (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) (/ 1.0 (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) -2.0))",
    "output_parens": 29,
    "avg_bits_err_input": 29.589158234542733,
    "avg_bits_err_output": 29.599523051327225,
    "avg_bits_err_improve": -0.010364816784491637,
    "time": 19942.664794921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.12261903136475,
    "avg_bits_err_output": 1.1836580828133114,
    "avg_bits_err_improve": 56.93896094855144,
    "time": 12745.096923828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.055986656383155,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 58.04748665638316,
    "time": 6593.569091796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008448120312590145,
    "avg_bits_err_output": 0.008448120312590145,
    "avg_bits_err_improve": 0,
    "time": 2817.587158203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.881625,
    "avg_bits_err_output": 31.881625,
    "avg_bits_err_improve": 0,
    "time": 4847.4287109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026875,
    "avg_bits_err_output": 0.026875,
    "avg_bits_err_improve": 0,
    "time": 4380.400146484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (sin t) (* ew (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12744812031259015,
    "avg_bits_err_output": 0.12575,
    "avg_bits_err_improve": 0.0016981203125901456,
    "time": 45064.01123046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.129,
    "avg_bits_err_output": 0.129,
    "avg_bits_err_improve": 0,
    "time": 48093.170166015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (cos (/ (+ phi1 phi2) 2.0)) (+ lambda2 (+ (- lambda2) (- lambda1 lambda2)))) (- phi1 phi2)))",
    "output_parens": 11,
    "avg_bits_err_input": 39.20791525352395,
    "avg_bits_err_output": 3.810047942116209,
    "avg_bits_err_improve": 35.397867311407744,
    "time": 46358.239990234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.227114489635877,
    "avg_bits_err_output": 14.227114489635877,
    "avg_bits_err_improve": 0,
    "time": 3978.57958984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (fma (sin delta) (* (/ (cos phi1) (sin delta)) (* (sin delta) (sin theta))) 0.0) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (* (sin delta) (cos phi1)) (cos theta)))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.1485108369463292,
    "avg_bits_err_output": 0.1777995458423525,
    "avg_bits_err_improve": -0.029288708896023308,
    "time": 43182.979248046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -8e-32) (/ (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (* (- (sqrt (fma b b (* a (* c -3.0)))) b) (/ 1.0 (- (sqrt (fma b b (* a (* c -3.0)))) b)))) (* 3.0 a)) (/ (- (- (* (+ (sqrt (fma b b (* a (* c -3.0)))) 1.0) (* (+ (sqrt (fma b b (* a (* c -3.0)))) 1.0) (/ 1.0 (+ (sqrt (fma b b (* a (* c -3.0)))) 1.0)))) b) 1.0) (* 3.0 a)))",
    "output_parens": 53,
    "avg_bits_err_input": 52.79820351486748,
    "avg_bits_err_output": 50.98019870110246,
    "avg_bits_err_improve": 1.8180048137650218,
    "time": 23226.8994140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (* (sqrt (fma a (* c -3.0) (* b b))) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))) (sqrt (+ (* b b) (* -3.0 (* a c)))) (- b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.675115352585333,
    "avg_bits_err_output": 28.724720318255937,
    "avg_bits_err_improve": -0.04960496567060346,
    "time": 29421.045166015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 116.0) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (+ (* c (* a -3.0)) (* b b)))) (- b)) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) b)) (- (exp (log1p (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) 1.0)) (* 3.0 a)))",
    "output_parens": 43,
    "avg_bits_err_input": 43.717116949100095,
    "avg_bits_err_output": 41.48360500621827,
    "avg_bits_err_improve": 2.233511942881826,
    "time": 27107.2001953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.73140712667356,
    "avg_bits_err_output": 33.73140712667356,
    "avg_bits_err_improve": 0,
    "time": 31146.35791015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.970295589353583,
    "avg_bits_err_output": 12.970295589353583,
    "avg_bits_err_improve": 0,
    "time": 95717.0966796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (- (/ x (+ 1.0 x)) (- (/ (+ 1.0 x) (+ x -1.0)) 2.0)) -2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 28.870565557947803,
    "avg_bits_err_output": 28.910388851259075,
    "avg_bits_err_improve": -0.03982329331127232,
    "time": 4743.172607421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (* (/ 1.0 (+ -1.0 (/ 1.0 (+ -1.0 x)))) (* (- 1.0 (/ 1.0 (+ -1.0 x))) (- 1.0 (/ 1.0 (+ -1.0 x))))) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.01325,
    "avg_bits_err_output": 0.029431767189573334,
    "avg_bits_err_improve": -0.016181767189573336,
    "time": 4957.72509765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.255105281448856,
    "avg_bits_err_output": 51.9743244745922,
    "avg_bits_err_improve": 0.2807808068566544,
    "time": 47384.50341796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.818121364011493,
    "avg_bits_err_output": 29.818121364011493,
    "avg_bits_err_improve": 0,
    "time": 39667.453857421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (- (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) (* F (- (* C (* A 8.0)) (* 2.0 (pow B 2.0)))) (* A (* F (fma 2.0 (pow B 2.0) (* C (* A -8.0)))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output_parens": 27,
    "avg_bits_err_input": 52.1401115349008,
    "avg_bits_err_output": 51.83820264203378,
    "avg_bits_err_improve": 0.3019088928670186,
    "time": 39265.223388671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.846903408451233,
    "avg_bits_err_output": 15.846903408451233,
    "avg_bits_err_improve": 0,
    "time": 1861.376220703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.34708362534482,
    "avg_bits_err_output": 36.34708362534482,
    "avg_bits_err_improve": 0,
    "time": 16114.361572265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9905714296960648,
    "avg_bits_err_output": 0.9905714296960648,
    "avg_bits_err_improve": 0,
    "time": 6037.494140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.804125,
    "avg_bits_err_output": 0.804125,
    "avg_bits_err_improve": 0,
    "time": 3998.388916015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.711597641688524,
    "avg_bits_err_output": 10.711597641688524,
    "avg_bits_err_improve": 0,
    "time": 24540.451904296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49916476114975633,
    "avg_bits_err_output": 0.4650731203125902,
    "avg_bits_err_improve": 0.03409164083716615,
    "time": 13554.20263671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(- (+ 1.0 (log (+ x (hypot 1.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 52.9795181675399,
    "avg_bits_err_output": 45.24905127442575,
    "avg_bits_err_improve": 7.730466893114148,
    "time": 9710.096923828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (+ (log b) (+ (log a) 2.0)) -2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 5.681446684364617,
    "avg_bits_err_output": 5.682581685336113,
    "avg_bits_err_improve": -0.001135000971496325,
    "time": 44449.7958984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))) (* (sqrt (/ (- 1.0 x) (+ 1.0 x))) (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.016125,
    "avg_bits_err_improve": -0.0027500000000000007,
    "time": 7028.25927734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1243.776123046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) (- INFINITY)) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (- 0.375 (* v 0.25)) (* w (* w (* (* r w) (* (* r w) (/ r (log1p (expm1 (* r (* w w)))))))))) (- 1.0 v))) 4.5) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* w r)))) (- 1.0 v))))",
    "output_parens": 49,
    "avg_bits_err_input": 12.774235722855092,
    "avg_bits_err_output": 7.337671221510733,
    "avg_bits_err_improve": 5.4365645013443595,
    "time": 30680.202392578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (- (fma x1 (* x1 (fma (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) 4.0 -6.0)) (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (+ x1 x1)))) (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (* (+ x1 x1) 3.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 57,
    "avg_bits_err_input": 0.5159809249647487,
    "avg_bits_err_output": 0.28555287703494026,
    "avg_bits_err_improve": 0.23042804792980842,
    "time": 76594.42846679688,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.44557671619713,
    "avg_bits_err_output": 18.44557671619713,
    "avg_bits_err_improve": 0,
    "time": 61383.2822265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x 0.954929658551372 (* x (* (* x x) -0.12900613773279798)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2291156015629507,
    "avg_bits_err_output": 0.1838321224911586,
    "avg_bits_err_improve": 0.04528347907179209,
    "time": 19226.8330078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0019481203125901445,
    "avg_bits_err_output": 0.0019481203125901445,
    "avg_bits_err_improve": 0,
    "time": 1889.296630859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(fma (/ 1.0 (fma b b (- (* a a)))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))) (fma (* (/ 1.0 (fma b b (- (* a a)))) (- (/ PI 2.0))) (/ 1.0 b) (* (/ PI 2.0) (* (/ 1.0 (fma b b (- (* a a)))) (/ 1.0 b)))))",
    "output_parens": 27,
    "avg_bits_err_input": 14.481456735071005,
    "avg_bits_err_output": 9.698968953826366,
    "avg_bits_err_improve": 4.7824877812446385,
    "time": 39874.70947265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (- (- (+ (fma (- 1.0 (/ 1.0 eps)) (exp (* x (- -1.0 eps))) -1.0) (* (/ 1.0 eps) (exp (- (* eps x) x)))) (- (exp (- (* eps x) x)))) -1.0) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.81263627458951,
    "avg_bits_err_output": 0.9386784378497304,
    "avg_bits_err_improve": 28.87395783673978,
    "time": 34872.595947265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.00425,
    "avg_bits_err_output": 0.00425,
    "avg_bits_err_improve": 0,
    "time": 7857.644775390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(log1p (expm1 (/ (fma (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) 1.0) (fma (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0) 2.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.007375,
    "avg_bits_err_output": 0.00877124062518029,
    "avg_bits_err_improve": -0.0013962406251802912,
    "time": 43139.15234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0335,
    "avg_bits_err_output": 0.0335,
    "avg_bits_err_improve": 0,
    "time": 6873.179931640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3403.2900390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2502.538330078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3049.4013671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.824276137616425,
    "avg_bits_err_output": 0.253125,
    "avg_bits_err_improve": 7.571151137616425,
    "time": 77593.251953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 7.796183698191227,
    "avg_bits_err_output": 7.811471594147508,
    "avg_bits_err_improve": -0.015287895956281439,
    "time": 95410.91357421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(log1p (expm1 (- (pow (+ x eps) 2.0) (pow x 2.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.942217949882018,
    "avg_bits_err_output": 15.953673596895532,
    "avg_bits_err_improve": -0.011455647013514536,
    "time": 65768.95068359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (+ 2.0 (- (+ (expm1 (cos x)) -1.0) 1.0))) (expm1 (log1p (exp (* x (* x 10.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 3.5227591036483363,
    "avg_bits_err_output": 3.596715040952438,
    "avg_bits_err_improve": -0.07395593730410166,
    "time": 27359.413818359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (fma x x 1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 14.88172632941671,
    "avg_bits_err_output": 14.88185132941671,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 41004.073486328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.74881219898697,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.74881219898697,
    "time": 3922.304443359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.073055117603154,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.07280511760315,
    "time": 3953.0556640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29375,
    "avg_bits_err_improve": 63.70625,
    "time": 4576.07958984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.84325134047954,
    "avg_bits_err_output": 0.3578483109579633,
    "avg_bits_err_improve": 61.48540302952158,
    "time": 22827.551025390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.2952012372741,
    "avg_bits_err_output": 34.29534534809398,
    "avg_bits_err_improve": -0.0001441108198818597,
    "time": 25654.069091796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.678949773148155,
    "avg_bits_err_output": 33.6959750033507,
    "avg_bits_err_improve": -0.01702523020254887,
    "time": 19990.81005859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2244.635986328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.22878109257118,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 40.219406092571184,
    "time": 3470.6533203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.4468839462664,
    "avg_bits_err_output": 20.4468839462664,
    "avg_bits_err_improve": 0,
    "time": 7008.9482421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6851025900384813,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6851025900384813,
    "time": 5648.583740234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038125,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03725,
    "time": 6057.7626953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma (+ a b) b (* a (+ a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.023719360937770433,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.012344360937770433,
    "time": 4680.923828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.014875,
    "time": 4077.862548828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.000875,
    "time": 2713.1796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ c (+ d (+ b a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40499793281619606,
    "avg_bits_err_output": 0.2365,
    "avg_bits_err_improve": 0.16849793281619607,
    "time": 9120.611572265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.082026384833778,
    "avg_bits_err_output": 30.082026384833778,
    "avg_bits_err_improve": 0,
    "time": 93746.1728515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.184016653323592,
    "avg_bits_err_output": 24.181549710496956,
    "avg_bits_err_improve": 0.002466942826636398,
    "time": 18536.345703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (- x (sin x)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.419596007039722,
    "avg_bits_err_output": 30.419596007039722,
    "avg_bits_err_improve": 0,
    "time": 65835.83032226562,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00575,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.005375,
    "time": 3879.87548828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d b (* a c)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.609066136059518,
    "avg_bits_err_output": 25.60931613605952,
    "avg_bits_err_improve": -0.0002500000000011937,
    "time": 24304.465576171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.982753069101992,
    "avg_bits_err_output": 25.982753069101992,
    "avg_bits_err_improve": 0,
    "time": 21438.401123046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.021926748933204645,
    "avg_bits_err_improve": 0.015698251066795354,
    "time": 7159.946044921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (* ux (+ (* ux (/ (- (fma ux maxCos 1.0) ux) ux)) (+ (* ux maxCos) (- (/ ux ux) (* maxCos (fma ux maxCos 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.570782447418955,
    "avg_bits_err_output": 0.5508816553266411,
    "avg_bits_err_improve": 13.019900792092313,
    "time": 29368.164794921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (* ux (+ (- (fma ux maxCos 1.0) ux) (fma ux maxCos 1.0))) (* ux (* (fma ux maxCos 2.0) maxCos)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.613212439241869,
    "avg_bits_err_output": 0.35486854622495967,
    "avg_bits_err_improve": 13.258343893016908,
    "time": 39796.367919921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.33857795013352554,
    "avg_bits_err_output": 0.33247135571708325,
    "avg_bits_err_improve": 0.00610659441644229,
    "time": 61781.90869140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.2018069536215519,
    "avg_bits_err_output": 0.20160883330896182,
    "avg_bits_err_improve": 0.00019812031259008878,
    "time": 19561.37841796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5326200048436213,
    "avg_bits_err_output": 0.496348143825257,
    "avg_bits_err_improve": 0.03627186101836427,
    "time": 102257.34545898438,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* u2 (* 6.28318530718 (* u2 (/ 1.0 u2))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3063428212477156,
    "avg_bits_err_output": 0.3139529521602345,
    "avg_bits_err_improve": -0.0076101309125188865,
    "time": 51512.992919921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33003870797885915,
    "avg_bits_err_output": 0.32995822595513724,
    "avg_bits_err_improve": 8.048202372190616e-05,
    "time": 38964.16650390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (- (expm1 (/ (- x) s)) -2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.059045489586960445,
    "avg_bits_err_output": 0.05978060387668485,
    "avg_bits_err_improve": -0.0007351142897244062,
    "time": 12998.60595703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.15872914394076296,
    "avg_bits_err_output": 0.1371296168635302,
    "avg_bits_err_improve": 0.021599527077232755,
    "time": 30262.159423828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6646417569147469,
    "avg_bits_err_output": 0.671383895373748,
    "avg_bits_err_improve": -0.006742138459001068,
    "time": 23615.872802734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.17133664783748395,
    "avg_bits_err_output": 0.16523923275447755,
    "avg_bits_err_improve": 0.006097415083006402,
    "time": 36902.15966796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.499164735521869,
    "avg_bits_err_output": 2.4943656958440226,
    "avg_bits_err_improve": 0.004799039677846562,
    "time": 70731.302734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (* v (- (* (sinh (/ 1.0 v)) 2.0) -1.0)) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4724252346420962,
    "avg_bits_err_output": 0.4954467307711123,
    "avg_bits_err_improve": -0.023021496129016106,
    "time": 38910.982666015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.152237279469318,
    "avg_bits_err_output": 0.152237279469318,
    "avg_bits_err_improve": 0,
    "time": 8356.91552734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (- (* alpha (* cosTheta alpha)) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47341459829872734,
    "avg_bits_err_output": 0.47252999634909604,
    "avg_bits_err_improve": 0.0008846019496313029,
    "time": 23169.5576171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3315633394986508,
    "avg_bits_err_output": 1.3415245687488262,
    "avg_bits_err_improve": -0.009961229250175396,
    "time": 57474.9638671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (fma s (/ (+ -1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) 1.0) s)",
    "output_parens": 7,
    "avg_bits_err_input": 12.384435603547642,
    "avg_bits_err_output": 12.43273124702781,
    "avg_bits_err_improve": -0.04829564348016824,
    "time": 44642.774658203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (expm1 (log1p (* PI (* s 6.0)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.14616035262140678,
    "avg_bits_err_output": 0.16473431462653293,
    "avg_bits_err_improve": -0.01857396200512615,
    "time": 53104.325927734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9163473813057331,
    "avg_bits_err_output": 0.9163473813057331,
    "avg_bits_err_improve": 0,
    "time": 43392.196533203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (fma (exp (* cosTheta (- cosTheta))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (+ 1.0 c))) (/ 1.0 (/ 1.0 (fma (exp (* cosTheta (- cosTheta))) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (+ 1.0 c)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.7136843510275821,
    "avg_bits_err_output": 0.6172936109532868,
    "avg_bits_err_improve": 0.09639074007429527,
    "time": 55437.73583984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (/ 2.0 u2) (* PI (* u2 u2)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.477390005953321,
    "avg_bits_err_output": 13.493905782262594,
    "avg_bits_err_improve": -0.016515776309272923,
    "time": 42983.973388671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(+ 1.0 (fma (sqrt (- (log (- 1.0 u1)))) (cos (* PI (+ u2 u2))) -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 13.526408367458307,
    "avg_bits_err_output": 13.543048609918948,
    "avg_bits_err_improve": -0.016640242460640664,
    "time": 48017.232177734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* alpha (fma alpha (* alpha (exp (log1p (* alpha (/ (log (- 1.0 u0)) (* alpha (- alpha))))))) (- (- (* alpha (- alpha))))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.343850610989191,
    "avg_bits_err_output": 14.05388785898787,
    "avg_bits_err_improve": 0.2899627520013208,
    "time": 39268.667236328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (fma (- (/ cos2phi (* alphax alphax))) (* (* (/ 1.0 (/ cos2phi (* alphax alphax))) (/ (/ cos2phi (* alphax alphax)) (/ cos2phi (* alphax alphax)))) (* (/ cos2phi (* alphax alphax)) (/ -1.0 (/ cos2phi (* alphax alphax))))) 0.0)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 30,
    "avg_bits_err_input": 12.578819480856613,
    "avg_bits_err_output": 12.587286761995621,
    "avg_bits_err_improve": -0.00846728113900852,
    "time": 24589.065673828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (+ (/ PI l) 1.0)) l) 0.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.444907328151956,
    "avg_bits_err_output": 12.833597028015738,
    "avg_bits_err_improve": 3.6113103001362177,
    "time": 39378.70947265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21333116579459072,
    "avg_bits_err_output": 0.21066175578915894,
    "avg_bits_err_improve": 0.002669410005431777,
    "time": 31528.20361328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.883072798316967,
    "avg_bits_err_output": 13.881818137412862,
    "avg_bits_err_improve": 0.001254660904104199,
    "time": 49187.868408203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.58871014308897,
    "avg_bits_err_output": 1.965139880455205,
    "avg_bits_err_improve": 59.62357026263376,
    "time": 65886.69604492188,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -5e-140) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l))))) (if (<= t 1.5e-117) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (* l (+ (/ (+ 1.0 x) (+ x -1.0)) (* l (/ -1.0 l))))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ 0.0 (* l (* l (+ (/ (+ 1.0 x) (+ x -1.0)) (* l (/ -1.0 l)))))))))))",
    "output_parens": 64,
    "avg_bits_err_input": 42.99137361713371,
    "avg_bits_err_output": 35.80436012427098,
    "avg_bits_err_improve": 7.187013492862732,
    "time": 35682.576904296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.085453883550879,
    "avg_bits_err_output": 4.085453883550879,
    "avg_bits_err_improve": 0,
    "time": 53218.101318359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.1194553301976353,
    "avg_bits_err_output": 1.1207053301976353,
    "avg_bits_err_improve": -0.0012499999999999734,
    "time": 18012.350341796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (- (* (* (- t (* 2.0 (/ (* l l) Om))) U) (+ n n)) (* U (* (pow (/ l Om) 2.0) (* n (* (- U U*) (+ n n))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 46,
    "avg_bits_err_input": 34.54947140814998,
    "avg_bits_err_output": 31.931097510356466,
    "avg_bits_err_improve": 2.6183738977935107,
    "time": 28867.827392578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (sin k) (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (tan k)))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.70343549375484,
    "avg_bits_err_output": 40.01855305042409,
    "avg_bits_err_improve": 7.68488244333075,
    "time": 55224.14111328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (sin k)) (* (/ (pow t 3.0) (* l l)) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.342430985604025,
    "avg_bits_err_output": 32.30851996967196,
    "avg_bits_err_improve": 0.03391101593206258,
    "time": 34538.66943359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma a1 (* (/ (cos th) (sqrt 2.0)) a1) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5184238750216361,
    "avg_bits_err_output": 0.4984663562719967,
    "avg_bits_err_improve": 0.019957518749639414,
    "time": 30170.969970703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (/ n (* 2.0 PI)) (* PI (* PI 4.0))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5140279260500398,
    "avg_bits_err_output": 0.519005217152511,
    "avg_bits_err_improve": -0.0049772911024712485,
    "time": 38722.637451171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp l)) (- J) (* (exp l) (- J))) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.213703918742553,
    "avg_bits_err_output": 17.2204566839311,
    "avg_bits_err_improve": -0.006752765188547727,
    "time": 38923.593994140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -9.5e+35) (* (cos (- (/ (* K (* (+ m n) (- (* (exp (log1p (/ (/ K K) K))) K) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 5e-310) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* (+ m n) (- (* (exp (log1p (/ (/ K K) K))) K) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 63,
    "avg_bits_err_input": 15.008031903246641,
    "avg_bits_err_output": 1.302610050764313,
    "avg_bits_err_improve": 13.705421852482328,
    "time": 32588.1484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.203969360937773,
    "avg_bits_err_output": 18.203969360937773,
    "avg_bits_err_improve": 0,
    "time": 44624.612548828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.624542998972204,
    "avg_bits_err_output": 14.624542998972204,
    "avg_bits_err_improve": 0,
    "time": 8974.716552734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.18210017194593,
    "avg_bits_err_output": 19.18210017194593,
    "avg_bits_err_improve": 0,
    "time": 40738.48828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.74169802210378,
    "avg_bits_err_output": 56.93706406546521,
    "avg_bits_err_improve": 2.8046339566385754,
    "time": 56685.817626953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (+ (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) 0.0) (* 0.5 (* (* (pow (/ (* M D) (+ d d)) 2.0) (pow (/ d l) 0.5)) (* (pow (/ d h) 0.5) (/ h l)))))",
    "output_parens": 20,
    "avg_bits_err_input": 27.016522333590924,
    "avg_bits_err_output": 26.33851962841017,
    "avg_bits_err_improve": 0.6780027051807522,
    "time": 94969.49462890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (expm1 (log1p (/ 1.0 (hypot 1.0 x))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.448066746173776,
    "avg_bits_err_output": 15.44973394073884,
    "avg_bits_err_improve": -0.001667194565063923,
    "time": 26681.270263671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (- 1.0 (* v v)) (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) 3.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9822924812503606,
    "avg_bits_err_output": 0.01533496250072116,
    "avg_bits_err_improve": 0.9669575187496394,
    "time": 27263.56982421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) t))",
    "output_parens": 13,
    "avg_bits_err_input": 0.40754667459338745,
    "avg_bits_err_output": 0.3305164950493952,
    "avg_bits_err_improve": 0.07703017954399227,
    "time": 40773.310791015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.015026789890100095,
    "avg_bits_err_output": 0.013343104229687444,
    "avg_bits_err_improve": 0.0016836856604126507,
    "time": 19746.58056640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.586107011897837,
    "avg_bits_err_output": 0.586107011897837,
    "avg_bits_err_improve": 0,
    "time": 16219.04541015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (- (* k (+ k 11.0)) -1.0) k))",
    "output_parens": 7,
    "avg_bits_err_input": 2.06915416049006,
    "avg_bits_err_output": 2.03733104017747,
    "avg_bits_err_improve": 0.03182312031259027,
    "time": 24188.641845703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02500558392515775,
    "avg_bits_err_output": 0.02500558392515775,
    "avg_bits_err_improve": 0,
    "time": 12734.464111328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1824013316399258,
    "avg_bits_err_output": 0.1824013316399258,
    "avg_bits_err_improve": 0,
    "time": 14980.7333984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (* 4.0 (+ (* b b) (- (* a (* a (+ 1.0 a))) (* (* b b) (* a 3.0))))) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.1823637998834221,
    "avg_bits_err_output": 0.1841875199670752,
    "avg_bits_err_improve": -0.0018237200836530854,
    "time": 37744.11865234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18817552734808446,
    "avg_bits_err_output": 0.18817552734808446,
    "avg_bits_err_improve": 0,
    "time": 8678.394287109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma x x (* 4.0 (* p p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.050855588987446,
    "avg_bits_err_output": 13.055912998212367,
    "avg_bits_err_improve": -0.005057409224921372,
    "time": 27085.3642578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (- (+ (/ (expm1 (+ x x)) (expm1 x)) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 40.95910217272023,
    "avg_bits_err_output": 0.065875,
    "avg_bits_err_improve": 40.89322717272023,
    "time": 7381.7880859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ x (+ (- 1.0 (tan x)) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 31.1622441417708,
    "avg_bits_err_output": 30.39257467583033,
    "avg_bits_err_improve": 0.7696694659404706,
    "time": 44324.485595703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma (* b_2 (/ -1.0 b_2)) b_2 (sqrt (- (* b_2 b_2) (* c a)))) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.58034283479927,
    "avg_bits_err_output": 33.78829181722155,
    "avg_bits_err_improve": -0.20794898242228044,
    "time": 23947.841064453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.07013790512233,
    "avg_bits_err_output": 34.07013790512233,
    "avg_bits_err_improve": 0,
    "time": 18660.40380859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.809175377527488,
    "avg_bits_err_output": 31.809175377527488,
    "avg_bits_err_improve": 0,
    "time": 25516.210205078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.28090906370833,
    "avg_bits_err_output": 32.28090906370833,
    "avg_bits_err_improve": 0,
    "time": 31730.659423828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 29.299182087719696,
    "avg_bits_err_output": 29.298850929999393,
    "avg_bits_err_improve": 0.0003311577203035654,
    "time": 25088.39892578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x)) -1.0)) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.731404307233335,
    "avg_bits_err_output": 0.6267226478763716,
    "avg_bits_err_improve": 14.104681659356963,
    "time": 34854.36083984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (log1p (* (/ 1.0 (expm1 (cos (+ x eps)))) (* (expm1 (cos (+ x eps))) (expm1 (cos (+ x eps)))))) (cos x))",
    "output_parens": 15,
    "avg_bits_err_input": 39.3162565886154,
    "avg_bits_err_output": 39.3951103137458,
    "avg_bits_err_improve": -0.07885372513040068,
    "time": 40740.545166015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.61538023469967,
    "avg_bits_err_output": 29.327397415338602,
    "avg_bits_err_improve": 0.2879828193610692,
    "time": 24574.434814453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.256443566921956,
    "avg_bits_err_output": 30.256443566921956,
    "avg_bits_err_improve": 0,
    "time": 62249.071533203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.98275498666728,
    "avg_bits_err_output": 33.98275498666728,
    "avg_bits_err_improve": 0,
    "time": 18677.699951171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* c (* a -4.0)) (* b b))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.42168904118794,
    "avg_bits_err_output": 34.62133108972981,
    "avg_bits_err_improve": -0.19964204854186818,
    "time": 20207.21826171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.33684103380118,
    "avg_bits_err_output": 60.00076712561169,
    "avg_bits_err_improve": 1.3360739081894906,
    "time": 39372.643798828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.0083649550288,
    "avg_bits_err_output": 0.05472428053668571,
    "avg_bits_err_improve": 62.953640674492114,
    "time": 32360.68505859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (/ (log (/ (- 1.0 eps) (+ 1.0 eps))) (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) (+ (fma (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) -1.0) (fma (- (/ 0.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) (log (/ (- 1.0 eps) (+ 1.0 eps))) (* (log (/ (- 1.0 eps) (+ 1.0 eps))) (/ 0.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 58.53179012753429,
    "avg_bits_err_output": 58.54725584053568,
    "avg_bits_err_improve": -0.015465713001390213,
    "time": 130166.720703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (/ 1.0 (tan x)) (* (/ 1.0 (tan x)) (* (- (- (/ 1.0 (tan x)))) (* (/ 1.0 (/ 1.0 (tan x))) (/ (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x)))))) (- (/ 1.0 x) (fma (/ 1.0 (tan x)) (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x)))))",
    "output_parens": 31,
    "avg_bits_err_input": 59.87089322200644,
    "avg_bits_err_output": 59.64744832119477,
    "avg_bits_err_improve": 0.22344490081166413,
    "time": 51188.02392578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.37253754349297,
    "avg_bits_err_output": 41.51877425624447,
    "avg_bits_err_improve": 18.853763287248498,
    "time": 33668.156982421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.26232657018524,
    "avg_bits_err_output": 0.39649060156295074,
    "avg_bits_err_improve": 40.865835968622285,
    "time": 6720.931640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.71435071468072,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.71347571468072,
    "time": 3730.213134765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.3258058584518,
    "avg_bits_err_output": 0.01681923215775668,
    "avg_bits_err_improve": 29.308986626294043,
    "time": 4541.02392578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.413189572216908,
    "avg_bits_err_output": 28.563202208849727,
    "avg_bits_err_improve": 0.8499873633671804,
    "time": 20361.81201171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ -1.0 x)) (* (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ (/ 2.0 x) (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x))))) (* (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)))))",
    "output_parens": 27,
    "avg_bits_err_input": 9.814365027234135,
    "avg_bits_err_output": 9.81903117790858,
    "avg_bits_err_improve": -0.00466615067444387,
    "time": 35867.922607421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (- (tan x)) (fma (tan x) (/ 1.0 (tan x)) (fma (tan x) (/ 1.0 (tan x)) (* (tan x) (/ -1.0 (tan x))))) (tan (+ x eps)))",
    "output_parens": 17,
    "avg_bits_err_input": 37.270815854716275,
    "avg_bits_err_output": 37.368506047106756,
    "avg_bits_err_improve": -0.09769019239048049,
    "time": 35258.528564453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (- (- (- (* (sqrt (+ x 1.0)) 2.0) 1.0) (sqrt (+ x 1.0))) (sqrt x)))",
    "output_parens": 10,
    "avg_bits_err_input": 29.537471904759915,
    "avg_bits_err_output": 28.85323342524992,
    "avg_bits_err_improve": 0.6842384795099967,
    "time": 44375.108642578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (* (sin (+ x eps)) (+ (sin (+ x eps)) 1.0)) (- 0.0 (- (sin x) (- (sin (+ x eps)) (* (sin (+ x eps)) (+ (sin (+ x eps)) 1.0))))))",
    "output_parens": 19,
    "avg_bits_err_input": 36.47468880428797,
    "avg_bits_err_output": 36.48558990736909,
    "avg_bits_err_improve": -0.01090110308111747,
    "time": 34475.218017578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.69575315252571,
    "avg_bits_err_output": 19.69575315252571,
    "avg_bits_err_improve": 0,
    "time": 38470.57568359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0)))) (- (atan N)))",
    "output_parens": 11,
    "avg_bits_err_input": 15.167809408758213,
    "avg_bits_err_output": 15.169541272060394,
    "avg_bits_err_improve": -0.0017318633021812246,
    "time": 37121.41357421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(expm1 (- (+ (log1p (log (+ (exp a) (exp b)))) 1.0) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 29.719850736957508,
    "avg_bits_err_output": 29.89807532343476,
    "avg_bits_err_improve": -0.1782245864772527,
    "time": 47165.70361328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(fma (- 1.0 m) (/ (- m (* m m)) v) (+ (+ m -1.0) (fma (- m) (/ (- m (* m m)) v) (* m (/ (- m (* m m)) v)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.08232272405410936,
    "avg_bits_err_output": 0.08394772405410937,
    "avg_bits_err_improve": -0.0016250000000000153,
    "time": 35665.679443359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.37196471908534,
    "avg_bits_err_output": 0.3123659781302284,
    "avg_bits_err_improve": 16.059598740955114,
    "time": 13236.103515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.389233911526752,
    "avg_bits_err_output": 20.376835568877805,
    "avg_bits_err_improve": 0.01239834264894668,
    "time": 43054.248046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (cos (* PI (/ angle 180.0))) (fma (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0)) (fma (- (pow b 2.0)) (- (sin (* PI (/ angle 180.0)))) (* (pow b 2.0) (- (sin (* PI (/ angle 180.0)))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 31.27805907037909,
    "avg_bits_err_output": 31.253491227511876,
    "avg_bits_err_improve": 0.024567842867213585,
    "time": 54632.328857421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (- (* (/ angle 180.0) (exp (log1p (* PI (/ (/ angle 180.0) (/ angle 180.0)))))) (/ angle 180.0)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.15324652601649,
    "avg_bits_err_output": 20.176752531520467,
    "avg_bits_err_improve": -0.023506005503978855,
    "time": 89560.5595703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1864505640636719,
    "avg_bits_err_output": 0.18258847503972342,
    "avg_bits_err_improve": 0.0038620890239484673,
    "time": 30709.994140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (expm1 (log1p (* (tan x) (tan x))))) (+ 1.0 (expm1 (log1p (* (tan x) (tan x))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.31238967449275823,
    "avg_bits_err_output": 0.3497485263036686,
    "avg_bits_err_improve": -0.037358851810910365,
    "time": 29164.995361328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1309387218755409,
    "avg_bits_err_output": 0.1309387218755409,
    "avg_bits_err_improve": 0,
    "time": 40934.009765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.032407256751274,
    "avg_bits_err_output": 17.024819025085606,
    "avg_bits_err_improve": 0.0075882316656681326,
    "time": 98117.68359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 2.5e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a)) (/ (+ (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 41,
    "avg_bits_err_input": 52.75275759132865,
    "avg_bits_err_output": 50.679363924691174,
    "avg_bits_err_improve": 2.073393666637479,
    "time": 21261.93408203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.499638671508404,
    "avg_bits_err_output": 28.427856687206944,
    "avg_bits_err_improve": 0.07178198430145954,
    "time": 46914.204833984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-22) (/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a)) (/ (- 1.0 (- (exp (log1p (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))))) (- (+ (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (sqrt (fma c (* a -4.0) (* b b)))) b))) (+ a a)))",
    "output_parens": 41,
    "avg_bits_err_input": 43.40407546852819,
    "avg_bits_err_output": 41.05554699513353,
    "avg_bits_err_improve": 2.3485284733946585,
    "time": 22943.672119140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.004483310277834,
    "avg_bits_err_output": 34.004483310277834,
    "avg_bits_err_improve": 0,
    "time": 16573.200439453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8421704250420191,
    "avg_bits_err_output": 0.8392374263551654,
    "avg_bits_err_improve": 0.002932998686853705,
    "time": 43876.438232421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(+ (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) -2.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.67968941526113,
    "avg_bits_err_output": 29.702532052687182,
    "avg_bits_err_improve": -0.022842637426052192,
    "time": 3702.49267578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (+ (exp (- x)) 1.0) (expm1 x)))",
    "output_parens": 10,
    "avg_bits_err_input": 58.03530237781477,
    "avg_bits_err_output": 1.0892124062518032,
    "avg_bits_err_improve": 56.94608997156297,
    "time": 8759.85595703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.10137886102345,
    "avg_bits_err_output": 0.005875,
    "avg_bits_err_improve": 58.095503861023445,
    "time": 5540.4873046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0072712406251802895,
    "avg_bits_err_output": 0.0072712406251802895,
    "avg_bits_err_improve": 0,
    "time": 2518.063232421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.2495,
    "avg_bits_err_output": 32.2495,
    "avg_bits_err_improve": 0,
    "time": 4559.25830078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (+ (* (log (/ (+ 1.0 x) (- 1.0 x))) (/ (log (/ (+ 1.0 x) (- 1.0 x))) (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0))) (fma (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0) (/ -1.0 (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0)) 1.0)) (/ (log (/ (+ 1.0 x) (- 1.0 x))) (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0))))",
    "output_parens": 40,
    "avg_bits_err_input": 58.52155357422325,
    "avg_bits_err_output": 58.530979554393426,
    "avg_bits_err_improve": -0.00942598017017815,
    "time": 106240.25732421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.02789624062518029,
    "avg_bits_err_output": 0.02789624062518029,
    "avg_bits_err_improve": 0,
    "time": 3984.968017578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12275,
    "avg_bits_err_output": 0.12325,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 38039.257568359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* (sin t) (* eh (sin (atan (/ (* eh (- (tan t))) ew)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13019812031259012,
    "avg_bits_err_output": 0.12971936093777042,
    "avg_bits_err_improve": 0.0004787593748196983,
    "time": 26359.483154296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.42654678543464,
    "avg_bits_err_output": 3.9756621258913993,
    "avg_bits_err_improve": 35.45088465954324,
    "time": 45346.070068359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.341059708464464,
    "avg_bits_err_output": 14.341059708464464,
    "avg_bits_err_improve": 0,
    "time": 5214.440673828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (* (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (* (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (/ 1.0 (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.13565926880974163,
    "avg_bits_err_output": 0.14106951007070798,
    "avg_bits_err_improve": -0.005410241260966342,
    "time": 69621.25,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (log (+ 1.0 (expm1 (* (fma a (* c -3.0) (* b b)) (/ 1.0 (fma a (* c -3.0) (* b b)))))))))) (- b)) (* 3.0 a))",
    "output_parens": 30,
    "avg_bits_err_input": 52.7435470852624,
    "avg_bits_err_output": 51.71299860955011,
    "avg_bits_err_improve": 1.030548475712287,
    "time": 42769.42431640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.642582371706403,
    "avg_bits_err_output": 28.578078098912425,
    "avg_bits_err_improve": 0.06450427279397886,
    "time": 22000.683349609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -5e-23) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (sqrt (fma a (* c -3.0) (* b b))) (* (* b (/ -1.0 b)) (- (exp (log1p b)) 1.0))) (* 3.0 a)))",
    "output_parens": 31,
    "avg_bits_err_input": 43.44111972458669,
    "avg_bits_err_output": 42.523621459935214,
    "avg_bits_err_improve": 0.9174982646514778,
    "time": 25149.243896484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.06653552731876,
    "avg_bits_err_output": 34.06653552731876,
    "avg_bits_err_improve": 0,
    "time": 20753.417724609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (log1p (expm1 (cos (- lambda1 lambda2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.991207689749464,
    "avg_bits_err_output": 12.998460135011982,
    "avg_bits_err_improve": -0.0072524452625177815,
    "time": 66460.49145507812,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.167248913616987,
    "avg_bits_err_output": 29.172552730553946,
    "avg_bits_err_improve": -0.005303816936958583,
    "time": 205528.26440429688,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 5397.4736328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (* (/ 1.0 (+ -1.0 x)) (- (- (* (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ -1.0 (/ 1.0 (+ -1.0 x))))) -1.0) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))))",
    "output_parens": 20,
    "avg_bits_err_input": 14.508728574786986,
    "avg_bits_err_output": 14.203451015078166,
    "avg_bits_err_improve": 0.30527755970882,
    "time": 92651.77734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.501496761601125,
    "avg_bits_err_output": 52.075613697010446,
    "avg_bits_err_improve": 0.4258830645906784,
    "time": 38127.458740234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.037128243422124,
    "avg_bits_err_output": 29.037128243422124,
    "avg_bits_err_improve": 0,
    "time": 40895.20068359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* A (* C 4.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.11395969337423,
    "avg_bits_err_output": 51.846612580024896,
    "avg_bits_err_improve": 0.2673471133493308,
    "time": 35363.53662109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.500727153718927,
    "avg_bits_err_output": 15.500727153718927,
    "avg_bits_err_improve": 0,
    "time": 1892.70068359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.32984600865366,
    "avg_bits_err_output": 36.32984600865366,
    "avg_bits_err_improve": 0,
    "time": 18001.953369140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (- (+ (+ (/ (* 2.0 PI) 3.0) -1.0) (- (+ 1.0 (+ 2.0 (/ (acos (/ (- g) h)) 3.0))) 1.0)) 1.0)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.990142106257573,
    "avg_bits_err_output": 0.990443985944983,
    "avg_bits_err_improve": -0.00030187968740991167,
    "time": 7981.651611328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6680212406251803,
    "avg_bits_err_output": 0.6680212406251803,
    "avg_bits_err_improve": 0,
    "time": 5906.081787109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.383478930627295,
    "avg_bits_err_output": 11.383478930627295,
    "avg_bits_err_improve": 0,
    "time": 13868.406982421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5811207016134862,
    "avg_bits_err_output": 0.527125,
    "avg_bits_err_improve": 0.05399570161348621,
    "time": 14079.992919921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.312481655785085,
    "avg_bits_err_output": 15.93258836854393,
    "avg_bits_err_improve": 37.37989328724115,
    "time": 39936.211181640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.658665575112182,
    "avg_bits_err_output": 5.658665575112182,
    "avg_bits_err_improve": 0,
    "time": 35618.9873046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.012875,
    "avg_bits_err_output": 0.012875,
    "avg_bits_err_improve": 0,
    "time": 10184.176025390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1228.123779296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+146) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))) (if (<= r 5e-26) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.663979549339475,
    "avg_bits_err_output": 6.611257331253239,
    "avg_bits_err_improve": 6.0527222180862355,
    "time": 35673.879638671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) (+ x1 x1))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5179001533525124,
    "avg_bits_err_output": 0.28882587619873634,
    "avg_bits_err_improve": 0.22907427715377604,
    "time": 73836.376953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma u u (* t1 (+ (+ t1 u) u))))",
    "output_parens": 7,
    "avg_bits_err_input": 17.868495681068495,
    "avg_bits_err_output": 17.866835400459372,
    "avg_bits_err_improve": 0.0016602806091228217,
    "time": 32646.921630859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x 0.954929658551372 (* x (* (* x x) -0.12900613773279798)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2253233238251722,
    "avg_bits_err_output": 0.19312744375108176,
    "avg_bits_err_improve": 0.03219588007409044,
    "time": 25819.3505859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.004,
    "avg_bits_err_output": 0.004,
    "avg_bits_err_improve": 0,
    "time": 3165.6611328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.7775402722595,
    "avg_bits_err_output": 9.815910761324586,
    "avg_bits_err_improve": 4.961629510934914,
    "time": 39334.36474609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (- (expm1 (- (* eps x) x)) -1.0)) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 30.29231448085851,
    "avg_bits_err_output": 1.0319066404040742,
    "avg_bits_err_improve": 29.260407840454437,
    "time": 18191.58740234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (expm1 (log (- 3.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.03825,
    "avg_bits_err_improve": -0.025625,
    "time": 22416.532470703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.019,
    "avg_bits_err_output": 0.016125,
    "avg_bits_err_improve": 0.002874999999999999,
    "time": 37500.99755859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (+ (- -1.0 (/ (+ t t) (+ 1.0 t))) (- 1.0 (* (/ (+ t t) (+ 1.0 t)) (- -1.0 (/ (+ t t) (+ 1.0 t))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.017,
    "avg_bits_err_output": 0.018813721875540868,
    "avg_bits_err_improve": -0.0018137218755408663,
    "time": 26865.697265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3111.1005859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2653.7255859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3369.784912109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.824674060686979,
    "avg_bits_err_output": 0.250875,
    "avg_bits_err_improve": 7.573799060686979,
    "time": 60496.595703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.094733465421128,
    "avg_bits_err_output": 7.094733465421128,
    "avg_bits_err_improve": 0,
    "time": 28699.166259765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.474514949881973,
    "avg_bits_err_output": 15.474514949881973,
    "avg_bits_err_improve": 0,
    "time": 48208.42578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (+ (expm1 (* 10.0 (* x x))) 1.0) (log (+ 1.0 (expm1 (* (+ (expm1 (* 10.0 (* x x))) 2.0) (/ (cos x) (exp (* 10.0 (* x x))))))))) (* (exp (* 10.0 (* x x))) (/ (cos x) (exp (* 10.0 (* x x))))))",
    "output_parens": 28,
    "avg_bits_err_input": 3.555566318981618,
    "avg_bits_err_output": 3.5532253619485177,
    "avg_bits_err_improve": 0.0023409570331001106,
    "time": 70558.36889648438,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.03636601724201,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.03636601724201,
    "time": 5638.3203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.05344387228909,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 39.05306887228909,
    "time": 5678.939697265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29625,
    "avg_bits_err_improve": 63.70375,
    "time": 4790.787841796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84325111880238,
    "avg_bits_err_output": 0.39542236875252423,
    "avg_bits_err_improve": 61.44782875004985,
    "time": 31552.430419921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* c (* a -4.0)) (* b b))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.42168904118794,
    "avg_bits_err_output": 34.62133108972981,
    "avg_bits_err_improve": -0.19964204854186818,
    "time": 25649.587646484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.004483310277834,
    "avg_bits_err_output": 34.004483310277834,
    "avg_bits_err_improve": 0,
    "time": 24494.866943359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2171.842041015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.857741367063106,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 39.84599136706311,
    "time": 16861.682861328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma y y (* x x)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.0666625807642,
    "avg_bits_err_output": 20.066162580764196,
    "avg_bits_err_improve": 0.0005000000000023874,
    "time": 15007.05419921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6503057926418863,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6503057926418863,
    "time": 5106.8955078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.039125,
    "time": 8419.7412109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021073120312590145,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.010823120312590145,
    "time": 3886.92529296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.012375,
    "time": 4706.33984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 3132.67724609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ b c) (+ d a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3976960531287862,
    "avg_bits_err_output": 0.23975,
    "avg_bits_err_improve": 0.1579460531287862,
    "time": 11633.28662109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- (* (- 1.0 (cos x)) (- 2.0 (cos x))) (- 1.0 (* (cos x) (- 2.0 (cos x)))))",
    "output_parens": 11,
    "avg_bits_err_input": 30.717366939253317,
    "avg_bits_err_output": 30.736569148374393,
    "avg_bits_err_improve": -0.019202209121075953,
    "time": 115664.05053710938,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.38325999275463,
    "avg_bits_err_output": 24.378286461291726,
    "avg_bits_err_improve": 0.004973531462905356,
    "time": 27845.1796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) -1.0) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.847906859935847,
    "avg_bits_err_output": 29.851792156860014,
    "avg_bits_err_improve": -0.003885296924167392,
    "time": 85602.6279296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00699715999043749,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.00612215999043749,
    "time": 4675.066162109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (expm1 (log1p (/ (+ -1.0 (pow (+ 1.0 (/ i n)) n)) (/ i n)))))",
    "output_parens": 9,
    "avg_bits_err_input": 47.7425151892976,
    "avg_bits_err_output": 48.04830961981305,
    "avg_bits_err_improve": -0.30579443051544786,
    "time": 159895.93530273438,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d b (* a c)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.84041357473784,
    "avg_bits_err_output": 25.840163574737844,
    "avg_bits_err_improve": 0.000249999999997641,
    "time": 35554.862060546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.61856440548663,
    "avg_bits_err_output": 25.61849128517404,
    "avg_bits_err_improve": 7.312031258877028e-05,
    "time": 21331.439453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.020833600670583246,
    "avg_bits_err_improve": 0.016166399329416752,
    "time": 9224.350830078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (fma ux (* ux (/ (- (fma ux maxCos 1.0) ux) ux)) (- (fma (fma ux maxCos 1.0) (- (* ux maxCos) ux) (* ux maxCos))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.68308928991072,
    "avg_bits_err_output": 0.5515469857576785,
    "avg_bits_err_improve": 13.131542304153042,
    "time": 36569.2939453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (fma ux (- (fma ux maxCos 1.0) ux) (- ux (* (* ux maxCos) (- (fma ux maxCos 1.0) (+ ux -1.0)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.72367366635082,
    "avg_bits_err_output": 0.3121013179357989,
    "avg_bits_err_improve": 13.41157234841502,
    "time": 34272.47119140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (+ (fma (- 1.0 ux) (* (* ux (* ux maxCos)) (* maxCos (- 1.0 ux))) 1.0) -1.0)))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 35,
    "avg_bits_err_input": 0.33072118587336513,
    "avg_bits_err_output": 0.33059618587336514,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 89832.93530273438,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20541054573943912,
    "avg_bits_err_output": 0.20541054573943912,
    "avg_bits_err_improve": 0,
    "time": 19208.232177734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5447692852279641,
    "avg_bits_err_output": 0.5065716011254333,
    "avg_bits_err_improve": 0.03819768410253077,
    "time": 69823.09497070312,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (exp (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3203414002753925,
    "avg_bits_err_output": 0.32165512215093334,
    "avg_bits_err_improve": -0.001313721875540852,
    "time": 68347.99267578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3458643325518788,
    "avg_bits_err_output": 0.34614721185260805,
    "avg_bits_err_improve": -0.00028287930072923295,
    "time": 39277.4951171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06266176980599433,
    "avg_bits_err_output": 0.06413828894231438,
    "avg_bits_err_improve": -0.001476519136320048,
    "time": 38378.03564453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1694443566847406,
    "avg_bits_err_output": 0.1470663023959127,
    "avg_bits_err_improve": 0.022378054288827887,
    "time": 13519.735107421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6614285520357847,
    "avg_bits_err_output": 0.6614285520357847,
    "avg_bits_err_improve": 0,
    "time": 16027.33056640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (exp (/ -2.0 v)) (+ u (- (* u (exp (/ -2.0 v))))))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.15195905975788243,
    "avg_bits_err_output": 0.1446475639729828,
    "avg_bits_err_improve": 0.007311495784899619,
    "time": 33383.750244140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.527076019302284,
    "avg_bits_err_output": 2.527076019302284,
    "avg_bits_err_improve": 0,
    "time": 98527.9013671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v v)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4683893808914111,
    "avg_bits_err_output": 0.48777428301170916,
    "avg_bits_err_improve": -0.019384902120298086,
    "time": 66300.04174804688,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11109494293788265,
    "avg_bits_err_output": 0.11109494293788265,
    "avg_bits_err_improve": 0,
    "time": 8239.5634765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (* (* alpha alpha) (* cosTheta cosTheta)) (* cosTheta cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4714024399079597,
    "avg_bits_err_output": 0.47102134068262436,
    "avg_bits_err_improve": 0.00038109922533535734,
    "time": 24859.42578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (+ 1.0 (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 1.3257919615366902,
    "avg_bits_err_output": 1.3324027453324705,
    "avg_bits_err_improve": -0.006610783795780284,
    "time": 63530.530517578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.431461885444705,
    "avg_bits_err_output": 12.075599005212968,
    "avg_bits_err_improve": 0.3558628802317365,
    "time": 35751.365478515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* s (* (/ (* PI 6.0) r) (* r r)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.14141178160890722,
    "avg_bits_err_output": 0.14674579399118265,
    "avg_bits_err_improve": -0.005334012382275433,
    "time": 59387.921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (+ (* (fma (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u))) -1.0) n0_i) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 15,
    "avg_bits_err_input": 0.884920688474437,
    "avg_bits_err_output": 0.8600836906549384,
    "avg_bits_err_improve": 0.024836997819498552,
    "time": 42834.6298828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (* (/ 1.0 (sqrt PI)) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.7058440506065694,
    "avg_bits_err_output": 0.7518279376902087,
    "avg_bits_err_improve": -0.04598388708363932,
    "time": 44442.23974609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(fma (sin (* 2.0 (* PI u2))) (* (sin (* 2.0 (* PI u2))) (/ (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (sin (* 2.0 (* PI u2))))) (sin (* 2.0 (* PI u2))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.577721959130951,
    "avg_bits_err_output": 13.484242791731393,
    "avg_bits_err_improve": 0.09347916739955764,
    "time": 41278.75634765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (fma (cos (* PI (+ u2 u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (cos (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 13.624678750244207,
    "avg_bits_err_output": 13.529173574910148,
    "avg_bits_err_improve": 0.09550517533405944,
    "time": 41137.2685546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* alpha (* (- alpha) (* (- alpha) (/ (log (- 1.0 u0)) (* alpha (- alpha)))))) (* (* alpha (- alpha)) (fma alpha alpha (* alpha (- alpha)))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.950693271702217,
    "avg_bits_err_output": 13.681112609234866,
    "avg_bits_err_improve": 0.2695806624673516,
    "time": 27119.749267578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (expm1 (log1p (/ 1.0 (/ cos2phi (* alphax alphax))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 20,
    "avg_bits_err_input": 12.67562021340418,
    "avg_bits_err_output": 12.727777989111395,
    "avg_bits_err_improve": -0.05215777570721514,
    "time": 33882.229736328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* (/ l PI) (* PI PI)) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.631047126414845,
    "avg_bits_err_output": 16.652390876129523,
    "avg_bits_err_improve": -0.021343749714677784,
    "time": 22458.884033203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21008496250072115,
    "avg_bits_err_output": 0.20695996250072116,
    "avg_bits_err_improve": 0.003124999999999989,
    "time": 45128.0576171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.269348627273855,
    "avg_bits_err_output": 13.269183528315471,
    "avg_bits_err_improve": 0.00016509895838368038,
    "time": 44097.357666015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- (* (exp (log1p (- f))) (/ f f)) (/ f f))))))) (- (+ 1.0 (/ 1.0 (/ PI 4.0))) 1.0)))",
    "output_parens": 30,
    "avg_bits_err_input": 61.37488063878209,
    "avg_bits_err_output": 61.630594902920805,
    "avg_bits_err_improve": -0.25571426413871734,
    "time": 53769.820068359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.62e-152) (/ (* (sqrt 2.0) t) (sqrt (fma (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (* t 2.0)))))) (if (<= t 1.9e-158) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (* l l)))))) (/ (* t (+ -1.0 (+ (sqrt 2.0) 1.0))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 56,
    "avg_bits_err_input": 43.048819249214226,
    "avg_bits_err_output": 36.226438531804554,
    "avg_bits_err_improve": 6.822380717409672,
    "time": 33842.413818359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9409121748217673,
    "avg_bits_err_output": 3.9409121748217673,
    "avg_bits_err_improve": 0,
    "time": 48053.188720703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (- (+ (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) 2.0) 1.0))) 1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 1.1116693791695658,
    "avg_bits_err_output": 1.1130443791695657,
    "avg_bits_err_improve": -0.001374999999999904,
    "time": 17561.24072265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-320) (sqrt (* 2.0 (fma n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*))))) (* (- n) (fma (- (- t (* 2.0 (/ (* l l) Om)))) U (* U (- t (* 2.0 (/ (* l l) Om))))))))) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))))",
    "output_parens": 56,
    "avg_bits_err_input": 34.93906984707936,
    "avg_bits_err_output": 33.23457878031481,
    "avg_bits_err_improve": 1.7044910667645468,
    "time": 36107.40771484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (pow (/ k t) 2.0) 0.0))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (sin k) (- (tan k)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 47.464270556938324,
    "avg_bits_err_output": 37.742490388924594,
    "avg_bits_err_improve": 9.72178016801373,
    "time": 63609.65673828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.09885611619477,
    "avg_bits_err_output": 32.084550810542964,
    "avg_bits_err_improve": 0.014305305651802769,
    "time": 41747.968505859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5102094015860297,
    "avg_bits_err_output": 0.5102094015860297,
    "avg_bits_err_improve": 0,
    "time": 32868.95361328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* n (+ (* n (/ (fma 2.0 PI -1.0) n)) 1.0)) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5278220424144104,
    "avg_bits_err_output": 0.5634668247572755,
    "avg_bits_err_improve": -0.035644782342865056,
    "time": 42531.978271484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- (cos (/ K 2.0))) (+ (* J (- (exp (- l)) (exp l))) (fma (- (exp l)) J (* (exp l) J)))) U)",
    "output_parens": 16,
    "avg_bits_err_input": 17.524502448964775,
    "avg_bits_err_output": 17.526431929560783,
    "avg_bits_err_improve": -0.0019294805960079486,
    "time": 52847.551513671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (+ (* K n) (+ (- (* K m) K) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (* (+ m n) (fma (+ m (+ n -1.0)) (- (* (+ m (+ n -1.0)) (* (+ m n) (/ (/ (/ (/ K (+ m n)) (+ m n)) (+ m (+ n -1.0))) (+ m (+ n -1.0))))) (* (+ m (+ n -1.0)) (/ (/ (/ (/ K (+ m n)) (+ m n)) (+ m (+ n -1.0))) (+ m (+ n -1.0))))) (/ (/ K (+ m n)) (+ m n)))) (+ m (- (+ n 1.0) 1.0))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 91,
    "avg_bits_err_input": 15.238814040605956,
    "avg_bits_err_output": 3.2948059845321254,
    "avg_bits_err_improve": 11.94400805607383,
    "time": 37272.3115234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (- (- (sqrt (+ 1.0 (pow (/ U (* J (* 2.0 (cos (/ K 2.0))))) 2.0))) -1.0) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 18.24563684218813,
    "avg_bits_err_output": 18.25204736875253,
    "avg_bits_err_improve": -0.006410526564401664,
    "time": 49057.2275390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 1e+277) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (pow (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ 1.0 (log1p (expm1 (/ (* M D) (+ d d))))))) 2.0) (/ h l))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.99973424969177,
    "avg_bits_err_output": 13.483115860618723,
    "avg_bits_err_improve": 0.5166183890730469,
    "time": 34536.682861328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.127674924208797,
    "avg_bits_err_output": 19.127674924208797,
    "avg_bits_err_improve": 0,
    "time": 40168.02880859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (* (- (/ (* d (* d c0)) (* D (* D (* w h)))) M) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.578335426410895,
    "avg_bits_err_output": 56.78563037800313,
    "avg_bits_err_improve": 2.7927050484077682,
    "time": 33418.963623046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= d -7.2e-16) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* d 2.0)) 2.0)) (/ h l)))) (if (<= d 9.2e+193) (fma (pow (/ d l) 0.5) (pow (/ d h) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (- (pow (/ d h) 0.5)) (* (pow (/ d l) 0.5) (* 0.5 (/ h l)))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (- 1.0 (* 0.5 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)))))))",
    "output_parens": 63,
    "avg_bits_err_input": 26.63086244926833,
    "avg_bits_err_output": 27.335805973093603,
    "avg_bits_err_improve": -0.7049435238252713,
    "time": 49132.342529296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* 3.0 (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9824693609377705,
    "avg_bits_err_output": 0.013667481250360576,
    "avg_bits_err_improve": 0.9688018796874099,
    "time": 20593.255126953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* t (* v v))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.450863597056105,
    "avg_bits_err_output": 0.38458963093357396,
    "avg_bits_err_improve": 0.06627396612253106,
    "time": 17001.599365234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (- (/ (sqrt 2.0) 4.0) (* (* v v) (/ (sqrt 2.0) 4.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.013219360937770434,
    "avg_bits_err_output": 0.01189624062518029,
    "avg_bits_err_improve": 0.0013231203125901436,
    "time": 15996.7705078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5547808128388627,
    "avg_bits_err_output": 0.5547808128388627,
    "avg_bits_err_improve": 0,
    "time": 9308.47509765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.044204896471663,
    "avg_bits_err_output": 2.0353086558464826,
    "avg_bits_err_improve": 0.00889624062518024,
    "time": 17957.614501953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (exp (log1p (exp (/ (+ Vef (+ Ev (- EAccept mu))) KbT))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.01445373388755319,
    "avg_bits_err_output": 0.014618974899414109,
    "avg_bits_err_improve": -0.0001652410118609185,
    "time": 10885.144287109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (pow (fma a a (* b b)) 2.0) (fma b (* b 4.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1838846127163147,
    "avg_bits_err_output": 0.18309924843993386,
    "avg_bits_err_improve": 0.0007853642763808455,
    "time": 24761.720947265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (pow (fma a a (* b b)) 2.0) (fma b (* b (- 4.0 (* a 12.0))) (+ (* a (* 4.0 (* a a))) (+ -1.0 (* 4.0 (* a a))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.18600154215544593,
    "avg_bits_err_output": 0.1883396549010115,
    "avg_bits_err_improve": -0.002338112745565585,
    "time": 45449.765869140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1849129259339448,
    "avg_bits_err_output": 0.1849129259339448,
    "avg_bits_err_improve": 0,
    "time": 27160.232421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (+ (* x x) (* p (* p 4.0))))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.183217069403334,
    "avg_bits_err_output": 13.187257511568673,
    "avg_bits_err_improve": -0.004040442165338831,
    "time": 14814.567626953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.80101797391755,
    "avg_bits_err_output": 0.065375,
    "avg_bits_err_improve": 40.73564297391755,
    "time": 4325.1015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (- x -1.0) 1.0) (sin x)) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.001298892878165,
    "avg_bits_err_output": 25.409791190784475,
    "avg_bits_err_improve": 5.59150770209369,
    "time": 46121.470458984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (* a c) (+ (+ (fma c (* a -2.0) (* b_2 b_2)) (* a c)) (* c (- a))))) b_2) a)",
    "output_parens": 13,
    "avg_bits_err_input": 33.59610348022696,
    "avg_bits_err_output": 33.5990222992036,
    "avg_bits_err_improve": -0.002918818976638704,
    "time": 24091.419921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.083170787186184,
    "avg_bits_err_output": 34.083170787186184,
    "avg_bits_err_improve": 0,
    "time": 18780.225341796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.4356699051609,
    "avg_bits_err_output": 31.4356699051609,
    "avg_bits_err_improve": 0,
    "time": 34615.6162109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.65638854650896,
    "avg_bits_err_output": 32.65638854650896,
    "avg_bits_err_improve": 0,
    "time": 27669.104736328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (- (* (+ (log N) 1.0) (* (+ (log N) 1.0) (/ 1.0 (+ (log N) 1.0)))) 1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 29.519028777784158,
    "avg_bits_err_output": 29.580405408200633,
    "avg_bits_err_improve": -0.061376630416475564,
    "time": 21547.32666015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (- (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (/ 1.0 (+ 1.0 x))) (/ 1.0 (+ 1.0 x)))) (- (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.775579121337277,
    "avg_bits_err_output": 3.311179813700414,
    "avg_bits_err_improve": 11.464399307636864,
    "time": 39398.390380859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (* (cos (+ x eps)) (* (cos (+ x eps)) (* (cos (+ x eps)) (* (/ 1.0 (cos (+ x eps))) (/ 1.0 (cos (+ x eps))))))) (cos x))",
    "output_parens": 18,
    "avg_bits_err_input": 39.53444158006489,
    "avg_bits_err_output": 39.614234660672594,
    "avg_bits_err_improve": -0.07979308060770052,
    "time": 61816.926513671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.87015529724748,
    "avg_bits_err_output": 29.57361629658565,
    "avg_bits_err_improve": 0.29653900066182715,
    "time": 25901.37939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.325512253725027,
    "avg_bits_err_output": 30.325512253725027,
    "avg_bits_err_improve": 0,
    "time": 92075.25512695312,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.76671665607642,
    "avg_bits_err_output": 33.76332096353321,
    "avg_bits_err_improve": 0.003395692543207929,
    "time": 19762.32470703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.90217231269888,
    "avg_bits_err_output": 33.90217231269888,
    "avg_bits_err_improve": 0,
    "time": 20852.282470703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.44332515996419,
    "avg_bits_err_output": 60.04772058138852,
    "avg_bits_err_improve": 1.3956045785756714,
    "time": 47326.36328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.009547988953926,
    "avg_bits_err_output": 0.08762771605275928,
    "avg_bits_err_improve": 62.92192027290117,
    "time": 30474.060546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (* (/ 1.0 (* (/ 1.0 (/ (- 1.0 eps) (- eps -1.0))) (* (/ (- 1.0 eps) (- eps -1.0)) (- (+ 1.0 (/ (- 1.0 eps) (+ 1.0 eps))) 1.0)))) (* (/ (- 1.0 eps) (+ 1.0 eps)) (/ (- 1.0 eps) (+ 1.0 eps)))))",
    "output_parens": 24,
    "avg_bits_err_input": 58.534877072668486,
    "avg_bits_err_output": 58.57396453224882,
    "avg_bits_err_improve": -0.03908745958033677,
    "time": 296499.2023925781,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (/ 1.0 (tan x)) (* (/ 1.0 (tan x)) (/ (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x)))) (- (/ 1.0 x) (fma (/ 1.0 (tan x)) (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x)))))",
    "output_parens": 22,
    "avg_bits_err_input": 59.796361490079846,
    "avg_bits_err_output": 59.68028295652542,
    "avg_bits_err_improve": 0.11607853355442899,
    "time": 45830.389404296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= a -1.75e-10) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (/ (- (+ (+ (* eps (exp (* eps (+ a b)))) 2.0) -2.0) eps) (- (* (exp (* eps b)) (+ -1.0 (exp (* eps a)))) (expm1 (* eps a)))))",
    "output_parens": 29,
    "avg_bits_err_input": 60.24005956845239,
    "avg_bits_err_output": 36.881346647137676,
    "avg_bits_err_improve": 23.358712921314712,
    "time": 35383.65478515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.20429917238173,
    "avg_bits_err_output": 0.5166462406251803,
    "avg_bits_err_improve": 40.68765293175655,
    "time": 6085.5517578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.54128667628145,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.54066167628145,
    "time": 3119.005126953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.21804364908251,
    "avg_bits_err_output": 0.017365861892522247,
    "avg_bits_err_improve": 29.20067778718999,
    "time": 4536.398193359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.494713068448025,
    "avg_bits_err_output": 28.545757038745364,
    "avg_bits_err_improve": 0.9489560297026607,
    "time": 35848.79443359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.551911233420748,
    "avg_bits_err_output": 10.551911233420748,
    "avg_bits_err_improve": 0,
    "time": 33693.173095703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (tan x) (fma (tan x) (/ -2.0 (tan x)) 1.0) (tan (+ x eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 36.82284035546564,
    "avg_bits_err_output": 36.93396624973151,
    "avg_bits_err_improve": -0.11112589426587505,
    "time": 39422.996826171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (* (* (+ 1.0 (sqrt x)) (/ 1.0 (+ 1.0 (sqrt x)))) (+ 1.0 (+ (sqrt x) (- -1.0 (sqrt x))))) (- (sqrt (+ 1.0 x)) (sqrt x)))",
    "output_parens": 17,
    "avg_bits_err_input": 30.07898519023648,
    "avg_bits_err_output": 29.377201521797552,
    "avg_bits_err_improve": 0.701783668438928,
    "time": 27562.095703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (expm1 (log1p (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.994920403285256,
    "avg_bits_err_output": 37.00261386824633,
    "avg_bits_err_improve": -0.0076934649610720385,
    "time": 55503.576416015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.89772360002084,
    "avg_bits_err_output": 19.89772360002084,
    "avg_bits_err_improve": 0,
    "time": 27834.066162109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (+ (atan (+ N 1.0)) (log (exp (- -1.0 (atan N))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.240620254415086,
    "avg_bits_err_output": 15.245392082028532,
    "avg_bits_err_improve": -0.004771827613446078,
    "time": 40608.50146484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.45688257295531,
    "avg_bits_err_output": 29.45688257295531,
    "avg_bits_err_improve": 0,
    "time": 58846.065185546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (fma (- 1.0 m) (* (- 1.0 m) (/ m (- 1.0 m))) 0.0) v) 1.0) (- 1.0 m))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07492952695107366,
    "avg_bits_err_output": 0.08279757226510613,
    "avg_bits_err_improve": -0.00786804531403247,
    "time": 38171.658935546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (+ (* (* b a) (* b a)) (* (* b (- a)) (fma (- b) a (* b a)))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.207636134846265,
    "avg_bits_err_output": 0.256,
    "avg_bits_err_improve": 15.951636134846265,
    "time": 20397.8828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (fma (* PI PI) (* PI (* (/ (/ (/ angle 180.0) PI) (* PI PI)) PI)) 0.0))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.41193543653165,
    "avg_bits_err_output": 20.467908820102572,
    "avg_bits_err_improve": -0.05597338357092241,
    "time": 59542.0751953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) (* 2.0 (fma (- (pow a 2.0)) (sin (* PI (/ angle 180.0))) (* (pow a 2.0) (sin (* PI (/ angle 180.0))))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 24,
    "avg_bits_err_input": 30.96692917185439,
    "avg_bits_err_output": 30.980150602295343,
    "avg_bits_err_improve": -0.013221430440953696,
    "time": 75342.80102539062,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* PI (* (* (/ angle 180.0) (/ 1.0 PI)) (- (- PI)))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 20.225061056929945,
    "avg_bits_err_output": 20.23438627120537,
    "avg_bits_err_improve": -0.009325214275424543,
    "time": 73244.70166015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (fma (- 1.0 m) (* (- 1.0 m) (/ m (- 1.0 m))) 0.0) v) 1.0) m)",
    "output_parens": 9,
    "avg_bits_err_input": 0.17904492500144228,
    "avg_bits_err_output": 0.18658985000288458,
    "avg_bits_err_improve": -0.007544925001442299,
    "time": 29521.314453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.324533471101042,
    "avg_bits_err_output": 0.3226520587873961,
    "avg_bits_err_improve": 0.0018814123136459138,
    "time": 28362.970703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13295996250072117,
    "avg_bits_err_output": 0.13295996250072117,
    "avg_bits_err_improve": 0,
    "time": 30950.060302734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos (- lambda1 lambda2)) (cos phi1)) (cos phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.953097082217212,
    "avg_bits_err_output": 16.948844070425853,
    "avg_bits_err_improve": 0.004253011791359285,
    "time": 63627.799560546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (/ (sqrt (fma a (* c -4.0) (* b b))) (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))) (* (sqrt (fma a (* c -4.0) (* b b))) (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))) (- b)) (+ a a))",
    "output_parens": 30,
    "avg_bits_err_input": 52.821499066727064,
    "avg_bits_err_output": 51.60550870236212,
    "avg_bits_err_improve": 1.2159903643649415,
    "time": 34185.863037109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (* (sqrt (fma b b (* a (* c -4.0)))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.60818091170491,
    "avg_bits_err_output": 28.653815851408915,
    "avg_bits_err_improve": -0.045634939704005006,
    "time": 32557.525390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-22) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (sqrt (- (exp (log1p (fma b b (* a (* c -4.0))))) 1.0)) b) (+ a a)))",
    "output_parens": 28,
    "avg_bits_err_input": 43.89645211831586,
    "avg_bits_err_output": 42.94152304243957,
    "avg_bits_err_improve": 0.9549290758762865,
    "time": 26501.69091796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.76344596353321,
    "avg_bits_err_output": 33.786588544329696,
    "avg_bits_err_improve": -0.023142580796488232,
    "time": 21310.73486328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8691847769019289,
    "avg_bits_err_output": 0.8691847769019289,
    "avg_bits_err_improve": 0,
    "time": 30624.89794921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(expm1 (+ (+ (log (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) -1.0) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 29.46947039949891,
    "avg_bits_err_output": 29.47060024589728,
    "avg_bits_err_improve": -0.0011298463983706597,
    "time": 16492.607666015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.01768685983989,
    "avg_bits_err_output": 1.1357005640636721,
    "avg_bits_err_improve": 56.881986295776215,
    "time": 14581.005126953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.026838844259885,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 58.018463844259884,
    "time": 8922.819091796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008813721875540867,
    "avg_bits_err_output": 0.008813721875540867,
    "avg_bits_err_improve": 0,
    "time": 2428.3701171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.345,
    "avg_bits_err_output": 32.345,
    "avg_bits_err_improve": 0,
    "time": 4692.5634765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (expm1 (log1p (log (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.52256983069233,
    "avg_bits_err_output": 58.57914295100492,
    "avg_bits_err_improve": -0.05657312031258499,
    "time": 136041.57983398438,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (* (/ 1.0 (- 1.0 (* x x))) (+ (* (* x x) (* x x)) (- (- (* x x)) (fma x x -1.0))))) x)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.019625,
    "avg_bits_err_output": 0.020125,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 7400.417724609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.131125,
    "avg_bits_err_output": 0.131,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 34166.343505859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* eh (* (sin (atan (/ (* (- eh) (tan t)) ew))) (sin t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13334436093777044,
    "avg_bits_err_output": 0.1330212406251803,
    "avg_bits_err_improve": 0.0003231203125901305,
    "time": 32324.2734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (* (- lambda1 lambda2) (exp (log1p (* (cos (/ (+ phi1 phi2) 2.0)) (/ (/ (- lambda1 lambda2) (- lambda1 lambda2)) (cos (/ (+ phi1 phi2) 2.0))))))) (* (cos (/ (+ phi1 phi2) 2.0)) (- lambda2 lambda1))) (- phi1 phi2)))",
    "output_parens": 27,
    "avg_bits_err_input": 39.19432324589845,
    "avg_bits_err_output": 3.733479344932546,
    "avg_bits_err_improve": 35.460843900965905,
    "time": 47671.24755859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.326517097683741,
    "avg_bits_err_output": 14.326517097683741,
    "avg_bits_err_improve": 0,
    "time": 5746.687744140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1540273748569362,
    "avg_bits_err_output": 0.15076020590998976,
    "avg_bits_err_improve": 0.0032671689469464527,
    "time": 42022.011962890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.46e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))))) (- b)) (* 3.0 a)) (/ (- (+ (sqrt (fma a (* c -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.85289051060008,
    "avg_bits_err_output": 50.79352951546049,
    "avg_bits_err_improve": 2.059360995139592,
    "time": 25548.24072265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.721469969936166,
    "avg_bits_err_output": 28.655971690575104,
    "avg_bits_err_improve": 0.06549827936106212,
    "time": 23933.049072265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-22) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (+ (exp (log1p (fma b b (* a (* c -3.0))))) -1.0))) (* 3.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 43.99996235999059,
    "avg_bits_err_output": 43.03584035694208,
    "avg_bits_err_improve": 0.9641220030485087,
    "time": 28089.41650390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma c (* a (* (/ -3.0 c) c)) (* b b))) b) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8056581876436,
    "avg_bits_err_output": 33.82072190951914,
    "avg_bits_err_improve": -0.015063721875542058,
    "time": 18530.036376953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.121493596458414,
    "avg_bits_err_output": 13.121833804109993,
    "avg_bits_err_improve": -0.00034020765157904975,
    "time": 80091.23828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ x -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.050979948618203,
    "avg_bits_err_output": 29.05574069940663,
    "avg_bits_err_improve": -0.00476075078842797,
    "time": 157398.02783203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (* (/ 1.0 (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x)))) (/ x (+ x 1.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.012521240625180289,
    "avg_bits_err_improve": -0.0010212406251802891,
    "time": 8735.728515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (+ (* (/ 1.0 (+ 1.0 x)) (- 1.0 (/ 1.0 (+ 1.0 x)))) (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) 2.0))) (/ 1.0 (+ x -1.0))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.261181778937402,
    "avg_bits_err_output": 12.435047640478587,
    "avg_bits_err_improve": 1.8261341384588157,
    "time": 96882.85717773438,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* 2.0 (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.75869241148732,
    "avg_bits_err_output": 52.44462647373851,
    "avg_bits_err_improve": 0.31406593774880776,
    "time": 35590.676025390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.234304135622732,
    "avg_bits_err_output": 29.234304135622732,
    "avg_bits_err_improve": 0,
    "time": 36614.13818359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (* F (- (* 2.0 (pow B 2.0)) (* (* A C) 8.0))) (+ C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output_parens": 21,
    "avg_bits_err_input": 52.28914102363238,
    "avg_bits_err_output": 51.989181022823956,
    "avg_bits_err_improve": 0.2999600008084258,
    "time": 38586.9091796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.839933858978108,
    "avg_bits_err_output": 15.839933858978108,
    "avg_bits_err_improve": 0,
    "time": 1778.53466796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.19173754887036,
    "avg_bits_err_output": 36.19173754887036,
    "avg_bits_err_improve": 0,
    "time": 30163.79736328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9905926703212454,
    "avg_bits_err_output": 0.9905926703212454,
    "avg_bits_err_improve": 0,
    "time": 4321.90771484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7236981203125902,
    "avg_bits_err_output": 0.7236981203125902,
    "avg_bits_err_improve": 0,
    "time": 3511.966796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.187339252153905,
    "avg_bits_err_output": 11.187339252153905,
    "avg_bits_err_improve": 0,
    "time": 21923.129150390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output_parens": 5,
    "avg_bits_err_input": 0.38977469366336176,
    "avg_bits_err_output": 0.38977469366336176,
    "avg_bits_err_improve": 0,
    "time": 11715.386474609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.11471906277841,
    "avg_bits_err_output": 15.349526631251504,
    "avg_bits_err_improve": 37.76519243152691,
    "time": 24134.955322265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.696461706896871,
    "avg_bits_err_output": 5.696461706896871,
    "avg_bits_err_improve": 0,
    "time": 22851.436279296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 0,
    "time": 5380.0341796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1153.5625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -2e-91) (- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* (* w r) (* 0.375 (* w r))) (* (* v 0.25) (* (* w r) (* w r)))) (- 1.0 v))) (if (<= r 1e-119) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* (* w (/ (* r r) w)) w))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* (* w r) (* 0.375 (* w r))) (* (* v 0.25) (* (* w r) (* w r)))) (- 1.0 v)))))",
    "output_parens": 50,
    "avg_bits_err_input": 12.764505436557108,
    "avg_bits_err_output": 6.592804649957792,
    "avg_bits_err_improve": 6.171700786599317,
    "time": 31053.588134765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) 3.0 (+ x1 (fma (fma x1 x1 1.0) (- (* (/ (fma 2.0 x2 (* x1 (- (* x1 3.0) 1.0))) (fma x1 x1 1.0)) (+ (* x1 (* x1 4.0)) (* (+ x1 x1) (+ (/ (fma 2.0 x2 (* x1 (- (* x1 3.0) 1.0))) (fma x1 x1 1.0)) -3.0)))) (* x1 (* x1 6.0))) (* x1 (+ (* x1 x1) (* x1 (* 3.0 (/ (fma 2.0 x2 (* x1 (- (* x1 3.0) 1.0))) (fma x1 x1 1.0))))))))))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5078143109829513,
    "avg_bits_err_output": 0.2696555432801089,
    "avg_bits_err_improve": 0.2381587677028424,
    "time": 79725.74682617188,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.078678852635576,
    "avg_bits_err_output": 18.078678852635576,
    "avg_bits_err_improve": 0,
    "time": 35818.735107421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* x (* 0.12900613773279798 (* x x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.25050960194963134,
    "avg_bits_err_output": 0.18658516601330313,
    "avg_bits_err_improve": 0.06392443593632821,
    "time": 25983.917724609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00404024101186092,
    "avg_bits_err_output": 0.00404024101186092,
    "avg_bits_err_improve": 0,
    "time": 1658.900634765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.816422851129083,
    "avg_bits_err_output": 9.64856888824167,
    "avg_bits_err_improve": 5.167853962887413,
    "time": 36232.625244140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ 2.0 (+ (* (exp (- (fma eps x x))) (- 1.0 (/ 1.0 eps))) (+ -2.0 (* (+ 1.0 (/ 1.0 eps)) (exp (- (* eps x) x)))))) 2.0)",
    "output_parens": 16,
    "avg_bits_err_input": 29.61187939349448,
    "avg_bits_err_output": 0.6647902448803533,
    "avg_bits_err_improve": 28.947089148614126,
    "time": 27304.503662109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.018625,
    "avg_bits_err_output": 0.021698120312590146,
    "avg_bits_err_improve": -0.003073120312590147,
    "time": 18791.001708984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 2.0 (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0))))) (+ 2.0 (+ (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) 4.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.023375,
    "avg_bits_err_output": 0.02314624062518029,
    "avg_bits_err_improve": 0.0002287593748197085,
    "time": 29512.293701171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.049625,
    "avg_bits_err_output": 0.051011842188131006,
    "avg_bits_err_improve": -0.001386842188131003,
    "time": 10746.475341796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3091.884521484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2790.516845703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 2946.846435546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8048787719210315,
    "avg_bits_err_output": 0.24625,
    "avg_bits_err_improve": 7.558628771921032,
    "time": 66890.74536132812,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.176543722603144,
    "avg_bits_err_output": 7.176543722603144,
    "avg_bits_err_improve": 0,
    "time": 29326.263671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.948025801308923,
    "avg_bits_err_output": 15.948025801308923,
    "avg_bits_err_improve": 0,
    "time": 50077.57470703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (* (cos x) (/ (exp (* x (* x 10.0))) (cos x))) (fma (/ (exp (* x (* x 10.0))) (cos x)) (* (/ 1.0 (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (* (cos x) (exp (log1p (cos x))))) (fma (cos x) (fma (/ (exp (* x (* x 10.0))) (cos x)) (/ 1.0 (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (* (/ 1.0 (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (- (/ (exp (* x (* x 10.0))) (cos x))))) (fma (cos x) (* (/ 1.0 (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (- (/ (exp (* x (* x 10.0))) (cos x)))) (* (cos x) (fma (/ (exp (* x (* x 10.0))) (cos x)) (/ 1.0 (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (* (/ 1.0 (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (- (/ (exp (* x (* x 10.0))) (cos x))))))))))",
    "output_parens": 107,
    "avg_bits_err_input": 3.543833777534675,
    "avg_bits_err_output": 3.60282384606899,
    "avg_bits_err_improve": -0.058990068534314766,
    "time": 39133.00927734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.13048641923284,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.13048641923284,
    "time": 4635.671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.37399185609116,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.37374185609116,
    "time": 4291.6259765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.307125,
    "avg_bits_err_improve": 63.692875,
    "time": 5722.51416015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* t 4e-32)) (- (* (* (/ 1.0 (* t (* t 4e-32))) (* t t)) -4e-32)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.84325371826954,
    "avg_bits_err_output": 0.3584603390679989,
    "avg_bits_err_improve": 61.48479337920154,
    "time": 22022.088623046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.90217231269888,
    "avg_bits_err_output": 33.90217231269888,
    "avg_bits_err_improve": 0,
    "time": 20743.171142578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.76344596353321,
    "avg_bits_err_output": 33.786588544329696,
    "avg_bits_err_improve": -0.023142580796488232,
    "time": 20584.939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2746.95166015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.674689452994,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 39.665439452994,
    "time": 4535.086669921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.329775514485313,
    "avg_bits_err_output": 20.329775514485313,
    "avg_bits_err_improve": 0,
    "time": 2498.05224609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.665714915995972,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.665714915995972,
    "time": 5016.03076171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.00325,
    "avg_bits_err_improve": 0.034374999999999996,
    "time": 5688.0546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019344360937770436,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 0.008844360937770435,
    "time": 3791.308349609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.015875,
    "time": 6526.27490234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 2168.67919921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40403101562950744,
    "avg_bits_err_output": 0.239625,
    "avg_bits_err_improve": 0.16440601562950743,
    "time": 14564.3134765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.19763256285712,
    "avg_bits_err_output": 30.19763256285712,
    "avg_bits_err_improve": 0,
    "time": 96151.68017578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.89990283792306,
    "avg_bits_err_output": 24.89990283792306,
    "avg_bits_err_improve": 0,
    "time": 30368.068603515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (log (exp (/ (- x (sin x)) (tan x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.992117789079575,
    "avg_bits_err_output": 30.007563270706378,
    "avg_bits_err_improve": -0.015445481626802149,
    "time": 71598.26245117188,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007337554964767636,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006212554964767636,
    "time": 4601.08447265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.798963025806536,
    "avg_bits_err_output": 47.798963025806536,
    "avg_bits_err_improve": 0,
    "time": 83009.76879882812,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.035564446303326,
    "avg_bits_err_output": 26.034293205678143,
    "avg_bits_err_improve": 0.0012712406251829123,
    "time": 25410.96533203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.95546451676505,
    "avg_bits_err_output": 25.955214516765054,
    "avg_bits_err_improve": 0.000249999999997641,
    "time": 23974.59716796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03225,
    "avg_bits_err_output": 0.023324960075102284,
    "avg_bits_err_improve": 0.008925039924897717,
    "time": 8774.626708984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (fma ux (+ maxCos -1.0) (- (* (fma maxCos ux (- 1.0 ux)) (* (/ (fma maxCos ux (- ux)) (fma maxCos ux (- 1.0 ux))) (exp (log1p (fma maxCos ux (- 1.0 ux)))))) (* (fma maxCos ux (- 1.0 ux)) (/ (fma maxCos ux (- ux)) (fma maxCos ux (- 1.0 ux)))))))))",
    "output_parens": 30,
    "avg_bits_err_input": 13.686136210332535,
    "avg_bits_err_output": 0.5450968655811326,
    "avg_bits_err_improve": 13.141039344751402,
    "time": 29256.24365234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (* ux (* maxCos (- -1.0 (* ux maxCos)))) (* ux (- (+ maxCos (- -1.0 (* ux maxCos))) (- (fma ux maxCos 1.0) ux))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.72487156003154,
    "avg_bits_err_output": 0.35762116108047903,
    "avg_bits_err_improve": 13.367250398951061,
    "time": 40766.12939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.34560481299364165,
    "avg_bits_err_output": 0.33694958173182227,
    "avg_bits_err_improve": 0.008655231261819385,
    "time": 54042.262451171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.2039093460579787,
    "avg_bits_err_output": 0.20410746637056884,
    "avg_bits_err_improve": -0.0001981203125901443,
    "time": 19397.51123046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5239761466028169,
    "avg_bits_err_output": 0.5168219043167702,
    "avg_bits_err_improve": 0.007154242286046664,
    "time": 89646.02734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (cos (* 6.28318530718 u2)) (* (cos (* 6.28318530718 u2)) (/ (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.33648332060704467,
    "avg_bits_err_output": 0.3407715903558275,
    "avg_bits_err_improve": -0.004288269748782825,
    "time": 33896.19384765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(+ (fma (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)) (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))) (* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 57,
    "avg_bits_err_input": 0.33416850618637534,
    "avg_bits_err_output": 0.33420422549666706,
    "avg_bits_err_improve": -3.571931029172637e-05,
    "time": 37047.537353515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05882812611399042,
    "avg_bits_err_output": 0.05882812611399042,
    "avg_bits_err_improve": 0,
    "time": 29544.860107421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (+ (+ s s) (* s (exp (/ (- (fabs x)) s)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13424615967520595,
    "avg_bits_err_output": 0.11764578528139426,
    "avg_bits_err_improve": 0.016600374393811693,
    "time": 28260.207763671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* tau x))) (* PI (* tau x))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6724961202122393,
    "avg_bits_err_output": 0.6732809363468223,
    "avg_bits_err_improve": -0.0007848161345830329,
    "time": 24696.853515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15205500933767416,
    "avg_bits_err_output": 0.1454621762088687,
    "avg_bits_err_improve": 0.006592833128805459,
    "time": 34239.88671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.579439253100349,
    "avg_bits_err_output": 2.579439253100349,
    "avg_bits_err_improve": 0,
    "time": 15855.71435546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v v)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4524569086763729,
    "avg_bits_err_output": 0.47258423007359374,
    "avg_bits_err_improve": -0.020127321397220843,
    "time": 40045.887451171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) (+ (expm1 (log1p (log (/ 1.0 (+ v v))))) 0.6931)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.133655879990983,
    "avg_bits_err_output": 0.1335994729487216,
    "avg_bits_err_improve": 5.6407042261397145e-05,
    "time": 10146.1591796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (* alpha alpha)) (* PI (* (log (* alpha alpha)) (/ 1.0 (log (* alpha alpha)))))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.4727386216274613,
    "avg_bits_err_output": 0.4882702990197249,
    "avg_bits_err_improve": -0.015531677392263632,
    "time": 26254.56005859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(fma 3.0 (* s (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))) (fma (- (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))) (- (* 3.0 s)) (* (- (* 3.0 s)) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 1.3366678960400442,
    "avg_bits_err_output": 1.339858238441587,
    "avg_bits_err_improve": -0.0031903424015427007,
    "time": 82252.07543945312,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.261449949987062,
    "avg_bits_err_output": 11.907445641778784,
    "avg_bits_err_improve": 0.3540043082082782,
    "time": 42964.013671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (expm1 (log1p (* PI (* r 6.0)))) s)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13820640067753484,
    "avg_bits_err_output": 0.15206973683973002,
    "avg_bits_err_improve": -0.013863336162195178,
    "time": 68570.20947265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i (- (* n0_i (* (- (sin (- normAngle (* normAngle u)))) (/ 1.0 (sin normAngle))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8725186000838073,
    "avg_bits_err_output": 0.8444031028510295,
    "avg_bits_err_improve": 0.028115497232777842,
    "time": 52264.126708984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.6713088026669302,
    "avg_bits_err_output": 0.671363126105422,
    "avg_bits_err_improve": -5.432343849187671e-05,
    "time": 59138.827880859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(expm1 (log1p (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.367400261435419,
    "avg_bits_err_output": 13.384886864811925,
    "avg_bits_err_improve": -0.017486603376505983,
    "time": 42265.030517578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (expm1 (log (- 1.0 u1)))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.414906258828818,
    "avg_bits_err_output": 13.414699973521452,
    "avg_bits_err_improve": 0.0002062853073656612,
    "time": 55402.844482421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* alpha (- alpha)) (fma alpha (* alpha alpha) (* (/ (log (- 1.0 u0)) (* alpha (- alpha))) (* alpha (* alpha (* alpha alpha))))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.056376922310076,
    "avg_bits_err_output": 13.705125297509298,
    "avg_bits_err_improve": 0.35125162480077776,
    "time": 36370.785888671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 16,
    "avg_bits_err_input": 12.66285528476113,
    "avg_bits_err_output": 12.664786647192535,
    "avg_bits_err_improve": -0.0019313624314047928,
    "time": 46960.763427734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+39) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l)))) (if (<= (* PI l) 50000000.0) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l))))))",
    "output_parens": 37,
    "avg_bits_err_input": 16.691843987733897,
    "avg_bits_err_output": 13.13824432990261,
    "avg_bits_err_improve": 3.5535996578312865,
    "time": 34050.43701171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21904248125036055,
    "avg_bits_err_output": 0.21560879558994792,
    "avg_bits_err_improve": 0.003433685660412633,
    "time": 35724.3291015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.969781206720246,
    "avg_bits_err_output": 13.969781206720246,
    "avg_bits_err_improve": 0,
    "time": 55883.14013671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (expm1 (log (- (exp (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.33326911280274,
    "avg_bits_err_output": 61.40374036219349,
    "avg_bits_err_improve": -0.07047124939074934,
    "time": 80668.23168945312,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -6e-147) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 2e-248) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 51,
    "avg_bits_err_input": 42.37771968794223,
    "avg_bits_err_output": 35.62697944780728,
    "avg_bits_err_improve": 6.750740240134952,
    "time": 32499.813720703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.860575818610361,
    "avg_bits_err_output": 3.860575818610361,
    "avg_bits_err_improve": 0,
    "time": 74733.97900390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0458010014493448,
    "avg_bits_err_output": 1.0458010014493448,
    "avg_bits_err_improve": 0,
    "time": 10297.923828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.044448814120882,
    "avg_bits_err_output": 10.044448814120882,
    "avg_bits_err_improve": 0,
    "time": 67043.7275390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* (+ n n) (+ (- U) (* U (fma n (* (- U* U) (pow (/ l Om) 2.0)) (+ t (- 1.0 (* 2.0 (/ (* l l) Om))))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 45,
    "avg_bits_err_input": 35.1978862865177,
    "avg_bits_err_output": 32.5878962037008,
    "avg_bits_err_improve": 2.6099900828169,
    "time": 31109.339599609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (pow (/ k t) 2.0) (* (tan k) (* (/ (pow t 3.0) (* l l)) (* (sin k) (* (tan k) (/ (/ (sin k) (sin k)) (tan k))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 47.38494465601513,
    "avg_bits_err_output": 39.70227511153567,
    "avg_bits_err_improve": 7.6826695444794595,
    "time": 57479.669189453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (sin k) (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.22962081645923,
    "avg_bits_err_output": 32.20986493381343,
    "avg_bits_err_improve": 0.019755882645803524,
    "time": 38431.63134765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* a1 (* a1 (/ (cos th) (sqrt 2.0)))) (* a2 (* (/ (cos th) (sqrt 2.0)) a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5215889125209148,
    "avg_bits_err_output": 0.47720902501875145,
    "avg_bits_err_improve": 0.04437988750216332,
    "time": 31985.52099609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (- (+ (* n PI) (+ (fma PI n n) 0.0)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.49177474195505366,
    "avg_bits_err_output": 0.5152829107520047,
    "avg_bits_err_improve": -0.023508168796951057,
    "time": 42061.726318359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (+ (* (cos (/ K 2.0)) (exp l)) (* (exp (- l)) (- (cos (/ K 2.0)))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.508431442493627,
    "avg_bits_err_output": 17.511313804501995,
    "avg_bits_err_improve": -0.002882362008367778,
    "time": 39667.6142578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (+ (* K n) (+ (- (* K m) K) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* (+ m n) (- (- (+ m n)) (* (- (+ m n)) (exp (log1p (/ (/ K (+ m n)) (+ m n)))))))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 65,
    "avg_bits_err_input": 15.561705301890038,
    "avg_bits_err_output": 3.3490094595547464,
    "avg_bits_err_improve": 12.212695842335291,
    "time": 28088.08203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.464323120312592,
    "avg_bits_err_output": 17.464323120312592,
    "avg_bits_err_improve": 0,
    "time": 47626.165283203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (+ (+ 2.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))) -2.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 14.651517897889446,
    "avg_bits_err_output": 14.651392897889448,
    "avg_bits_err_improve": 0.0001249999999988205,
    "time": 21332.833740234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.103543663613543,
    "avg_bits_err_output": 19.103543663613543,
    "avg_bits_err_improve": 0,
    "time": 33435.5185546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(/ (* (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))) (/ c0 (+ w w))) 1.0)",
    "output_parens": 27,
    "avg_bits_err_input": 59.690435362156144,
    "avg_bits_err_output": 57.12485657646685,
    "avg_bits_err_improve": 2.565578785689297,
    "time": 35981.33447265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* d 2.0)) 2.0)) (/ h l))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.882942619124844,
    "avg_bits_err_output": 26.882942619124844,
    "avg_bits_err_improve": 0,
    "time": 50142.8681640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.55160651413115,
    "avg_bits_err_output": 15.55160651413115,
    "avg_bits_err_improve": 0,
    "time": 15422.58642578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (- (sqrt (- 2.0 (* v (* v 6.0))))) (- -3.0 (* v (* v -3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9842924812503606,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.9740424812503606,
    "time": 10090.18310546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42143915857060477,
    "avg_bits_err_output": 0.3644210366592053,
    "avg_bits_err_improve": 0.05701812191139949,
    "time": 26007.503662109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01252124062518029,
    "avg_bits_err_output": 0.00989624062518029,
    "avg_bits_err_improve": 0.0026250000000000006,
    "time": 15627.85693359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5478636605581666,
    "avg_bits_err_output": 0.5478636605581666,
    "avg_bits_err_improve": 0,
    "time": 8940.184814453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (fma k k (fma k 10.0 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 1.9274456531526651,
    "avg_bits_err_output": 1.885695653152665,
    "avg_bits_err_improve": 0.041750000000000176,
    "time": 34505.119873046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02812955818689803,
    "avg_bits_err_output": 0.02812955818689803,
    "avg_bits_err_improve": 0,
    "time": 6824.1689453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18284945195251592,
    "avg_bits_err_output": 0.18284945195251592,
    "avg_bits_err_improve": 0,
    "time": 44252.627685546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.19612962650265922,
    "avg_bits_err_output": 0.19612962650265922,
    "avg_bits_err_improve": 0,
    "time": 5087.630859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1943640478111961,
    "avg_bits_err_output": 0.1943640478111961,
    "avg_bits_err_improve": 0,
    "time": 24442.701904296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.472645032385683,
    "avg_bits_err_output": 13.472645032385683,
    "avg_bits_err_improve": 0,
    "time": 20159.3154296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.566345583290996,
    "avg_bits_err_output": 0.015125,
    "avg_bits_err_improve": 40.551220583291,
    "time": 7899.78857421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 7,
    "avg_bits_err_input": 31.668470336410316,
    "avg_bits_err_output": 30.896377050968923,
    "avg_bits_err_improve": 0.7720932854413931,
    "time": 36815.622802734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.71794520895431,
    "avg_bits_err_output": 33.71794520895431,
    "avg_bits_err_improve": 0,
    "time": 30135.65283203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (fma b_2 b_2 (* c (- a))) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c)))))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 33.97385611769561,
    "avg_bits_err_output": 33.98098930418383,
    "avg_bits_err_improve": -0.007133186488218257,
    "time": 21761.4248046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(log1p (expm1 (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.376303852537593,
    "avg_bits_err_output": 31.3764608230964,
    "avg_bits_err_improve": -0.00015697055880892208,
    "time": 27528.844482421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (+ (+ (pow (+ 1.0 x) (/ 1.0 n)) 3.0) -3.0) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.469962662104635,
    "avg_bits_err_output": 32.52332444689737,
    "avg_bits_err_improve": -0.05336178479273457,
    "time": 97926.5498046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- 1.0 (log (exp (+ (log N) (- 1.0 (log1p N))))))",
    "output_parens": 7,
    "avg_bits_err_input": 29.552227315224616,
    "avg_bits_err_output": 29.552833519954092,
    "avg_bits_err_improve": -0.0006062047294754791,
    "time": 27597.878173828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (- (* (/ 1.0 (- (cos x))) (exp (log1p (* (cos x) (cos x))))) (/ 1.0 (- (cos x)))))",
    "output_parens": 16,
    "avg_bits_err_input": 39.93567122901428,
    "avg_bits_err_output": 39.959125340485016,
    "avg_bits_err_improve": -0.023454111470734063,
    "time": 42903.1552734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (- (cbrt (+ x 1.0)) (+ 1.0 (cbrt x))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.896581344258788,
    "avg_bits_err_output": 29.605599538989708,
    "avg_bits_err_improve": 0.29098180526908024,
    "time": 34194.24853515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.55151258194374,
    "avg_bits_err_output": 30.55569184860867,
    "avg_bits_err_improve": -0.004179266664930736,
    "time": 66604.13623046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.851531813868164,
    "avg_bits_err_output": 33.851531813868164,
    "avg_bits_err_improve": 0,
    "time": 19567.134521484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma c (* a -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.081361275863955,
    "avg_bits_err_output": 34.09968052673319,
    "avg_bits_err_improve": -0.018319250869232917,
    "time": 25262.771240234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.06916301485907,
    "avg_bits_err_output": 59.819347195711494,
    "avg_bits_err_improve": 1.249815819147578,
    "time": 46096.312744140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.0130033641234,
    "avg_bits_err_output": 0.7518817656821183,
    "avg_bits_err_improve": 62.26112159844128,
    "time": 36048.274169921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (log (exp (/ (- 1.0 eps) (+ 1.0 eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 58.599320036676964,
    "avg_bits_err_output": 58.6074522682753,
    "avg_bits_err_improve": -0.008132231598338535,
    "time": 60179.797607421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(log (exp (- (/ 1.0 x) (/ 1.0 (tan x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 59.906298302052484,
    "avg_bits_err_output": 59.90629894251549,
    "avg_bits_err_improve": -6.404630070733219e-07,
    "time": 57576.436767578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.420969460268275,
    "avg_bits_err_output": 41.476931984760625,
    "avg_bits_err_improve": 18.94403747550765,
    "time": 31591.428466796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.9553766315833,
    "avg_bits_err_output": 0.4383231203125902,
    "avg_bits_err_improve": 40.51705351127071,
    "time": 8219.098388671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.792896419761746,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.792396419761744,
    "time": 3147.59619140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.531069950251908,
    "avg_bits_err_output": 0.016973793617776685,
    "avg_bits_err_improve": 29.51409615663413,
    "time": 4785.858642578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.62849430006962,
    "avg_bits_err_output": 28.732028864604935,
    "avg_bits_err_improve": 0.8964654354646839,
    "time": 18885.630126953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.130581383432595,
    "avg_bits_err_output": 10.137798796528113,
    "avg_bits_err_improve": -0.0072174130955176,
    "time": 55855.2314453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.61544432487748,
    "avg_bits_err_output": 37.636783903375296,
    "avg_bits_err_improve": -0.021339578497816092,
    "time": 38488.93603515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.010578261194585,
    "avg_bits_err_output": 29.33714438850986,
    "avg_bits_err_improve": 0.6734338726847255,
    "time": 47913.345947265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.46693857426891,
    "avg_bits_err_output": 37.46693857426891,
    "avg_bits_err_improve": 0,
    "time": 42620.522705078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.90763185922271,
    "avg_bits_err_output": 19.90763185922271,
    "avg_bits_err_improve": 0,
    "time": 84076.88012695312,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (/ 1.0 (atan (+ N 1.0))) (expm1 (log1p (* (atan (+ 1.0 N)) (atan (+ 1.0 N)))))) (atan N))",
    "output_parens": 13,
    "avg_bits_err_input": 15.003709080553007,
    "avg_bits_err_output": 15.022046750667942,
    "avg_bits_err_improve": -0.018337670114934923,
    "time": 30211.696044921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.503171876792933,
    "avg_bits_err_output": 29.503171876792933,
    "avg_bits_err_improve": 0,
    "time": 68357.28369140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(+ -1.0 (- m (* (/ (- m (* m m)) v) (+ m -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0776488878888441,
    "avg_bits_err_output": 0.07485356662892098,
    "avg_bits_err_improve": 0.002795321259923114,
    "time": 26981.152099609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* a b) (* a b) (* (fma (- a) b (* a b)) (* b (- a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 15.812565061129124,
    "avg_bits_err_output": 0.152125,
    "avg_bits_err_improve": 15.660440061129124,
    "time": 16667.12890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ angle 180.0) (- (exp (log1p (* (/ angle 180.0) (/ PI (/ angle 180.0))))) 1.0)))) 2.0) (pow (* b (sin (- (+ (/ angle 180.0) (* (/ angle 180.0) PI)) (/ angle 180.0)))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.608705022628236,
    "avg_bits_err_output": 20.957923247505747,
    "avg_bits_err_improve": -0.34921822487751086,
    "time": 91628.99243164062,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.438873971055294,
    "avg_bits_err_output": 31.4390739156208,
    "avg_bits_err_improve": -0.00019994456550520567,
    "time": 94561.2177734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* PI (+ (/ angle 180.0) (fma PI (* (/ angle 180.0) (/ 1.0 PI)) (- (* PI (/ (/ angle 180.0) PI)))))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.29283692702173,
    "avg_bits_err_output": 20.306698008379733,
    "avg_bits_err_improve": -0.01386108135800157,
    "time": 74661.02490234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17735620312590142,
    "avg_bits_err_output": 0.17735620312590142,
    "avg_bits_err_improve": 0,
    "time": 36665.030029296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31963946681700633,
    "avg_bits_err_output": 0.3180704014170943,
    "avg_bits_err_improve": 0.0015690653999120285,
    "time": 30623.717041015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13694812031259015,
    "avg_bits_err_output": 0.13694812031259015,
    "avg_bits_err_improve": 0,
    "time": 44194.751220703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 12,
    "avg_bits_err_input": 17.270826726077534,
    "avg_bits_err_output": 17.270826726077534,
    "avg_bits_err_improve": 0,
    "time": 56400.70654296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 4.8e+16) (/ (- (* (sqrt (fma b b (* a (* c -4.0)))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b) (+ a a)) (/ (- (+ (sqrt (fma -4.0 (* a c) (* b b))) (- 1.0 b)) 1.0) (* a 2.0)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.308047170860114,
    "avg_bits_err_output": 50.61772064098327,
    "avg_bits_err_improve": 1.6903265298768417,
    "time": 27201.583984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.219183359608415,
    "avg_bits_err_output": 28.217290737317253,
    "avg_bits_err_improve": 0.0018926222911623825,
    "time": 25054.49462890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-20) (/ (* (- (sqrt (fma c (* a -4.0) (* b b))) b) (* (- (sqrt (fma c (* a -4.0) (* b b))) b) (/ 1.0 (- (sqrt (fma c (* a -4.0) (* b b))) b)))) (+ a a)) (/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (- (exp (log1p (/ 1.0 (fma a (* c -4.0) (* b b))))) 1.0)))) b) (+ a a)))",
    "output_parens": 50,
    "avg_bits_err_input": 43.44645167037662,
    "avg_bits_err_output": 42.04979401391817,
    "avg_bits_err_improve": 1.3966576564584514,
    "time": 25517.529052734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.861446536139766,
    "avg_bits_err_output": 33.861446536139766,
    "avg_bits_err_improve": 0,
    "time": 18903.77734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8077925542400564,
    "avg_bits_err_output": 0.807415012635698,
    "avg_bits_err_improve": 0.0003775416043583224,
    "time": 42534.80029296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 29.0979440931814,
    "avg_bits_err_output": 29.10163916334685,
    "avg_bits_err_improve": -0.0036950701654490103,
    "time": 5917.899658203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.04622256576127,
    "avg_bits_err_output": 1.3625236843762623,
    "avg_bits_err_improve": 56.683698881385006,
    "time": 7730.64599609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.06032060631522,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 58.05219560631522,
    "time": 5514.230712890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008875,
    "avg_bits_err_output": 0.008875,
    "avg_bits_err_improve": 0,
    "time": 2153.339599609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.873125,
    "avg_bits_err_output": 31.873125,
    "avg_bits_err_improve": 0,
    "time": 4798.55078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.59448913333511,
    "avg_bits_err_output": 58.59448913333511,
    "avg_bits_err_improve": 0,
    "time": 122849.83666992188,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.003448120312590144,
    "avg_bits_err_output": 0.003448120312590144,
    "avg_bits_err_improve": 0,
    "time": 5599.58251953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12686560156295074,
    "avg_bits_err_output": 0.12604248125036058,
    "avg_bits_err_improve": 0.0008231203125901587,
    "time": 42406.89208984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* eh (* (sin (atan (/ (* (- eh) (tan t)) ew))) (sin t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.11644812031259014,
    "avg_bits_err_output": 0.11696936093777043,
    "avg_bits_err_improve": -0.0005212406251802887,
    "time": 31910.856689453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.12043562712222,
    "avg_bits_err_output": 3.8016556487787714,
    "avg_bits_err_improve": 35.31877997834345,
    "time": 46931.598388671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.33800257757965,
    "avg_bits_err_output": 14.33800257757965,
    "avg_bits_err_improve": 0,
    "time": 3988.474365234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin delta) (* (cos phi1) (sin theta))) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1580655913209612,
    "avg_bits_err_output": 0.15720449854067525,
    "avg_bits_err_improve": 0.0008610927802859547,
    "time": 50268.68310546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-31) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (- (- (+ (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (sqrt (fma c (* a -3.0) (* b b)))) b) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (* 3.0 a)))",
    "output_parens": 37,
    "avg_bits_err_input": 52.311331709905836,
    "avg_bits_err_output": 49.45180228154697,
    "avg_bits_err_improve": 2.8595294283588686,
    "time": 24451.362548828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.321092932950116,
    "avg_bits_err_output": 28.26446419769851,
    "avg_bits_err_improve": 0.056628735251607054,
    "time": 22578.250732421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ -1.0 b) (* b b) (sqrt (fma c (* a -3.0) (* b b)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 43.46908362541463,
    "avg_bits_err_output": 42.549997082614674,
    "avg_bits_err_improve": 0.9190865427999597,
    "time": 24628.242919921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.8970234565059,
    "avg_bits_err_output": 33.8970234565059,
    "avg_bits_err_improve": 0,
    "time": 18349.814697265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (fma (cos (- lambda1 lambda2)) (* (cos (- lambda1 lambda2)) (/ (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))) 0.0)))",
    "output_parens": 21,
    "avg_bits_err_input": 13.522863158103593,
    "avg_bits_err_output": 13.525686278416183,
    "avg_bits_err_improve": -0.0028231203125894666,
    "time": 92538.78491210938,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.013375,
    "avg_bits_err_improve": 0,
    "time": 8076.036865234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x)))) (/ 1.0 (+ x -1.0))) (- (* (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (/ 1.0 (+ 1.0 x)))))) (/ 1.0 (+ 1.0 x))) (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.859461299622096,
    "avg_bits_err_output": 12.932704593998738,
    "avg_bits_err_improve": 1.926756705623358,
    "time": 77452.6669921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 51.983211803226446,
    "avg_bits_err_output": 51.719473971515434,
    "avg_bits_err_improve": 0.26373783171101195,
    "time": 41352.176025390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (+ (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) (* (- C A) (* (/ 1.0 B) (/ 1.0 (/ 1.0 B))))))) PI))",
    "output_parens": 18,
    "avg_bits_err_input": 30.035061182282806,
    "avg_bits_err_output": 30.154955988795937,
    "avg_bits_err_improve": -0.11989480651313045,
    "time": 41318.368896484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* 4.0 (* C A))) (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 51.99893718574888,
    "avg_bits_err_output": 51.69220422003464,
    "avg_bits_err_improve": 0.30673296571423947,
    "time": 41585.16943359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.240815313840924,
    "avg_bits_err_output": 15.240815313840924,
    "avg_bits_err_improve": 0,
    "time": 1825.93408203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (* (- g h) (+ g h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (* (- g h) (+ g h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.37509049241928,
    "avg_bits_err_output": 36.37448668647287,
    "avg_bits_err_improve": 0.0006038059464117396,
    "time": 72879.14916992188,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9902601515716059,
    "avg_bits_err_output": 0.9902601515716059,
    "avg_bits_err_improve": 0,
    "time": 12828.902099609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp b) (expm1 (log1p (exp a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.7168231203125902,
    "avg_bits_err_output": 0.7190212406251804,
    "avg_bits_err_improve": -0.002198120312590146,
    "time": 4313.724853515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.990635441032403,
    "avg_bits_err_output": 10.990635441032403,
    "avg_bits_err_improve": 0,
    "time": 16626.2158203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5058062020706864,
    "avg_bits_err_output": 0.439125,
    "avg_bits_err_improve": 0.0666812020706864,
    "time": 14680.05322265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.09023147039252,
    "avg_bits_err_output": 15.674167431087056,
    "avg_bits_err_improve": 37.41606403930546,
    "time": 33284.45361328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (fma (* (/ 1.0 (* (log a) (log a))) (* (log a) (log a))) (log a) (log b)))",
    "output_parens": 12,
    "avg_bits_err_input": 5.677473653900648,
    "avg_bits_err_output": 5.77544536448232,
    "avg_bits_err_improve": -0.09797171058167198,
    "time": 32641.801513671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))) (* (/ (- 1.0 x) (+ 1.0 x)) (* (/ (- 1.0 x) (+ 1.0 x)) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.012,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 17317.367431640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1230.60888671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* (* r w) (* r w))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 12.89513380956406,
    "avg_bits_err_output": 6.467755671094592,
    "avg_bits_err_improve": 6.427378138469468,
    "time": 33989.48095703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (fma (* x1 x1) -6.0 (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (+ (* (+ -3.0 (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0))) (+ x1 x1)) (* x1 (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5029244838468105,
    "avg_bits_err_output": 0.2901672770772727,
    "avg_bits_err_improve": 0.21275720676953785,
    "time": 76374.0419921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.21487455932854,
    "avg_bits_err_output": 18.21487455932854,
    "avg_bits_err_improve": 0,
    "time": 39385.781005859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x (fma (* x x) -0.12900613773279798 (* x (* x 0.12900613773279798))) (* (- x) (fma x (* x 0.12900613773279798) -0.954929658551372)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.24785620312590143,
    "avg_bits_err_output": 0.18923120312590144,
    "avg_bits_err_improve": 0.05862499999999998,
    "time": 28401.425048828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 2023.704833984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.088246987263581,
    "avg_bits_err_output": 9.565636273202765,
    "avg_bits_err_improve": 4.522610714060816,
    "time": 43213.171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- 1.0 (- (- (* eps x) -1.0) (- x)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 29.22088656098563,
    "avg_bits_err_output": 1.0281018818451702,
    "avg_bits_err_improve": 28.19278467914046,
    "time": 30478.951416015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020625,
    "avg_bits_err_output": 0.020625,
    "avg_bits_err_improve": 0,
    "time": 11977.072021484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.024875,
    "avg_bits_err_output": 0.024875,
    "avg_bits_err_improve": 0,
    "time": 27398.158447265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- 1.0 (* (/ (+ t t) (+ 1.0 t)) (/ (+ t t) (+ 1.0 t)))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.056875,
    "avg_bits_err_output": 0.05375,
    "avg_bits_err_improve": 0.0031250000000000028,
    "time": 156769.69189453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3220.0458984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2707.25927734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3181.268798828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.82853340489227,
    "avg_bits_err_output": 0.259375,
    "avg_bits_err_improve": 7.56915840489227,
    "time": 74054.42260742188,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.541647976561522,
    "avg_bits_err_output": 7.541647976561522,
    "avg_bits_err_improve": 0,
    "time": 42014.712890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.250982329742293,
    "avg_bits_err_output": 16.250982329742293,
    "avg_bits_err_improve": 0,
    "time": 33859.26904296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (+ (expm1 (* 10.0 (* x x))) 1.0) (* (cos x) (exp (log1p (/ (cos x) (cos x))))) (* (exp (* 10.0 (* x x))) (- (cos x))))",
    "output_parens": 18,
    "avg_bits_err_input": 3.5421382670536876,
    "avg_bits_err_output": 3.544230524770401,
    "avg_bits_err_improve": -0.002092257716713508,
    "time": 28584.359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (fma x x 1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 15.06790785240537,
    "avg_bits_err_output": 15.06765785240537,
    "avg_bits_err_improve": 0.00024999999999941735,
    "time": 26108.0810546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.4131633067091,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.4131633067091,
    "time": 3395.429443359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.657742036475284,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 38.65761703647529,
    "time": 2907.184814453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.293125,
    "avg_bits_err_improve": 63.706875,
    "time": 3241.512939453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.84325490773342,
    "avg_bits_err_output": 0.3626240625180293,
    "avg_bits_err_improve": 61.48063084521539,
    "time": 22943.263916015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma c (* a -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.081361275863955,
    "avg_bits_err_output": 34.09968052673319,
    "avg_bits_err_improve": -0.018319250869232917,
    "time": 24196.958251953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.861446536139766,
    "avg_bits_err_output": 33.861446536139766,
    "avg_bits_err_improve": 0,
    "time": 22525.087890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1729.444091796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.144719079365316,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 40.13596907936532,
    "time": 2965.6884765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.2896927656655,
    "avg_bits_err_output": 20.2896927656655,
    "avg_bits_err_improve": 0,
    "time": 2218.015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6723747271657574,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6723747271657574,
    "time": 4596.653564453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.039625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.039375,
    "time": 6240.7744140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.022615601562950727,
    "avg_bits_err_output": 0.022615601562950727,
    "avg_bits_err_improve": 0,
    "time": 6888.19189453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.01375,
    "avg_bits_err_improve": 0.001875,
    "time": 3740.93701171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1388.431884765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.38537537656727777,
    "avg_bits_err_output": 0.24975,
    "avg_bits_err_improve": 0.13562537656727777,
    "time": 5843.708740234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.096737201696023,
    "avg_bits_err_output": 30.096737201696023,
    "avg_bits_err_improve": 0,
    "time": 90472.32397460938,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (+ (- eps) (* (* x (/ (/ x x) x)) (* x x)))))",
    "output_parens": 9,
    "avg_bits_err_input": 24.78045917770206,
    "avg_bits_err_output": 24.825275878023483,
    "avg_bits_err_improve": -0.04481670032142304,
    "time": 22516.78271484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.113208890120433,
    "avg_bits_err_output": 30.125884376085246,
    "avg_bits_err_improve": -0.012675485964813049,
    "time": 80498.84204101562,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006698120312590144,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.006198120312590144,
    "time": 5439.624267578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d b (* a c)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.908789764300582,
    "avg_bits_err_output": 26.90796664398799,
    "avg_bits_err_improve": 0.0008231203125923514,
    "time": 21587.275146484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* a (- d))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.270625993114052,
    "avg_bits_err_output": 26.270677872861935,
    "avg_bits_err_improve": -5.187974788256611e-05,
    "time": 24061.7734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035625,
    "avg_bits_err_output": 0.02137394680449909,
    "avg_bits_err_improve": 0.014251053195500907,
    "time": 6791.442138671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (fma (fma ux maxCos (- 1.0 ux)) ux (- (- (* ux (* (fma ux maxCos (- 2.0 ux)) maxCos)) ux)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.462975043700663,
    "avg_bits_err_output": 0.5483274399895921,
    "avg_bits_err_improve": 12.914647603711071,
    "time": 33109.5185546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* PI (* 2.0 uy))) (sqrt (fma ux (- (- (* ux maxCos) ux) (fma (fma ux maxCos 1.0) (+ maxCos -1.0) maxCos)) ux)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.507328469036898,
    "avg_bits_err_output": 0.31788003854533564,
    "avg_bits_err_improve": 13.189448430491561,
    "time": 33271.913818359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.328177297868859,
    "avg_bits_err_output": 0.328177297868859,
    "avg_bits_err_improve": 0,
    "time": 73535.294921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.21051020992672873,
    "avg_bits_err_output": 0.21053800897939579,
    "avg_bits_err_improve": -2.7799052667060176e-05,
    "time": 21918.497802734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ 1.0 (/ u1 (- 1.0 u1))) (expm1 (log1p (/ u1 (- 1.0 u1))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5418959333010298,
    "avg_bits_err_output": 0.5372182862042646,
    "avg_bits_err_improve": 0.004677647096765214,
    "time": 106750.341796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(fma (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)) (fma (+ (cos (* 6.28318530718 u2)) -1.0) (sqrt (/ u1 (- 1.0 u1))) (* (- 1.0 (cos (* 6.28318530718 u2))) (sqrt (/ u1 (- 1.0 u1))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.31916516594789673,
    "avg_bits_err_output": 0.33042686002440924,
    "avg_bits_err_improve": -0.011261694076512507,
    "time": 45639.569580078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3321276630050384,
    "avg_bits_err_output": 0.3320641446420796,
    "avg_bits_err_improve": 6.351836295875879e-05,
    "time": 47511.632568359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.058452828504809935,
    "avg_bits_err_output": 0.058452828504809935,
    "avg_bits_err_improve": 0,
    "time": 85288.11303710938,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (fma (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.15271362191927917,
    "avg_bits_err_output": 0.13084405248709663,
    "avg_bits_err_improve": 0.021869569432182545,
    "time": 24422.2822265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6767807164693598,
    "avg_bits_err_output": 0.6802871005567529,
    "avg_bits_err_improve": -0.003506384087393122,
    "time": 23122.3134765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.167893458786857,
    "avg_bits_err_output": 0.167893458786857,
    "avg_bits_err_improve": 0,
    "time": 39045.093017578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.6794854329685642,
    "avg_bits_err_output": 2.6753367485923016,
    "avg_bits_err_improve": 0.00414868437626259,
    "time": 53584.589599609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4523562980781001,
    "avg_bits_err_output": 0.4523562980781001,
    "avg_bits_err_improve": 0,
    "time": 33750.707275390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.09521814623317311,
    "avg_bits_err_output": 0.09521814623317311,
    "avg_bits_err_improve": 0,
    "time": 8597.555908203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (* (log (* alpha alpha)) (* (log (* alpha alpha)) (/ (/ PI PI) (log (* alpha alpha)))))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.4769048987141803,
    "avg_bits_err_output": 0.4920394702059254,
    "avg_bits_err_improve": -0.01513457149174513,
    "time": 27877.09130859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (* (- 1.0 (/ (- u 0.25) 0.75)) (- (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) (* (/ (- u 0.25) 0.75) (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 1.3117305707750366,
    "avg_bits_err_output": 1.2701901147761128,
    "avg_bits_err_improve": 0.041540455998923864,
    "time": 32479.449462890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(fma (* s (/ (* (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0) (* (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0) (/ 1.0 (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0)))) s)) s 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 12.23917750314314,
    "avg_bits_err_output": 12.360376321969111,
    "avg_bits_err_improve": -0.12119881882597205,
    "time": 35912.995361328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* 6.0 (* s (fma (* r (/ PI r)) r 0.0)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12330796069031025,
    "avg_bits_err_output": 0.13303612781959867,
    "avg_bits_err_improve": -0.009728167129288423,
    "time": 34001.84228515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) n1_i (fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9352968279169397,
    "avg_bits_err_output": 0.906165830974184,
    "avg_bits_err_improve": 0.02913099694275567,
    "time": 53692.19384765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c))) (/ 1.0 (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.6754996208738828,
    "avg_bits_err_output": 0.5761874078268812,
    "avg_bits_err_improve": 0.09931221304700166,
    "time": 79569.10815429688,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* PI (+ u2 u2))) (fma (sin (* PI (+ u2 u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (sin (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 13.541353183554238,
    "avg_bits_err_output": 13.375696864900332,
    "avg_bits_err_improve": 0.1656563186539053,
    "time": 39314.745361328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(log1p (- (- (expm1 (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2))))) 1.0) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 13.585095345600042,
    "avg_bits_err_output": 13.595419262938174,
    "avg_bits_err_improve": -0.010323917338132205,
    "time": 43012.156005859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (+ 1.0 (expm1 (+ 1.0 (log (- 1.0 u0)))))) (* alpha (- alpha)) (* alpha alpha))",
    "output_parens": 10,
    "avg_bits_err_input": 14.020426091044692,
    "avg_bits_err_output": 13.655721753453797,
    "avg_bits_err_improve": 0.3647043375908954,
    "time": 31336.94287109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.522760797044796,
    "avg_bits_err_output": 12.525638140532878,
    "avg_bits_err_improve": -0.002877343488082218,
    "time": 28044.675048828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (fma (/ 1.0 (* F F)) (tan (* PI l)) (fma (- (+ 1.0 (/ 1.0 (* F F)))) (- (tan (* PI l))) (* (tan (* PI l)) (- -1.0 (/ 1.0 (* F F)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 17.292468979213908,
    "avg_bits_err_output": 17.299705986960596,
    "avg_bits_err_improve": -0.007237007746688562,
    "time": 29733.16796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.216625203512582,
    "avg_bits_err_output": 0.21301184218813093,
    "avg_bits_err_improve": 0.0036133613244510587,
    "time": 30246.53759765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (- (/ 1.0 (tan B))) x (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.636061481042615,
    "avg_bits_err_output": 13.634302682376628,
    "avg_bits_err_improve": 0.0017587986659872712,
    "time": 37385.9326171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (* (expm1 (* (/ PI 4.0) f)) (* (expm1 (* (/ PI 4.0) f)) (/ 1.0 (expm1 (* (/ PI 4.0) f))))) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 61.47469298687306,
    "avg_bits_err_output": 2.117619190170547,
    "avg_bits_err_improve": 59.357073796702515,
    "time": 75208.33447265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.65e-151) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 3.8e-160) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 56,
    "avg_bits_err_input": 43.17700125312591,
    "avg_bits_err_output": 36.11144604582218,
    "avg_bits_err_improve": 7.065555207303731,
    "time": 30342.6708984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.067728561313607,
    "avg_bits_err_output": 4.067728561313607,
    "avg_bits_err_improve": 0,
    "time": 168685.32177734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.96675,
    "avg_bits_err_output": 0.96675,
    "avg_bits_err_improve": 0,
    "time": 13106.81884765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 4e-151) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))) (* 2.0 n)))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e+146) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (- U U*) (pow (/ l Om) 2.0)))) (* 2.0 n))))))",
    "output_parens": 74,
    "avg_bits_err_input": 34.475201905767605,
    "avg_bits_err_output": 31.4655678886331,
    "avg_bits_err_improve": 3.0096340171345055,
    "time": 27499.702880859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+44) (/ 2.0 (* (* (sin k) (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k)))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (* (sin k) (tan k)) (+ (/ (pow t 3.0) (* l l)) 1.0))))))",
    "output_parens": 42,
    "avg_bits_err_input": 47.61331606667237,
    "avg_bits_err_output": 38.0199325164288,
    "avg_bits_err_improve": 9.593383550243566,
    "time": 54037.345703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.67543674537656,
    "avg_bits_err_output": 32.67548862506397,
    "avg_bits_err_improve": -5.187968741182658e-05,
    "time": 25009.060546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* a1 (/ (cos th) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.49869022814465336,
    "avg_bits_err_output": 0.4988577093950139,
    "avg_bits_err_improve": -0.00016748125036053496,
    "time": 39630.165771484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* n (* n (* (/ 2.0 n) PI))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.49524191574408905,
    "avg_bits_err_output": 0.55176786353079,
    "avg_bits_err_improve": -0.05652594778670095,
    "time": 27645.68310546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma (exp l) J (* (exp (- l)) (- J))) (cos (/ K 2.0))) U)",
    "output_parens": 10,
    "avg_bits_err_input": 17.094342382592135,
    "avg_bits_err_output": 17.1047208855579,
    "avg_bits_err_improve": -0.010378502965764369,
    "time": 39612.426513671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -3.4e+208) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 1.4e+176) (* (cos (- (/ (* (* (+ m n) (- (- (/ K (+ m n)) -1.0) 1.0)) (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 67,
    "avg_bits_err_input": 14.829365840309114,
    "avg_bits_err_output": 5.169874412189084,
    "avg_bits_err_improve": 9.659491428120031,
    "time": 23084.12890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.953490601562955,
    "avg_bits_err_output": 17.953490601562955,
    "avg_bits_err_improve": 0,
    "time": 51457.71875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.144391989015354,
    "avg_bits_err_output": 14.144391989015354,
    "avg_bits_err_improve": 0,
    "time": 32705.59912109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.57038228438656,
    "avg_bits_err_output": 19.57038228438656,
    "avg_bits_err_improve": 0,
    "time": 28044.702392578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(/ (* (+ (/ (* d (* c0 d)) (* D (* D (* h w)))) (sqrt (- (* (/ (* d (* c0 d)) (* D (* D (* h w)))) (/ (* d (* c0 d)) (* D (* D (* h w))))) (* M M)))) (/ c0 (+ w w))) 1.0)",
    "output_parens": 27,
    "avg_bits_err_input": 59.65366311255262,
    "avg_bits_err_output": 56.950754985527496,
    "avg_bits_err_improve": 2.7029081270251254,
    "time": 34756.01318359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d h) 0.5) (* (- 1.0 (* 0.5 (* (/ h l) (pow (/ (* M D) (* d 2.0)) 2.0)))) (pow (/ d l) 0.5)))",
    "output_parens": 14,
    "avg_bits_err_input": 26.1102377170222,
    "avg_bits_err_output": 26.308695195007022,
    "avg_bits_err_improve": -0.19845747798482094,
    "time": 41262.275146484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (expm1 (log (fma 0.5 (/ 1.0 (hypot 1.0 x)) 1.5)))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.198639124086169,
    "avg_bits_err_output": 15.213559390478252,
    "avg_bits_err_improve": -0.014920266392083548,
    "time": 128133.033203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9842712406251803,
    "avg_bits_err_output": 0.011792481250360578,
    "avg_bits_err_improve": 0.9724787593748198,
    "time": 12709.705322265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4232660806086218,
    "avg_bits_err_output": 0.34492134310357336,
    "avg_bits_err_improve": 0.07834473750504845,
    "time": 19899.284423828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (expm1 (log1p (sqrt (- 1.0 (* 3.0 (* v v)))))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.011240601562950724,
    "avg_bits_err_output": 0.016419925001442317,
    "avg_bits_err_improve": -0.005179323438491593,
    "time": 10745.49462890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5689749779216494,
    "avg_bits_err_output": 0.5689749779216494,
    "avg_bits_err_improve": 0,
    "time": 10565.364013671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.057504563148923,
    "avg_bits_err_output": 2.0326295631489235,
    "avg_bits_err_improve": 0.024874999999999314,
    "time": 8922.247314453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (expm1 (log1p (exp (/ (+ mu (+ EDonor (- Vef Ec))) KbT)))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.024045067776892925,
    "avg_bits_err_output": 0.024276459853653613,
    "avg_bits_err_improve": -0.0002313920767606885,
    "time": 7330.195068359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18088233125324507,
    "avg_bits_err_output": 0.18088233125324507,
    "avg_bits_err_improve": 0,
    "time": 40989.12939453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1909003037584943,
    "avg_bits_err_output": 0.1909003037584943,
    "avg_bits_err_improve": 0,
    "time": 4153.28173828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18768732722117645,
    "avg_bits_err_output": 0.18768732722117645,
    "avg_bits_err_improve": 0,
    "time": 5639.66748046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.275076765494285,
    "avg_bits_err_output": 13.275076765494285,
    "avg_bits_err_improve": 0,
    "time": 19142.263671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.51736058791459,
    "avg_bits_err_output": 0.03325,
    "avg_bits_err_improve": 40.484110587914586,
    "time": 6077.346435546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 30.93712721710075,
    "avg_bits_err_output": 30.93712721710075,
    "avg_bits_err_improve": 0,
    "time": 18115.22265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma b_2 b_2 (* c (- a)))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.61760259231339,
    "avg_bits_err_output": 34.61753293475177,
    "avg_bits_err_improve": 6.96575616174755e-05,
    "time": 23332.900634765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 35.00094369766507,
    "avg_bits_err_output": 35.00116813449342,
    "avg_bits_err_improve": -0.00022443682834705214,
    "time": 24067.738037109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.632038646688006,
    "avg_bits_err_output": 31.632038646688006,
    "avg_bits_err_improve": 0,
    "time": 23853.22509765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (log1p (expm1 (pow x (/ 1.0 n)))))",
    "output_parens": 8,
    "avg_bits_err_input": 33.07206991980063,
    "avg_bits_err_output": 33.15781832278414,
    "avg_bits_err_improve": -0.08574840298350495,
    "time": 27361.93408203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- 2.0 (fma (+ 2.0 (log N)) (* (+ 2.0 (log N)) (* (/ 1.0 (+ 2.0 (log N))) (* (/ 1.0 (+ 2.0 (log N))) (/ 1.0 (/ 1.0 (+ 2.0 (log N))))))) (- (log1p N))))",
    "output_parens": 21,
    "avg_bits_err_input": 29.804529152916196,
    "avg_bits_err_output": 29.890405275867444,
    "avg_bits_err_improve": -0.08587612295124813,
    "time": 31583.677978515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.2273226190291,
    "avg_bits_err_output": 14.2273226190291,
    "avg_bits_err_improve": 0,
    "time": 109267.9521484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (log1p (* (/ 1.0 (expm1 (cos x))) (* (/ 1.0 (expm1 (cos x))) (* (expm1 (cos x)) (- -1.0 (- -1.0 (* (expm1 (cos x)) (expm1 (cos x))))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 39.638216277975815,
    "avg_bits_err_output": 39.67728231006194,
    "avg_bits_err_improve": -0.0390660320861258,
    "time": 85124.00903320312,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 30.188358436767803,
    "avg_bits_err_output": 29.90375351708948,
    "avg_bits_err_improve": 0.2846049196783227,
    "time": 41284.14453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (log1p (- (+ (expm1 (- 1.0 (cos x))) -1.0) -1.0)) (sin x))",
    "output_parens": 8,
    "avg_bits_err_input": 30.579054011345196,
    "avg_bits_err_output": 30.60978049829135,
    "avg_bits_err_improve": -0.030726486946154097,
    "time": 67113.11474609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* -4.0 (* a c)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.93445466301425,
    "avg_bits_err_output": 34.93445466301425,
    "avg_bits_err_improve": 0,
    "time": 17929.077880859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.44126964576185,
    "avg_bits_err_output": 34.48216050370603,
    "avg_bits_err_improve": -0.04089085794417713,
    "time": 27755.62255859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.999998) (/ (* (/ 1.0 (* (* (log (- 1.0 x)) (/ 1.0 (log (- 1.0 x)))) (- -1.0 (+ -1.0 (- (log (- 1.0 x))))))) (* (* (* (log (- 1.0 x)) (/ 1.0 (log (- 1.0 x)))) (log (- 1.0 x))) (log (- 1.0 x)))) (- (- (log1p x) 1.0) -1.0)) (/ (- (- (log (- 1.0 x)) 1.0) -1.0) (log1p x)))",
    "output_parens": 43,
    "avg_bits_err_input": 61.38891185717953,
    "avg_bits_err_output": 59.17138953281362,
    "avg_bits_err_improve": 2.217522324365909,
    "time": 65167.841796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 62.99888327154557,
    "avg_bits_err_output": 0.13899166624137635,
    "avg_bits_err_improve": 62.8598916053042,
    "time": 27822.375732421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) (* (+ 1.0 (- (+ (log (/ (- 1.0 eps) (- eps -1.0))) -1.0) -1.0)) (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) -1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 58.35341066314982,
    "avg_bits_err_output": 58.377069850013825,
    "avg_bits_err_improve": -0.023659186864001924,
    "time": 75266.07446289062,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output_parens": 4,
    "avg_bits_err_input": 59.79855468872009,
    "avg_bits_err_output": 59.79855468872009,
    "avg_bits_err_improve": 0,
    "time": 96896.56811523438,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.394072675873275,
    "avg_bits_err_output": 40.688952922760855,
    "avg_bits_err_improve": 19.70511975311242,
    "time": 30801.529296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.941937859467174,
    "avg_bits_err_output": 0.4216156015629508,
    "avg_bits_err_improve": 40.520322257904226,
    "time": 6226.607666015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.52065401188685,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 58.51965401188685,
    "time": 5615.737060546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 28.826777816347242,
    "avg_bits_err_output": 0.017604374069748012,
    "avg_bits_err_improve": 28.809173442277494,
    "time": 3549.44970703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.476469818524706,
    "avg_bits_err_output": 28.597431227954345,
    "avg_bits_err_improve": 0.8790385905703602,
    "time": 37927.205322265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.453149699537779,
    "avg_bits_err_output": 9.468474851766278,
    "avg_bits_err_improve": -0.01532515222849895,
    "time": 64293.27734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (- (tan x)) (* (tan x) (/ 1.0 (tan x))) (tan (+ x eps)))",
    "output_parens": 9,
    "avg_bits_err_input": 36.94908442066489,
    "avg_bits_err_output": 37.00311032016451,
    "avg_bits_err_improve": -0.05402589949962078,
    "time": 35011.66259765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.873995510961144,
    "avg_bits_err_output": 29.20746749450489,
    "avg_bits_err_improve": 0.6665280164562546,
    "time": 28471.73486328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (expm1 (log1p (sin (+ x eps)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 36.83406834362443,
    "avg_bits_err_output": 36.88373876622915,
    "avg_bits_err_improve": -0.04967042260471999,
    "time": 46718.27978515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (+ (+ (sqrt (+ 1.0 x)) 3.0) -3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.60310164925825,
    "avg_bits_err_output": 19.60526233677101,
    "avg_bits_err_improve": -0.0021606875127595515,
    "time": 34325.659423828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.286482994686681,
    "avg_bits_err_output": 15.286482994686681,
    "avg_bits_err_improve": 0,
    "time": 13704.929931640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.306553821776255,
    "avg_bits_err_output": 1.2552371300526501,
    "avg_bits_err_improve": 28.051316691723606,
    "time": 29757.02001953125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07549304531403245,
    "avg_bits_err_output": 0.07286804531403246,
    "avg_bits_err_improve": 0.0026249999999999885,
    "time": 31820.733642578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.49007435411809,
    "avg_bits_err_output": 0.3038941734413762,
    "avg_bits_err_improve": 16.186180180676715,
    "time": 16789.65380859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (fma (/ angle 180.0) (* (/ angle 180.0) (* (/ PI (/ angle 180.0)) (* (/ PI (/ angle 180.0)) (/ 1.0 (/ PI (/ angle 180.0)))))) 0.0))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.819323155759186,
    "avg_bits_err_output": 21.151786145208593,
    "avg_bits_err_improve": -0.33246298944940733,
    "time": 59226.50634765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.789190770607956,
    "avg_bits_err_output": 31.790477342764763,
    "avg_bits_err_improve": -0.0012865721568076083,
    "time": 66869.6884765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* (/ angle 180.0) (* PI PI))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.727941041465197,
    "avg_bits_err_output": 20.743870708993185,
    "avg_bits_err_improve": -0.0159296675279883,
    "time": 82035.16162109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1719505640636719,
    "avg_bits_err_output": 0.1719505640636719,
    "avg_bits_err_improve": 0,
    "time": 36555.650390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3035934497084736,
    "avg_bits_err_output": 0.3035934497084736,
    "avg_bits_err_improve": 0,
    "time": 26427.851806640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1374174812503606,
    "avg_bits_err_output": 0.1374174812503606,
    "avg_bits_err_improve": 0,
    "time": 36534.21044921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (fma (* (cos phi1) (cos (- lambda1 lambda2))) (cos phi2) 0.0))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 15.907197124315086,
    "avg_bits_err_output": 15.905628881385553,
    "avg_bits_err_improve": 0.0015682429295331701,
    "time": 64496.2109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-28) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (+ (+ (sqrt (+ (+ (* b b) 1.0) (+ (* a (* c -4.0)) -1.0))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 30,
    "avg_bits_err_input": 52.231235217471315,
    "avg_bits_err_output": 50.55611133626299,
    "avg_bits_err_improve": 1.6751238812083287,
    "time": 22891.650634765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.56767270190151,
    "avg_bits_err_output": 28.674599793345433,
    "avg_bits_err_improve": -0.10692709144392154,
    "time": 22524.91748046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-20) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (sqrt (- (+ (exp (log1p (* b b))) (* a (* c -4.0))) 1.0)) b) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 43.57419296955966,
    "avg_bits_err_output": 42.62302888986511,
    "avg_bits_err_improve": 0.95116407969455,
    "time": 34924.1201171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.93790387716921,
    "avg_bits_err_output": 34.93790387716921,
    "avg_bits_err_improve": 0,
    "time": 51850.50439453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (- (exp (log1p (cos phi1))) 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8057784476292126,
    "avg_bits_err_output": 0.8241975325047155,
    "avg_bits_err_improve": -0.018419084875502922,
    "time": 28137.458740234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.634759879073194,
    "avg_bits_err_output": 29.63648356627454,
    "avg_bits_err_improve": -0.001723687201344859,
    "time": 5899.7578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.27129468449465,
    "avg_bits_err_output": 1.254813721875541,
    "avg_bits_err_improve": 57.016480962619106,
    "time": 9057.315673828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.984881001746615,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 57.975506001746616,
    "time": 6890.25927734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(expm1 (log1p (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.008042481250360577,
    "avg_bits_err_output": 0.00955432343849159,
    "avg_bits_err_improve": -0.0015118421881310136,
    "time": 2394.173828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.009,
    "avg_bits_err_output": 32.009,
    "avg_bits_err_improve": 0,
    "time": 5185.552734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (log (* (/ 1.0 (exp (/ (+ 1.0 x) (- 1.0 x)))) (* (exp (/ (+ 1.0 x) (- 1.0 x))) (exp (/ (+ 1.0 x) (- 1.0 x))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 58.344897269166175,
    "avg_bits_err_output": 58.380624402960066,
    "avg_bits_err_improve": -0.03572713379389114,
    "time": 40579.945556640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.050896240625180285,
    "avg_bits_err_output": 0.051146240625180285,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 4844.0390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12784436093777043,
    "avg_bits_err_output": 0.12784436093777043,
    "avg_bits_err_improve": 0,
    "time": 50561.6630859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12421936093777045,
    "avg_bits_err_output": 0.12421936093777045,
    "avg_bits_err_improve": 0,
    "time": 31729.713623046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* lambda1 (cos (/ (+ phi1 phi2) 2.0))) (* lambda2 (cos (/ (+ phi1 phi2) 2.0)))) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 39.155730002212515,
    "avg_bits_err_output": 3.744273391573867,
    "avg_bits_err_improve": 35.411456610638645,
    "time": 49162.4853515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.54596624557503,
    "avg_bits_err_output": 14.54596624557503,
    "avg_bits_err_improve": 0,
    "time": 4669.880615234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15138822062361698,
    "avg_bits_err_output": 0.1518144364237658,
    "avg_bits_err_improve": -0.0004262158001488159,
    "time": 55081.173583984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.45e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (- (+ (sqrt (fma b b (* a (* c -3.0)))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.30746546370878,
    "avg_bits_err_output": 50.35029703554397,
    "avg_bits_err_improve": 1.9571684281648132,
    "time": 22451.01611328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ -1.0 b) (* b b) (sqrt (fma b b (* a (* c -3.0))))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 28.70276479473836,
    "avg_bits_err_output": 28.681929625654377,
    "avg_bits_err_improve": 0.020835169083984084,
    "time": 25262.85986328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-20) (/ (- (sqrt (fma b b (fma a (* a (* -3.0 (/ c a))) 0.0))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (expm1 (log1p (fma b b (* a (* c -3.0))))))) (* 3.0 a)))",
    "output_parens": 30,
    "avg_bits_err_input": 43.607102224862125,
    "avg_bits_err_output": 42.68845482560735,
    "avg_bits_err_improve": 0.9186473992547732,
    "time": 29925.809326171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.976433453952566,
    "avg_bits_err_output": 34.976433453952566,
    "avg_bits_err_improve": 0,
    "time": 26553.5498046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.031895371367533,
    "avg_bits_err_output": 13.031895371367533,
    "avg_bits_err_improve": 0,
    "time": 64772.994140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (* (/ (/ x (+ 1.0 x)) (/ x (+ 1.0 x))) (+ (+ 1.0 (/ x (+ 1.0 x))) -1.0)) (/ (+ 1.0 x) (+ x -1.0)))",
    "output_parens": 14,
    "avg_bits_err_input": 29.449825090040896,
    "avg_bits_err_output": 29.470164990062944,
    "avg_bits_err_improve": -0.020339900022047885,
    "time": 54750.639892578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(* (/ 1.0 (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))) (* (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.01025,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 0.001875,
    "time": 10773.37890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -2e+163) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (- (- (* (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (/ 1.0 (+ 1.0 x)))))) (/ 1.0 (+ x -1.0))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.314104877727425,
    "avg_bits_err_output": 13.37805495179793,
    "avg_bits_err_improve": 0.9360499259294954,
    "time": 63296.871337890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* 2.0 (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* A (* 4.0 C))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.13415897560496,
    "avg_bits_err_output": 51.8573023280084,
    "avg_bits_err_improve": 0.2768566475965599,
    "time": 39298.04638671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (- (exp (log1p (/ (atan (* (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) (/ 1.0 B))) PI))) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 29.800572726157856,
    "avg_bits_err_output": 29.8116636793887,
    "avg_bits_err_improve": -0.011090953230844747,
    "time": 43267.5771484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) -2e-183) (/ (- (sqrt (fma (pow B 2.0) (* 2.0 (* (+ A C) F)) (- (* (pow B 2.0) (* (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ F F))) (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 4.0 (* C (* (+ F F) A)))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (sqrt (* F (* 2.0 (+ (+ (* A (* A (* C -4.0))) (* (* C (+ (* C -4.0) (* (+ A C) 4.0))) A)) (* (- (pow B 2.0) (* A (* C 4.0))) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 89,
    "avg_bits_err_input": 52.04447761826772,
    "avg_bits_err_output": 51.30985359402225,
    "avg_bits_err_improve": 0.7346240242454698,
    "time": 41049.781494140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.521582783470016,
    "avg_bits_err_output": 15.521582783470016,
    "avg_bits_err_improve": 0,
    "time": 2066.69091796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.659372981148096,
    "avg_bits_err_output": 35.659372981148096,
    "avg_bits_err_improve": 0,
    "time": 30790.99169921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.989068985944983,
    "avg_bits_err_output": 0.989068985944983,
    "avg_bits_err_improve": 0,
    "time": 4913.921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log (exp (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6440212406251803,
    "avg_bits_err_output": 0.76903645545781,
    "avg_bits_err_improve": -0.12501521483262967,
    "time": 6235.873779296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.476061622241211,
    "avg_bits_err_output": 11.476061622241211,
    "avg_bits_err_improve": 0,
    "time": 20043.82861328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5304528334220815,
    "avg_bits_err_output": 0.472,
    "avg_bits_err_improve": 0.05845283342208152,
    "time": 7323.682373046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -1650000.0) (log (+ (/ 1.0 (hypot 1.0 x)) (+ x (- (hypot 1.0 x) (/ 1.0 (hypot 1.0 x)))))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 53.16835519210999,
    "avg_bits_err_output": 11.058420914564183,
    "avg_bits_err_improve": 42.10993427754581,
    "time": 20193.143310546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (+ (+ (log b) 3.0) -3.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 5.657870842628769,
    "avg_bits_err_output": 5.661321093410715,
    "avg_bits_err_improve": -0.0034502507819453854,
    "time": 29089.78857421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (+ (+ (/ (- 1.0 x) (+ 1.0 x)) 2.0) -2.0)) (* (/ (- 1.0 x) (- x -1.0)) (/ (- 1.0 x) (- x -1.0)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.015375,
    "avg_bits_err_output": 0.01429248125036058,
    "avg_bits_err_improve": 0.0010825187496394193,
    "time": 23567.92578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1188.64453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (- 0.0 (* (- (* r w)) (* r w)))) (- 1.0 v))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.311068669748659,
    "avg_bits_err_output": 7.063738910946409,
    "avg_bits_err_improve": 6.24732975880225,
    "time": 35639.549072265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5085803715304767,
    "avg_bits_err_output": 0.26939409429695993,
    "avg_bits_err_improve": 0.23918627723351682,
    "time": 80924.66821289062,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.47505220014807,
    "avg_bits_err_output": 18.47505220014807,
    "avg_bits_err_improve": 0,
    "time": 45639.635009765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x 0.954929658551372 (* (* x x) (* x -0.12900613773279798)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2332692038992627,
    "avg_bits_err_output": 0.18520056406367186,
    "avg_bits_err_improve": 0.04806863983559084,
    "time": 23703.884033203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002948120312590144,
    "avg_bits_err_output": 0.002948120312590144,
    "avg_bits_err_improve": 0,
    "time": 2832.62451171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (* (/ PI 2.0) (/ 1.0 (* (- b a) (+ b a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output_parens": 10,
    "avg_bits_err_input": 15.187446997227202,
    "avg_bits_err_output": 10.211748876914589,
    "avg_bits_err_improve": 4.975698120312613,
    "time": 43954.835693359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (fma eps x (- 1.0 x)) 1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.39176485935185,
    "avg_bits_err_output": 0.742314437157303,
    "avg_bits_err_improve": 28.649450422194544,
    "time": 22994.403564453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (fma (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) 2.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02175,
    "avg_bits_err_output": 0.021,
    "avg_bits_err_improve": 0.0007499999999999972,
    "time": 11863.406494140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (- 3.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) -1.0))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.026875,
    "avg_bits_err_output": 0.033398684376262026,
    "avg_bits_err_improve": -0.006523684376262027,
    "time": 69415.43432617188,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.017625,
    "avg_bits_err_output": 0.017625,
    "avg_bits_err_improve": 0,
    "time": 18561.966064453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2915.213623046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3520.124267578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4063.072509765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.794267633753049,
    "avg_bits_err_output": 0.253875,
    "avg_bits_err_improve": 7.540392633753049,
    "time": 62395.618896484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 6.871553505483716,
    "avg_bits_err_output": 6.899566503742784,
    "avg_bits_err_improve": -0.02801299825906778,
    "time": 40580.054443359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.11161327536692,
    "avg_bits_err_output": 15.11161327536692,
    "avg_bits_err_improve": 0,
    "time": 54112.99169921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (exp (* 10.0 (* x x))) (- (- (* (exp (* 10.0 (* x x))) (* (/ (cos x) (exp (* 10.0 (* x x)))) (* (/ (cos x) (exp (* 10.0 (* x x)))) (/ 1.0 (/ (cos x) (exp (* 10.0 (* x x)))))))) 1.0) -1.0) 0.0)",
    "output_parens": 28,
    "avg_bits_err_input": 3.5214174414767743,
    "avg_bits_err_output": 3.519075788803565,
    "avg_bits_err_improve": 0.0023416526732091825,
    "time": 46083.712646484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.9555078319992,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.9555078319992,
    "time": 4854.12109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.389331828656594,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.38883182865659,
    "time": 4515.2353515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.30475,
    "avg_bits_err_improve": 63.69525,
    "time": 4131.732177734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* t 4e-32)) (- (* (* (/ 1.0 (* t (* t 4e-32))) (* t t)) -4e-32)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.843251523038745,
    "avg_bits_err_output": 0.35836842188131024,
    "avg_bits_err_improve": 61.484883101157436,
    "time": 23029.341064453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.44126964576185,
    "avg_bits_err_output": 34.48216050370603,
    "avg_bits_err_improve": -0.04089085794417713,
    "time": 29577.902099609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.93790387716921,
    "avg_bits_err_output": 34.93790387716921,
    "avg_bits_err_improve": 0,
    "time": 52098.9443359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1462.71630859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.5427603283314,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 39.532385328331394,
    "time": 6512.144775390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.992478467082034,
    "avg_bits_err_output": 19.992478467082034,
    "avg_bits_err_improve": 0,
    "time": 7537.980224609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6715485494078313,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6715485494078313,
    "time": 4471.984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.004125,
    "avg_bits_err_improve": 0.035875000000000004,
    "time": 5043.526123046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma b b (* a (+ a (+ b b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.020844360937770437,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.020844360937770437,
    "time": 4434.351318359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.0125,
    "time": 8106.727783203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 2208.253662109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ b c) (+ d a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40375977500432714,
    "avg_bits_err_output": 0.237875,
    "avg_bits_err_improve": 0.16588477500432713,
    "time": 12491.340087890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(log1p (- (+ (expm1 (- 1.0 (cos x))) -1.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 30.43870851392195,
    "avg_bits_err_output": 30.44311753342275,
    "avg_bits_err_improve": -0.004409019500801747,
    "time": 130991.908203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.75693699231205,
    "avg_bits_err_output": 24.75210238464164,
    "avg_bits_err_improve": 0.004834607670410662,
    "time": 28003.118408203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 28.788777767944996,
    "avg_bits_err_output": 28.788803588590344,
    "avg_bits_err_improve": -2.58206453480625e-05,
    "time": 80062.56079101562,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007363361324451065,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0.006113361324451064,
    "time": 3058.47607421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.50174955065749,
    "avg_bits_err_output": 47.5352731719788,
    "avg_bits_err_improve": -0.03352362132130793,
    "time": 73080.21362304688,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.069959384915816,
    "avg_bits_err_output": 26.069959384915816,
    "avg_bits_err_improve": 0,
    "time": 35464.87060546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* a (- d))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.65854345701529,
    "avg_bits_err_output": 26.65676057771456,
    "avg_bits_err_improve": 0.0017828793007304,
    "time": 31958.23974609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (* ux (+ maxCos (* (* ux (* ux (* ux ux))) (/ -1.0 (* ux (* ux (* ux ux))))))) -1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 0.03875,
    "avg_bits_err_output": 0.03294866120309256,
    "avg_bits_err_improve": 0.005801338796907439,
    "time": 20141.423583984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (* (- (- ux (* ux (+ ux -1.0))) (* ux (* maxCos (fma ux maxCos (- (- 2.0 ux) ux))))) (* (- (- ux (* ux (+ ux -1.0))) (* ux (* maxCos (fma ux maxCos (- (- 2.0 ux) ux))))) (/ 1.0 (- (- ux (* ux (+ ux -1.0))) (* ux (* maxCos (fma ux maxCos (- (- 2.0 ux) ux))))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 13.497687227091795,
    "avg_bits_err_output": 0.5255126092837812,
    "avg_bits_err_improve": 12.972174617808014,
    "time": 38392.303955078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- ux (* ux (+ ux -1.0))) (+ (* ux (* (- (- 2.0 ux) ux) maxCos)) (* ux (* ux (* maxCos maxCos)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.540722880457121,
    "avg_bits_err_output": 0.339326515778065,
    "avg_bits_err_improve": 13.201396364679056,
    "time": 35109.015869140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (- (* (* 1.0 maxCos) ux) (* ux (* ux maxCos))) zi))",
    "output_parens": 36,
    "avg_bits_err_input": 0.3376173847165654,
    "avg_bits_err_output": 0.3386273960577008,
    "avg_bits_err_improve": -0.0010100113411354306,
    "time": 96318.53173828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20115376181596006,
    "avg_bits_err_output": 0.20135188212855018,
    "avg_bits_err_improve": -0.00019812031259011653,
    "time": 17645.580078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (expm1 (* (log1p (/ u1 (- 1.0 u1))) (* (log1p (/ u1 (- 1.0 u1))) (/ 1.0 (log1p (/ u1 (- 1.0 u1)))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.5381628816039323,
    "avg_bits_err_output": 0.5336951380481252,
    "avg_bits_err_improve": 0.0044677435558071465,
    "time": 108626.90576171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* 6.28318530718 u2) (* u2 (* (+ (/ (* 6.28318530718 u2) (* 6.28318530718 u2)) (/ 0.0 (* 6.28318530718 u2))) (* 6.28318530718 (/ 1.0 (* 6.28318530718 u2))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.3323814637931077,
    "avg_bits_err_output": 0.34713681894046816,
    "avg_bits_err_improve": -0.014755355147360483,
    "time": 35180.0791015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))))) (- s) (fma (- (* s (/ -1.0 s))) s (- s)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.3375540656001496,
    "avg_bits_err_output": 0.41795982291825556,
    "avg_bits_err_improve": -0.08040575731810595,
    "time": 37068.34375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (exp (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07039997381152756,
    "avg_bits_err_output": 0.07581029686333854,
    "avg_bits_err_improve": -0.005410323051810981,
    "time": 9476.00537109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (- (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0)) -1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16534426588581133,
    "avg_bits_err_output": 0.1407071653854809,
    "avg_bits_err_improve": 0.02463710050033044,
    "time": 33150.793212890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641135874740226,
    "avg_bits_err_output": 0.6727942602193283,
    "avg_bits_err_improve": -0.008680672745305706,
    "time": 25116.573974609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (- (+ 1.0 (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (* (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (/ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))) (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (/ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))))))) 1.0) 1.0)",
    "output_parens": 34,
    "avg_bits_err_input": 0.15567642670288123,
    "avg_bits_err_output": 0.16891903671499228,
    "avg_bits_err_improve": -0.01324261001211105,
    "time": 36492.60400390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5574870978969493,
    "avg_bits_err_output": 2.5558076437042523,
    "avg_bits_err_improve": 0.0016794541926969941,
    "time": 78130.80615234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (fma v (* (sinh (/ 1.0 v)) 2.0) 1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44788030619839286,
    "avg_bits_err_output": 0.45067054721025385,
    "avg_bits_err_improve": -0.0027902410118609833,
    "time": 34086.18505859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11342486894409184,
    "avg_bits_err_output": 0.11342486894409184,
    "avg_bits_err_improve": 0,
    "time": 7990.303955078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (fma (- cosTheta) (* cosTheta (- 1.0 (* alpha alpha))) (+ (* alpha (* (- cosTheta) (* alpha cosTheta))) (* (* alpha alpha) (* cosTheta cosTheta)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.4767753941579562,
    "avg_bits_err_output": 0.4768485144705464,
    "avg_bits_err_improve": -7.312031259015805e-05,
    "time": 25994.186279296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3345746971356445,
    "avg_bits_err_output": 1.33434671088564,
    "avg_bits_err_improve": 0.00022798625000453043,
    "time": 44719.577392578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (+ 1.0 (- (log (* (/ 1.0 (- 1.0 (* 4.0 u))) (* (/ 1.0 (- 1.0 (* 4.0 u))) (/ 1.0 (/ 1.0 (- 1.0 (* 4.0 u))))))) (/ s s))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.339410347436003,
    "avg_bits_err_output": 12.37033042526396,
    "avg_bits_err_improve": -0.03092007782795747,
    "time": 52492.0947265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* s (* s (* (/ r s) (* PI 6.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1434555200460597,
    "avg_bits_err_output": 0.15006180564356264,
    "avg_bits_err_improve": -0.006606285597502953,
    "time": 49683.4208984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9247303301421024,
    "avg_bits_err_output": 0.9197612557068029,
    "avg_bits_err_improve": 0.004969074435299481,
    "time": 37607.0927734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (* (/ 1.0 (sqrt PI)) (fma (/ 1.0 (sqrt PI)) (/ (exp (log1p (/ 1.0 (sqrt PI)))) (/ 1.0 (sqrt PI))) -1.0))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.6900439519084594,
    "avg_bits_err_output": 0.5313050547988981,
    "avg_bits_err_improve": 0.15873889710956124,
    "time": 45440.120849609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (/ (/ u2 u2) u2) (* u2 (* (/ (/ u2 u2) u2) (* u2 (* PI (* u2 2.0))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.513070364833133,
    "avg_bits_err_output": 13.536949463552942,
    "avg_bits_err_improve": -0.02387909871980831,
    "time": 40991.602294921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (+ (+ (cos (* (/ PI (+ u2 u2)) (* (+ u2 u2) (+ u2 u2)))) 2.0) -2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 13.566173037343615,
    "avg_bits_err_output": 13.58404936513245,
    "avg_bits_err_improve": -0.01787632778883541,
    "time": 41860.68896484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha alpha (fma (- alpha) alpha (* (log (- 1.0 u0)) (* alpha (- alpha)))))",
    "output_parens": 8,
    "avg_bits_err_input": 13.967857744198856,
    "avg_bits_err_output": 13.940097528117555,
    "avg_bits_err_improve": 0.02776021608130108,
    "time": 33360.71484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.735171715335717,
    "avg_bits_err_output": 12.735171715335717,
    "avg_bits_err_improve": 0,
    "time": 17283.91748046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (fma (tan (* PI l)) (* (/ 1.0 (* F F)) 2.0) (* (tan (* PI l)) (- (/ 1.0 (* F F))))))",
    "output_parens": 14,
    "avg_bits_err_input": 16.49249338287027,
    "avg_bits_err_output": 16.50377388655075,
    "avg_bits_err_improve": -0.011280503680481502,
    "time": 28064.40380859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2236497379540208,
    "avg_bits_err_output": 0.21921956445035246,
    "avg_bits_err_improve": 0.004430173503668339,
    "time": 38934.5234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.457914018303216,
    "avg_bits_err_output": 13.457914018303216,
    "avg_bits_err_improve": 0,
    "time": 55515.267578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.43982144920934,
    "avg_bits_err_output": 1.9487861882936108,
    "avg_bits_err_improve": 59.49103526091573,
    "time": 72739.97583007812,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.95e-157) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 1.5e-152) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 43.329198102684785,
    "avg_bits_err_output": 35.73649691694559,
    "avg_bits_err_improve": 7.592701185739195,
    "time": 45321.94287109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (log1p (expm1 (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 3.853514213811086,
    "avg_bits_err_output": 3.856724176311807,
    "avg_bits_err_improve": -0.003209962500721364,
    "time": 61878.421630859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0863747861547797,
    "avg_bits_err_output": 1.0863747861547797,
    "avg_bits_err_improve": 0,
    "time": 12163.430908203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* 2.0 (* n (- (* n (* (pow (/ l Om) 2.0) (* (- U* U) U))) (* U (- (* 2.0 (/ (* l l) Om)) t)))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 44,
    "avg_bits_err_input": 34.46157878550961,
    "avg_bits_err_output": 31.875350960560965,
    "avg_bits_err_improve": 2.5862278249486437,
    "time": 29645.57666015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -4.5e-100) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0)) (* (tan k) (sin k)))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (exp (log1p (/ (pow t 3.0) (* l l)))) (* (tan k) (sin k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.83210195031423,
    "avg_bits_err_output": 38.367678861943894,
    "avg_bits_err_improve": 9.464423088370339,
    "time": 69843.37255859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (/ (pow t 3.0) (* l l)) (- (* (+ (pow (/ k t) 2.0) 3.0) (sin k)) (sin k)))))",
    "output_parens": 14,
    "avg_bits_err_input": 32.43845866339954,
    "avg_bits_err_output": 32.41060446510278,
    "avg_bits_err_improve": 0.02785419829675817,
    "time": 44403.05810546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma a1 (* (/ (cos th) (sqrt 2.0)) a1) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5028838375223573,
    "avg_bits_err_output": 0.49531316096084893,
    "avg_bits_err_improve": 0.007570676561508394,
    "time": 35913.220947265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* PI (* n (/ 2.0 PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.472565155812468,
    "avg_bits_err_output": 0.4782846125342447,
    "avg_bits_err_improve": -0.005719456721776706,
    "time": 47236.6328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- (expm1 l) (expm1 (- l))) (* J (cos (/ K 2.0)))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.272637600033196,
    "avg_bits_err_output": 0.08168872187554087,
    "avg_bits_err_improve": 17.190948878157656,
    "time": 36265.450927734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (- (* K (+ n (+ m 1.0))) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ n m) (* (+ n m) (- (* (exp (log1p (/ 1.0 (+ n m)))) K) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 58,
    "avg_bits_err_input": 15.458969763343148,
    "avg_bits_err_output": 1.3826989302970762,
    "avg_bits_err_improve": 14.076270833046072,
    "time": 37380.35498046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.28489624062518,
    "avg_bits_err_output": 18.28489624062518,
    "avg_bits_err_improve": 0,
    "time": 35741.1396484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (+ (- (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)) -1.0) -1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 14.059530863966984,
    "avg_bits_err_output": 14.05982152290923,
    "avg_bits_err_improve": -0.0002906589422462247,
    "time": 16057.98291015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.9747755837963,
    "avg_bits_err_output": 18.9747755837963,
    "avg_bits_err_improve": 0,
    "time": 27693.63916015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.67273215480821,
    "avg_bits_err_output": 57.10565686264602,
    "avg_bits_err_improve": 2.567075292162187,
    "time": 32582.130615234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* (pow (/ d l) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* (/ h l) 0.5)))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.44617227584965,
    "avg_bits_err_output": 25.793600953910452,
    "avg_bits_err_improve": 0.6525713219391989,
    "time": 47457.068359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 14.971667081376712,
    "avg_bits_err_output": 14.971667081376712,
    "avg_bits_err_improve": 0,
    "time": 5259.301025390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* -3.0 (- (- (sqrt (- 2.0 (* v (* v 6.0)))) 0.0) (* v (* v (sqrt (- 2.0 (* v (* v 6.0)))))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.9823868421881311,
    "avg_bits_err_output": 0.013167481250360578,
    "avg_bits_err_improve": 0.9692193609377705,
    "time": 21253.07421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4803071376397249,
    "avg_bits_err_output": 0.403031491038731,
    "avg_bits_err_improve": 0.0772756466009939,
    "time": 26707.5322265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014917481250360578,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.002667481250360577,
    "time": 11864.489990234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- (+ (* v (* v 5.0)) 1.0) 1.0)) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.534914697257525,
    "avg_bits_err_output": 0.5537160082413749,
    "avg_bits_err_improve": -0.01880131098384985,
    "time": 15059.929931640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (+ (* k (+ k 10.0)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9187119986384435,
    "avg_bits_err_output": 1.8719832392636238,
    "avg_bits_err_improve": 0.046728759374819795,
    "time": 8054.130859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (- (+ (/ (+ mu (- EDonor (- Ec Vef))) KbT) 1.0) 1.0)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.01902135833709117,
    "avg_bits_err_output": 0.01909447864968131,
    "avg_bits_err_improve": -7.312031259014071e-05,
    "time": 7416.452392578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (- (+ (* (* b b) 4.0) 1.0) 1.0)) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.18189417344137612,
    "avg_bits_err_output": 0.1910404140665564,
    "avg_bits_err_improve": -0.009146240625180269,
    "time": 40718.626708984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (fma a a (* a (* a a))) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1894956925776963,
    "avg_bits_err_output": 0.18912069257769631,
    "avg_bits_err_improve": 0.00037499999999998646,
    "time": 39389.536376953125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (- 1.0 a) (expm1 (log1p (* a a)))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.18585903185262348,
    "avg_bits_err_output": 0.18652427286448442,
    "avg_bits_err_improve": -0.0006652410118609398,
    "time": 32417.108154296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.501493261825829,
    "avg_bits_err_output": 13.501493261825829,
    "avg_bits_err_improve": 0,
    "time": 14860.605224609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (* (/ (expm1 (+ x x)) (expm1 x)) (* (/ (expm1 (+ x x)) (expm1 x)) (/ 1.0 (/ (expm1 (+ x x)) (expm1 x))))))",
    "output_parens": 16,
    "avg_bits_err_input": 40.83161298072334,
    "avg_bits_err_output": 0.048,
    "avg_bits_err_improve": 40.78361298072334,
    "time": 14186.226318359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (* (+ 1.0 x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x))))) 1.0) (* (sin x) (/ (+ 1.0 (- x (sin x))) (+ 1.0 (- x (sin x)))))) (+ x (+ (- 2.0 (tan x)) -2.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 30.978015531159368,
    "avg_bits_err_output": 25.452650992998155,
    "avg_bits_err_improve": 5.525364538161213,
    "time": 50587.035400390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.729145063819495,
    "avg_bits_err_output": 34.729145063819495,
    "avg_bits_err_improve": 0,
    "time": 16175.164794921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* a c) (- (- (* b_2 b_2) (* a c)) (* a c))))) a)",
    "output_parens": 11,
    "avg_bits_err_input": 34.436573743810996,
    "avg_bits_err_output": 34.46129310474876,
    "avg_bits_err_improve": -0.024719360937766055,
    "time": 23870.1376953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(log1p (expm1 (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.216202271379384,
    "avg_bits_err_output": 31.21617417707677,
    "avg_bits_err_improve": 2.809430261407897e-05,
    "time": 21021.268310546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(+ (pow (+ 1.0 x) (/ 1.0 n)) (+ (- 2.0 (pow x (/ 1.0 n))) -2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 33.38967272288387,
    "avg_bits_err_output": 33.42237437448897,
    "avg_bits_err_improve": -0.03270165160509464,
    "time": 25262.405029296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 29.44133110348553,
    "avg_bits_err_output": 29.44051563727335,
    "avg_bits_err_improve": 0.0008154662121810929,
    "time": 31137.384033203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.751710394678788,
    "avg_bits_err_output": 14.751710394678788,
    "avg_bits_err_improve": 0,
    "time": 28080.569091796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (- (* (- -1.0 (cos x)) (* (* (- -1.0 (cos x)) (/ 1.0 (- -1.0 (cos x)))) (* (log1p (expm1 (- -1.0 (cos x)))) (/ (/ (- -1.0 (cos x)) (- -1.0 (cos x))) (- -1.0 (cos x)))))) -1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 39.33306555243677,
    "avg_bits_err_output": 39.36044065661519,
    "avg_bits_err_improve": -0.02737510417841804,
    "time": 45092.324951171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.742797241848077,
    "avg_bits_err_output": 29.446206421038916,
    "avg_bits_err_improve": 0.2965908208091612,
    "time": 28766.070556640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.43307979460694,
    "avg_bits_err_output": 30.43307979460694,
    "avg_bits_err_improve": 0,
    "time": 105584.16455078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.490826374729586,
    "avg_bits_err_output": 34.490826374729586,
    "avg_bits_err_improve": 0,
    "time": 19511.7294921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.731654172625774,
    "avg_bits_err_output": 34.7454079779592,
    "avg_bits_err_improve": -0.013753805333429625,
    "time": 26655.416259765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.25592938520995,
    "avg_bits_err_output": 59.911882089965815,
    "avg_bits_err_improve": 1.3440472952441382,
    "time": 15915.4052734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.0043646566278,
    "avg_bits_err_output": 0.06285338500739628,
    "avg_bits_err_improve": 62.941511271620406,
    "time": 26516.391357421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) (* (- -1.0 (- (+ (log (/ (- 1.0 eps) (+ 1.0 eps))) 2.0) 2.0)) (- -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) -1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 58.746051774683856,
    "avg_bits_err_improve": -0.026761158441544808,
    "time": 135406.17114257812,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(fma (/ 1.0 (tan x)) (* (/ 1.0 (tan x)) (/ (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x)))) (- (/ 1.0 x) (* (/ 1.0 (tan x)) (/ (+ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x))))))",
    "output_parens": 23,
    "avg_bits_err_input": 59.86949778009672,
    "avg_bits_err_output": 59.742854412163915,
    "avg_bits_err_improve": 0.1266433679328074,
    "time": 78028.0185546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.4660750040529,
    "avg_bits_err_output": 41.15881065678894,
    "avg_bits_err_improve": 19.30726434726396,
    "time": 29388.5625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.16859861326628,
    "avg_bits_err_output": 0.4348656015629507,
    "avg_bits_err_improve": 40.733733011703336,
    "time": 13630.39111328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.76375708417609,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 58.763382084176094,
    "time": 3934.67919921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.016698955664374,
    "avg_bits_err_output": 0.021512548747768777,
    "avg_bits_err_improve": 28.995186406916606,
    "time": 4821.155029296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.54982648154794,
    "avg_bits_err_output": 28.694659676131366,
    "avg_bits_err_improve": 0.8551668054165731,
    "time": 19750.080810546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.06042986287164,
    "avg_bits_err_output": 10.071920550386082,
    "avg_bits_err_improve": -0.011490687514442044,
    "time": 63900.442138671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (tan (+ x eps)) (* (tan (+ x eps)) (/ 1.0 (log1p (expm1 (tan (+ x eps)))))) (- (tan x)))",
    "output_parens": 13,
    "avg_bits_err_input": 36.80678994756066,
    "avg_bits_err_output": 37.12351826991658,
    "avg_bits_err_improve": -0.31672832235592097,
    "time": 34182.421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (- (+ (expm1 (- (+ -1.0 (sqrt (+ x 1.0))) (sqrt x))) -1.0) -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 29.92762824474874,
    "avg_bits_err_output": 29.244730542827856,
    "avg_bits_err_improve": 0.6828977019208828,
    "time": 31960.46630859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (expm1 (log1p (sin (+ x eps)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 36.96172508371131,
    "avg_bits_err_output": 37.01482045400098,
    "avg_bits_err_improve": -0.05309537028967526,
    "time": 29625.814208984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (- (+ 1.0 (/ 1.0 (sqrt x))) 1.0) (log (exp (/ 1.0 (sqrt (+ 1.0 x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 19.97093036205265,
    "avg_bits_err_output": 20.11712956178227,
    "avg_bits_err_improve": -0.14619919972962236,
    "time": 31999.031005859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (log (+ 1.0 (expm1 (+ (atan (+ 1.0 N)) -1.0)))) (atan N)) -1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 15.0705599578238,
    "avg_bits_err_output": 15.079897522783797,
    "avg_bits_err_improve": -0.00933756495999738,
    "time": 18639.41796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.806541770153874,
    "avg_bits_err_output": 29.806541770153874,
    "avg_bits_err_improve": 0,
    "time": 59384.468017578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0707195644503525,
    "avg_bits_err_output": 0.0707195644503525,
    "avg_bits_err_improve": 0,
    "time": 24012.09375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.10308491871449,
    "avg_bits_err_output": 0.30514661719245784,
    "avg_bits_err_improve": 15.797938301522032,
    "time": 17914.86376953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (fma PI (/ angle 180.0) (fma (- (/ angle 180.0)) (- PI) (* (/ angle 180.0) (- PI)))))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.247295279560415,
    "avg_bits_err_output": 20.26002675182362,
    "avg_bits_err_improve": -0.012731472263205035,
    "time": 61378.5859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.860737409601708,
    "avg_bits_err_output": 31.860737409601708,
    "avg_bits_err_improve": 0,
    "time": 77469.6875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (* (/ angle 180.0) PI) (* (* (/ angle 180.0) PI) (/ 1.0 (fma (/ angle 180.0) (* PI (exp (log1p (/ (/ angle 180.0) (/ angle 180.0))))) (- (* (/ angle 180.0) PI)))))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 20.41262782178542,
    "avg_bits_err_output": 20.561074272724905,
    "avg_bits_err_improve": -0.14844645093948472,
    "time": 122111.65991210938,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17216748125036058,
    "avg_bits_err_output": 0.17216748125036058,
    "avg_bits_err_improve": 0,
    "time": 26549.354736328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.31242730941468716,
    "avg_bits_err_output": 0.3013925394950986,
    "avg_bits_err_improve": 0.011034769919588572,
    "time": 23944.50830078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13759436093777044,
    "avg_bits_err_output": 0.13759436093777044,
    "avg_bits_err_improve": 0,
    "time": 34169.660400390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.86179442777483,
    "avg_bits_err_output": 16.855590456965988,
    "avg_bits_err_improve": 0.006203970808840609,
    "time": 65550.24243164062,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.7e+16) (/ (- (* (sqrt (fma b b (* a (* c -4.0)))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b) (+ a a)) (/ (+ (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.54893871942147,
    "avg_bits_err_output": 50.868517532478805,
    "avg_bits_err_improve": 1.6804211869426666,
    "time": 24268.025634765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.93968600050526,
    "avg_bits_err_output": 28.852033167332557,
    "avg_bits_err_improve": 0.08765283317270445,
    "time": 19097.728759765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (log (+ 1.0 (expm1 (* (fma a (* c -4.0) (* b b)) (/ 1.0 (fma a (* c -4.0) (* b b)))))))))) (- b)) (+ a a))",
    "output_parens": 30,
    "avg_bits_err_input": 43.79672286925443,
    "avg_bits_err_output": 42.98485180928123,
    "avg_bits_err_improve": 0.8118710599731997,
    "time": 26475.134765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.50892151664608,
    "avg_bits_err_output": 34.50892151664608,
    "avg_bits_err_improve": 0,
    "time": 16357.43896484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (/ 1.0 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.8488395665463114,
    "avg_bits_err_output": 0.8676903662381882,
    "avg_bits_err_improve": -0.018850799691876752,
    "time": 36056.734619140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.278366926252225,
    "avg_bits_err_output": 1.1029293234384918,
    "avg_bits_err_improve": 57.17543760281373,
    "time": 14640.239501953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.27560170097852,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 58.26860170097852,
    "time": 6825.20263671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007823120312590146,
    "avg_bits_err_output": 0.007823120312590146,
    "avg_bits_err_improve": 0,
    "time": 2849.8193359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.705625,
    "avg_bits_err_output": 31.705625,
    "avg_bits_err_improve": 0,
    "time": 4796.37646484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (- (+ 1.0 (/ (+ 1.0 x) (- 1.0 x))) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 58.70600775417713,
    "avg_bits_err_output": 58.74978241620656,
    "avg_bits_err_improve": -0.0437746620294277,
    "time": 257415.85131835938,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- 1.0 (* x x))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.04294812031259015,
    "avg_bits_err_output": 0.043125,
    "avg_bits_err_improve": -0.0001768796874098491,
    "time": 6095.399169921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12507312031259016,
    "avg_bits_err_output": 0.12507312031259016,
    "avg_bits_err_improve": 0,
    "time": 34000.3798828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.129125,
    "avg_bits_err_output": 0.129125,
    "avg_bits_err_improve": 0,
    "time": 23545.921142578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 38.75888818465462,
    "avg_bits_err_output": 3.833443564715602,
    "avg_bits_err_improve": 34.92544461993902,
    "time": 35651.277099609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.35516522605636,
    "avg_bits_err_output": 14.35516522605636,
    "avg_bits_err_improve": 0,
    "time": 9112.6025390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (- (exp (log1p (* (sin delta) (cos phi1)))) 1.0) (cos theta))))) (- (cos delta))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.16115112925084202,
    "avg_bits_err_output": 0.1598414952192563,
    "avg_bits_err_improve": 0.0013096340315857102,
    "time": 53686.7861328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.5e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (* (fma c (* a -3.0) (* b b)) (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))))) (- b)) (* 3.0 a)) (/ (- (+ (sqrt (fma a (* c -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.56052898958039,
    "avg_bits_err_output": 50.583849464709786,
    "avg_bits_err_improve": 1.9766795248706046,
    "time": 42171.501220703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 29.074130093987623,
    "avg_bits_err_output": 29.01709701941774,
    "avg_bits_err_improve": 0.05703307456988327,
    "time": 20833.189697265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma b b (* -3.0 (* c a)))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 43.86880553911625,
    "avg_bits_err_output": 43.13701912918925,
    "avg_bits_err_improve": 0.731786409927004,
    "time": 27498.7900390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.5228111051199,
    "avg_bits_err_output": 34.5228111051199,
    "avg_bits_err_improve": 0,
    "time": 24547.645263671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (* (cos phi2) (/ (sin (- lambda1 lambda2)) (cos phi2))) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.159819173272345,
    "avg_bits_err_output": 13.165390173963543,
    "avg_bits_err_improve": -0.00557100069119798,
    "time": 71660.04223632812,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (log (+ 1.0 (expm1 (* (/ x (+ 1.0 x)) (+ 1.0 (/ -1.0 (/ x (+ 1.0 x)))))))) (- (* (/ x (+ 1.0 x)) (/ 1.0 (/ x (+ 1.0 x)))) (/ (+ 1.0 x) (+ -1.0 x))))",
    "output_parens": 21,
    "avg_bits_err_input": 29.148772293790792,
    "avg_bits_err_output": 29.16958379945127,
    "avg_bits_err_improve": -0.020811505660478957,
    "time": 30634.797119140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (- (/ 1.0 (+ -1.0 x)) 1.0) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01557556406367188,
    "avg_bits_err_improve": -0.004325564063671881,
    "time": 5768.285400390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (* (/ 1.0 (/ 1.0 (+ -1.0 x))) (* (* (fma (/ 1.0 (+ -1.0 x)) (/ 1.0 (/ 1.0 (+ -1.0 x))) -1.0) (fma (/ 1.0 (+ -1.0 x)) (/ 1.0 (/ 1.0 (+ -1.0 x))) -1.0)) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))))",
    "output_parens": 29,
    "avg_bits_err_input": 14.52866119350035,
    "avg_bits_err_output": 14.483718592300182,
    "avg_bits_err_improve": 0.04494260120016769,
    "time": 112779.11010742188,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* (- C (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* 2.0 F))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.332486803990264,
    "avg_bits_err_output": 52.02541068319129,
    "avg_bits_err_improve": 0.3070761207989747,
    "time": 31829.902099609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.94791697115608,
    "avg_bits_err_output": 29.94791697115608,
    "avg_bits_err_improve": 0,
    "time": 39084.360107421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.377085075342315,
    "avg_bits_err_output": 52.088810180343266,
    "avg_bits_err_improve": 0.28827489499904857,
    "time": 36280.878662109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.04371613288221,
    "avg_bits_err_output": 15.04371613288221,
    "avg_bits_err_improve": 0,
    "time": 2087.854736328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.91913143472072,
    "avg_bits_err_output": 36.91913143472072,
    "avg_bits_err_improve": 0,
    "time": 15438.250732421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (log (exp (/ (acos (/ (- g) h)) 3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9918708656323929,
    "avg_bits_err_output": 0.9926421062575731,
    "avg_bits_err_improve": -0.0007712406251801918,
    "time": 4886.796142578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6469693609377705,
    "avg_bits_err_output": 0.6469693609377705,
    "avg_bits_err_improve": 0,
    "time": 1895.773193359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.986655253484908,
    "avg_bits_err_output": 11.986655253484908,
    "avg_bits_err_improve": 0,
    "time": 14889.818359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5623637626021017,
    "avg_bits_err_output": 0.513625,
    "avg_bits_err_improve": 0.04873876260210175,
    "time": 10923.588623046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.79582136742435,
    "avg_bits_err_output": 15.044978511043547,
    "avg_bits_err_improve": 37.75084285638081,
    "time": 16171.439208984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.71919993055985,
    "avg_bits_err_output": 5.720451828788765,
    "avg_bits_err_improve": -0.0012518982289151381,
    "time": 28142.87060546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 4065.052978515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1262.150390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 5e-117) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* w r)))) (- 1.0 v)))) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* w (* r (* (- 0.375 (* v 0.25)) (* w r)))) (- 1.0 v))) 4.5))",
    "output_parens": 28,
    "avg_bits_err_input": 13.24002046550635,
    "avg_bits_err_output": 7.561019173441368,
    "avg_bits_err_improve": 5.6790012920649815,
    "time": 37848.5986328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (fma (* x1 x1) -6.0 (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (* (+ (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) 2.0)))) (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5127421811457701,
    "avg_bits_err_output": 0.28743207843261687,
    "avg_bits_err_improve": 0.22531010271315322,
    "time": 70865.89672851562,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.29623075170551,
    "avg_bits_err_output": 19.29623075170551,
    "avg_bits_err_improve": 0,
    "time": 63897.888916015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2240614816370412,
    "avg_bits_err_output": 0.17868892538812292,
    "avg_bits_err_improve": 0.04537255624891828,
    "time": 19231.87939453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003919694000577261,
    "avg_bits_err_output": 0.003919694000577261,
    "avg_bits_err_improve": 0,
    "time": 3100.621826171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.938247422578925,
    "avg_bits_err_output": 9.123075430393675,
    "avg_bits_err_improve": 4.815171992185251,
    "time": 38769.885498046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.087406643723906,
    "avg_bits_err_output": 0.9249260028015092,
    "avg_bits_err_improve": 28.162480640922396,
    "time": 28531.707763671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.017125,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0,
    "time": 6924.86279296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.024125,
    "avg_bits_err_output": 0.024125,
    "avg_bits_err_improve": 0,
    "time": 36876.770751953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- 1.0 (- 1.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.023125,
    "avg_bits_err_output": 0.0225,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 22269.120361328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3118.14599609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2996.224365234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3344.48388671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.818228497284723,
    "avg_bits_err_output": 0.240375,
    "avg_bits_err_improve": 7.577853497284723,
    "time": 49179.8017578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.771673768895418,
    "avg_bits_err_output": 7.771673768895418,
    "avg_bits_err_improve": 0,
    "time": 38418.169677734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.29147747013905,
    "avg_bits_err_output": 16.29147747013905,
    "avg_bits_err_improve": 0,
    "time": 50405.18310546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (- (exp (log1p (cos x))) 1.0) (+ (expm1 (* 10.0 (* x x))) 1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 3.5597346939920094,
    "avg_bits_err_output": 3.557387579831228,
    "avg_bits_err_improve": 0.0023471141607811496,
    "time": 37227.408203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.58276838073367,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.58276838073367,
    "time": 4996.908447265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14358561573015,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.14308561573015,
    "time": 4431.44677734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.306625,
    "avg_bits_err_improve": 63.693375,
    "time": 3462.198974609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843253347501275,
    "avg_bits_err_output": 0.401125,
    "avg_bits_err_improve": 61.442128347501274,
    "time": 33087.320068359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.731654172625774,
    "avg_bits_err_output": 34.7454079779592,
    "avg_bits_err_improve": -0.013753805333429625,
    "time": 42233.355712890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.50892151664608,
    "avg_bits_err_output": 34.50892151664608,
    "avg_bits_err_improve": 0,
    "time": 28869.011962890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2849.653076171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.411440673098795,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 39.401565673098794,
    "time": 6065.740478515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.68575504741409,
    "avg_bits_err_output": 19.68575504741409,
    "avg_bits_err_improve": 0,
    "time": 6249.195556640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6721265540007746,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6721265540007746,
    "time": 8963.89404296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03875,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.037625,
    "time": 10821.58642578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01856372187554087,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 0.01018872187554087,
    "time": 6441.29150390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012875,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.012499999999999999,
    "time": 6139.013916015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 4450.438720703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4000428578176385,
    "avg_bits_err_output": 0.2375,
    "avg_bits_err_improve": 0.1625428578176385,
    "time": 10973.03076171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.01115789529748,
    "avg_bits_err_output": 30.01115789529748,
    "avg_bits_err_improve": 0,
    "time": 10523.751220703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x (* x (* x (/ 1.0 x)))) eps)))",
    "output_parens": 7,
    "avg_bits_err_input": 24.556461837877784,
    "avg_bits_err_output": 24.573661042571867,
    "avg_bits_err_improve": -0.017199204694083647,
    "time": 26772.712646484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.68532795172709,
    "avg_bits_err_output": 29.685198853530128,
    "avg_bits_err_improve": 0.00012909819696105274,
    "time": 92355.13159179688,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.004875,
    "time": 3174.562744140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.3425093859414,
    "avg_bits_err_output": 47.36050925005282,
    "avg_bits_err_improve": -0.017999864111423847,
    "time": 77730.32666015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.980188192230877,
    "avg_bits_err_output": 25.980188192230877,
    "avg_bits_err_improve": 0,
    "time": 41676.67919921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* (* d a) (- (* d (* a (/ 1.0 (fma b c (* d (- a)))))) (* b (* c (/ 1.0 (fma b c (* d (- a)))))))) (* c (* b (- (* d (* a (/ 1.0 (fma b c (* d (- a)))))) (* b (* c (/ 1.0 (fma b c (* d (- a)))))))))) (+ (* c c) (* d d)))",
    "output_parens": 35,
    "avg_bits_err_input": 26.083827027080257,
    "avg_bits_err_output": 26.010504738909688,
    "avg_bits_err_improve": 0.0733222881705693,
    "time": 34639.48681640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035625,
    "avg_bits_err_output": 0.02065776945635998,
    "avg_bits_err_improve": 0.014967230543640016,
    "time": 14184.068115234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (* (* ux maxCos) (* (- (* ux maxCos) ux) (/ (+ ux (- -2.0 (* ux maxCos))) (- (* ux maxCos) ux)))) (* (* (- (* ux maxCos) ux) (/ (+ ux (- -2.0 (* ux maxCos))) (- (* ux maxCos) ux))) ux))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.44394324418557,
    "avg_bits_err_output": 0.5546828867454296,
    "avg_bits_err_improve": 12.88926035744014,
    "time": 27398.450439453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (- (+ (* ux (* 2.0 maxCos)) (* (- ux (* ux maxCos)) (- ux (* ux maxCos)))) (* ux 2.0)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.495645621433516,
    "avg_bits_err_output": 0.30985103362906224,
    "avg_bits_err_improve": 13.185794587804454,
    "time": 35760.637451171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* 2.0 (log (+ 1.0 (expm1 (* PI uy)))))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* 2.0 (* PI uy)))))))",
    "output_parens": 35,
    "avg_bits_err_input": 0.32794533011683163,
    "avg_bits_err_output": 0.33145836531645795,
    "avg_bits_err_improve": -0.003513035199626313,
    "time": 70217.01611328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19663710765478196,
    "avg_bits_err_output": 0.1968352279673721,
    "avg_bits_err_improve": -0.0001981203125901443,
    "time": 19317.31787109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5584054131264333,
    "avg_bits_err_output": 0.5152048241376349,
    "avg_bits_err_improve": 0.043200588988798416,
    "time": 88818.52514648438,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(+ (* (sqrt (/ u1 (- 1.0 u1))) (+ -1.0 (cos (* 6.28318530718 u2)))) (sqrt (/ u1 (- 1.0 u1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3288798706505123,
    "avg_bits_err_output": 0.3433964855655813,
    "avg_bits_err_improve": -0.014516614915069004,
    "time": 38806.355712890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.34622139490544057,
    "avg_bits_err_output": 0.3468279789752391,
    "avg_bits_err_improve": -0.0006065840697985214,
    "time": 37114.829833984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0604678217642843,
    "avg_bits_err_output": 0.0604678217642843,
    "avg_bits_err_improve": 0,
    "time": 21461.03955078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (- (fabs x)) s))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14691469672015062,
    "avg_bits_err_output": 0.13297104611787655,
    "avg_bits_err_improve": 0.013943650602274066,
    "time": 23087.423095703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6377393741706877,
    "avg_bits_err_output": 0.6403502679299644,
    "avg_bits_err_improve": -0.0026108937592767,
    "time": 16371.39501953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (* (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (/ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))) (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (/ (/ (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))))) 1.0)",
    "output_parens": 43,
    "avg_bits_err_input": 0.16001236850351017,
    "avg_bits_err_output": 0.1671355768020651,
    "avg_bits_err_improve": -0.007123208298554923,
    "time": 31853.572998046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5661096639661056,
    "avg_bits_err_output": 2.5661096639661056,
    "avg_bits_err_improve": 0,
    "time": 75147.58984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) (/ (* v 2.0) (sinh (/ 1.0 v)))) (sinh (/ 1.0 v))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.45987599673795104,
    "avg_bits_err_output": 0.4661664543954177,
    "avg_bits_err_improve": -0.006290457657466664,
    "time": 34836.87890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11523247469693938,
    "avg_bits_err_output": 0.11523247469693938,
    "avg_bits_err_improve": 0,
    "time": 8453.730224609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (* (exp (log1p (+ (* alpha (* cosTheta alpha)) (- cosTheta)))) cosTheta) cosTheta))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4714917115735817,
    "avg_bits_err_output": 0.4709398318861719,
    "avg_bits_err_improve": 0.0005518796874098286,
    "time": 30483.0498046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (+ 1.0 (expm1 (* 3.0 (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 1.3181925752395882,
    "avg_bits_err_output": 1.3289942642057548,
    "avg_bits_err_improve": -0.010801688966166623,
    "time": 63670.825439453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (- (+ (log (/ 1.0 (+ 1.0 (* u -4.0)))) -1.0) -1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 12.398654350062245,
    "avg_bits_err_output": 12.428530315462018,
    "avg_bits_err_improve": -0.029875965399773108,
    "time": 30711.130126953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (- (* (exp (log1p (* 2.0 PI))) s) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 21,
    "avg_bits_err_input": 0.14816826612545544,
    "avg_bits_err_output": 0.150472589563947,
    "avg_bits_err_improve": -0.0023043234384915456,
    "time": 50453.691162109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8504139139318614,
    "avg_bits_err_output": 0.8450307993082161,
    "avg_bits_err_improve": 0.005383114623645269,
    "time": 44756.107177734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c))) (/ 1.0 (/ 1.0 (+ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta)))) c)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.6964411828804143,
    "avg_bits_err_output": 0.5777392875144596,
    "avg_bits_err_improve": 0.11870189536595477,
    "time": 58722.559326171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (+ u2 u2) (* u2 (/ PI u2)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.626070382870543,
    "avg_bits_err_output": 13.629882995476297,
    "avg_bits_err_improve": -0.003812612605754495,
    "time": 43193.59130859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (log1p (expm1 (sqrt (- (log (- 1.0 u1)))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.667632846796424,
    "avg_bits_err_output": 13.67136484988056,
    "avg_bits_err_improve": -0.003732003084135016,
    "time": 35673.69140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (* (exp (log1p (/ (* alpha (* (/ (log (- 1.0 u0)) (* alpha (- alpha))) (- alpha))) (* alpha (- alpha))))) (* alpha (* alpha alpha))) (- (* alpha (* alpha (* alpha alpha)))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.226162936136163,
    "avg_bits_err_output": 14.022459480251085,
    "avg_bits_err_improve": 0.2037034558850781,
    "time": 41638.197265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (log (+ 1.0 (expm1 (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax)))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 19,
    "avg_bits_err_input": 12.584607537057988,
    "avg_bits_err_output": 12.59248013732155,
    "avg_bits_err_improve": -0.00787260026356229,
    "time": 22172.802001953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (fma (* PI (/ l PI)) PI 0.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.646005884411142,
    "avg_bits_err_output": 16.65139095518902,
    "avg_bits_err_improve": -0.005385070777876422,
    "time": 35692.913330078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2149387218755409,
    "avg_bits_err_output": 0.2149387218755409,
    "avg_bits_err_improve": 0,
    "time": 44182.760986328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.858444100164588,
    "avg_bits_err_output": 13.858444100164588,
    "avg_bits_err_improve": 0,
    "time": 60330.943603515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* f (- (+ (/ PI 4.0) 1.0) (* f (/ 1.0 f))))) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 61.69862389366804,
    "avg_bits_err_output": 1.8256798923464295,
    "avg_bits_err_improve": 59.87294400132161,
    "time": 64904.375732421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -7.5e-148) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 1.7e-134) (/ (* (sqrt 2.0) t) (/ (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l))))) 1.0)) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 43.0165951562062,
    "avg_bits_err_output": 36.06021252492042,
    "avg_bits_err_improve": 6.956382631285777,
    "time": 30816.280029296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (log1p (expm1 (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 3.802986425580912,
    "avg_bits_err_output": 3.8067907490194037,
    "avg_bits_err_improve": -0.0038043234384916857,
    "time": 63792.43896484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9689041181878356,
    "avg_bits_err_output": 0.9706541181878356,
    "avg_bits_err_improve": -0.0017500000000000293,
    "time": 11635.95703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e-144) (sqrt (* U (- (* (- t (* 2.0 (/ (* l l) Om))) (+ n n)) (* (pow (/ l Om) 2.0) (* n (* (- U U*) (+ n n))))))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e+154) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* 2.0 (* n (- (* (- U* U) (* n (* (pow (/ l Om) 2.0) U))) (* U (- (* 2.0 (/ (* l l) Om)) t))))))))",
    "output_parens": 77,
    "avg_bits_err_input": 34.3563435188631,
    "avg_bits_err_output": 30.635564829558255,
    "avg_bits_err_improve": 3.7207786893048436,
    "time": 30863.596923828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+128) (/ 2.0 (* (pow (/ k t) 2.0) (* (* (sin k) (/ (pow t 3.0) (* l l))) (tan k)))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)) (* (sin k) (- (tan k)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 47.70244897910644,
    "avg_bits_err_output": 37.62210590214505,
    "avg_bits_err_improve": 10.080343076961391,
    "time": 52172.93212890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+307) (/ 2.0 (* (* (sin k) (+ 2.0 (pow (/ k t) 2.0))) (* (/ (pow t 3.0) (* l l)) (tan k)))) (/ 2.0 (* (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))))) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))))",
    "output_parens": 46,
    "avg_bits_err_input": 32.00405801311554,
    "avg_bits_err_output": 29.797763941799165,
    "avg_bits_err_improve": 2.206294071316375,
    "time": 42398.013671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (fma a2 (* a2 (/ (/ (cos th) (sqrt 2.0)) a2)) 0.0) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.530235153146095,
    "avg_bits_err_output": 0.5144030109637342,
    "avg_bits_err_improve": 0.015832142182360842,
    "time": 34517.19091796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* n (/ (/ PI PI) (* 2.0 PI))) (* PI (* PI 4.0))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4558140234749733,
    "avg_bits_err_output": 0.4566901436721116,
    "avg_bits_err_improve": -0.0008761201971382859,
    "time": 41248.953369140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (- (expm1 l) (expm1 (- l)))) (cos (/ K 2.0))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.295902563258757,
    "avg_bits_err_output": 0.07193872187554087,
    "avg_bits_err_improve": 17.223963841383217,
    "time": 40529.217529296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.259977517909437,
    "avg_bits_err_output": 15.259977517909437,
    "avg_bits_err_improve": 0,
    "time": 7824.9619140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(- (* (* J (* (cos (/ K 2.0)) -2.0)) (+ 1.0 (sqrt (+ 1.0 (pow (/ U (* (cos (/ K 2.0)) (+ J J))) 2.0))))) (* J (* (cos (/ K 2.0)) -2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 18.33732312031259,
    "avg_bits_err_output": 18.370078007814758,
    "avg_bits_err_improve": -0.03275488750216837,
    "time": 37436.736083984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (log (+ 1.0 (expm1 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 13.991339047435492,
    "avg_bits_err_output": 13.998490175562841,
    "avg_bits_err_improve": -0.007151128127349082,
    "time": 19711.858154296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.489491733666977,
    "avg_bits_err_output": 19.489491733666977,
    "avg_bits_err_improve": 0,
    "time": 34177.942138671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* w (* D h)))) (sqrt (fma (/ (* d (* d c0)) (* D (* w (* D h)))) (/ (* d (* d c0)) (* D (* w (* D h)))) (* M (- M))))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.53181243466636,
    "avg_bits_err_output": 56.18168846213843,
    "avg_bits_err_improve": 3.350123972527925,
    "time": 31624.38232421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(fma (pow (/ d l) 0.5) (* (pow (/ d h) 0.5) (- 1.0 (* 0.5 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 26.41690728909107,
    "avg_bits_err_output": 26.42713601978519,
    "avg_bits_err_improve": -0.010228730694120003,
    "time": 45892.495849609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.39205824064325,
    "avg_bits_err_output": 15.39205824064325,
    "avg_bits_err_improve": 0,
    "time": 7869.891357421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(log1p (expm1 (/ 4.0 (* PI (* 3.0 (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9870637218755409,
    "avg_bits_err_output": 0.012313721875540867,
    "avg_bits_err_improve": 0.97475,
    "time": 12818.13623046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) t))",
    "output_parens": 13,
    "avg_bits_err_input": 0.45553459325646145,
    "avg_bits_err_output": 0.38563797606400324,
    "avg_bits_err_improve": 0.06989661719245821,
    "time": 26637.514892578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011167481250360578,
    "avg_bits_err_output": 0.010323120312590145,
    "avg_bits_err_improve": 0.0008443609377704331,
    "time": 17167.20751953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5285635298177244,
    "avg_bits_err_output": 0.5285635298177244,
    "avg_bits_err_improve": 0,
    "time": 13508.75244140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0529347922808627,
    "avg_bits_err_output": 2.026913551655683,
    "avg_bits_err_improve": 0.026021240625179853,
    "time": 8987.056640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (expm1 (log1p (exp (/ (+ mu (+ EDonor (- Vef Ec))) KbT)))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.024823660533951273,
    "avg_bits_err_output": 0.02610145958661833,
    "avg_bits_err_improve": -0.0012777990526670578,
    "time": 12276.426513671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18200977500432683,
    "avg_bits_err_output": 0.18200977500432683,
    "avg_bits_err_improve": 0,
    "time": 4045.298583984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18484082587449863,
    "avg_bits_err_output": 0.18484082587449863,
    "avg_bits_err_improve": 0,
    "time": 5635.784912109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18622876449628095,
    "avg_bits_err_output": 0.18622876449628095,
    "avg_bits_err_improve": 0,
    "time": 3763.36328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.036152592432723,
    "avg_bits_err_output": 13.036152592432723,
    "avg_bits_err_improve": 0,
    "time": 25080.16796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.89204784365195,
    "avg_bits_err_output": 0.064875,
    "avg_bits_err_improve": 40.82717284365195,
    "time": 7455.413818359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (+ -1.0 (- 1.0 (tan x))) x))",
    "output_parens": 7,
    "avg_bits_err_input": 31.55902957880205,
    "avg_bits_err_output": 30.779311459783866,
    "avg_bits_err_improve": 0.7797181190181846,
    "time": 27084.1123046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.250716627551554,
    "avg_bits_err_output": 33.250716627551554,
    "avg_bits_err_improve": 0,
    "time": 34194.45703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.11813922100866,
    "avg_bits_err_output": 34.11813922100866,
    "avg_bits_err_improve": 0,
    "time": 20699.384521484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (expm1 (- (+ (log (- 3.0 (cos x))) 1.0) 1.0)) -1.0) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 31.86615493825549,
    "avg_bits_err_output": 31.881249939628468,
    "avg_bits_err_improve": -0.015095001372976924,
    "time": 25554.076416015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.852489982194086,
    "avg_bits_err_output": 32.852489982194086,
    "avg_bits_err_improve": 0,
    "time": 41132.9248046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (- (+ (exp (- (log1p N) (log N))) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.80565365569737,
    "avg_bits_err_output": 29.830015788433915,
    "avg_bits_err_improve": -0.024362132736545306,
    "time": 35635.815673828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (+ (/ 1.0 (+ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.266997377295024,
    "avg_bits_err_output": 0.5327917493928125,
    "avg_bits_err_improve": 13.734205627902211,
    "time": 39967.232177734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (log1p (expm1 (cos (+ x eps)))) (log1p (expm1 (- (cos x)))))",
    "output_parens": 9,
    "avg_bits_err_input": 40.063134977209515,
    "avg_bits_err_output": 40.09725726937559,
    "avg_bits_err_improve": -0.03412229216607443,
    "time": 36715.372802734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (- (cbrt (+ x 1.0)) (+ 1.0 (cbrt x))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.287079827296214,
    "avg_bits_err_output": 29.98137038087552,
    "avg_bits_err_improve": 0.30570944642069264,
    "time": 23687.953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.820413235775288,
    "avg_bits_err_output": 29.827045281214694,
    "avg_bits_err_improve": -0.006632045439406653,
    "time": 102192.4521484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.497212251970524,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0047428209283779665,
    "time": 21865.970947265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (+ (* c (* a -8.0)) (* b b)) (* a (* c 4.0))))) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 33.777319510496454,
    "avg_bits_err_output": 33.82331698006471,
    "avg_bits_err_improve": -0.04599746956825612,
    "time": 21841.32958984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.249397783302264,
    "avg_bits_err_output": 59.92082833855831,
    "avg_bits_err_improve": 1.3285694447439553,
    "time": 16088.590576171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.0038189906172,
    "avg_bits_err_output": 0.09551041042822747,
    "avg_bits_err_improve": 62.90830858018897,
    "time": 29838.532958984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(+ (* (log (/ (- 1.0 eps) (+ 1.0 eps))) (* (+ 1.0 (log (* (/ (- 1.0 eps) (- eps -1.0)) (* (* (/ (- 1.0 eps) (- eps -1.0)) (/ 1.0 (/ (- 1.0 eps) (- eps -1.0)))) (* (/ (- 1.0 eps) (- eps -1.0)) (/ (/ (/ (- 1.0 eps) (- eps -1.0)) (/ (- 1.0 eps) (- eps -1.0))) (/ (- 1.0 eps) (- eps -1.0)))))))) (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))))) (- (* (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) 1.0))",
    "output_parens": 56,
    "avg_bits_err_input": 58.505118567529436,
    "avg_bits_err_output": 58.510779545161775,
    "avg_bits_err_improve": -0.005660977632338415,
    "time": 65843.78344726562,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (* (/ 1.0 (tan x)) (- (+ -1.0 (- (/ (+ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x))) (/ 1.0 (/ 1.0 (tan x))))))) (- (/ 1.0 x) (/ 1.0 (tan x))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.799133600510245,
    "avg_bits_err_output": 59.78140016025556,
    "avg_bits_err_improve": 0.017733440254687594,
    "time": 64137.6455078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.26191170306846,
    "avg_bits_err_output": 41.056960470197275,
    "avg_bits_err_improve": 19.20495123287119,
    "time": 30534.14111328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.198204675298605,
    "avg_bits_err_output": 0.49394408962556774,
    "avg_bits_err_improve": 40.70426058567304,
    "time": 12111.9970703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.61771282688367,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.61746282688367,
    "time": 2798.0810546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.76068083760891,
    "avg_bits_err_output": 0.014410952987381808,
    "avg_bits_err_improve": 29.746269884621526,
    "time": 3949.503173828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.009672811185897,
    "avg_bits_err_output": 28.97971940618109,
    "avg_bits_err_improve": 1.0299534050048074,
    "time": 25396.719970703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ 1.0 x)) (- (/ 2.0 x) (/ 1.0 (+ x -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 9.253645595574053,
    "avg_bits_err_output": 9.253584917220657,
    "avg_bits_err_improve": 6.067835339607086e-05,
    "time": 50332.474365234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.19322870327347,
    "avg_bits_err_output": 37.22207300170313,
    "avg_bits_err_improve": -0.028844298429660853,
    "time": 49361.177001953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (expm1 (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.267771417149046,
    "avg_bits_err_output": 29.581275798755215,
    "avg_bits_err_improve": 0.6864956183938311,
    "time": 28504.618896484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (expm1 (log1p (sin (+ x eps)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 37.32740431185747,
    "avg_bits_err_output": 37.3822770821801,
    "avg_bits_err_improve": -0.054872770322631936,
    "time": 41271.497802734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.91670907442092,
    "avg_bits_err_output": 19.91670907442092,
    "avg_bits_err_improve": 0,
    "time": 24232.78271484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0))))) (atan N))",
    "output_parens": 11,
    "avg_bits_err_input": 14.767982564178892,
    "avg_bits_err_output": 14.772563281811584,
    "avg_bits_err_improve": -0.004580717632691744,
    "time": 18544.27001953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.397892207208027,
    "avg_bits_err_output": 29.397892207208027,
    "avg_bits_err_improve": 0,
    "time": 64096.873046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07326204570071307,
    "avg_bits_err_output": 0.07167987882802454,
    "avg_bits_err_improve": 0.0015821668726885285,
    "time": 45735.929443359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* a b) (* a b) (* (fma (- a) b (* a b)) (* b (- a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.437323458131658,
    "avg_bits_err_output": 0.15775,
    "avg_bits_err_improve": 16.279573458131658,
    "time": 20261.133056640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* PI (/ (/ angle 180.0) PI)) PI))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.821060747476913,
    "avg_bits_err_output": 20.832314222177875,
    "avg_bits_err_improve": -0.011253474700961164,
    "time": 46688.142333984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.81752120710567,
    "avg_bits_err_output": 30.81752120710567,
    "avg_bits_err_improve": 0,
    "time": 68213.57958984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* (/ angle 180.0) (* PI PI))))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.12189732157665,
    "avg_bits_err_output": 20.121350253362802,
    "avg_bits_err_improve": 0.0005470682138479788,
    "time": 83316.97924804688,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17863684218813097,
    "avg_bits_err_output": 0.17853375534275098,
    "avg_bits_err_improve": 0.00010308684537999047,
    "time": 28014.511962890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3155272590284995,
    "avg_bits_err_output": 0.3158602412056423,
    "avg_bits_err_improve": -0.0003329821771428376,
    "time": 23413.355224609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13592403967784733,
    "avg_bits_err_output": 0.13592403967784733,
    "avg_bits_err_improve": 0,
    "time": 42400.87939453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.456186758291835,
    "avg_bits_err_output": 16.45197347502879,
    "avg_bits_err_improve": 0.004213283263045042,
    "time": 54297.14306640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.6e+14) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)) (/ (+ (+ (sqrt (fma b b (* a (* c -4.0)))) (- 1.0 b)) -1.0) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.120791713719925,
    "avg_bits_err_output": 50.17950308845613,
    "avg_bits_err_improve": 1.9412886252637946,
    "time": 25685.414794921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.605496859858842,
    "avg_bits_err_output": 28.544501576765995,
    "avg_bits_err_improve": 0.060995283092847075,
    "time": 45811.085693359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-22) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (sqrt (- (+ (exp (log1p (* b b))) (* a (* c -4.0))) 1.0)) b) (+ a a)))",
    "output_parens": 29,
    "avg_bits_err_input": 43.99124497118306,
    "avg_bits_err_output": 43.02968479989487,
    "avg_bits_err_improve": 0.961560171288184,
    "time": 23740.873779296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.50072855114043,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0012265217584683796,
    "time": 22610.871826171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8208514187129492,
    "avg_bits_err_output": 0.8147689649444515,
    "avg_bits_err_improve": 0.006082453768497698,
    "time": 34330.301025390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.025259517857783,
    "avg_bits_err_output": 29.027448111897566,
    "avg_bits_err_improve": -0.0021885940397829984,
    "time": 4472.492919921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.14127252826874,
    "avg_bits_err_output": 1.1058349625007213,
    "avg_bits_err_improve": 57.03543756576802,
    "time": 12998.219482421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.0175177741536,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 58.010892774153604,
    "time": 8370.36865234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.008563721875540865,
    "avg_bits_err_output": 0.129642816206339,
    "avg_bits_err_improve": -0.12107909433079814,
    "time": 2100.149658203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.345625,
    "avg_bits_err_output": 32.345625,
    "avg_bits_err_improve": 0,
    "time": 64389.995849609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.49709355993969,
    "avg_bits_err_output": 58.49709355993969,
    "avg_bits_err_improve": 0,
    "time": 72140.0771484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06044812031259014,
    "avg_bits_err_output": 0.06044812031259014,
    "avg_bits_err_improve": 0,
    "time": 3404.49755859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12719812031259015,
    "avg_bits_err_output": 0.12657312031259016,
    "avg_bits_err_improve": 0.0006249999999999867,
    "time": 37720.87109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12925,
    "avg_bits_err_output": 0.12925,
    "avg_bits_err_improve": 0,
    "time": 15487.21044921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.41878921237882,
    "avg_bits_err_output": 3.776400656937925,
    "avg_bits_err_improve": 34.642388555440895,
    "time": 52957.539794921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (+ (/ (- (* a a) (* b b)) (* a a)) 1.0) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.75590394101239,
    "avg_bits_err_output": 14.75763560760186,
    "avg_bits_err_improve": -0.0017316665894711036,
    "time": 9795.250732421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (expm1 (log1p (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.15402250659705077,
    "avg_bits_err_output": 0.1604305883377197,
    "avg_bits_err_improve": -0.006408081740668925,
    "time": 48986.5634765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-28) (/ (* (- (sqrt (+ (* b b) (* a (* c -3.0)))) b) (* (- (sqrt (+ (* b b) (* a (* c -3.0)))) b) (/ 1.0 (- (sqrt (+ (* b b) (* a (* c -3.0)))) b)))) (* 3.0 a)) (/ (fma (/ 1.0 (sqrt (log1p (expm1 (fma c (* a -3.0) (* b b)))))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)))",
    "output_parens": 54,
    "avg_bits_err_input": 52.16219721394157,
    "avg_bits_err_output": 50.41334362095283,
    "avg_bits_err_improve": 1.7488535929887377,
    "time": 36259.552978515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.741924115096033,
    "avg_bits_err_output": 28.68590496926921,
    "avg_bits_err_improve": 0.056019145826823546,
    "time": 25582.2412109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-22) (/ (+ (- b) (sqrt (+ (fma b b (* a (* c -3.0))) (fma -3.0 (* a c) (* a (* c 3.0)))))) (* 3.0 a)) (/ (+ (- b) (sqrt (+ (exp (log1p (fma b b (* a (* c -3.0))))) -1.0))) (* 3.0 a)))",
    "output_parens": 35,
    "avg_bits_err_input": 44.026525042560394,
    "avg_bits_err_output": 43.080218597245825,
    "avg_bits_err_improve": 0.9463064453145691,
    "time": 25829.8935546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.5403086642602,
    "avg_bits_err_output": 33.57824584775801,
    "avg_bits_err_improve": -0.03793718349781017,
    "time": 23163.037109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (log (exp (cos (- lambda1 lambda2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.392803135743739,
    "avg_bits_err_output": 13.403356764654118,
    "avg_bits_err_improve": -0.010553628910379587,
    "time": 61628.087158203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.25925549259497,
    "avg_bits_err_output": 29.25925549259497,
    "avg_bits_err_improve": 0,
    "time": 21037.03173828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (- (/ 1.0 (+ -1.0 x)) 1.0) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01645056406367188,
    "avg_bits_err_improve": -0.0052005640636718815,
    "time": 5353.758544921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.255973601060752,
    "avg_bits_err_output": 14.255973601060752,
    "avg_bits_err_improve": 0,
    "time": 72915.19604492188,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.337215148945475,
    "avg_bits_err_output": 52.026367441954605,
    "avg_bits_err_improve": 0.31084770699087017,
    "time": 37596.550048828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.861659304921883,
    "avg_bits_err_output": 29.861659304921883,
    "avg_bits_err_improve": 0,
    "time": 35152.084228515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F (- (* 2.0 (pow B 2.0)) (* C (* A 8.0)))) (* (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))) (+ C (fma (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ C A)) -1.0 (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))))) (- (pow B 2.0) (* 4.0 (* A C))))",
    "output_parens": 42,
    "avg_bits_err_input": 52.21040211276203,
    "avg_bits_err_output": 50.38783618456761,
    "avg_bits_err_improve": 1.8225659281944218,
    "time": 39469.88330078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.428865641902025,
    "avg_bits_err_output": 15.428865641902025,
    "avg_bits_err_improve": 0,
    "time": 1740.927001953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.81181306384064,
    "avg_bits_err_output": 35.81181306384064,
    "avg_bits_err_improve": 0,
    "time": 31563.82763671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9892646625064913,
    "avg_bits_err_output": 0.9892646625064913,
    "avg_bits_err_improve": 0,
    "time": 4489.865234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7293776763925557,
    "avg_bits_err_output": 0.7293776763925557,
    "avg_bits_err_improve": 0,
    "time": 7158.7900390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.259932373714525,
    "avg_bits_err_output": 11.259932373714525,
    "avg_bits_err_improve": 0,
    "time": 19958.2998046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5141795882180192,
    "avg_bits_err_output": 0.4405,
    "avg_bits_err_improve": 0.07367958821801923,
    "time": 12357.726806640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -20.0) (log (- (/ 1.0 (hypot 1.0 x)) (- (- (/ 1.0 (hypot 1.0 x)) x) (hypot 1.0 x)))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 53.072991959607606,
    "avg_bits_err_output": 10.719700680620104,
    "avg_bits_err_improve": 42.3532912789875,
    "time": 20318.085693359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.737987692005759,
    "avg_bits_err_output": 5.737987692005759,
    "avg_bits_err_improve": 0,
    "time": 28483.94921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ (- 1.0 x) (+ 1.0 x)) (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": -0.0010212406251802909,
    "time": 15440.83984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1214.447998046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 12.927482184284866,
    "avg_bits_err_output": 8.031702611556264,
    "avg_bits_err_improve": 4.8957795727286015,
    "time": 32362.215576171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) (+ x1 x1))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma x1 (* x1 3.0) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5116336805139391,
    "avg_bits_err_output": 0.290861118961678,
    "avg_bits_err_improve": 0.2207725615522611,
    "time": 69767.93310546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.88612866222424,
    "avg_bits_err_output": 17.88612866222424,
    "avg_bits_err_improve": 0,
    "time": 40347.1162109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.22938228322697118,
    "avg_bits_err_output": 0.22938228322697118,
    "avg_bits_err_improve": 0,
    "time": 16195.19873046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 1962.593017578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.76977070297973,
    "avg_bits_err_output": 9.808577470169261,
    "avg_bits_err_improve": 4.961193232810469,
    "time": 38803.349853515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (- (+ (exp (* x (- -1.0 eps))) (expm1 (log1p (exp (* x (+ -1.0 eps)))))) (- (* (- (exp (* x (+ -1.0 eps))) (exp (* x (- -1.0 eps)))) (/ 1.0 eps)))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.50826244526362,
    "avg_bits_err_output": 0.9500577083413241,
    "avg_bits_err_improve": 28.5582047369223,
    "time": 23146.321044921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.027875,
    "avg_bits_err_output": 0.027875,
    "avg_bits_err_improve": 0,
    "time": 10967.60693359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (- 1.0 (- (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0)) 1.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.03175,
    "avg_bits_err_output": 0.0305,
    "avg_bits_err_improve": 0.0012500000000000011,
    "time": 32970.944091796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.033625,
    "avg_bits_err_output": 0.03556372187554087,
    "avg_bits_err_improve": -0.0019387218755408664,
    "time": 17401.486572265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2973.548095703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3073.664306640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3366.413330078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.869208202763694,
    "avg_bits_err_output": 0.258875,
    "avg_bits_err_improve": 7.6103332027636945,
    "time": 67183.81030273438,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.704921750259623,
    "avg_bits_err_output": 7.704921750259623,
    "avg_bits_err_improve": 0,
    "time": 30701.26708984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (expm1 (log1p (pow (+ x eps) 2.0))) (pow x 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 16.39349772541454,
    "avg_bits_err_output": 16.421289622626432,
    "avg_bits_err_improve": -0.027791897211891126,
    "time": 42137.3046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (+ (expm1 (* 10.0 (* x x))) 1.0) (exp (log1p (cos x)))) (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (/ 1.0 (exp (* 10.0 (* x x)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 3.549624384460356,
    "avg_bits_err_output": 3.5545114920161027,
    "avg_bits_err_improve": -0.004887107555746617,
    "time": 23548.213623046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.440684010593156,
    "avg_bits_err_output": 15.440684010593156,
    "avg_bits_err_improve": 0,
    "time": 53084.523681640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.83574125539821,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.83574125539821,
    "time": 5711.467529296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.76474219334192,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 38.76349219334192,
    "time": 3877.21044921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.300125,
    "avg_bits_err_improve": 63.699875,
    "time": 4475.497802734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (- 0.0 (* -4e-32 (* t (/ (/ t t) (* t 4e-32))))) (* t (* t 4e-32)))",
    "output_parens": 9,
    "avg_bits_err_input": 61.843245613873904,
    "avg_bits_err_output": 0.40593872187554086,
    "avg_bits_err_improve": 61.43730689199836,
    "time": 22796.293212890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (+ (* c (* a -8.0)) (* b b)) (* a (* c 4.0))))) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 33.777319510496454,
    "avg_bits_err_output": 33.82331698006471,
    "avg_bits_err_improve": -0.04599746956825612,
    "time": 20340.27587890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.50072855114043,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0012265217584683796,
    "time": 24293.46337890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2221.509765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.21935763276731,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 40.209107632767314,
    "time": 4871.28662109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.589307546808183,
    "avg_bits_err_output": 20.589307546808183,
    "avg_bits_err_improve": 0,
    "time": 2956.802978515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6405157901204688,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6405157901204688,
    "time": 4958.628173828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.034625,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.034125,
    "time": 6002.843994140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.024188721875540872,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0.012688721875540872,
    "time": 4117.6494140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 3132.938232421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1845.02099609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ d c) (+ e (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39340601562950744,
    "avg_bits_err_output": 0.248,
    "avg_bits_err_improve": 0.14540601562950745,
    "time": 6708.57763671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.811700122557763,
    "avg_bits_err_output": 29.811700122557763,
    "avg_bits_err_improve": 0,
    "time": 87081.08984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (- (* x x) eps) (* (- (* x x) eps) (/ 1.0 (* (- (* x x) eps) (- (* x (* (/ 1.0 (- (* x x) eps)) x)) (* eps (/ 1.0 (- (* x x) eps))))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 24.456523389874434,
    "avg_bits_err_output": 24.617033122260118,
    "avg_bits_err_improve": -0.1605097323856839,
    "time": 20039.524169921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (- x (sin x)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.421632279398324,
    "avg_bits_err_output": 29.421632279398324,
    "avg_bits_err_improve": 0,
    "time": 70789.822265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005375,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.00475,
    "time": 4221.536376953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.941282953079444,
    "avg_bits_err_output": 47.941282953079444,
    "avg_bits_err_improve": 0,
    "time": 52816.232666015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.80754034068526,
    "avg_bits_err_output": 25.80754034068526,
    "avg_bits_err_improve": 0,
    "time": 44663.8671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.95044423935469,
    "avg_bits_err_output": 25.949194239354693,
    "avg_bits_err_improve": 0.0012499999999988631,
    "time": 22019.6171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- 1.0 (* (- (* ux maxCos) ux) (* (/ 1.0 (- (* ux maxCos) ux)) (- ux (* ux maxCos)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.035125,
    "avg_bits_err_output": 0.037383498667945,
    "avg_bits_err_improve": -0.0022584986679449956,
    "time": 17224.533203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (fma ux (+ maxCos -1.0) (- (* ux (+ maxCos (* ux (* (- 1.0 maxCos) (- 1.0 maxCos))))) ux)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.579489360709896,
    "avg_bits_err_output": 0.5277400984437983,
    "avg_bits_err_improve": 13.051749262266098,
    "time": 28009.951171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(fma (cos (* 2.0 (* uy PI))) (fma (cos (* uy (* PI 2.0))) (* (cos (* uy (* PI 2.0))) (/ (/ (sqrt (- ux (* ux (- (* maxCos (fma ux (+ maxCos -1.0) 2.0)) (- (fma ux maxCos 1.0) ux))))) (cos (* uy (* PI 2.0)))) (cos (* uy (* PI 2.0))))) 0.0) 0.0)",
    "output_parens": 29,
    "avg_bits_err_input": 13.63019050459329,
    "avg_bits_err_output": 0.34002720768586886,
    "avg_bits_err_improve": 13.290163296907421,
    "time": 37413.587890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (- (* (* 1.0 maxCos) ux) (* ux (* ux maxCos))) zi))",
    "output_parens": 36,
    "avg_bits_err_input": 0.33401348843591894,
    "avg_bits_err_output": 0.33264403770083883,
    "avg_bits_err_improve": 0.0013694507350801022,
    "time": 103629.40795898438,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19987260553560118,
    "avg_bits_err_output": 0.19987260553560118,
    "avg_bits_err_improve": 0,
    "time": 19580.966064453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5308800480580345,
    "avg_bits_err_output": 0.49919881874717176,
    "avg_bits_err_improve": 0.0316812293108627,
    "time": 85920.39331054688,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (log1p (expm1 (/ u1 (- 1.0 u1))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3397218907425026,
    "avg_bits_err_output": 0.37239877043024855,
    "avg_bits_err_improve": -0.03267687968774596,
    "time": 34930.836181640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (expm1 (log1p (exp (/ PI s)))))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.3406485254221038,
    "avg_bits_err_output": 0.3431396827231834,
    "avg_bits_err_improve": -0.0024911573010796273,
    "time": 36975.018310546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (exp (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05871110042782082,
    "avg_bits_err_output": 0.06816593864754583,
    "avg_bits_err_improve": -0.00945483821972501,
    "time": 14945.369140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16424616026081912,
    "avg_bits_err_output": 0.1392197534961767,
    "avg_bits_err_improve": 0.025026406764642406,
    "time": 35164.397705078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6632781777917213,
    "avg_bits_err_output": 0.6632781777917213,
    "avg_bits_err_improve": 0,
    "time": 22358.81884765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1462528737561116,
    "avg_bits_err_output": 0.14301424957475212,
    "avg_bits_err_improve": 0.0032386241813594785,
    "time": 16409.995849609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.2895482299233305,
    "avg_bits_err_output": 2.286068667264866,
    "avg_bits_err_improve": 0.003479562658464719,
    "time": 87405.3232421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ 2.0 (+ (/ (* sinTheta_i sinTheta_O) v) -2.0)))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46097934380132244,
    "avg_bits_err_output": 0.46234290863835564,
    "avg_bits_err_improve": -0.0013635648370332043,
    "time": 49426.86962890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10302601290249022,
    "avg_bits_err_output": 0.10302601290249022,
    "avg_bits_err_improve": 0,
    "time": 46688.19677734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (fma (log (* alpha alpha)) (* PI (* (log (* alpha alpha)) (/ (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (log (* alpha alpha))))) 0.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4681064950266719,
    "avg_bits_err_output": 0.5176102058568357,
    "avg_bits_err_improve": -0.049503710830163805,
    "time": 24264.871337890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (* 3.0 (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))))))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3060568408883189,
    "avg_bits_err_output": 1.3099749529657279,
    "avg_bits_err_improve": -0.003918112077408997,
    "time": 36668.05322265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(fma (fma s (* (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0) (/ (/ s s) s)) 0.0) s 0.0)",
    "output_parens": 11,
    "avg_bits_err_input": 12.538021244643698,
    "avg_bits_err_output": 12.637486148063235,
    "avg_bits_err_improve": -0.09946490341953762,
    "time": 38362.173828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* s (* (- 0.0 (* r (* (- PI) 6.0))) (* s (/ (/ s s) s))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.14880376278430135,
    "avg_bits_err_output": 0.15148768224770637,
    "avg_bits_err_improve": -0.0026839194634050156,
    "time": 34181.929931640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8751437394991366,
    "avg_bits_err_output": 0.8641663067559616,
    "avg_bits_err_improve": 0.010977432743174975,
    "time": 49785.236083984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ 1.0 (fma (/ 1.0 (sqrt PI)) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (exp (* cosTheta (- cosTheta)))) c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7016228866725667,
    "avg_bits_err_output": 0.6989978866725667,
    "avg_bits_err_improve": 0.0026249999999999885,
    "time": 60886.593994140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* PI (+ u2 u2))) (fma (sin (* PI (+ u2 u2))) (/ (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (sin (* PI (+ u2 u2)))) -1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 13.571038820056883,
    "avg_bits_err_output": 13.395384096023475,
    "avg_bits_err_improve": 0.1756547240334072,
    "time": 36304.507080078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(+ (fma (cos (* 2.0 (* PI u2))) (sqrt (- (log (- 1.0 u1)))) 1.0) -1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 13.618980245072857,
    "avg_bits_err_output": 13.66475501388581,
    "avg_bits_err_improve": -0.045774768812952615,
    "time": 52797.895263671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (+ 1.0 (/ (log (- 1.0 u0)) alpha)) (* (- alpha) (* alpha alpha)) (- (fma (* alpha alpha) (- 1.0 alpha) (* alpha (- alpha)))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.342785358530046,
    "avg_bits_err_output": 14.13276533090512,
    "avg_bits_err_improve": 0.21002002762492644,
    "time": 50975.798095703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.85168414432041,
    "avg_bits_err_output": 12.85168414432041,
    "avg_bits_err_improve": 0,
    "time": 18494.22607421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1e+157) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ l PI) (* PI PI))))) (if (<= (* PI l) -2e+23) (- (* PI l) (* (/ 1.0 (* F F)) (tan (- (* (* l l) (exp (log1p (/ PI l)))) (* l l))))) (if (<= (* PI l) 2e-8) (- (* PI l) (* (/ 1.0 (* F F)) (log1p (expm1 (tan (* PI l)))))) (if (<= (* PI l) 5e+142) (- (* PI l) (* (/ 1.0 (* F F)) (tan (- (* (* l l) (exp (log1p (/ PI l)))) (* l l))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))))))",
    "output_parens": 63,
    "avg_bits_err_input": 16.58024427079044,
    "avg_bits_err_output": 14.135892029838645,
    "avg_bits_err_improve": 2.4443522409517957,
    "time": 44245.850341796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20717164837040855,
    "avg_bits_err_output": 0.20391241358116216,
    "avg_bits_err_improve": 0.00325923478924639,
    "time": 33777.798583984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.041987773608499,
    "avg_bits_err_output": 14.030860533369996,
    "avg_bits_err_improve": 0.011127240238502978,
    "time": 44163.68017578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.52293558095672,
    "avg_bits_err_output": 2.194514357267732,
    "avg_bits_err_improve": 59.328421223688984,
    "time": 76254.53100585938,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= (* l l) 2e+288) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (+ (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x))))) (fma (- (/ (+ 1.0 x) (+ -1.0 x))) (* l (- l)) (* (/ (+ 1.0 x) (+ -1.0 x)) (* l (- l)))))))) (- (exp (log1p (/ (* t (sqrt 2.0)) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))))) 1.0))",
    "output_parens": 51,
    "avg_bits_err_input": 42.9698256132607,
    "avg_bits_err_output": 36.218265070784305,
    "avg_bits_err_improve": 6.751560542476398,
    "time": 32860.9248046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.155389877793806,
    "avg_bits_err_output": 4.155389877793806,
    "avg_bits_err_improve": 0,
    "time": 52710.448974609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (- (* (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0022106035144864,
    "avg_bits_err_output": 1.0039606035144866,
    "avg_bits_err_improve": -0.0017500000000001403,
    "time": 12503.4033203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.401775337236556,
    "avg_bits_err_output": 10.401775337236556,
    "avg_bits_err_improve": 0,
    "time": 202475.27783203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -1e-20) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U 5e-246) (sqrt (* 2.0 (* n (- (* n (* (pow (/ l Om) 2.0) (* (- U* U) U))) (* U (- (* 2.0 (/ (* l l) Om)) t)))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 34.784326591242504,
    "avg_bits_err_output": 33.5579880778121,
    "avg_bits_err_improve": 1.226338513430406,
    "time": 28699.9697265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 2e+242) (/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (* (sin k) (+ (/ (pow t 3.0) (* l l)) 1.0)) (* (tan k) (- (sin k)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 47.17592741129102,
    "avg_bits_err_output": 37.19868911901876,
    "avg_bits_err_improve": 9.977238292272261,
    "time": 62599.060546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+212) (/ 2.0 (* (tan k) (* (/ (pow t 3.0) (* l l)) (* (sin k) (+ 2.0 (pow (/ k t) 2.0)))))) (/ 2.0 (* (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))))) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))))",
    "output_parens": 46,
    "avg_bits_err_input": 32.06283414055706,
    "avg_bits_err_output": 30.188597675407475,
    "avg_bits_err_improve": 1.8742364651495826,
    "time": 49915.873291015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (/ (cos th) (sqrt 2.0)) a1) (* a1 a1)) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5179001906453743,
    "avg_bits_err_output": 0.5482456812849793,
    "avg_bits_err_improve": -0.03034549063960501,
    "time": 47707.31689453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (+ (* n (fma 2.0 PI -1.0)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5012922630313916,
    "avg_bits_err_output": 0.5065200157086682,
    "avg_bits_err_improve": -0.005227752677276598,
    "time": 36496.708251953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* (cos (/ K 2.0)) (- (expm1 l) (expm1 (- l)))) J) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.579718509402472,
    "avg_bits_err_output": 0.07306372187554086,
    "avg_bits_err_improve": 17.50665478752693,
    "time": 39796.960693359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -1.3e+233) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K -1e+45) (* (cos (- (/ (- (* (+ m (+ n 1.0)) (* (+ m n) (* (* (+ m n) (/ (/ (/ K (+ m n)) (+ m n)) (+ m n))) (- (+ m n) 0.0)))) (* (+ m n) (/ K (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 5.5e+168) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 5.4e+242) (* (cos (- (/ (- (* (+ m (+ n 1.0)) (* (+ m n) (* (* (+ m n) (/ (/ (/ K (+ m n)) (+ m n)) (+ m n))) (- (+ m n) 0.0)))) (* (+ m n) (/ K (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ n (+ 1.0 m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))))",
    "output_parens": 133,
    "avg_bits_err_input": 14.906355391942377,
    "avg_bits_err_output": 7.921400220069767,
    "avg_bits_err_improve": 6.98495517187261,
    "time": 29799.7236328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.52152124062518,
    "avg_bits_err_output": 17.52152124062518,
    "avg_bits_err_improve": 0,
    "time": 37754.45458984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.68144798762942,
    "avg_bits_err_output": 14.68144798762942,
    "avg_bits_err_improve": 0,
    "time": 8984.2490234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.267624367244505,
    "avg_bits_err_output": 19.267624367244505,
    "avg_bits_err_improve": 0,
    "time": 25231.22705078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* d d) 0.0) (* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* h w)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* h w)))) (/ (* d (* d c0)) (* D (* D (* h w))))) (* M M))))) (if (<= (* d d) 5e+260) (/ (* (+ (/ (* c0 (* d d)) (* (* D h) (* w D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* D h) (* w D))) (/ (* c0 (* d d)) (* (* D h) (* w D)))) (* M M)))) (/ c0 (+ w w))) 1.0) (* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* h w)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* h w)))) (/ (* d (* d c0)) (* D (* D (* h w))))) (* M M)))))))",
    "output_parens": 85,
    "avg_bits_err_input": 59.816706543722134,
    "avg_bits_err_output": 56.41431215165855,
    "avg_bits_err_improve": 3.4023943920635844,
    "time": 35588.775634765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (* (pow (/ (* M D) (+ d d)) 2.0) (pow (/ d l) 0.5)) (* (* 0.5 (/ h l)) (pow (/ d h) 0.5))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.594621883612902,
    "avg_bits_err_output": 25.837435158071717,
    "avg_bits_err_improve": 0.7571867255411853,
    "time": 55085.958740234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.363753683668655,
    "avg_bits_err_output": 15.363753683668655,
    "avg_bits_err_improve": 0,
    "time": 12269.749755859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (sqrt (- 2.0 (* v (* v 6.0)))) 3.0) (fma PI (- (* v v)) PI)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9814481203125902,
    "avg_bits_err_output": 0.012783082813311301,
    "avg_bits_err_improve": 0.9686650374992789,
    "time": 13084.002197265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4544076372987831,
    "avg_bits_err_output": 0.38951386011588723,
    "avg_bits_err_improve": 0.06489377718289585,
    "time": 20589.5732421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012719360937770435,
    "avg_bits_err_output": 0.01139624062518029,
    "avg_bits_err_improve": 0.0013231203125901453,
    "time": 15851.1298828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5944290227989761,
    "avg_bits_err_output": 0.5944290227989761,
    "avg_bits_err_improve": 0,
    "time": 8205.897216796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9715034027665266,
    "avg_bits_err_output": 1.9697321621413462,
    "avg_bits_err_improve": 0.0017712406251804147,
    "time": 15781.611328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.015878218412193564,
    "avg_bits_err_output": 0.015878218412193564,
    "avg_bits_err_improve": 0,
    "time": 6757.49169921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18413233125324513,
    "avg_bits_err_output": 0.18341297031547465,
    "avg_bits_err_improve": 0.0007193609377704746,
    "time": 48749.55810546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (* 4.0 (+ (* b (- b (* b (* a 3.0)))) (* a (* a (+ 1.0 a))))) (- (pow (fma b b (* a a)) 2.0) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 0.19084249726654834,
    "avg_bits_err_output": 0.19282125664136804,
    "avg_bits_err_improve": -0.0019787593748196997,
    "time": 62275.879150390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(fma a (* 4.0 (- a (* a a))) (fma (+ a 3.0) (* b (* b 4.0)) (+ -1.0 (pow (fma a a (* b b)) 2.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.19892162183657477,
    "avg_bits_err_output": 0.19918372627603737,
    "avg_bits_err_improve": -0.00026210443946259043,
    "time": 32942.97265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (+ 0.5 (* 0.5 (/ x (sqrt (fma x x (* 4.0 (* p p))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 13.28311631048599,
    "avg_bits_err_output": 13.283774072572022,
    "avg_bits_err_improve": -0.0006577620860319655,
    "time": 28085.784912109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(* (/ 1.0 (sqrt (/ (expm1 (+ x x)) (expm1 x)))) (* (sqrt (/ (expm1 (+ x x)) (expm1 x))) (sqrt (/ (expm1 (+ x x)) (expm1 x)))))",
    "output_parens": 18,
    "avg_bits_err_input": 41.871881448441904,
    "avg_bits_err_output": 0.05408496250072115,
    "avg_bits_err_improve": 41.81779648594118,
    "time": 9253.113525390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (+ 1.0 (- x 1.0)) (sin x)) (+ x (+ (- 2.0 (tan x)) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.219757239076408,
    "avg_bits_err_output": 25.68283912584952,
    "avg_bits_err_improve": 5.536918113226889,
    "time": 64111.629150390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.3946016815262,
    "avg_bits_err_output": 33.3946016815262,
    "avg_bits_err_improve": 0,
    "time": 15831.23583984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.82572493381178,
    "avg_bits_err_output": 33.82572493381178,
    "avg_bits_err_improve": 0,
    "time": 24445.4404296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.760817682830556,
    "avg_bits_err_output": 31.760817682830556,
    "avg_bits_err_improve": 0,
    "time": 27476.519287109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(fma (pow (+ x 1.0) (/ 1.0 n)) (pow (+ x 1.0) (/ 1.0 n)) (- (fma (pow x (/ 1.0 n)) -1.0 (pow (+ x 1.0) (/ 1.0 n))) (* (pow (+ x 1.0) (/ 1.0 n)) (pow (+ x 1.0) (/ 1.0 n)))))",
    "output_parens": 21,
    "avg_bits_err_input": 32.572839008559924,
    "avg_bits_err_output": 32.60674904048308,
    "avg_bits_err_improve": -0.033910031923156225,
    "time": 42502.0361328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (fma (- (* (/ 1.0 (log N)) (- (+ (log N) 2.0) 2.0))) (log N) (log N)) (- (log1p N) (log N)))",
    "output_parens": 14,
    "avg_bits_err_input": 29.759153922008,
    "avg_bits_err_output": 29.82232083643818,
    "avg_bits_err_improve": -0.0631669144301803,
    "time": 27958.828857421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.891865061230554,
    "avg_bits_err_output": 14.891865061230554,
    "avg_bits_err_improve": 0,
    "time": 86355.95263671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (cos (+ x eps)) (* (/ -1.0 (cos x)) (+ (+ -1.0 (cos x)) (+ 1.0 (* (cos x) (+ -1.0 (cos x)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 39.967193054080916,
    "avg_bits_err_output": 40.00150039797106,
    "avg_bits_err_improve": -0.03430734389014134,
    "time": 37817.31103515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 30.00037727883092,
    "avg_bits_err_output": 29.691314382687835,
    "avg_bits_err_improve": 0.3090628961430859,
    "time": 50476.311767578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.610853563576264,
    "avg_bits_err_output": 29.610853563576264,
    "avg_bits_err_improve": 0,
    "time": 88541.2021484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.953378994917635,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": -0.012162980866513351,
    "time": 19656.867919921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.98620127500834,
    "avg_bits_err_output": 33.98253561504416,
    "avg_bits_err_improve": 0.003665659964177337,
    "time": 18843.804443359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log (- 1.0 x)) (+ (* (log1p x) (* (+ 1.0 (log1p x)) (/ 1.0 (+ 1.0 (log1p x))))) (- (* (+ 1.0 (log1p x)) (/ 1.0 (+ 1.0 (log1p x)))) 1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 61.454338070962,
    "avg_bits_err_output": 60.15031779276882,
    "avg_bits_err_improve": 1.3040202781931853,
    "time": 46821.9208984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00612660175783,
    "avg_bits_err_output": 0.10068121156597389,
    "avg_bits_err_improve": 62.90544539019185,
    "time": 28940.5849609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.77575192202896,
    "avg_bits_err_output": 58.79238272519365,
    "avg_bits_err_improve": -0.01663080316468779,
    "time": 189457.1845703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.955196340111364,
    "avg_bits_err_output": 59.955340198415854,
    "avg_bits_err_improve": -0.00014385830449015202,
    "time": 54273.900390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.40087358858221,
    "avg_bits_err_output": 41.18963506058511,
    "avg_bits_err_improve": 19.211238527997097,
    "time": 25042.89306640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (/ 1.0 (expm1 x)) (* (expm1 x) (/ 1.0 (expm1 x))))",
    "output_parens": 7,
    "avg_bits_err_input": 42.19630522812508,
    "avg_bits_err_output": 0.5135156318358061,
    "avg_bits_err_improve": 41.68278959628927,
    "time": 10890.8115234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.820127470369236,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.819252470369236,
    "time": 3667.708251953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.66894960581914,
    "avg_bits_err_output": 0.018188651651654526,
    "avg_bits_err_improve": 29.650760954167485,
    "time": 4214.3251953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.426038065991328,
    "avg_bits_err_output": 29.41684362617497,
    "avg_bits_err_improve": 1.0091944398163584,
    "time": 39068.62548828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.026637176608501,
    "avg_bits_err_output": 10.026637176608501,
    "avg_bits_err_improve": 0,
    "time": 63075.452880859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.16310756923978,
    "avg_bits_err_output": 37.16310756923978,
    "avg_bits_err_improve": 0,
    "time": 56973.1611328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (log (exp (expm1 (- (+ -1.0 (sqrt (+ x 1.0))) (sqrt x)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 30.11088690925882,
    "avg_bits_err_output": 29.4425408971809,
    "avg_bits_err_improve": 0.6683460120779188,
    "time": 38486.863525390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (- (sin x)) (- 1.0 (- (- 1.0 (sin x)) (* (- (sin x)) (+ 1.0 (/ 1.0 (- (sin x))))))) (sin (+ x eps)))",
    "output_parens": 16,
    "avg_bits_err_input": 37.574983091242494,
    "avg_bits_err_output": 37.622196583638384,
    "avg_bits_err_improve": -0.047213492395890455,
    "time": 36576.36181640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.36414428848915,
    "avg_bits_err_output": 19.36414428848915,
    "avg_bits_err_improve": 0,
    "time": 27514.742431640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (atan (+ 1.0 N)) (fma (* (atan (+ 1.0 N)) (atan (+ 1.0 N))) (/ 1.0 (* (atan (+ 1.0 N)) (atan (+ 1.0 N)))) 0.0) (- (atan N)))",
    "output_parens": 17,
    "avg_bits_err_input": 14.865302624446377,
    "avg_bits_err_output": 14.865680123156823,
    "avg_bits_err_improve": -0.0003774987104456784,
    "time": 18872.42138671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.399025438664076,
    "avg_bits_err_output": 29.399025438664076,
    "avg_bits_err_improve": 0,
    "time": 28544.35009765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07928328632589335,
    "avg_bits_err_output": 0.07928328632589335,
    "avg_bits_err_improve": 0,
    "time": 33470.661865234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.35089717574628,
    "avg_bits_err_output": 0.3145334593805891,
    "avg_bits_err_improve": 16.036363716365692,
    "time": 16906.837890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ (/ angle 180.0) PI) PI) (expm1 (log1p (* PI (* PI PI))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.189043207596974,
    "avg_bits_err_output": 20.22317212806807,
    "avg_bits_err_improve": -0.0341289204710975,
    "time": 58282.147705078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (- (pow b 2.0) (pow a 2.0)) (* (/ (sin (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))) (* (cos (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 31.20189951601392,
    "avg_bits_err_output": 31.18932938349666,
    "avg_bits_err_improve": 0.012570132517261356,
    "time": 52313.114501953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 19.956372670681894,
    "avg_bits_err_output": 19.960443054086905,
    "avg_bits_err_improve": -0.004070383405011313,
    "time": 87843.15942382812,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (+ (/ (- m (* m m)) v) -1.0) (+ (- (/ m (+ (/ (- m (* m m)) v) -1.0))) (* (/ (- m (* m m)) v) (/ m (+ (/ (- m (* m m)) v) -1.0)))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.17507928248159613,
    "avg_bits_err_output": 0.20048555786236757,
    "avg_bits_err_improve": -0.025406275380771448,
    "time": 30877.821044921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3109950042093892,
    "avg_bits_err_output": 0.3078494231235754,
    "avg_bits_err_improve": 0.003145581085813809,
    "time": 21522.052978515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1321887218755409,
    "avg_bits_err_output": 0.1321887218755409,
    "avg_bits_err_improve": 0,
    "time": 34081.43017578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos phi1) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.180040983176863,
    "avg_bits_err_output": 17.173250664532244,
    "avg_bits_err_improve": 0.006790318644618765,
    "time": 53505.80517578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 2.8e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (+ (* b b) (* a (* c -4.0))))) (- b)) (+ a a)) (/ (- (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b)) 1.0) (* a 2.0)))",
    "output_parens": 30,
    "avg_bits_err_input": 52.74936595178498,
    "avg_bits_err_output": 50.6893030954282,
    "avg_bits_err_improve": 2.0600628563567795,
    "time": 22568.523193359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma b b (* a (* c -4.0))) (fma (- a) (* 4.0 c) (* 4.0 (* a c)))))) (* a 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 28.589142920712227,
    "avg_bits_err_output": 28.536206282201274,
    "avg_bits_err_improve": 0.052936638510953316,
    "time": 21541.508056640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-17) (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a)) (/ (+ (fma (- (sqrt (fma b b (* a (* c -4.0))))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* (sqrt (fma b b (* a (* c -4.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (+ a a)))",
    "output_parens": 47,
    "avg_bits_err_input": 44.01897761971098,
    "avg_bits_err_output": 42.171286706751424,
    "avg_bits_err_improve": 1.847690912959557,
    "time": 26263.302001953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96554197578415,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": 0,
    "time": 21625.354736328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (log1p (- (+ (expm1 (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1))) -1.0) -1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8053622766329612,
    "avg_bits_err_output": 0.8237262317878125,
    "avg_bits_err_improve": -0.01836395515485123,
    "time": 34209.0830078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (- (expm1 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) -1.0)) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 28.53750820755532,
    "avg_bits_err_output": 28.539464921667765,
    "avg_bits_err_improve": -0.001956714112445468,
    "time": 9489.341064453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.14652874571676,
    "avg_bits_err_output": 1.2884293234384918,
    "avg_bits_err_improve": 56.858099422278265,
    "time": 11868.3046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.07901046630942,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 58.07113546630942,
    "time": 6627.71923828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009823120312590146,
    "avg_bits_err_output": 0.009823120312590146,
    "avg_bits_err_improve": 0,
    "time": 2894.350341796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.753875,
    "avg_bits_err_output": 31.753875,
    "avg_bits_err_improve": 0,
    "time": 5961.23291015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.76182474844535,
    "avg_bits_err_output": 58.76182474844535,
    "avg_bits_err_improve": 0,
    "time": 123193.87255859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.03475,
    "avg_bits_err_output": 0.03475,
    "avg_bits_err_improve": 0,
    "time": 4453.13525390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12694812031259015,
    "avg_bits_err_output": 0.12694812031259015,
    "avg_bits_err_improve": 0,
    "time": 40820.152587890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (cos t) (* ew (cos (atan (/ (- (* eh (tan t))) ew))))) (* eh (* (sin (atan (/ (* (- eh) (tan t)) ew))) (sin t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.126,
    "avg_bits_err_output": 0.1245,
    "avg_bits_err_improve": 0.0015000000000000013,
    "time": 29870.875732421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.209571044582276,
    "avg_bits_err_output": 3.913578454997839,
    "avg_bits_err_improve": 35.295992589584436,
    "time": 46980.810302734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.451062335672834,
    "avg_bits_err_output": 14.452331340551108,
    "avg_bits_err_improve": -0.0012690048782744157,
    "time": 6571.787841796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15682207471488516,
    "avg_bits_err_output": 0.15260023034313613,
    "avg_bits_err_improve": 0.004221844371749023,
    "time": 53471.42431640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 8.2e+15) (/ (fma (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (fma (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (/ (/ 1.0 (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) 0.0)) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (- (+ (sqrt (fma c (* a -3.0) (* b b))) (- 1.0 b)) 1.0) (* 3.0 a)))",
    "output_parens": 54,
    "avg_bits_err_input": 52.787022170868994,
    "avg_bits_err_output": 50.706590716480655,
    "avg_bits_err_improve": 2.0804314543883393,
    "time": 33566.731689453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.74547855708578,
    "avg_bits_err_output": 28.708010395782814,
    "avg_bits_err_improve": 0.037468161302964376,
    "time": 27918.29541015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -5e-21) (/ (- (sqrt (fma a (* c -3.0) (* b b))) b) (* a 3.0)) (/ (- (sqrt (* (fma c (* a -3.0) (* b b)) (* (fma c (* a -3.0) (* b b)) (- (exp (log1p (/ 1.0 (fma a (* c -3.0) (* b b))))) 1.0)))) b) (* a 3.0)))",
    "output_parens": 37,
    "avg_bits_err_input": 44.08677076960128,
    "avg_bits_err_output": 42.70127162172564,
    "avg_bits_err_improve": 1.3854991478756418,
    "time": 29754.91259765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.00292884734385,
    "avg_bits_err_output": 34.00292884734385,
    "avg_bits_err_improve": 0,
    "time": 22590.5869140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (fma (* (* (sin phi1) (cos phi2)) (/ (cos (- lambda1 lambda2)) (* (sin phi1) (cos phi2)))) (* (sin phi1) (cos phi2)) 0.0)))",
    "output_parens": 23,
    "avg_bits_err_input": 13.311878993256501,
    "avg_bits_err_output": 13.328544548870935,
    "avg_bits_err_improve": -0.01666555561443417,
    "time": 41502.871337890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (- (/ x (+ x 1.0)) (/ (+ x 1.0) (+ x -1.0))) (fma (- (* (/ (+ x 1.0) (+ x -1.0)) (* (/ (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (* (/ (+ x 1.0) (+ x -1.0)) (/ (+ x 1.0) (+ x -1.0)))) (/ (+ x 1.0) (+ x -1.0))))) (* (/ (+ x 1.0) (+ x -1.0)) (/ (+ x 1.0) (+ x -1.0))) (/ (+ x 1.0) (+ x -1.0))))",
    "output_parens": 39,
    "avg_bits_err_input": 29.710162012746203,
    "avg_bits_err_output": 29.722281174844376,
    "avg_bits_err_improve": -0.01211916209817332,
    "time": 32779.884521484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009375,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 0,
    "time": 7461.419677734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (fma (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x))) (- (/ 1.0 (+ x -1.0)))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.884995437822148,
    "avg_bits_err_output": 12.939720264509242,
    "avg_bits_err_improve": 1.945275173312906,
    "time": 66560.05541992188,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma A (* (- (* A (* C 4.0)) (pow B 2.0)) (* F -2.0)) (* (* (- (* A (* C 4.0)) (pow B 2.0)) (* F -2.0)) (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 52.0230816104221,
    "avg_bits_err_output": 51.7072233428436,
    "avg_bits_err_improve": 0.31585826757850555,
    "time": 37061.682373046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.12373037427018,
    "avg_bits_err_output": 29.12373037427018,
    "avg_bits_err_improve": 0,
    "time": 31895.906494140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F (- (* 2.0 (pow B 2.0)) (* A (* 8.0 C))))))) (- (pow B 2.0) (* 4.0 (* A C))))",
    "output_parens": 21,
    "avg_bits_err_input": 51.50106194647084,
    "avg_bits_err_output": 51.20668141102212,
    "avg_bits_err_improve": 0.2943805354487239,
    "time": 39356.158203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.469744216549094,
    "avg_bits_err_output": 15.469744216549094,
    "avg_bits_err_improve": 0,
    "time": 2178.044921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (+ (* h (- g h)) (* g (- g h))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 35.493450781234436,
    "avg_bits_err_output": 35.49833999994005,
    "avg_bits_err_improve": -0.004889218705613985,
    "time": 21443.88427734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9897246250072126,
    "avg_bits_err_output": 0.9897246250072126,
    "avg_bits_err_improve": 0,
    "time": 7360.7451171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7338443609377705,
    "avg_bits_err_output": 0.7338443609377705,
    "avg_bits_err_improve": 0,
    "time": 2377.53857421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.946943699076499,
    "avg_bits_err_output": 10.946943699076499,
    "avg_bits_err_improve": 0,
    "time": 17052.911865234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.45766730763229724,
    "avg_bits_err_output": 0.416375,
    "avg_bits_err_improve": 0.04129230763229724,
    "time": 12038.974365234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.15309295628262,
    "avg_bits_err_output": 15.56753330874165,
    "avg_bits_err_improve": 37.58555964754097,
    "time": 25355.009033203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (- (+ (log b) -1.0) (- -1.0 (log a))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.671864244806499,
    "avg_bits_err_output": 5.672182067212603,
    "avg_bits_err_improve": -0.0003178224061040069,
    "time": 25119.04931640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01525,
    "avg_bits_err_output": 0.01525,
    "avg_bits_err_improve": 0,
    "time": 3508.6044921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1195.525146484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+154) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 2e-76) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* w (* r r)))) (- 1.0 v)))) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* w (* w r)) r)) (- 1.0 v))) 4.5)))",
    "output_parens": 42,
    "avg_bits_err_input": 12.854716806468947,
    "avg_bits_err_output": 7.015555627272796,
    "avg_bits_err_improve": 5.83916117919615,
    "time": 28876.87451171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (- (* x1 x1)) (+ (+ (* (* x1 x1) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 4.0)) (* x1 (* -6.0 x1))) (+ (* x1 x1) (* (+ (/ (+ x2 (- (fma 3.0 (* x1 x1) x2) x1)) (fma x1 x1 1.0)) -3.0) (* (+ x1 x1) (/ (+ x2 (- (fma 3.0 (* x1 x1) x2) x1)) (fma x1 x1 1.0))))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 57,
    "avg_bits_err_input": 0.5202355044794914,
    "avg_bits_err_output": 0.27669690435720024,
    "avg_bits_err_improve": 0.24353860012229117,
    "time": 65583.36962890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.55169286973226,
    "avg_bits_err_output": 18.55169286973226,
    "avg_bits_err_improve": 0,
    "time": 8586.77099609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* (- x) (fma (* x x) 0.12900613773279798 -0.954929658551372))",
    "output_parens": 4,
    "avg_bits_err_input": 0.23429268476294263,
    "avg_bits_err_output": 0.19081372187554085,
    "avg_bits_err_improve": 0.04347896288740177,
    "time": 19981.737548828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00325,
    "avg_bits_err_output": 0.00325,
    "avg_bits_err_improve": 0,
    "time": 14697.706787109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (* (/ PI 2.0) (/ 1.0 (* (- b a) (+ b a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.10479569368505,
    "avg_bits_err_output": 9.087878212434633,
    "avg_bits_err_improve": 5.016917481250417,
    "time": 44509.709228515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (expm1 (log1p (exp (* x (- -1.0 eps))))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.01462423991279,
    "avg_bits_err_output": 1.0572498300335287,
    "avg_bits_err_improve": 27.957374409879264,
    "time": 33487.185302734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.02,
    "avg_bits_err_output": 0.02,
    "avg_bits_err_improve": 0,
    "time": 10478.30517578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(- (/ (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -5.0) (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)) 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.0245,
    "avg_bits_err_output": 0.02391748125036058,
    "avg_bits_err_improve": 0.0005825187496394206,
    "time": 41279.75146484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- 1.0 (+ (- 2.0 (* (/ (+ t t) (+ 1.0 t)) (/ (+ t t) (+ 1.0 t)))) -1.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.022375,
    "avg_bits_err_output": 0.020875,
    "avg_bits_err_improve": 0.0014999999999999979,
    "time": 23354.89990234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2959.618408203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3589.695068359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3883.048828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.807484438451687,
    "avg_bits_err_output": 0.24925,
    "avg_bits_err_improve": 7.558234438451687,
    "time": 53943.39306640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(+ (pow (+ x eps) 5.0) (expm1 (log1p (- (pow x 5.0)))))",
    "output_parens": 7,
    "avg_bits_err_input": 7.429971816061293,
    "avg_bits_err_output": 7.51110214217747,
    "avg_bits_err_improve": -0.08113032611617665,
    "time": 34299.823486328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.15167030008723,
    "avg_bits_err_output": 16.15167030008723,
    "avg_bits_err_improve": 0,
    "time": 43734.669189453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (log (+ 1.0 (expm1 (expm1 (cos x)))))) (exp (* 10.0 (* x x))))",
    "output_parens": 10,
    "avg_bits_err_input": 3.509632368915222,
    "avg_bits_err_output": 3.5135892703836693,
    "avg_bits_err_improve": -0.003956901468447516,
    "time": 25008.591064453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.04050213454488,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.04050213454488,
    "time": 4139.667236328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.0585255882019,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.0580255882019,
    "time": 5935.178955078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.301625,
    "avg_bits_err_improve": 63.698375,
    "time": 3711.2451171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.84325366599201,
    "avg_bits_err_output": 0.35329398751947144,
    "avg_bits_err_improve": 61.48995967847254,
    "time": 26485.27392578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* c (* a -4.0)) (* b b)))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.98620127500834,
    "avg_bits_err_output": 33.98253561504416,
    "avg_bits_err_improve": 0.003665659964177337,
    "time": 26132.919921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96554197578415,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": 0,
    "time": 26594.9013671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2147.760498046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.34420391507517,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": 40.33345391507517,
    "time": 2154.081298828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.965563736638746,
    "avg_bits_err_output": 19.965563736638746,
    "avg_bits_err_improve": 0,
    "time": 2270.31298828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.687790786378916,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.687790786378916,
    "time": 4184.010498046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036625,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.036125,
    "time": 5633.326171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019969360937770436,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.009594360937770436,
    "time": 4136.09765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (* (+ x 1.0) x))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.02239624062518029,
    "avg_bits_err_improve": -0.007521240625180291,
    "time": 5939.384033203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.00075,
    "time": 2874.05517578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(- (+ (+ e (+ c (+ b 1.0))) (+ a d)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.40486109062806497,
    "avg_bits_err_output": 0.251625,
    "avg_bits_err_improve": 0.15323609062806498,
    "time": 8381.697509765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.606384526306954,
    "avg_bits_err_output": 29.606384526306954,
    "avg_bits_err_improve": 0,
    "time": 140263.65209960938,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (expm1 (log1p (sqrt (- (* x x) eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 24.73343322037492,
    "avg_bits_err_output": 24.784145648784797,
    "avg_bits_err_improve": -0.05071242840987722,
    "time": 19572.9404296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.39446080742367,
    "avg_bits_err_output": 30.394384027549407,
    "avg_bits_err_improve": 7.677987426291111e-05,
    "time": 72437.36865234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007698120312590144,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.0071981203125901436,
    "time": 5869.349853515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 48.210164515605314,
    "avg_bits_err_output": 48.210164515605314,
    "avg_bits_err_improve": 0,
    "time": 97759.10009765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.946804357537932,
    "avg_bits_err_output": 25.94573123722534,
    "avg_bits_err_improve": 0.0010731203125935451,
    "time": 31712.175537109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma a (- d) (fma c b (fma (- d) a (* a d)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 25.666643687069257,
    "avg_bits_err_output": 25.687017845850495,
    "avg_bits_err_improve": -0.020374158781237384,
    "time": 19432.4755859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035875,
    "avg_bits_err_output": 0.02285396288740179,
    "avg_bits_err_improve": 0.013021037112598208,
    "time": 8615.368896484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (fma ux (- (fma ux maxCos 1.0) ux) (- (* (+ maxCos (* (fma ux maxCos 1.0) (+ maxCos -1.0))) ux)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.634844888315962,
    "avg_bits_err_output": 0.5462001611601327,
    "avg_bits_err_improve": 13.08864472715583,
    "time": 56690.541015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- ux (+ (* ux maxCos) (- (* (+ maxCos -1.0) (* (+ maxCos -1.0) (* ux ux))) (- ux (* ux maxCos)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.671874358429502,
    "avg_bits_err_output": 0.3166900646744661,
    "avg_bits_err_improve": 13.355184293755036,
    "time": 31728.92041015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* ux (- maxCos (* ux maxCos))) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.3319351082645813,
    "avg_bits_err_output": 0.3315841448663901,
    "avg_bits_err_improve": 0.00035096339819118416,
    "time": 69754.7607421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20653324229295936,
    "avg_bits_err_output": 0.20653324229295936,
    "avg_bits_err_improve": 0,
    "time": 19327.6552734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(fma (* (sqrt (/ u1 (- 1.0 u1))) (/ 1.0 (sqrt (/ u1 (- 1.0 u1))))) (* (sin (* 6.28318530718 u2)) (sqrt (/ u1 (- 1.0 u1)))) 0.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.5450989847503924,
    "avg_bits_err_output": 0.5750878310094667,
    "avg_bits_err_improve": -0.029988846259074275,
    "time": 40588.65771484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (+ 1.0 (fma 6.28318530718 u2 -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3222715960245229,
    "avg_bits_err_output": 0.32433065931940275,
    "avg_bits_err_improve": -0.0020590632948798704,
    "time": 42970.603271484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (- (- (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0)) 1.0) -1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3322475408065705,
    "avg_bits_err_output": 0.335185023537136,
    "avg_bits_err_improve": -0.0029374827305654883,
    "time": 44589.132568359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05262998408642589,
    "avg_bits_err_output": 0.05262998408642589,
    "avg_bits_err_improve": 0,
    "time": 19150.316650390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* s (* (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 2.0))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1491181812836496,
    "avg_bits_err_output": 0.12705352429433814,
    "avg_bits_err_improve": 0.022064656989311454,
    "time": 33914.548828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6652467142518929,
    "avg_bits_err_output": 0.667276720285483,
    "avg_bits_err_improve": -0.0020300060335901593,
    "time": 22611.28662109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (+ 1.0 (fma (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (- v) (* v (log1p (expm1 (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.18097698960340125,
    "avg_bits_err_output": 0.21446386049727398,
    "avg_bits_err_improve": -0.03348687089387273,
    "time": 28812.131103515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.7722461908401734,
    "avg_bits_err_output": 2.7679653482653617,
    "avg_bits_err_improve": 0.004280842574811761,
    "time": 98330.876953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ v (/ (* (sinh (/ 1.0 v)) 2.0) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v (/ (* (sinh (/ 1.0 v)) 2.0) v)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.4536425977964531,
    "avg_bits_err_output": 0.47833401184641616,
    "avg_bits_err_improve": -0.024691414049963056,
    "time": 43735.64208984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.0918517741805179,
    "avg_bits_err_output": 0.0918517741805179,
    "avg_bits_err_improve": 0,
    "time": 9570.74365234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* cosTheta (- cosTheta)) (- 1.0 (* alpha alpha))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4546062307488622,
    "avg_bits_err_output": 0.4548877791440664,
    "avg_bits_err_improve": -0.00028154839520422303,
    "time": 18559.993896484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (+ (fma (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))) 3.0 -1.0) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 1.3239806661406583,
    "avg_bits_err_output": 1.3312856722256046,
    "avg_bits_err_improve": -0.0073050060849462195,
    "time": 48347.286376953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (* (/ 1.0 (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0)) (* (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0) (fma s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) s) -1.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 12.377611995813469,
    "avg_bits_err_output": 12.485776668261273,
    "avg_bits_err_improve": -0.10816467244780448,
    "time": 102120.38793945312,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI (* s r)) 6.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12956170487676072,
    "avg_bits_err_output": 0.13790934066477833,
    "avg_bits_err_improve": -0.008347635788017616,
    "time": 35822.0400390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (expm1 (log1p (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.926627020375334,
    "avg_bits_err_output": 0.9623513940950742,
    "avg_bits_err_improve": -0.03572437371974024,
    "time": 43385.87548828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(* (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c))) (log (+ 1.0 (expm1 (* (/ 1.0 (+ 1.0 (+ (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta))))) c))) (/ 1.0 (/ 1.0 (+ 1.0 (+ (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (* cosTheta (- cosTheta))))) c)))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.6796139703323612,
    "avg_bits_err_output": 0.5830554531410399,
    "avg_bits_err_improve": 0.09655851719132125,
    "time": 60583.03955078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* u2 (- (exp (log1p (* 2.0 PI))) 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.595958155964459,
    "avg_bits_err_output": 13.614222089165175,
    "avg_bits_err_improve": -0.018263933200715954,
    "time": 38708.740234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* PI (+ u2 u2))) (+ 1.0 (- (fma (cos (* PI (+ u2 u2))) (/ (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (cos (* PI (+ u2 u2)))) -1.0) 1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 13.650115896474576,
    "avg_bits_err_output": 13.586857311068401,
    "avg_bits_err_improve": 0.06325858540617446,
    "time": 32758.00439453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (* alpha (- alpha)) (- alpha) (* alpha (* alpha (- alpha)))) (* (/ (log (- 1.0 u0)) (* alpha (- alpha))) (* alpha (* alpha (* alpha alpha)))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.194763032863586,
    "avg_bits_err_output": 13.807716241779127,
    "avg_bits_err_improve": 0.38704679108445816,
    "time": 32875.7294921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.722424199082445,
    "avg_bits_err_output": 12.725699503305476,
    "avg_bits_err_improve": -0.003275304223031128,
    "time": 20025.57763671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1.45e+24) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l)))) (if (<= (* PI l) 1e-32) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (exp (log1p (/ PI l)))) l) l))))))",
    "output_parens": 37,
    "avg_bits_err_input": 16.24167241562882,
    "avg_bits_err_output": 12.929196005163131,
    "avg_bits_err_improve": 3.3124764104656883,
    "time": 30536.828369140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20531372187554084,
    "avg_bits_err_output": 0.20241748125036055,
    "avg_bits_err_improve": 0.002896240625180291,
    "time": 32960.685546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= F -5.4e+160) (+ (- (fma (/ 1.0 (tan B)) (- 1.0 (- (+ 1.0 (/ 1.0 (tan B))) (* (/ 1.0 (tan B)) (+ 1.0 (/ x (/ 1.0 (tan B))))))) 0.0)) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.279575600895308,
    "avg_bits_err_output": 12.897134220207345,
    "avg_bits_err_improve": 0.38244138068796296,
    "time": 44845.57080078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))) (- (exp (* (/ PI 4.0) f)) (exp (* (/ PI 4.0) (- f)))))) (- (expm1 (log (+ (/ 1.0 (/ PI 4.0)) 2.0))) 1.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 61.35206920019215,
    "avg_bits_err_output": 61.36050123453263,
    "avg_bits_err_improve": -0.008432034340479788,
    "time": 41469.30078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t 4.4e-70) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (- (* l l) (* t (* t -2.0))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))))",
    "output_parens": 33,
    "avg_bits_err_input": 42.8761941606873,
    "avg_bits_err_output": 37.756578440059826,
    "avg_bits_err_improve": 5.119615720627472,
    "time": 31052.006103515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9029741489722687,
    "avg_bits_err_output": 3.9029741489722687,
    "avg_bits_err_improve": 0,
    "time": 130526.60473632812,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0585228084366862,
    "avg_bits_err_output": 1.0585228084366862,
    "avg_bits_err_improve": 0,
    "time": 9281.753173828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -5e+52) (sqrt (fma (* n (* -2.0 U)) (- (* 2.0 (/ (* l l) Om)) (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))) (fma (- (- t (* 2.0 (/ (* l l) Om)))) (* n (* -2.0 U)) (* (* n (* U 2.0)) (- (* 2.0 (/ (* l l) Om)) t))))) (if (<= U 2.05e-136) (sqrt (* 2.0 (- (* (* (- U* U) (* n (* U (pow (/ l Om) 2.0)))) n) (* n (* U (- (* 2.0 (/ (* l l) Om)) t)))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*))))))))",
    "output_parens": 63,
    "avg_bits_err_input": 34.36355138032334,
    "avg_bits_err_output": 33.34143056466823,
    "avg_bits_err_improve": 1.0221208156551072,
    "time": 35578.042236328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (sin k) (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (tan k)))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.61774772707072,
    "avg_bits_err_output": 40.22593239584834,
    "avg_bits_err_improve": 7.391815331222382,
    "time": 63563.2314453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (* (+ 2.0 (pow (/ k t) 2.0)) (tan k)) (sin k)) (* (sin k) (* (/ (pow t 3.0) (* l l)) (sin k)))))",
    "output_parens": 16,
    "avg_bits_err_input": 32.54339100056812,
    "avg_bits_err_output": 32.543991225768465,
    "avg_bits_err_improve": -0.0006002252003440844,
    "time": 42222.401123046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (+ (* a1 a1) (* a2 a2)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5459639125209151,
    "avg_bits_err_output": 0.547152634396456,
    "avg_bits_err_improve": -0.0011887218755408657,
    "time": 32036.12109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* n (/ (* 2.0 PI) n)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5113231719727442,
    "avg_bits_err_output": 0.573091773100792,
    "avg_bits_err_improve": -0.06176860112804772,
    "time": 35910.789794921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.876537267042494,
    "avg_bits_err_output": 17.876537267042494,
    "avg_bits_err_improve": 0,
    "time": 41406.6611328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.541636401465324,
    "avg_bits_err_output": 15.541636401465324,
    "avg_bits_err_improve": 0,
    "time": 8678.887451171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.158271240625183,
    "avg_bits_err_output": 18.158271240625183,
    "avg_bits_err_improve": 0,
    "time": 35392.24609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (log (+ 1.0 (expm1 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 14.204097075735564,
    "avg_bits_err_output": 14.212144444488095,
    "avg_bits_err_improve": -0.008047368752530204,
    "time": 20857.008056640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.97941775789509,
    "avg_bits_err_output": 18.97941775789509,
    "avg_bits_err_improve": 0,
    "time": 26193.572998046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.5038495139375,
    "avg_bits_err_output": 56.93688620124532,
    "avg_bits_err_improve": 2.566963312692181,
    "time": 38375.1357421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (/ (fma (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l)) -1.0) (fma (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l)) -1.0)))) (* (* (pow (/ d l) 0.5) (/ (fma (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l)) -1.0) (fma (pow (/ (* M D) (+ d d)) 2.0) (* 0.5 (/ h l)) -1.0))) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* 0.5 (/ h l))))))",
    "output_parens": 51,
    "avg_bits_err_input": 26.64818285572742,
    "avg_bits_err_output": 26.647099636372467,
    "avg_bits_err_improve": 0.0010832193549532576,
    "time": 49003.857421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (/ 1.0 (- (+ 1.0 (hypot 1.0 x)) 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.291291794951803,
    "avg_bits_err_output": 15.30128565619765,
    "avg_bits_err_improve": -0.009993861245845892,
    "time": 23377.205322265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9862383613244511,
    "avg_bits_err_output": 0.012280842574811643,
    "avg_bits_err_improve": 0.9739575187496394,
    "time": 14300.5693359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4528530939519554,
    "avg_bits_err_output": 0.3807936794987178,
    "avg_bits_err_improve": 0.0720594144532376,
    "time": 18345.346435546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (* (/ (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))) (- (- 1.0 (* v v)) (* v (- v (* v (* v v)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.011292481250360578,
    "avg_bits_err_output": 0.013469360937770434,
    "avg_bits_err_improve": -0.002176879687409856,
    "time": 12226.0126953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.524612494388833,
    "avg_bits_err_output": 0.524612494388833,
    "avg_bits_err_improve": 0,
    "time": 11122.806884765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.17998571354413,
    "avg_bits_err_output": 2.14698571354413,
    "avg_bits_err_improve": 0.03299999999999992,
    "time": 10504.816162109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018873997935444798,
    "avg_bits_err_output": 0.018873997935444798,
    "avg_bits_err_improve": 0,
    "time": 7559.94287109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17492481250360573,
    "avg_bits_err_output": 0.17492481250360573,
    "avg_bits_err_improve": 0,
    "time": 25119.606201171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (- (* a (+ a (* a a))) (* b (- (* b (* a 3.0)) b))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1863240526179966,
    "avg_bits_err_output": 0.1860952657548939,
    "avg_bits_err_improve": 0.00022878686310268126,
    "time": 20917.147216796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1862157017554753,
    "avg_bits_err_output": 0.1862157017554753,
    "avg_bits_err_improve": 0,
    "time": 4491.97265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.55708596115098,
    "avg_bits_err_output": 13.55708596115098,
    "avg_bits_err_improve": 0,
    "time": 10202.79833984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.036489005031974,
    "avg_bits_err_output": 0.049,
    "avg_bits_err_improve": 40.987489005031975,
    "time": 6418.650146484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.3597885931389,
    "avg_bits_err_output": 31.3597885931389,
    "avg_bits_err_improve": 0,
    "time": 41068.765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.896260775808834,
    "avg_bits_err_output": 33.896260775808834,
    "avg_bits_err_improve": 0,
    "time": 26702.349365234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.34583601879705,
    "avg_bits_err_output": 34.343482756551005,
    "avg_bits_err_improve": 0.0023532622460464836,
    "time": 21589.51904296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (expm1 (log1p (log1p (/ (- 1.0 (cos x)) (* x x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 32.197380032654614,
    "avg_bits_err_output": 32.197771601830915,
    "avg_bits_err_improve": -0.0003915691763012319,
    "time": 22000.1220703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.265012022629655,
    "avg_bits_err_output": 32.265012022629655,
    "avg_bits_err_improve": 0,
    "time": 227375.51538085938,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (* (log N) (+ (/ (log N) (log N)) (- (/ (- -1.0 (log N)) (log N)) (/ -1.0 (log N))))) (- (log1p N) (log N)))",
    "output_parens": 17,
    "avg_bits_err_input": 29.181923357574714,
    "avg_bits_err_output": 29.195541707131603,
    "avg_bits_err_improve": -0.013618349556889342,
    "time": 19763.659912109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(* -1.0 (- (- (/ 1.0 x) (fma (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x)))) (* (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.227152949135515,
    "avg_bits_err_output": 0.5326987218959346,
    "avg_bits_err_improve": 13.69445422723958,
    "time": 42690.61865234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (- (log (exp (+ (cos (+ x eps)) 1.0))) 1.0) (cos x))",
    "output_parens": 8,
    "avg_bits_err_input": 39.48883795789857,
    "avg_bits_err_output": 39.61989086808922,
    "avg_bits_err_improve": -0.1310529101906539,
    "time": 37995.227783203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(fma (+ 1.0 (cbrt (+ 1.0 x))) (/ 1.0 (+ 1.0 (cbrt (+ 1.0 x)))) (fma (cbrt (+ 1.0 x)) (* (+ 1.0 (cbrt (+ 1.0 x))) (/ 1.0 (+ 1.0 (cbrt (+ 1.0 x))))) (- -1.0 (cbrt x))))",
    "output_parens": 21,
    "avg_bits_err_input": 29.434190690407554,
    "avg_bits_err_output": 29.05718913668342,
    "avg_bits_err_improve": 0.3770015537241349,
    "time": 31595.24755859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.684109682184822,
    "avg_bits_err_output": 29.692204051535985,
    "avg_bits_err_improve": -0.008094369351162811,
    "time": 99747.748046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* c (* a -4.0))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.82758938682075,
    "avg_bits_err_output": 34.01954028008359,
    "avg_bits_err_improve": -0.19195089326284176,
    "time": 23841.46044921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 33.980636546105906,
    "avg_bits_err_output": 34.00888476588409,
    "avg_bits_err_improve": -0.02824821977818459,
    "time": 29459.85302734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.98) (/ (* (- (* (/ 1.0 (log (- 1.0 x))) (+ (log (- 1.0 x)) (log (- 1.0 x)))) (- (* (/ 1.0 (log (- 1.0 x))) (- (/ (log (- 1.0 x)) (log (- 1.0 x))) (* (/ (log (- 1.0 x)) (log (- 1.0 x))) (+ 1.0 (log (- 1.0 x)))))))) (log (- 1.0 x))) (- (- (log1p x) 1.0) -1.0)) (/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x)))",
    "output_parens": 50,
    "avg_bits_err_input": 61.26344024916715,
    "avg_bits_err_output": 58.954446084959024,
    "avg_bits_err_improve": 2.308994164208123,
    "time": 82323.7138671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00405331366263,
    "avg_bits_err_output": 0.0778219351515561,
    "avg_bits_err_improve": 62.926231378511076,
    "time": 28952.66259765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.70969124861712,
    "avg_bits_err_output": 58.70969124861712,
    "avg_bits_err_improve": 0,
    "time": 275769.150390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (- (+ 1.0 (/ 1.0 (tan x))) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 59.914072478982206,
    "avg_bits_err_output": 59.912024844575065,
    "avg_bits_err_improve": 0.0020476344071411745,
    "time": 40361.2177734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.20264697536054,
    "avg_bits_err_output": 41.03306535815792,
    "avg_bits_err_improve": 19.169581617202617,
    "time": 29202.3408203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.35365944160877,
    "avg_bits_err_output": 0.45263684218813105,
    "avg_bits_err_improve": 40.901022599420635,
    "time": 9652.0283203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.60070967651047,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.60045967651047,
    "time": 4462.452392578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.59846497119116,
    "avg_bits_err_output": 0.015469822378330845,
    "avg_bits_err_improve": 29.582995148812827,
    "time": 3926.984130859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.00743125467056,
    "avg_bits_err_output": 29.10126382419582,
    "avg_bits_err_improve": 0.906167430474742,
    "time": 25772.420166015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.152640581308404,
    "avg_bits_err_output": 9.152640581308404,
    "avg_bits_err_improve": 0,
    "time": 62948.41015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (tan x) (fma (tan x) (/ -2.0 (tan x)) 1.0) (tan (+ x eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 36.78331177612614,
    "avg_bits_err_output": 36.90713050909237,
    "avg_bits_err_improve": -0.12381873296622814,
    "time": 33346.2822265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (* (* (+ 1.0 (sqrt x)) (/ 1.0 (+ 1.0 (sqrt x)))) (+ 1.0 (+ (sqrt x) (- -1.0 (sqrt x))))) (- (sqrt (+ 1.0 x)) (sqrt x)))",
    "output_parens": 17,
    "avg_bits_err_input": 29.579155592790897,
    "avg_bits_err_output": 28.878187602286566,
    "avg_bits_err_improve": 0.7009679905043313,
    "time": 39972.999755859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (sin (+ x eps)) (expm1 (log1p (- (sin x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.933256363557675,
    "avg_bits_err_output": 36.94070903421794,
    "avg_bits_err_improve": -0.007452670660264005,
    "time": 55034.064208984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (- (+ 1.0 (sqrt (+ 1.0 x))) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.311396114594427,
    "avg_bits_err_output": 19.31006393977897,
    "avg_bits_err_improve": 0.0013321748154559998,
    "time": 31811.799560546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ N 1.0)) (log (exp (- -1.0 (atan N))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.176901341954409,
    "avg_bits_err_output": 15.183303206702638,
    "avg_bits_err_improve": -0.006401864748228903,
    "time": 44530.84912109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.6802993283027,
    "avg_bits_err_output": 1.4740945429348011,
    "avg_bits_err_improve": 28.2062047853679,
    "time": 30599.619384765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(fma (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0) (fma (- (/ (- m (* m m)) v)) m (* m (/ (- m (* m m)) v))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.07752953698335613,
    "avg_bits_err_output": 0.09030693977754242,
    "avg_bits_err_improve": -0.012777402794186293,
    "time": 28800.595703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* a b) (* a b) (* (fma (- a) b (* a b)) (* b (- a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.036826129186863,
    "avg_bits_err_output": 0.1565,
    "avg_bits_err_improve": 15.880326129186864,
    "time": 14455.30810546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* PI (/ (/ angle 180.0) PI)) PI))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.55777104414763,
    "avg_bits_err_output": 20.560835177599362,
    "avg_bits_err_improve": -0.0030641334517333974,
    "time": 60986.726806640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (log1p (expm1 (sin (* PI (/ angle 180.0)))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.946381846740348,
    "avg_bits_err_output": 30.94625190415402,
    "avg_bits_err_improve": 0.0001299425863265924,
    "time": 67212.677734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (- (* PI (+ (/ angle 180.0) 1.0)) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 21.097963081477836,
    "avg_bits_err_output": 21.09893172276812,
    "avg_bits_err_improve": -0.0009686412902851771,
    "time": 67459.37231445312,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1742127584773497,
    "avg_bits_err_output": 0.16981367784260687,
    "avg_bits_err_improve": 0.004399080634742841,
    "time": 23155.216796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31606680393017456,
    "avg_bits_err_output": 0.3080552804084554,
    "avg_bits_err_improve": 0.008011523521719133,
    "time": 24133.433837890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1368962406251803,
    "avg_bits_err_output": 0.1368962406251803,
    "avg_bits_err_improve": 0,
    "time": 30797.99462890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.16051448746713,
    "avg_bits_err_output": 17.155645552419358,
    "avg_bits_err_improve": 0.0048689350477708615,
    "time": 47216.934814453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.15e+16) (/ (+ (sqrt (fma a (* c -4.0) (* b b))) (* (* b (/ -1.0 b)) (* b (* (* (/ 1.0 (* b (/ -1.0 b))) b) (/ -1.0 b))))) (* a 2.0)) (/ (- (+ (sqrt (fma -4.0 (* a c) (* b b))) (- 1.0 b)) 1.0) (* a 2.0)))",
    "output_parens": 28,
    "avg_bits_err_input": 52.55899760197495,
    "avg_bits_err_output": 50.90907236428749,
    "avg_bits_err_improve": 1.6499252376874622,
    "time": 20165.03466796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.791949948158187,
    "avg_bits_err_output": 28.716428532495584,
    "avg_bits_err_improve": 0.07552141566260318,
    "time": 28100.093994140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma a (* c -4.0) (* b b)) (* (/ (/ 1.0 (fma a (* c -4.0) (* b b))) (fma a (* c -4.0) (* b b))) (* (/ (/ 1.0 (fma a (* c -4.0) (* b b))) (fma a (* c -4.0) (* b b))) (/ (fma a (* c -4.0) (* b b)) (/ (/ 1.0 (fma a (* c -4.0) (* b b))) (fma a (* c -4.0) (* b b))))))))) b) (+ a a))",
    "output_parens": 42,
    "avg_bits_err_input": 43.909366179606586,
    "avg_bits_err_output": 43.74275170612904,
    "avg_bits_err_improve": 0.16661447347754432,
    "time": 33702.1337890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.83231652137298,
    "avg_bits_err_output": 34.01755922067204,
    "avg_bits_err_improve": -0.18524269929906012,
    "time": 26100.444580078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (* (expm1 (log1p (cos (- lambda1 lambda2)))) (cos phi2)) (- (+ (cos phi1) 1.0) 1.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.8195144067283671,
    "avg_bits_err_output": 0.8435784332698779,
    "avg_bits_err_improve": -0.024064026541510852,
    "time": 30706.70654296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.38406440195118,
    "avg_bits_err_output": 29.38844520822139,
    "avg_bits_err_improve": -0.004380806270212645,
    "time": 4037.6435546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.214160224743246,
    "avg_bits_err_output": 1.2650118421881311,
    "avg_bits_err_improve": 56.949148382555116,
    "time": 15729.514892578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.073115069838195,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.06574006983819,
    "time": 11170.286376953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(log (exp (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.008865601562950725,
    "avg_bits_err_output": 0.18029888190507645,
    "avg_bits_err_improve": -0.17143328034212574,
    "time": 2449.804931640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.777,
    "avg_bits_err_output": 31.777,
    "avg_bits_err_improve": 0,
    "time": 5773.447509765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (expm1 (log1p (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.70562520356331,
    "avg_bits_err_output": 58.72174547529234,
    "avg_bits_err_improve": -0.016120271729029412,
    "time": 87976.69604492188,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04394812031259015,
    "avg_bits_err_output": 0.04394812031259015,
    "avg_bits_err_improve": 0,
    "time": 15024.289306640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.127375,
    "avg_bits_err_output": 0.127375,
    "avg_bits_err_improve": 0,
    "time": 48319.781005859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13125,
    "avg_bits_err_output": 0.13125,
    "avg_bits_err_improve": 0,
    "time": 37023.514404296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.1486844613934,
    "avg_bits_err_output": 3.7822560962169676,
    "avg_bits_err_improve": 34.36642836517643,
    "time": 47404.603271484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.65675921527103,
    "avg_bits_err_output": 14.65675921527103,
    "avg_bits_err_improve": 0,
    "time": 4701.29296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (fma (sin delta) (* (sin delta) (/ (sin theta) (sin delta))) 0.0) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.15562405006909605,
    "avg_bits_err_output": 0.1605508955529068,
    "avg_bits_err_improve": -0.0049268454838107545,
    "time": 36499.4462890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.112e+15) (/ (fma (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* (sqrt (fma b b (* -3.0 (* c a)))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a)) (/ (+ (+ (sqrt (fma b b (* a (* c -3.0)))) (- 1.0 b)) -1.0) (* 3.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 52.56642732981351,
    "avg_bits_err_output": 50.613705877394544,
    "avg_bits_err_improve": 1.952721452418963,
    "time": 22317.430908203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.92385788802242,
    "avg_bits_err_output": 28.86027812753745,
    "avg_bits_err_improve": 0.06357976048497349,
    "time": 19200.4794921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (* (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))) (/ 1.0 (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b)))) (- b)) (* 3.0 a))",
    "output_parens": 31,
    "avg_bits_err_input": 43.97902241094706,
    "avg_bits_err_output": 43.24410969293691,
    "avg_bits_err_improve": 0.7349127180101505,
    "time": 24534.5830078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* -3.0 a)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.856203313246255,
    "avg_bits_err_output": 33.856203313246255,
    "avg_bits_err_improve": 0,
    "time": 19597.998291015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (log1p (expm1 (* (cos (- lambda1 lambda2)) (* (sin phi1) (cos phi2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.010364323226927,
    "avg_bits_err_output": 13.026272625163433,
    "avg_bits_err_improve": -0.01590830193650561,
    "time": 88261.4619140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.967350305388614,
    "avg_bits_err_output": 29.967350305388614,
    "avg_bits_err_improve": 0,
    "time": 151471.88842773438,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(log1p (expm1 (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010625,
    "avg_bits_err_output": 0.012542481250360577,
    "avg_bits_err_improve": -0.0019174812503605764,
    "time": 6875.47607421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (+ 1.0 (/ 1.0 (+ 1.0 x)))) (/ 1.0 (+ x -1.0))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.035714261268229,
    "avg_bits_err_output": 12.23678896231809,
    "avg_bits_err_improve": 1.798925298950138,
    "time": 162406.13256835938,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (- (* 2.0 (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (* A (* C 4.0)) (pow B 2.0)) F)))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 51.828736731426396,
    "avg_bits_err_output": 51.555284363709916,
    "avg_bits_err_improve": 0.2734523677164802,
    "time": 39705.4365234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.104482211257125,
    "avg_bits_err_output": 29.104482211257125,
    "avg_bits_err_improve": 0,
    "time": 43598.716796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (- (* (pow B 2.0) (* (+ F F) (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (* C 4.0) (* A (+ F F))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 31,
    "avg_bits_err_input": 52.28626989007919,
    "avg_bits_err_output": 52.41061604102355,
    "avg_bits_err_improve": -0.12434615094436197,
    "time": 35803.017822265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.23335130055074,
    "avg_bits_err_output": 15.23335130055074,
    "avg_bits_err_improve": 0,
    "time": 2377.378173828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (* (- g h) (+ g h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (* (- g h) (+ g h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.849081053277125,
    "avg_bits_err_output": 35.84844237831394,
    "avg_bits_err_improve": 0.0006386749631843713,
    "time": 15093.945068359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9904133468827534,
    "avg_bits_err_output": 0.9904133468827534,
    "avg_bits_err_improve": 0,
    "time": 9348.9423828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ -1.0 (+ (expm1 (log1p (+ (exp a) 2.0))) (expm1 b))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5334749102026902,
    "avg_bits_err_output": 0.45289876123164,
    "avg_bits_err_improve": 0.0805761489710502,
    "time": 15919.635986328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.45150533875889,
    "avg_bits_err_output": 11.45150533875889,
    "avg_bits_err_improve": 0,
    "time": 8765.067626953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4214587964875865,
    "avg_bits_err_output": 0.361125,
    "avg_bits_err_improve": 0.06033379648758652,
    "time": 6795.854248046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.89417892955714,
    "avg_bits_err_output": 15.913891885592612,
    "avg_bits_err_improve": 36.98028704396453,
    "time": 29108.248291015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.721221891303513,
    "avg_bits_err_output": 5.722201753975825,
    "avg_bits_err_improve": -0.000979862672312315,
    "time": 35490.0048828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.013875,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.0034999999999999996,
    "time": 6558.35986328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1177.28955078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+47) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))) (if (<= r 1e-36) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v)))) (+ (/ 2.0 (* r r)) (- -1.5 (/ (* r (* w (* (* r w) (+ 0.375 (* -0.25 v))))) (- 1.0 v))))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.709489423258463,
    "avg_bits_err_output": 6.85291317382805,
    "avg_bits_err_improve": 5.856576249430413,
    "time": 30765.670654296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (+ x1 x1) (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5159012060702414,
    "avg_bits_err_output": 0.2782473855773373,
    "avg_bits_err_improve": 0.23765382049290407,
    "time": 78767.21313476562,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.295043589852305,
    "avg_bits_err_output": 18.295043589852305,
    "avg_bits_err_improve": 0,
    "time": 39606.985595703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- x (* x (+ (* x (* x 0.12900613773279798)) 0.045070341448628)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.23467251746548876,
    "avg_bits_err_output": 0.11620056406367191,
    "avg_bits_err_improve": 0.11847195340181685,
    "time": 20296.289306640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 1722.66357421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(fma (* (- (/ 1.0 a) (/ 1.0 b)) (/ (/ 1.0 (* (- b a) (+ a b))) (/ PI 2.0))) (* (/ PI 2.0) (/ PI 2.0)) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 14.138060384022722,
    "avg_bits_err_output": 9.517414519964776,
    "avg_bits_err_improve": 4.620645864057947,
    "time": 41594.180419921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- 1.0 (- (- (* eps x) -1.0) (- x)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 29.543531437114826,
    "avg_bits_err_output": 1.033637686071956,
    "avg_bits_err_improve": 28.50989375104287,
    "time": 43094.275390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.029,
    "avg_bits_err_output": 0.029,
    "avg_bits_err_improve": 0,
    "time": 13465.210693359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.032875,
    "avg_bits_err_output": 0.03075,
    "avg_bits_err_improve": 0.002125000000000002,
    "time": 28415.72705078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.048,
    "avg_bits_err_output": 0.048,
    "avg_bits_err_improve": 0,
    "time": 35539.01953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3204.916015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2903.19677734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3167.155029296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.840824799560117,
    "avg_bits_err_output": 0.255375,
    "avg_bits_err_improve": 7.585449799560117,
    "time": 60730.86572265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3247496513254875,
    "avg_bits_err_output": 7.3247496513254875,
    "avg_bits_err_improve": 0,
    "time": 91518.25805664062,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.708367810745404,
    "avg_bits_err_output": 15.708367810745404,
    "avg_bits_err_improve": 0,
    "time": 38364.623779296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (expm1 (cos x))) (* (+ (expm1 (* 10.0 (* x x))) 1.0) (* (exp (* 10.0 (* x x))) (/ 1.0 (exp (* 10.0 (* x x)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 3.541094055679177,
    "avg_bits_err_output": 3.5416553282065757,
    "avg_bits_err_improve": -0.0005612725273986818,
    "time": 23828.87060546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(log1p (expm1 (/ x (fma x x 1.0))))",
    "output_parens": 4,
    "avg_bits_err_input": 14.28559916519377,
    "avg_bits_err_output": 14.28559916519377,
    "avg_bits_err_improve": 0,
    "time": 58512.660400390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.92305890107985,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.92305890107985,
    "time": 4170.73486328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.353893905130626,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 39.35376890513063,
    "time": 4190.046630859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.300125,
    "avg_bits_err_improve": 63.699875,
    "time": 3588.9404296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (* t (* (* t 2e-16) 2e-16)) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 10,
    "avg_bits_err_input": 61.843250060791135,
    "avg_bits_err_output": 0.3987761281273439,
    "avg_bits_err_improve": 61.44447393266379,
    "time": 25411.898193359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 33.980636546105906,
    "avg_bits_err_output": 34.00888476588409,
    "avg_bits_err_improve": -0.02824821977818459,
    "time": 30290.14453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.83231652137298,
    "avg_bits_err_output": 34.01755922067204,
    "avg_bits_err_improve": -0.18524269929906012,
    "time": 22907.376220703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1735.142333984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.83810762505364,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 39.824982625053636,
    "time": 2925.01220703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(- (+ (/ (fma x x (* y (- y))) (fma y y (* x x))) 1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 20.041416061583668,
    "avg_bits_err_output": 20.043525686764436,
    "avg_bits_err_improve": -0.002109625180768404,
    "time": 15346.26220703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.661189081637689,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.661189081637689,
    "time": 5154.259765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.039375,
    "time": 5996.283203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.022490601562950727,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.010240601562950726,
    "time": 3593.190185546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.0135,
    "avg_bits_err_improve": 0,
    "time": 3642.515869140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0,
    "time": 1601.41748046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ c a) (+ d b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39465601562950725,
    "avg_bits_err_output": 0.239375,
    "avg_bits_err_improve": 0.15528101562950725,
    "time": 7222.48193359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(log (exp (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.292060223209155,
    "avg_bits_err_output": 30.32851490274266,
    "avg_bits_err_improve": -0.036454679533505896,
    "time": 70880.39331054688,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (- (* x x) eps) (/ (- (* x (- (* x (* x (/ x (- (* x x) eps)))) (* eps (/ x (- (* x x) eps))))) eps) (- (* x x) eps)))))",
    "output_parens": 20,
    "avg_bits_err_input": 25.038366505204042,
    "avg_bits_err_output": 25.085670897845034,
    "avg_bits_err_improve": -0.04730439264099218,
    "time": 21388.72216796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (- (+ (/ (- x (sin x)) (tan x)) -1.0) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 30.486938587298585,
    "avg_bits_err_output": 30.48913404961413,
    "avg_bits_err_improve": -0.002195462315544461,
    "time": 43177.849853515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0065,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.005124999999999999,
    "time": 3560.503173828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.609822427305765,
    "avg_bits_err_output": 47.609822427305765,
    "avg_bits_err_improve": 0,
    "time": 76619.470703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.369552687193668,
    "avg_bits_err_output": 26.369354566881075,
    "avg_bits_err_improve": 0.00019812031259291984,
    "time": 23497.30517578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma a (- d) (* b c)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.351501031704768,
    "avg_bits_err_output": 26.350677911392175,
    "avg_bits_err_improve": 0.0008231203125923514,
    "time": 14556.195068359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03275,
    "avg_bits_err_output": 0.019990697420484902,
    "avg_bits_err_improve": 0.0127593025795151,
    "time": 7617.6376953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (* maxCos (* ux ux)) (- (* 1.0 ux) (- (* (* ux maxCos) (+ (* ux maxCos) 2.0)) (- ux (* (* ux (- ux)) (+ maxCos -1.0))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.64969994492842,
    "avg_bits_err_output": 0.5440380993104772,
    "avg_bits_err_improve": 13.105661845617943,
    "time": 33137.91162109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* PI (* uy 2.0))) (sqrt (fma ux (- (- (* ux maxCos) ux) (fma (fma ux maxCos 1.0) (+ maxCos -1.0) maxCos)) ux)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.686038579350132,
    "avg_bits_err_output": 0.31037095432300305,
    "avg_bits_err_improve": 13.375667625027129,
    "time": 35021.763671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (log1p (expm1 (* PI (* uy 2.0))))) xi) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.34590803930447744,
    "avg_bits_err_output": 0.3462848392268601,
    "avg_bits_err_improve": -0.0003767999223826535,
    "time": 97467.95434570312,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20441147540404264,
    "avg_bits_err_output": 0.20439023477886234,
    "avg_bits_err_improve": 2.124062518030212e-05,
    "time": 20721.22021484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* (* 6.28318530718 u2) (* (* 6.28318530718 u2) (/ 1.0 (* 6.28318530718 u2))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.543769143854134,
    "avg_bits_err_output": 0.5676165277228558,
    "avg_bits_err_improve": -0.02384738386872176,
    "time": 71685.65698242188,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* 6.28318530718 u2) (* (* 6.28318530718 u2) (/ 1.0 (* 6.28318530718 u2))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.32032849407495295,
    "avg_bits_err_output": 0.32357502233775753,
    "avg_bits_err_improve": -0.003246528262804582,
    "time": 44952.46142578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33984281472053063,
    "avg_bits_err_output": 0.34069079804167246,
    "avg_bits_err_improve": -0.000847983321141832,
    "time": 45611.778564453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05787217015750099,
    "avg_bits_err_output": 0.05787217015750099,
    "avg_bits_err_improve": 0,
    "time": 14782.91748046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13712960107210362,
    "avg_bits_err_output": 0.11622971371145537,
    "avg_bits_err_improve": 0.020899887360648253,
    "time": 38455.12353515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6680207908937882,
    "avg_bits_err_output": 0.6680207908937882,
    "avg_bits_err_improve": 0,
    "time": 20306.322998046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (+ 1.0 (fma (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (- v) (* v (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.16185322714897074,
    "avg_bits_err_output": 0.17385849585754334,
    "avg_bits_err_improve": -0.012005268708572603,
    "time": 26099.484130859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.583018703851672,
    "avg_bits_err_output": 2.580663262784846,
    "avg_bits_err_improve": 0.0023554410668262804,
    "time": 68328.7587890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (+ v v) (sinh (/ 1.0 v))) (* (sinh (/ 1.0 v)) (sinh (/ 1.0 v)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.4653512624968681,
    "avg_bits_err_output": 0.4890361664244098,
    "avg_bits_err_improve": -0.02368490392754169,
    "time": 40605.942138671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10650240332098712,
    "avg_bits_err_output": 0.10650240332098712,
    "avg_bits_err_improve": 0,
    "time": 8068.207275390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (exp (log1p (* (fma alpha alpha -1.0) (* cosTheta cosTheta)))) 1.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4558456497706566,
    "avg_bits_err_output": 0.45707893084704554,
    "avg_bits_err_improve": -0.0012332810763889257,
    "time": 24862.391845703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (exp (* (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75)))) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.3065097947354827,
    "avg_bits_err_output": 1.3181618387591223,
    "avg_bits_err_improve": -0.011652044023639618,
    "time": 46513.2626953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (* (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0) (* (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0) (/ 1.0 (fma s (/ (+ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0))))) s) -1.0)))))",
    "output_parens": 25,
    "avg_bits_err_input": 12.348574563720144,
    "avg_bits_err_output": 12.462885285741915,
    "avg_bits_err_improve": -0.11431072202177184,
    "time": 55286.038330078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* 6.0 (* s PI)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13655677100410343,
    "avg_bits_err_output": 0.14583715208796721,
    "avg_bits_err_improve": -0.009280381083863781,
    "time": 51774.563232421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) n1_i (* (sin (- normAngle (* normAngle u))) (* n0_i (/ 1.0 (sin normAngle)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.905243938932086,
    "avg_bits_err_output": 0.9171416615015842,
    "avg_bits_err_improve": -0.01189772256949817,
    "time": 38496.597900390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6794786001993081,
    "avg_bits_err_output": 0.45248233282823913,
    "avg_bits_err_improve": 0.22699626737106893,
    "time": 45602.496826171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (- (* PI (* 2.0 (* (/ u2 (* 2.0 PI)) (exp (log1p (* 2.0 PI)))))) (* PI (* 2.0 (/ u2 (* 2.0 PI)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.343898601823916,
    "avg_bits_err_output": 13.369411720263894,
    "avg_bits_err_improve": -0.025513118439977944,
    "time": 47951.5380859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (/ (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2)))) (* (cos (* 2.0 (* PI u2))) (cos (* 2.0 (* PI u2)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.384857568120973,
    "avg_bits_err_output": 13.388322736156697,
    "avg_bits_err_improve": -0.0034651680357242753,
    "time": 48024.880859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (fma (- alpha) (fma alpha (/ (log (- 1.0 u0)) (* alpha (- alpha))) alpha) (* alpha alpha)) (* alpha (- alpha)) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 14.05757635386599,
    "avg_bits_err_output": 13.834686657057643,
    "avg_bits_err_improve": 0.22288969680834647,
    "time": 50214.989501953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.58468902222884,
    "avg_bits_err_output": 12.586250141715537,
    "avg_bits_err_improve": -0.0015611194866966827,
    "time": 30408.428955078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 5e+144) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ l PI) (* PI PI))))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 1e+179) (- (* PI l) (* (* (/ 1.0 (* F F)) (* (/ 1.0 (* F F)) (- (exp (log1p (/ 1.0 (/ 1.0 (* F F))))) 1.0))) (tan (* PI l)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ l PI) (* PI PI)))))))",
    "output_parens": 53,
    "avg_bits_err_input": 16.52083657805504,
    "avg_bits_err_output": 17.049016714848207,
    "avg_bits_err_improve": -0.5281801367931678,
    "time": 34715.833984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21641748125036056,
    "avg_bits_err_output": 0.21641748125036056,
    "avg_bits_err_improve": 0,
    "time": 27097.29296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.764258446437987,
    "avg_bits_err_output": 13.764258446437987,
    "avg_bits_err_improve": 0,
    "time": 53550.86376953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (+ 1.0 (- (* (/ PI 4.0) f) 1.0)))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.37742317936748,
    "avg_bits_err_output": 61.37812345886018,
    "avg_bits_err_improve": -0.0007002794926975753,
    "time": 76762.94970703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -6e-143) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l))))) (if (<= t 1.8e-172) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (+ (fma (- l) l (* l l)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))) (- (exp (log1p (/ (* t (sqrt 2.0)) (sqrt (fma (- (/ (+ 1.0 x) (+ x -1.0))) (- (* t (+ t t))) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))))) 1.0)))",
    "output_parens": 63,
    "avg_bits_err_input": 43.053375779353544,
    "avg_bits_err_output": 35.607064380434586,
    "avg_bits_err_improve": 7.446311398918958,
    "time": 43470.09716796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.650189929377229,
    "avg_bits_err_output": 3.650189929377229,
    "avg_bits_err_improve": 0,
    "time": 62847.82958984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.918375,
    "avg_bits_err_output": 0.918375,
    "avg_bits_err_improve": 0,
    "time": 8505.414306640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* U (- (* (- t (* 2.0 (/ (* l l) Om))) (+ n n)) (* (pow (/ l Om) 2.0) (* (- U U*) (* n (+ n n))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e+287) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* 2.0 (* n (- (* (- t (* 2.0 (/ (* l l) Om))) U) (* (- U U*) (* n (* U (pow (/ l Om) 2.0))))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.64485074348534,
    "avg_bits_err_output": 30.993878285229457,
    "avg_bits_err_improve": 3.650972458255886,
    "time": 27496.78759765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+89) (/ 2.0 (* (sin k) (* (* (pow (/ k t) 2.0) (/ (pow t 3.0) (* l l))) (tan k)))) (/ 2.0 (* (pow (/ k t) 2.0) (+ (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))) (fma (- (sin k)) (* (tan k) (/ (sin k) (sin k))) (* (sin k) (tan k)))))))",
    "output_parens": 49,
    "avg_bits_err_input": 47.67671050232394,
    "avg_bits_err_output": 37.53357680114263,
    "avg_bits_err_improve": 10.143133701181313,
    "time": 50015.29150390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.03275996639717,
    "avg_bits_err_output": 32.0164285253354,
    "avg_bits_err_improve": 0.016331441061772978,
    "time": 12501.635009765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* a2 (* (/ (cos th) (sqrt 2.0)) a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5189406047119312,
    "avg_bits_err_output": 0.510992484399341,
    "avg_bits_err_improve": 0.007948120312590179,
    "time": 31013.02001953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* (* 2.0 PI) (fma (* PI (/ (/ (* 2.0 (/ n (* PI 2.0))) PI) PI)) PI 0.0))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.49293429273022,
    "avg_bits_err_output": 0.5309783572645953,
    "avg_bits_err_improve": -0.03804406453437531,
    "time": 48763.37255859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (- (* (exp l) (* J (cos (/ K 2.0)))) (* (exp (- l)) (* J (cos (/ K 2.0))))) (* (- (cos (/ K 2.0))) (fma (- (exp l)) J (* (exp l) J)))) U)",
    "output_parens": 23,
    "avg_bits_err_input": 16.864990563002465,
    "avg_bits_err_output": 16.8680018156326,
    "avg_bits_err_improve": -0.0030112526301344644,
    "time": 33171.669189453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -8.5e+35) (* (cos (- (/ (* K (* (+ m n) (- (* (exp (log1p (/ 1.0 K))) K) (* K 1.0)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 3.8e+40) (* (cos (- (/ (- (* K (+ m (- n -1.0))) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* (+ m n) (- (* (exp (log1p (/ 1.0 K))) K) (* K 1.0)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 65,
    "avg_bits_err_input": 15.698836307057327,
    "avg_bits_err_output": 1.4270507373190284,
    "avg_bits_err_improve": 14.271785569738299,
    "time": 29616.041748046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.95346936093777,
    "avg_bits_err_output": 17.95346936093777,
    "avg_bits_err_improve": 0,
    "time": 27812.922119140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.633980344312715,
    "avg_bits_err_output": 14.633980344312715,
    "avg_bits_err_improve": 0,
    "time": 21068.468505859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.03711654221674,
    "avg_bits_err_output": 19.03711654221674,
    "avg_bits_err_improve": 0,
    "time": 19485.652099609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* D w)))) (sqrt (fma (/ (* d (* d c0)) (* D (* h (* D w)))) (/ (* d (* d c0)) (* D (* h (* D w)))) (- (* M M))))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.78790956957688,
    "avg_bits_err_output": 56.697001544598976,
    "avg_bits_err_improve": 3.0909080249779066,
    "time": 48372.7724609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* d 2.0)) 2.0)) (/ h l))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.30444984918681,
    "avg_bits_err_output": 26.30444984918681,
    "avg_bits_err_improve": 0,
    "time": 68046.91577148438,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (log (exp (/ 1.0 (hypot 1.0 x))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.46220520852375,
    "avg_bits_err_output": 15.463498943352468,
    "avg_bits_err_improve": -0.0012937348287174188,
    "time": 32626.9345703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (* 3.0 (- 1.0 (* v v))) (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9868443609377705,
    "avg_bits_err_output": 0.012011842188131013,
    "avg_bits_err_improve": 0.9748325187496395,
    "time": 24250.923583984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* v (* t v))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4341304608686311,
    "avg_bits_err_output": 0.3643092042272629,
    "avg_bits_err_improve": 0.06982125664136823,
    "time": 48657.60888671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011323120312590145,
    "avg_bits_err_output": 0.010823120312590145,
    "avg_bits_err_improve": 0.0005000000000000004,
    "time": 12990.728515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5474621861276876,
    "avg_bits_err_output": 0.5474621861276876,
    "avg_bits_err_improve": 0,
    "time": 16809.72265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9828245666930557,
    "avg_bits_err_output": 1.9828245666930557,
    "avg_bits_err_improve": 0,
    "time": 10572.6982421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.016935321751558364,
    "avg_bits_err_output": 0.016935321751558364,
    "avg_bits_err_improve": 0,
    "time": 6527.767333984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1862998125036057,
    "avg_bits_err_output": 0.1862998125036057,
    "avg_bits_err_improve": 0,
    "time": 64669.193359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (* 4.0 (+ (* b (- b (* b (* a 3.0)))) (* a (* a (+ 1.0 a))))) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 0.19424740211637467,
    "avg_bits_err_output": 0.196295925927064,
    "avg_bits_err_improve": -0.0020485238106893178,
    "time": 31770.474853515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (fma b (* b (fma a 4.0 12.0)) (pow (fma a a (* b b)) 2.0)) (* (* a 4.0) (- 1.0 (exp (log1p (- (* a a) a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18480271804288967,
    "avg_bits_err_output": 0.18692592452251142,
    "avg_bits_err_improve": -0.0021232064796217476,
    "time": 38936.878173828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.23647577207128,
    "avg_bits_err_output": 13.23647577207128,
    "avg_bits_err_improve": 0,
    "time": 22574.203369140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.901760617157315,
    "avg_bits_err_output": 0.056625,
    "avg_bits_err_improve": 40.84513561715732,
    "time": 4232.24755859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (- (- x -1.0) 1.0) (sin x)) (+ x (- 1.0 (- (tan x) -1.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.902755490590717,
    "avg_bits_err_output": 26.150722562429493,
    "avg_bits_err_improve": 5.752032928161224,
    "time": 24767.4111328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.40584995319248,
    "avg_bits_err_output": 34.40584995319248,
    "avg_bits_err_improve": 0,
    "time": 22137.478515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* a c) (+ (+ (fma c (* a -2.0) (* b_2 b_2)) (* a c)) (* c (- a)))))) a)",
    "output_parens": 14,
    "avg_bits_err_input": 34.3828390476411,
    "avg_bits_err_output": 34.408270528736075,
    "avg_bits_err_improve": -0.025431481094976505,
    "time": 18892.22314453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.402821974584036,
    "avg_bits_err_output": 31.402821974584036,
    "avg_bits_err_improve": 0,
    "time": 21994.618896484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (log (+ 1.0 (expm1 (pow (+ x 1.0) (/ 1.0 n))))) (pow x (/ 1.0 n)))",
    "output_parens": 9,
    "avg_bits_err_input": 32.65858272605914,
    "avg_bits_err_output": 32.68752008474982,
    "avg_bits_err_improve": -0.028937358690683368,
    "time": 38227.18359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 29.889323456536772,
    "avg_bits_err_output": 29.889477201656973,
    "avg_bits_err_improve": -0.00015374512020116526,
    "time": 25485.7900390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (- (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (/ 1.0 x))) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.376828836079588,
    "avg_bits_err_output": 0.5357124433456797,
    "avg_bits_err_improve": 13.841116392733907,
    "time": 81864.80737304688,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (- (- (cos (+ x eps)) 1.0) -1.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 39.32695016404619,
    "avg_bits_err_output": 39.33570668748321,
    "avg_bits_err_improve": -0.008756523437021713,
    "time": 52164.445556640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(fma (cbrt (+ x 1.0)) (/ 1.0 (cbrt (+ x 1.0))) (+ (- (cbrt x)) (fma (cbrt (+ x 1.0)) (- (/ (+ 1.0 (cbrt (+ x 1.0))) (cbrt (+ x 1.0)))) (- (* (cbrt (+ x 1.0)) -2.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 30.409551823361127,
    "avg_bits_err_output": 29.975194344034165,
    "avg_bits_err_improve": 0.43435747932696245,
    "time": 33966.74072265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (log1p (exp (log (expm1 (- 1.0 (cos x)))))) (sin x))",
    "output_parens": 8,
    "avg_bits_err_input": 30.43412667195782,
    "avg_bits_err_output": 30.452181924033585,
    "avg_bits_err_improve": -0.018055252075765083,
    "time": 60506.515869140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma a (* c 4.0) (+ (* b b) (* a (* c -8.0)))))) (* 2.0 a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.45820643720567,
    "avg_bits_err_output": 34.4929858237881,
    "avg_bits_err_improve": -0.034779386582435734,
    "time": 34297.9658203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.47193849760178,
    "avg_bits_err_output": 34.47193849760178,
    "avg_bits_err_improve": 0,
    "time": 24196.557373046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (- (+ 1.0 (log (- 1.0 x))) 1.0) (log1p x))",
    "output_parens": 6,
    "avg_bits_err_input": 61.34023281158273,
    "avg_bits_err_output": 60.06201612303329,
    "avg_bits_err_improve": 1.278216688549442,
    "time": 27059.2666015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.005504915345526,
    "avg_bits_err_output": 0.08686009620681089,
    "avg_bits_err_improve": 62.91864481913871,
    "time": 26990.526123046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (* (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (expm1 (log1p (/ 1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))))) -1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 58.6068582932264,
    "avg_bits_err_output": 58.64530768930283,
    "avg_bits_err_improve": -0.038449396076430276,
    "time": 86386.9794921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (* (/ 1.0 (tan x)) (- 1.0 (* (/ 1.0 (tan x)) (/ 1.0 (/ 1.0 (tan x)))))) (+ 1.0 (+ (fma (- (* (/ 1.0 x) (/ -1.0 (/ 1.0 x)))) (/ 1.0 x) (- (/ 1.0 x))) (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 27,
    "avg_bits_err_input": 59.946070332992555,
    "avg_bits_err_output": 59.94162903171076,
    "avg_bits_err_improve": 0.004441301281794097,
    "time": 45928.630126953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.25634483926499,
    "avg_bits_err_output": 40.92599071658407,
    "avg_bits_err_improve": 19.330354122680923,
    "time": 31044.674560546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (* (+ 1.0 (/ 1.0 (expm1 x))) (exp x)) (exp x))",
    "output_parens": 7,
    "avg_bits_err_input": 41.33060170075053,
    "avg_bits_err_output": 0.5255551599769501,
    "avg_bits_err_improve": 40.805046540773574,
    "time": 8380.74560546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64451325328932,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.64426325328932,
    "time": 4849.260009765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.473618010929215,
    "avg_bits_err_output": 0.02225475254202879,
    "avg_bits_err_improve": 29.451363258387186,
    "time": 5289.0380859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.784773665693805,
    "avg_bits_err_output": 28.81671323884879,
    "avg_bits_err_improve": 0.9680604268450139,
    "time": 40436.80908203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(fma (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ 1.0 (+ -1.0 x))) (- (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 16,
    "avg_bits_err_input": 9.6849076618687,
    "avg_bits_err_output": 9.663176391525084,
    "avg_bits_err_improve": 0.021731270343614995,
    "time": 37817.97705078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.45831012305874,
    "avg_bits_err_output": 37.45831012305874,
    "avg_bits_err_improve": 0,
    "time": 53812.9111328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (log1p (expm1 (- (+ -1.0 (sqrt (+ x 1.0))) (sqrt x)))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 30.451153362379326,
    "avg_bits_err_output": 29.72054390366061,
    "avg_bits_err_improve": 0.7306094587187175,
    "time": 26209.13232421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.814638662066,
    "avg_bits_err_output": 36.814638662066,
    "avg_bits_err_improve": 0,
    "time": 42016.91943359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 20.194070471701124,
    "avg_bits_err_output": 20.194070471701124,
    "avg_bits_err_improve": 0,
    "time": 32934.421142578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (fma (- -1.0 (atan N)) (* (- -1.0 (atan N)) (/ 1.0 (- -1.0 (atan N)))) (atan (+ N 1.0))) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 14.985983612324597,
    "avg_bits_err_output": 14.987822133115612,
    "avg_bits_err_improve": -0.0018385207910149859,
    "time": 32626.77099609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.800148016001764,
    "avg_bits_err_output": 29.800148016001764,
    "avg_bits_err_improve": 0,
    "time": 34219.42822265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07936580507553277,
    "avg_bits_err_output": 0.07936580507553277,
    "avg_bits_err_improve": 0,
    "time": 29470.3408203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (fma (* b a) (* b a) (* (* b (- a)) (fma (- a) b (* b a)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.681680381599026,
    "avg_bits_err_output": 0.15475,
    "avg_bits_err_improve": 16.526930381599026,
    "time": 17344.098388671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.634345486172702,
    "avg_bits_err_output": 20.644416521703743,
    "avg_bits_err_improve": -0.010071035531041161,
    "time": 49415.60205078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (* (sin (* PI (/ angle 180.0))) (pow b 2.0)) 2.0) (* (sin (* PI (/ angle 180.0))) (* 2.0 (pow a 2.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 31.456268841423093,
    "avg_bits_err_output": 31.451367141498473,
    "avg_bits_err_improve": 0.004901699924619862,
    "time": 68272.75268554688,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma (/ angle 180.0) (* PI (exp (log1p (/ (/ angle 180.0) (/ angle 180.0))))) (- (* (/ angle 180.0) PI))))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 21.348467854042926,
    "avg_bits_err_output": 21.353511320160212,
    "avg_bits_err_improve": -0.005043466117285789,
    "time": 122563.7607421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1812550362151282,
    "avg_bits_err_output": 0.1812550362151282,
    "avg_bits_err_improve": 0,
    "time": 25407.26708984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.32299789178787647,
    "avg_bits_err_output": 0.31375567096001583,
    "avg_bits_err_improve": 0.009242220827860637,
    "time": 28873.409423828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13271936093777043,
    "avg_bits_err_output": 0.13271936093777043,
    "avg_bits_err_improve": 0,
    "time": 33750.84912109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (- (* (cos phi1) (- (* (exp (log1p (- (cos (- lambda1 lambda2))))) (cos phi2)) (cos phi2)))))) R)",
    "output_parens": 18,
    "avg_bits_err_input": 16.845404614420108,
    "avg_bits_err_output": 16.869976182242283,
    "avg_bits_err_improve": -0.024571567822174956,
    "time": 68964.79638671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-28) (/ (+ (- b) (sqrt (+ (fma b b (* a (* c -4.0))) (fma (- a) (* 4.0 c) (* 4.0 (* a c)))))) (* a 2.0)) (/ (- (sqrt (* (fma c (* a -4.0) (* b b)) (* (fma c (* a -4.0) (* b b)) (/ 1.0 (log1p (expm1 (fma a (* c -4.0) (* b b)))))))) b) (+ a a)))",
    "output_parens": 43,
    "avg_bits_err_input": 52.64142193928883,
    "avg_bits_err_output": 50.99676564735042,
    "avg_bits_err_improve": 1.6446562919384107,
    "time": 32157.396728515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (/ 1.0 (fma a (* c -4.0) (* b b))) (+ (* b b) (* a (* c -4.0)))))) b) (+ a a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.61555811155753,
    "avg_bits_err_output": 28.585364630531238,
    "avg_bits_err_improve": 0.03019348102629138,
    "time": 24956.362548828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-21) (* (/ (- (sqrt (fma b b (* a (* c -4.0)))) b) (+ a a)) (* (/ (- (sqrt (fma b b (* a (* c -4.0)))) b) (+ a a)) (/ 1.0 (/ (- (sqrt (fma b b (* a (* c -4.0)))) b) (+ a a))))) (/ (- (sqrt (* (fma b b (* a (* c -4.0))) (* (fma b b (* a (* c -4.0))) (- (exp (log1p (/ 1.0 (fma a (* c -4.0) (* b b))))) 1.0)))) b) (+ a a)))",
    "output_parens": 54,
    "avg_bits_err_input": 43.974908201120016,
    "avg_bits_err_output": 42.52874584578377,
    "avg_bits_err_improve": 1.4461623553362486,
    "time": 57077.230224609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.46880819558325,
    "avg_bits_err_output": 34.457562875138535,
    "avg_bits_err_improve": 0.011245320444714935,
    "time": 23927.9189453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (fma (/ 1.0 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (cos phi1) (* (/ 1.0 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.9314431385492803,
    "avg_bits_err_output": 0.9485856410619675,
    "avg_bits_err_improve": -0.01714250251268723,
    "time": 37720.1044921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.52380263861097,
    "avg_bits_err_output": 29.523064111142038,
    "avg_bits_err_improve": 0.0007385274689326593,
    "time": 4285.19482421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.12213032889227,
    "avg_bits_err_output": 1.2882099625007213,
    "avg_bits_err_improve": 56.833920366391546,
    "time": 14700.002685546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.996967362018786,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 57.987717362018785,
    "time": 13277.335693359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.008323120312590145,
    "avg_bits_err_output": 0.1615170570218136,
    "avg_bits_err_improve": -0.15319393670922346,
    "time": 2684.24560546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.07419812031259,
    "avg_bits_err_output": 32.07419812031259,
    "avg_bits_err_improve": 0,
    "time": 5427.318115234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (fma (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0) (/ -1.0 (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0)) (fma 1.0 (* (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0) (/ (log (/ (+ 1.0 x) (- 1.0 x))) (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0))) 1.0)))",
    "output_parens": 30,
    "avg_bits_err_input": 58.596442739326356,
    "avg_bits_err_output": 58.603081370713625,
    "avg_bits_err_improve": -0.00663863138726839,
    "time": 61592.460693359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- 1.0 (* x x))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.020049039677847345,
    "avg_bits_err_output": 0.020073120312590145,
    "avg_bits_err_improve": -2.408063474279923e-05,
    "time": 5294.986083984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12707312031259016,
    "avg_bits_err_output": 0.12707312031259016,
    "avg_bits_err_improve": 0,
    "time": 37463.29443359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* eh (* (sin (atan (/ (* (- eh) (tan t)) ew))) (sin t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1242712406251803,
    "avg_bits_err_output": 0.12471936093777043,
    "avg_bits_err_improve": -0.00044812031259013063,
    "time": 35870.338623046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.40633293832862,
    "avg_bits_err_output": 3.608744908494849,
    "avg_bits_err_improve": 34.79758802983377,
    "time": 44108.9990234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.024248602497597,
    "avg_bits_err_output": 15.024248602497597,
    "avg_bits_err_improve": 0,
    "time": 5516.3310546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (cos phi1) (sin theta)) (sin delta)) (- (fma (sin phi1) (sin (asin (fma (cos phi1) (* (sin delta) (cos theta)) (* (cos delta) (sin phi1))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1503200559205525,
    "avg_bits_err_output": 0.14388038780659895,
    "avg_bits_err_improve": 0.0064396681139535505,
    "time": 83880.35009765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.65e+16) (/ (- (* (sqrt (fma b b (* a (* c -3.0)))) (* (sqrt (fma b b (* a (* c -3.0)))) (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) b) (* 3.0 a)) (/ (+ (- (+ (+ (sqrt (fma a (* c -3.0) (* b b))) 1.0) (- 1.0 b)) 1.0) -1.0) (* 3.0 a)))",
    "output_parens": 31,
    "avg_bits_err_input": 52.66005239941638,
    "avg_bits_err_output": 50.92182052563808,
    "avg_bits_err_improve": 1.7382318737782967,
    "time": 30076.193359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ 1.0 (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.78284198433713,
    "avg_bits_err_output": 28.76576245449391,
    "avg_bits_err_improve": 0.01707952984321892,
    "time": 25333.567626953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-22) (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (- (exp (log1p (/ 1.0 (fma b b (* a (* c -3.0)))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 44.025899448391854,
    "avg_bits_err_output": 42.57096739105819,
    "avg_bits_err_improve": 1.4549320573336644,
    "time": 28856.967529296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (- (- (fma b b (* c (* a 3.0))) (* b b)) (* b b))))) (* 3.0 a))",
    "output_parens": 13,
    "avg_bits_err_input": 34.50402994997815,
    "avg_bits_err_output": 34.504585464723995,
    "avg_bits_err_improve": -0.0005555147458480292,
    "time": 24429.714599609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (fma (sin phi1) (* (cos (- lambda1 lambda2)) (* (sin phi1) (/ (cos phi2) (sin phi1)))) 0.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 12.948513061722045,
    "avg_bits_err_output": 12.95867821069434,
    "avg_bits_err_improve": -0.010165148972294702,
    "time": 91534.77026367188,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))) (fma (- (- (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))))) (- (* (/ (+ 1.0 x) (+ -1.0 x)) (/ (+ 1.0 x) (+ -1.0 x)))) (/ (+ 1.0 x) (+ -1.0 x))))",
    "output_parens": 25,
    "avg_bits_err_input": 29.37113755413338,
    "avg_bits_err_output": 29.385334212298723,
    "avg_bits_err_improve": -0.014196658165342768,
    "time": 64551.62353515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (- (/ 1.0 (+ -1.0 x)) 1.0) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.011125,
    "avg_bits_err_output": 0.01634680468885217,
    "avg_bits_err_improve": -0.00522180468885217,
    "time": 6692.459228515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -5e+165) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (if (<= x 4e+161) (+ (* (/ 1.0 (+ -1.0 x)) (- (+ (+ 1.0 (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (/ -1.0 (/ 1.0 (+ -1.0 x))))) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.321671084054008,
    "avg_bits_err_output": 12.65847868478563,
    "avg_bits_err_improve": 1.6631923992683788,
    "time": 43779.71337890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* (- (pow B 2.0) (* A (* C 4.0))) (* 2.0 F)) (* (- (pow B 2.0) (* A (* C 4.0))) (* A (+ F F)))))) (- (pow B 2.0) (* A (* C 4.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 52.16865161148619,
    "avg_bits_err_output": 52.024314061779336,
    "avg_bits_err_improve": 0.14433754970685442,
    "time": 34847.658447265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.0025210089891,
    "avg_bits_err_output": 30.0025210089891,
    "avg_bits_err_improve": 0,
    "time": 48796.18505859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* A (* 4.0 C))) (+ F F))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.36921926210302,
    "avg_bits_err_output": 52.03449763066543,
    "avg_bits_err_improve": 0.3347216314375956,
    "time": 41090.73291015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.690131836924849,
    "avg_bits_err_output": 15.690131836924849,
    "avg_bits_err_improve": 0,
    "time": 2041.916015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 35.53274624010303,
    "avg_bits_err_output": 35.53274624010303,
    "avg_bits_err_improve": 0,
    "time": 29077.513427734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9904251890708848,
    "avg_bits_err_output": 0.9904251890708848,
    "avg_bits_err_improve": 0,
    "time": 4827.35791015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(expm1 (log1p (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.7035212406251803,
    "avg_bits_err_output": 0.709389285939213,
    "avg_bits_err_improve": -0.005868045314032733,
    "time": 9391.23974609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.326408975029926,
    "avg_bits_err_output": 11.326408975029926,
    "avg_bits_err_improve": 0,
    "time": 17561.7021484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3967590118918804,
    "avg_bits_err_output": 0.35021599005682036,
    "avg_bits_err_improve": 0.04654302183506004,
    "time": 7385.98388671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.82564529594612,
    "avg_bits_err_output": 15.568243953756141,
    "avg_bits_err_improve": 37.25740134218998,
    "time": 27169.5517578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.740093080754705,
    "avg_bits_err_output": 5.740093080754705,
    "avg_bits_err_improve": 0,
    "time": 28297.390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (* (/ (- 1.0 x) (+ 1.0 x)) (- (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))))) (* (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (- -1.0 (/ (- 1.0 x) (+ 1.0 x)))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.01475,
    "avg_bits_err_output": 0.017948120312590146,
    "avg_bits_err_improve": -0.003198120312590147,
    "time": 24619.076416015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1170.9423828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= w -2e+43) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* r (* (- 0.375 (* 0.25 v)) (* r w)))) (- 1.0 v))) (if (<= w 1.4e+142) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (* w (* r r)))) (- 1.0 v))))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.980985044843623,
    "avg_bits_err_output": 6.782120896090272,
    "avg_bits_err_improve": 6.1988641487533505,
    "time": 25612.98974609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* (+ (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* x1 (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)))) (+ (+ (* (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) (* (* x1 x1) 4.0)) (* x1 (* -6.0 x1))) (* (+ (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* x1 (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 67,
    "avg_bits_err_input": 0.5128586979480503,
    "avg_bits_err_output": 0.274308105272267,
    "avg_bits_err_improve": 0.23855059267578327,
    "time": 87024.4921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma (+ t1 u) u (* t1 (+ t1 u))))",
    "output_parens": 7,
    "avg_bits_err_input": 18.39720575079531,
    "avg_bits_err_output": 18.394705750795318,
    "avg_bits_err_improve": 0.0024999999999941735,
    "time": 41558.574951171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.23615584257481162,
    "avg_bits_err_output": 0.18730432343849157,
    "avg_bits_err_improve": 0.04885151913632005,
    "time": 20545.37890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003625,
    "avg_bits_err_output": 0.003625,
    "avg_bits_err_improve": 0,
    "time": 2836.148681640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.242238088516295,
    "avg_bits_err_output": 9.341059857244506,
    "avg_bits_err_improve": 4.901178231271789,
    "time": 42273.7626953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (expm1 (log1p (exp (* x (- -1.0 eps))))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 30.23530296898333,
    "avg_bits_err_output": 0.9319234100316197,
    "avg_bits_err_improve": 29.30337955895171,
    "time": 19993.8291015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.019,
    "avg_bits_err_output": 0.019,
    "avg_bits_err_improve": 0,
    "time": 11576.82763671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.022625,
    "avg_bits_err_output": 0.022625,
    "avg_bits_err_improve": 0,
    "time": 20533.634765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (fma (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)) 2.0) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.04875,
    "avg_bits_err_output": 0.04536560156295071,
    "avg_bits_err_improve": 0.0033843984370492894,
    "time": 49630.20361328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3222.56201171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2972.34912109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3219.409423828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.847342034684209,
    "avg_bits_err_output": 0.2395,
    "avg_bits_err_improve": 7.607842034684209,
    "time": 53183.313232421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.638903356860634,
    "avg_bits_err_output": 7.638903356860634,
    "avg_bits_err_improve": 0,
    "time": 29412.834716796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.03787629900214,
    "avg_bits_err_output": 16.03787629900214,
    "avg_bits_err_improve": 0,
    "time": 43600.202392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (/ (/ (exp (* x (* x 10.0))) (cos x)) (cos x)) (- (* (/ (/ (cos x) (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (/ (cos x) (* (cos x) (/ (exp (* x (* x 10.0))) (cos x))))) (exp (log1p (* (exp (* x (* x 10.0))) (* (cos x) (/ (cos x) (* (cos x) (/ (exp (* x (* x 10.0))) (cos x))))))))) (/ (/ (cos x) (* (cos x) (/ (exp (* x (* x 10.0))) (cos x)))) (/ (cos x) (* (cos x) (/ (exp (* x (* x 10.0))) (cos x))))))))",
    "output_parens": 67,
    "avg_bits_err_input": 3.5614595501176867,
    "avg_bits_err_output": 3.6376161995925687,
    "avg_bits_err_improve": -0.07615664947488199,
    "time": 40028.55078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.42939066357538,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.42939066357538,
    "time": 4755.36328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.73041824971003,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.729918249710025,
    "time": 4849.8486328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.293875,
    "avg_bits_err_improve": 63.706125,
    "time": 4068.564697265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(+ (- 0.0 (* -2e-16 (* t (* t 2e-16)))) (+ (+ (* t 2e-16) (- 0.0 (* t 4e-16))) (* t 2e-16)))",
    "output_parens": 11,
    "avg_bits_err_input": 61.8432546466958,
    "avg_bits_err_output": 0.41177161719245803,
    "avg_bits_err_improve": 61.43148302950334,
    "time": 23813.292724609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.47193849760178,
    "avg_bits_err_output": 34.47193849760178,
    "avg_bits_err_improve": 0,
    "time": 23048.818603515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.46880819558325,
    "avg_bits_err_output": 34.457562875138535,
    "avg_bits_err_improve": 0.011245320444714935,
    "time": 21291.235107421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1824.524658203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.95170034462739,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 39.94070034462739,
    "time": 3917.886962890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(log1p (expm1 (/ (- (* x x) (* y y)) (fma x x (* y y)))))",
    "output_parens": 8,
    "avg_bits_err_input": 20.466781533013744,
    "avg_bits_err_output": 20.46997452528024,
    "avg_bits_err_improve": -0.003192992266495054,
    "time": 7162.105712890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6390114363130643,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6390114363130643,
    "time": 4319.09326171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0.033624999999999995,
    "time": 6861.748046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.020969360937770437,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 0.010844360937770437,
    "time": 3368.67333984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.015,
    "avg_bits_err_output": 0.015,
    "avg_bits_err_improve": 0,
    "time": 3754.328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00125,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0,
    "time": 1395.65625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40246729375396656,
    "avg_bits_err_output": 0.240375,
    "avg_bits_err_improve": 0.16209229375396655,
    "time": 9861.842529296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- (* (- 1.0 (cos x)) (- 2.0 (cos x))) (* (+ (cos x) -1.0) (+ (cos x) -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 29.91012317378537,
    "avg_bits_err_output": 29.910123500988902,
    "avg_bits_err_improve": -3.2720353360105037e-07,
    "time": 116784.87524414062,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.34135249968183,
    "avg_bits_err_output": 24.338529721486626,
    "avg_bits_err_improve": 0.002822778195202602,
    "time": 24283.635498046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.08428995822381,
    "avg_bits_err_output": 30.08472868431169,
    "avg_bits_err_improve": -0.0004387260878786492,
    "time": 87825.09326171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007792481250360578,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.0071674812503605785,
    "time": 2740.29833984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output_parens": 7,
    "avg_bits_err_input": 47.80853741260593,
    "avg_bits_err_output": 47.80853741260593,
    "avg_bits_err_improve": 0,
    "time": 97084.82104492188,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* b d) (* a c)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.722039910265075,
    "avg_bits_err_output": 26.721738030577665,
    "avg_bits_err_improve": 0.0003018796874094676,
    "time": 45044.193115234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.48712388619866,
    "avg_bits_err_output": 26.48674888619866,
    "avg_bits_err_improve": 0.00037499999999823785,
    "time": 24568.73388671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.032125,
    "avg_bits_err_output": 0.020222849187341674,
    "avg_bits_err_improve": 0.011902150812658326,
    "time": 8260.38330078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (+ ux (* (- (* ux maxCos) ux) (+ (- -1.0 (* ux maxCos)) ux))) (* ux maxCos))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.636810760200278,
    "avg_bits_err_output": 0.5566780438377937,
    "avg_bits_err_improve": 13.080132716362485,
    "time": 32227.989990234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (+ (- ux (* ux maxCos)) (- ux (* ux (- maxCos (* (- ux (* ux maxCos)) (+ maxCos -1.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.665775788780483,
    "avg_bits_err_output": 0.33099734734574265,
    "avg_bits_err_improve": 13.33477844143474,
    "time": 32218.389404296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* 2.0 (* PI uy))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* 2.0 (* PI uy)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3375869690582136,
    "avg_bits_err_output": 0.32715297555378403,
    "avg_bits_err_improve": 0.010433993504429584,
    "time": 71405.42822265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19545630303031034,
    "avg_bits_err_output": 0.19545630303031034,
    "avg_bits_err_improve": 0,
    "time": 19274.5859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (* (* (sqrt (/ u1 (- 1.0 u1))) (/ 1.0 (sqrt (/ u1 (- 1.0 u1))))) (sqrt (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5380415291800155,
    "avg_bits_err_output": 0.5600763049787103,
    "avg_bits_err_improve": -0.02203477579869484,
    "time": 41381.67138671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* (* 6.28318530718 u2) (/ 1.0 (* 6.28318530718 u2))) (* 6.28318530718 u2))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3137584999820968,
    "avg_bits_err_output": 0.3216344060262239,
    "avg_bits_err_improve": -0.007875906044127079,
    "time": 52118.433349609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (log1p (expm1 (/ (- PI) s))))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))",
    "output_parens": 21,
    "avg_bits_err_input": 0.3369293245419511,
    "avg_bits_err_output": 0.3372028054056311,
    "avg_bits_err_improve": -0.0002734808636799535,
    "time": 42886.6474609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (- (+ (expm1 (/ (- x) s)) 3.0) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06315855607968592,
    "avg_bits_err_output": 0.06416099983076762,
    "avg_bits_err_improve": -0.0010024437510817025,
    "time": 15793.870361328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (- s (* s (- -1.0 (exp (/ (- (fabs x)) s))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1565690076009342,
    "avg_bits_err_output": 0.14142880012299835,
    "avg_bits_err_improve": 0.015140207477935846,
    "time": 27316.280517578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (expm1 (log1p (* x PI))) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6513452135954878,
    "avg_bits_err_output": 0.6835950235245164,
    "avg_bits_err_improve": -0.032249809929028594,
    "time": 28104.541748046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- (+ u (exp (/ -2.0 v))) (* u (exp (/ -2.0 v))))) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.16747158469483756,
    "avg_bits_err_output": 0.1762297183132954,
    "avg_bits_err_improve": -0.008758133618457842,
    "time": 34427.35693359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.612310869104001,
    "avg_bits_err_output": 2.6111192718829748,
    "avg_bits_err_improve": 0.0011915972210263526,
    "time": 61551.404541015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (* (sinh (/ 1.0 v)) (* (sinh (/ 1.0 v)) (/ 1.0 (sinh (/ 1.0 v))))) 2.0) v))",
    "output_parens": 19,
    "avg_bits_err_input": 0.4526825504145021,
    "avg_bits_err_output": 0.46714441621091923,
    "avg_bits_err_improve": -0.014461865796417117,
    "time": 26106.98291015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10742929765524199,
    "avg_bits_err_output": 0.10742929765524199,
    "avg_bits_err_improve": 0,
    "time": 44840.381591796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (fma (/ (/ PI PI) PI) (* PI (* (log (* alpha alpha)) PI)) 0.0) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.46684033353438215,
    "avg_bits_err_output": 0.4873610306518848,
    "avg_bits_err_improve": -0.02052069711750265,
    "time": 29759.819580078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (* 3.0 s) (* s (/ (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) (* 3.0 s)))))",
    "output_parens": 11,
    "avg_bits_err_input": 1.311871300643012,
    "avg_bits_err_output": 1.3562544708497741,
    "avg_bits_err_improve": -0.04438317020676208,
    "time": 35835.30908203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (* s (/ (log (/ 1.0 (- 1.0 (* 4.0 u)))) s)) s)",
    "output_parens": 7,
    "avg_bits_err_input": 12.31327778622974,
    "avg_bits_err_output": 12.320136506065616,
    "avg_bits_err_improve": -0.006858719835875604,
    "time": 129385.64111328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1346384577372028,
    "avg_bits_err_output": 0.1346384577372028,
    "avg_bits_err_improve": 0,
    "time": 37682.010009765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) (* (sin (- normAngle (* normAngle u))) (* (/ 1.0 (sin normAngle)) n0_i)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9343527535727689,
    "avg_bits_err_output": 0.9414315819587543,
    "avg_bits_err_improve": -0.007078828385985392,
    "time": 53889.79052734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (+ (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.7028325369087378,
    "avg_bits_err_output": 0.6934496457482161,
    "avg_bits_err_improve": 0.009382891160521711,
    "time": 61015.17236328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(+ (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))) (fma (- (* (sin (* 2.0 (* PI u2))) (* (/ 1.0 (sin (* 2.0 (* PI u2)))) (* (/ 1.0 (sin (* 2.0 (* PI u2)))) (/ 1.0 (/ 1.0 (sin (* 2.0 (* PI u2))))))))) (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 36,
    "avg_bits_err_input": 13.395732373251557,
    "avg_bits_err_output": 13.319735157581315,
    "avg_bits_err_improve": 0.07599721567024176,
    "time": 50066.855224609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(log (+ 1.0 (- (- (expm1 (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2))))) 1.0) -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.434744053587542,
    "avg_bits_err_output": 13.475762509923788,
    "avg_bits_err_improve": -0.041018456336246345,
    "time": 50715.114990234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (- (* alpha alpha)) (+ (* (- alpha) (+ alpha (* alpha (/ alpha (- alpha))))) (fma (- alpha) alpha (* alpha alpha))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.340866284373869,
    "avg_bits_err_output": 14.27168521417364,
    "avg_bits_err_improve": 0.06918107020022823,
    "time": 31450.064208984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (* (/ cos2phi (* alphax alphax)) (log (+ 1.0 (expm1 (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax)))))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 19,
    "avg_bits_err_input": 12.601033155138609,
    "avg_bits_err_output": 12.61103577317773,
    "avg_bits_err_improve": -0.010002618039120392,
    "time": 41382.30615234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (* l (/ PI l)) 0.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.22565607336345,
    "avg_bits_err_output": 16.250056303201546,
    "avg_bits_err_improve": -0.024400229838096976,
    "time": 35375.9599609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21874060156295072,
    "avg_bits_err_output": 0.21874060156295072,
    "avg_bits_err_improve": 0,
    "time": 32887.91064453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.570001173261042,
    "avg_bits_err_output": 13.570001173261042,
    "avg_bits_err_improve": 0,
    "time": 41117.382080078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.9e-151) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x)))))))) (if (<= t 6.5e-238) (/ (* (sqrt 2.0) t) (expm1 (log1p (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))))) (/ (- (* (fma t (/ -1.0 t) (sqrt 2.0)) t) (- t)) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 57,
    "avg_bits_err_input": 42.57509323770458,
    "avg_bits_err_output": 35.911755415003206,
    "avg_bits_err_improve": 6.663337822701372,
    "time": 35667.368408203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (expm1 (log1p (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 4.150766573662981,
    "avg_bits_err_output": 4.164936498664424,
    "avg_bits_err_improve": -0.014169925001443318,
    "time": 48902.279052734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (fma (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)) 1.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9363905959419778,
    "avg_bits_err_output": 0.9363905959419778,
    "avg_bits_err_improve": 0,
    "time": 11434.85302734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.298768464718043,
    "avg_bits_err_output": 10.298768464718043,
    "avg_bits_err_improve": 0,
    "time": 44254.785888671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-293) (sqrt (* (- (* n (* (pow (/ l Om) 2.0) (* U (- U U*)))) (* U (- t (* 2.0 (/ (* l l) Om))))) (* n -2.0))) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))))",
    "output_parens": 44,
    "avg_bits_err_input": 35.01707994436509,
    "avg_bits_err_output": 33.525548833848845,
    "avg_bits_err_improve": 1.4915311105162488,
    "time": 26423.45947265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+144) (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (pow (/ k t) 2.0) 0.0))) (/ 2.0 (* (pow (/ k t) 2.0) (+ (* (/ (pow t 3.0) (* l l)) (* (tan k) (sin k))) (fma (- (sin k)) (* (tan k) (/ (sin k) (sin k))) (* (tan k) (sin k)))))))",
    "output_parens": 50,
    "avg_bits_err_input": 47.900483413567684,
    "avg_bits_err_output": 37.637892188343024,
    "avg_bits_err_improve": 10.26259122522466,
    "time": 47687.464111328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.95536768404197,
    "avg_bits_err_output": 32.932941312667886,
    "avg_bits_err_improve": 0.0224263713740811,
    "time": 66188.92993164062,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a2) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5071832734586856,
    "avg_bits_err_output": 0.5030063937712757,
    "avg_bits_err_improve": 0.0041768796874099845,
    "time": 40418.469970703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* (* 2.0 PI) (* PI (/ (* 2.0 (/ n (* 2.0 PI))) PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.5371243047279676,
    "avg_bits_err_output": 0.5538427397300908,
    "avg_bits_err_improve": -0.016718435002123222,
    "time": 39593.5126953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp (- l)) (* (cos (/ K 2.0)) (* (exp (- l)) (/ (- J) (exp (- l))))) (* J (* (exp l) (cos (/ K 2.0))))) U)",
    "output_parens": 19,
    "avg_bits_err_input": 17.263152104342474,
    "avg_bits_err_output": 17.293625418453303,
    "avg_bits_err_improve": -0.030473314110828653,
    "time": 34673.043701171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ n m) (* (+ (* (+ n m) (* m (/ (/ (/ K (+ n m)) (+ n m)) (+ n m)))) (* (* (+ n m) (/ (/ (/ K (+ n m)) (+ n m)) (+ n m))) n)) (+ n m))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 69,
    "avg_bits_err_input": 14.61046555967511,
    "avg_bits_err_output": 5.124250378546557,
    "avg_bits_err_improve": 9.486215181128554,
    "time": 22842.680419921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.37494812031259,
    "avg_bits_err_output": 18.37494812031259,
    "avg_bits_err_improve": 0,
    "time": 24740.644287109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(fma (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ w0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))) 0.0)",
    "output_parens": 27,
    "avg_bits_err_input": 14.388696426827504,
    "avg_bits_err_output": 14.921107224248779,
    "avg_bits_err_improve": -0.5324107974212744,
    "time": 10779.338623046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.034376758014886,
    "avg_bits_err_output": 19.034376758014886,
    "avg_bits_err_improve": 0,
    "time": 24547.643310546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* h D)))) (sqrt (* (- (/ (* d (* c0 d)) (* D (* w (* h D)))) M) (+ (/ (* d (* c0 d)) (* D (* w (* h D)))) M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.680442275452414,
    "avg_bits_err_output": 56.31500679399739,
    "avg_bits_err_improve": 3.365435481455023,
    "time": 34859.33642578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(+ (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (- (* (pow (/ d l) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* 0.5 (/ h l)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 26.930657258275332,
    "avg_bits_err_output": 26.302411482322217,
    "avg_bits_err_improve": 0.6282457759531148,
    "time": 48707.14794921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (- 1.0 (* v v)) PI) (* 3.0 (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9846981203125902,
    "avg_bits_err_output": 0.014469360937770435,
    "avg_bits_err_improve": 0.9702287593748198,
    "time": 20525.628662109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* (* v v) 5.0)) (* (- t (* v (* v t))) (* (sqrt (- 2.0 (* v (* v 6.0)))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4177905635405,
    "avg_bits_err_output": 0.34536330728581205,
    "avg_bits_err_improve": 0.07242725625468793,
    "time": 28526.430419921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011594360937770434,
    "avg_bits_err_output": 0.011594360937770434,
    "avg_bits_err_improve": 0,
    "time": 13598.320556640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5259832657021648,
    "avg_bits_err_output": 0.5259832657021648,
    "avg_bits_err_improve": 0,
    "time": 14087.83544921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.32511591314059,
    "avg_bits_err_output": 2.32511591314059,
    "avg_bits_err_improve": 0,
    "time": 9790.1796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.0160842797537534,
    "avg_bits_err_output": 0.0160842797537534,
    "avg_bits_err_improve": 0,
    "time": 8329.33935546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18960905390214727,
    "avg_bits_err_output": 0.18960905390214727,
    "avg_bits_err_improve": 0,
    "time": 38910.594970703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (+ (* a (* a a)) (* a a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1865633717196659,
    "avg_bits_err_output": 0.18679513692473326,
    "avg_bits_err_improve": -0.00023176520506737464,
    "time": 18370.171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1860512990690369,
    "avg_bits_err_output": 0.1860512990690369,
    "avg_bits_err_improve": 0,
    "time": 25229.11572265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.049863174189971,
    "avg_bits_err_output": 13.049863174189971,
    "avg_bits_err_improve": 0,
    "time": 17405.204833984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (* (* (expm1 x) (/ 1.0 (expm1 x))) (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 41.581795527543186,
    "avg_bits_err_output": 0.04275,
    "avg_bits_err_improve": 41.53904552754319,
    "time": 12602.285400390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (+ -1.0 (- 1.0 (tan x))) x))",
    "output_parens": 7,
    "avg_bits_err_input": 31.616592616403562,
    "avg_bits_err_output": 30.77603660323345,
    "avg_bits_err_improve": 0.8405560131701115,
    "time": 28641.764892578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (- (* b_2 b_2) (* c a)) (+ (fma (* (/ c c) (- a)) c (* a c)) (fma (* (/ c c) (- a)) c (* a c))))) b_2) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.45107456429824,
    "avg_bits_err_output": 34.46154392523601,
    "avg_bits_err_improve": -0.010469360937769068,
    "time": 23404.009033203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.62861518651838,
    "avg_bits_err_output": 34.62861518651838,
    "avg_bits_err_improve": 0,
    "time": 16367.1640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.382620110201913,
    "avg_bits_err_output": 31.382620110201913,
    "avg_bits_err_improve": 0,
    "time": 29573.6357421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (- (+ 1.0 (pow (+ x 1.0) (/ 1.0 n))) 1.0) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.97007266637754,
    "avg_bits_err_output": 32.99757092690555,
    "avg_bits_err_improve": -0.027498260528012963,
    "time": 27138.468017578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(+ (- (log1p N) (+ (log N) 2.0)) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.545799160346263,
    "avg_bits_err_output": 29.552222442458394,
    "avg_bits_err_improve": -0.006423282112130835,
    "time": 27915.286376953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (* (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ 1.0 x)) -1.0)) (/ 1.0 x)) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.45404023870485,
    "avg_bits_err_output": 0.6095893928934308,
    "avg_bits_err_improve": 13.84445084581142,
    "time": 43400.388671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (+ (+ (cos (+ x eps)) -1.0) 1.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 40.45591082540549,
    "avg_bits_err_output": 40.47023020434002,
    "avg_bits_err_improve": -0.014319378934530391,
    "time": 35062.702880859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (log1p (expm1 (+ (cbrt (+ x 1.0)) (- -1.0 (cbrt x))))) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.832082985190723,
    "avg_bits_err_output": 29.53381711893694,
    "avg_bits_err_improve": 0.29826586625378226,
    "time": 32351.7890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.87957046301514,
    "avg_bits_err_output": 30.87957046301514,
    "avg_bits_err_improve": 0,
    "time": 58644.906982421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma c (* a -4.0) (* b b)) (* a (* (* c 4.0) (- 1.0 (* a (/ (/ a a) a)))))))) (* 2.0 a))",
    "output_parens": 16,
    "avg_bits_err_input": 34.453524917576104,
    "avg_bits_err_output": 34.518292099637755,
    "avg_bits_err_improve": -0.06476718206165089,
    "time": 19885.274658203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 35.01359457323689,
    "avg_bits_err_output": 35.05077885800009,
    "avg_bits_err_improve": -0.037184284763206676,
    "time": 21140.4384765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.5) (/ (* (/ 1.0 (- (+ 1.0 (log (- 1.0 x))) 1.0)) (* (log (- 1.0 x)) (log (- 1.0 x)))) (- (- (log1p x) 1.0) -1.0)) (/ (log (- 1.0 x)) (log1p x)))",
    "output_parens": 26,
    "avg_bits_err_input": 61.617755739700655,
    "avg_bits_err_output": 59.30649208469124,
    "avg_bits_err_improve": 2.3112636550094123,
    "time": 88478.19799804688,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00704683582842,
    "avg_bits_err_output": 0.06531216862285706,
    "avg_bits_err_improve": 62.94173466720556,
    "time": 33424.25341796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.510085398497004,
    "avg_bits_err_output": 58.51176549927495,
    "avg_bits_err_improve": -0.0016801007779463362,
    "time": 13402.284912109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (- (* (/ 1.0 (/ 1.0 (tan x))) (* (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (/ 1.0 (/ 1.0 (tan x)))))) (- (fma 1.0 (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x))) (/ 1.0 (tan x)))) (- (/ 1.0 x) (/ 1.0 (tan x))))",
    "output_parens": 27,
    "avg_bits_err_input": 59.818693213327315,
    "avg_bits_err_output": 52.16124755149501,
    "avg_bits_err_improve": 7.6574456618323055,
    "time": 56621.768310546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (fma (expm1 (* eps (+ a b))) (* (* eps (/ (/ (expm1 (* eps (+ a b))) (expm1 (* eps (+ a b)))) (expm1 (* eps (+ a b))))) (expm1 (* eps (+ a b)))) 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 26,
    "avg_bits_err_input": 60.298200043857314,
    "avg_bits_err_output": 41.20286837914315,
    "avg_bits_err_improve": 19.095331664714166,
    "time": 31126.6494140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.96361656350097,
    "avg_bits_err_output": 0.4385943609377705,
    "avg_bits_err_improve": 41.5250222025632,
    "time": 35698.4052734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.6588772568554,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.6580022568554,
    "time": 6572.816650390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.42017257535626,
    "avg_bits_err_output": 0.016070789202753646,
    "avg_bits_err_improve": 29.404101786153507,
    "time": 12274.248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.97926091000864,
    "avg_bits_err_output": 29.008416665606124,
    "avg_bits_err_improve": 0.9708442444025174,
    "time": 27075.10205078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.523050693013245,
    "avg_bits_err_output": 9.523050693013245,
    "avg_bits_err_improve": 0,
    "time": 93054.93872070312,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.559457049524056,
    "avg_bits_err_output": 36.58927566737645,
    "avg_bits_err_improve": -0.029818617852392038,
    "time": 36728.797607421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (fma (- -1.0 (sqrt x)) (* (- -1.0 (sqrt x)) (/ 1.0 (- -1.0 (sqrt x)))) (sqrt (- x -1.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.066230535009122,
    "avg_bits_err_output": 29.410060578565417,
    "avg_bits_err_improve": 0.6561699564437049,
    "time": 36947.662841796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (* (sin (+ x eps)) (* (sin (+ x eps)) (/ 1.0 (sin (+ x eps))))) (log1p (expm1 (- (sin x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 37.50143438815844,
    "avg_bits_err_output": 37.554966980662286,
    "avg_bits_err_improve": -0.05353259250384923,
    "time": 38352.88134765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (+ (+ (sqrt (+ 1.0 x)) 2.0) -2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.546716205344698,
    "avg_bits_err_output": 19.54736445306377,
    "avg_bits_err_improve": -0.0006482477190736802,
    "time": 27348.10595703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (- (atan N)) (* (- (atan N)) (/ 1.0 (- (atan N)))) (atan (+ 1.0 N)))",
    "output_parens": 11,
    "avg_bits_err_input": 14.54986387644225,
    "avg_bits_err_output": 14.552528457003122,
    "avg_bits_err_improve": -0.002664580560871599,
    "time": 32704.9560546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.5427609228867,
    "avg_bits_err_output": 29.5427609228867,
    "avg_bits_err_improve": 0,
    "time": 47297.303466796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07596240625180288,
    "avg_bits_err_output": 0.07596240625180288,
    "avg_bits_err_improve": 0,
    "time": 42946.764404296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (+ (* (* b a) (* b a)) (* (* b (- a)) (fma (- b) a (* b a)))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.31332318650586,
    "avg_bits_err_output": 0.257375,
    "avg_bits_err_improve": 16.05594818650586,
    "time": 16124.12060546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.741136635939192,
    "avg_bits_err_output": 20.73725508262261,
    "avg_bits_err_improve": 0.0038815533165816873,
    "time": 73311.8955078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.095909298799665,
    "avg_bits_err_output": 31.09721243046924,
    "avg_bits_err_improve": -0.0013031316695766293,
    "time": 65046.631103515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ (/ (/ angle 180.0) (/ angle 180.0)) PI) (* (/ angle 180.0) (* PI PI))))) 2.0) (pow (* b (cos (- (* (/ angle 180.0) (exp (log1p (* PI (/ (/ angle 180.0) (/ angle 180.0)))))) (/ angle 180.0)))) 2.0))",
    "output_parens": 25,
    "avg_bits_err_input": 20.55448105433022,
    "avg_bits_err_output": 20.576040490593808,
    "avg_bits_err_improve": -0.021559436263586917,
    "time": 127917.11962890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(+ (fma m (/ (- m (* m m)) v) (- m)) (fma (- (/ (- m (* m m)) v)) (- m) (* (/ (- m (* m m)) v) (- m))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.17812744375108172,
    "avg_bits_err_output": 0.16959172444079,
    "avg_bits_err_improve": 0.008535719310291734,
    "time": 29064.775390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3237485555484409,
    "avg_bits_err_output": 0.3218775334255321,
    "avg_bits_err_improve": 0.0018710221229087942,
    "time": 24307.4921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13684436093777044,
    "avg_bits_err_output": 0.13684436093777044,
    "avg_bits_err_improve": 0,
    "time": 38588.154296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos (- lambda1 lambda2))) (cos phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.749913700046047,
    "avg_bits_err_output": 16.741738043275998,
    "avg_bits_err_improve": 0.0081756567700495,
    "time": 58012.910888671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.4e+16) (/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma b b (* c (* a -4.0))) (* (fma b b (* c (* a -4.0))) (/ 1.0 (fma b b (* c (* a -4.0)))))))) (- b)) (+ a a)) (/ (- (- (- (sqrt (fma b b (* a (* c -4.0)))) -1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 38,
    "avg_bits_err_input": 52.24080678802017,
    "avg_bits_err_output": 50.19033007253692,
    "avg_bits_err_improve": 2.0504767154832493,
    "time": 23822.214111328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma (* c -8.0) a (* (fma b b (* c (* a 4.0))) (* (fma b b (* c (* a 4.0))) (/ 1.0 (fma b b (* c (* a 4.0))))))))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 28.163699049436563,
    "avg_bits_err_output": 28.208191413636442,
    "avg_bits_err_improve": -0.04449236419987912,
    "time": 20356.55615234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-21) (/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a)) (/ (- (- (- (exp (log (+ (sqrt (fma b b (* a (* c -4.0)))) 2.0))) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 30,
    "avg_bits_err_input": 43.55315757788315,
    "avg_bits_err_output": 42.616781995005255,
    "avg_bits_err_improve": 0.9363755828778935,
    "time": 25885.072998046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (sqrt (fma a (* c -4.0) (* b b))) (* (/ -1.0 b) (* b b))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.47102289653146,
    "avg_bits_err_output": 35.11093335743055,
    "avg_bits_err_improve": -0.6399104608990882,
    "time": 16929.777099609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (fma (sin (- lambda1 lambda2)) (* (sin (- lambda1 lambda2)) (/ (cos phi2) (* (sin (- lambda1 lambda2)) (* (sin (- lambda1 lambda2)) (/ 1.0 (sin (- lambda1 lambda2))))))) 0.0) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.8806065906188587,
    "avg_bits_err_output": 0.9091420268695016,
    "avg_bits_err_improve": -0.02853543625064292,
    "time": 36885.575927734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 28.599473414399565,
    "avg_bits_err_output": 28.60177693333861,
    "avg_bits_err_improve": -0.0023035189390441246,
    "time": 3940.19091796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 57.93453049033198,
    "avg_bits_err_output": 1.1954293234384918,
    "avg_bits_err_improve": 56.73910116689349,
    "time": 12176.455322265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.90369207397151,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 57.89406707397151,
    "time": 4920.154296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ 1.0 (+ (exp (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.005948120312590145,
    "avg_bits_err_output": 0.007636842188131011,
    "avg_bits_err_improve": -0.0016887218755408662,
    "time": 3598.502685546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.68993242895233,
    "avg_bits_err_output": 31.68993242895233,
    "avg_bits_err_improve": 0,
    "time": 5281.2314453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (log (exp (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.502049688533155,
    "avg_bits_err_output": 58.516246035039224,
    "avg_bits_err_improve": -0.01419634650606838,
    "time": 137685.25805664062,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.003625,
    "avg_bits_err_output": 0.003625,
    "avg_bits_err_improve": 0,
    "time": 3017.507568359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (cos (atan (/ (/ eh ew) (tan t))))) (sin t)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.131875,
    "avg_bits_err_output": 0.132,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 36888.062744140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12189624062518029,
    "avg_bits_err_output": 0.12189624062518029,
    "avg_bits_err_improve": 0,
    "time": 34529.318603515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma lambda2 (- (cos (/ (+ phi1 phi2) 2.0))) (- (* lambda1 (- (cos (/ (+ phi1 phi2) 2.0)))))) (- phi1 phi2)))",
    "output_parens": 14,
    "avg_bits_err_input": 39.14955991869289,
    "avg_bits_err_output": 3.616625439626638,
    "avg_bits_err_improve": 35.53293447906625,
    "time": 42422.38330078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.030912421810992,
    "avg_bits_err_output": 15.03358332906923,
    "avg_bits_err_improve": -0.0026709072582384863,
    "time": 5001.714599609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (log (exp (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1634541690030238,
    "avg_bits_err_output": 0.19629667213847862,
    "avg_bits_err_improve": -0.03284250313545481,
    "time": 48074.449462890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-32) (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (+ (+ (/ 1.0 (fma b b (* a (* c -3.0)))) 2.0) -2.0))))) (* 3.0 a)))",
    "output_parens": 39,
    "avg_bits_err_input": 52.281141624971596,
    "avg_bits_err_output": 50.641384407130886,
    "avg_bits_err_improve": 1.6397572178407103,
    "time": 28830.482177734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* a (* c -3.0))) (* (fma b b (* a (* c -3.0))) (/ (* (/ 1.0 (fma b b (* a (* c -3.0)))) (/ 1.0 (/ 1.0 (fma b b (* a (* c -3.0)))))) (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 27,
    "avg_bits_err_input": 28.35602565152832,
    "avg_bits_err_output": 28.331038045734747,
    "avg_bits_err_improve": 0.024987605793572953,
    "time": 20647.03564453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-21) (/ (- (sqrt (fma b b (fma (* c -3.0) (* -3.0 (* (/ a (* c -3.0)) c)) 0.0))) b) (* 3.0 a)) (/ (- (* (sqrt (fma c (* a -3.0) (* b b))) (* (sqrt (fma c (* a -3.0) (* b b))) (/ 1.0 (sqrt (log1p (expm1 (fma a (* c -3.0) (* b b)))))))) b) (* 3.0 a)))",
    "output_parens": 42,
    "avg_bits_err_input": 43.60290176876151,
    "avg_bits_err_output": 41.97301917588653,
    "avg_bits_err_improve": 1.629882592874985,
    "time": 38363.868896484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.48780767584708,
    "avg_bits_err_output": 34.48780767584708,
    "avg_bits_err_improve": 0,
    "time": 22465.046142578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (- (sin phi1)) (+ -1.0 (- 1.0 (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.212609150528868,
    "avg_bits_err_output": 13.230077343341378,
    "avg_bits_err_improve": -0.017468192812509997,
    "time": 74654.71411132812,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.079432701395508,
    "avg_bits_err_output": 29.079432701395508,
    "avg_bits_err_improve": 0,
    "time": 29525.126953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0,
    "time": 5599.755126953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* C (* A 4.0))) (+ F F))))) (- (pow B 2.0) (* C (* A 4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.48032292019452,
    "avg_bits_err_output": 52.16753645328143,
    "avg_bits_err_improve": 0.31278646691308865,
    "time": 36771.182861328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (log1p (expm1 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))))",
    "output_parens": 14,
    "avg_bits_err_input": 29.428998426865522,
    "avg_bits_err_output": 29.430665897309705,
    "avg_bits_err_improve": -0.0016674704441825838,
    "time": 31585.9794921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (fma (- (pow B 2.0) (* A (* C 4.0))) (* (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* 2.0 F)) (* C (* F (* -2.0 (- (* A (* C 4.0)) (pow B 2.0)))))))) (- (pow B 2.0) (* 4.0 (* C A))))",
    "output_parens": 27,
    "avg_bits_err_input": 52.40359133940805,
    "avg_bits_err_output": 52.20567148660861,
    "avg_bits_err_improve": 0.19791985279944413,
    "time": 36364.064697265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.752350087011,
    "avg_bits_err_output": 15.752350087011,
    "avg_bits_err_improve": 0,
    "time": 1695.589111328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (cbrt (* (/ 1.0 (+ a a)) (- (- g) (sqrt (+ (* h (- g h)) (* g (- g h))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 35.99520121547135,
    "avg_bits_err_output": 36.00027311360762,
    "avg_bits_err_improve": -0.005071898136272068,
    "time": 11585.149658203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (expm1 (log1p (/ (acos (/ (- g) h)) 3.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9882127828190815,
    "avg_bits_err_output": 0.9885877828190816,
    "avg_bits_err_improve": -0.0003750000000000142,
    "time": 9790.05126953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6085433791303934,
    "avg_bits_err_output": 0.6085433791303934,
    "avg_bits_err_improve": 0,
    "time": 2749.806396484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.32111551295781,
    "avg_bits_err_output": 11.32111551295781,
    "avg_bits_err_improve": 0,
    "time": 6092.85107421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4924154457670652,
    "avg_bits_err_output": 0.459125,
    "avg_bits_err_improve": 0.03329044576706519,
    "time": 12579.96044921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -1.65e-162) (log (log (fma (+ (exp (+ x (hypot 1.0 x))) 2.0) (* (+ (exp (+ x (hypot 1.0 x))) 2.0) (/ 1.0 (+ (exp (- (+ x (+ 1.0 (hypot 1.0 x))) 1.0)) 2.0))) -2.0))) (- (+ 1.0 (log (+ x (hypot 1.0 x)))) 1.0))",
    "output_parens": 26,
    "avg_bits_err_input": 53.03431540410139,
    "avg_bits_err_output": 42.59804437316486,
    "avg_bits_err_improve": 10.436271030936531,
    "time": 14151.83837890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (- (+ (log b) -1.0) (- -1.0 (log a))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.650665790699693,
    "avg_bits_err_output": 5.653138057751588,
    "avg_bits_err_improve": -0.0024722670518944057,
    "time": 29302.7509765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (expm1 (log1p (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.018125,
    "avg_bits_err_improve": -0.003624999999999998,
    "time": 3957.459228515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1184.206787109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -1e+216) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 2e+154) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.898187306960708,
    "avg_bits_err_output": 7.032809617965811,
    "avg_bits_err_improve": 5.865377688994896,
    "time": 33507.35693359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (+ (* (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) (* (+ (/ (fma x1 (* x1 3.0) (+ x2 (- x2 x1))) (fma x1 x1 1.0)) -3.0) (* x1 2.0))) (* x1 (* -6.0 x1))) (* x1 (* x1 (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) 4.0)))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5135698396923305,
    "avg_bits_err_output": 0.2846235024937764,
    "avg_bits_err_improve": 0.22894633719855412,
    "time": 74436.04931640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.915628747042692,
    "avg_bits_err_output": 17.915628747042692,
    "avg_bits_err_improve": 0,
    "time": 30644.725341796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- x (* x (+ (* x (* x 0.12900613773279798)) 0.045070341448628)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.25346936093777045,
    "avg_bits_err_output": 0.1089293234384916,
    "avg_bits_err_improve": 0.14454003749927885,
    "time": 17266.5498046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 3406.93017578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.770976513200347,
    "avg_bits_err_output": 9.749576094699956,
    "avg_bits_err_improve": 5.0214004185003915,
    "time": 45996.906494140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (expm1 (log1p (exp (* x (- -1.0 eps))))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.453644125620823,
    "avg_bits_err_output": 0.9120907663965979,
    "avg_bits_err_improve": 28.541553359224224,
    "time": 26924.411376953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 13985.259765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.01625,
    "avg_bits_err_output": 0.01564624062518029,
    "avg_bits_err_improve": 0.0006037593748197088,
    "time": 45055.57080078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ 1.0 t))) (* (/ (+ t t) (+ 1.0 t)) (+ 1.0 (/ (+ t t) (+ 1.0 t))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.03925,
    "avg_bits_err_output": 0.041688721875540874,
    "avg_bits_err_improve": -0.0024387218755408738,
    "time": 11276.032958984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3120.14697265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3050.1640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (fma 9.0 (pow x 4.0) (- 1.0 (pow y 4.0))) -1.0) (* y (* 2.0 y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3553.54052734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (fma x (- x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 7.801530994643082,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 7.558530994643082,
    "time": 54077.105224609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.8289289514031815,
    "avg_bits_err_output": 7.8289289514031815,
    "avg_bits_err_improve": 0,
    "time": 39661.2646484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.614361036599533,
    "avg_bits_err_output": 16.614361036599533,
    "avg_bits_err_improve": 0,
    "time": 42794.70068359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (exp (* 10.0 (* x x))) (* (cos x) (exp (log1p (/ (cos x) (cos x))))) (fma (+ (expm1 (* 10.0 (* x x))) 1.0) (exp (log1p (- (cos x)))) (- (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (/ 1.0 (exp (* 10.0 (* x x)))))))))",
    "output_parens": 33,
    "avg_bits_err_input": 3.564018320784271,
    "avg_bits_err_output": 3.568803342017944,
    "avg_bits_err_improve": -0.004785021233673081,
    "time": 33915.255615234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.65687027405402,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.65687027405402,
    "time": 5143.30859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.03638582326905,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.03588582326905,
    "time": 5747.277099609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.299375,
    "avg_bits_err_improve": 63.700625,
    "time": 3801.01806640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t (* 4e-32 (/ t (* t 4e-32)))) (* t 4e-32))",
    "output_parens": 6,
    "avg_bits_err_input": 61.84325519148306,
    "avg_bits_err_output": 0.36246146876983254,
    "avg_bits_err_improve": 61.48079372271323,
    "time": 24403.53271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c (* a (/ -4.0 a))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 35.01359457323689,
    "avg_bits_err_output": 35.05077885800009,
    "avg_bits_err_improve": -0.037184284763206676,
    "time": 21991.508056640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (sqrt (fma a (* c -4.0) (* b b))) (* (/ -1.0 b) (* b b))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.47102289653146,
    "avg_bits_err_output": 35.11093335743055,
    "avg_bits_err_improve": -0.6399104608990882,
    "time": 22761.027587890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2313.179443359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.386030501860056,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 40.37503050186005,
    "time": 5847.93408203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.900819241230433,
    "avg_bits_err_output": 19.901463197678645,
    "avg_bits_err_improve": -0.000643956448211469,
    "time": 4153.076171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6717340797998848,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6717340797998848,
    "time": 4784.316162109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04275,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.04225,
    "time": 5583.44677734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02177124062518029,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.01152124062518029,
    "time": 4100.73876953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* (+ x 1.0) (* x x))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.02254248125036058,
    "avg_bits_err_improve": -0.00916748125036058,
    "time": 3425.158935546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1881.95263671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ c (+ d (+ b a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4040216171924582,
    "avg_bits_err_output": 0.23325,
    "avg_bits_err_improve": 0.1707716171924582,
    "time": 9583.8720703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.880607605573434,
    "avg_bits_err_output": 29.880607605573434,
    "avg_bits_err_improve": 0,
    "time": 47593.612060546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.61180531814241,
    "avg_bits_err_output": 24.612546099180864,
    "avg_bits_err_improve": -0.0007407810384556512,
    "time": 20616.995849609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (- x (sin x)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.371839472538547,
    "avg_bits_err_output": 30.371839472538547,
    "avg_bits_err_improve": 0,
    "time": 118372.64013671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006600919365257201,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.005725919365257201,
    "time": 3302.972412109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(* 100.0 (/ (log (exp (+ -1.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)))",
    "output_parens": 9,
    "avg_bits_err_input": 47.40229719414461,
    "avg_bits_err_output": 47.43796990176697,
    "avg_bits_err_improve": -0.03567270762236063,
    "time": 89993.34008789062,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.114874810140503,
    "avg_bits_err_output": 26.114874810140503,
    "avg_bits_err_improve": 0,
    "time": 37693.800537109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.210439665110023,
    "avg_bits_err_output": 26.210439665110023,
    "avg_bits_err_improve": 0,
    "time": 21154.996337890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ 1.0 (* ux (fma ux (/ -1.0 ux) maxCos)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.03208979560202489,
    "avg_bits_err_improve": 0.004910204397975106,
    "time": 6608.04931640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (log1p (expm1 (sin (* 2.0 (* uy PI))))) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (- (* (* ux maxCos) (+ (* ux maxCos) 2.0)) (* ux (fma ux maxCos 1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.701491355935918,
    "avg_bits_err_output": 0.5560200140428009,
    "avg_bits_err_improve": 13.145471341893117,
    "time": 34709.534912109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- ux (- ux)) (- (+ (* ux (fma maxCos (- (- (fma ux maxCos 2.0) ux) ux) ux)) 0.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.736653736431963,
    "avg_bits_err_output": 0.3297590380766351,
    "avg_bits_err_improve": 13.406894698355329,
    "time": 33589.05322265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* maxCos (* (* ux (* (- 1.0 ux) maxCos)) (- 1.0 ux)))))) (+ (* (cos (* uy (* 2.0 PI))) xi) (* (sin (- (- (* uy (* 2.0 PI)) (* uy (- uy))) (* uy uy))) yi))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.34700233475199505,
    "avg_bits_err_output": 0.34672709652189765,
    "avg_bits_err_improve": 0.00027523823009739656,
    "time": 71677.76000976562,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.1992409899958042,
    "avg_bits_err_output": 0.19904286968321405,
    "avg_bits_err_improve": 0.0001981203125901443,
    "time": 18388.83251953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5327953589052737,
    "avg_bits_err_output": 0.48074280265106084,
    "avg_bits_err_improve": 0.0520525562542129,
    "time": 81718.90673828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (+ (fma 6.28318530718 u2 1.0) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3269974191468956,
    "avg_bits_err_output": 0.34433759720736445,
    "avg_bits_err_improve": -0.017340178060468836,
    "time": 44475.4912109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (+ (- (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u))))))) (* s (/ (fma s (- (/ -1.0 s)) (- (/ s s))) s))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.33157011017982335,
    "avg_bits_err_output": 0.4123351881475786,
    "avg_bits_err_improve": -0.08076507796775523,
    "time": 34933.7197265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05277137048278721,
    "avg_bits_err_output": 0.05337288961910728,
    "avg_bits_err_improve": -0.0006015191363200681,
    "time": 11701.5048828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14704880041152202,
    "avg_bits_err_output": 0.13050260310957718,
    "avg_bits_err_improve": 0.016546197301944843,
    "time": 21749.96533203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (- (- (/ (sin (* x PI)) (* x PI)) 1.0) -1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6610546146344237,
    "avg_bits_err_output": 0.6632608147551395,
    "avg_bits_err_improve": -0.0022062001207158177,
    "time": 17889.910400390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (- (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) 1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1607340264575818,
    "avg_bits_err_output": 0.16784745871303194,
    "avg_bits_err_improve": -0.007113432255450136,
    "time": 37912.0087890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4787252456347293,
    "avg_bits_err_output": 2.4752293728899977,
    "avg_bits_err_improve": 0.0034958727447316207,
    "time": 75796.88134765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ (+ (/ (* sinTheta_i sinTheta_O) v) 1.0) -1.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.44697668449907874,
    "avg_bits_err_output": 0.4478516844990787,
    "avg_bits_err_improve": -0.0008749999999999591,
    "time": 36575.657958984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (+ (+ (+ (log (/ 1.0 (+ v v))) 3.0) -3.0) (- 0.6931 (/ 1.0 v)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.1127232469302494,
    "avg_bits_err_output": 0.11493726503296559,
    "avg_bits_err_improve": -0.002214018102716181,
    "time": 9850.076171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46684617393572764,
    "avg_bits_err_output": 0.46684617393572764,
    "avg_bits_err_improve": 0,
    "time": 24111.28857421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (exp (* 3.0 (log (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.3155586273297748,
    "avg_bits_err_output": 1.3320527627558927,
    "avg_bits_err_improve": -0.016494135426117884,
    "time": 87265.41625976562,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.177074462391777,
    "avg_bits_err_output": 11.842326103212915,
    "avg_bits_err_improve": 0.33474835917886203,
    "time": 38071.555419921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* 6.0 (* s (* r PI)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.14136866499793704,
    "avg_bits_err_output": 0.14760621577194213,
    "avg_bits_err_improve": -0.006237550774005091,
    "time": 48644.85400390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (log1p (expm1 (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.9211949337940752,
    "avg_bits_err_output": 0.9329267243332217,
    "avg_bits_err_improve": -0.011731790539146414,
    "time": 43811.1865234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (* (/ 1.0 (sqrt PI)) (* (- (fma (/ 1.0 (sqrt PI)) (/ 1.0 (sqrt PI)) 1.0) (/ (/ (/ 1.0 (sqrt PI)) (/ 1.0 (sqrt PI))) (/ (/ 1.0 (sqrt PI)) (/ 1.0 (sqrt PI))))) (/ 1.0 (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.6968330656105688,
    "avg_bits_err_output": 0.5515420741842308,
    "avg_bits_err_improve": 0.14529099142633795,
    "time": 35578.974853515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (- (* (* u2 (+ (/ (* 2.0 PI) u2) 1.0)) u2) (* u2 u2))))",
    "output_parens": 13,
    "avg_bits_err_input": 13.602537837612301,
    "avg_bits_err_output": 13.611648867102003,
    "avg_bits_err_improve": -0.009111029489702105,
    "time": 51504.67431640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (- (* u2 (exp (log1p (* 2.0 PI)))) u2)))",
    "output_parens": 11,
    "avg_bits_err_input": 13.650906166182418,
    "avg_bits_err_output": 13.658286239381908,
    "avg_bits_err_improve": -0.007380073199490411,
    "time": 44257.324462890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (- (* alpha (/ (* alpha (- alpha)) alpha))) alpha (- (* alpha (* alpha alpha)))) (* (* alpha (* alpha alpha)) (* alpha (/ (log (- 1.0 u0)) (* alpha (- alpha))))))",
    "output_parens": 19,
    "avg_bits_err_input": 14.142857218853672,
    "avg_bits_err_output": 13.777060402782281,
    "avg_bits_err_improve": 0.36579681607139136,
    "time": 48959.79248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (- (+ 1.0 (log (- 1.0 u0))) 1.0)) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.704742806965966,
    "avg_bits_err_output": 12.784459139191158,
    "avg_bits_err_improve": -0.07971633222519259,
    "time": 20083.617919921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (fma (* PI (/ l PI)) PI 0.0))))",
    "output_parens": 9,
    "avg_bits_err_input": 16.27470222508504,
    "avg_bits_err_output": 16.28371802958671,
    "avg_bits_err_improve": -0.009015804501668612,
    "time": 28304.139404296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (+ 1.0 (+ -1.0 (* x (/ 1.0 (tan B))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.21018872187554086,
    "avg_bits_err_output": 0.211011842188131,
    "avg_bits_err_improve": -0.000823120312590131,
    "time": 25691.851318359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.931669761833206,
    "avg_bits_err_output": 13.929917521594707,
    "avg_bits_err_improve": 0.0017522402384990698,
    "time": 42864.568359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.35569690165737,
    "avg_bits_err_output": 2.0194368458635052,
    "avg_bits_err_improve": 59.336260055793865,
    "time": 58570.35693359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1e-109) (/ (* (sqrt 2.0) t) (sqrt (fma l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))) (* (/ (+ 1.0 x) (+ x -1.0)) (* t (+ t t)))))) (if (<= t 1.05e-162) (/ (* (sqrt 2.0) t) (expm1 (log1p (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* t (* t (* (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 53,
    "avg_bits_err_input": 42.76990330589846,
    "avg_bits_err_output": 35.70273592909873,
    "avg_bits_err_improve": 7.0671673767997305,
    "time": 33745.226318359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.964076345249619,
    "avg_bits_err_output": 3.964076345249619,
    "avg_bits_err_improve": 0,
    "time": 41044.622314453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.941,
    "avg_bits_err_output": 0.941,
    "avg_bits_err_improve": 0,
    "time": 57795.862060546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= t -5.5e+62) (sqrt (* 2.0 (- (* U (* n (- t (* 2.0 (/ (* l l) Om))))) (* (- U U*) (* (pow (/ l Om) 2.0) (* n (* n U))))))) (if (<= t 1e-223) (/ (sqrt (* (fma n (* (pow (/ l Om) 2.0) (- U U*)) (- (* 2.0 (/ (* l l) Om)) t)) (* U (* n -2.0)))) 1.0) (if (<= t 1.75e+171) (sqrt (* 2.0 (expm1 (log1p (* n (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))))) (sqrt (* U (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))) (+ n n)))))))",
    "output_parens": 66,
    "avg_bits_err_input": 34.81510642911647,
    "avg_bits_err_output": 35.167461089368814,
    "avg_bits_err_improve": -0.3523546602523453,
    "time": 33668.426513671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (* (sin k) (tan k)) (* (pow (/ k t) 2.0) (/ (pow t 3.0) (* l l))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (tan k) (- (sin k)) (* (exp (log1p (/ (pow t 3.0) (* l l)))) (* (tan k) (sin k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.393965477818895,
    "avg_bits_err_output": 37.80255098938067,
    "avg_bits_err_improve": 9.591414488438225,
    "time": 59202.22216796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (/ (pow t 3.0) (* l l)) (* (sin k) (+ 2.0 (pow (/ k t) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.28531013236232,
    "avg_bits_err_output": 32.24348241774916,
    "avg_bits_err_improve": 0.04182771461315582,
    "time": 34888.867431640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (+ (* a1 a1) (* a2 a2)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5056808297076038,
    "avg_bits_err_output": 0.5060983109579644,
    "avg_bits_err_improve": -0.00041748125036067396,
    "time": 42437.282958984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (+ (fma n (* 2.0 PI) (- n)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5319846978978081,
    "avg_bits_err_output": 0.541298326729787,
    "avg_bits_err_improve": -0.009313628831978837,
    "time": 34959.689697265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (+ (* (- (exp l) (exp (- l))) (cos (/ K 2.0))) (fma (- (exp l)) (- (cos (/ K 2.0))) (* (cos (/ K 2.0)) (- (exp l)))))) U)",
    "output_parens": 21,
    "avg_bits_err_input": 17.644283046851097,
    "avg_bits_err_output": 17.645725074015786,
    "avg_bits_err_improve": -0.001442027164689108,
    "time": 31848.297119140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(log1p (expm1 (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.451455712274758,
    "avg_bits_err_output": 15.467705712274757,
    "avg_bits_err_improve": -0.01624999999999943,
    "time": 68469.84448242188,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.888448120312592,
    "avg_bits_err_output": 17.888448120312592,
    "avg_bits_err_improve": 0,
    "time": 33213.406005859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.773766496309056,
    "avg_bits_err_output": 13.773766496309056,
    "avg_bits_err_improve": 0,
    "time": 6970.18994140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.38393505942606,
    "avg_bits_err_output": 19.38393505942606,
    "avg_bits_err_improve": 0,
    "time": 25816.484619140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* D w)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* h (* D w)))) (/ (* d (* d c0)) (* D (* h (* D w))))) (* M M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.63760002667698,
    "avg_bits_err_output": 56.25596235520208,
    "avg_bits_err_improve": 3.3816376714748984,
    "time": 35783.04736328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d l) 0.5) (- (pow (/ d h) 0.5) (* (pow (/ (* M D) (+ d d)) 2.0) (* (pow (/ d h) 0.5) (* 0.5 (/ h l))))))",
    "output_parens": 16,
    "avg_bits_err_input": 26.269140892190727,
    "avg_bits_err_output": 25.691116846968125,
    "avg_bits_err_improve": 0.5780240452226018,
    "time": 45895.54345703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.558024646213862,
    "avg_bits_err_output": 15.558024646213862,
    "avg_bits_err_improve": 0,
    "time": 93800.00634765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9827924812503607,
    "avg_bits_err_output": 0.015481203125901448,
    "avg_bits_err_improve": 0.9673112781244593,
    "time": 7028.179443359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (- (exp (log1p (* v (* v 5.0)))) 1.0)) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.41964857393116367,
    "avg_bits_err_output": 0.3517029170608581,
    "avg_bits_err_improve": 0.06794565687030557,
    "time": 20950.448974609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.013146240625180288,
    "avg_bits_err_output": 0.013146240625180288,
    "avg_bits_err_improve": 0,
    "time": 4645.256591796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5191202699468207,
    "avg_bits_err_output": 0.5191202699468207,
    "avg_bits_err_improve": 0,
    "time": 10463.0390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.96427427963445,
    "avg_bits_err_output": 1.92377427963445,
    "avg_bits_err_improve": 0.04049999999999998,
    "time": 12381.630615234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017326569372752045,
    "avg_bits_err_output": 0.017326569372752045,
    "avg_bits_err_improve": 0,
    "time": 5676.8046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17891093358955718,
    "avg_bits_err_output": 0.17891093358955718,
    "avg_bits_err_improve": 0,
    "time": 28769.39404296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (- (* a (+ a (* a a))) (* b (- (* b (* a 3.0)) b))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1845460060198135,
    "avg_bits_err_output": 0.18380057175431663,
    "avg_bits_err_improve": 0.0007454342654968638,
    "time": 21085.235595703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.1884003703942341,
    "avg_bits_err_output": 0.18735788914387355,
    "avg_bits_err_improve": 0.0010424812503605496,
    "time": 8475.560302734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ x (sqrt (fma x x (* 4.0 (* p p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.537728423626795,
    "avg_bits_err_output": 13.538953719148108,
    "avg_bits_err_improve": -0.0012252955213121197,
    "time": 11236.334716796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "ruler"
  }
]
