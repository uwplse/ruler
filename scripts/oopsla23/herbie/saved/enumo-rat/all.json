[
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.87488418017552,
    "avg_bits_err_output": 0.04775,
    "avg_bits_err_improve": 40.82713418017552,
    "time": 5374.27587890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (if (!= (sin x) 0.0) (/ (* (sin x) (- x (sin x))) (sin x)) (- x (sin x))) (if (!= (tan x) 0.0) (+ (/ (* x (tan x)) (- (- (tan x)))) (/ 1.0 (/ -1.0 (tan x)))) (- x (tan x))))",
    "output_parens": 27,
    "avg_bits_err_input": 31.180782228138554,
    "avg_bits_err_output": 30.725707339192706,
    "avg_bits_err_improve": 0.45507488894584824,
    "time": 24832.284423828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 6.3e+130) (/ (- (if (!= (sqrt (- (* b_2 b_2) (* a c))) 0.0) (/ 1.0 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (sqrt (- (* b_2 b_2) (* a c)))) b_2) a) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a))",
    "output_parens": 29,
    "avg_bits_err_input": 34.41134914409666,
    "avg_bits_err_output": 30.154498713599022,
    "avg_bits_err_improve": 4.256850430497639,
    "time": 14118.70361328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.25264941759655,
    "avg_bits_err_output": 34.25264941759655,
    "avg_bits_err_improve": 0,
    "time": 20619.124755859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(* (/ (- 1.0 (cos x)) x) (/ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 31.575020739923517,
    "avg_bits_err_output": 30.884434437418857,
    "avg_bits_err_improve": 0.6905863025046592,
    "time": 17508.91064453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.65983579670954,
    "avg_bits_err_output": 32.65983579670954,
    "avg_bits_err_improve": 0,
    "time": 16481.305419921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (- (+ (expm1 (- (log1p N) (log N))) -1.0) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.89630016366425,
    "avg_bits_err_output": 29.897354943258275,
    "avg_bits_err_improve": -0.0010547795940247795,
    "time": 11362.221435546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ 0.0 (if (!= (/ 1.0 (+ 1.0 x)) 0.0) (/ (/ -1.0 x) (+ x 1.0)) (+ (/ -1.0 x) (/ 1.0 (+ 1.0 x)))))",
    "output_parens": 12,
    "avg_bits_err_input": 14.026953453822443,
    "avg_bits_err_output": 0.0715,
    "avg_bits_err_improve": 13.955453453822443,
    "time": 13732.270751953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (+ (cos (+ x eps)) (+ (cos x) -1.0)) 0.0) (/ (- (* (cos (+ x eps)) (cos (+ x eps))) (* (+ (cos x) -1.0) (+ (cos x) -1.0))) (+ (cos (+ x eps)) (log1p (expm1 (+ (cos x) -1.0))))) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 32,
    "avg_bits_err_input": 39.995185282530144,
    "avg_bits_err_output": 40.03716337971962,
    "avg_bits_err_improve": -0.04197809718947809,
    "time": 18273.4013671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (if (!= (+ (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0)) 0.0) (/ (- (* (+ (cbrt (+ 1.0 x)) -1.0) (+ (cbrt (+ 1.0 x)) -1.0)) (* (cbrt x) (cbrt x))) (+ (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0))) (+ (- (cbrt (+ 1.0 x)) (cbrt x)) -1.0)) 1.0)",
    "output_parens": 30,
    "avg_bits_err_input": 30.020420158353453,
    "avg_bits_err_output": 29.61052203088478,
    "avg_bits_err_improve": 0.40989812746867216,
    "time": 7412.662353515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (+ (- 0.75 (cos x)) 0.25) (sin x))",
    "output_parens": 5,
    "avg_bits_err_input": 30.4562400601662,
    "avg_bits_err_output": 30.457615060166198,
    "avg_bits_err_improve": -0.00137499999999946,
    "time": 22373.655029296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (* (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c))) (* (* a 4.0) (/ c (* c (* a 4.0))))) (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c)))))) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 34.46033237308252,
    "avg_bits_err_output": 34.71412835730011,
    "avg_bits_err_improve": -0.2537959842175894,
    "time": 31299.917236328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.472549351833045,
    "avg_bits_err_output": 34.472549351833045,
    "avg_bits_err_improve": 0,
    "time": 21819.226318359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.99996) (/ (log (- 1.0 x)) (log (+ 1.0 x))) (/ (+ (+ 1.0 (log (- 1.0 x))) -1.0) (log1p x)))",
    "output_parens": 18,
    "avg_bits_err_input": 61.453730727635474,
    "avg_bits_err_output": 59.571327890851286,
    "avg_bits_err_improve": 1.8824028367841876,
    "time": 23218.65283203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log1p n) (log n)) n)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 63.008218201337286,
    "avg_bits_err_output": 44.21392876338445,
    "avg_bits_err_improve": 18.794289437952834,
    "time": 12036.89013671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (* (- 1.0 eps) (/ 1.0 (+ 1.0 eps))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.64187700601443,
    "avg_bits_err_output": 58.65013258849976,
    "avg_bits_err_improve": -0.008255582485325874,
    "time": 18812.173583984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (if (!= (- (/ (/ 1.0 x) (/ x (tan x))) (/ -1.0 x)) 0.0) (/ (+ (/ -1.0 x) (/ (/ 1.0 (/ x (tan x))) (* x (/ x (tan x))))) (+ 1.0 (/ 1.0 (/ x (tan x))))) (/ (+ -1.0 (/ 1.0 (/ x (tan x)))) x)) (/ 1.0 (/ x (tan x))))",
    "output_parens": 31,
    "avg_bits_err_input": 59.87792033337887,
    "avg_bits_err_output": 59.871721928216274,
    "avg_bits_err_improve": 0.006198405162592735,
    "time": 29656.25048828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (if (!= (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))) 0.0) (/ 1.0 (/ 1.0 (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a))))) (expm1 (* eps b)))",
    "output_parens": 28,
    "avg_bits_err_input": 60.1572632360821,
    "avg_bits_err_output": 29.542900510856338,
    "avg_bits_err_improve": 30.614362725225764,
    "time": 25453.69677734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.31012038960202,
    "avg_bits_err_output": 0.531375,
    "avg_bits_err_improve": 40.77874538960202,
    "time": 4086.78369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.60569648221609,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.60544648221609,
    "time": 2924.431396484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.540685457791106,
    "avg_bits_err_output": 0.01914441780414224,
    "avg_bits_err_improve": 29.521541039986964,
    "time": 3345.829345703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (exp x) 0.0) (/ (+ (* (exp x) (+ 2.0 (- (- (exp (- x))) (exp x)))) (fma (- (fabs (exp x))) (fabs (exp x)) (* (exp x) (exp x)))) (exp x)) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 29,
    "avg_bits_err_input": 29.637424647862787,
    "avg_bits_err_output": 29.111813658711156,
    "avg_bits_err_improve": 0.5256109891516303,
    "time": 17855.80810546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ (/ 4.0 (+ 4.0 (/ 4.0 x))) x) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 9.14813584865345,
    "avg_bits_err_output": 9.152894512042517,
    "avg_bits_err_improve": -0.004758663389067053,
    "time": 22454.991455078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.94670660178132,
    "avg_bits_err_output": 36.94670660178132,
    "avg_bits_err_improve": 0,
    "time": 16486.779541015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (expm1 (- (exp (log1p (log (- (- (sqrt x) (sqrt (+ x 1.0))) -2.0)))) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 30.292353743518234,
    "avg_bits_err_output": 29.202548138231975,
    "avg_bits_err_improve": 1.0898056052862586,
    "time": 13965.961181640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (if (!= (/ (+ (sin (+ x eps)) (sin x)) (sin (+ x eps))) 0.0) (/ (/ (- (sin (+ x eps)) (if (!= (* (sin x) (/ (sin x) (sin (+ x eps)))) 0.0) (/ 1.0 (/ 1.0 (* (sin x) (/ (sin x) (sin (+ x eps)))))) (* (sin x) (/ (sin x) (sin (+ x eps)))))) (sin (+ x eps))) (/ (+ (sin (+ x eps)) (sin x)) (sin (+ x eps)))) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 63,
    "avg_bits_err_input": 37.60663541607277,
    "avg_bits_err_output": 37.65620621519593,
    "avg_bits_err_improve": -0.04957079912315976,
    "time": 18961.611083984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(* -2.0 (/ (- 2.0 (/ 2.0 (/ (sqrt x) (sqrt (+ x 1.0))))) (/ 4.0 (/ 1.0 (sqrt (+ x 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 20.151960140066578,
    "avg_bits_err_output": 20.153276023569603,
    "avg_bits_err_improve": -0.0013158835030253613,
    "time": 15871.501220703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.787589356586064,
    "avg_bits_err_output": 14.787589356586064,
    "avg_bits_err_improve": 0,
    "time": 9514.01123046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(/ (if (!= (* (+ 1.0 (log (+ (exp a) (exp b)))) (/ (+ 1.0 (log (+ (exp a) (exp b)))) 2.0)) 0.0) (/ (- (* (* (- 1.0 (log (+ (exp a) (exp b)))) (/ (- 1.0 (log (+ (exp a) (exp b)))) 2.0)) (* (+ 1.0 (log (+ (exp a) (exp b)))) (/ (+ 1.0 (log (+ (exp a) (exp b)))) 2.0))) (* (* (+ 1.0 (log (+ (exp a) (exp b)))) (/ (+ 1.0 (log (+ (exp a) (exp b)))) 2.0)) (* (+ 1.0 (log (+ (exp a) (exp b)))) (/ (+ 1.0 (log (+ (exp a) (exp b)))) 2.0)))) (* (+ 1.0 (log (+ (exp a) (exp b)))) (/ (+ 1.0 (log (+ (exp a) (exp b)))) 2.0))) (- (* (log (+ (exp a) (exp b))) 2.0))) -2.0)",
    "output_parens": 85,
    "avg_bits_err_input": 29.99235110276065,
    "avg_bits_err_output": 30.033951739535624,
    "avg_bits_err_improve": -0.041600636774973054,
    "time": 38543.7421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07563928593921272,
    "avg_bits_err_output": 0.07700244375108173,
    "avg_bits_err_improve": -0.0013631578118690063,
    "time": 7819.990234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 15.83773893043793,
    "avg_bits_err_output": 0.3138140984428186,
    "avg_bits_err_improve": 15.52392483199511,
    "time": 10622.5791015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ PI 180.0) angle))) 2.0) (pow (* b (sin (/ (* PI angle) 180.0))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.320657935588994,
    "avg_bits_err_output": 20.32115197441564,
    "avg_bits_err_improve": -0.0004940388266447826,
    "time": 24597.703369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (pow a 2.0) (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0)))) (* -2.0 (cos (* PI (/ angle 180.0)))))",
    "output_parens": 16,
    "avg_bits_err_input": 31.220150071696498,
    "avg_bits_err_output": 31.207517325424142,
    "avg_bits_err_improve": 0.012632746272355888,
    "time": 32902.29248046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* (/ angle 180.0) PI) 0.0) (/ 1.0 (* (/ PI (* angle PI)) (/ (/ (/ (/ 32400.0 (/ 180.0 angle)) PI) PI) (/ angle PI)))) (* (/ angle 180.0) PI)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 25,
    "avg_bits_err_input": 20.517435164799974,
    "avg_bits_err_output": 20.793583756615206,
    "avg_bits_err_improve": -0.27614859181523244,
    "time": 32518.05712890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* m (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.17476184218813104,
    "avg_bits_err_output": 0.17458496250072117,
    "avg_bits_err_improve": 0.00017687968740986992,
    "time": 18049.578369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.30518865959940467,
    "avg_bits_err_output": 0.299576620759291,
    "avg_bits_err_improve": 0.005612038840113687,
    "time": 15810.9482421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* e (/ (sin v) (- (- -1.0 (* e (cos v))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.13169812031259015,
    "avg_bits_err_output": 0.13171936093777042,
    "avg_bits_err_improve": -2.1240625180274364e-05,
    "time": 15946.21435546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.171775623305866,
    "avg_bits_err_output": 17.166654644343684,
    "avg_bits_err_improve": 0.005120978962182221,
    "time": 31616.79638671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= b 0.0) (/ (if (!= (* b (sqrt (fma a (* c -4.0) (* b b)))) 0.0) (/ (fma b (* (sqrt (fma a (* c -4.0) (* b b))) (* b (sqrt (fma a (* c -4.0) (* b b))))) (* (- (* b b)) (* b (sqrt (fma a (* c -4.0) (* b b)))))) (* b (sqrt (fma a (* c -4.0) (* b b))))) (* b (- (sqrt (fma a (* c -4.0) (* b b))) b))) b) (- (sqrt (fma c (* a -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 48,
    "avg_bits_err_input": 52.83969044350404,
    "avg_bits_err_output": 51.93502468632367,
    "avg_bits_err_improve": 0.9046657571803678,
    "time": 27803.01806640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(fma b (/ -0.25 a) (/ (+ (sqrt (fma -4.0 (* a c) (* b b))) (fma (- (sqrt (if (!= (* b b) 0.0) (/ (+ (* (* b b) (* b b)) (* b (* b (* a (* -4.0 c))))) (* b b)) (fma a (* -4.0 c) (* b b)))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b))))) (* a 8.0)))",
    "output_parens": 32,
    "avg_bits_err_input": 28.219180534707085,
    "avg_bits_err_output": 27.829455582171345,
    "avg_bits_err_improve": 0.38972495253574024,
    "time": 30562.430419921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (+ (if (!= (* (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b))))) 0.0) (/ (fma (* (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (+ (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (- (* (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))))))) (* (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (fma (- (fabs (sqrt (fma c (* a -4.0) (* b b))))) (fabs (sqrt (fma c (* a -4.0) (* b b)))) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 125,
    "avg_bits_err_input": 43.685511367535874,
    "avg_bits_err_output": 42.56327931895101,
    "avg_bits_err_improve": 1.1222320485848627,
    "time": 41027.41357421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 1.0 (/ 1.0 (+ (* c (* a -4.0)) (* b b)))) (+ (* c (* a -4.0)) (* b b))))) (* a 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 34.46212258103005,
    "avg_bits_err_output": 34.719942245070314,
    "avg_bits_err_improve": -0.25781966404026235,
    "time": 22256.028076171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (fma (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1) (* (cos phi1) (cos phi1))) (cos phi1)) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.9203810234809323,
    "avg_bits_err_output": 0.9342805926216743,
    "avg_bits_err_improve": -0.013899569140741974,
    "time": 24440.0224609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (<= (* -2.0 x) 0.002) (/ (expm1 (* -2.0 x)) (- -1.0 (exp (* -2.0 x)))) (- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 29.064811471220583,
    "avg_bits_err_output": 0.021867571957493552,
    "avg_bits_err_improve": 29.04294389926309,
    "time": 18540.22119140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(* (- (exp x) (exp (- x))) (/ 1.0 (+ (exp x) (exp (- x)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.213622374202764,
    "avg_bits_err_output": 58.21313386718431,
    "avg_bits_err_improve": 0.0004885070184528217,
    "time": 16703.657958984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (+ (- (expm1 (- x))) (expm1 x)) 2.0)",
    "output_parens": 6,
    "avg_bits_err_input": 57.93285336758055,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 57.92535336758055,
    "time": 14433.21630859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(expm1 (log1p (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.009912798070799487,
    "avg_bits_err_output": 0.011580279321160064,
    "avg_bits_err_improve": -0.001667481250360578,
    "time": 2247.06494140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.60125,
    "avg_bits_err_output": 31.60125,
    "avg_bits_err_improve": 0,
    "time": 4823.640869140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (if (!= (- 2.0 (log (/ (- x -1.0) (- 1.0 x)))) 0.0) (/ (+ (- 1.0 (* (log (/ (- -1.0 x) (+ x -1.0))) (+ -1.0 (log (/ (- -1.0 x) (+ x -1.0)))))) (+ -1.0 (log (/ (- -1.0 x) (+ x -1.0))))) (- 2.0 (log (/ (- x -1.0) (- 1.0 x))))) (log (/ (- x -1.0) (- 1.0 x)))))",
    "output_parens": 35,
    "avg_bits_err_input": 58.630511978163696,
    "avg_bits_err_output": 58.63839660423943,
    "avg_bits_err_improve": -0.007884626075735923,
    "time": 30745.656494140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.027448120312590144,
    "avg_bits_err_output": 0.027448120312590144,
    "avg_bits_err_improve": 0,
    "time": 3826.426513671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1272712406251803,
    "avg_bits_err_output": 0.1272712406251803,
    "avg_bits_err_improve": 0,
    "time": 18617.39599609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.123625,
    "avg_bits_err_output": 0.123625,
    "avg_bits_err_improve": 0,
    "time": 23044.46728515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.35118233120891,
    "avg_bits_err_output": 3.8184791240944125,
    "avg_bits_err_improve": 35.5327032071145,
    "time": 25215.188232421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* b (/ b a)) a) a)))",
    "output_parens": 6,
    "avg_bits_err_input": 14.805285926075854,
    "avg_bits_err_output": 0.013049039677847344,
    "avg_bits_err_improve": 14.792236886398006,
    "time": 6201.798583984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (fma (sin phi1) (- (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1))))))) (cos delta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.16210147755514773,
    "avg_bits_err_output": 0.15698974963335,
    "avg_bits_err_improve": 0.005111727921797732,
    "time": 32724.17578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (+ b (sqrt (fma b b (* c (* a -3.0))))) (- (sqrt (fma b b (* c (* a -3.0)))) b) (fma (- (fabs b)) (fabs b) (* b b))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 38,
    "avg_bits_err_input": 52.82050532703905,
    "avg_bits_err_output": 51.74287401429372,
    "avg_bits_err_improve": 1.077631312745332,
    "time": 33161.585693359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (+ (fma (* (sqrt (fma a (* c -3.0) (* b b))) (* b (- (sqrt (fma a (* c -3.0) (* b b)))))) b (* b (* (sqrt (fma a (* c -3.0) (* b b))) (* b (sqrt (fma a (* c -3.0) (* b b))))))) (* (* b b) (- (* b b) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))))))) (* b (- b))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 77,
    "avg_bits_err_input": 28.36819594953342,
    "avg_bits_err_output": 28.017525317910952,
    "avg_bits_err_improve": 0.35067063162246725,
    "time": 40712.47412109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (- (* b b) (* (* a c) 3.0)))) 0.0) (/ (fma (sqrt (- (* b b) (* (* a c) 3.0))) (sqrt (- (* b b) (* (* a c) 3.0))) (* b (- b))) (- b (- (sqrt (- (* b b) (* (* a c) 3.0)))))) (- (sqrt (- (* b b) (* (* a c) 3.0))) b)) (* 3.0 a))",
    "output_parens": 38,
    "avg_bits_err_input": 43.77758319506283,
    "avg_bits_err_output": 42.653385819483795,
    "avg_bits_err_improve": 1.1241973755790369,
    "time": 29072.328369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.51819949511365,
    "avg_bits_err_output": 34.51819949511365,
    "avg_bits_err_improve": 0,
    "time": 19646.400146484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.447363567738538,
    "avg_bits_err_output": 13.447363567738538,
    "avg_bits_err_improve": 0,
    "time": 29956.0224609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (- (* (/ x (+ x 1.0)) (+ x -1.0)) (+ x -1.0)) (+ x -1.0)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 28.907142100152114,
    "avg_bits_err_output": 24.336874448192603,
    "avg_bits_err_improve": 4.570267651959512,
    "time": 19165.359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (- (/ x (+ x (+ x 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.04332237716990204,
    "avg_bits_err_improve": -0.031572377169902036,
    "time": 4009.350830078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ (fma (/ -1.0 (+ x -1.0)) (/ 1.0 (+ x -1.0)) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x)))) (/ 1.0 (+ x -1.0))) (- (/ -1.0 (+ x -1.0)) (/ -1.0 (+ 1.0 x))))",
    "output_parens": 19,
    "avg_bits_err_input": 14.187970758462768,
    "avg_bits_err_output": 14.255921798691055,
    "avg_bits_err_improve": -0.06795104022828724,
    "time": 23269.5703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (- C)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C)))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.76292766261422,
    "avg_bits_err_output": 52.4636461031201,
    "avg_bits_err_improve": 0.29928155949411916,
    "time": 38403.777099609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(if (<= C 1.05e+109) (* (atan (* (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- C A)) (/ -1.0 B))) (/ 180.0 PI)) (* (atan (if (!= (/ A (- B)) 0.0) 0.0 (/ (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) B))) (/ 180.0 PI)))",
    "output_parens": 29,
    "avg_bits_err_input": 29.043603710209847,
    "avg_bits_err_output": 27.322808705983434,
    "avg_bits_err_improve": 1.7207950042264137,
    "time": 22838.087646484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (fma (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (* F (- (pow B 2.0) (* C (* A 4.0))))) (fma (- (* C (* A 4.0))) (* 2.0 (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F)) (* A (* (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F) (* C 8.0)))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 44,
    "avg_bits_err_input": 52.606007567516684,
    "avg_bits_err_output": 52.68157356459288,
    "avg_bits_err_improve": -0.07556599707619682,
    "time": 37797.338134765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.171756941918344,
    "avg_bits_err_output": 15.171756941918344,
    "avg_bits_err_improve": 0,
    "time": 1959.541015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (+ (if (!= (* g (/ (/ g g) -2.0)) 0.0) (/ (+ (* (* g (/ (/ g g) -2.0)) (* g (/ (/ g g) -2.0))) (* (* g (/ (/ g g) -2.0)) (* g (/ (- g (sqrt (fma g g (- (* h h))))) (* g -2.0))))) (* g (/ (/ g g) -2.0))) (- (/ (+ g (- g (sqrt (fma g g (- (* h h)))))) -2.0) (/ 0.0 g))) (/ (* g (- (sqrt (fma g g (- (* h h)))))) (* g -2.0))) (- (sqrt (fma g g (* h (- h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 68,
    "avg_bits_err_input": 35.67640701467552,
    "avg_bits_err_output": 35.59487697012634,
    "avg_bits_err_improve": 0.08153004454917578,
    "time": 16094.88623046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9912883468827537,
    "avg_bits_err_output": 0.9767736843762622,
    "avg_bits_err_improve": 0.014514662506491471,
    "time": 7084.954345703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6610943609377705,
    "avg_bits_err_output": 0.6630118421881311,
    "avg_bits_err_improve": -0.0019174812503606198,
    "time": 3763.67822265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (/ (* a1 (/ a2 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-273) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ 1.0 b2) (* a1 (/ a2 b1))) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+280) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 37,
    "avg_bits_err_input": 11.294396107797018,
    "avg_bits_err_output": 2.9237130583048425,
    "avg_bits_err_improve": 8.370683049492175,
    "time": 9070.966064453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40895293827427864,
    "avg_bits_err_output": 0.36,
    "avg_bits_err_improve": 0.04895293827427866,
    "time": 13514.925048828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- x (hypot 1.0 x)) 0.0) (/ (+ (* (hypot 1.0 x) (- (hypot 1.0 x) x)) (* x (- (hypot 1.0 x) x))) (- (hypot 1.0 x) x)) (+ x (hypot 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 53.22922637428044,
    "avg_bits_err_output": 45.296852047225684,
    "avg_bits_err_improve": 7.932374327054752,
    "time": 18096.316650390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.679809565668414,
    "avg_bits_err_output": 5.679361067494804,
    "avg_bits_err_improve": 0.0004484981736103677,
    "time": 13205.70166015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (/ (- 1.0 (* x x)) (+ 1.0 x)) (+ 1.0 x)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.0001250000000000001,
    "time": 4972.530029296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1528.296142578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (+ (/ 1.0 (* r (+ r r))) (/ (/ (/ 3.0 r) r) 2.0))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 18,
    "avg_bits_err_input": 12.992930689537006,
    "avg_bits_err_output": 0.6932842768291506,
    "avg_bits_err_improve": 12.299646412707856,
    "time": 21482.582275390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (if (!= (* x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0))) 0.0) (/ (- (* x1 (* (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)) (* x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0))))) (* (* x1 (* x1 0.0)) (* x1 (* x1 0.0)))) (* x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))) (* x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 95,
    "avg_bits_err_input": 0.524059527574896,
    "avg_bits_err_output": 0.7233562433413719,
    "avg_bits_err_improve": -0.1992967157664759,
    "time": 63992.069091796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.045396829725135,
    "avg_bits_err_output": 1.4738351962201592,
    "avg_bits_err_improve": 16.571561633504977,
    "time": 9894.439453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.28223776155338814,
    "avg_bits_err_output": 0.1903043234384916,
    "avg_bits_err_improve": 0.09193343811489654,
    "time": 6550.674072265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003125,
    "avg_bits_err_output": 0.003125,
    "avg_bits_err_improve": 0,
    "time": 3043.1005859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (* PI (- (/ 0.5 a) (/ 0.5 b))) (+ b a)) (- b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.1091207942105,
    "avg_bits_err_output": 0.32662840039821944,
    "avg_bits_err_improve": 13.782492393812282,
    "time": 15336.349853515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (/ (exp (- (* x eps) x)) eps) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps)))) (expm1 (log1p (exp (- (* x eps) x))))) 2.0)",
    "output_parens": 18,
    "avg_bits_err_input": 29.78789341309523,
    "avg_bits_err_output": 25.102407519672994,
    "avg_bits_err_improve": 4.685485893422236,
    "time": 13770.06103515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.0055,
    "avg_bits_err_output": 0.0055,
    "avg_bits_err_improve": 0,
    "time": 3652.09375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.008625,
    "avg_bits_err_output": 0.038625,
    "avg_bits_err_improve": -0.03,
    "time": 9269.175048828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (fma (* 2.0 (/ t (+ 1.0 t))) (* 2.0 (/ t (+ 1.0 t))) 1.0) (fma (* 2.0 (/ t (+ 1.0 t))) (* 2.0 (/ t (+ 1.0 t))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.048625,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 0.040125,
    "time": 20658.955322265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3405.599365234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2793.24462890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 3045.06591796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.822912304428905,
    "avg_bits_err_output": 0.248875,
    "avg_bits_err_improve": 7.574037304428905,
    "time": 19594.665283203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3143548054901855,
    "avg_bits_err_output": 7.3143548054901855,
    "avg_bits_err_improve": 0,
    "time": 5806.784912109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (pow (+ x eps) 2.0) 0.0) (* (pow (+ x eps) 2.0) (if (!= (/ (+ (pow (+ x eps) 2.0) (pow x 2.0)) (- (pow (+ x eps) 2.0))) 0.0) (- (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (* (pow x 2.0) (/ (pow x 2.0) (pow (+ x eps) 2.0))) (+ (pow (+ x eps) 2.0) (pow x 2.0)))) (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) (pow (+ x eps) 2.0)))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 47,
    "avg_bits_err_input": 15.835406440542085,
    "avg_bits_err_output": 15.841148179430032,
    "avg_bits_err_improve": -0.005741738887946823,
    "time": 19724.550537109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (cos x) (+ (exp (* 10.0 (* x x))) 1.0)) 0.0) (* (exp (* 10.0 (* x x))) (* (+ (exp (* 10.0 (* x x))) 1.0) (* (cos x) (/ (cos x) (fma (if (!= (+ 1.0 (exp (log1p (exp (* 10.0 (* x x)))))) 0.0) (/ (+ (* (exp (log1p (exp (* 10.0 (* x x))))) (exp (log1p (exp (* 10.0 (* x x)))))) -1.0) (+ 1.0 (exp (log1p (exp (* 10.0 (* x x))))))) (exp (* 10.0 (* x x)))) (cos x) (cos x)))))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 59,
    "avg_bits_err_input": 3.5487659458009073,
    "avg_bits_err_output": 3.5510692831406443,
    "avg_bits_err_improve": -0.002303337339736977,
    "time": 26921.089111328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -0.005) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 20.0) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.020530630351313,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 15.010655630351314,
    "time": 9126.061279296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.53511209548896,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.53511209548896,
    "time": 4443.73681640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.803248968089605,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 38.802373968089604,
    "time": 4313.798583984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.252375,
    "avg_bits_err_improve": 63.747625,
    "time": 27460.982666015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(/ (* t t) 2.5e+31)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325147286218,
    "avg_bits_err_output": 0.40598853437914684,
    "avg_bits_err_improve": 61.43726293848303,
    "time": 7544.397216796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.472549351833045,
    "avg_bits_err_output": 34.472549351833045,
    "avg_bits_err_improve": 0,
    "time": 23001.98974609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 1.0 (/ 1.0 (+ (* c (* a -4.0)) (* b b)))) (+ (* c (* a -4.0)) (* b b))))) (* a 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 34.46212258103005,
    "avg_bits_err_output": 34.719942245070314,
    "avg_bits_err_improve": -0.25781966404026235,
    "time": 24193.0234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2199.812255859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.76818272521393,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 39.759057725213935,
    "time": 7014.543212890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.798566548015334,
    "avg_bits_err_output": 19.800843052744526,
    "avg_bits_err_improve": -0.0022765047291919416,
    "time": 8594.359619140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6701016891069065,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6701016891069065,
    "time": 11136.770263671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.036,
    "time": 7058.3330078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019073120312590144,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0.007823120312590144,
    "time": 3646.246337890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.015375,
    "avg_bits_err_output": 0.015375,
    "avg_bits_err_improve": 0,
    "time": 2779.535888671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 2095.99853515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ (+ c b) (+ e a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.38880225625468784,
    "avg_bits_err_output": 0.26325,
    "avg_bits_err_improve": 0.12555225625468786,
    "time": 5456.1455078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (if (!= (/ 1.0 (+ (cos x) 1.0)) 0.0) (/ (+ (/ 1.0 (* (+ 1.0 (cos x)) (+ 1.0 (cos x)))) (* (cos x) (/ (/ (cos x) (+ 1.0 (cos x))) (- -1.0 (cos x))))) (/ 1.0 (+ (cos x) 1.0))) (/ (fma (cos x) (cos x) -1.0) (- -1.0 (cos x)))) (- 1.0 (cos x)))",
    "output_parens": 37,
    "avg_bits_err_input": 29.488135785344156,
    "avg_bits_err_output": 29.49386689401221,
    "avg_bits_err_improve": -0.0057311086680549295,
    "time": 44110.024169921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.17771523680861,
    "avg_bits_err_output": 24.17771523680861,
    "avg_bits_err_improve": 0,
    "time": 12394.921630859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ (sin x) (- (tan x))) 0.0) (/ (+ (* (/ (sin x) (tan x)) (/ (sin x) (tan x))) (* (/ (- x) (tan x)) (/ (sin x) (tan x)))) (/ (sin x) (- (tan x)))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 30,
    "avg_bits_err_input": 29.920272973259017,
    "avg_bits_err_output": 29.928118379554757,
    "avg_bits_err_improve": -0.00784540629573982,
    "time": 30399.85888671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007681401388979041,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006556401388979041,
    "time": 2508.052978515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -2e+140) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (fabs n)) (/ i n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= i -1.6e-64) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (if (!= (* i (/ (/ i (* n i)) 2.0)) 0.0) (* (* i (/ (/ i (* n i)) 2.0)) (/ (* i (/ (/ i (* n i)) 2.0)) (- (exp (log1p (/ (* (/ i n) 0.5) 2.0))) 1.0))) (* i (/ i (* n i))))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (/ (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0)) (/ i n))))",
    "output_parens": 83,
    "avg_bits_err_input": 47.58844782478861,
    "avg_bits_err_output": 45.43600332458347,
    "avg_bits_err_improve": 2.152444500205142,
    "time": 30252.483154296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (if (!= (/ d (fma d d (* c c))) 0.0) (/ 1.0 (/ 1.0 (/ d (fma d d (* c c))))) (/ d (fma d d (* c c))))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.675386994784667,
    "avg_bits_err_output": 23.67980774468819,
    "avg_bits_err_improve": 2.995579250096476,
    "time": 12305.776123046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= c -1.5e+37) (- (* (if (!= (/ c (fma c c (* d d))) 0.0) (* c (/ (/ c c) (fma c c (* d d)))) (/ (- (exp (log1p (/ c c))) 1.0) (+ c (* d (/ d c))))) b) (* a (/ d (fma c c (* d d))))) (if (<= c 5e+44) (- (/ (* b c) (fma c c (* d d))) (* a (+ (/ d (* (* (fma d d (* c c)) 2.0) 2.0)) (/ (+ d (+ d d)) (* (* (fma d d (* c c)) 2.0) 2.0))))) (- (* (if (!= (/ c (fma c c (* d d))) 0.0) (* c (/ (/ c c) (fma c c (* d d)))) (/ (- (exp (log1p (/ c c))) 1.0) (+ c (* d (/ d c))))) b) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 71,
    "avg_bits_err_input": 26.20477483441839,
    "avg_bits_err_output": 14.19437605243407,
    "avg_bits_err_improve": 12.010398781984321,
    "time": 14380.747802734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.031375,
    "avg_bits_err_output": 0.018207016441828858,
    "avg_bits_err_improve": 0.013167983558171142,
    "time": 5643.894287109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- (- (+ ux ux) (* ux ux)) (* ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.647832149166652,
    "avg_bits_err_output": 0.5538928631267928,
    "avg_bits_err_improve": 13.09393928603986,
    "time": 25077.59423828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (expm1 (log1p (* 2.0 PI))))) (sqrt (- (/ (- (- 2.0 (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))) (log (exp (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))))) -2.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.676623533641141,
    "avg_bits_err_output": 12.223808200571552,
    "avg_bits_err_improve": 1.452815333069589,
    "time": 32362.930419921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (expm1 (log1p (* PI (* uy 2.0))))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* maxCos maxCos) (* (* (- 1.0 ux) (- 1.0 ux)) (* ux ux))))) (* (sin (* PI (* uy 2.0))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 35,
    "avg_bits_err_input": 0.33887085912373005,
    "avg_bits_err_output": 0.3423107538374232,
    "avg_bits_err_improve": -0.003439894713693159,
    "time": 41211.569091796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.2029600952810437,
    "avg_bits_err_output": 0.2029600952810437,
    "avg_bits_err_improve": 0,
    "time": 19968.717529296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (if (!= (/ (/ u1 (- 1.0 u1)) 4.0) 0.0) (if (!= (/ (/ (* u1 (+ u1 u1)) (- 1.0 u1)) (* u1 4.0)) 0.0) (/ (* (/ (/ (* u1 (+ u1 u1)) (- 1.0 u1)) (* u1 4.0)) (fma u1 (/ u1 (* 4.0 (- u1 (* u1 u1)))) (/ (/ (* u1 (+ u1 u1)) (- 1.0 u1)) (* u1 4.0)))) (/ (/ (* u1 (+ u1 u1)) (- 1.0 u1)) (* u1 4.0))) (* u1 (/ (+ u1 (+ u1 u1)) (* 4.0 (- u1 (* u1 u1)))))) (/ (+ u1 (* u1 0.5)) (- (- 2.0 u1) u1))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 59,
    "avg_bits_err_input": 0.5324980702766468,
    "avg_bits_err_output": 0.5441131377692253,
    "avg_bits_err_improve": -0.011615067492578568,
    "time": 21632.369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.33138921929424436,
    "avg_bits_err_output": 0.33138921929424436,
    "avg_bits_err_improve": 0,
    "time": 25918.48828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.33393869296766343,
    "avg_bits_err_output": 0.33381369296766344,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 54409.44775390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05662766810866245,
    "avg_bits_err_output": 0.05662766810866245,
    "avg_bits_err_improve": 0,
    "time": 9293.67919921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (fma s (exp (/ (fabs x) (- s))) s)) (+ (exp (/ (fabs x) (- s))) 1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.17231890009084724,
    "avg_bits_err_output": 0.1568194890952267,
    "avg_bits_err_improve": 0.01549941099562055,
    "time": 15206.286865234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6627989233643427,
    "avg_bits_err_output": 0.6638883949972356,
    "avg_bits_err_improve": -0.0010894716328929688,
    "time": 19457.618896484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15328271046875777,
    "avg_bits_err_output": 0.1537164668795955,
    "avg_bits_err_improve": -0.0004337564108377323,
    "time": 21301.24365234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.599083711564975,
    "avg_bits_err_output": 2.595183742036864,
    "avg_bits_err_improve": 0.0038999695281112245,
    "time": 35794.15478515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (/ cosTheta_O (sinh (/ 1.0 v))) (* cosTheta_i (* (/ (exp (* (/ sinTheta_O v) (- sinTheta_i))) (+ v v)) (/ 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4628038478056186,
    "avg_bits_err_output": 0.35812620103643106,
    "avg_bits_err_improve": 0.10467764676918756,
    "time": 24770.1455078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (- (exp (log1p (+ 0.6931 (log (/ 0.5 v))))) 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11301117382757771,
    "avg_bits_err_output": 0.11365036882238437,
    "avg_bits_err_improve": -0.0006391949948066633,
    "time": 13600.353759765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (+ (* alpha alpha) -1.0) PI) (log (* alpha alpha))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4757510659776972,
    "avg_bits_err_output": 0.49806616045005986,
    "avg_bits_err_improve": -0.022315094472362684,
    "time": 23125.6123046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log (+ 1.0 (expm1 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))) s)",
    "output_parens": 8,
    "avg_bits_err_input": 1.328498093227955,
    "avg_bits_err_output": 1.2483875675854974,
    "avg_bits_err_improve": 0.08011052564245769,
    "time": 25065.747314453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (- (+ (* s (* (log (/ 1.0 (fma u -4.0 1.0))) 2.0)) s) s) 2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 12.502287367634787,
    "avg_bits_err_output": 12.540369832400977,
    "avg_bits_err_improve": -0.03808246476618926,
    "time": 21402.289794921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (* (/ -0.3333333333333333 s) r))) (* r (/ (* PI s) 0.16666666666666666))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12988456576125287,
    "avg_bits_err_output": 0.14267670086283102,
    "avg_bits_err_improve": -0.012792135101578145,
    "time": 26723.836181640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9211871839963994,
    "avg_bits_err_output": 0.7798140787404735,
    "avg_bits_err_improve": 0.14137310525592595,
    "time": 24393.477783203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (* (/ (sqrt (if (!= (* (- 1.0 cosTheta) (- 1.0 cosTheta)) 0.0) (* (* (- 1.0 cosTheta) (- 1.0 cosTheta)) (/ (- 1.0 (+ cosTheta cosTheta)) (* (- 1.0 cosTheta) (- 1.0 cosTheta)))) (- 1.0 (+ cosTheta cosTheta)))) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta)))) (- -1.0 c)))",
    "output_parens": 28,
    "avg_bits_err_input": 0.6828617256700389,
    "avg_bits_err_output": 0.47709893520817054,
    "avg_bits_err_improve": 0.20576279046186835,
    "time": 23234.61669921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (- (expm1 (log1p (- (log (- 1.0 u1)))))))) (sin (* u2 (expm1 (log1p (* 2.0 PI))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.349306948014679,
    "avg_bits_err_output": 13.371623948769756,
    "avg_bits_err_improve": -0.022317000755077032,
    "time": 22494.84033203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (- (* (exp (log1p (* 2.0 PI))) u2) (* u2 1.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.394814497583212,
    "avg_bits_err_output": 13.39906937151205,
    "avg_bits_err_improve": -0.004254873928838165,
    "time": 23741.2275390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (/ (+ (* alpha (* (- alpha) (log (- 1.0 u0)))) (fma alpha alpha (* (- alpha) (+ alpha (* alpha (log (- 1.0 u0))))))) 2.0) (* (fma (- alpha) alpha (* alpha alpha)) (log (- 1.0 u0))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.280362091942722,
    "avg_bits_err_output": 13.954722045654412,
    "avg_bits_err_improve": 0.32564004628831,
    "time": 17693.5439453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ -1.0 (+ (/ sin2phi (* alphay alphay)) (+ (/ sin2phi (* alphay alphay)) (/ (+ cos2phi cos2phi) (* alphax alphax))))) (+ (log (- 1.0 u0)) (log (- 1.0 u0))))",
    "output_parens": 16,
    "avg_bits_err_input": 12.65511148338157,
    "avg_bits_err_output": 12.68031335722829,
    "avg_bits_err_improve": -0.025201873846720346,
    "time": 19976.353271484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (* PI l)) F) F))",
    "output_parens": 6,
    "avg_bits_err_input": 16.493597986284563,
    "avg_bits_err_output": 12.627409128929308,
    "avg_bits_err_improve": 3.8661888573552545,
    "time": 20377.852783203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2138327222622215,
    "avg_bits_err_output": 0.15629024101186093,
    "avg_bits_err_improve": 0.05754248125036057,
    "time": 15842.93212890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.859468280720668,
    "avg_bits_err_output": 10.373507091833686,
    "avg_bits_err_improve": 3.485961188886982,
    "time": 23349.575439453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (expm1 (log1p (/ (+ (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))) (- (expm1 (* PI (/ f 4.0))) (expm1 (* PI (/ f -4.0)))))))) (/ PI -4.0))",
    "output_parens": 20,
    "avg_bits_err_input": 61.53501356036294,
    "avg_bits_err_output": 1.8681608836315553,
    "avg_bits_err_improve": 59.66685267673139,
    "time": 53875.371826171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.87654474662172,
    "avg_bits_err_output": 33.39225726413966,
    "avg_bits_err_improve": 9.48428748248206,
    "time": 25687.22265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin th) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin ky))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8751220386912992,
    "avg_bits_err_output": 3.9230057125745676,
    "avg_bits_err_improve": -0.04788367388326842,
    "time": 27321.54638671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (log (+ 1.0 (expm1 (/ 1.0 (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))))) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 1.0164762837965524,
    "avg_bits_err_output": 1.0174762837965525,
    "avg_bits_err_improve": -0.001000000000000112,
    "time": 12306.326416015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.501658317288966,
    "avg_bits_err_output": 10.501658317288966,
    "avg_bits_err_improve": 0,
    "time": 15579.695556640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) INFINITY) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* U (- (* t (* 2.0 n)) (* 4.0 (* l (* n (/ l Om)))))) (* U (* 2.0 (* n (* (pow (/ l Om) 2.0) (* n (- U U*))))))))))",
    "output_parens": 76,
    "avg_bits_err_input": 34.563245528192134,
    "avg_bits_err_output": 28.5064907935524,
    "avg_bits_err_improve": 6.0567547346397355,
    "time": 38858.473876953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (/ (sin k) l)) (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) l) (tan k))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.57916968591727,
    "avg_bits_err_output": 36.463152043575356,
    "avg_bits_err_improve": 11.116017642341916,
    "time": 41216.934814453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -2e+61) (/ (/ 2.0 (* (/ (sin k) l) (/ (* (pow t 3.0) (tan k)) l))) (+ 2.0 (pow (/ k t) 2.0))) (if (<= t 6.2e+15) (/ 2.0 (* (tan k) (/ (* (/ (pow t 3.0) l) (* (sin k) (+ 2.0 (pow (/ k t) 2.0)))) l))) (/ (/ 2.0 (* (/ (sin k) l) (/ (* (pow t 3.0) (tan k)) l))) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 33.21556720405132,
    "avg_bits_err_output": 27.719363520475465,
    "avg_bits_err_improve": 5.496203683575853,
    "time": 17868.994384765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (* (cos th) (+ (* a2 a2) (* a1 a1))) (sqrt 2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5316951156468169,
    "avg_bits_err_output": 0.48059586720688235,
    "avg_bits_err_improve": 0.051099248439934575,
    "time": 20072.895263671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5182383812897454,
    "avg_bits_err_output": 0.469882832367866,
    "avg_bits_err_improve": 0.04835554892187943,
    "time": 17212.890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma J (exp (- l)) (fma (exp (- l)) (- J) (* J (- (exp l) (exp (- l)))))) (cos (/ K 2.0))) U)",
    "output_parens": 16,
    "avg_bits_err_input": 16.86010227587373,
    "avg_bits_err_output": 16.867743031925553,
    "avg_bits_err_improve": -0.007640756051824127,
    "time": 22319.20849609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 16,
    "avg_bits_err_input": 15.470931656540774,
    "avg_bits_err_output": 15.470931656540774,
    "avg_bits_err_improve": 0,
    "time": 7241.40869140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.14964624062518,
    "avg_bits_err_output": 18.14964624062518,
    "avg_bits_err_improve": 0,
    "time": 33946.88818359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* h (/ (pow (* D (/ M (* 2.0 d))) 2.0) l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.928901350771833,
    "avg_bits_err_output": 10.544919479653947,
    "avg_bits_err_improve": 3.3839818711178857,
    "time": 21439.53271484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 1e-316) (* c0 (sqrt (/ (/ A V) l))) (if (<= (/ A (* V l)) 5e+251) (* c0 (sqrt (if (!= (/ A (* l V)) 0.0) (/ 1.0 (/ 1.0 (/ A (* l V)))) (/ A (* l V))))) (* c0 (sqrt (* (/ A l) (/ 1.0 V))))))",
    "output_parens": 29,
    "avg_bits_err_input": 19.465906873322314,
    "avg_bits_err_output": 15.60825257395098,
    "avg_bits_err_improve": 3.857654299371335,
    "time": 17868.5107421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= c0 3.8e+139) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))) (if (<= c0 1.5e+241) (/ (/ (* c0 (fma d (* d (/ c0 (* w (* h (* D D))))) (sqrt (* (fma (* d d) (/ c0 (* w (* h (* D D)))) M) (- (/ (* (* d d) c0) (* w (* h (* D D)))) M))))) w) 2.0) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))))",
    "output_parens": 78,
    "avg_bits_err_input": 59.429657685104644,
    "avg_bits_err_output": 53.64761132585066,
    "avg_bits_err_improve": 5.782046359253982,
    "time": 43505.9013671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (/ (* M D) (+ d d)) 2.0) (+ l l)))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.602134880330688,
    "avg_bits_err_output": 25.392523101974867,
    "avg_bits_err_improve": 1.2096117783558213,
    "time": 39322.4384765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (+ (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -2.0) (- 1.0 (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.733236059195152,
    "avg_bits_err_output": 15.281010221982918,
    "avg_bits_err_improve": 0.4522258372122341,
    "time": 27437.9130859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 4.0 (- 1.0 (* v v))) (* 3.0 PI)) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9845731203125901,
    "avg_bits_err_output": 0.013834962500721158,
    "avg_bits_err_improve": 0.970738157811869,
    "time": 4913.911376953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.4586993025406222,
    "avg_bits_err_output": 0.11033531437767205,
    "avg_bits_err_improve": 0.3483639881629501,
    "time": 20486.93115234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (if (!= (sqrt (+ 1.0 (* (* v v) -3.0))) 0.0) (/ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (* v v) -3.0))))) (sqrt (+ 1.0 (* (* v v) -3.0))))) (- 1.0 (* v v)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.012146240625180289,
    "avg_bits_err_output": 0.012761842188131013,
    "avg_bits_err_improve": -0.0006156015629507246,
    "time": 9834.683837890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (if (!= (/ (* v (* v 10.0)) (+ (* v (+ v v)) -2.0)) 0.0) (if (!= 0.0 0.0) (/ (- (* (- (/ (/ (- (* v (* v 5.0)) (* v (* (* v -5.0) (* v (* v -5.0))))) (fma v v -1.0)) (* v (* v 5.0))) 0.0) 0.0) 0.0) 0.0) (- (/ (/ (- (* v (* v 5.0)) (* v (* (* v -5.0) (* v (* v -5.0))))) (fma v v -1.0)) (* v (* v 5.0))) 0.0)) (/ (fma v (* v -5.0) 1.0) (fma v v -1.0))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.5546123587068369,
    "avg_bits_err_output": 0.5696042044099575,
    "avg_bits_err_improve": -0.014991845703120621,
    "time": 15244.362548828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8381491208740295,
    "avg_bits_err_output": 1.8205241208740297,
    "avg_bits_err_improve": 0.01762499999999978,
    "time": 17599.490234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec EDonor) Vef)) KbT)))) (/ NaChar (- (exp (/ (- (+ Ev (+ Vef EAccept)) mu) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018230344508855918,
    "avg_bits_err_output": 0.018230344508855918,
    "avg_bits_err_improve": 0,
    "time": 7360.8427734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (if (!= (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0)) 0.0) (/ 1.0 (/ 1.0 (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0)))) (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.1817998125036057,
    "avg_bits_err_output": 0.20143531595216096,
    "avg_bits_err_improve": -0.019635503448555275,
    "time": 16474.400634765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18492463672813633,
    "avg_bits_err_output": 0.18492463672813633,
    "avg_bits_err_improve": 0,
    "time": 29102.7265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* b (* b (+ 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18631897236993444,
    "avg_bits_err_output": 0.18585185167066365,
    "avg_bits_err_improve": 0.00046712069927079547,
    "time": 5064.568603515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma 4.0 (* p p) (* x x))) 2.0) 2.0)) (+ (/ (+ x (+ (+ x x) (+ x x))) (* 4.0 (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0))) (/ x (* 4.0 (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0))))))))",
    "output_parens": 30,
    "avg_bits_err_input": 13.374506953137011,
    "avg_bits_err_output": 13.41010100794114,
    "avg_bits_err_improve": -0.035594054804128916,
    "time": 13655.29345703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.79512143001579,
    "avg_bits_err_output": 0.047875,
    "avg_bits_err_improve": 40.74724643001579,
    "time": 7215.968505859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (if (!= (/ x (- (tan x) x)) 0.0) (/ 1.0 (/ 1.0 (/ x (- (tan x) x)))) (/ x (- (tan x) x))))",
    "output_parens": 18,
    "avg_bits_err_input": 31.17525936815557,
    "avg_bits_err_output": 31.15685356434839,
    "avg_bits_err_improve": 0.018405803807180376,
    "time": 23168.85009765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.22785241872434,
    "avg_bits_err_output": 34.22785241872434,
    "avg_bits_err_improve": 0,
    "time": 16517.8427734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.23761159853698,
    "avg_bits_err_output": 34.23761159853698,
    "avg_bits_err_improve": 0,
    "time": 18707.853759765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(* (/ (- 1.0 (cos x)) x) (/ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 31.549309820278808,
    "avg_bits_err_output": 30.78555387463138,
    "avg_bits_err_improve": 0.7637559456474285,
    "time": 16535.339111328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))) 0.0) (/ 1.0 (/ 1.0 (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 22,
    "avg_bits_err_input": 32.9093314416616,
    "avg_bits_err_output": 32.9096504466825,
    "avg_bits_err_improve": -0.000319005020898544,
    "time": 16308.900390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (expm1 (if (!= (- (log1p N) (- (log N))) 0.0) (/ (- (* (log1p N) (log1p N)) (* (log N) (log N))) (- (log1p N) (- (log N)))) (- (log1p N) (log N))))))",
    "output_parens": 24,
    "avg_bits_err_input": 29.543885853594208,
    "avg_bits_err_output": 29.583849977459664,
    "avg_bits_err_improve": -0.039964123865456,
    "time": 11587.909423828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (/ (+ (/ -1.0 x) (/ (/ x x) (+ 1.0 x))) 2.0) (/ (+ 1.0 (/ -1.0 (/ (+ 1.0 x) x))) (+ x x))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 14.112249711393671,
    "avg_bits_err_output": 14.103954630433233,
    "avg_bits_err_improve": 0.008295080960438739,
    "time": 15004.606201171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (+ (cos x) -1.0) 0.0) (/ (- (* (cos (+ x eps)) (+ (cos x) -1.0)) (* (if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (/ 1.0 (+ (cos x) -1.0))) (+ (cos x) -1.0)) (+ (cos x) -1.0))) (+ (cos x) -1.0)) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 32,
    "avg_bits_err_input": 39.98961918396757,
    "avg_bits_err_output": 39.99412335399819,
    "avg_bits_err_improve": -0.004504170030621424,
    "time": 18279.97900390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- 1.0 (- (cbrt x) (+ -1.0 (cbrt (+ x 1.0)))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.10594522353427,
    "avg_bits_err_output": 29.782344678046613,
    "avg_bits_err_improve": 0.3236005454876576,
    "time": 10276.373291015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ 0.5 (sin x)) (/ (- 0.5 (cos x)) (sin x)))",
    "output_parens": 7,
    "avg_bits_err_input": 30.031646316473925,
    "avg_bits_err_output": 30.073804115187937,
    "avg_bits_err_improve": -0.04215779871401182,
    "time": 22462.173583984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* c (* a 4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.14834767390882,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": -0.005884921625074924,
    "time": 26523.1201171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (fma b b (* c (* a -4.0))))) -2.0) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.83041998751424,
    "avg_bits_err_output": 33.83378698848499,
    "avg_bits_err_improve": -0.0033670009707478243,
    "time": 21267.48583984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (/ (exp (log1p (log (- 1.0 x)))) (log1p x)) (/ 1.0 (log1p x)))",
    "output_parens": 9,
    "avg_bits_err_input": 61.348962375838774,
    "avg_bits_err_output": 59.58871386843664,
    "avg_bits_err_improve": 1.7602485074021317,
    "time": 19584.152587890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (if (!= (* (fma n (- (log1p n) (log n)) (log1p n)) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 0.0) (- (/ 1.0 (/ (- (exp (log1p (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 1.0) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) 0.0) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 58,
    "avg_bits_err_input": 63.0047477116072,
    "avg_bits_err_output": 44.21025682270182,
    "avg_bits_err_improve": 18.79449088890538,
    "time": 16387.065185546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (log (/ (- 1.0 eps) (+ 1.0 eps))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 58.6828873596938,
    "avg_bits_err_improve": -0.03620539588666105,
    "time": 16066.162109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (/ (log (+ 1.0 (expm1 (/ (+ -1.0 (/ x (tan x))) x)))) x) (/ -1.0 x))",
    "output_parens": 10,
    "avg_bits_err_input": 59.82052690918915,
    "avg_bits_err_output": 59.803103681978186,
    "avg_bits_err_improve": 0.01742322721096201,
    "time": 29387.395263671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (if (!= (- (* (/ eps (expm1 (* eps a))) (exp (* eps (+ a b)))) (/ (- eps) (expm1 (* eps a)))) 0.0) (* (/ (+ eps (* eps (exp (* eps (+ a b))))) (expm1 (* eps a))) (/ (* (/ eps (expm1 (* eps a))) (expm1 (* eps (+ a b)))) (- (* (/ eps (expm1 (* eps a))) (exp (* eps (+ a b)))) (/ (- eps) (expm1 (* eps a)))))) (* (/ eps (expm1 (* eps a))) (expm1 (* eps (+ a b))))) (expm1 (* eps b)))",
    "output_parens": 53,
    "avg_bits_err_input": 60.14925138088946,
    "avg_bits_err_output": 29.658880914430238,
    "avg_bits_err_improve": 30.490370466459222,
    "time": 27674.97412109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.10146429990704,
    "avg_bits_err_output": 0.4136981203125902,
    "avg_bits_err_improve": 40.687766179594455,
    "time": 4053.07470703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.63475144687459,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 58.63362644687459,
    "time": 3124.011474609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.611401246432838,
    "avg_bits_err_output": 0.019765210880563468,
    "avg_bits_err_improve": 29.591636035552273,
    "time": 5834.3857421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- 2.0 (exp (- x))) 0.0) (+ (* (- (exp (- x)) 2.0) (/ (- (+ (exp (- x)) (exp x)) 2.0) (- 2.0 (exp (- x))))) (/ (fma (- (exp x)) (- 2.0 (exp (- x))) (* (- 2.0 (exp (- x))) (exp x))) (- 2.0 (exp (- x))))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 40,
    "avg_bits_err_input": 29.516741666768688,
    "avg_bits_err_output": 28.940613707416695,
    "avg_bits_err_improve": 0.576127959351993,
    "time": 21579.807373046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (* (/ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 4.0 (+ 1.0 x))) (/ 4.0 (+ 1.0 x))) (/ 1.0 (- x 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 9.27282688135644,
    "avg_bits_err_output": 9.273345504892568,
    "avg_bits_err_improve": -0.000518623536127194,
    "time": 27626.568359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (if (!= (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps))) 0.0) (/ (+ (* (tan (+ x eps)) (* (/ (- (* (tan x) (/ (tan x) (tan (+ x eps)))) (tan (+ x eps))) (tan (+ x eps))) (- (tan (+ x eps))))) (* (tan (+ x eps)) (fma (/ (* (tan x) (/ (tan x) (tan (+ x eps)))) (- (tan (+ x eps)))) (tan (+ x eps)) (* (tan (+ x eps)) (* (tan x) (/ (/ (tan x) (tan (+ x eps))) (tan (+ x eps)))))))) (+ (tan (+ x eps)) (tan x))) (* (tan (+ x eps)) (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 83,
    "avg_bits_err_input": 36.824550139501774,
    "avg_bits_err_output": 36.92518289147876,
    "avg_bits_err_improve": -0.10063275197698829,
    "time": 19370.484619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (expm1 (- (exp (log1p (log (- (- (sqrt x) (sqrt (+ x 1.0))) -2.0)))) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 30.3118285325049,
    "avg_bits_err_output": 29.19966882166728,
    "avg_bits_err_improve": 1.11215971083762,
    "time": 10198.738037109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (- (/ (sin (+ x eps)) (sin (+ x eps))) (/ (sin x) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 21,
    "avg_bits_err_input": 37.076640996947305,
    "avg_bits_err_output": 37.08072742279368,
    "avg_bits_err_improve": -0.004086425846374198,
    "time": 15499.775390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) 0.0) (/ (/ (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) (sqrt (+ 1.0 x))) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x))))) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 24,
    "avg_bits_err_input": 20.160534528008185,
    "avg_bits_err_output": 20.153426243254827,
    "avg_bits_err_improve": 0.007108284753357452,
    "time": 14448.21728515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.638241763027859,
    "avg_bits_err_output": 14.638241763027859,
    "avg_bits_err_improve": 0,
    "time": 5689.769287109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (+ (log (+ (exp a) (exp b))) -1.0) 0.0) (* (+ (log (+ (exp a) (exp b))) -1.0) (/ (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) -1.0))) (log (+ (exp a) (exp b))))",
    "output_parens": 27,
    "avg_bits_err_input": 29.50977604596259,
    "avg_bits_err_output": 29.516299730338854,
    "avg_bits_err_improve": -0.006523684376265493,
    "time": 43150.017578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (+ (- 1.0 m) (* (/ m v) (- m (* m m)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07411804531403245,
    "avg_bits_err_output": 0.07775391956416637,
    "avg_bits_err_improve": -0.0036358742501339247,
    "time": 15083.091552734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.090487036499425,
    "avg_bits_err_output": 0.30696973750504797,
    "avg_bits_err_improve": 15.783517298994377,
    "time": 10547.5771484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* PI angle) 0.005555555555555556))) 2.0) (pow (* b (sin (/ (* PI angle) 180.0))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.331947925664565,
    "avg_bits_err_output": 20.349372883195795,
    "avg_bits_err_improve": -0.017424957531229524,
    "time": 25612.859619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (* 2.0 (pow b 2.0)) (sin (* PI (/ angle 180.0))) (- (* 2.0 (* (pow a 2.0) (sin (* PI (/ angle 180.0))))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 31.72152342700583,
    "avg_bits_err_output": 31.69887416332218,
    "avg_bits_err_improve": 0.02264926368365039,
    "time": 33054.87744140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (+ (* PI (/ (+ angle (+ (+ angle angle) (+ angle angle))) 1440.0)) (* PI (/ (+ angle (+ angle angle)) 1440.0))))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.567626989963102,
    "avg_bits_err_output": 20.58069610945431,
    "avg_bits_err_improve": -0.013069119491206038,
    "time": 29416.75390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18167932343849155,
    "avg_bits_err_output": 0.1760498429614923,
    "avg_bits_err_improve": 0.005629480476999266,
    "time": 15132.746337890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3253321527932952,
    "avg_bits_err_output": 0.3142967054206411,
    "avg_bits_err_improve": 0.011035447372654106,
    "time": 16907.617919921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ e (fma e (cos v) 1.0)) (sin v))",
    "output_parens": 5,
    "avg_bits_err_input": 0.13404248125036058,
    "avg_bits_err_output": 0.13496936093777043,
    "avg_bits_err_improve": -0.0009268796874098428,
    "time": 15521.55322265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (if (!= (cos phi1) 0.0) (/ (* (cos phi1) (* (cos phi2) (* (cos (- lambda1 lambda2)) (cos phi1)))) (cos phi1)) (* (cos phi2) (* (cos (- lambda1 lambda2)) (cos phi1)))))) R)",
    "output_parens": 24,
    "avg_bits_err_input": 16.773023324629563,
    "avg_bits_err_output": 16.7713086337428,
    "avg_bits_err_improve": 0.0017146908867609056,
    "time": 31377.890869140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 90000000000.0) (/ (if (!= (- b (- (sqrt (fma a (* c -4.0) (* b b))))) 0.0) (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))) (* b (- b))) (- b (- (sqrt (fma a (* c -4.0) (* b b)))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0)) (/ (- (if (!= (+ (sqrt (fma a (* c -4.0) (* b b))) (+ b -1.0)) 0.0) (/ (- (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (* (+ b -1.0) (+ b -1.0))) (+ (sqrt (fma a (* c -4.0) (* b b))) (+ b -1.0))) (- (sqrt (fma a (* c -4.0) (* b b))) (+ b -1.0))) 1.0) (* a 2.0)))",
    "output_parens": 72,
    "avg_bits_err_input": 52.41577278449764,
    "avg_bits_err_output": 50.19168149684312,
    "avg_bits_err_improve": 2.224091287654524,
    "time": 31911.54296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (fma (sqrt (fma -4.0 (* a c) (* b b))) (sqrt (fma -4.0 (* a c) (* b b))) (- (* b b))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 28.773278837012505,
    "avg_bits_err_output": 28.162813813329954,
    "avg_bits_err_improve": 0.6104650236825506,
    "time": 31626.093505859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (if (!= (* b b) 0.0) (/ (fma (* b b) (* b b) (* (* b b) (* (sqrt (fma b b (* c (* a -4.0)))) (- b)))) (* b b)) (* b (- b (sqrt (fma b b (* c (* a -4.0))))))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (/ (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 4.0))",
    "output_parens": 42,
    "avg_bits_err_input": 43.91716270595241,
    "avg_bits_err_output": 42.79538943218583,
    "avg_bits_err_improve": 1.1217732737665784,
    "time": 27852.092529296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.1542325955339,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": 0,
    "time": 19936.521484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (* (cos phi1) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))) (cos phi1)) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.9275932301321357,
    "avg_bits_err_output": 0.931289676168201,
    "avg_bits_err_improve": -0.0036964460360653373,
    "time": 24100.331298828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(/ (if (!= (* (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) (/ (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 2.0)) 0.0) (/ (- (* (* (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) (/ (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 2.0)) (* (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) (/ (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 2.0))) (* (* (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) (/ (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 2.0)) (* (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) (/ (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) 2.0)))) (* (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) (/ (- 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 2.0))) (- 2.0 (* 2.0 (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))))) -2.0)",
    "output_parens": 109,
    "avg_bits_err_input": 29.428468357254232,
    "avg_bits_err_output": 29.43361589704203,
    "avg_bits_err_improve": -0.00514753978779936,
    "time": 22717.592041015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(- (- (/ (exp x) (+ (exp x) (exp (- x)))) (/ (if (!= (/ (exp (- x)) (+ (exp x) (exp (- x)))) 0.0) (/ 4.0 (/ 4.0 (/ (exp (- x)) (+ (exp x) (exp (- x)))))) (/ (exp (- x)) (+ (exp x) (exp (- x))))) 2.0)) (/ (/ (exp (- x)) (+ (exp x) (exp (- x)))) 2.0))",
    "output_parens": 42,
    "avg_bits_err_input": 58.248533931562456,
    "avg_bits_err_output": 58.25570894464192,
    "avg_bits_err_improve": -0.007175013079461223,
    "time": 17335.04833984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (+ (exp (- x)) -1.0)) 2.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.18737650829796,
    "avg_bits_err_output": 50.18227131910375,
    "avg_bits_err_improve": 8.00510518919421,
    "time": 15196.870849609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(log (expm1 (log1p (exp (/ 2.0 (+ (exp x) (exp (- x))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.009026789890100096,
    "avg_bits_err_output": 0.16410507536459276,
    "avg_bits_err_improve": -0.15507828547449268,
    "time": 4608.615966796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.761290241011864,
    "avg_bits_err_output": 32.761290241011864,
    "avg_bits_err_improve": 0,
    "time": 4457.754638671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (exp (log1p (log (/ (- -1.0 x) (+ x -1.0))))) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 58.62976193228778,
    "avg_bits_err_output": 58.683558324860314,
    "avg_bits_err_improve": -0.05379639257253643,
    "time": 22465.927001953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05073836132445107,
    "avg_bits_err_output": 0.05127124062518029,
    "avg_bits_err_improve": -0.0005328793007292193,
    "time": 2639.760986328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* eh (* (cos t) (sin (atan (/ eh (* ew (tan t)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12277124062518029,
    "avg_bits_err_output": 0.12244812031259014,
    "avg_bits_err_improve": 0.0003231203125901444,
    "time": 23201.451171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12832312031259013,
    "avg_bits_err_output": 0.12832312031259013,
    "avg_bits_err_improve": 0,
    "time": 30001.3720703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.425490359356836,
    "avg_bits_err_output": 3.70792237477895,
    "avg_bits_err_improve": 35.71756798457788,
    "time": 26267.358154296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(expm1 (log1p (sqrt (* (* (fabs (- a b)) (* (fabs (+ b a)) (/ 1.0 a))) (/ 1.0 a)))))",
    "output_parens": 12,
    "avg_bits_err_input": 14.467379223809136,
    "avg_bits_err_output": 0.031205451565835363,
    "avg_bits_err_improve": 14.4361737722433,
    "time": 7962.052490234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (if (!= (exp (log1p (fma (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (sin phi1)) (cos delta)))) 0.0) (/ (* (fma (sin phi1) (- (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1))))))) (cos delta)) (+ (cos delta) (fma (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (sin phi1)) 1.0))) (exp (log1p (fma (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (sin phi1)) (cos delta))))) (fma (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (sin phi1)) (cos delta)))))",
    "output_parens": 86,
    "avg_bits_err_input": 0.15031926026065223,
    "avg_bits_err_output": 0.15618197782129797,
    "avg_bits_err_improve": -0.0058627175606457416,
    "time": 35634.6279296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (- (/ (sqrt (fma c (* a -3.0) (* b b))) (* a 3.0)) (/ b (* a -3.0))) 0.0) (/ (fma (/ (sqrt (fma -3.0 (* c a) (* b b))) (* a 3.0)) (/ (sqrt (fma -3.0 (* c a) (* b b))) (* a 3.0)) (/ (/ (* b (/ b a)) 9.0) (- a))) (- (/ (sqrt (fma c (* a -3.0) (* b b))) (* a 3.0)) (/ b (* a -3.0)))) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333))",
    "output_parens": 46,
    "avg_bits_err_input": 52.432124763581655,
    "avg_bits_err_output": 51.570900796712486,
    "avg_bits_err_improve": 0.8612239668691686,
    "time": 33412.29443359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (+ (* (* b b) (fma b b (* (sqrt (fma b b (* c (* a -3.0)))) (- (sqrt (fma b b (* c (* a -3.0)))))))) (fma (- (sqrt (fma b b (* c (* a -3.0))))) (* (* b b) (sqrt (fma b b (* c (* a -3.0))))) (* (* b b) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))))) (* b (- b))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 77,
    "avg_bits_err_input": 28.98665986906457,
    "avg_bits_err_output": 28.51855978584423,
    "avg_bits_err_improve": 0.46810008322034236,
    "time": 31594.5654296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (fma b b (* (sqrt (fma b b (* c (* a -3.0)))) (- (sqrt (fma b b (* c (* a -3.0))))))) 0.0) (/ 1.0 (/ 1.0 (if (!= (* b (- b)) 0.0) (/ (fma (* b b) (* b b) (* (* (sqrt (fma b b (* -3.0 (* a c)))) (sqrt (fma b b (* -3.0 (* a c))))) (* b (- b)))) (* b (- b))) (* (- (sqrt (fma b b (* -3.0 (* a c)))) b) (+ b (sqrt (fma b b (* -3.0 (* a c))))))))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 81,
    "avg_bits_err_input": 43.988148458846915,
    "avg_bits_err_output": 42.959879892672085,
    "avg_bits_err_improve": 1.0282685661748303,
    "time": 36070.2900390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.200232836986736,
    "avg_bits_err_output": 34.200232836986736,
    "avg_bits_err_improve": 0,
    "time": 21513.46826171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.309146663637202,
    "avg_bits_err_output": 13.309146663637202,
    "avg_bits_err_improve": 0,
    "time": 30920.60400390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.22226749814124,
    "avg_bits_err_output": 0.5290098950059389,
    "avg_bits_err_improve": 28.6932576031353,
    "time": 20071.568115234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.013125,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 0,
    "time": 5301.69140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (log (+ 1.0 (expm1 (- 1.0 (/ x (+ x -1.0)))))) (- (/ 1.0 (+ x -1.0)))) (+ 1.0 x))",
    "output_parens": 12,
    "avg_bits_err_input": 14.034993816559629,
    "avg_bits_err_output": 12.216099905080654,
    "avg_bits_err_improve": 1.818893911478975,
    "time": 17422.7568359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (+ (* (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0))))) (* (fma (* A (* C -8.0)) (- (+ A C) (expm1 (log1p (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* (- (+ A C) (expm1 (log1p (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* A (* C 8.0)))) F))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 45,
    "avg_bits_err_input": 51.961170785148546,
    "avg_bits_err_output": 52.26868451803893,
    "avg_bits_err_improve": -0.30751373289038497,
    "time": 43683.330078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(if (<= A -7e+50) (* 180.0 (/ (atan (if (!= (fma (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (/ -1.0 B) (/ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) B)) 0.0) 0.0 (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B))) PI)) (* 180.0 (+ (+ 1.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI)) -1.0)))",
    "output_parens": 41,
    "avg_bits_err_input": 29.392346234756975,
    "avg_bits_err_output": 28.502536974192093,
    "avg_bits_err_improve": 0.8898092605648813,
    "time": 29323.613037109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (* (pow B 2.0) 2.0) (* A (* C 8.0))) (* F (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.00291471876566,
    "avg_bits_err_output": 51.77609404109278,
    "avg_bits_err_improve": 0.22682067767287606,
    "time": 35765.546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.184989911331883,
    "avg_bits_err_output": 15.184989911331883,
    "avg_bits_err_improve": 0,
    "time": 2231.82470703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (+ g (sqrt (fma h (- h) (* g g)))) 0.0) (/ (- (* (sqrt (fma h (- h) (* g g))) (sqrt (fma h (- h) (* g g)))) (* g g)) (+ g (sqrt (fma h (- h) (* g g))))) (- (sqrt (fma h (- h) (* g g))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 36.10907955477037,
    "avg_bits_err_output": 36.097920854066984,
    "avg_bits_err_improve": 0.011158700703383317,
    "time": 12836.06201171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9885077078205238,
    "avg_bits_err_output": 0.9734718046888522,
    "avg_bits_err_improve": 0.01503590313167158,
    "time": 5101.848876953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6606981203125901,
    "avg_bits_err_output": 0.6648161656266227,
    "avg_bits_err_improve": -0.004118045314032592,
    "time": 3933.958251953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -4e+276) (/ (* a2 (/ a1 b1)) b2) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-321) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 4e-307) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+246) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 11.550700597999379,
    "avg_bits_err_output": 2.9675429944142957,
    "avg_bits_err_improve": 8.583157603585082,
    "time": 11577.21337890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5152431164648773,
    "avg_bits_err_output": 0.43469812031259014,
    "avg_bits_err_improve": 0.08054499615228716,
    "time": 9965.17138671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (- (+ x (expm1 (log (+ (hypot 1.0 x) 2.0)))) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 53.11708979415488,
    "avg_bits_err_output": 45.05747021501679,
    "avg_bits_err_improve": 8.059619579138086,
    "time": 14954.8681640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (if (!= (+ (log a) (log b)) 0.0) (fma (+ (log a) (log b)) (/ (log a) (+ (log a) (log b))) (log b)) (+ (log a) (log b))))",
    "output_parens": 19,
    "avg_bits_err_input": 5.6611866482956055,
    "avg_bits_err_output": 5.805923214125723,
    "avg_bits_err_improve": -0.14473656583011785,
    "time": 12286.433349609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- x (- 2.0 x)) (- (- -2.0 x) x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.0155,
    "avg_bits_err_output": 0.021,
    "avg_bits_err_improve": -0.005500000000000001,
    "time": 3456.574462890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1276.013916015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.560425494193913,
    "avg_bits_err_output": 0.5856883674448178,
    "avg_bits_err_improve": 11.974737126749096,
    "time": 23692.64404296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (* x1 x1) (fma (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))))) (+ x1 x1)))",
    "output_parens": 47,
    "avg_bits_err_input": 0.5183431564370132,
    "avg_bits_err_output": 0.29379349795169785,
    "avg_bits_err_improve": 0.22454965848531538,
    "time": 72919.27001953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.08953280509871,
    "avg_bits_err_output": 1.3328160756775498,
    "avg_bits_err_improve": 16.75671672942116,
    "time": 10171.832763671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x x) (* 0.12900613773279798 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2636062031259014,
    "avg_bits_err_output": 0.18745056406367183,
    "avg_bits_err_improve": 0.07615563906222955,
    "time": 6472.3349609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026981203125901448,
    "avg_bits_err_output": 0.0026981203125901448,
    "avg_bits_err_improve": 0,
    "time": 2220.073486328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (- (/ (/ 0.5 (- b a)) b) 0.0) (/ 1.0 (* a (* (- b a) 2.0)))) (- (/ PI (+ a b))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.646059466340832,
    "avg_bits_err_output": 0.2793781968856367,
    "avg_bits_err_improve": 14.366681269455196,
    "time": 16508.596435546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.306274922815316,
    "avg_bits_err_output": 24.626760413750432,
    "avg_bits_err_improve": 4.679514509064884,
    "time": 22199.98291015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.018875,
    "avg_bits_err_output": 0.018875,
    "avg_bits_err_improve": 0,
    "time": 4119.871826171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.023,
    "avg_bits_err_output": 0.023,
    "avg_bits_err_improve": 0,
    "time": 6870.04248046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (fma (* 2.0 (/ t (+ 1.0 t))) (* 2.0 (/ t (+ 1.0 t))) 1.0) (fma (* 2.0 (/ t (+ 1.0 t))) (* 2.0 (/ t (+ 1.0 t))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.04675,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 0.03975,
    "time": 11475.279296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3226.4208984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2694.222412109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2515.611328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.8139700812676445,
    "avg_bits_err_output": 0.24525,
    "avg_bits_err_improve": 7.568720081267644,
    "time": 17345.072998046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.418636990969528,
    "avg_bits_err_output": 7.418636990969528,
    "avg_bits_err_improve": 0,
    "time": 3663.725341796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (+ (pow (+ x eps) 2.0) (pow x 2.0)) 0.0) (fma (- (pow (+ x eps) 2.0) (pow x 2.0)) (/ (+ (pow (+ x eps) 2.0) (pow x 2.0)) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (fma (/ (pow x 2.0) (- (- (pow (+ x eps) 2.0)) (pow x 2.0))) (+ (pow (+ x eps) 2.0) (pow x 2.0)) (* (+ (pow (+ x eps) 2.0) (pow x 2.0)) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 47,
    "avg_bits_err_input": 15.505556957623671,
    "avg_bits_err_output": 15.505725393476029,
    "avg_bits_err_improve": -0.00016843585235726266,
    "time": 23622.180908203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (- 0.0 (/ (/ 1.0 (/ 1.0 (* (exp (* 10.0 (* x x))) (* (expm1 (log1p (exp (* 10.0 (* x x))))) (- (exp (log1p (* (cos x) (cos x)))) 1.0))))) (- (/ 2.0 (/ (/ 2.0 (cos x)) (exp (* 10.0 (* x x)))))))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 40,
    "avg_bits_err_input": 3.5236648542646294,
    "avg_bits_err_output": 3.524151396067022,
    "avg_bits_err_improve": -0.00048654180239271483,
    "time": 23741.30322265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.070886192041119,
    "avg_bits_err_output": 15.070886192041119,
    "avg_bits_err_improve": 0,
    "time": 12039.357421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.51272108009075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.51272108009075,
    "time": 4312.091796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.840564387060496,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.840064387060494,
    "time": 3987.455322265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(if (!= (* 1.7e+308 t) 0.0) (* t (/ (* 1.7e+308 (+ -1.0 t)) t)) (/ (/ (* -1.7e+308 (- 1.7e+308 (* 1.7e+308 t))) -1.7e+308) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29821936093777035,
    "avg_bits_err_improve": 63.70178063906223,
    "time": 17514.05126953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84324597984583,
    "avg_bits_err_output": 0.384,
    "avg_bits_err_improve": 61.45924597984583,
    "time": 7485.437255859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (fma b b (* c (* a -4.0))))) -2.0) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.83041998751424,
    "avg_bits_err_output": 33.83378698848499,
    "avg_bits_err_improve": -0.0033670009707478243,
    "time": 22820.60791015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.1542325955339,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": 0,
    "time": 23647.48486328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2292.499267578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.153440145217154,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 40.14206514521715,
    "time": 4383.19091796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.24408881976937,
    "avg_bits_err_output": 20.24333881976937,
    "avg_bits_err_improve": 0.0007500000000000284,
    "time": 5406.112548828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ (+ c b) (+ d a)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6807592107043496,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6807592107043496,
    "time": 7172.14111328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03975,
    "avg_bits_err_output": 0.03975,
    "avg_bits_err_improve": 0,
    "time": 3140.936767578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019896240625180292,
    "avg_bits_err_output": 0.010625,
    "avg_bits_err_improve": 0.009271240625180291,
    "time": 2284.361328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.013125,
    "time": 2684.375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1303.3486328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ c a) (+ b d)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40911597813022865,
    "avg_bits_err_output": 0.22975,
    "avg_bits_err_improve": 0.17936597813022864,
    "time": 6190.45166015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (+ 1.0 (exp (log1p (- 1.0 (cos x))))) 0.0) (/ (+ (* (exp (log1p (- 1.0 (cos x)))) (exp (log1p (- 1.0 (cos x))))) -1.0) (+ 1.0 (exp (log1p (- 1.0 (cos x)))))) (- 1.0 (cos x)))",
    "output_parens": 25,
    "avg_bits_err_input": 29.737439948755863,
    "avg_bits_err_output": 29.764245440465864,
    "avg_bits_err_improve": -0.02680549171000024,
    "time": 20078.24853515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(if (!= (+ x (sqrt (- (* x x) eps))) 0.0) (fma x (/ x (+ x (sqrt (- (* x x) eps)))) (* (sqrt (- (* x x) eps)) (- (exp (log1p (/ (sqrt (- (* x x) eps)) (- (- x) (sqrt (- (* x x) eps)))))) 1.0))) (- x (sqrt (- (* x x) eps))))",
    "output_parens": 32,
    "avg_bits_err_input": 24.378553841773787,
    "avg_bits_err_output": 24.39185617556131,
    "avg_bits_err_improve": -0.013302333787521547,
    "time": 12929.668701171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ (/ x (* (tan x) 2.0)) (log1p (expm1 (/ (- (/ x 2.0) (sin x)) (tan x)))))",
    "output_parens": 11,
    "avg_bits_err_input": 30.13032666123096,
    "avg_bits_err_output": 30.157256989545214,
    "avg_bits_err_improve": -0.026930328314254126,
    "time": 26864.699951171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590145,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.006073120312590144,
    "time": 2546.234619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -2.15e-47) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i n)))) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 6e+151) (+ (+ (+ -1.0 (/ -100.0 (/ i n))) (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (/ i n)))) 1.0) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i n)))) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 71,
    "avg_bits_err_input": 47.562523908102385,
    "avg_bits_err_output": 45.96851246906812,
    "avg_bits_err_improve": 1.5940114390342615,
    "time": 24909.095947265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.13673888214304,
    "avg_bits_err_output": 23.117305392018306,
    "avg_bits_err_improve": 3.019433490124733,
    "time": 13019.1943359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 2e+303) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 25.721552241386195,
    "avg_bits_err_output": 22.269388454120705,
    "avg_bits_err_improve": 3.4521637872654907,
    "time": 13973.13720703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033875,
    "avg_bits_err_output": 0.021859921543825708,
    "avg_bits_err_improve": 0.012015078456174295,
    "time": 4417.72705078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (if (!= (- ux (- (* ux ux) ux)) 0.0) (/ (+ (* (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) (+ ux ux))) (fma (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) (+ ux ux)) (* (+ ux (* ux (- 1.0 ux))) (+ (+ ux (* ux (- 1.0 ux))) (+ ux (* ux (- 1.0 ux))))))) (+ (+ ux (* ux (- 1.0 ux))) (+ ux (* ux (- 1.0 ux))))) (- (* (- 1.0 ux) (+ ux -1.0)) (fma (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))) -1.0)))))",
    "output_parens": 60,
    "avg_bits_err_input": 13.52321638343316,
    "avg_bits_err_output": 0.5554461939694023,
    "avg_bits_err_improve": 12.967770189463758,
    "time": 24310.744384765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- (- ux (* ux ux)) (- ux)) (- (* (* ux maxCos) (+ (fma ux maxCos (- 1.0 ux)) (- 1.0 ux)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.563306556753554,
    "avg_bits_err_output": 0.34382458876934924,
    "avg_bits_err_improve": 13.219481967984205,
    "time": 22199.935546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* maxCos maxCos) (* (* (- 1.0 ux) (- 1.0 ux)) (* ux ux))))) (* (sin (* PI (* uy 2.0))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.3314456029260001,
    "avg_bits_err_output": 0.3194524873233918,
    "avg_bits_err_improve": 0.011993115602608295,
    "time": 49025.201171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.19989265691970173,
    "avg_bits_err_output": 0.19989265691970173,
    "avg_bits_err_improve": 0,
    "time": 18559.65087890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (+ (/ (/ u1 (- 1.0 u1)) 8.0) (+ (/ u1 (- 2.0 (+ u1 u1))) (/ (/ u1 (- 1.0 u1)) 8.0))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.5388518745975742,
    "avg_bits_err_output": 0.5451200097089166,
    "avg_bits_err_improve": -0.006268135111342388,
    "time": 23316.35546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (if (!= (- (* u2 -6.28318530718) 2.0) 0.0) (/ (+ (* u2 (* u2 39.47841760436263)) (* u2 12.56637061436)) (+ (* 6.28318530718 u2) 2.0)) (* 6.28318530718 u2))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3193740149427155,
    "avg_bits_err_output": 0.33669187159057606,
    "avg_bits_err_improve": -0.017317856647860563,
    "time": 20776.81591796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.33106943524805477,
    "avg_bits_err_output": 0.3312240651477174,
    "avg_bits_err_improve": -0.0001546298996626394,
    "time": 38280.283935546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(log1p (expm1 (/ 1.0 (+ (exp (/ x (- s))) 1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0566284130638754,
    "avg_bits_err_output": 0.06295397712754726,
    "avg_bits_err_improve": -0.006325564063671858,
    "time": 7678.50634765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (- (fabs x)) s)) (+ (- (exp (log1p (exp (/ (fabs x) (- s))))) 1.0) 1.0)) (* s (+ (exp (/ (- (fabs x)) s)) 1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.16613285452224863,
    "avg_bits_err_output": 0.150895564352058,
    "avg_bits_err_improve": 0.015237290170190626,
    "time": 20678.409912109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(/ (* (sin (* PI (* tau x))) (/ (sin (* PI x)) (* PI (* tau x)))) (* PI x))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6683661899137501,
    "avg_bits_err_output": 0.7210863452313898,
    "avg_bits_err_improve": -0.05272015531763974,
    "time": 20054.375244140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1596515861568558,
    "avg_bits_err_output": 0.15646355769904188,
    "avg_bits_err_improve": 0.0031880284578139073,
    "time": 18193.2412109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5288712353957905,
    "avg_bits_err_output": 2.5288712353957905,
    "avg_bits_err_improve": 0,
    "time": 30921.82470703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (/ (* (* cosTheta_i (/ 2.0 v)) (* (/ cosTheta_O (sinh (/ 1.0 v))) (/ 0.25 v))) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46140259357247504,
    "avg_bits_err_output": 0.3599055473407118,
    "avg_bits_err_improve": 0.10149704623176325,
    "time": 27434.038330078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.0) (/ (* (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))) (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v)) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.13207255135387566,
    "avg_bits_err_output": 0.15720340431260016,
    "avg_bits_err_improve": -0.025130852958724498,
    "time": 16314.0576171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (/ (* alpha (/ alpha PI)) (log (* alpha alpha))) (/ 1.0 (* PI (log (* alpha alpha))))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4592061850091888,
    "avg_bits_err_output": 0.5346858164281806,
    "avg_bits_err_improve": -0.07547963141899178,
    "time": 22489.214599609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) s))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3308150195375212,
    "avg_bits_err_output": 1.246879994024334,
    "avg_bits_err_improve": 0.08393502551318721,
    "time": 30248.919921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(if (!= (* s (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) 0.0) (* (* s (log (/ 1.0 (fma u -4.0 1.0)))) (* s (/ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) (* s (+ 1.0 (- (+ (log (/ 1.0 (fma u -4.0 1.0))) -1.0) -1.0)))))) (* s (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 29,
    "avg_bits_err_input": 12.472208825576596,
    "avg_bits_err_output": 12.543159382047222,
    "avg_bits_err_improve": -0.07095055647062587,
    "time": 29672.951904296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (* r -0.3333333333333333) s))) (* r (* (/ s 0.16666666666666666) PI))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13923235097205922,
    "avg_bits_err_output": 0.14370218301717494,
    "avg_bits_err_improve": -0.004469832045115724,
    "time": 28715.361083984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* u normAngle)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8455285600998349,
    "avg_bits_err_output": 0.6845863668884626,
    "avg_bits_err_improve": 0.16094219321137226,
    "time": 24453.03662109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (fma (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta))) (+ 1.0 c)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.7076747669225678,
    "avg_bits_err_output": 0.48806352641139306,
    "avg_bits_err_improve": 0.21961124051117475,
    "time": 25329.941162109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(if (!= (- (* (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (sin (* 2.0 (* PI u2)))) (- (sin (* 2.0 (* PI u2))))) 0.0) (/ (* (sqrt (- (log (- 1.0 u1)))) (* (* (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2)))) (+ 1.0 (+ 1.0 (sqrt (- (- 1.0 (exp (log1p (- (log (- 1.0 u1)))))))))))) (- (* (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (sin (* 2.0 (* PI u2)))) (- (sin (* 2.0 (* PI u2)))))) (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 62,
    "avg_bits_err_input": 13.505166915409903,
    "avg_bits_err_output": 13.524740006064468,
    "avg_bits_err_improve": -0.01957309065456414,
    "time": 30473.762939453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* 2.0 (* PI u2))) (+ 1.0 (+ (sqrt (- (log (- 1.0 u1)))) -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.554990548217358,
    "avg_bits_err_output": 13.563440262208985,
    "avg_bits_err_improve": -0.008449713991627306,
    "time": 22621.264404296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (* (log (- 1.0 u0)) (- alpha (* alpha alpha))) 0.0) (* (* (* alpha alpha) (* (log (- 1.0 u0)) (- alpha (* alpha alpha)))) (/ (log (- 1.0 u0)) (* (log (- 1.0 u0)) (- (* alpha alpha) alpha)))) (* (log (- 1.0 u0)) (* alpha (- alpha))))",
    "output_parens": 28,
    "avg_bits_err_input": 14.06827126295669,
    "avg_bits_err_output": 14.075265552470858,
    "avg_bits_err_improve": -0.006994289514167917,
    "time": 23594.779296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (if (!= (/ cos2phi (* alphax alphax)) 0.0) (* (/ cos2phi alphax) (/ cos2phi (* cos2phi alphax))) (/ cos2phi (* alphax alphax))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.607422848736979,
    "avg_bits_err_output": 12.611399877151824,
    "avg_bits_err_improve": -0.003977028414844597,
    "time": 14948.989013671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (log1p (expm1 (tan (* PI l)))) F) F))",
    "output_parens": 8,
    "avg_bits_err_input": 16.648886789168525,
    "avg_bits_err_output": 12.66155647285129,
    "avg_bits_err_improve": 3.9873303163172356,
    "time": 18777.398681640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.20313176194006882,
    "avg_bits_err_output": 0.14545264201415933,
    "avg_bits_err_improve": 0.05767911992590949,
    "time": 18645.280517578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.674082945768122,
    "avg_bits_err_output": 10.558004974720724,
    "avg_bits_err_improve": 3.116077971047398,
    "time": 21674.49365234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (/ (* PI f) 4.0)) (exp (* PI (/ f -4.0)))) (if (!= (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) 0.0) (if (!= (* (exp (* PI (/ f -4.0))) (/ (exp (* PI (/ f -4.0))) (- (- (exp (* PI (/ f -4.0)))) (exp (* PI (/ f 4.0)))))) 0.0) (/ (- (* (* (exp (* PI (/ f -4.0))) (/ (exp (* PI (/ f -4.0))) (- (- (exp (* PI (/ f -4.0)))) (exp (* PI (/ f 4.0)))))) (* (exp (* PI (/ f -4.0))) (/ (exp (* PI (/ f -4.0))) (- (- (exp (* PI (/ f -4.0)))) (exp (* PI (/ f 4.0))))))) (* (* (exp (* PI (/ f -4.0))) (/ (exp (* PI (/ f -4.0))) (- (- (exp (* PI (/ f -4.0)))) (exp (* PI (/ f 4.0)))))) (* (exp (* PI (/ f 4.0))) (/ (exp (* PI (/ f 4.0))) (- (- (exp (* PI (/ f -4.0)))) (exp (* PI (/ f 4.0)))))))) (* (exp (* PI (/ f -4.0))) (/ (exp (* PI (/ f -4.0))) (- (- (exp (* PI (/ f -4.0)))) (exp (* PI (/ f 4.0))))))) (* (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 152,
    "avg_bits_err_input": 61.512769494777324,
    "avg_bits_err_output": 61.520554463991914,
    "avg_bits_err_improve": -0.007784969214590376,
    "time": 65996.2080078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.729269903665504,
    "avg_bits_err_output": 33.8878201076753,
    "avg_bits_err_improve": 8.8414497959902,
    "time": 23321.1728515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.613972633566915,
    "avg_bits_err_output": 3.613972633566915,
    "avg_bits_err_improve": 0,
    "time": 25828.850830078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0567992787880738,
    "avg_bits_err_output": 1.0569242787880737,
    "avg_bits_err_improve": -0.00012499999999993072,
    "time": 9727.081298828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (+ 2.0 (* (pow (/ t l) 2.0) 4.0)))) (/ (pow (/ Om Omc) 2.0) (+ 2.0 (* (pow (/ t l) 2.0) 4.0))))))",
    "output_parens": 22,
    "avg_bits_err_input": 10.166034271136256,
    "avg_bits_err_output": 10.166222801986855,
    "avg_bits_err_improve": -0.00018853085059866714,
    "time": 22125.775146484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* U (- (* (* 2.0 n) (- t (* (- U U*) (* n (pow (/ l Om) 2.0))))) (* (/ l Om) (* 4.0 (* n l)))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 4e+306) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* U (- (* (* 2.0 n) (- t (* (- U U*) (* n (pow (/ l Om) 2.0))))) (* (/ l Om) (* 4.0 (* n l))))))))",
    "output_parens": 74,
    "avg_bits_err_input": 34.62495036196397,
    "avg_bits_err_output": 28.073590207659617,
    "avg_bits_err_improve": 6.551360154304351,
    "time": 32086.22705078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (pow (/ k t) 2.0) (/ (pow t 3.0) l))) (* (/ (sin k) l) (tan k)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.150159029512665,
    "avg_bits_err_output": 36.34990181624097,
    "avg_bits_err_improve": 10.800257213271692,
    "time": 41579.294921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(- (/ (/ 2.0 (* (pow t 3.0) (* (+ 2.0 (pow (/ k t) 2.0)) (/ (sin k) l)))) (/ (tan k) l)) 0.0)",
    "output_parens": 13,
    "avg_bits_err_input": 32.954967263930065,
    "avg_bits_err_output": 27.09477270610988,
    "avg_bits_err_improve": 5.860194557820186,
    "time": 32040.850830078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (+ (* a2 (/ a2 (sqrt 2.0))) (* a1 (+ (/ (+ a1 (+ a1 a1)) (* 2.0 (* 2.0 (sqrt 2.0)))) (/ a1 (* (sqrt 2.0) 4.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.5652188000230793,
    "avg_bits_err_output": 0.47631278439357133,
    "avg_bits_err_improve": 0.088906015629508,
    "time": 22498.041748046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.506403650579543,
    "avg_bits_err_output": 0.45874791018442823,
    "avg_bits_err_improve": 0.04765574039511472,
    "time": 28537.94580078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp (- l))) J (* (exp (- l)) J)) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.422381916765367,
    "avg_bits_err_output": 17.42350041664775,
    "avg_bits_err_improve": -0.0011184998823843273,
    "time": 20174.015380859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (if (!= M 0.0) (if (!= 0.0 0.0) (- (/ 0.0 (/ -1.0 M))) 0.0) (- (* K (/ (+ m n) 2.0)) M))) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 23,
    "avg_bits_err_input": 15.138600875798987,
    "avg_bits_err_output": 1.28128358522408,
    "avg_bits_err_improve": 13.857317290574908,
    "time": 18578.42822265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* -2.0 J) (* (cos (/ K 2.0)) (sqrt (+ 1.0 (pow (/ (/ U (* 2.0 J)) (cos (/ K 2.0))) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.39296936093777,
    "avg_bits_err_output": 18.402908082813312,
    "avg_bits_err_improve": -0.009938721875542456,
    "time": 25630.459228515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= h -5e-118) (* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h)))) (if (<= h 5e+20) (* w0 (sqrt (- 1.0 (* (pow (* M (/ D (* 2.0 d))) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h))))))",
    "output_parens": 31,
    "avg_bits_err_input": 14.148568107581532,
    "avg_bits_err_output": 10.271986741994592,
    "avg_bits_err_improve": 3.87658136558694,
    "time": 23712.944580078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 0.0) (* c0 (sqrt (/ (/ A V) l))) (if (<= (/ A (* V l)) 1e+289) (* (sqrt (+ (/ (+ A (+ A A)) (* (+ V V) (+ l l))) (/ A (* l (* V 4.0))))) c0) (if (!= (* (sqrt (/ (/ (+ A A) V) (+ l l))) c0) 0.0) (/ 1.0 (/ 1.0 (* (sqrt (* (/ (+ (+ A A) (+ A A)) V) (/ 1.0 (+ (+ l l) (+ l l))))) c0))) (* (sqrt (/ (/ (+ A A) V) (+ l l))) c0))))",
    "output_parens": 51,
    "avg_bits_err_input": 19.35037798114036,
    "avg_bits_err_output": 15.08063245134684,
    "avg_bits_err_improve": 4.269745529793518,
    "time": 14669.664794921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* D D) 1e-176) (* (/ c0 (* 2.0 w)) (fma (* d (/ (* (/ (/ c0 h) (* w D)) d) D)) 1.0 (sqrt (* (- (* d (/ (* (/ (/ c0 h) (* w D)) d) D)) M) (fma d (/ (* (/ (/ c0 h) (* w D)) d) D) M))))) (if (<= (* D D) 1e+95) (+ (* (/ c0 (+ w w)) (* c0 (* d (/ (/ (/ d h) D) (* w D))))) (* (sqrt (* (fma d (* c0 (/ (/ (/ d h) D) (* w D))) M) (fma d (* c0 (/ (/ (/ d h) D) (* w D))) (- M)))) (/ c0 (+ w w)))) (* (/ c0 (* 2.0 w)) (fma (/ (* d (/ (* c0 d) D)) (* w (* h D))) 1.0 (sqrt (fma (/ (* d (/ (* c0 d) D)) (* w (* h D))) (/ (* d (/ (* c0 d) D)) (* w (* h D))) (* M (- M))))))))",
    "output_parens": 85,
    "avg_bits_err_input": 60.05213465042429,
    "avg_bits_err_output": 54.79800444576927,
    "avg_bits_err_improve": 5.25413020465502,
    "time": 47459.09716796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= d -4e+19) (fma (pow (/ d l) 0.5) (* (fma h (/ (pow (* D (/ M (* d 2.0))) 2.0) (+ l l)) -1.0) (- (pow (/ d h) 0.5))) 0.0) (if (<= d 4e-63) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (pow (/ (* M D) (+ d d)) 2.0) (* h (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)))) (+ l l))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* M (/ D (* d 2.0))) 2.0) (+ l l)))))))",
    "output_parens": 51,
    "avg_bits_err_input": 26.719306999155272,
    "avg_bits_err_output": 24.308596371521123,
    "avg_bits_err_improve": 2.410710627634149,
    "time": 42174.422119140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (- (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (- 2.0 (sqrt (expm1 (log (+ (/ 0.5 (hypot 1.0 x)) 1.5)))))) -2.0)",
    "output_parens": 13,
    "avg_bits_err_input": 15.169975748055608,
    "avg_bits_err_output": 14.708954963812102,
    "avg_bits_err_improve": 0.46102078424350523,
    "time": 19042.67919921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 (- 1.0 (* v v))) PI) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9848962406251803,
    "avg_bits_err_output": 0.01152124062518029,
    "avg_bits_err_improve": 0.973375,
    "time": 6316.786376953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.4319795188744793,
    "avg_bits_err_output": 0.11065808281331131,
    "avg_bits_err_improve": 0.321321436061168,
    "time": 14657.35986328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (+ (* (* v v) -3.0) 1.0)) (- (/ (sqrt 2.0) 4.0) (* v (* v (/ (sqrt 2.0) 4.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.010198120312590144,
    "avg_bits_err_improve": 0.00030187968740985616,
    "time": 9415.87646484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5230027583132026,
    "avg_bits_err_output": 0.5230027583132026,
    "avg_bits_err_improve": 0,
    "time": 10745.369873046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0467293448454136,
    "avg_bits_err_output": 2.0298543448454134,
    "avg_bits_err_improve": 0.016875000000000195,
    "time": 16648.100830078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)) -1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01732905741540336,
    "avg_bits_err_output": 0.01732905741540336,
    "avg_bits_err_improve": 0,
    "time": 7704.9111328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18503757405699392,
    "avg_bits_err_output": 0.18503757405699392,
    "avg_bits_err_improve": 0,
    "time": 18914.15380859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1950031027577738,
    "avg_bits_err_output": 0.1950031027577738,
    "avg_bits_err_improve": 0,
    "time": 21287.551025390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (- a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19198460929168018,
    "avg_bits_err_output": 0.19273004355717704,
    "avg_bits_err_improve": -0.0007454342654968638,
    "time": 20941.681884765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (/ (if (!= (/ x (sqrt (fma x x (* p (* 4.0 p))))) 0.0) (/ (- (* (/ x (sqrt (fma x x (* p (* 4.0 p))))) (/ x (sqrt (fma x x (* p (* 4.0 p)))))) (* (/ x (sqrt (fma x x (* p (* 4.0 p))))) (- -2.0 (/ x (sqrt (fma x x (* p (* 4.0 p)))))))) (/ x (sqrt (fma x x (* p (* 4.0 p)))))) (- (/ x (sqrt (fma x x (* p (* 4.0 p))))) (- -2.0 (/ x (sqrt (fma x x (* p (* 4.0 p)))))))) 2.0)))",
    "output_parens": 52,
    "avg_bits_err_input": 13.4454905073507,
    "avg_bits_err_output": 13.453098096049962,
    "avg_bits_err_improve": -0.007607588699261925,
    "time": 17903.223388671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.514317950428634,
    "avg_bits_err_output": 0.057125,
    "avg_bits_err_improve": 41.457192950428635,
    "time": 6753.97216796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (if (!= (/ (sin x) 2.0) 0.0) (- (/ (* (sin x) (- x (/ (sin x) 2.0))) (sin x)) (/ 1.0 (/ 2.0 (sin x)))) (- x (sin x))) (- x (tan x)))",
    "output_parens": 20,
    "avg_bits_err_input": 31.622030420974493,
    "avg_bits_err_output": 31.674321028769036,
    "avg_bits_err_improve": -0.052290607794542865,
    "time": 22477.203369140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= (/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) (- INFINITY)) 0.0 (if (<= (/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) 2e+292) (/ (- (sqrt (fma b_2 b_2 (* c (- a)))) b_2) a) 0.0))",
    "output_parens": 25,
    "avg_bits_err_input": 33.66020273230366,
    "avg_bits_err_output": 29.077456443120578,
    "avg_bits_err_improve": 4.582746289183081,
    "time": 14284.998779296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 4.5e+150) (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) (/ (- (- b_2) (if (!= (exp (log1p (sqrt (- (* b_2 b_2) (* a c))))) 0.0) 0.0 (sqrt (- (* b_2 b_2) (* a c))))) a))",
    "output_parens": 24,
    "avg_bits_err_input": 34.19653135953239,
    "avg_bits_err_output": 33.147606214026546,
    "avg_bits_err_improve": 1.048925145505848,
    "time": 16142.627685546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(* (/ (- 1.0 (cos x)) x) (/ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 30.767338452662628,
    "avg_bits_err_output": 30.053752064185236,
    "avg_bits_err_improve": 0.7135863884773919,
    "time": 16638.797119140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.01816708714132,
    "avg_bits_err_output": 33.01816708714132,
    "avg_bits_err_improve": 0,
    "time": 19939.66552734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (- (exp (log1p (exp (- (log1p N) (log N))))) 2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.59902153910503,
    "avg_bits_err_output": 29.60979081665607,
    "avg_bits_err_improve": -0.010769277551037959,
    "time": 11151.459228515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (/ x (+ x 1.0)) (* x 4.0)) (/ (+ (+ (/ x (+ x 1.0)) -2.0) (+ (/ (+ x x) (+ x 1.0)) -2.0)) (* x 4.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 14.712999100824304,
    "avg_bits_err_output": 14.726918323655983,
    "avg_bits_err_improve": -0.01391922283167979,
    "time": 18238.171142578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (+ (cos x) -1.0) 0.0) (/ (- (* (cos (+ x eps)) (+ (cos x) -1.0)) (* (if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (/ 1.0 (+ (cos x) -1.0))) (+ (cos x) -1.0)) (+ (cos x) -1.0))) (+ (cos x) -1.0)) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 32,
    "avg_bits_err_input": 39.53647609230894,
    "avg_bits_err_output": 39.52701561024696,
    "avg_bits_err_improve": 0.009460482061975029,
    "time": 18353.92822265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (cbrt x) 0.0) (/ (* (cbrt x) (- (cbrt (+ 1.0 x)) (cbrt x))) (cbrt x)) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 15,
    "avg_bits_err_input": 29.844376805081026,
    "avg_bits_err_output": 29.85196963790699,
    "avg_bits_err_improve": -0.007592832825963569,
    "time": 10052.10302734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(if (!= (/ (cos x) (sin x)) 0.0) (/ (- (cos x) (* (cos x) (cos x))) (* (cos x) (sin x))) (/ (- 1.0 (cos x)) (sin x)))",
    "output_parens": 18,
    "avg_bits_err_input": 29.862912215081383,
    "avg_bits_err_output": 29.9293344119954,
    "avg_bits_err_improve": -0.06642219691401507,
    "time": 22324.4296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) 2.0) b) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.558811642659755,
    "avg_bits_err_output": 33.579981424619795,
    "avg_bits_err_improve": -0.021169781960040268,
    "time": 30715.173828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.80157756696032,
    "avg_bits_err_output": 33.806510317723806,
    "avg_bits_err_improve": -0.004932750763487093,
    "time": 20058.803955078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (+ (/ (log (- 1.0 x)) (* (log1p x) 2.0)) (/ 1.0 (log1p x))) (- (/ 1.0 (log1p x)) (/ (log (- 1.0 x)) (* (log1p x) 2.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 61.472647159634384,
    "avg_bits_err_output": 59.612593870450155,
    "avg_bits_err_improve": 1.8600532891842292,
    "time": 25935.115966796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.00484071284103,
    "avg_bits_err_output": 44.22522210048003,
    "avg_bits_err_improve": 18.779618612361,
    "time": 12943.985107421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.49530586794207,
    "avg_bits_err_output": 58.45653321127815,
    "avg_bits_err_improve": 0.038772656663923044,
    "time": 17768.880859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(* (+ (/ 1.0 x) (/ (+ (+ (/ 1.0 x) (/ -1.0 (tan x))) -1.0) x)) x)",
    "output_parens": 9,
    "avg_bits_err_input": 59.992713143387256,
    "avg_bits_err_output": 59.99270646130788,
    "avg_bits_err_improve": 6.682079373376837e-06,
    "time": 27441.921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ a b))) (expm1 (* eps b))) (/ eps (expm1 (* eps a))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.24891967224722,
    "avg_bits_err_output": 29.229497253052056,
    "avg_bits_err_improve": 31.019422419195163,
    "time": 24831.736328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.9159850089408,
    "avg_bits_err_output": 0.5197924812503607,
    "avg_bits_err_improve": 41.39619252769044,
    "time": 6786.533203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.66431510498684,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.66381510498684,
    "time": 3777.78662109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.68898603451497,
    "avg_bits_err_output": 0.018374784063608936,
    "avg_bits_err_improve": 29.67061125045136,
    "time": 3292.930419921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- 2.0 (exp x)) 0.0) (/ (fma (- (exp x) 2.0) (exp (- x)) (* (if (!= (+ (exp x) 2.0) 0.0) (/ (fma (exp x) (exp x) -4.0) (+ (exp x) 2.0)) (- (exp x) 2.0)) (- (exp x) 2.0))) (- 2.0 (exp x))) (- 2.0 (+ (exp (- x)) (exp x)))))",
    "output_parens": 33,
    "avg_bits_err_input": 29.529493374551613,
    "avg_bits_err_output": 29.217384535600303,
    "avg_bits_err_improve": 0.3121088389513105,
    "time": 20447.478271484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (- (+ (/ 0.5 (+ x -1.0)) (- (/ 0.5 (+ x 1.0)) (/ 1.0 x))) (/ (+ -1.0 (- (/ 2.0 (/ x (+ x -1.0))) (/ (+ x -1.0) (+ x 1.0)))) (+ -2.0 (* x 2.0)))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 30,
    "avg_bits_err_input": 9.719244606835552,
    "avg_bits_err_output": 9.712865510079373,
    "avg_bits_err_improve": 0.006379096756178981,
    "time": 30916.115966796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (if (!= (- 2.0 (tan (+ x eps))) 0.0) (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) -2.0)) (+ (tan (+ x eps)) -2.0)) (tan (+ x eps))) (tan x))",
    "output_parens": 19,
    "avg_bits_err_input": 36.767742998630105,
    "avg_bits_err_output": 36.78824386288361,
    "avg_bits_err_improve": -0.02050086425350628,
    "time": 17485.811767578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (if (!= (+ (sqrt (+ x 1.0)) -1.0) 0.0) (/ (- (* (sqrt x) (+ (sqrt (+ x 1.0)) -1.0)) (* (+ (sqrt (+ x 1.0)) -1.0) (+ (sqrt (+ x 1.0)) -1.0))) (+ (sqrt (+ x 1.0)) -1.0)) (+ 1.0 (- (sqrt x) (sqrt (+ x 1.0))))))",
    "output_parens": 28,
    "avg_bits_err_input": 29.875174423587065,
    "avg_bits_err_output": 29.109367898158027,
    "avg_bits_err_improve": 0.7658065254290385,
    "time": 14021.955810546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (+ (sin (+ x eps)) (sin x)) 0.0) (+ (fma (- (/ (sin x) (+ (sin (+ x eps)) (sin x)))) (sin x) (* (sin x) (/ (sin x) (log1p (expm1 (+ (sin x) (sin (+ x eps)))))))) (* (- (sin (+ x eps)) (sin x)) (/ (+ (sin (+ x eps)) (sin x)) (+ (sin (+ x eps)) (sin x))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 44,
    "avg_bits_err_input": 37.066784457637866,
    "avg_bits_err_output": 37.06808910858362,
    "avg_bits_err_improve": -0.0013046509457552702,
    "time": 18566.908447265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(if (!= (- (/ 1.0 (sqrt x))) 0.0) (/ (+ (/ (- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ 1.0 x)))) (sqrt x)) (/ (fma (/ (/ -1.0 (sqrt (+ 1.0 x))) (sqrt x)) (/ 1.0 (* (sqrt x) (sqrt (+ 1.0 x)))) (/ (/ 1.0 (sqrt (+ 1.0 x))) (* (sqrt x) (* (sqrt x) (sqrt (+ 1.0 x)))))) (/ 1.0 (* (sqrt x) (sqrt (+ 1.0 x)))))) (/ 1.0 (sqrt x))) (+ (/ 1.0 (sqrt x)) (/ -1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 50,
    "avg_bits_err_input": 19.157797650223724,
    "avg_bits_err_output": 19.171349522443073,
    "avg_bits_err_improve": -0.013551872219348837,
    "time": 17163.263671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (atan (+ N 1.0)) 0.0) (* (atan (+ N 1.0)) (- 1.0 (/ (atan N) (atan (+ N 1.0))))) (- (atan (+ N 1.0)) (atan N)))",
    "output_parens": 16,
    "avg_bits_err_input": 14.900590385858418,
    "avg_bits_err_output": 14.909758599195381,
    "avg_bits_err_improve": -0.00916821333696305,
    "time": 11012.3798828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.69295475452943,
    "avg_bits_err_output": 29.69295475452943,
    "avg_bits_err_improve": 0,
    "time": 39457.119873046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (+ (* (- 1.0 m) (* m (/ m v))) (- 1.0 m)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07188136568158808,
    "avg_bits_err_output": 0.07619843780811897,
    "avg_bits_err_improve": -0.004317072126530888,
    "time": 11342.734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b (- a)) (/ b (/ 1.0 a)))",
    "output_parens": 5,
    "avg_bits_err_input": 16.03771741889342,
    "avg_bits_err_output": 0.26624793281619585,
    "avg_bits_err_improve": 15.771469486077223,
    "time": 11433.867919921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (/ (/ 1.0 angle) PI)) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 19.8618769896957,
    "avg_bits_err_output": 19.84520960596773,
    "avg_bits_err_improve": 0.016667383727966723,
    "time": 25075.269775390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.801951198756488,
    "avg_bits_err_output": 30.801951198756488,
    "avg_bits_err_improve": 0,
    "time": 41683.16162109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (/ (* angle PI) -180.0) 0.0) (/ 1.0 (/ 1.0 (* angle (/ PI 180.0)))) (* angle (/ PI 180.0))))) 2.0) (pow (* b (cos (/ (* angle PI) 180.0))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.388018091198553,
    "avg_bits_err_output": 20.384617708061615,
    "avg_bits_err_improve": 0.0034003831369382453,
    "time": 29584.0712890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17553303878037732,
    "avg_bits_err_output": 0.17553303878037732,
    "avg_bits_err_improve": 0,
    "time": 17058.50146484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (if (!= (- 1.0 (* (tan x) (tan x))) 0.0) (* (fma (tan x) (tan x) -1.0) (/ (fma (tan x) (tan x) -1.0) (- 1.0 (* (tan x) (tan x))))) (- 1.0 (* (tan x) (tan x)))) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 27,
    "avg_bits_err_input": 0.3283543319995591,
    "avg_bits_err_output": 0.36170169939663926,
    "avg_bits_err_improve": -0.03334736739708016,
    "time": 16684.874267578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.14111560156295072,
    "avg_bits_err_output": 0.14111560156295072,
    "avg_bits_err_improve": 0,
    "time": 15604.942626953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.785056858727277,
    "avg_bits_err_output": 16.781479311218582,
    "avg_bits_err_improve": 0.003577547508694323,
    "time": 33391.71142578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.76e+16) (/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (* b b) (* b b) (* (* b (- b)) (* (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))))) (* b (- b))) (fma b (- b) (* (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0)) (/ (- (- (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 64,
    "avg_bits_err_input": 52.5625467302506,
    "avg_bits_err_output": 50.37727231875845,
    "avg_bits_err_improve": 2.185274411492152,
    "time": 26060.480712890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) 0.0) (/ 2.0 (/ 4.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (* 0.5 (if (!= (/ b a) 0.0) (/ (fma (/ b a) (/ (sqrt (fma c (* a -4.0) (* b b))) a) (- (* (/ b a) (/ b a)))) (/ b a)) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a))))",
    "output_parens": 40,
    "avg_bits_err_input": 28.566420960658263,
    "avg_bits_err_output": 27.94910840264529,
    "avg_bits_err_improve": 0.6173125580129728,
    "time": 28262.978515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(fma (- (sqrt (fma c (* a -4.0) (* b b))) b) (/ 0.5 a) (fma (- b) (/ 0.5 a) (* b (/ 0.5 a))))",
    "output_parens": 12,
    "avg_bits_err_input": 43.77825332635467,
    "avg_bits_err_output": 42.90933907968651,
    "avg_bits_err_improve": 0.8689142466681616,
    "time": 27730.12939453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) 2.0) b) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.555181521123515,
    "avg_bits_err_output": 33.579981424619795,
    "avg_bits_err_improve": -0.02479990349628025,
    "time": 17544.002197265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8698663842409012,
    "avg_bits_err_output": 0.8698663842409012,
    "avg_bits_err_improve": 0,
    "time": 26873.26806640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ (/ -2.0 (- -1.0 (exp (* -2.0 x)))) 1.0) 0.0) (/ (if (!= (+ 1.0 (/ (/ 4.0 (- -1.0 (exp (* -2.0 x)))) (- -1.0 (exp (* -2.0 x))))) 0.0) (/ (- 1.0 (/ (/ 16.0 (- -1.0 (exp (* -2.0 x)))) (* (- -1.0 (exp (* -2.0 x))) (* (- -1.0 (exp (* -2.0 x))) (- -1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ -4.0 (* (- -1.0 (exp (* -2.0 x))) (- -1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ (/ 4.0 (- -1.0 (exp (* -2.0 x)))) (- -1.0 (exp (* -2.0 x)))))) (+ (/ -2.0 (- -1.0 (exp (* -2.0 x)))) 1.0)) (+ -1.0 (/ -2.0 (- -1.0 (exp (* -2.0 x))))))",
    "output_parens": 65,
    "avg_bits_err_input": 29.29529444909919,
    "avg_bits_err_output": 29.292205175252946,
    "avg_bits_err_improve": 0.0030892738462426905,
    "time": 23758.843505859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (/ (exp x) (- (- (exp (- x))) (exp x))) 0.0) (/ (+ (/ (* (exp (- x)) (exp x)) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (/ (- (* (exp x) (exp x))) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x))))) (/ (exp x) (- (- (exp (- x))) (exp x)))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 55,
    "avg_bits_err_input": 58.179648862205234,
    "avg_bits_err_output": 58.23955753520072,
    "avg_bits_err_improve": -0.059908672995483414,
    "time": 15963.896728515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.116196462917856,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 58.108696462917855,
    "time": 10390.701416015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007375,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 0,
    "time": 2591.253662109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.35483755496477,
    "avg_bits_err_output": 32.35483755496477,
    "avg_bits_err_improve": 0,
    "time": 3970.317626953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (if (!= (- -2.0 (log (/ (- -1.0 x) (- x 1.0)))) 0.0) (if (!= (* (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (/ (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0))) 0.0) (/ (+ (* (* (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (/ (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0))) (* (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (/ (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0)))) (* (* (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (/ (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0))) (/ -1.0 (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0)))) (* (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (/ (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0)))) (/ (fma (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) (+ 1.0 (log (/ (- -1.0 x) (+ -1.0 x)))) -1.0) (+ (log (/ (- -1.0 x) (+ -1.0 x))) 2.0))) (log (/ (- -1.0 x) (- x 1.0)))))",
    "output_parens": 126,
    "avg_bits_err_input": 58.48491139901325,
    "avg_bits_err_output": 58.488774617376635,
    "avg_bits_err_improve": -0.0038632183633851014,
    "time": 30070.3876953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.026698120312590144,
    "avg_bits_err_output": 0.026698120312590144,
    "avg_bits_err_improve": 0,
    "time": 2607.901123046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* eh (* (cos t) (sin (atan (/ eh (* ew (tan t)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1285,
    "avg_bits_err_output": 0.12732312031259016,
    "avg_bits_err_improve": 0.001176879687409843,
    "time": 27521.1123046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12584436093777043,
    "avg_bits_err_output": 0.12584436093777043,
    "avg_bits_err_improve": 0,
    "time": 20507.16748046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 39.12957355708429,
    "avg_bits_err_output": 3.765918484711821,
    "avg_bits_err_improve": 35.363655072372474,
    "time": 22276.7861328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.485065143779895,
    "avg_bits_err_output": 14.485065143779895,
    "avg_bits_err_improve": 0,
    "time": 3521.642333984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (+ (if (!= (fma (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))) (- (sin phi1)) (- (cos delta))) 0.0) (* (+ (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))) (/ (fma (- (sin phi1)) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))) (cos delta)) (+ (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))))) (fma (- (sin phi1)) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))) (cos delta))) 0.0)))",
    "output_parens": 83,
    "avg_bits_err_input": 0.14518239233819433,
    "avg_bits_err_output": 0.14329912581141527,
    "avg_bits_err_improve": 0.0018832665267790594,
    "time": 32924.2705078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.8e+16) (if (!= (* b (/ -0.3333333333333333 a)) 0.0) (/ (/ (/ (fma b (* b 0.1111111111111111) (* (sqrt (fma a (* c -3.0) (* b b))) (* b -0.1111111111111111))) a) a) (* b (/ -0.3333333333333333 a))) (/ (- b (sqrt (fma b b (* c (* a -3.0))))) (* a -3.0))) (+ (/ (+ (sqrt (fma b b (* c (* a -3.0)))) (- 1.0 b)) (* a 6.0)) (+ (/ -0.16666666666666666 a) (* (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) a) 0.16666666666666666))))",
    "output_parens": 44,
    "avg_bits_err_input": 52.63803521654936,
    "avg_bits_err_output": 50.496784886480675,
    "avg_bits_err_improve": 2.1412503300686865,
    "time": 37836.644287109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ (* b b) (* b (+ (- b) b)))) 0.0) (* (fma (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b))) 1.0 0.0) (/ (+ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b))) (* b (+ (- b) b))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ (* b b) (* b (+ (- b) b)))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b)))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 94,
    "avg_bits_err_input": 28.75543818824443,
    "avg_bits_err_output": 28.163463968607928,
    "avg_bits_err_improve": 0.5919742196365014,
    "time": 35679.44921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -1e-19) (/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (if (!= (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) 0.0) (/ 1.0 (/ 1.0 (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a)) (/ (log (log (+ 1.0 (if (!= (exp (exp (- (sqrt (fma a (* c -3.0) (* b b))) b))) 0.0) (/ (* (expm1 (exp (- (sqrt (fma a (* c -3.0) (* b b))) b))) (exp (exp (- (sqrt (fma a (* c -3.0) (* b b))) b)))) (exp (exp (- (sqrt (fma a (* c -3.0) (* b b))) b)))) (expm1 (exp (- (sqrt (fma a (* c -3.0) (* b b))) b))))))) (* 3.0 a)))",
    "output_parens": 118,
    "avg_bits_err_input": 43.79604538061518,
    "avg_bits_err_output": 40.709427540861995,
    "avg_bits_err_improve": 3.0866178397531883,
    "time": 31826.86474609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.5e+112) (/ (+ (- b) (sqrt (if (!= (* 3.0 (* a c)) 0.0) (fma c (* a (* (* a -9.0) (/ c (* a (* c 3.0))))) (* (* b b) (* (* c 3.0) (/ a (* a (* c 3.0)))))) (fma b b (* c (* a -3.0)))))) (* 3.0 a)) (/ (if (!= (- b) 0.0) 0.0 0.0) (* a 3.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 33.60464308425093,
    "avg_bits_err_output": 29.302299926761403,
    "avg_bits_err_improve": 4.302343157489528,
    "time": 20858.77197265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (if (!= (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0) 0.0) (* (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0) (/ (* (cos (- lambda1 lambda2)) (cos phi2)) (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0))) (* (cos (- lambda1 lambda2)) (cos phi2))))))",
    "output_parens": 35,
    "avg_bits_err_input": 13.115325253846082,
    "avg_bits_err_output": 13.118542374542697,
    "avg_bits_err_improve": -0.003217120696614728,
    "time": 30697.0146484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (- (* (/ x (+ x 1.0)) (+ x -1.0)) (+ x -1.0)) (+ x -1.0)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 29.524752988330512,
    "avg_bits_err_output": 24.840553393839517,
    "avg_bits_err_improve": 4.684199594490995,
    "time": 21720.255615234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 0,
    "time": 5808.68408203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (/ -1.0 (+ x 1.0)) (+ -1.0 (/ x (+ x 1.0)))) (+ x -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 14.755221738489459,
    "avg_bits_err_output": 12.827242760375189,
    "avg_bits_err_improve": 1.92797897811427,
    "time": 19374.79638671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F) (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.45772386407188,
    "avg_bits_err_output": 52.14607030156035,
    "avg_bits_err_improve": 0.3116535625115304,
    "time": 37648.73583984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(if (<= C 5.4e+193) (* (atan (/ (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) B)) (/ 180.0 PI)) (* 180.0 (/ (atan (if (!= (fma (/ -1.0 B) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (/ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) B)) 0.0) 0.0 (/ (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- C (+ A (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) B))) PI)))",
    "output_parens": 51,
    "avg_bits_err_input": 29.894744119429234,
    "avg_bits_err_output": 28.6032414390196,
    "avg_bits_err_improve": 1.2915026804096321,
    "time": 23519.462646484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (* (* 2.0 F) (if (!= C 0.0) (/ (+ (* C C) (* C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) C) (+ (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 32,
    "avg_bits_err_input": 52.169770239385244,
    "avg_bits_err_output": 52.39021123465319,
    "avg_bits_err_improve": -0.2204409952679427,
    "time": 37378.560791015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.270554961776552,
    "avg_bits_err_output": 15.270554961776552,
    "avg_bits_err_improve": 0,
    "time": 1660.37060546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= (- (sqrt (- (* g g) (* h h))) g) 0.0) (/ (if (!= (fma (sqrt (- (* g g) (* h h))) (sqrt (- (* g g) (* h h))) (- (* g g))) 0.0) (/ (- (* (- (* g g) (* (sqrt (- (* g g) (* h h))) (sqrt (- (* g g) (* h h))))) (- (* g g) (* (sqrt (- (* g g) (* h h))) (sqrt (- (* g g) (* h h))))))) (fma (sqrt (- (* g g) (* h h))) (sqrt (- (* g g) (* h h))) (- (* g g)))) (- (* g g) (* (sqrt (- (* g g) (* h h))) (sqrt (- (* g g) (* h h)))))) (- (sqrt (- (* g g) (* h h))) g)) (- (- g) (sqrt (- (* g g) (* h h))))))))",
    "output_parens": 92,
    "avg_bits_err_input": 35.99589430439149,
    "avg_bits_err_output": 36.21507015504457,
    "avg_bits_err_improve": -0.21917585065308032,
    "time": 18089.81103515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9910808281331139,
    "avg_bits_err_output": 0.9758774437510819,
    "avg_bits_err_improve": 0.015203384382032059,
    "time": 5583.97265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.678375,
    "avg_bits_err_output": 0.678375,
    "avg_bits_err_improve": 0,
    "time": 3922.522216796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-267) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+279) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.196144545501134,
    "avg_bits_err_output": 2.4983277934059993,
    "avg_bits_err_improve": 8.697816752095136,
    "time": 9199.780029296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49046350769904495,
    "avg_bits_err_output": 0.461875,
    "avg_bits_err_improve": 0.028588507699044974,
    "time": 8559.568115234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(- (- (log (+ x (hypot 1.0 x))) -1.0) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 52.89821046338433,
    "avg_bits_err_output": 44.719761835026034,
    "avg_bits_err_improve": 8.178448628358296,
    "time": 36227.790771484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(if (!= (exp (log1p (exp (+ (log a) (log b))))) 0.0) (if (!= (- 2.0 (- (/ -1.0 (/ 1.0 (+ 1.0 (exp (+ (log a) (log b)))))) -1.0)) 0.0) (* (- 2.0 (- (exp (+ (log a) (log b))))) (/ (exp (+ (log a) (log b))) (- 2.0 (- (/ -1.0 (/ 1.0 (+ 1.0 (exp (+ (log a) (log b)))))) -1.0)))) (exp (+ (log a) (log b)))) (exp (+ (log a) (log b))))",
    "output_parens": 48,
    "avg_bits_err_input": 5.727833059046273,
    "avg_bits_err_output": 5.73380562318588,
    "avg_bits_err_improve": -0.005972564139606895,
    "time": 19553.4873046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (expm1 (log1p (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": 0.0007500000000000007,
    "time": 7375.02783203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1308.3310546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 1500.0) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* w r) (* (* w (+ 0.375 (* v -0.25))) (/ r (- 1.0 v)))) 4.5)) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* w (* (/ w (- 1.0 v)) (* r r)))) 4.5)))",
    "output_parens": 29,
    "avg_bits_err_input": 12.55342337153112,
    "avg_bits_err_output": 0.2905443031728363,
    "avg_bits_err_improve": 12.262879068358282,
    "time": 29488.25732421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (+ (* x1 (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0))) (* x1 (* x1 -6.0))))))))))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5125415513252507,
    "avg_bits_err_output": 0.28714067291711837,
    "avg_bits_err_improve": 0.22540087840813233,
    "time": 67923.34106445312,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.393029181735724,
    "avg_bits_err_output": 1.3476989174630924,
    "avg_bits_err_improve": 17.045330264272632,
    "time": 5349.323486328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.21761336132445105,
    "avg_bits_err_output": 0.19131372187554083,
    "avg_bits_err_improve": 0.026299639448910228,
    "time": 9582.72998046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00275,
    "avg_bits_err_output": 0.00275,
    "avg_bits_err_improve": 0,
    "time": 2590.868896484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (- (/ PI a) (/ PI b)) (+ a b)) (* (- b a) 2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 14.087345127366637,
    "avg_bits_err_output": 0.25403513030591207,
    "avg_bits_err_improve": 13.833309997060725,
    "time": 16849.557373046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (/ (exp (- (* x eps) x)) eps) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps)))) (exp (- (* x eps) x))) 2.0)",
    "output_parens": 16,
    "avg_bits_err_input": 29.018270759143785,
    "avg_bits_err_output": 24.44085374096358,
    "avg_bits_err_improve": 4.577417018180206,
    "time": 16795.030517578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (fma (- (/ 2.0 (+ t (/ t t))) 2.0) (- (/ 2.0 (+ t (/ t t))) 2.0) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.012,
    "avg_bits_err_output": 0.005625,
    "avg_bits_err_improve": 0.0063750000000000005,
    "time": 5982.408447265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.017375,
    "avg_bits_err_output": 0.046875,
    "avg_bits_err_improve": -0.0295,
    "time": 14920.250732421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* (/ t (+ t 1.0)) 4.0))) (+ 2.0 (* (/ t (+ t 1.0)) (* (/ t (+ t 1.0)) 4.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.03925,
    "avg_bits_err_output": 0.00725,
    "avg_bits_err_improve": 0.032,
    "time": 11560.053955078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3880.163818359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2435.51904296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2665.71240234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.824873496755416,
    "avg_bits_err_output": 0.25625,
    "avg_bits_err_improve": 7.568623496755416,
    "time": 19053.26806640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.275850852148199,
    "avg_bits_err_output": 7.275850852148199,
    "avg_bits_err_improve": 0,
    "time": 2803.60791015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.95633635648257,
    "avg_bits_err_output": 15.95633635648257,
    "avg_bits_err_improve": 0,
    "time": 22765.42236328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (/ 1.0 (/ (/ (/ 2.0 (* (expm1 (log1p (exp (* 10.0 (* x x))))) (/ 2.0 (* (exp (* 10.0 (* x x))) (cos x))))) (- (exp (* 10.0 (* x x))))) (- (* (cos x) (cos x))))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 36,
    "avg_bits_err_input": 3.5403741726438858,
    "avg_bits_err_output": 3.5373098154348614,
    "avg_bits_err_improve": 0.0030643572090243154,
    "time": 26795.206298828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -50000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 20000000.0) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.454857748212941,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 14.44548274821294,
    "time": 8417.60986328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.876912008031375,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.876912008031375,
    "time": 5033.811767578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.914283630750894,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 38.913408630750894,
    "time": 4108.1083984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.25575,
    "avg_bits_err_improve": 63.74425,
    "time": 31932.975341796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325851722857,
    "avg_bits_err_output": 0.407625,
    "avg_bits_err_improve": 61.43563351722857,
    "time": 7336.9169921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.80157756696032,
    "avg_bits_err_output": 33.806510317723806,
    "avg_bits_err_improve": -0.004932750763487093,
    "time": 21046.639892578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) 2.0) b) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.555181521123515,
    "avg_bits_err_output": 33.579981424619795,
    "avg_bits_err_improve": -0.02479990349628025,
    "time": 20606.570068359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2088.8134765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.656383154794554,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 39.64725815479456,
    "time": 3543.324951171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.89337487829978,
    "avg_bits_err_output": 19.89337487829978,
    "avg_bits_err_improve": 0,
    "time": 4446.150390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.656178838185139,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.656178838185139,
    "time": 10636.19921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.041,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.040375,
    "time": 9128.1982421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01929248125036058,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0.00754248125036058,
    "time": 3990.48876953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.018625,
    "avg_bits_err_improve": -0.00375,
    "time": 2121.908447265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00125,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0,
    "time": 1420.570556640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ c a) (+ b d)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39664661719245803,
    "avg_bits_err_output": 0.238875,
    "avg_bits_err_improve": 0.15777161719245802,
    "time": 5091.78173828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (expm1 (log1p (/ 1.0 (- 1.0 (cos x)))))) (- 1.0 (cos x)))",
    "output_parens": 12,
    "avg_bits_err_input": 30.434841256513014,
    "avg_bits_err_output": 30.434841255262562,
    "avg_bits_err_improve": 1.2504521862410911e-09,
    "time": 8324.453369140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= (- (* x x) (- eps)) 0.0) (if (!= (/ (* eps eps) (fma x x eps)) 0.0) (/ (* (/ (* eps eps) (fma x x eps)) (- (* (* x x) (* x (/ x (fma x x eps)))) (/ (* eps eps) (fma x x eps)))) (/ (* eps eps) (fma x x eps))) (* (fma x x eps) (/ (fma x x (- eps)) (fma x x eps)))) (- (* x x) eps))))",
    "output_parens": 37,
    "avg_bits_err_input": 24.636226017078148,
    "avg_bits_err_output": 24.705214992135335,
    "avg_bits_err_improve": -0.06898897505718793,
    "time": 11664.64453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ (sin x) (* (tan x) -2.0)) 0.0) (/ (fma (/ (sin x) (* (tan x) -2.0)) (/ (sin x) (* (tan x) -2.0)) (* (/ (sin x) (* (tan x) -2.0)) (+ (/ x (tan x)) (/ (sin x) (* (tan x) -2.0))))) (/ (sin x) (* (tan x) -2.0))) (/ (+ x (- (sin x))) (tan x)))",
    "output_parens": 37,
    "avg_bits_err_input": 30.51449603473977,
    "avg_bits_err_output": 30.521965975655405,
    "avg_bits_err_improve": -0.007469940915633799,
    "time": 29086.51513671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005875,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.00475,
    "time": 2430.490234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -5.8e+66) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (/ (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0)) (/ i n)))",
    "output_parens": 34,
    "avg_bits_err_input": 47.42998750322962,
    "avg_bits_err_output": 45.77609927758746,
    "avg_bits_err_improve": 1.6538882256421559,
    "time": 26255.61962890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= d -6e-141) (fma b (/ d (fma c c (* d d))) (* a (/ c (fma c c (* d d))))) (if (<= d 1e-53) (+ (/ (* b d) (fma c c (* d d))) (* a (/ c (fma c c (* d d))))) (+ (* d (/ b (fma c c (* d d)))) (* c (/ a (fma c c (* d d)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 25.68809225727731,
    "avg_bits_err_output": 22.91457403215766,
    "avg_bits_err_improve": 2.773518225119652,
    "time": 14875.35595703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= d 1.65e-130) (fma b (/ c (+ (* d d) (* c c))) (/ (* a (- d)) (+ (* d d) (* c c)))) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d))))))",
    "output_parens": 22,
    "avg_bits_err_input": 25.93468028107988,
    "avg_bits_err_output": 24.049303585359038,
    "avg_bits_err_improve": 1.8853766957208435,
    "time": 15659.196533203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03275,
    "avg_bits_err_output": 0.02091875355086315,
    "avg_bits_err_improve": 0.011831246449136853,
    "time": 4687.0009765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (if (!= (- (- ux (* ux ux)) (- ux)) 0.0) (/ (* (- (- ux (* ux ux)) (- (* (* ux maxCos) (fma ux maxCos (- 1.0 ux))) ux)) (- (- ux (* ux ux)) (- ux))) (- (- ux (* ux ux)) (- ux))) (- (- ux (* ux ux)) (- (* (* ux maxCos) (fma ux maxCos (- 1.0 ux))) ux))) (- (* ux (* (- 1.0 ux) maxCos))))))",
    "output_parens": 42,
    "avg_bits_err_input": 13.47745675145116,
    "avg_bits_err_output": 0.5596744203449269,
    "avg_bits_err_improve": 12.917782331106233,
    "time": 25766.609619140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- ux (* ux ux)) (+ (- ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.509575650849145,
    "avg_bits_err_output": 0.33054998020234283,
    "avg_bits_err_improve": 13.179025670646801,
    "time": 25803.47705078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3379176676902881,
    "avg_bits_err_output": 0.318172984555486,
    "avg_bits_err_improve": 0.0197446831348021,
    "time": 41779.319091796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20632376014563122,
    "avg_bits_err_output": 0.20632376014563122,
    "avg_bits_err_improve": 0,
    "time": 19581.2060546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (if (!= (/ (+ u1 (* u1 0.5)) (* (- 1.0 u1) 4.0)) 0.0) (/ (* (+ u1 (+ u1 u1)) (/ (+ u1 (+ u1 u1)) (* (- 1.0 u1) (* (- 1.0 u1) 32.0)))) (/ (+ u1 (* u1 0.5)) (* (- 1.0 u1) 4.0))) (/ (+ u1 (+ u1 u1)) (* (- 1.0 u1) 4.0))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 37,
    "avg_bits_err_input": 0.5389125018159427,
    "avg_bits_err_output": 0.5640324839328139,
    "avg_bits_err_improve": -0.025119982116871165,
    "time": 29846.50390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log1p (expm1 (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32966220470572555,
    "avg_bits_err_output": 0.3303413246316351,
    "avg_bits_err_improve": -0.000679119925909577,
    "time": 22814.5751953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (* (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s)))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 71,
    "avg_bits_err_input": 0.3328383993812466,
    "avg_bits_err_output": 0.31338963412483445,
    "avg_bits_err_improve": 0.019448765256412148,
    "time": 51632.556640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (exp (log (+ (exp (/ x (- s))) 1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0629791461110475,
    "avg_bits_err_output": 0.06444846301588399,
    "avg_bits_err_improve": -0.0014693169048364818,
    "time": 13086.775390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (/ (* (- (* (expm1 (/ (fabs x) (- s))) 2.0) -4.0) (* s (- (* (expm1 (/ (fabs x) (- s))) 2.0) -4.0))) 4.0))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1524771533391353,
    "avg_bits_err_output": 0.1532301968612799,
    "avg_bits_err_improve": -0.0007530435221445864,
    "time": 23041.22216796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6763791529307713,
    "avg_bits_err_output": 0.6690207173900792,
    "avg_bits_err_improve": 0.007358435540692154,
    "time": 20515.0380859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.16121027039678423,
    "avg_bits_err_output": 0.16244700337331874,
    "avg_bits_err_improve": -0.0012367329765345103,
    "time": 20787.078857421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.601394269178739,
    "avg_bits_err_output": 2.598342389491329,
    "avg_bits_err_improve": 0.00305187968740972,
    "time": 25822.337890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) v) (* cosTheta_O (/ cosTheta_i 2.0))) (if (!= (* v (sinh (/ 1.0 v))) 0.0) (/ 1.0 (/ (/ 1.0 v) (sinh (/ 1.0 v)))) (* v (sinh (/ 1.0 v)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.46020301216139614,
    "avg_bits_err_output": 0.39106560252190825,
    "avg_bits_err_improve": 0.06913740963948789,
    "time": 21643.470703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= 0.6931 0.0) (/ (+ 0.48038761 (+ (/ (* (+ (- (* cosTheta_i (+ cosTheta_O cosTheta_O)) (- (* sinTheta_i (+ sinTheta_O sinTheta_O)) -2.0)) (- (* cosTheta_i (+ cosTheta_O cosTheta_O)) (- (* sinTheta_i (+ sinTheta_O sinTheta_O)) -2.0))) 0.6931) (+ (+ v v) (+ v v))) (* 0.6931 (log (/ 0.5 v))))) 0.6931) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 35,
    "avg_bits_err_input": 0.11850146213482501,
    "avg_bits_err_output": 0.1292688855241001,
    "avg_bits_err_improve": -0.010767423389275083,
    "time": 14268.9189453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(- (/ (- 1.0 (* alpha alpha)) (+ (* (* PI (log (* alpha alpha))) (- (* alpha (* alpha (* cosTheta cosTheta))) (* cosTheta cosTheta))) (* PI (log (* alpha alpha))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.47145509358540966,
    "avg_bits_err_output": 0.46976417962285266,
    "avg_bits_err_improve": 0.0016909139625569947,
    "time": 20047.42578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) s))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3250281364382597,
    "avg_bits_err_output": 1.24226505922421,
    "avg_bits_err_improve": 0.08276307721404974,
    "time": 21802.965576171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (* s (if (!= (+ 1.0 (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0)) 0.0) (/ (- (+ -1.0 (* (log (/ 1.0 (fma u -4.0 1.0))) (+ (* (log (/ 1.0 (fma u -4.0 1.0))) 4.0) 2.0))) (fma (log (/ 1.0 (fma u -4.0 1.0))) -2.0 -1.0)) (+ 1.0 (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0))) (* (log (/ 1.0 (fma u -4.0 1.0))) 2.0))) 2.0)",
    "output_parens": 34,
    "avg_bits_err_input": 12.524832499128747,
    "avg_bits_err_output": 12.537208356804507,
    "avg_bits_err_improve": -0.012375857675760216,
    "time": 26022.846923828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (* 0.125 (+ (exp (/ r (* -3.0 s))) (exp (/ (- r) s)))) (* s (* r PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.13214706366884663,
    "avg_bits_err_output": 0.14055513748154977,
    "avg_bits_err_improve": -0.008408073812703143,
    "time": 23073.658935546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9054577894286165,
    "avg_bits_err_output": 0.7663563598088402,
    "avg_bits_err_improve": 0.13910142961977634,
    "time": 26781.575439453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6895539068954744,
    "avg_bits_err_output": 0.46441112239264537,
    "avg_bits_err_improve": 0.22514278450282899,
    "time": 19892.885498046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (- (expm1 (log1p (- (log (- 1.0 u1)))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.516249132322612,
    "avg_bits_err_output": 13.519584898106977,
    "avg_bits_err_improve": -0.003335765784365563,
    "time": 21135.11572265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (/ (- 1.0 (- (* (log (- 1.0 u1)) 2.0) -1.0)) -2.0))) (cos (expm1 (log1p (* 2.0 (* PI u2))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.568327845070785,
    "avg_bits_err_output": 13.601356401994252,
    "avg_bits_err_improve": -0.03302855692346718,
    "time": 21888.73974609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (- alpha) alpha (* alpha alpha)) (* (- alpha) (* alpha (log (- 1.0 u0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.133087496674943,
    "avg_bits_err_output": 14.057064404898744,
    "avg_bits_err_improve": 0.07602309177619837,
    "time": 19123.882568359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (if (!= (/ sin2phi (* alphay alphay)) 0.0) (/ 1.0 (- (/ 1.0 (/ (/ sin2phi alphay) alphay)) 0.0)) (/ sin2phi (* alphay alphay)))))",
    "output_parens": 18,
    "avg_bits_err_input": 12.67058122986409,
    "avg_bits_err_output": 12.67112688687189,
    "avg_bits_err_improve": -0.0005456570077999601,
    "time": 16785.455322265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* F F) 1e-191) (- (* PI l) (/ (* (/ -2.0 F) (tan (* PI l))) (* F (* F (/ (* F (/ -2.0 F)) F))))) (if (<= (* F F) 5e-167) (- (* PI l) (/ (* (tan (* PI l)) (/ (- (exp (log1p (- F))) 1.0) (* F (* F F)))) (/ (- F) F))) (- (* PI l) (* (/ -2.0 F) (/ (tan (* PI l)) (* F (* F (/ -2.0 F))))))))",
    "output_parens": 43,
    "avg_bits_err_input": 16.816575316829883,
    "avg_bits_err_output": 12.899501723396574,
    "avg_bits_err_improve": 3.91707359343331,
    "time": 22327.213134765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21608496250072115,
    "avg_bits_err_output": 0.154125,
    "avg_bits_err_improve": 0.06195996250072114,
    "time": 18603.709716796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.629165918357492,
    "avg_bits_err_output": 10.364107160136125,
    "avg_bits_err_improve": 3.2650587582213664,
    "time": 23745.84375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (expm1 (log1p (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (expm1 (* PI (/ f 4.0))) (expm1 (* PI (/ f -4.0)))))))) (/ PI -4.0))",
    "output_parens": 20,
    "avg_bits_err_input": 61.49983771544291,
    "avg_bits_err_output": 1.9137074508511691,
    "avg_bits_err_improve": 59.58613026459174,
    "time": 61960.6640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.95922449358038,
    "avg_bits_err_output": 33.894366678671176,
    "avg_bits_err_improve": 9.064857814909203,
    "time": 28995.97265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.050222550256112,
    "avg_bits_err_output": 4.050222550256112,
    "avg_bits_err_improve": 0,
    "time": 29094.491943359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9870666069875106,
    "avg_bits_err_output": 0.9870666069875106,
    "avg_bits_err_improve": 0,
    "time": 10588.271484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 10.191366070988506,
    "avg_bits_err_improve": -0.0001652410118584413,
    "time": 17470.783935546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -7.5e+79) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U 1e-59) (sqrt (* (* 2.0 n) (* U (- t (fma n (* (pow (/ l Om) 2.0) (- U U*)) (* 2.0 (* l (/ l Om)))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 34.24242992177961,
    "avg_bits_err_output": 29.752999752111634,
    "avg_bits_err_improve": 4.489430169667976,
    "time": 32358.01220703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (pow (/ k t) 2.0) (* (sin k) (/ (* (tan k) (pow t 3.0)) l))) l))",
    "output_parens": 11,
    "avg_bits_err_input": 47.54258284319369,
    "avg_bits_err_output": 37.15045878127574,
    "avg_bits_err_improve": 10.392124061917954,
    "time": 44798.2705078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (pow t 3.0) (* (+ 2.0 (pow (/ k t) 2.0)) (/ (sin k) l))) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.46389821472174,
    "avg_bits_err_output": 27.756944886742506,
    "avg_bits_err_improve": 4.706953327979232,
    "time": 19772.5869140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (/ (+ (* a2 a2) (* a1 a1)) (sqrt 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5391338375223579,
    "avg_bits_err_output": 0.49081973907953863,
    "avg_bits_err_improve": 0.04831409844281925,
    "time": 20084.1953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.4908464607940856,
    "avg_bits_err_output": 0.4559357938806973,
    "avg_bits_err_improve": 0.03491066691338829,
    "time": 18346.571044921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (+ (- (expm1 (- l))) (+ (exp l) -1.0))) (cos (/ K 2.0))) U)",
    "output_parens": 11,
    "avg_bits_err_input": 17.094553649194772,
    "avg_bits_err_output": 14.619777831115126,
    "avg_bits_err_improve": 2.474775818079646,
    "time": 22706.282958984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K (+ m n)) 0.0) (/ 1.0 (/ (/ 1.0 (+ m n)) K)) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.597584544532033,
    "avg_bits_err_output": 15.59504057354544,
    "avg_bits_err_improve": 0.0025439709865935356,
    "time": 18671.54296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.834719360937772,
    "avg_bits_err_output": 17.834719360937772,
    "avg_bits_err_improve": 0,
    "time": 33425.711669921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.150926840649017,
    "avg_bits_err_output": 10.770967624484223,
    "avg_bits_err_improve": 3.379959216164794,
    "time": 11463.086181640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1e+202) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (* V l) -5e-240) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 2e-115) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* V l) 4e+66) (* c0 (sqrt (* (/ 2.0 (* V (* (+ l l) 2.0))) (+ A A)))) (* c0 (sqrt (+ (/ (/ A (+ l l)) (+ V V)) (/ (+ (/ A l) (/ A (+ l l))) (+ V V)))))))))",
    "output_parens": 46,
    "avg_bits_err_input": 18.987251701785507,
    "avg_bits_err_output": 15.138987736674764,
    "avg_bits_err_improve": 3.8482639651107426,
    "time": 17075.5732421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= D 2e-272) (+ (* (* (/ d (* w (* D h))) (* c0 (/ d D))) (/ c0 (+ w w))) (* (sqrt (* (fma (/ d (* w (* D h))) (* c0 (/ d D)) (- M)) (fma (/ d (* w (* D h))) (* c0 (/ d D)) M))) (/ c0 (+ w w)))) (* (+ (* c0 (* (/ d D) (/ (/ (/ d w) h) D))) (sqrt (* (- (* c0 (* (/ d D) (/ (/ (/ d w) h) D))) M) (fma c0 (* (/ d D) (/ (/ (/ d w) h) D)) M)))) (/ c0 (+ w w))))",
    "output_parens": 55,
    "avg_bits_err_input": 59.61431169794126,
    "avg_bits_err_output": 53.92071933996018,
    "avg_bits_err_improve": 5.693592357981082,
    "time": 42800.564208984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= l -4.1e-140) (/ (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (- 1.0 (* h (/ (pow (+ (/ (* D M) (* (* (+ d d) 2.0) 2.0)) (/ (* D (+ M (+ M M))) (* (* (+ d d) 2.0) 2.0))) 2.0) (+ l l)))))) 1.0) (if (<= l 1.45e+103) (- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* 0.5 (/ (* (pow (* M (/ D (+ d d))) 2.0) (* (pow (/ d l) 0.5) (* h (pow (/ d h) 0.5)))) l))) (if (!= (* (pow (/ d h) 0.5) (* (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ 0.5 l)) (* h (pow (/ d l) 0.5)))) 0.0) (- (* (* (pow (/ d h) 0.5) (* (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ 0.5 l)) (* h (pow (/ d l) 0.5)))) (/ (/ (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (pow (/ d h) 0.5)) (* (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ 0.5 l)) (* h (pow (/ d l) 0.5))))) (/ 1.0 (/ (/ 1.0 (pow (/ d h) 0.5)) (* (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ 0.5 l)) (* h (pow (/ d l) 0.5)))))) (* (pow (/ d l) 0.5) (* (pow (/ d h) 0.5) (fma (/ h l) (/ (pow (* D (/ (/ M 2.0) d)) 2.0) -2.0) 1.0))))))",
    "output_parens": 125,
    "avg_bits_err_input": 26.885601663223525,
    "avg_bits_err_output": 26.020812374968823,
    "avg_bits_err_improve": 0.8647892882547019,
    "time": 42617.480712890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (- (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 2.0)) (expm1 (log1p (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 26,
    "avg_bits_err_input": 15.011050498090572,
    "avg_bits_err_output": 14.551654947509583,
    "avg_bits_err_improve": 0.45939555058098946,
    "time": 21086.80859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9837712406251803,
    "avg_bits_err_output": 0.011073120312590145,
    "avg_bits_err_improve": 0.9726981203125902,
    "time": 4539.13720703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (fma v (* v 5.0) -1.0) (* (- PI) (sqrt (- 2.0 (* v (* v 6.0)))))) (- t (* v (* v t))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42716751275219256,
    "avg_bits_err_output": 0.11705432343849158,
    "avg_bits_err_improve": 0.31011318931370097,
    "time": 17921.049072265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (if (!= (* (sqrt (+ 1.0 (* (* v v) -3.0))) (- 1.0 (* v v))) 0.0) (/ 1.0 (/ 1.0 (* (sqrt (+ 1.0 (* (* v v) -3.0))) (- 1.0 (* v v))))) (* (sqrt (+ 1.0 (* (* v v) -3.0))) (- 1.0 (* v v)))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.011667481250360576,
    "avg_bits_err_output": 0.014938721875540868,
    "avg_bits_err_improve": -0.003271240625180291,
    "time": 8020.043701171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5145300913881009,
    "avg_bits_err_output": 0.5145300913881009,
    "avg_bits_err_improve": 0,
    "time": 10234.251708984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1490949785499773,
    "avg_bits_err_output": 2.1067506176122066,
    "avg_bits_err_improve": 0.04234436093777072,
    "time": 9031.800537109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ EDonor (+ Vef mu)) Ec) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.014188321399553346,
    "avg_bits_err_output": 0.014188321399553346,
    "avg_bits_err_improve": 0,
    "time": 6795.226318359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* b (* b 4.0))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18094172101615547,
    "avg_bits_err_output": 0.18069172101615547,
    "avg_bits_err_improve": 0.0002500000000000002,
    "time": 14586.65087890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (if (!= (* 4.0 (fma b (- b (* a (* 3.0 b))) (* a (fma a a a)))) 0.0) (+ (/ 4.0 (/ 1.0 (fma b (- b (* b (* a 3.0))) (* a (fma a a a))))) (* (* 4.0 (fma b (- b (* a (* 3.0 b))) (* a (fma a a a)))) (/ (pow (fma b b (* a a)) 2.0) (* 4.0 (fma b (- b (* a (* 3.0 b))) (* a (fma a a a))))))) (fma 4.0 (fma b (- b (* a (* 3.0 b))) (* a (fma a a a))) (pow (fma b b (* a a)) 2.0))) 1.0)",
    "output_parens": 48,
    "avg_bits_err_input": 0.18970316694580563,
    "avg_bits_err_output": 0.19248139610911016,
    "avg_bits_err_improve": -0.0027782291633045297,
    "time": 21623.88671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (- (* a a) (* a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18203309357999456,
    "avg_bits_err_output": 0.18234377193339082,
    "avg_bits_err_improve": -0.00031067835339626537,
    "time": 19394.923828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (/ (- -1.0 (+ 1.0 (* (/ x (sqrt (fma x x (* 4.0 (* p p))))) 2.0))) -2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 12.932476742341763,
    "avg_bits_err_output": 12.933073845907414,
    "avg_bits_err_improve": -0.0005971035656511248,
    "time": 16494.267822265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.15322183461517,
    "avg_bits_err_output": 0.056,
    "avg_bits_err_improve": 41.09722183461517,
    "time": 6728.528564453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(fma (sin x) (/ 0.5 (- (tan x) x)) (/ (- (* (sin x) 0.5) x) (- (tan x) x)))",
    "output_parens": 11,
    "avg_bits_err_input": 31.533065694187442,
    "avg_bits_err_output": 31.615015781788127,
    "avg_bits_err_improve": -0.0819500876006849,
    "time": 23808.340087890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.389283387442845,
    "avg_bits_err_output": 34.389283387442845,
    "avg_bits_err_improve": 0,
    "time": 13536.945556640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (if (!= (* a c) 0.0) (+ (/ -4.0 (/ 4.0 (* a c))) (* b_2 b_2)) (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 15,
    "avg_bits_err_input": 34.129451249660974,
    "avg_bits_err_output": 34.2076027551154,
    "avg_bits_err_improve": -0.07815150545442862,
    "time": 16044.4150390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.134044478686224,
    "avg_bits_err_output": 30.333461651200427,
    "avg_bits_err_improve": 0.8005828274857976,
    "time": 17115.818359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.23633584885353,
    "avg_bits_err_output": 32.23633584885353,
    "avg_bits_err_improve": 0,
    "time": 17902.42431640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (expm1 (- (log1p N) (log N)))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.669629428432366,
    "avg_bits_err_output": 29.680498664843533,
    "avg_bits_err_improve": -0.010869236411167549,
    "time": 12917.697265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (* (/ 1.0 x) (+ (/ x (+ 1.0 x)) 0.0)) (/ 1.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 14.698462470854961,
    "avg_bits_err_output": 14.701687267794819,
    "avg_bits_err_improve": -0.003224796939857555,
    "time": 14157.293212890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (cos (+ x eps)) 0.0) (- (log (+ 1.0 (expm1 (* (cos (+ x eps)) (/ (cos (+ x eps)) (cos (+ x eps))))))) (* (cos (+ x eps)) (/ (cos x) (cos (+ x eps))))) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 27,
    "avg_bits_err_input": 39.75990502859051,
    "avg_bits_err_output": 39.88929906245198,
    "avg_bits_err_improve": -0.1293940338614732,
    "time": 17552.859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(log (+ 1.0 (expm1 (- (cbrt (+ x 1.0)) (cbrt x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 29.6509733651925,
    "avg_bits_err_output": 29.66297693042746,
    "avg_bits_err_improve": -0.01200356523496282,
    "time": 9566.69189453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.378223525986172,
    "avg_bits_err_output": 30.378223525986172,
    "avg_bits_err_improve": 0,
    "time": 23857.458984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (+ b (sqrt (fma b b (* (* a c) -4.0)))) (+ b b)) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.51695654767653,
    "avg_bits_err_output": 34.5296959284687,
    "avg_bits_err_improve": -0.012739380792169186,
    "time": 21844.15185546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (if (!= b 0.0) (if (!= (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b) 0.0) (/ (- (* (/ 1.0 (/ -1.0 b)) (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b)) (* (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b) (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b))) (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b)) (* (+ b (sqrt (fma c (* a -4.0) (* b b)))) (- (/ b b)))) (- (- b) (sqrt (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 56,
    "avg_bits_err_input": 34.04895770910524,
    "avg_bits_err_output": 34.571069534964636,
    "avg_bits_err_improve": -0.5221118258593975,
    "time": 23096.068359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.285247213091395,
    "avg_bits_err_output": 0.8774611403947302,
    "avg_bits_err_improve": 60.407786072696666,
    "time": 21637.9130859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.00828121079103,
    "avg_bits_err_output": 44.223531720743274,
    "avg_bits_err_improve": 18.78474949004776,
    "time": 11874.425048828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.7186003831563,
    "avg_bits_err_output": 58.68284699357927,
    "avg_bits_err_improve": 0.03575338957703167,
    "time": 14179.2529296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (- (/ x x) (* x (/ (/ x x) (tan x)))) (fma x (* (tan x) (/ x (* x (tan x)))) 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 60.00642841108273,
    "avg_bits_err_output": 59.932778284505176,
    "avg_bits_err_improve": 0.07365012657755443,
    "time": 28762.051513671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (if (!= (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))) 0.0) (/ 1.0 (/ 1.0 (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a))))) (expm1 (* eps b)))",
    "output_parens": 28,
    "avg_bits_err_input": 60.17191290402927,
    "avg_bits_err_output": 29.586615024582244,
    "avg_bits_err_improve": 30.585297879447026,
    "time": 26309.96728515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.5112415262548,
    "avg_bits_err_output": 0.4749906015629508,
    "avg_bits_err_improve": 41.03625092469185,
    "time": 3910.1416015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.77728461579644,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.77678461579644,
    "time": 2761.9501953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.252303740510047,
    "avg_bits_err_output": 0.016165233569958675,
    "avg_bits_err_improve": 29.23613850694009,
    "time": 3850.418212890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- 2.0 (exp (- x))) 0.0) (/ (+ (* (- 2.0 (exp (- x))) (- (- 2.0 (exp x)) (exp (- x)))) (- (fma (- (exp (- x))) (exp x) (* (exp (- x)) (exp x))))) (- 2.0 (exp (- x)))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 35,
    "avg_bits_err_input": 29.845495044499835,
    "avg_bits_err_output": 29.326768206299658,
    "avg_bits_err_improve": 0.5187268382001768,
    "time": 17119.354248046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ 1.0 x)) 0.0) (fma (/ 1.0 (+ 1.0 x)) (/ (+ (/ 1.0 (+ x -1.0)) (/ -2.0 x)) (/ 1.0 (+ 1.0 x))) (/ 1.0 (+ 1.0 x))) (+ (/ 1.0 (+ 1.0 x)) (+ (/ 1.0 (+ x -1.0)) (/ -2.0 x))))",
    "output_parens": 23,
    "avg_bits_err_input": 10.041605755021347,
    "avg_bits_err_output": 10.042465319393965,
    "avg_bits_err_improve": -0.0008595643726181379,
    "time": 27345.430908203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.556955566873185,
    "avg_bits_err_output": 36.556955566873185,
    "avg_bits_err_improve": 0,
    "time": 16025.521240234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (log (+ 1.0 (if (!= (exp (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))) 0.0) (/ (* (expm1 (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))) (exp (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0))))) (exp (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0))))) (expm1 (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0))))))))",
    "output_parens": 37,
    "avg_bits_err_input": 29.69974681681252,
    "avg_bits_err_output": 28.835854301125078,
    "avg_bits_err_improve": 0.8638925156874429,
    "time": 10255.533935546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (- (expm1 (log1p (* (sin (+ x eps)) (/ (sin (+ x eps)) (sin (+ x eps)))))) (* (sin (+ x eps)) (/ (sin x) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 26,
    "avg_bits_err_input": 36.88128012781721,
    "avg_bits_err_output": 36.950094884423635,
    "avg_bits_err_improve": -0.06881475660642167,
    "time": 17273.736083984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(+ (/ (+ (/ (sqrt (+ 1.0 x)) (sqrt x)) -1.0) (* (sqrt (+ 1.0 x)) 2.0)) (+ (/ -1.0 (+ (sqrt (+ 1.0 x)) (sqrt (+ 1.0 x)))) (/ (/ (sqrt (+ 1.0 x)) (sqrt (+ 1.0 x))) (* (sqrt x) 2.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 19.94802338498216,
    "avg_bits_err_output": 19.939294922762837,
    "avg_bits_err_improve": 0.008728462219323774,
    "time": 15297.83544921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (/ (+ -1.0 (+ (- (fma (atan (+ 1.0 N)) (atan (+ 1.0 N)) 1.0) (* (atan N) (atan N))) (fma (- (atan N)) (atan N) (* (atan N) (atan N))))) (+ (atan (+ 1.0 N)) (atan N))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 33,
    "avg_bits_err_input": 15.245350639810278,
    "avg_bits_err_output": 15.24180752172525,
    "avg_bits_err_improve": 0.003543118085028496,
    "time": 11071.644775390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.844951854568617,
    "avg_bits_err_output": 29.844951854568617,
    "avg_bits_err_improve": 0,
    "time": 37815.533447265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (+ (/ (fma (- m) m (* m m)) v) (/ (- m (* m m)) v)) 1.0) (- 1.0 m))",
    "output_parens": 11,
    "avg_bits_err_input": 0.07497180468885216,
    "avg_bits_err_output": 0.07195056406367188,
    "avg_bits_err_improve": 0.003021240625180277,
    "time": 19606.284423828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.083028519494206,
    "avg_bits_err_output": 0.3061866546917368,
    "avg_bits_err_improve": 15.776841864802469,
    "time": 11918.383544921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (/ (* PI angle) -180.0) 0.0) (/ (/ 1.0 (/ 1.0 (* PI angle))) 180.0) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.33803249018788,
    "avg_bits_err_output": 20.339619110656688,
    "avg_bits_err_improve": -0.0015866204688066432,
    "time": 26997.034423828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) (* 2.0 (fma (- (pow a 2.0)) (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (pow a 2.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 24,
    "avg_bits_err_input": 31.145442296575986,
    "avg_bits_err_output": 31.153243410951035,
    "avg_bits_err_improve": -0.007801114375048712,
    "time": 33954.379150390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* (/ angle 180.0) PI) 0.0) (* (* (/ angle 32400.0) 64800.0) (/ angle (/ (* 360.0 angle) PI))) (* (/ angle 180.0) PI)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.316869005994228,
    "avg_bits_err_output": 20.33476531528056,
    "avg_bits_err_improve": -0.017896309286332013,
    "time": 29987.759521484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18225020351258203,
    "avg_bits_err_output": 0.1824634750397233,
    "avg_bits_err_improve": -0.00021327152714126218,
    "time": 16834.548095703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3316504019803842,
    "avg_bits_err_output": 0.31762994799929856,
    "avg_bits_err_improve": 0.014020453981085645,
    "time": 19840.5947265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ e (fma e (cos v) 1.0)) (sin v))",
    "output_parens": 5,
    "avg_bits_err_input": 0.13414624062518027,
    "avg_bits_err_output": 0.1344174812503606,
    "avg_bits_err_improve": -0.0002712406251803301,
    "time": 14676.383056640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.799114515947352,
    "avg_bits_err_output": 16.791983961601243,
    "avg_bits_err_improve": 0.007130554346108653,
    "time": 30425.7939453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma b (* b (* b b)) (* (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (* b (- b)))) (* b (- b))) (- (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (* b b))) (+ b (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 53,
    "avg_bits_err_input": 52.903880467862585,
    "avg_bits_err_output": 51.95382449029751,
    "avg_bits_err_improve": 0.9500559775650785,
    "time": 30716.92138671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) 0.0) (/ 2.0 (/ 4.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (* 0.5 (if (!= (/ b a) 0.0) (if (!= (+ (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ 1.0 (/ 1.0 (/ b a)))) 0.0) (/ (fma (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ (sqrt (fma a (* c -4.0) (* b b))) a) (- (/ (/ 1.0 (/ 1.0 (/ b a))) (/ 1.0 (/ b a))))) (+ (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ 1.0 (/ 1.0 (/ b a))))) (- (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ 1.0 (/ 1.0 (/ b a))))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a))))",
    "output_parens": 75,
    "avg_bits_err_input": 28.549210173889637,
    "avg_bits_err_output": 27.991091570690244,
    "avg_bits_err_improve": 0.558118603199393,
    "time": 29500.68798828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma b b (* a (* c -4.0))))) 0.0) (/ (fma b (- b) (* (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0)))))) (+ b (sqrt (fma b b (* a (* c -4.0)))))) (fma b -1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 43.800863444631155,
    "avg_bits_err_output": 42.651307098041094,
    "avg_bits_err_improve": 1.1495563465900602,
    "time": 28635.8681640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ b (sqrt (fma b b (* (* a c) -4.0)))) (+ b b)) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.52001636568025,
    "avg_bits_err_output": 34.5296959284687,
    "avg_bits_err_improve": -0.009679562788448948,
    "time": 17833.156982421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (- (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)) 0.0) (/ (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (if (!= (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))) 0.0) (/ 1.0 (/ 1.0 (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2)))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 54,
    "avg_bits_err_input": 0.8023021374663263,
    "avg_bits_err_output": 0.8199647375694876,
    "avg_bits_err_improve": -0.01766260010316134,
    "time": 24297.366455078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (<= (* -2.0 x) 0.2) (/ (- 0.0 (expm1 (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))) (- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 29.07521441751625,
    "avg_bits_err_output": 0.011047002951929763,
    "avg_bits_err_improve": 29.06416741456432,
    "time": 27524.908935546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(- (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp (- x)) (+ (exp x) (exp (- x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 58.215840184959255,
    "avg_bits_err_output": 58.21800389442608,
    "avg_bits_err_improve": -0.002163709466827868,
    "time": 20461.52294921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18402014172814,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.17664514172814,
    "time": 11249.10595703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- 0.0 (log1p (expm1 (/ -2.0 (+ (exp x) (exp (- x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.010635515405487158,
    "avg_bits_err_output": 0.015553200168429818,
    "avg_bits_err_improve": -0.004917684762942661,
    "time": 3613.2880859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.90577124062518,
    "avg_bits_err_output": 31.90577124062518,
    "avg_bits_err_improve": 0,
    "time": 4097.78955078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 0.014771240625180291,
    "avg_bits_err_improve": 58.68907374640042,
    "time": 12241.794677734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (expm1 (log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011948120312590144,
    "avg_bits_err_improve": -7.312031259014418e-05,
    "time": 3532.571044921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (cos (atan (/ (/ eh ew) (tan t))))) (sin t)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12425,
    "avg_bits_err_output": 0.12494812031259014,
    "avg_bits_err_improve": -0.0006981203125901447,
    "time": 26207.407958984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1296674812503606,
    "avg_bits_err_output": 0.1296674812503606,
    "avg_bits_err_improve": 0,
    "time": 12194.71630859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.39515394909506,
    "avg_bits_err_output": 3.831820118824024,
    "avg_bits_err_improve": 35.563333830271034,
    "time": 24284.765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 13.995094089426662,
    "avg_bits_err_output": 0.009483795589947925,
    "avg_bits_err_improve": 13.985610293836714,
    "time": 5748.551513671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (if (!= (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))) 0.0) (* (* (- (cos delta) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos phi1) (cos theta)))))))) (/ (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos phi1) (cos theta)))))) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos phi1) (cos theta))))))))) (sin phi1)) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta)))))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 0.15595999319001144,
    "avg_bits_err_output": 0.2335221442383863,
    "avg_bits_err_improve": -0.07756215104837486,
    "time": 36205.80224609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 600000.0) (+ (* (/ -1.0 (* a 6.0)) b) (+ (/ b (* a -6.0)) (* (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a)))) (+ (+ (/ (- 1.0 b) (* a 3.0)) (/ (sqrt (fma c (* a -3.0) (* b b))) (* a 3.0))) (/ -0.3333333333333333 a)))",
    "output_parens": 27,
    "avg_bits_err_input": 52.908560327204256,
    "avg_bits_err_output": 50.91037582275501,
    "avg_bits_err_improve": 1.9981845044492488,
    "time": 29794.21435546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (* b b) (* b b) (* (- (sqrt (fma c (* a -3.0) (* b b)))) (* (sqrt (fma c (* a -3.0) (* b b))) (* b b)))) (* b (- b))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 55,
    "avg_bits_err_input": 28.717548485991898,
    "avg_bits_err_output": 28.296421000812884,
    "avg_bits_err_improve": 0.42112748517901366,
    "time": 31422.84912109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (+ b (sqrt (fma b b (* c (* a -3.0))))) (- (sqrt (fma b b (* c (* a -3.0)))) b) (fma (- (fabs b)) (fabs b) (* b b))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 38,
    "avg_bits_err_input": 43.82823094140982,
    "avg_bits_err_output": 42.696492995690434,
    "avg_bits_err_improve": 1.1317379457193866,
    "time": 29748.289306640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.55748047305467,
    "avg_bits_err_output": 34.55748047305467,
    "avg_bits_err_improve": 0,
    "time": 19827.50341796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.819481171290647,
    "avg_bits_err_output": 12.819858029054178,
    "avg_bits_err_improve": -0.0003768577635305803,
    "time": 30785.677734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.702365385298744,
    "avg_bits_err_output": 0.5223066279335955,
    "avg_bits_err_improve": 29.18005875736515,
    "time": 19542.106689453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010125,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 0,
    "time": 5755.210205078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- (+ -1.0 (/ x (+ x 1.0))) (/ 1.0 (+ x 1.0))) (+ x -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 14.72004917919412,
    "avg_bits_err_output": 12.788290954769414,
    "avg_bits_err_improve": 1.9317582244247067,
    "time": 13959.81982421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (fma C (+ F F) (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (* F -2.0))) (fma (* C A) -4.0 (pow B 2.0)))) (- (* A (* C 4.0)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.124822280773145,
    "avg_bits_err_output": 51.811058990731645,
    "avg_bits_err_improve": 0.31376329004149994,
    "time": 36750.350341796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* (atan (/ (if (!= (- C A) 0.0) (+ (/ 1.0 (/ 1.0 (- C A))) (* (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (/ (- A C) (- C A)))) (- (- C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) A)) B)) (/ 180.0 PI))",
    "output_parens": 27,
    "avg_bits_err_input": 30.321259719347697,
    "avg_bits_err_output": 30.535914716493902,
    "avg_bits_err_improve": -0.21465499714620506,
    "time": 27906.9150390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* 2.0 (* (* F (- (pow B 2.0) (* 4.0 (* A C)))) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.34563997338811,
    "avg_bits_err_output": 52.06958607038211,
    "avg_bits_err_improve": 0.27605390300600163,
    "time": 38471.29052734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.356114480563749,
    "avg_bits_err_output": 15.356114480563749,
    "avg_bits_err_improve": 0,
    "time": 1940.21142578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (/ (* g (+ g (sqrt (fma h (- h) (* g g))))) (- g)) (- (- g) (sqrt (fma h (- h) (* g g))))))))",
    "output_parens": 29,
    "avg_bits_err_input": 35.675476118018906,
    "avg_bits_err_output": 35.641079885799364,
    "avg_bits_err_improve": 0.034396232219542355,
    "time": 14307.569580078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9892528203183604,
    "avg_bits_err_output": 0.979075564063672,
    "avg_bits_err_improve": 0.01017725625468835,
    "time": 6057.520263671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6456981203125902,
    "avg_bits_err_output": 0.6456981203125902,
    "avg_bits_err_improve": 0,
    "time": 4145.832275390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (* a1 a2) -1e+198) (* a1 (/ (/ a2 b2) b1)) (if (<= (* a1 a2) -2e-196) (/ (* a1 a2) (* b1 b2)) (if (<= (* a1 a2) 1e-174) (* (/ (/ a1 b1) b2) a2) (if (<= (* a1 a2) 5e+226) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 27,
    "avg_bits_err_input": 11.785799122496455,
    "avg_bits_err_output": 5.138876307238639,
    "avg_bits_err_improve": 6.646922815257816,
    "time": 8325.25,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4428257887595321,
    "avg_bits_err_output": 0.396125,
    "avg_bits_err_improve": 0.0467007887595321,
    "time": 9367.74658203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (+ 1.0 (exp (log1p (+ x (hypot 1.0 x))))) 0.0) (+ (/ 1.0 (+ -1.0 (- -1.0 (+ x (hypot 1.0 x))))) (* (/ (- -1.0 (+ x (hypot 1.0 x))) (- -2.0 (* (+ x (+ (hypot 1.0 x) 1.0)) 2.0))) (+ (+ x (hypot 1.0 x)) (+ (+ x (hypot 1.0 x)) 2.0)))) (+ x (hypot 1.0 x))))",
    "output_parens": 32,
    "avg_bits_err_input": 53.11726904540219,
    "avg_bits_err_output": 43.41952472881109,
    "avg_bits_err_improve": 9.697744316591098,
    "time": 16867.86279296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(+ (/ (exp (+ (log a) (log b))) 2.0) (expm1 (log1p (* (exp (+ (log a) (log b))) 0.5))))",
    "output_parens": 13,
    "avg_bits_err_input": 5.7380536978855154,
    "avg_bits_err_output": 5.760066686191291,
    "avg_bits_err_improve": -0.02201298830577514,
    "time": 12220.955078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- 1.0 (- (+ 1.0 (* 2.0 (/ x (+ x 1.0)))) 1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.014042481250360577,
    "avg_bits_err_improve": 0.00045751874963942396,
    "time": 6980.097900390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1158.89013671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* w r) (* (* w (/ r (- 1.0 v))) (- 0.375 (* v 0.25)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.970045637983286,
    "avg_bits_err_output": 0.6031596536368055,
    "avg_bits_err_improve": 12.366885984346482,
    "time": 23236.594482421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (+ (* (* x1 x1) (* (/ (- x1 (fma x1 (* x1 3.0) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) (* (* (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (/ (* x1 2.0) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))))) (+ x1 x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5116868640749087,
    "avg_bits_err_output": 0.24896713813385346,
    "avg_bits_err_improve": 0.26271972594105525,
    "time": 66818.9296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.28419832474688,
    "avg_bits_err_output": 1.3172969641566725,
    "avg_bits_err_improve": 16.966901360590207,
    "time": 5566.329345703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* (* x x) (* -0.12900613773279798 x)) (* (- x) 0.954929658551372))",
    "output_parens": 6,
    "avg_bits_err_input": 0.22184436093777044,
    "avg_bits_err_output": 0.1892099625007211,
    "avg_bits_err_improve": 0.03263439843704932,
    "time": 10065.750732421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0021981203125901443,
    "avg_bits_err_output": 0.0021981203125901443,
    "avg_bits_err_improve": 0,
    "time": 2307.619384765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) 2.0) (- b a)) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.084617614909417,
    "avg_bits_err_output": 0.2904840539021473,
    "avg_bits_err_improve": 13.79413356100727,
    "time": 15351.32080078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 30.466625857289806,
    "avg_bits_err_output": 25.604134503289977,
    "avg_bits_err_improve": 4.862491353999829,
    "time": 27996.34765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (fma (- 2.0 (/ 2.0 (+ (/ t t) t))) (- 2.0 (/ 2.0 (+ (/ t t) t))) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.013125,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 0.006124999999999999,
    "time": 6801.52783203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017125,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0,
    "time": 11442.23486328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0075,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 0,
    "time": 11714.456298828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3107.1455078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2657.78076171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2721.495361328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.808299539132032,
    "avg_bits_err_output": 0.252125,
    "avg_bits_err_improve": 7.556174539132032,
    "time": 19494.936767578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.307054420725671,
    "avg_bits_err_output": 7.307054420725671,
    "avg_bits_err_improve": 0,
    "time": 3532.668212890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.95912717625473,
    "avg_bits_err_output": 15.95912717625473,
    "avg_bits_err_improve": 0,
    "time": 3629.99560546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) 2.0) 0.0) (- (/ (* (exp (* 10.0 (* x x))) (* 2.0 (* (exp (* 10.0 (* x x))) (- (cos x) -2.0)))) (* (exp (* 10.0 (* x x))) 2.0)) (/ 1.0 (/ 1.0 (* (exp (* 10.0 (* x x))) 2.0)))) (* (cos x) (exp (* 10.0 (* x x)))))",
    "output_parens": 34,
    "avg_bits_err_input": 3.540502444771896,
    "avg_bits_err_output": 3.547741633004147,
    "avg_bits_err_improve": -0.007239188232251337,
    "time": 19149.161376953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 0.10140364453968134,
    "avg_bits_err_improve": 14.586703609095649,
    "time": 11903.08740234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.506265881854695,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.506265881854695,
    "time": 4661.464599609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.6191748059602,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.6189248059602,
    "time": 4571.4658203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.3005,
    "avg_bits_err_improve": 63.6995,
    "time": 19302.38671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325373223181,
    "avg_bits_err_output": 0.41032312031259016,
    "avg_bits_err_improve": 61.43293061191922,
    "time": 7689.064697265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (if (!= b 0.0) (if (!= (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b) 0.0) (/ (- (* (/ 1.0 (/ -1.0 b)) (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b)) (* (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b) (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b))) (/ (* b (sqrt (fma c (* a -4.0) (* b b)))) b)) (* (+ b (sqrt (fma c (* a -4.0) (* b b)))) (- (/ b b)))) (- (- b) (sqrt (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 56,
    "avg_bits_err_input": 34.04895770910524,
    "avg_bits_err_output": 34.571069534964636,
    "avg_bits_err_improve": -0.5221118258593975,
    "time": 25618.200927734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ b (sqrt (fma b b (* (* a c) -4.0)))) (+ b b)) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.52001636568025,
    "avg_bits_err_output": 34.5296959284687,
    "avg_bits_err_improve": -0.009679562788448948,
    "time": 21903.36474609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2330.74365234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.70703321656496,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 39.69715821656496,
    "time": 6194.45458984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.166642772734377,
    "avg_bits_err_output": 20.166642772734377,
    "avg_bits_err_improve": 0,
    "time": 3386.785400390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6594213341394606,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6594213341394606,
    "time": 8957.118896484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(+ (* a (+ b d)) (* a c))",
    "output_parens": 4,
    "avg_bits_err_input": 0.041125,
    "avg_bits_err_output": 0.04375,
    "avg_bits_err_improve": -0.0026249999999999954,
    "time": 7601.019775390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.019896240625180292,
    "avg_bits_err_output": 0.019896240625180292,
    "avg_bits_err_improve": 0,
    "time": 2960.353271484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.01225,
    "time": 3771.216552734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.00075,
    "time": 1971.5166015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ d c) (+ e (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4036797000057695,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 0.16067970000576953,
    "time": 6224.29931640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 0.5 (/ (cos x) 2.0)) 0.0) (/ (+ (+ (fma (- (* 0.5 (cos x)) 0.5) (* 0.5 (cos x)) (* (cos x) (- 0.25 (* (cos x) 0.25)))) (* (+ 0.5 (/ (cos x) -2.0)) (+ 0.5 (/ (cos x) -2.0)))) (* (- 0.5 (/ (cos x) 2.0)) (- 0.5 (/ (cos x) 2.0)))) (if (!= (+ 0.5 (* 0.5 (cos x))) 0.0) (/ (- 0.25 (* (* (cos x) 0.25) (cos x))) (+ 0.5 (* 0.5 (cos x)))) (+ 0.5 (/ (cos x) -2.0)))) (- 1.0 (cos x)))",
    "output_parens": 52,
    "avg_bits_err_input": 30.16991500837944,
    "avg_bits_err_output": 30.176154366042006,
    "avg_bits_err_improve": -0.006239357662565226,
    "time": 47690.072509765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= (- (* x x) (- eps)) 0.0) (if (!= (/ (* eps eps) (fma x x eps)) 0.0) (/ (* (/ (* eps eps) (fma x x eps)) (- (* (* x x) (* x (/ x (fma x x eps)))) (/ (* eps eps) (fma x x eps)))) (/ (* eps eps) (fma x x eps))) (* (fma x x eps) (/ (fma x x (- eps)) (fma x x eps)))) (- (* x x) eps))))",
    "output_parens": 37,
    "avg_bits_err_input": 24.579067066851806,
    "avg_bits_err_output": 24.624869679629974,
    "avg_bits_err_improve": -0.045802612778167884,
    "time": 13199.189697265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (+ x (/ (sin x) (tan x))) 0.0) (/ (- (* (+ x (/ x (tan x))) (+ x (/ (sin x) (tan x)))) (* (+ x (/ (sin x) (tan x))) (+ x (/ (sin x) (tan x))))) (+ x (/ (sin x) (tan x)))) (- (+ x (/ x (tan x))) (+ x (/ (sin x) (tan x)))))",
    "output_parens": 37,
    "avg_bits_err_input": 29.935148109685397,
    "avg_bits_err_output": 29.958580105833292,
    "avg_bits_err_improve": -0.023431996147895262,
    "time": 30454.289306640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006625,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 0,
    "time": 2062.685302734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -1.6e+91) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i n)))) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))))",
    "output_parens": 37,
    "avg_bits_err_input": 47.94170988204123,
    "avg_bits_err_output": 46.92311693688868,
    "avg_bits_err_improve": 1.0185929451525482,
    "time": 32738.309814453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* (/ d (fma d d (* c c))) b) (* a (/ c (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.3920867006932,
    "avg_bits_err_output": 23.078135930397902,
    "avg_bits_err_improve": 3.313950770295296,
    "time": 14201.755126953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 0.0) (- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 1e-75) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 26.16791257004547,
    "avg_bits_err_output": 22.552850040671157,
    "avg_bits_err_improve": 3.6150625293743133,
    "time": 13847.339599609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03425,
    "avg_bits_err_output": 0.020240425366668893,
    "avg_bits_err_improve": 0.01400957463333111,
    "time": 8210.28271484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (+ (- (* ux maxCos) (* (fma ux maxCos (- 1.0 ux)) (- ux (* ux maxCos)))) (- ux)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.265780636450266,
    "avg_bits_err_output": 0.5615402073307965,
    "avg_bits_err_improve": 12.70424042911947,
    "time": 28141.599365234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (if (!= (* uy (* 2.0 PI)) 0.0) (/ 1.0 (- (/ (/ 0.5 PI) uy) 0.0)) (* uy (* 2.0 PI)))) (sqrt (- 1.0 (log (+ 1.0 (expm1 (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 13.30430100271784,
    "avg_bits_err_output": 12.16989378492361,
    "avg_bits_err_improve": 1.1344072177942301,
    "time": 28682.45361328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* 2.0 PI))) (sqrt (- 1.0 (* ux (* ux (* (* (- 1.0 ux) maxCos) (* (- 1.0 ux) maxCos))))))) xi (* (sqrt (- 1.0 (* ux (* ux (* (* (- 1.0 ux) maxCos) (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3331290051909574,
    "avg_bits_err_output": 0.3245228676982762,
    "avg_bits_err_improve": 0.008606137492681187,
    "time": 38910.58837890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20630759366319829,
    "avg_bits_err_output": 0.20630759366319829,
    "avg_bits_err_improve": 0,
    "time": 25094.4765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (log1p (expm1 (/ u1 (- 1.0 u1))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5398968997108202,
    "avg_bits_err_output": 0.5576491399494881,
    "avg_bits_err_improve": -0.017752240238667838,
    "time": 22913.6044921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (log1p (expm1 (/ u1 (- 1.0 u1))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3178456279750203,
    "avg_bits_err_output": 0.33473291152024676,
    "avg_bits_err_improve": -0.01688728354522645,
    "time": 20195.372314453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (expm1 (log1p (exp (/ PI s)))))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.33478257062772354,
    "avg_bits_err_output": 0.33573069094031366,
    "avg_bits_err_improve": -0.0009481203125901172,
    "time": 59672.815673828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05820654601193664,
    "avg_bits_err_output": 0.05881970382380564,
    "avg_bits_err_improve": -0.0006131578118690056,
    "time": 12678.872802734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (expm1 (/ (fabs x) (- s))) 2.0)) (* s (+ (exp (/ (- (fabs x)) s)) 1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1562500466966886,
    "avg_bits_err_output": 0.14175252090565688,
    "avg_bits_err_improve": 0.014497525791031723,
    "time": 21255.85693359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6876513735889636,
    "avg_bits_err_output": 0.6843174074377069,
    "avg_bits_err_improve": 0.0033339661512566954,
    "time": 22175.58056640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1753757084092386,
    "avg_bits_err_output": 0.1698505593086121,
    "avg_bits_err_improve": 0.005525149100626514,
    "time": 18901.599853515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5257487598013366,
    "avg_bits_err_output": 2.52174063603113,
    "avg_bits_err_improve": 0.004008123770206762,
    "time": 32069.138671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* cosTheta_O (* (/ (+ cosTheta_i cosTheta_i) (sinh (/ 1.0 v))) (* (/ -0.5 v) (/ -0.5 v)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46658294560228564,
    "avg_bits_err_output": 0.3540336938351924,
    "avg_bits_err_improve": 0.11254925176709324,
    "time": 22939.80126953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.10410405243715923,
    "avg_bits_err_output": 0.10339166594852331,
    "avg_bits_err_improve": 0.0007123864886359188,
    "time": 25214.75390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (fma alpha alpha -1.0) (log (* alpha alpha))) PI) (fma cosTheta (- (* alpha (* alpha cosTheta)) cosTheta) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4685091442512029,
    "avg_bits_err_output": 0.49220935853471287,
    "avg_bits_err_improve": -0.02370021428350999,
    "time": 24823.471435546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (+ s (fma (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) s (- s))))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3159584407674125,
    "avg_bits_err_output": 1.2684390823187204,
    "avg_bits_err_improve": 0.04751935844869215,
    "time": 23964.624267578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (fma (log (/ 1.0 (fma u -4.0 1.0))) s (* s 0.5)) (* s 0.5))",
    "output_parens": 7,
    "avg_bits_err_input": 12.56426601420522,
    "avg_bits_err_output": 12.58534504952914,
    "avg_bits_err_improve": -0.02107903532392008,
    "time": 20728.864501953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (* (exp (/ (- r) (* s 3.0))) (/ 0.75 (/ (+ (* PI (* (* s r) 3.0)) (* (* PI (/ s 0.3333333333333333)) (+ r (+ r r)))) 2.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.13847928776050428,
    "avg_bits_err_output": 0.7033415028054246,
    "avg_bits_err_improve": -0.5648622150449203,
    "time": 25665.416015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8646385385723694,
    "avg_bits_err_output": 0.722259114357255,
    "avg_bits_err_improve": 0.1423794242151144,
    "time": 24620.052734375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6857721731942664,
    "avg_bits_err_output": 0.4689291691334569,
    "avg_bits_err_improve": 0.21684300406080953,
    "time": 21034.990966796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(if (!= (- (* (sin (* PI (* u2 2.0))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)) (sin (* PI (* u2 2.0)))) 0.0) (/ (fma (* (sin (* PI (* u2 2.0))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)) (* (sin (* PI (* u2 2.0))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)) (- (* (sin (* PI (* u2 2.0))) (sin (* PI (* u2 2.0)))))) (- (* (sin (* PI (* u2 2.0))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)) (sin (* PI (* u2 2.0))))) (+ (sin (* PI (* u2 2.0))) (* (sin (* PI (* u2 2.0))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0))))",
    "output_parens": 69,
    "avg_bits_err_input": 13.653590131905819,
    "avg_bits_err_output": 13.449075580769493,
    "avg_bits_err_improve": 0.20451455113632555,
    "time": 24652.917236328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (- (log (+ 1.0 (expm1 (log (exp (* (+ 1.0 (log (- 1.0 u1))) (+ 1.0 (log (- 1.0 u1))))))))) 1.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 34,
    "avg_bits_err_input": 13.691179165085,
    "avg_bits_err_output": 13.136385023924475,
    "avg_bits_err_improve": 0.5547941411605244,
    "time": 27063.268798828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma alpha alpha (* alpha (- alpha))) (* (log (- 1.0 u0)) (* alpha (- alpha))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.174956408182862,
    "avg_bits_err_output": 14.068715626493752,
    "avg_bits_err_improve": 0.10624078168910955,
    "time": 17961.80517578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ (* (log (- 1.0 u0)) -2.0) -1.0) (/ -1.0 (+ (/ sin2phi (* alphay alphay)) (+ (/ sin2phi (* alphay alphay)) (/ (+ cos2phi cos2phi) (* alphax alphax))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.57253538117605,
    "avg_bits_err_output": 12.61628725317436,
    "avg_bits_err_improve": -0.04375187199831032,
    "time": 17871.088134765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+51) (- (* PI l) (* (* (/ 1.0 (- (* F F))) (- (- (/ 1.0 (* F F)) (- (/ 1.0 (* F F)) (* F (/ F (* F F))))))) (tan (* PI l)))) (if (<= (* PI l) 5e-41) (- (* PI l) (* (/ (tan (* PI l)) F) (/ 1.0 F))) (- (* PI l) (* (* (/ 1.0 (- (* F F))) (- (- (/ 1.0 (* F F)) (- (/ 1.0 (* F F)) (* F (/ F (* F F))))))) (tan (* PI l))))))",
    "output_parens": 51,
    "avg_bits_err_input": 16.723557015822454,
    "avg_bits_err_output": 9.539398844646783,
    "avg_bits_err_improve": 7.184158171175671,
    "time": 20749.735595703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2184387218755409,
    "avg_bits_err_output": 0.15271936093777042,
    "avg_bits_err_improve": 0.06571936093777048,
    "time": 16007.562255859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (expm1 (log1p (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 14.13654311864041,
    "avg_bits_err_output": 11.115497215020966,
    "avg_bits_err_improve": 3.0210459036194433,
    "time": 23669.1669921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (fma (- (fabs (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (fabs (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (* (exp (* PI (/ f -4.0))) (exp (* PI (/ f -4.0)))) (* (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (/ PI -4.0))",
    "output_parens": 68,
    "avg_bits_err_input": 61.477159954499704,
    "avg_bits_err_output": 61.496259590829254,
    "avg_bits_err_improve": -0.019099636329549696,
    "time": 71954.93872070312,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.13593552709568,
    "avg_bits_err_output": 34.154310670842285,
    "avg_bits_err_improve": 8.981624856253397,
    "time": 29486.844970703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.142166604141708,
    "avg_bits_err_output": 4.142166604141708,
    "avg_bits_err_improve": 0,
    "time": 27023.110107421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (exp (log1p (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))) 1.0)) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 1.0028867854942232,
    "avg_bits_err_output": 1.005011785494223,
    "avg_bits_err_improve": -0.0021249999999999325,
    "time": 12644.4921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.01840953910635,
    "avg_bits_err_output": 10.02029340109097,
    "avg_bits_err_improve": -0.0018838619846199833,
    "time": 10400.439208984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+263) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* 2.0 (* (* n U) (- t (* 2.0 (* l (/ l Om)))))) (* 2.0 (* (* n (- U U*)) (* (* n U) (pow (/ l Om) 2.0))))))))",
    "output_parens": 74,
    "avg_bits_err_input": 35.07639001983728,
    "avg_bits_err_output": 29.577111120041188,
    "avg_bits_err_improve": 5.499278899796089,
    "time": 37305.214111328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (/ (* (pow t 3.0) (pow (/ k t) 2.0)) l)) (* (/ (sin k) l) (tan k)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.59580084174757,
    "avg_bits_err_output": 36.75267910104218,
    "avg_bits_err_improve": 10.843121740705385,
    "time": 45119.047119140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (/ (pow t 3.0) l) (* (sin k) (+ 2.0 (pow (/ k t) 2.0)))) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 31.955668116995383,
    "avg_bits_err_output": 27.21485205117148,
    "avg_bits_err_improve": 4.740816065823903,
    "time": 19403.282470703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (+ (* a2 (/ a2 (sqrt 2.0))) (* a1 (/ a1 (sqrt 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5340962437741605,
    "avg_bits_err_output": 0.470536656266227,
    "avg_bits_err_improve": 0.06355958750793356,
    "time": 23319.098876953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (if (!= (* PI n) 0.0) (* (* PI (* PI n)) (/ n (* PI n))) (* PI n))) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5244609778208092,
    "avg_bits_err_output": 0.5434397978048424,
    "avg_bits_err_improve": -0.01897881998403317,
    "time": 18555.096435546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma (exp (- l)) (- J) (* (exp l) J)) (cos (/ K 2.0))) U)",
    "output_parens": 10,
    "avg_bits_err_input": 17.133124816344267,
    "avg_bits_err_output": 17.13732041071904,
    "avg_bits_err_improve": -0.004195594374774458,
    "time": 20381.412109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (if (!= (* K (/ (+ m n) 2.0)) 0.0) (* (- (* K (/ (+ m n) 2.0)) M) (* (+ m n) (/ K (* K (+ m n))))) (- (* K (/ (+ m n) 2.0)) M))) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 31,
    "avg_bits_err_input": 15.5280737184317,
    "avg_bits_err_output": 15.502851801944232,
    "avg_bits_err_improve": 0.025221916487469187,
    "time": 8980.55322265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.995917481250363,
    "avg_bits_err_output": 17.995917481250363,
    "avg_bits_err_improve": 0,
    "time": 27433.79833984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= h -2e+85) (* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h)))) (if (<= h 1e-47) (* w0 (sqrt (- 1.0 (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h))))))",
    "output_parens": 31,
    "avg_bits_err_input": 14.067381665166643,
    "avg_bits_err_output": 10.327760751173496,
    "avg_bits_err_improve": 3.7396209139931464,
    "time": 12487.10888671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -5e+61) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* V l) -2e-271) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 1e-311) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* V l) 1e+227) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (/ A V) l)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 19.173273755806512,
    "avg_bits_err_output": 15.215292098793743,
    "avg_bits_err_improve": 3.9579816570127697,
    "time": 17330.232421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= h -1.05e-157) (* (if (!= (* c0 (* (/ d D) (/ d (* D (* h w))))) 0.0) (+ (/ 1.0 (/ 1.0 (* c0 (* (/ d D) (/ d (* D (* h w))))))) (* (sqrt (* (fma c0 (* (/ d D) (/ d (* D (* h w)))) M) (fma c0 (* (/ d D) (/ d (* D (* h w)))) (- M)))) (/ (* c0 (* (/ d D) (/ d (* D (* h w))))) (* c0 (* (/ d D) (/ d (* D (* h w)))))))) (+ (* c0 (/ (* d (/ (/ (/ d h) w) D)) D)) (sqrt (* (fma c0 (/ (* d (/ (/ (/ d h) w) D)) D) M) (fma c0 (/ (* d (/ (/ (/ d h) w) D)) D) (- M)))))) (/ c0 (+ w w))) (if (<= h -5e-284) (* (fma c0 (* d (/ (/ d w) (* h (* D D)))) (sqrt (* (fma c0 (* d (/ (/ d w) (* h (* D D)))) M) (fma c0 (* d (/ (/ d w) (* h (* D D)))) (- M))))) (/ c0 (+ w w))) (* (/ c0 (* 2.0 w)) (fma (* (/ (/ d w) (* D h)) (/ (* d c0) D)) 1.0 (sqrt (* (fma (/ (/ d w) (* D h)) (/ (* d c0) D) M) (- (* (/ (/ d w) (* D h)) (/ (* d c0) D)) M)))))))",
    "output_parens": 124,
    "avg_bits_err_input": 59.477399904622935,
    "avg_bits_err_output": 54.38533584861527,
    "avg_bits_err_improve": 5.092064056007665,
    "time": 56296.73974609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) -1e+242) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* 0.5 (* (pow (* M (/ D (* d 2.0))) 2.0) (* (pow (/ d h) 0.5) (/ (* h (pow (/ d l) 0.5)) l))))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+93) (* (pow (/ d h) 0.5) (* (fma 0.5 (* (pow (/ (* M (/ D 2.0)) d) 2.0) (/ h l)) -1.0) (- (pow (/ d l) 0.5)))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (+ 2.0 (- (* h (/ (pow (- (* M (exp (log1p (/ D (* d 2.0))))) M) 2.0) l)))) 2.0))))",
    "output_parens": 83,
    "avg_bits_err_input": 26.979217564542626,
    "avg_bits_err_output": 26.023079620431844,
    "avg_bits_err_improve": 0.9561379441107825,
    "time": 38360.242919921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (if (!= (+ (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -2.0)) (/ 1.0 (/ -2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) 0.0) (/ (fma (+ 1.0 (/ 1.0 (/ -2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (+ 1.0 (/ 1.0 (/ -2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (- (/ (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 4.0))) (+ (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -2.0)) (/ 1.0 (/ -2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (+ 1.0 (- (/ 1.0 (/ -2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 2.0)))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 79,
    "avg_bits_err_input": 15.441218408153023,
    "avg_bits_err_output": 14.982212919488804,
    "avg_bits_err_improve": 0.45900548866421964,
    "time": 25242.687744140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9848962406251803,
    "avg_bits_err_output": 0.011073120312590145,
    "avg_bits_err_improve": 0.9738231203125902,
    "time": 3801.671142578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(+ (/ (/ -1.0 PI) (* (sqrt (- 2.0 (* v (* v 6.0)))) (* t (fma v v -1.0)))) (* (* v v) (/ 5.0 (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (fma v v -1.0)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.4508996903074717,
    "avg_bits_err_output": 0.2903771573681458,
    "avg_bits_err_improve": 0.1605225329393259,
    "time": 22035.55419921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01164624062518029,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.0002712406251802902,
    "time": 6007.037109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- -1.0 (+ (* (* v v) -5.0) -1.0))) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5352647360209091,
    "avg_bits_err_output": 0.5542075845738269,
    "avg_bits_err_improve": -0.018942848552917835,
    "time": 9819.87939453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.771707114896289,
    "avg_bits_err_output": 1.7632071148962891,
    "avg_bits_err_improve": 0.008499999999999952,
    "time": 26391.4453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (- (exp (log1p (exp (/ (- (+ mu (+ Vef EDonor)) Ec) KbT)))) 1.0))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.03188787450397706,
    "avg_bits_err_output": 0.0322006870465432,
    "avg_bits_err_improve": -0.00031281254256614044,
    "time": 11364.541748046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(fma (* b 4.0) b (+ (pow (fma a a (* b b)) 2.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.18579697249404314,
    "avg_bits_err_output": 0.18576388968073188,
    "avg_bits_err_improve": 3.308281331126928e-05,
    "time": 20661.39208984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (if (!= (* (* (* b b) (fma a 3.0 -1.0)) -4.0) 0.0) (* (* b (/ (/ (* b (- (* a 6.0) 2.0)) (* b b)) (- (* a 6.0) 2.0))) (fma (* b b) (* (fma a 3.0 -1.0) -4.0) (fma (* a (fma a a a)) 4.0 (pow (fma b b (* a a)) 2.0)))) (fma 4.0 (fma (* b b) (- 1.0 (* a 3.0)) (* a (fma a a a))) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 37,
    "avg_bits_err_input": 0.18888333395870788,
    "avg_bits_err_output": 0.3370109270081031,
    "avg_bits_err_improve": -0.1481275930493952,
    "time": 20717.908203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18917557175431662,
    "avg_bits_err_output": 0.18917557175431662,
    "avg_bits_err_improve": 0,
    "time": 23810.71875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (if (!= (- 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x))))) 0.0) (/ (fma (/ x (sqrt (fma 4.0 (* p p) (* x x)))) (/ x (sqrt (fma 4.0 (* p p) (* x x)))) -1.0) (+ (/ x (sqrt (fma 4.0 (* p p) (* x x)))) -1.0)) (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 34,
    "avg_bits_err_input": 13.556949941172181,
    "avg_bits_err_output": 13.560822664119213,
    "avg_bits_err_improve": -0.0038727229470314484,
    "time": 19240.2744140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.4978094337969,
    "avg_bits_err_output": 0.032375,
    "avg_bits_err_improve": 40.4654344337969,
    "time": 8092.8486328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (+ (- (/ x (- x (tan x))) (/ (/ (/ (sin x) (- x (tan x))) 2.0) 2.0)) (- (/ (/ (/ (sin x) (- x (tan x))) 2.0) 2.0))) (/ (sin x) (* (- x (tan x)) 2.0)))",
    "output_parens": 24,
    "avg_bits_err_input": 31.936707880230397,
    "avg_bits_err_output": 31.998905303624735,
    "avg_bits_err_improve": -0.06219742339433765,
    "time": 25073.27294921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (- b_2) (sqrt (if (!= (* a c) 0.0) (/ (- (* b_2 b_2) (* a c)) (* a (/ (/ c c) a))) (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.3296966223253,
    "avg_bits_err_output": 34.43632332660259,
    "avg_bits_err_improve": -0.10662670427728926,
    "time": 14196.816650390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.0714052041139,
    "avg_bits_err_output": 34.070546478510856,
    "avg_bits_err_improve": 0.0008587256030452295,
    "time": 20483.305419921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (* (/ 1.0 x) (- 1.0 (cos x))) x)",
    "output_parens": 5,
    "avg_bits_err_input": 31.100323104351038,
    "avg_bits_err_output": 30.310255245757364,
    "avg_bits_err_improve": 0.7900678585936731,
    "time": 17119.031494140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.17957847590282,
    "avg_bits_err_output": 33.17957847590282,
    "avg_bits_err_improve": 0,
    "time": 18172.634033203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (- (+ (exp (- (log1p N) (log N))) 2.0) 2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.32475496090731,
    "avg_bits_err_output": 29.333662652179772,
    "avg_bits_err_improve": -0.00890769127246216,
    "time": 12454.697509765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (/ -1.0 x) (/ x (/ x (+ 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 14.248885183343658,
    "avg_bits_err_output": 0.07179248125036057,
    "avg_bits_err_improve": 14.177092702093297,
    "time": 11610.6298828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (cos (+ x eps)) 0.0) (+ (- (cos (+ x eps)) (cos x)) (/ (fma (- (cos x)) (cos (+ x eps)) (* (cos (+ x eps)) (cos x))) (cos (+ x eps)))) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 25,
    "avg_bits_err_input": 39.46031141867641,
    "avg_bits_err_output": 39.47600390974434,
    "avg_bits_err_improve": -0.015692491067930803,
    "time": 18079.657470703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- 1.0 (- (cbrt x) (+ -1.0 (cbrt (+ x 1.0)))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.84055146491137,
    "avg_bits_err_output": 29.521231198887037,
    "avg_bits_err_improve": 0.3193202660243344,
    "time": 13196.689697265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ 0.5 (sin x)) (/ (- 0.5 (cos x)) (sin x)))",
    "output_parens": 7,
    "avg_bits_err_input": 30.386027519795867,
    "avg_bits_err_output": 30.43028558664012,
    "avg_bits_err_improve": -0.04425806684425382,
    "time": 23160.359130859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* c (* a 4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.196290081002864,
    "avg_bits_err_output": 34.19223999182593,
    "avg_bits_err_improve": 0.004050089176935501,
    "time": 20282.78955078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 34.39471082197148,
    "avg_bits_err_output": 34.39017948855141,
    "avg_bits_err_improve": 0.004531333420068506,
    "time": 26685.635986328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.22634751687551,
    "avg_bits_err_output": 0.8649692576045801,
    "avg_bits_err_improve": 60.36137825927093,
    "time": 25341.5087890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log1p n) (log n)) n)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 63.00267498396311,
    "avg_bits_err_output": 44.22041200741528,
    "avg_bits_err_improve": 18.782262976547834,
    "time": 12291.6591796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (/ (+ eps eps) (- -1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.54819709755006,
    "avg_bits_err_output": 0.018625,
    "avg_bits_err_improve": 58.52957209755006,
    "time": 19484.692138671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (- 1.0 (/ 1.0 (/ (tan x) x))) x)",
    "output_parens": 5,
    "avg_bits_err_input": 59.84548669582391,
    "avg_bits_err_output": 59.84458812845568,
    "avg_bits_err_improve": 0.0008985673682246897,
    "time": 28277.84228515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ a b))) (expm1 (* eps a))) (/ eps (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.232625251042634,
    "avg_bits_err_output": 29.03137726663699,
    "avg_bits_err_improve": 31.201247984405644,
    "time": 25250.18212890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.86640520061961,
    "avg_bits_err_output": 0.37344812031259017,
    "avg_bits_err_improve": 40.49295708030702,
    "time": 3825.89208984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.54124921015561,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.54074921015561,
    "time": 2667.048828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.52050738731715,
    "avg_bits_err_output": 0.01785342332290452,
    "avg_bits_err_improve": 29.502653963994245,
    "time": 3231.272216796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (exp x) 0.0) (/ (+ (* (exp x) (- 2.0 (+ (exp (- x)) (exp x)))) (fma (- (exp x)) (exp x) (* (exp x) (exp x)))) (exp x)) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 29.214461849268176,
    "avg_bits_err_output": 28.651445346585962,
    "avg_bits_err_improve": 0.5630165026822134,
    "time": 18212.75,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ (/ (/ 2.0 (+ x 1.0)) (/ 2.0 x)) x) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 9.843690680938964,
    "avg_bits_err_output": 9.849777310921157,
    "avg_bits_err_improve": -0.0060866299821924486,
    "time": 34984.717529296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.7119505772127,
    "avg_bits_err_output": 36.7119505772127,
    "avg_bits_err_improve": 0,
    "time": 17257.3125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (!= (sqrt (+ x 1.0)) 0.0) (/ (+ (* (sqrt (+ x 1.0)) (sqrt (+ x 1.0))) (* (sqrt (+ x 1.0)) (- (sqrt x)))) (sqrt (+ x 1.0))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 22,
    "avg_bits_err_input": 30.01322397282652,
    "avg_bits_err_output": 29.816710455984545,
    "avg_bits_err_improve": 0.19651351684197493,
    "time": 15342.832275390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.02781205846847,
    "avg_bits_err_output": 37.02781205846847,
    "avg_bits_err_improve": 0,
    "time": 18500.397216796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(+ (/ -1.0 (sqrt (+ 1.0 x))) (if (!= (+ -1.0 (/ 1.0 (sqrt x))) 0.0) (/ (+ -1.0 (/ 1.0 (sqrt x))) (* (sqrt x) (+ -1.0 (/ 1.0 (sqrt x))))) (/ 1.0 (sqrt x))))",
    "output_parens": 20,
    "avg_bits_err_input": 19.67262804726614,
    "avg_bits_err_output": 19.687464801255807,
    "avg_bits_err_improve": -0.014836753989666107,
    "time": 12262.487548828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.925742312787628,
    "avg_bits_err_output": 14.925742312787628,
    "avg_bits_err_improve": 0,
    "time": 2876.22607421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (exp (log1p (log (+ (exp a) (exp b))))) 0.0) (/ (if (!= (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 1.0)) 0.0) (/ 1.0 (/ 1.0 (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 1.0)))) (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 1.0))) (- (+ (log (+ (exp a) (exp b))) 2.0) 1.0)) (log (+ (exp a) (exp b))))",
    "output_parens": 53,
    "avg_bits_err_input": 29.887854101821585,
    "avg_bits_err_output": 29.895910852706123,
    "avg_bits_err_improve": -0.008056750884538388,
    "time": 35470.153076171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (* m (* (- 1.0 m) (- 1.0 m))) v) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07366484475338013,
    "avg_bits_err_output": 0.0753629650659703,
    "avg_bits_err_improve": -0.0016981203125901734,
    "time": 16064.14208984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.52721110657995,
    "avg_bits_err_output": 0.3022479328161958,
    "avg_bits_err_improve": 16.224963173763754,
    "time": 11084.363037109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (/ 1.0 (* PI angle))) (* PI (/ angle 180.0))))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 19.863074373178627,
    "avg_bits_err_output": 19.877901449834543,
    "avg_bits_err_improve": -0.01482707665591576,
    "time": 27208.628662109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.767193257253773,
    "avg_bits_err_output": 31.767193257253773,
    "avg_bits_err_improve": 0,
    "time": 34433.108154296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* (/ angle 180.0) PI) 0.0) (/ 1.0 (/ 1.0 (* (/ angle 180.0) PI))) (* (/ angle 180.0) PI)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 19.959423476632974,
    "avg_bits_err_output": 19.98685227944119,
    "avg_bits_err_improve": -0.0274288028082168,
    "time": 28004.380615234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (+ (/ (fma (- m) m (* m m)) v) (/ (- m (* m m)) v)) 1.0) m)",
    "output_parens": 10,
    "avg_bits_err_input": 0.18050055538953297,
    "avg_bits_err_output": 0.1773330741391724,
    "avg_bits_err_improve": 0.0031674812503605654,
    "time": 16039.7451171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32558722911195537,
    "avg_bits_err_output": 0.32218475922053535,
    "avg_bits_err_improve": 0.0034024698914200124,
    "time": 16738.56640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13684436093777044,
    "avg_bits_err_output": 0.13684436093777044,
    "avg_bits_err_improve": 0,
    "time": 17537.174560546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.198816294993406,
    "avg_bits_err_output": 17.193047204826886,
    "avg_bits_err_improve": 0.005769090166520385,
    "time": 32310.49951171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* b (/ -0.25 a)) 0.0) (/ (* (* b (/ -0.25 a)) (if (!= (* b (/ -0.25 a)) 0.0) (/ (fma (* b (/ -0.25 a)) (* b (/ -0.25 a)) (/ (* (+ (sqrt (fma a (* -4.0 c) (* b b))) (fma (- (sqrt (fma b b (* a (* -4.0 c)))) b) 2.0 (sqrt (fma a (* -4.0 c) (* b b))))) (* b (/ -0.25 a))) (* a 8.0))) (* b (/ -0.25 a))) (/ (+ (/ (+ (sqrt (fma a (* -4.0 c) (* b b))) (fma (- (sqrt (fma a (* -4.0 c) (* b b))) b) 2.0 (sqrt (fma a (* -4.0 c) (* b b))))) 8.0) (* b -0.25)) a))) (* b (/ -0.25 a))) (/ (+ (sqrt (fma -4.0 (* a c) (* b b))) (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))))) (* a 8.0)))",
    "output_parens": 79,
    "avg_bits_err_input": 52.18668749439654,
    "avg_bits_err_output": 51.1834048936182,
    "avg_bits_err_improve": 1.0032826007783342,
    "time": 34870.7490234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (fma (sqrt (if (!= (* b b) 0.0) (/ (+ (if (!= (* b (* b (* b b))) 0.0) (/ 1.0 (/ 1.0 (* b (* b (* b b))))) (* b (* b (* b b)))) (* a (* (* -4.0 c) (* b b)))) (* b b)) (fma a (* -4.0 c) (* b b)))) (sqrt (fma -4.0 (* a c) (* b b))) (- (* b b))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 54,
    "avg_bits_err_input": 28.44517071933788,
    "avg_bits_err_output": 27.781383555855395,
    "avg_bits_err_improve": 0.6637871634824855,
    "time": 32947.03857421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (- 0.0 (* b -2.0)) (* a 4.0)) 0.0) (* (/ (- 0.0 (* b -2.0)) (* a 4.0)) (* (* a (/ 1.0 a)) (fma b (/ -1.0 b) (* (sqrt (fma b b (* c (* a -4.0)))) (/ 1.0 b))))) (* 0.5 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a)))",
    "output_parens": 29,
    "avg_bits_err_input": 43.67076178833966,
    "avg_bits_err_output": 42.11849907410548,
    "avg_bits_err_improve": 1.5522627142341818,
    "time": 29162.478271484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.19223999182593,
    "avg_bits_err_output": 34.19223999182593,
    "avg_bits_err_improve": 0,
    "time": 18324.169677734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (log1p (if (!= (expm1 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) 0.0) (/ 1.0 (/ 1.0 (expm1 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))))) (expm1 (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.8229353861021843,
    "avg_bits_err_output": 0.8318101243731386,
    "avg_bits_err_improve": -0.008874738270954308,
    "time": 23833.041259765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (- (/ (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))) (+ 1.0 (/ -2.0 (- -1.0 (exp (* -2.0 x)))))) (/ 1.0 (+ 1.0 (/ -2.0 (- -1.0 (exp (* -2.0 x))))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 33,
    "avg_bits_err_input": 29.257231818172045,
    "avg_bits_err_output": 29.253573772182968,
    "avg_bits_err_improve": 0.003658045989077152,
    "time": 13610.776611328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (* (+ (exp x) (exp x)) (/ (exp x) (* (+ (exp (- x)) (exp x)) 2.0)))) (- (+ (exp x) (exp (- x)))))",
    "output_parens": 28,
    "avg_bits_err_input": 58.08868462277677,
    "avg_bits_err_output": 58.116171015765374,
    "avg_bits_err_improve": -0.027486392988606667,
    "time": 14682.68798828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.7514954079555,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 57.742370407955505,
    "time": 12781.05224609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007344360937770433,
    "avg_bits_err_output": 0.007344360937770433,
    "avg_bits_err_improve": 0,
    "time": 2136.522705078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.241125,
    "avg_bits_err_output": 32.241125,
    "avg_bits_err_improve": 0,
    "time": 5330.732666015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (exp (log1p (log (/ (- -1.0 x) (+ x -1.0))))) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 58.54673702084727,
    "avg_bits_err_output": 58.57203583224284,
    "avg_bits_err_improve": -0.02529881139557233,
    "time": 18197.934326171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.04369812031259015,
    "avg_bits_err_output": 0.043875,
    "avg_bits_err_improve": -0.0001768796874098491,
    "time": 3955.574462890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* (* eh (cos t)) (sin (atan (/ eh (* ew (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.125375,
    "avg_bits_err_output": 0.124625,
    "avg_bits_err_improve": 0.0007499999999999868,
    "time": 23785.420166015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12607312031259016,
    "avg_bits_err_output": 0.12607312031259016,
    "avg_bits_err_improve": 0,
    "time": 25845.79296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.01120546324586,
    "avg_bits_err_output": 3.5470393481337132,
    "avg_bits_err_improve": 35.46416611511214,
    "time": 25988.8603515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.543707163975762,
    "avg_bits_err_output": 0.011594360937770436,
    "avg_bits_err_improve": 14.532112803037991,
    "time": 8066.144775390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (fma (sin phi1) (- (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))) (cos delta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.14608197728352681,
    "avg_bits_err_output": 0.14212947361004347,
    "avg_bits_err_improve": 0.0039525036734833485,
    "time": 32751.460693359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(fma (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a) (/ (+ b b) (* a -6.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 52.19193956543452,
    "avg_bits_err_output": 50.55309924991312,
    "avg_bits_err_improve": 1.6388403155213993,
    "time": 27372.533935546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (+ (/ (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b))) (+ b (sqrt (fma a (* c -3.0) (* b b))))) (/ (fma (- (sqrt (fma a (* c -3.0) (* b b)))) (sqrt (fma a (* c -3.0) (* b b))) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))))) (- (- b) (sqrt (fma a (* c -3.0) (* b b)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 59,
    "avg_bits_err_input": 28.628214395472614,
    "avg_bits_err_output": 28.084380502955774,
    "avg_bits_err_improve": 0.5438338925168402,
    "time": 29412.586669921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= b 0.0) (/ (fma b (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) b) (- (sqrt (fma c (* a -3.0) (* b b))) b)) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 43.76212072528842,
    "avg_bits_err_output": 42.643981714375606,
    "avg_bits_err_improve": 1.118139010912813,
    "time": 28713.265869140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.24197516158707,
    "avg_bits_err_output": 34.24197516158707,
    "avg_bits_err_improve": 0,
    "time": 21231.080810546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (sin phi1) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.380679768160723,
    "avg_bits_err_output": 13.382218196726374,
    "avg_bits_err_improve": -0.0015384285656505625,
    "time": 29848.638671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 0.5306852920160327,
    "avg_bits_err_improve": 27.932151776412265,
    "time": 20319.650634765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 5600.74169921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) 0.0) (/ (if (!= (/ 1.0 (* (+ x -1.0) (+ x -1.0))) 0.0) (/ (fma (/ -1.0 (+ x -1.0)) (/ (/ -1.0 (+ x -1.0)) (* (+ 1.0 x) (+ 1.0 x))) (- (/ 1.0 (* (* (+ x -1.0) (+ x -1.0)) (* (+ x -1.0) (+ x -1.0)))))) (/ 1.0 (* (+ x -1.0) (+ x -1.0)))) (+ (/ 1.0 (* (+ 1.0 x) (+ 1.0 x))) (/ (/ -1.0 (+ x -1.0)) (+ x -1.0)))) (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0)))) (+ (/ 1.0 (+ 1.0 x)) (/ -1.0 (+ x -1.0))))",
    "output_parens": 56,
    "avg_bits_err_input": 13.97788253504498,
    "avg_bits_err_output": 14.797105339267262,
    "avg_bits_err_improve": -0.8192228042222816,
    "time": 21574.32275390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 2e+146) (/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C) (- A)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C))))) 0.0)",
    "output_parens": 45,
    "avg_bits_err_input": 52.02378954338342,
    "avg_bits_err_output": 50.961505007351555,
    "avg_bits_err_improve": 1.0622845360318678,
    "time": 40720.009521484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.71015275926808,
    "avg_bits_err_output": 29.71015275926808,
    "avg_bits_err_improve": 0,
    "time": 23930.677978515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (* (* 2.0 F) (if (!= C 0.0) (/ (fma C C (* C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) C) (+ (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 31,
    "avg_bits_err_input": 52.740710839481196,
    "avg_bits_err_output": 52.85936291526946,
    "avg_bits_err_improve": -0.11865207578826187,
    "time": 36718.482666015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.789346630896121,
    "avg_bits_err_output": 15.789346630896121,
    "avg_bits_err_improve": 0,
    "time": 1959.827880859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (* (- g) (- (sqrt (fma g g (- (* h h)))) g)) (- g)) (- (sqrt (fma g g (- (* h h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 35.98163594674697,
    "avg_bits_err_output": 35.901557896418645,
    "avg_bits_err_improve": 0.08007805032832493,
    "time": 11402.49560546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9887885503953355,
    "avg_bits_err_output": 0.9739836468769834,
    "avg_bits_err_improve": 0.014804903518352175,
    "time": 5911.89599609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.684625,
    "avg_bits_err_output": 0.684625,
    "avg_bits_err_improve": 0,
    "time": 4659.281005859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (/ (* a2 (/ a1 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-250) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ (/ a2 b1) b2) a1) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+291) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.217747438681487,
    "avg_bits_err_output": 3.183376473569513,
    "avg_bits_err_improve": 8.034370965111973,
    "time": 9463.399169921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.471054483806003,
    "avg_bits_err_output": 0.40075,
    "avg_bits_err_improve": 0.07030448380600302,
    "time": 12568.541015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (+ x (if (!= (hypot 1.0 x) 0.0) (/ 1.0 (- (/ 0.0 (- (/ 1.0 (hypot 1.0 x)))) (+ (- (/ -0.5 (hypot 1.0 x))) (if (!= (/ 2.5 (hypot 1.0 x)) 0.0) (* (/ 2.5 (hypot 1.0 x)) (- -0.6 (/ 0.0 (hypot 1.0 x)))) (/ -1.5 (hypot 1.0 x)))))) (hypot 1.0 x))))",
    "output_parens": 28,
    "avg_bits_err_input": 53.0760533601966,
    "avg_bits_err_output": 44.89121574919992,
    "avg_bits_err_improve": 8.18483761099668,
    "time": 13100.998291015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.739294068766958,
    "avg_bits_err_output": 5.739294068766958,
    "avg_bits_err_improve": 0,
    "time": 16518.880615234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (expm1 (log1p (/ (- 1.0 x) (- x -1.0)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 0.0023750000000000004,
    "time": 8156.153564453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1193.92626953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* w r) (* (/ (* w r) (- 1.0 v)) (- 0.375 (* v 0.25)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.425687634112146,
    "avg_bits_err_output": 0.31597520508707116,
    "avg_bits_err_improve": 12.109712429025075,
    "time": 20782.243408203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.51500260748199,
    "avg_bits_err_output": 0.2766625561692596,
    "avg_bits_err_improve": 0.2383400513127304,
    "time": 63152.74560546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(if (<= t1 -6.6e-267) (/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u)) (if (<= t1 6.6e-270) (* (- t1) (/ (/ v (+ t1 u)) (+ t1 u))) (/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u))))",
    "output_parens": 22,
    "avg_bits_err_input": 18.304213894702073,
    "avg_bits_err_output": 1.5225156067112686,
    "avg_bits_err_improve": 16.781698287990803,
    "time": 9147.62646484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.26071275847734965,
    "avg_bits_err_output": 0.18391484475338007,
    "avg_bits_err_improve": 0.07679791372396957,
    "time": 6915.726806640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0021009193652572005,
    "avg_bits_err_output": 0.0021009193652572005,
    "avg_bits_err_improve": 0,
    "time": 2787.13427734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (* PI (- (/ 0.5 a) (/ 0.5 b))) (- b a)) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 13.757174470309106,
    "avg_bits_err_output": 0.27595620470039034,
    "avg_bits_err_improve": 13.481218265608716,
    "time": 16595.9443359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 30.03112156650771,
    "avg_bits_err_output": 25.229888651864368,
    "avg_bits_err_improve": 4.801232914643343,
    "time": 16113.618896484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0,
    "time": 3968.81982421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.015625,
    "avg_bits_err_improve": 0,
    "time": 10114.375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (+ 1.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0)))) (+ 4.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.0095,
    "avg_bits_err_output": 0.053625,
    "avg_bits_err_improve": -0.044125,
    "time": 10635.35986328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3248.8056640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2733.18896484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 3223.434326171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.8371841634018695,
    "avg_bits_err_output": 0.247375,
    "avg_bits_err_improve": 7.58980916340187,
    "time": 18887.342041015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.484800959171523,
    "avg_bits_err_output": 7.484800959171523,
    "avg_bits_err_improve": 0,
    "time": 15305.2001953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (+ (pow (+ x eps) 2.0) (pow x 2.0)) 0.0) (* (+ (pow (+ x eps) 2.0) (pow x 2.0)) (+ (fma (/ (pow x 2.0) (- (- (pow (+ x eps) 2.0)) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))))) (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) (+ (pow (+ x eps) 2.0) (pow x 2.0))))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 52,
    "avg_bits_err_input": 16.244735096869938,
    "avg_bits_err_output": 16.24811215054444,
    "avg_bits_err_improve": -0.0033770536745016955,
    "time": 28442.610595703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (log (+ 1.0 (expm1 (expm1 (cos x)))))) (- (expm1 (* 10.0 (* x x))) -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 3.5386042855481405,
    "avg_bits_err_output": 3.5407728289225835,
    "avg_bits_err_improve": -0.002168543374442944,
    "time": 18684.328857421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -0.001) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (- 0.0 (/ x (+ x (/ 1.0 x)))) (- x)) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (- 0.0 (/ x (+ x (/ 1.0 x)))) (- x)) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 45,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": 15.05922662573442,
    "time": 6082.718017578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.06648705772956,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.06648705772956,
    "time": 5583.863525390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.12558211302138,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.124832113021384,
    "time": 4691.723388671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.24625,
    "avg_bits_err_improve": 63.75375,
    "time": 26694.21435546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325561318282,
    "avg_bits_err_output": 0.38925,
    "avg_bits_err_improve": 61.45400561318282,
    "time": 7234.2421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 34.39471082197148,
    "avg_bits_err_output": 34.39017948855141,
    "avg_bits_err_improve": 0.004531333420068506,
    "time": 27051.77734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.19223999182593,
    "avg_bits_err_output": 34.19223999182593,
    "avg_bits_err_improve": 0,
    "time": 21515.652587890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2136.160888671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.9475805527553,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 39.9349555527553,
    "time": 9376.1298828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.49962911266229,
    "avg_bits_err_output": 20.501046593912648,
    "avg_bits_err_improve": -0.0014174812503569,
    "time": 5348.857421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.672973892985605,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.672973892985605,
    "time": 8760.28662109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.03725,
    "time": 6047.108154296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.024594360937770437,
    "avg_bits_err_output": 0.012875,
    "avg_bits_err_improve": 0.011719360937770438,
    "time": 3511.446044921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016875,
    "avg_bits_err_output": 0.015875,
    "avg_bits_err_improve": 0.0010000000000000009,
    "time": 3060.337890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.001,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.001,
    "time": 1404.565673828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ b (+ d a)) (+ c e))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40579285781763874,
    "avg_bits_err_output": 0.246125,
    "avg_bits_err_improve": 0.15966785781763873,
    "time": 4530.064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (if (!= (- (/ 1.0 (- 1.0 (cos x))) -1.0) 0.0) (/ (- (* (exp (log1p (/ 1.0 (- 1.0 (cos x))))) (exp (log1p (/ 1.0 (- 1.0 (cos x)))))) (exp (log1p (/ 1.0 (- 1.0 (cos x)))))) (- (/ 1.0 (- 1.0 (cos x))) -1.0)) (/ 1.0 (- 1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 38,
    "avg_bits_err_input": 30.059580929313302,
    "avg_bits_err_output": 30.059580639198366,
    "avg_bits_err_improve": 2.901149365186484e-07,
    "time": 29453.86474609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(if (!= (+ x (sqrt (fma x x (- eps)))) 0.0) (* (/ (fma (sqrt (- (* x x) eps)) (/ (sqrt (- (* x x) eps)) (+ x (sqrt (- (* x x) eps)))) (* x (/ x (- (- x) (sqrt (- (* x x) eps)))))) -2.0) 2.0) (- x (sqrt (fma x x (- eps)))))",
    "output_parens": 31,
    "avg_bits_err_input": 23.885156494912707,
    "avg_bits_err_output": 23.88614933105311,
    "avg_bits_err_improve": -0.0009928361404050179,
    "time": 12525.65478515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(* (- x (sin x)) (- (- (/ 1.0 (tan x)) -1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 30.292814726161268,
    "avg_bits_err_output": 30.32498893793434,
    "avg_bits_err_improve": -0.03217421177307145,
    "time": 29511.1396484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006415241011860921,
    "avg_bits_err_output": 0.006415241011860921,
    "avg_bits_err_improve": 0,
    "time": 2242.78076171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -7.6e-44) (if (!= (/ 100.0 (/ i n)) 0.0) (fma (/ 10000.0 (/ i n)) (/ (pow (+ 1.0 (/ i n)) n) 100.0) (/ -100.0 (/ i n))) (* (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ 100.0 (/ i n)))) 0.0)",
    "output_parens": 22,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 45.23532851946834,
    "avg_bits_err_improve": 2.4627761809367428,
    "time": 25472.4736328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (/ (* c a) (+ (* d d) (* c c))) (* b (/ d (+ (* d d) (* c c)))))",
    "output_parens": 11,
    "avg_bits_err_input": 26.18973041289681,
    "avg_bits_err_output": 24.544028287721552,
    "avg_bits_err_improve": 1.6457021251752586,
    "time": 13643.353515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (if (!= (/ d (fma d d (* c c))) 0.0) (/ 1.0 (/ 1.0 (/ d (fma d d (* c c))))) (/ d (fma d d (* c c))))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.389734815961095,
    "avg_bits_err_output": 23.347310588156343,
    "avg_bits_err_improve": 3.0424242278047515,
    "time": 11157.826904296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03575,
    "avg_bits_err_output": 0.01993080161791619,
    "avg_bits_err_improve": 0.01581919838208381,
    "time": 4232.765869140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (/ (+ (log (+ 1.0 (expm1 (* (- (fma ux maxCos 1.0) ux) (- (fma ux maxCos 1.0) ux))))) (fma (- (fma ux maxCos 1.0) ux) (- (fma ux maxCos 1.0) ux) -2.0)) -2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 13.63824748318509,
    "avg_bits_err_output": 12.18733329607648,
    "avg_bits_err_improve": 1.4509141871086104,
    "time": 27845.29443359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- ux (+ (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (* ux ux))) (- (- ux)))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.67436470532853,
    "avg_bits_err_output": 0.31572248959041743,
    "avg_bits_err_improve": 13.358642215738113,
    "time": 24648.79638671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma ux (* zi (- maxCos (* ux maxCos))) (* (sqrt (- 1.0 (* (* maxCos maxCos) (* ux (* ux (* (- 1.0 ux) (- 1.0 ux))))))) (* (sin (* PI (* uy 2.0))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.34068761311264495,
    "avg_bits_err_output": 0.32861817999493487,
    "avg_bits_err_improve": 0.012069433117710082,
    "time": 45518.855224609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.1992922197419501,
    "avg_bits_err_output": 0.19941721974195012,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 24880.21875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ (/ u1 (- 1.0 u1)) 4.0) (if (!= (/ (/ u1 (- 1.0 u1)) 4.0) 0.0) (* (/ u1 (- 2.0 (+ u1 u1))) (/ (+ u1 (+ u1 u1)) (+ u1 u1))) (/ (+ u1 (* u1 0.5)) (- 2.0 (+ u1 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.543569304548471,
    "avg_bits_err_output": 0.5542963720881317,
    "avg_bits_err_improve": -0.010727067539660684,
    "time": 21528.95947265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (+ (/ (/ u1 (- 1.0 u1)) 8.0) (+ (/ u1 (- 2.0 (+ u1 u1))) (/ (/ u1 (- 1.0 u1)) 8.0))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.3151450401005405,
    "avg_bits_err_output": 0.32583436174714425,
    "avg_bits_err_improve": -0.010689321646603744,
    "time": 23826.72119140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (/ (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s))))))) (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 70,
    "avg_bits_err_input": 0.32963404237189015,
    "avg_bits_err_output": 0.3045264312014842,
    "avg_bits_err_improve": 0.02510761117040594,
    "time": 44802.997802734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06665255881401566,
    "avg_bits_err_output": 0.06665255881401566,
    "avg_bits_err_improve": 0,
    "time": 8058.3251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) s) (* (+ (exp (/ (fabs x) (- s))) 1.0) (+ (exp (/ (fabs x) (- s))) 1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16605002735452667,
    "avg_bits_err_output": 0.1627053006161621,
    "avg_bits_err_improve": 0.003344726738364584,
    "time": 18154.870361328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.659869554704408,
    "avg_bits_err_output": 0.659869554704408,
    "avg_bits_err_improve": 0,
    "time": 18738.5166015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (+ (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.16408674862765432,
    "avg_bits_err_output": 0.17587086963903517,
    "avg_bits_err_improve": -0.01178412101138085,
    "time": 21974.9296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.51106599356844,
    "avg_bits_err_output": 2.51106599356844,
    "avg_bits_err_improve": 0,
    "time": 31741.8466796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* cosTheta_i (* (* (/ 0.5 v) (/ cosTheta_O (sinh (/ 1.0 v)))) (/ (exp (* sinTheta_O (/ sinTheta_i (- v)))) v)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4632674196993997,
    "avg_bits_err_output": 0.3483944706539158,
    "avg_bits_err_improve": 0.1148729490454839,
    "time": 23896.25732421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.11598676697993002,
    "avg_bits_err_output": 0.11652484078422388,
    "avg_bits_err_improve": -0.0005380738042938676,
    "time": 11038.189697265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (- 1.0 (* alpha alpha)) (* (log (* alpha alpha)) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))) (- PI))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4787302764106153,
    "avg_bits_err_output": 0.4806945987772828,
    "avg_bits_err_improve": -0.001964322366667548,
    "time": 23249.20068359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3375915294041014,
    "avg_bits_err_output": 1.245191406482967,
    "avg_bits_err_improve": 0.09240012292113442,
    "time": 22740.87255859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (log (/ 1.0 (+ 1.0 (* u -4.0)))) 0.0) (/ 1.0 (+ (+ (/ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) 2.0) -2.0)) (log (/ 1.0 (+ 1.0 (* u -4.0))))))",
    "output_parens": 18,
    "avg_bits_err_input": 12.364197765594707,
    "avg_bits_err_output": 12.391663122424614,
    "avg_bits_err_improve": -0.02746535682990725,
    "time": 22755.819580078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (* r (/ (* PI s) 0.16666666666666666))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1322888898725968,
    "avg_bits_err_output": 0.13728898111588717,
    "avg_bits_err_improve": -0.005000091243290372,
    "time": 23566.357177734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8834567869471265,
    "avg_bits_err_output": 0.7546306724437146,
    "avg_bits_err_improve": 0.12882611450341186,
    "time": 26465.458740234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(log1p (expm1 (/ 1.0 (fma (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta))) (+ 1.0 c)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.6912347107001349,
    "avg_bits_err_output": 0.47813284730424,
    "avg_bits_err_improve": 0.21310186339589487,
    "time": 22144.342041015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* 2.0 (* PI u2))) (expm1 (log1p (sqrt (- (log (- 1.0 u1)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.64238750509035,
    "avg_bits_err_output": 13.651605770853097,
    "avg_bits_err_improve": -0.009218265762747535,
    "time": 21584.61669921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(- (* (exp (log1p (sqrt (- (log (- 1.0 u1)))))) (cos (* 2.0 (* PI u2)))) (* (cos (* 2.0 (expm1 (log1p (if (!= (* PI u2) 0.0) (/ 1.0 (/ 1.0 (* PI u2))) (* PI u2)))))) 1.0))",
    "output_parens": 23,
    "avg_bits_err_input": 13.697039825434446,
    "avg_bits_err_output": 13.758276989479862,
    "avg_bits_err_improve": -0.06123716404541568,
    "time": 25071.610595703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= alpha 0.0) (* (* alpha (log (- 1.0 u0))) (/ 1.0 (/ -1.0 alpha))) (* alpha (* alpha (- (log (- 1.0 u0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.002637804717528,
    "avg_bits_err_output": 14.008055364775927,
    "avg_bits_err_improve": -0.005417560058399218,
    "time": 19493.71142578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.555530842915715,
    "avg_bits_err_output": 12.555220123337747,
    "avg_bits_err_improve": 0.00031071957796768856,
    "time": 18421.214111328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (* (/ 1.0 F) (tan (* PI l))) (* F (/ F F))) (* F (/ 1.0 F))))",
    "output_parens": 12,
    "avg_bits_err_input": 16.697940926346046,
    "avg_bits_err_output": 12.279658532799976,
    "avg_bits_err_improve": 4.41828239354607,
    "time": 19260.0390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21540127684030846,
    "avg_bits_err_output": 0.14791524101186093,
    "avg_bits_err_improve": 0.06748603582844753,
    "time": 16302.165771484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 14.169776114473212,
    "avg_bits_err_output": 10.884327565696346,
    "avg_bits_err_improve": 3.2854485487768663,
    "time": 20826.722900390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 0.0) (/ (- (* (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (* (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 162,
    "avg_bits_err_input": 61.24436236411623,
    "avg_bits_err_output": 61.27052367264319,
    "avg_bits_err_improve": -0.026161308526965854,
    "time": 89398.77465820312,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.24177929978166,
    "avg_bits_err_output": 34.726568468339565,
    "avg_bits_err_improve": 8.515210831442097,
    "time": 26580.359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.953121431623882,
    "avg_bits_err_output": 3.953121431623882,
    "avg_bits_err_improve": 0,
    "time": 27365.89453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.1960248549434027,
    "avg_bits_err_output": 1.2024284107805072,
    "avg_bits_err_improve": -0.006403555837104502,
    "time": 9931.43408203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 10.342948877249198,
    "avg_bits_err_improve": 0.0004999999999988347,
    "time": 17368.958251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= t 3.1e-208) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (sqrt (* U (* (- t (fma 2.0 (* l (/ l Om)) (* (- U U*) (* n (pow (/ l Om) 2.0))))) (* 2.0 n)))))",
    "output_parens": 28,
    "avg_bits_err_input": 34.87608845753049,
    "avg_bits_err_output": 32.07391031292555,
    "avg_bits_err_improve": 2.8021781446049445,
    "time": 32591.060791015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (pow (/ k t) 2.0) (* (pow t 3.0) (/ (tan k) l)))) (/ (sin k) l))",
    "output_parens": 11,
    "avg_bits_err_input": 47.433712742115276,
    "avg_bits_err_output": 36.331237303252074,
    "avg_bits_err_improve": 11.102475438863202,
    "time": 43131.150390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (tan k) l) (* (pow t 3.0) (* (/ (sin k) l) (+ 2.0 (pow (/ k t) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.875653945299014,
    "avg_bits_err_output": 26.911982944386228,
    "avg_bits_err_improve": 5.963671000912786,
    "time": 25652.673828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* (* a2 a2) (+ (cos th) (cos th))) (* a1 (* a1 (+ (cos th) (cos th))))) (+ (sqrt 2.0) (sqrt 2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5192069578349481,
    "avg_bits_err_output": 0.5191453031432107,
    "avg_bits_err_improve": 6.165469173735616e-05,
    "time": 23389.255126953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (if (!= (* PI n) 0.0) (- (/ (/ 16.0 (/ (/ 4.0 n) PI)) 4.0) 0.0) (* PI n))) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5133391902296772,
    "avg_bits_err_output": 0.5334286028438449,
    "avg_bits_err_improve": -0.020089412614167634,
    "time": 20268.321533203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp (- l))) J (* (exp (- l)) J)) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.536522096306445,
    "avg_bits_err_output": 17.538148611586237,
    "avg_bits_err_improve": -0.0016265152797920734,
    "time": 23728.66015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= m -5e-100) (* (cos (- (/ (if (!= (* K m) 0.0) (* K (* (+ m n) (* m (/ K (* K m))))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) (if (<= m 8e-138) (* (cos (- (/ (if (!= (* K m) 0.0) (/ (+ (* K (* K (* (/ m K) (+ m n)))) 0.0) m) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) (* (cos (- (/ (if (!= (* K m) 0.0) (* K (* (+ m n) (* m (/ K (* K m))))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))))",
    "output_parens": 80,
    "avg_bits_err_input": 15.244949337409441,
    "avg_bits_err_output": 4.838770020276759,
    "avg_bits_err_improve": 10.406179317132683,
    "time": 18334.902587890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.66936560156295,
    "avg_bits_err_output": 17.66936560156295,
    "avg_bits_err_improve": 0,
    "time": 24315.584228515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M 2.0) d)) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.942765264523583,
    "avg_bits_err_output": 10.738614372688035,
    "avg_bits_err_improve": 3.204150891835548,
    "time": 14889.5595703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1e+217) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) -2e-234) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 1e-115) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) 4e+255) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (/ A l) V)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 19.754043750378862,
    "avg_bits_err_output": 15.348080887598398,
    "avg_bits_err_improve": 4.405962862780465,
    "time": 15258.587646484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) INFINITY) (* (/ c0 (* 2.0 w)) (if (!= (* c0 (* (/ d D) (/ (/ d D) (* w h)))) 0.0) (+ (/ 1.0 (/ 1.0 (* c0 (* (/ d D) (/ (/ d D) (* w h)))))) (* (sqrt (* (fma c0 (* (/ d D) (/ (/ d D) (* w h))) M) (fma c0 (* (/ d D) (/ (/ d D) (* w h))) (- M)))) (/ (* c0 (* (/ d D) (/ (/ d D) (* w h)))) (* c0 (* (/ d D) (/ (/ d D) (* w h))))))) (if (!= (* (/ d D) (/ (* d c0) (* h (* D w)))) 0.0) (* (fma c0 (* (/ d D) (/ d (* h (* D w)))) (sqrt (* (fma (/ d D) (/ (* d c0) (* h (* D w))) M) (- (* (/ d D) (/ (* d c0) (* h (* D w)))) M)))) (/ c0 c0)) (fma c0 (* (/ d D) (/ d (* h (* D w)))) (sqrt (* (fma (/ d D) (/ (* d c0) (* h (* D w))) M) (- (* (/ d D) (/ (* d c0) (* h (* D w)))) M))))))) (/ (/ (* c0 (if (!= (sqrt (* (fma c0 (* d (/ (/ (/ d D) w) (* D h))) M) (- (* (* d d) (/ (/ (/ c0 w) D) (* D h))) M))) 0.0) 0.0 (fma c0 (* d (/ (/ (/ d D) w) (* D h))) (sqrt (* (fma c0 (* d (/ (/ (/ d D) w) (* D h))) M) (- (* (* d d) (/ (/ (/ c0 w) D) (* D h))) M)))))) w) 2.0))",
    "output_parens": 170,
    "avg_bits_err_input": 59.414281227251884,
    "avg_bits_err_output": 30.13270750847253,
    "avg_bits_err_improve": 29.281573718779352,
    "time": 51594.639404296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* D (/ M (+ d d))) 2.0) (+ l l)))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.216037983146116,
    "avg_bits_err_output": 25.352424900402497,
    "avg_bits_err_improve": 0.863613082743619,
    "time": 39686.576171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))",
    "output_parens": 5,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 15.391789417137355,
    "avg_bits_err_improve": 0,
    "time": 12049.19287109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9828202803030276,
    "avg_bits_err_output": 0.0125,
    "avg_bits_err_improve": 0.9703202803030276,
    "time": 3845.20556640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.4362961123149945,
    "avg_bits_err_output": 0.11218263246491175,
    "avg_bits_err_improve": 0.32411347985008276,
    "time": 17492.02880859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01322491020269024,
    "avg_bits_err_output": 0.01364624062518029,
    "avg_bits_err_improve": -0.00042133042249004916,
    "time": 5112.360595703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5586795959272463,
    "avg_bits_err_output": 0.5586795959272463,
    "avg_bits_err_improve": 0,
    "time": 11631.417724609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8344327472608766,
    "avg_bits_err_output": 1.8258596269482863,
    "avg_bits_err_improve": 0.008573120312590277,
    "time": 19450.517578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ EDonor (+ Vef mu)) Ec) KbT)))) (/ NaChar (- (exp (/ (- (+ Ev (+ Vef EAccept)) mu) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02622911122411479,
    "avg_bits_err_output": 0.02622911122411479,
    "avg_bits_err_improve": 0,
    "time": 7647.18115234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.17661109062806482,
    "avg_bits_err_output": 0.17558985000288457,
    "avg_bits_err_improve": 0.0010212406251802475,
    "time": 19311.076904296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1904976065326843,
    "avg_bits_err_output": 0.1904976065326843,
    "avg_bits_err_improve": 0,
    "time": 4013.041015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18888481622889675,
    "avg_bits_err_output": 0.18888481622889675,
    "avg_bits_err_improve": 0,
    "time": 17820.8671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(log (+ 1.0 (expm1 (sqrt (+ (* (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.5) 0.5)))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.998031364856104,
    "avg_bits_err_output": 13.008591621815205,
    "avg_bits_err_improve": -0.010560256959101011,
    "time": 14657.348388671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.94225197430117,
    "avg_bits_err_output": 0.04,
    "avg_bits_err_improve": 40.90225197430117,
    "time": 7295.8623046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (/ x (- (tan x) x)))",
    "output_parens": 8,
    "avg_bits_err_input": 31.00025058020758,
    "avg_bits_err_output": 30.94990562879783,
    "avg_bits_err_improve": 0.050344951409751815,
    "time": 23293.17529296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (+ b_2 b_2)) a)",
    "output_parens": 8,
    "avg_bits_err_input": 34.10190090268774,
    "avg_bits_err_output": 34.115254284923246,
    "avg_bits_err_improve": -0.013353382235507638,
    "time": 14744.460205078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.40190670582469,
    "avg_bits_err_output": 34.40190670582469,
    "avg_bits_err_improve": 0,
    "time": 20808.91455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(* (/ (- 1.0 (cos x)) x) (/ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 31.351370300103493,
    "avg_bits_err_output": 30.575988023000495,
    "avg_bits_err_improve": 0.7753822771029988,
    "time": 16227.680419921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.09710080445001,
    "avg_bits_err_output": 33.09710080445001,
    "avg_bits_err_improve": 0,
    "time": 16059.398681640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (if (!= (log1p N) 0.0) (/ 1.0 (/ 1.0 (log1p N))) (log1p N)) (log N))",
    "output_parens": 9,
    "avg_bits_err_input": 29.461923562613176,
    "avg_bits_err_output": 29.492562320240257,
    "avg_bits_err_improve": -0.030638757627080793,
    "time": 14891.114990234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(* (/ 1.0 x) (if (!= (+ 1.0 (/ x (+ x 1.0))) 0.0) (/ (fma (/ x (+ x 1.0)) (/ x (+ x 1.0)) -1.0) (+ 1.0 (/ x (+ x 1.0)))) (+ (/ x (+ x 1.0)) -1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 14.989250107322736,
    "avg_bits_err_output": 14.992612807215657,
    "avg_bits_err_improve": -0.0033626998929214835,
    "time": 15224.455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (- (cos (+ x eps)) (/ (- (cos x) (- 2.0 (cos x))) 2.0)) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 39.667621311749734,
    "avg_bits_err_output": 39.676670323195424,
    "avg_bits_err_improve": -0.009049011445689814,
    "time": 17079.8662109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (+ (- -1.0 (cbrt x)) (cbrt (+ 1.0 x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.80329868934751,
    "avg_bits_err_output": 29.50163538960708,
    "avg_bits_err_improve": 0.3016632997404294,
    "time": 11786.4453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(if (!= (/ (- 0.5 (* (cos x) 0.5)) (sin x)) 0.0) (/ 1.0 (/ (sin x) (- 1.0 (cos x)))) (/ (- 1.0 (cos x)) (sin x)))",
    "output_parens": 16,
    "avg_bits_err_input": 30.524368888568375,
    "avg_bits_err_output": 30.556993042852028,
    "avg_bits_err_improve": -0.03262415428365273,
    "time": 22343.859619140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (* (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c))) (* (* a 4.0) (/ c (* c (* a 4.0))))) (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c)))))) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 33.99866586007448,
    "avg_bits_err_output": 34.26743075583107,
    "avg_bits_err_improve": -0.2687648957565898,
    "time": 23109.81591796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.516884818183726,
    "avg_bits_err_output": 34.516884818183726,
    "avg_bits_err_improve": 0,
    "time": 26379.06201171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.999) (/ (if (!= (exp (log1p (log (- 1.0 x)))) 0.0) (/ (- (* (exp (log1p (log (- 1.0 x)))) (exp (log1p (log (- 1.0 x))))) (* (exp (log1p (log (- 1.0 x)))) 1.0)) (exp (log1p (log (- 1.0 x))))) (log (- 1.0 x))) (+ 1.0 (+ (log1p x) -1.0))) (+ (/ (+ 1.0 (log (- 1.0 x))) (* (log1p x) 2.0)) (if (!= (/ 1.0 (log1p x)) 0.0) (+ (/ (+ 1.0 (log (- 1.0 x))) (* (log1p x) 4.0)) (- (/ (+ 1.0 (log (- 1.0 x))) (* (log1p x) 4.0)) (/ 1.0 (log1p x)))) (/ (+ (* (log (- 1.0 x)) 0.5) -0.5) (log1p x)))))",
    "output_parens": 72,
    "avg_bits_err_input": 61.15650823780998,
    "avg_bits_err_output": 58.80792617476404,
    "avg_bits_err_improve": 2.3485820630459386,
    "time": 26275.181640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (log1p n) 0.0) (/ (+ (* (log1p n) (log1p n)) (* (log1p n) (- (+ (* n (log1p n)) -1.0) (* n (log n))))) (log1p n)) (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0)))",
    "output_parens": 23,
    "avg_bits_err_input": 63.00680280572232,
    "avg_bits_err_output": 0.6276981134048124,
    "avg_bits_err_improve": 62.37910469231751,
    "time": 16316.60595703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (+ 1.0 (expm1 (expm1 (log (/ (- 1.0 eps) (- eps -1.0))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.77462370524597,
    "avg_bits_err_output": 58.775671708047064,
    "avg_bits_err_improve": -0.0010480028010917408,
    "time": 21050.5654296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (+ -1.0 (/ 1.0 (/ x (tan x)))) (/ x (log1p (expm1 (/ x (tan x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 59.95306982695454,
    "avg_bits_err_output": 59.954664325493845,
    "avg_bits_err_improve": -0.0015944985393048228,
    "time": 29356.1982421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ a b))) (expm1 (* eps b))) (/ eps (expm1 (* eps a))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.128964569987595,
    "avg_bits_err_output": 29.54757109627706,
    "avg_bits_err_improve": 30.581393473710534,
    "time": 27289.711181640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.33835830818711,
    "avg_bits_err_output": 0.405,
    "avg_bits_err_improve": 40.93335830818711,
    "time": 6126.063232421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.77604677655998,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.77529677655998,
    "time": 3099.755126953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.492312971654627,
    "avg_bits_err_output": 0.024869335871256167,
    "avg_bits_err_improve": 29.467443635783372,
    "time": 3743.915283203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- 2.0 (exp (- x))) 0.0) (/ (+ (* (- (exp (- x)) 2.0) (if (!= (- 2.0 (exp (- x))) 0.0) (/ (* (- 2.0 (+ (exp (- x)) (exp x))) (- (exp (- x)) 2.0)) (- 2.0 (exp (- x)))) (+ (exp (- x)) (- (exp x) 2.0)))) (fma (- 2.0 (exp (- x))) (- (exp x)) (* (exp x) (- 2.0 (exp (- x)))))) (- 2.0 (exp (- x)))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 54,
    "avg_bits_err_input": 30.160152882582313,
    "avg_bits_err_output": 29.448596835656325,
    "avg_bits_err_improve": 0.7115560469259883,
    "time": 20669.30029296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.983138448054993,
    "avg_bits_err_output": 9.983138448054993,
    "avg_bits_err_improve": 0,
    "time": 46199.384033203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (if (!= (+ 1.0 (tan (+ x eps))) 0.0) (/ (* (+ 1.0 (tan (+ x eps))) (tan (+ x eps))) (+ 1.0 (tan (+ x eps)))) (tan (+ x eps))) (tan x))",
    "output_parens": 19,
    "avg_bits_err_input": 37.213770144703545,
    "avg_bits_err_output": 37.23715312448992,
    "avg_bits_err_improve": -0.023382979786376268,
    "time": 16694.8984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (if (!= (+ -1.0 (+ (sqrt (+ x 1.0)) (sqrt x))) 0.0) (/ (- (* (+ (sqrt (+ x 1.0)) -1.0) (+ (sqrt (+ x 1.0)) -1.0)) (* (sqrt x) (sqrt x))) (+ -1.0 (+ (sqrt (+ x 1.0)) (sqrt x)))) (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x)))) 1.0)",
    "output_parens": 30,
    "avg_bits_err_input": 30.254410173334666,
    "avg_bits_err_output": 29.49663509654255,
    "avg_bits_err_improve": 0.7577750767921145,
    "time": 13004.7265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.9918538104059,
    "avg_bits_err_output": 36.9918538104059,
    "avg_bits_err_improve": 0,
    "time": 16642.913818359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (+ (/ (sqrt (+ 1.0 x)) (sqrt x)) -1.0) (sqrt (+ 1.0 x)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.508638628069466,
    "avg_bits_err_output": 19.5119248080529,
    "avg_bits_err_improve": -0.0032861799834336125,
    "time": 14090.599609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.915952475671583,
    "avg_bits_err_output": 14.915952475671583,
    "avg_bits_err_improve": 0,
    "time": 12347.5859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.2586342510356,
    "avg_bits_err_output": 30.2586342510356,
    "avg_bits_err_improve": 0,
    "time": 39341.22021484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07949080507553279,
    "avg_bits_err_output": 0.07594832382517222,
    "avg_bits_err_improve": 0.0035424812503605657,
    "time": 9613.64990234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.385552720969105,
    "avg_bits_err_output": 0.3090003765672777,
    "avg_bits_err_improve": 16.07655234440183,
    "time": 12448.380859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (if (!= (/ 0.011111111111111112 (/ (/ 2.0 angle) PI)) 0.0) (/ 0.0001234567901234568 (/ (/ 0.022222222222222223 PI) angle)) (/ 0.011111111111111112 (/ (/ 2.0 angle) PI))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 20.039304238767144,
    "avg_bits_err_output": 20.04961265951197,
    "avg_bits_err_improve": -0.010308420744824076,
    "time": 26275.01708984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* angle (/ PI 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) 0.0) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.154669206096404,
    "avg_bits_err_output": 31.14154361519388,
    "avg_bits_err_improve": 0.01312559090252563,
    "time": 28887.13818359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (/ (* angle PI) 180.0))) 2.0) (pow (* b (cos (if (!= (* (/ angle 180.0) PI) 0.0) (* (/ (/ angle 180.0) (* angle (/ PI 180.0))) (* (/ angle 180.0) (* PI PI))) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 20.483593051521456,
    "avg_bits_err_output": 20.479678174193207,
    "avg_bits_err_improve": 0.003914877328249133,
    "time": 29789.288330078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17922236042698106,
    "avg_bits_err_output": 0.17499213598105767,
    "avg_bits_err_improve": 0.004230224445923386,
    "time": 15243.454833984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.30791094300227856,
    "avg_bits_err_output": 0.31057759268006224,
    "avg_bits_err_improve": -0.0026666496777836834,
    "time": 15383.794189453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* e (* 2.0 (/ (sin v) (- 2.0 (* (cos v) (* e -2.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13743872187554088,
    "avg_bits_err_output": 0.1382924812503606,
    "avg_bits_err_improve": -0.0008537593748197125,
    "time": 16084.56884765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.21888736549553,
    "avg_bits_err_output": 17.216134354192377,
    "avg_bits_err_improve": 0.0027530113031524195,
    "time": 30347.987060546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (if (!= (* b b) 0.0) (/ (fma (* (sqrt (fma a (* c -4.0) (* b b))) (- (sqrt (fma a (* c -4.0) (* b b))))) (* b b) (* (* b b) (* b b))) (* b b)) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 53,
    "avg_bits_err_input": 52.45237299224613,
    "avg_bits_err_output": 51.453597833088025,
    "avg_bits_err_improve": 0.9987751591581073,
    "time": 29529.59375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma (* a c) -4.0 (* b b)))) 0.0) (/ (if (!= (- (* (sqrt (fma (* a c) -4.0 (* b b))) (sqrt (fma (* a c) -4.0 (* b b)))) (* b (- b))) 0.0) (* (fma b b (* (sqrt (fma (* a c) -4.0 (* b b))) (sqrt (fma (* a c) -4.0 (* b b))))) (/ (fma (sqrt (fma (* a c) -4.0 (* b b))) (sqrt (fma (* a c) -4.0 (* b b))) (- (* b b))) (- (* (sqrt (fma (* a c) -4.0 (* b b))) (sqrt (fma (* a c) -4.0 (* b b)))) (* b (- b))))) (fma (sqrt (fma (* a c) -4.0 (* b b))) (sqrt (fma (* a c) -4.0 (* b b))) (- (* b b)))) (+ b (sqrt (fma (* a c) -4.0 (* b b))))) (- (sqrt (fma (* a c) -4.0 (* b b))) b)) (* a 2.0))",
    "output_parens": 80,
    "avg_bits_err_input": 28.379383801467668,
    "avg_bits_err_output": 27.783183619403623,
    "avg_bits_err_improve": 0.5962001820640452,
    "time": 35057.001953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (if (!= (/ b (* a -8.0)) 0.0) (/ (if (!= (fma (/ (/ b a) -8.0) (/ (/ b a) -8.0) (* (sqrt (fma a (* c -4.0) (* b b))) (/ b (* 64.0 (* a a))))) 0.0) (* (fma (/ (/ b a) -8.0) (/ (/ b a) -8.0) (* (sqrt (fma a (* c -4.0) (* b b))) (/ b (* 64.0 (* a a))))) (/ (fma (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ b (* -64.0 a)) (* (/ (/ b a) -8.0) (/ (/ b a) -8.0))) (fma (/ (/ b a) -8.0) (/ (/ b a) -8.0) (* (sqrt (fma a (* c -4.0) (* b b))) (/ b (* 64.0 (* a a))))))) (fma (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ b (* -64.0 a)) (* (/ (/ b a) -8.0) (/ (/ b a) -8.0)))) (/ b (* a -8.0))) (/ (- b (sqrt (fma c (* a -4.0) (* b b)))) (* a -8.0))) (/ (+ (- (sqrt (fma a (* c -4.0) (* b b))) b) (* (- (sqrt (fma a (* c -4.0) (* b b))) b) 2.0)) (* a 8.0)))",
    "output_parens": 98,
    "avg_bits_err_input": 43.97590902782919,
    "avg_bits_err_output": 42.838844059851695,
    "avg_bits_err_improve": 1.1370649679774942,
    "time": 32236.042724609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.99914084391831,
    "avg_bits_err_output": 33.99914084391831,
    "avg_bits_err_improve": 0,
    "time": 18156.388671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (log1p (/ (- (- 1.0 (expm1 (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))) (exp (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))) -2.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.8633101713535926,
    "avg_bits_err_output": 0.8912029003569194,
    "avg_bits_err_improve": -0.027892729003326844,
    "time": 23004.127197265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.561451474339556,
    "avg_bits_err_output": 29.561451474339556,
    "avg_bits_err_improve": 0,
    "time": 6880.35986328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (* (/ (exp (- x)) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (- (exp (- x)))) 0.0) (/ (if (!= (* (/ (/ (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (* (exp (- x)) (exp (- x)))) 0.0) (fma (* (/ (/ (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (* (exp (- x)) (exp (- x)))) (* (/ (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))) (/ (- (* (/ (exp x) (+ (exp (- x)) (exp x))) (/ (exp x) (+ (exp (- x)) (exp x))))) (* (/ (/ (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (* (exp (- x)) (exp (- x)))))) (/ 1.0 (/ 1.0 (* (/ (/ (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (* (exp (- x)) (exp (- x))))))) (fma (exp (- x)) (* (exp (- x)) (/ (/ (/ (* (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x))))) (* (/ (exp (- x)) (+ (exp (- x)) (exp x))) (* (/ (exp (- x)) (+ (exp (- x)) (exp x))) (- (* (/ (exp x) (+ (exp (- x)) (exp x))) (/ (exp x) (+ (exp (- x)) (exp x))))))))) (* (/ (exp (- x)) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (- (exp (- x))))) (/ (fma (/ (exp (- x)) (+ (exp (- x)) (exp x))) (- (exp (- x))) (* (exp x) (/ (exp x) (+ (exp (- x)) (exp x))))) (+ (exp (- x)) (exp x))))",
    "output_parens": 280,
    "avg_bits_err_input": 58.20251103404985,
    "avg_bits_err_output": 58.223343060327,
    "avg_bits_err_improve": -0.020832026277147975,
    "time": 18701.57861328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.131545867547196,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.12417086754719,
    "time": 15198.441650390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009271240625180288,
    "avg_bits_err_output": 0.009271240625180288,
    "avg_bits_err_improve": 0,
    "time": 3186.60986328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.51375,
    "avg_bits_err_output": 31.51375,
    "avg_bits_err_improve": 0,
    "time": 6093.842529296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 0.015969360937770433,
    "avg_bits_err_improve": 58.75012693371234,
    "time": 15737.405029296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ (+ (sqrt (- 1.0 (* x x))) 0.5) x) (/ 1.0 (+ x x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.01075,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": -0.00037500000000000033,
    "time": 5416.069091796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh (tan t)) ew))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.129375,
    "avg_bits_err_output": 0.1297712406251803,
    "avg_bits_err_improve": -0.00039624062518031633,
    "time": 25407.73095703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos t) (cos (atan (* (- eh) (/ (tan t) ew)))))) (* eh (* (sin t) (sin (atan (* (- eh) (/ (tan t) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12587595881547559,
    "avg_bits_err_output": 0.12132312031259015,
    "avg_bits_err_improve": 0.004552838502885431,
    "time": 30805.6318359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.35066410203863,
    "avg_bits_err_output": 3.7905688609331434,
    "avg_bits_err_improve": 35.560095241105486,
    "time": 23730.746337890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.618058391079979,
    "avg_bits_err_output": 0.00975,
    "avg_bits_err_improve": 14.608308391079978,
    "time": 6104.462158203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (fma (sin phi1) (- (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))) (cos delta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15662077084698975,
    "avg_bits_err_output": 0.15519461267856613,
    "avg_bits_err_improve": 0.001426158168423619,
    "time": 36800.670166015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a)) 0.0) (/ (if (!= 0.0 0.0) 0.0 (* (* (/ 0.3333333333333333 a) (sqrt (fma a (* c -3.0) (* b b)))) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) 0.3333333333333333 (/ (+ b b) -6.0)) a))) (* (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a))) (/ (fma (sqrt (fma b b (* a (* c -3.0)))) 2.0 (* b -2.0)) (* a 6.0)))",
    "output_parens": 40,
    "avg_bits_err_input": 52.47411886526256,
    "avg_bits_err_output": 50.438253201586996,
    "avg_bits_err_improve": 2.0358656636755654,
    "time": 27373.4404296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (+ (/ (fma (- (sqrt (fma c (* a -3.0) (* b b)))) (sqrt (fma c (* a -3.0) (* b b))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) (- (- b) (sqrt (fma c (* a -3.0) (* b b))))) (* (- (sqrt (fma b b (* -3.0 (* a c)))) b) (/ (+ b (sqrt (fma c (* a -3.0) (* b b)))) (+ b (sqrt (fma c (* a -3.0) (* b b))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 59,
    "avg_bits_err_input": 28.58994764020808,
    "avg_bits_err_output": 28.003014897406967,
    "avg_bits_err_improve": 0.586932742801114,
    "time": 28244.675048828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (+ (fma (- b) b (* b b)) (if (!= (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (/ (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (/ 1.0 (sqrt (fma b b (* c (* a -3.0)))))) (sqrt (fma b b (* c (* a -3.0))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 70,
    "avg_bits_err_input": 44.01911326624868,
    "avg_bits_err_output": 42.89097515105339,
    "avg_bits_err_improve": 1.1281381151952914,
    "time": 32040.4697265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.031625337564016,
    "avg_bits_err_output": 34.031625337564016,
    "avg_bits_err_improve": 0,
    "time": 19591.49755859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.194486882436959,
    "avg_bits_err_output": 13.194486882436959,
    "avg_bits_err_improve": 0,
    "time": 31044.08447265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (if (!= (/ x (+ -2.0 (+ x x))) 0.0) (/ (- (* (/ x (+ -2.0 (+ x x))) (- (/ x (+ x 1.0)) (/ x (+ -2.0 (+ x x))))) (* (/ x (+ -2.0 (+ x x))) (/ x (+ -2.0 (+ x x))))) (/ x (+ -2.0 (+ x x)))) (- (/ x (+ x 1.0)) (/ (+ x x) (+ -2.0 (+ x x))))) (- (/ 1.0 (+ x -1.0))))",
    "output_parens": 38,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 25.65067218917456,
    "avg_bits_err_improve": 3.707458388700392,
    "time": 29663.083984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (- (/ x (+ x (+ x 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.05037399119763805,
    "avg_bits_err_improve": -0.038498991197638055,
    "time": 4723.404541015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (if (!= (/ 1.0 (+ -1.0 x)) 0.0) (/ (- (* (/ (- (/ (/ x (+ x -1.0)) (+ x -1.0)) (/ 1.0 (+ x -1.0))) (/ 1.0 (- 1.0 x))) (/ 1.0 (+ -1.0 x))) (/ 1.0 (* (+ -1.0 x) (+ -1.0 x)))) (/ 1.0 (+ -1.0 x))) (- 1.0 (/ (- -1.0 x) (- 1.0 x)))) (+ 1.0 x))",
    "output_parens": 31,
    "avg_bits_err_input": 14.85230374844709,
    "avg_bits_err_output": 12.92488002877231,
    "avg_bits_err_improve": 1.9274237196747794,
    "time": 18098.4658203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C) (- A)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C)))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.566082583251784,
    "avg_bits_err_output": 52.257525404956255,
    "avg_bits_err_improve": 0.30855717829552987,
    "time": 36764.92529296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 29.75221806948308,
    "avg_bits_err_output": 29.75171896608196,
    "avg_bits_err_improve": 0.0004991034011219142,
    "time": 25266.213134765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(- (/ (sqrt (* (* (+ (pow B 2.0) (* (* A C) -4.0)) F) (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (+ (pow B 2.0) (* (* A C) -4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.30050522129833,
    "avg_bits_err_output": 52.013923666255074,
    "avg_bits_err_improve": 0.2865815550432558,
    "time": 38142.43017578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.34486327965288,
    "avg_bits_err_output": 15.34486327965288,
    "avg_bits_err_improve": 0,
    "time": 1758.8154296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 35.23042539824691,
    "avg_bits_err_output": 35.222860040117595,
    "avg_bits_err_improve": 0.007565358129312472,
    "time": 18578.02294921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9899345875079336,
    "avg_bits_err_output": 0.9746274437510818,
    "avg_bits_err_improve": 0.015307143756851826,
    "time": 5370.051513671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7018656015629509,
    "avg_bits_err_output": 0.7018656015629509,
    "avg_bits_err_improve": 0,
    "time": 3141.553466796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (* b1 b2) -1e+268) (* (/ a1 b2) (/ a2 b1)) (if (<= (* b1 b2) -2e-200) (* (/ a1 (* b1 b2)) a2) (if (<= (* b1 b2) 5e-119) (/ (* a1 (/ a2 b2)) b1) (if (<= (* b1 b2) 2e+236) (* a1 (/ a2 (* b1 b2))) (/ (* a1 (/ a2 b2)) b1)))))",
    "output_parens": 27,
    "avg_bits_err_input": 11.147461439121788,
    "avg_bits_err_output": 5.31443186282512,
    "avg_bits_err_improve": 5.833029576296668,
    "time": 9866.796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(+ (* x y) (- (log1p (exp x)) (* x (+ y y))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.44698812628009865,
    "avg_bits_err_output": 0.4099364816370412,
    "avg_bits_err_improve": 0.037051644643057435,
    "time": 8809.376220703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- (hypot 1.0 x) x) 0.0) (/ (+ (* (hypot 1.0 x) (- (hypot 1.0 x) x)) (* x (- (hypot 1.0 x) x))) (- (hypot 1.0 x) x)) (+ x (hypot 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 53.36214296657906,
    "avg_bits_err_output": 45.395798344587064,
    "avg_bits_err_improve": 7.966344621991993,
    "time": 17402.3349609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.716441266604496,
    "avg_bits_err_output": 5.716753145067938,
    "avg_bits_err_improve": -0.00031187846344149506,
    "time": 18072.285888671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (/ x (- -2.0 (+ x x))) (/ (- 2.0 x) (- -2.0 (+ x x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.010875,
    "avg_bits_err_output": 0.015323120312590146,
    "avg_bits_err_improve": -0.004448120312590146,
    "time": 8266.1650390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1297.57666015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* w r) (fma (/ (* w r) (- 1.0 v)) (- 0.375 (* v 0.25)) (fma (/ (- v) 4.0) (/ (* w r) (- 1.0 v)) (* w (* (/ r (- 1.0 v)) (* v 0.25)))))) 4.5))",
    "output_parens": 24,
    "avg_bits_err_input": 13.010359042811723,
    "avg_bits_err_output": 0.6157286238626631,
    "avg_bits_err_improve": 12.39463041894906,
    "time": 23207.6279296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (* (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0)) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5076809803471464,
    "avg_bits_err_output": 0.2715935239960449,
    "avg_bits_err_improve": 0.23608745635110145,
    "time": 68201.63354492188,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.241386591681053,
    "avg_bits_err_output": 1.3519960487637437,
    "avg_bits_err_improve": 16.889390542917308,
    "time": 8235.1357421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2251156015629507,
    "avg_bits_err_output": 0.18457556406367184,
    "avg_bits_err_improve": 0.04054003749927887,
    "time": 7712.11865234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003948120312590144,
    "avg_bits_err_output": 0.003948120312590144,
    "avg_bits_err_improve": 0,
    "time": 2949.698974609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (* (/ (/ (- (/ 1.0 a) (/ 1.0 b)) (* a (/ -1.0 a))) (- b a)) (/ PI -2.0)) (+ b a))",
    "output_parens": 12,
    "avg_bits_err_input": 14.104115558514566,
    "avg_bits_err_output": 0.2944798890766526,
    "avg_bits_err_improve": 13.809635669437913,
    "time": 17432.139404296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (+ 1.0 (+ -1.0 (* x (- -1.0 eps))))) (+ (/ (exp (* x (- -1.0 eps))) (- eps)) (* (exp (- (* eps x) x)) (+ 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.48144291384505,
    "avg_bits_err_output": 24.826832746246094,
    "avg_bits_err_improve": 4.654610167598957,
    "time": 17437.448974609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01225,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0,
    "time": 3772.69091796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- (- 4.0 (/ (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))) (+ (/ t t) t))) (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0)))) (+ 2.0 (- (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))) (/ (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))) (+ (/ t t) t)))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.0155,
    "avg_bits_err_output": 0.0641911656266226,
    "avg_bits_err_improve": -0.048691165626622596,
    "time": 16231.98583984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ (* (/ t (+ t 1.0)) (* 8.0 (/ t (+ t 1.0)))) 2.0) (+ (* (/ t (+ t 1.0)) (* 8.0 (/ t (+ t 1.0)))) 4.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.07075,
    "avg_bits_err_output": 0.00675,
    "avg_bits_err_improve": 0.06399999999999999,
    "time": 13121.23388671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3310.5078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2579.48193359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2561.870361328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.814598372922784,
    "avg_bits_err_output": 0.25275,
    "avg_bits_err_improve": 7.5618483729227846,
    "time": 18438.992919921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.403162216803511,
    "avg_bits_err_output": 7.403162216803511,
    "avg_bits_err_improve": 0,
    "time": 3420.965576171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.029201965016785,
    "avg_bits_err_output": 16.029201965016785,
    "avg_bits_err_improve": 0,
    "time": 3197.421630859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (- 0.0 (/ (/ 1.0 (/ 1.0 (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (* (cos x) (cos x)))))) (- (/ 2.0 (/ (/ 2.0 (cos x)) (expm1 (log1p (exp (* 10.0 (* x x)))))))))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 37,
    "avg_bits_err_input": 3.552710306718202,
    "avg_bits_err_output": 3.551905454266314,
    "avg_bits_err_improve": 0.0008048524518882161,
    "time": 23480.8896484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -100000000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-37) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 43,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 0.011698120312590146,
    "avg_bits_err_improve": 14.779970433438367,
    "time": 9805.85986328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.593630075264166,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.593630075264166,
    "time": 3606.65380859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.00222041175863,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 39.00134541175863,
    "time": 4421.161376953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.290875,
    "avg_bits_err_improve": 63.709125,
    "time": 29976.85888671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(/ (* t t) 2.5e+31)",
    "output_parens": 2,
    "avg_bits_err_input": 61.8432554647147,
    "avg_bits_err_output": 0.4082409781302287,
    "avg_bits_err_improve": 61.43501448658447,
    "time": 8029.28271484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.516884818183726,
    "avg_bits_err_output": 34.516884818183726,
    "avg_bits_err_improve": 0,
    "time": 28189.2568359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.99914084391831,
    "avg_bits_err_output": 33.99914084391831,
    "avg_bits_err_improve": 0,
    "time": 20682.954833984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1879.36181640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.88220275472192,
    "avg_bits_err_output": 0.018375,
    "avg_bits_err_improve": 39.86382775472192,
    "time": 6219.848388671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.660100310055522,
    "avg_bits_err_output": 20.660100310055522,
    "avg_bits_err_improve": 0,
    "time": 3514.499755859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.675222906064817,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.675222906064817,
    "time": 8096.589111328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(+ (* a (+ c d)) (* a b))",
    "output_parens": 4,
    "avg_bits_err_input": 0.039625,
    "avg_bits_err_output": 0.041,
    "avg_bits_err_improve": -0.0013750000000000012,
    "time": 4981.721923828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.022073120312590146,
    "avg_bits_err_output": 0.01625,
    "avg_bits_err_improve": 0.005823120312590146,
    "time": 5569.718505859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01275,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.012499999999999999,
    "time": 3613.537109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1814.698974609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ c (+ b (+ a d))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40046033906799905,
    "avg_bits_err_output": 0.24825,
    "avg_bits_err_improve": 0.15221033906799905,
    "time": 4665.0947265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.882990703357898,
    "avg_bits_err_output": 29.882990703357898,
    "avg_bits_err_improve": 0,
    "time": 7607.58935546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.225150136310525,
    "avg_bits_err_output": 24.222525229119885,
    "avg_bits_err_improve": 0.0026249071906399024,
    "time": 10794.63134765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ x (- (tan x))) 0.0) (/ (log (+ 1.0 (expm1 (* (/ x (- (tan x))) (/ (- x (sin x)) (tan x)))))) (/ x (- (tan x)))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 24,
    "avg_bits_err_input": 30.003921320546326,
    "avg_bits_err_output": 30.00809024727175,
    "avg_bits_err_improve": -0.004168926725423461,
    "time": 30468.98291015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007573120312590144,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006448120312590144,
    "time": 2731.24658203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3.4e+106) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 5.5e-44) (/ (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0)) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 65,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 44.02958071880186,
    "avg_bits_err_improve": 3.9167560109562274,
    "time": 25358.247314453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.152970838189805,
    "avg_bits_err_output": 22.75329032898852,
    "avg_bits_err_improve": 3.3996805092012856,
    "time": 12329.5302734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* (if (!= (/ c (fma c c (* d d))) 0.0) (* c (/ (/ c c) (fma c c (* d d)))) (/ (- (exp (log1p (/ c c))) 1.0) (+ c (* d (/ d c))))) b) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 24,
    "avg_bits_err_input": 26.438523611620948,
    "avg_bits_err_output": 14.36480129089926,
    "avg_bits_err_improve": 12.073722320721687,
    "time": 14580.851318359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033125,
    "avg_bits_err_output": 0.020360521314888556,
    "avg_bits_err_improve": 0.012764478685111446,
    "time": 13192.184814453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.686185619014726,
    "avg_bits_err_output": 0.5479555269578513,
    "avg_bits_err_improve": 13.138230092056874,
    "time": 25740.743408203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.724063613141345,
    "avg_bits_err_output": 0.3267657034129984,
    "avg_bits_err_improve": 13.397297909728346,
    "time": 24570.17919921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3372387253491264,
    "avg_bits_err_output": 0.3306914875690531,
    "avg_bits_err_improve": 0.006547237780073323,
    "time": 50186.134765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20894844765789308,
    "avg_bits_err_output": 0.20894844765789308,
    "avg_bits_err_improve": 0,
    "time": 20185.15185546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (- 1.0 u1) 4.0)) (/ (+ u1 (+ u1 u1)) (- 4.0 (* u1 4.0))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5538096882505927,
    "avg_bits_err_output": 0.558464593401259,
    "avg_bits_err_improve": -0.004654905150666244,
    "time": 22644.02197265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (+ 1.0 (expm1 (* 6.28318530718 u2))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3207886334593113,
    "avg_bits_err_output": 0.3260241731749836,
    "avg_bits_err_improve": -0.0052355397156723105,
    "time": 22503.517333984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (fma u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.3318218683702057,
    "avg_bits_err_output": 0.3323218683702057,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 52804.01416015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05961664007037485,
    "avg_bits_err_output": 0.05961664007037485,
    "avg_bits_err_improve": 0,
    "time": 12886.563720703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (* (exp (/ (fabs x) (- s))) (/ 1.0 (* (+ 1.0 (exp (/ (fabs x) (- s)))) (+ 1.0 (exp (/ (fabs x) (- s))))))) s)",
    "output_parens": 18,
    "avg_bits_err_input": 0.12713487757054245,
    "avg_bits_err_output": 0.11265859240469094,
    "avg_bits_err_improve": 0.014476285165851518,
    "time": 21156.03662109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6635499846456265,
    "avg_bits_err_output": 0.6635499846456265,
    "avg_bits_err_improve": 0,
    "time": 21510.935546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.161460654199401,
    "avg_bits_err_output": 0.15414467802558782,
    "avg_bits_err_improve": 0.007315976173813188,
    "time": 22073.505126953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5778873774689015,
    "avg_bits_err_output": 2.5778873774689015,
    "avg_bits_err_improve": 0,
    "time": 35835.835693359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* cosTheta_O (* (* (/ 0.5 v) (/ (+ cosTheta_i cosTheta_i) (sinh (/ 1.0 v)))) (/ 0.5 v))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.45413552700512566,
    "avg_bits_err_output": 0.3551252972125397,
    "avg_bits_err_improve": 0.09901022979258595,
    "time": 25403.517578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.11152254660054957,
    "avg_bits_err_output": 0.11131249489518574,
    "avg_bits_err_improve": 0.00021005170536382567,
    "time": 9199.823486328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (- 1.0 (* alpha alpha)) (* (log (* alpha alpha)) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))) (- PI))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4718355008318359,
    "avg_bits_err_output": 0.46530327611215255,
    "avg_bits_err_improve": 0.006532224719683344,
    "time": 22082.274169921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(if (!= (* 3.0 s) 0.0) (* (* s (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) -9.0)) -0.3333333333333333) (* 3.0 (* s (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))",
    "output_parens": 14,
    "avg_bits_err_input": 1.3317612159065804,
    "avg_bits_err_output": 1.1952685281830286,
    "avg_bits_err_improve": 0.13649268772355172,
    "time": 27349.9609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (* s (+ (* (log (/ 1.0 (fma u -4.0 1.0))) 2.0) (/ (fma (- -1.0 (* (log (/ 1.0 (fma u -4.0 1.0))) 2.0)) (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0) (log (+ 1.0 (expm1 (* (fma (log (/ 1.0 (fma u -4.0 1.0))) -2.0 -1.0) (fma (log (/ 1.0 (fma u -4.0 1.0))) -2.0 -1.0)))))) (- -1.0 (* (log (/ 1.0 (fma u -4.0 1.0))) 2.0))))) 2.0)",
    "output_parens": 35,
    "avg_bits_err_input": 12.37033347220054,
    "avg_bits_err_output": 11.883769765744075,
    "avg_bits_err_improve": 0.4865637064564652,
    "time": 33972.35107421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (* 0.75 (/ (exp (/ r (* -3.0 s))) (* s (* PI 6.0))))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1504416214531113,
    "avg_bits_err_output": 0.1571854263097322,
    "avg_bits_err_improve": -0.006743804856620905,
    "time": 26824.3154296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i) (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9471200880812249,
    "avg_bits_err_output": 0.768693929267526,
    "avg_bits_err_improve": 0.17842615881369894,
    "time": 25321.808837890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (if (!= (* (- 1.0 cosTheta) (- 1.0 cosTheta)) 0.0) (/ (- 1.0 (+ cosTheta cosTheta)) (* (/ 1.0 (- 1.0 cosTheta)) (- 1.0 cosTheta))) (- 1.0 (+ cosTheta cosTheta)))) (* cosTheta (sqrt PI))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.7033159359408594,
    "avg_bits_err_output": 0.48615435151518427,
    "avg_bits_err_improve": 0.21716158442567512,
    "time": 21600.61083984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(if (!= (sin (* 2.0 (* PI u2))) 0.0) (/ (fma (sin (* 2.0 (* PI u2))) (* (sin (* 2.0 (* PI u2))) (+ 1.0 (sqrt (- (log (- 1.0 u1)))))) (- (* (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2)))))) (sin (* 2.0 (expm1 (log1p (* PI u2)))))) (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.689376373062071,
    "avg_bits_err_output": 13.528060396370554,
    "avg_bits_err_improve": 0.1613159766915171,
    "time": 27401.673828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (!= (fma (cos (* 2.0 (* PI u2))) (- (sqrt (- (log (- 1.0 u1))))) (cos (* 2.0 (* PI u2)))) 0.0) (- (/ (* (cos (* 2.0 (* PI u2))) (fma (cos (* 2.0 (* PI u2))) (- (sqrt (- (log (- 1.0 u1))))) (cos (* 2.0 (* PI u2))))) (fma (cos (* 2.0 (* PI u2))) (- (sqrt (- (log (- 1.0 u1))))) (cos (* 2.0 (* PI u2))))) (log (+ 1.0 (expm1 (/ 2.0 (/ 2.0 (fma (sqrt (- (log (- 1.0 u1)))) (- (cos (* 2.0 (* PI u2)))) (cos (* 2.0 (* PI u2)))))))))) (* (cos (* 2.0 (* PI u2))) (sqrt (- (log (- 1.0 u1))))))",
    "output_parens": 69,
    "avg_bits_err_input": 13.735547786346128,
    "avg_bits_err_output": 13.253867227050984,
    "avg_bits_err_improve": 0.4816805592951443,
    "time": 29403.4072265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (- alpha) alpha (* alpha alpha)) (/ (* (* alpha -2.0) (* (log (- 1.0 u0)) alpha)) 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 13.959537248136943,
    "avg_bits_err_output": 13.904044600122296,
    "avg_bits_err_improve": 0.05549264801464737,
    "time": 20047.693359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ (log (- 1.0 u0)) (+ (/ (+ cos2phi cos2phi) (* alphax alphax)) (+ (+ (/ (+ cos2phi cos2phi) (* alphax alphax)) (/ (+ sin2phi sin2phi) (* alphay alphay))) (/ (+ sin2phi sin2phi) (* alphay alphay))))) -4.0)",
    "output_parens": 19,
    "avg_bits_err_input": 12.729088581998798,
    "avg_bits_err_output": 12.785708786539631,
    "avg_bits_err_improve": -0.05662020454083283,
    "time": 17594.19091796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) -5e+210) (- (* PI l) (/ (/ 1.0 F) (/ (* (/ 1.0 F) F) (/ (tan (* PI l)) F)))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) -4e+124) (- (* PI l) (* (- (/ (/ 2.0 F) (* F F)) (- (/ (/ 2.0 F) (* F F)) (/ (/ F F) (* F F)))) (tan (* PI l)))) (- (* PI l) (/ (/ 1.0 F) (* F (- (/ 1.0 (tan (* PI l))) (/ 0.0 F)))))))",
    "output_parens": 54,
    "avg_bits_err_input": 16.981408703704858,
    "avg_bits_err_output": 12.68763557140045,
    "avg_bits_err_improve": 4.293773132304407,
    "time": 19467.709228515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ x (tan B)) (+ (* (/ x (tan B)) 2.0) (/ -1.0 (sin B))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.2161770831999919,
    "avg_bits_err_output": 0.17168648163704123,
    "avg_bits_err_improve": 0.04449060156295068,
    "time": 17321.035400390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.600603606515639,
    "avg_bits_err_output": 10.331957269435707,
    "avg_bits_err_improve": 3.2686463370799324,
    "time": 22940.59228515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (fma (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (- (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (fma (exp (* PI (/ f 4.0))) (/ (exp (* PI (/ f 4.0))) (* (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (+ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (/ PI -4.0))",
    "output_parens": 78,
    "avg_bits_err_input": 61.35017041931623,
    "avg_bits_err_output": 61.43628332140069,
    "avg_bits_err_improve": -0.08611290208445865,
    "time": 74194.62939453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.45845029640257,
    "avg_bits_err_output": 34.484254287636794,
    "avg_bits_err_improve": 8.974196008765773,
    "time": 24503.229736328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (sin th) (expm1 (log1p (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 4.052084893928113,
    "avg_bits_err_output": 4.103174206084447,
    "avg_bits_err_improve": -0.05108931215633472,
    "time": 27619.68994140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0803795705210955,
    "avg_bits_err_output": 1.0883795705210955,
    "avg_bits_err_improve": -0.008000000000000007,
    "time": 9381.210693359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 10.079392923555607,
    "avg_bits_err_improve": 0,
    "time": 37703.396728515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+294) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 71,
    "avg_bits_err_input": 34.06067149106098,
    "avg_bits_err_output": 28.186680072642353,
    "avg_bits_err_improve": 5.873991418418626,
    "time": 36967.436767578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ 2.0 (/ (sin k) l)) (/ 1.0 (* (pow (/ k t) 2.0) (* (pow t 3.0) (/ (tan k) l)))))",
    "output_parens": 12,
    "avg_bits_err_input": 47.43296114968898,
    "avg_bits_err_output": 36.328250417078735,
    "avg_bits_err_improve": 11.104710732610243,
    "time": 42370.237060546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (/ (pow t 3.0) l) (* (sin k) (+ 2.0 (pow (/ k t) 2.0)))) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.220085978087475,
    "avg_bits_err_output": 27.736168086536843,
    "avg_bits_err_improve": 4.483917891550632,
    "time": 19702.2333984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (/ (+ (* a2 a2) (* a1 a1)) (sqrt 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5379875968971776,
    "avg_bits_err_output": 0.48904154376839076,
    "avg_bits_err_improve": 0.048946053128786804,
    "time": 21854.524658203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5094101744730215,
    "avg_bits_err_output": 0.4683849558303543,
    "avg_bits_err_improve": 0.04102521864266723,
    "time": 16434.727294921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (cos (/ K 2.0)) (- (* (- (exp (log1p (exp l))) (exp (- l))) J) J)) U)",
    "output_parens": 12,
    "avg_bits_err_input": 17.457157721169843,
    "avg_bits_err_output": 17.487798732495406,
    "avg_bits_err_improve": -0.03064101132556374,
    "time": 23265.6298828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (fabs (- m n)) (+ (pow (- (/ (+ m n) 2.0) M) 2.0) l))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.580029875800928,
    "avg_bits_err_output": 15.580029875800928,
    "avg_bits_err_improve": 0,
    "time": 9233.138671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.476386842188134,
    "avg_bits_err_output": 18.476386842188134,
    "avg_bits_err_improve": 0,
    "time": 32961.71337890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (* (/ (pow (* M (/ (/ D 2.0) d)) 2.0) l) h)))) (if (<= (/ h l) 0.0) (* w0 (sqrt (- 1.0 (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (/ (pow (* M (/ (/ D 2.0) d)) 2.0) l) h))))))",
    "output_parens": 34,
    "avg_bits_err_input": 13.652115268102541,
    "avg_bits_err_output": 10.19499231821519,
    "avg_bits_err_improve": 3.457122949887351,
    "time": 14801.358154296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1e+281) (* (sqrt (/ (/ A V) l)) c0) (if (<= (* V l) -1e-265) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 0.0) (* (sqrt (/ (/ A V) l)) c0) (if (<= (* V l) 2e+285) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (/ A l) V)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 19.48360003408157,
    "avg_bits_err_output": 14.857056134676677,
    "avg_bits_err_improve": 4.626543899404892,
    "time": 18457.37841796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* D D) 5e-123) (* (/ c0 (* 2.0 w)) (if (!= (sqrt (* (fma c0 (* d (/ d (* D (* h (* D w))))) M) (- (* (/ d (* h (* D w))) (* (/ d D) c0)) M))) 0.0) 0.0 (fma c0 (* d (/ d (* D (* h (* D w))))) (sqrt (* (fma c0 (* d (/ d (* D (* h (* D w))))) M) (- (* (/ d (* h (* D w))) (* (/ d D) c0)) M)))))) (if (<= (* D D) 1e-55) (+ (* (* (/ (/ (/ d D) w) h) (* (/ d D) c0)) (/ c0 (* w 2.0))) (* (sqrt (* (fma (/ (/ (/ d D) w) h) (* (/ d D) c0) M) (fma (/ (/ (/ d D) w) h) (* (/ d D) c0) (- M)))) (/ c0 (* w 2.0)))) (if (<= (* D D) 5e+227) (* (/ c0 (* 2.0 w)) (if (!= (sqrt (* (fma c0 (* d (/ d (* D (* h (* D w))))) M) (- (* (/ d (* h (* D w))) (* (/ d D) c0)) M))) 0.0) 0.0 (fma c0 (* d (/ d (* D (* h (* D w))))) (sqrt (* (fma c0 (* d (/ d (* D (* h (* D w))))) M) (- (* (/ d (* h (* D w))) (* (/ d D) c0)) M)))))) (+ (* (* (/ (/ (/ d D) w) h) (* (/ d D) c0)) (/ c0 (* w 2.0))) (* (sqrt (* (fma (/ (/ (/ d D) w) h) (* (/ d D) c0) M) (fma (/ (/ (/ d D) w) h) (* (/ d D) c0) (- M)))) (/ c0 (* w 2.0)))))))",
    "output_parens": 147,
    "avg_bits_err_input": 59.29148434905495,
    "avg_bits_err_output": 36.2654594322522,
    "avg_bits_err_improve": 23.026024916802747,
    "time": 46157.16015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) -5e+291) (- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* (* (pow (* D (/ M (* 2.0 d))) 2.0) 0.5) (* (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (/ h l)))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* M (/ D (* 2.0 d))) 2.0) (+ l l))))))",
    "output_parens": 49,
    "avg_bits_err_input": 26.562177345692803,
    "avg_bits_err_output": 25.71310155522295,
    "avg_bits_err_improve": 0.849075790469854,
    "time": 39945.185791015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (- (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 2.0)) (expm1 (log1p (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 26,
    "avg_bits_err_input": 15.733607877400226,
    "avg_bits_err_output": 15.278676594065521,
    "avg_bits_err_improve": 0.4549312833347052,
    "time": 20786.111083984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9838443609377705,
    "avg_bits_err_output": 0.010198120312590144,
    "avg_bits_err_improve": 0.9736462406251803,
    "time": 5207.57080078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (- (* (* v v) 5.0) 1.0) PI) (* (sqrt (fma v (* v -6.0) 2.0)) (* t (fma v v -1.0)))) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.44108909742812363,
    "avg_bits_err_output": 0.2822857516130559,
    "avg_bits_err_improve": 0.15880334581506772,
    "time": 18824.1337890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (+ (* (* v v) -3.0) 1.0)) (* (sqrt 2.0) (- (* v (/ v -4.0)) -0.25)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012344360937770431,
    "avg_bits_err_output": 0.01189624062518029,
    "avg_bits_err_improve": 0.00044812031259014104,
    "time": 11043.647705078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6181967939153886,
    "avg_bits_err_output": 0.6181967939153886,
    "avg_bits_err_improve": 0,
    "time": 7964.874267578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.015190885762199,
    "avg_bits_err_output": 1.9895234045118382,
    "avg_bits_err_improve": 0.025667481250361,
    "time": 9756.821533203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)) -1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017331650391671637,
    "avg_bits_err_output": 0.017331650391671637,
    "avg_bits_err_improve": 0,
    "time": 6362.811767578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* b (* b 4.0))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18633289531691705,
    "avg_bits_err_output": 0.18593665469173673,
    "avg_bits_err_improve": 0.00039624062518031633,
    "time": 15643.822265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (fma b (+ b b) (* (* b b) (- -1.0 (* a 3.0)))))) (* 4.0 (* a (fma a a a)))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.18874838106592987,
    "avg_bits_err_output": 0.18788277950297913,
    "avg_bits_err_improve": 0.0008656015629507352,
    "time": 19901.78271484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.1823877602212981,
    "avg_bits_err_output": 0.18204339928352767,
    "avg_bits_err_improve": 0.00034436093777043264,
    "time": 16489.0810546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (if (!= (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.0) (/ (+ x (* x (/ x (sqrt (fma 4.0 (* p p) (* x x)))))) x) (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.219543623686569,
    "avg_bits_err_output": 13.221925267076289,
    "avg_bits_err_improve": -0.002381643389719912,
    "time": 19064.008544921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ 2.0 (/ 2.0 (/ (expm1 (* 2.0 x)) (expm1 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.179015890162,
    "avg_bits_err_output": 0.049875,
    "avg_bits_err_improve": 41.129140890162,
    "time": 17157.103271484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(+ (/ (/ (sin x) 2.0) (- (tan x) x)) (/ (- (/ (sin x) 2.0) x) (- (tan x) x)))",
    "output_parens": 12,
    "avg_bits_err_input": 31.90397771703424,
    "avg_bits_err_output": 31.894521254495565,
    "avg_bits_err_improve": 0.009456462538675936,
    "time": 20850.2314453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 -1.35e+154) (/ (if (!= (- b_2) 0.0) (- (/ 2.0 (/ -2.0 b_2)) 0.0) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a) (if (<= b_2 1e+151) (/ (- (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (+ b_2 b_2)) a) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a)))",
    "output_parens": 33,
    "avg_bits_err_input": 34.14185691002886,
    "avg_bits_err_output": 28.176129398426315,
    "avg_bits_err_improve": 5.965727511602541,
    "time": 14902.03125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.84744890084061,
    "avg_bits_err_output": 33.84744890084061,
    "avg_bits_err_improve": 0,
    "time": 20053.716552734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 32.20379012175142,
    "avg_bits_err_output": 31.391111354622687,
    "avg_bits_err_improve": 0.8126787671287303,
    "time": 17344.3095703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.25467620735367,
    "avg_bits_err_output": 33.25467620735367,
    "avg_bits_err_improve": 0,
    "time": 17416.6982421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (+ (* (log N) (/ (log N) (+ (log1p N) (log N)))) (+ (/ (* (log N) (log N)) (- (+ (log1p N) (log N)))) (* (- (log1p N) (log N)) (/ (+ (log1p N) (log N)) (+ (log1p N) (log N)))))) (- (log1p N) (log N)))",
    "output_parens": 37,
    "avg_bits_err_input": 29.486007637322597,
    "avg_bits_err_output": 29.531411007163875,
    "avg_bits_err_improve": -0.04540336984127791,
    "time": 14071.572998046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (- (/ -1.0 x) (+ -1.0 (/ x x))) (/ x (/ x (+ 1.0 x))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.542454852721805,
    "avg_bits_err_output": 0.07836560156295072,
    "avg_bits_err_improve": 14.464089251158855,
    "time": 14447.010009765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (+ (+ (cos (+ x eps)) -1.0) 1.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 39.236232941011416,
    "avg_bits_err_output": 39.251442111754635,
    "avg_bits_err_improve": -0.015209170743219147,
    "time": 15735.986572265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (* (cbrt x) (cbrt x))) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.8676301540041,
    "avg_bits_err_output": 29.891004317002533,
    "avg_bits_err_improve": -0.02337416299843298,
    "time": 8753.2998046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.61912989970838,
    "avg_bits_err_output": 30.61912989970838,
    "avg_bits_err_improve": 0,
    "time": 21622.437744140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= b -1.35e+154) (if (!= (/ b (+ a a)) 0.0) (if (!= (/ 2.0 (/ 4.0 (/ b a))) 0.0) (- (/ 2.0 (/ 4.0 (/ b a)))) (- (/ 2.0 (/ 4.0 (/ b a))))) (/ (- b (sqrt (fma a (* c -4.0) (* b b)))) (* a -2.0))) (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))",
    "output_parens": 35,
    "avg_bits_err_input": 33.96605243463104,
    "avg_bits_err_output": 32.63788204504022,
    "avg_bits_err_improve": 1.3281703895908166,
    "time": 23089.3828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.06103919246469,
    "avg_bits_err_output": 34.06103919246469,
    "avg_bits_err_improve": 0,
    "time": 27544.546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (/ (/ (+ 1.0 (log (- 1.0 x))) (log1p x)) (* (log1p x) (/ 1.0 (log1p x)))) (/ 1.0 (log1p x)))",
    "output_parens": 13,
    "avg_bits_err_input": 61.468757477423495,
    "avg_bits_err_output": 59.833295537824014,
    "avg_bits_err_improve": 1.6354619395994803,
    "time": 26830.41455078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (if (!= (* (fma n (- (log1p n) (log n)) (log1p n)) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 0.0) (- (/ 1.0 (/ (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n)))))) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) 0.0) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 58,
    "avg_bits_err_input": 63.005613431672735,
    "avg_bits_err_output": 44.208952394891504,
    "avg_bits_err_improve": 18.79666103678123,
    "time": 19448.134521484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (- (+ (log (/ (- 1.0 eps) (- eps -1.0))) -1.0) -1.0))) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 58.53070317082191,
    "avg_bits_err_improve": -0.0655495468992271,
    "time": 19644.81396484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (- 1.0 (log (exp (/ x (tan x))))) x)",
    "output_parens": 6,
    "avg_bits_err_input": 59.88804697047933,
    "avg_bits_err_output": 59.87951786146314,
    "avg_bits_err_improve": 0.00852910901618742,
    "time": 29009.97216796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ a b))) (expm1 (* eps a))) (if (!= (/ eps (expm1 (* eps b))) 0.0) (/ 1.0 (/ 1.0 (/ eps (expm1 (* eps b))))) (/ eps (expm1 (* eps b)))))",
    "output_parens": 20,
    "avg_bits_err_input": 60.36918945083786,
    "avg_bits_err_output": 29.526343285473594,
    "avg_bits_err_improve": 30.842846165364264,
    "time": 26222.261474609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.51891809206283,
    "avg_bits_err_output": 0.12019875157544475,
    "avg_bits_err_improve": 41.39871934048739,
    "time": 7136.66650390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.58823761586692,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.58736261586692,
    "time": 3168.42529296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.314059832286034,
    "avg_bits_err_output": 0.020062931983547826,
    "avg_bits_err_improve": 29.293996900302485,
    "time": 12134.041748046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (exp x) 0.0) (if (!= (* (exp x) (/ (exp (- x)) (- (exp x)))) 0.0) (/ (fma (* (exp x) (/ (exp (- x)) (- (exp x)))) (* (exp x) (/ (exp (- x)) (- (exp x)))) (* (* (exp x) (/ (exp (- x)) (exp x))) (- (* (exp x) (/ (- 2.0 (exp x)) (exp x)))))) (* (exp x) (/ (exp (- x)) (- (exp x))))) (* (+ (exp (- x)) (- (exp x) 2.0)) (/ (- (exp x)) (exp x)))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 65,
    "avg_bits_err_input": 29.562467002314683,
    "avg_bits_err_output": 29.08830522243801,
    "avg_bits_err_improve": 0.47416177987667396,
    "time": 18471.859619140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ 0.0 (+ (/ -2.0 x) (if (!= (/ 1.0 (+ 1.0 x)) 0.0) (/ (+ 1.0 (/ 1.0 (/ (+ x -1.0) (+ 1.0 x)))) (+ 1.0 x)) (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))))))",
    "output_parens": 19,
    "avg_bits_err_input": 9.608333295066489,
    "avg_bits_err_output": 9.616526027167222,
    "avg_bits_err_improve": -0.008192732100733124,
    "time": 26962.980712890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.840457708542395,
    "avg_bits_err_output": 36.840457708542395,
    "avg_bits_err_improve": 0,
    "time": 18033.916259765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (!= (+ (sqrt (+ x 1.0)) (sqrt x)) 0.0) (/ (- (- (* (sqrt x) (+ (sqrt (+ x 1.0)) (sqrt x))) (* (sqrt (+ x 1.0)) (+ (sqrt (+ x 1.0)) (sqrt x))))) (+ (sqrt (+ x 1.0)) (sqrt x))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 30,
    "avg_bits_err_input": 30.04240395230425,
    "avg_bits_err_output": 29.791997330795326,
    "avg_bits_err_improve": 0.250406621508926,
    "time": 14838.58642578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.05896402966488,
    "avg_bits_err_output": 37.05896402966488,
    "avg_bits_err_improve": 0,
    "time": 15838.06298828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (- (/ 2.0 (log1p (expm1 (/ (sqrt x) (sqrt (+ 1.0 x)))))) (- 2.0 (/ 0.0 (sqrt (+ 1.0 x))))) (+ (sqrt (+ 1.0 x)) (sqrt (+ 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 20.026034465467962,
    "avg_bits_err_output": 20.03347127107121,
    "avg_bits_err_improve": -0.007436805603248331,
    "time": 11642.222412109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (/ (+ -1.0 (+ (- (fma (atan (+ 1.0 N)) (atan (+ 1.0 N)) 1.0) (* (atan N) (atan N))) (fma (- (atan N)) (atan N) (* (atan N) (atan N))))) (+ (atan (+ 1.0 N)) (atan N))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 33,
    "avg_bits_err_input": 14.991472377652421,
    "avg_bits_err_output": 14.99084339400612,
    "avg_bits_err_improve": 0.0006289836463011511,
    "time": 8401.48779296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.174707168965995,
    "avg_bits_err_output": 30.174707168965995,
    "avg_bits_err_improve": 0,
    "time": 38513.67529296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (+ (- 1.0 m) (* (/ m v) (- m (* m m)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07847755746635404,
    "avg_bits_err_output": 0.07808583854274295,
    "avg_bits_err_improve": 0.0003917189236110896,
    "time": 14359.765869140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 15.852117248422408,
    "avg_bits_err_output": 0.29742481250360575,
    "avg_bits_err_improve": 15.554692435918803,
    "time": 10895.122314453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.011111111111111112 (- (/ (exp (log1p (/ 2.0 PI))) angle) (/ 1.0 angle))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (/ (* PI angle) 180.0))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 19.82264113287219,
    "avg_bits_err_output": 19.86056482876469,
    "avg_bits_err_improve": -0.037923695892501996,
    "time": 27990.320068359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (- (+ (pow b 2.0) (pow b 2.0)) (pow a 2.0))) (- (sin (* PI (/ angle 180.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 31.069179065568253,
    "avg_bits_err_output": 31.069680356953228,
    "avg_bits_err_improve": -0.0005012913849746781,
    "time": 29351.561767578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.27522524694481,
    "avg_bits_err_output": 20.228337699022674,
    "avg_bits_err_improve": 0.04688754792213601,
    "time": 26914.217529296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17585416639998386,
    "avg_bits_err_output": 0.17267025517746534,
    "avg_bits_err_improve": 0.003183911222518515,
    "time": 16089.251953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32912410109759316,
    "avg_bits_err_output": 0.3236638249507136,
    "avg_bits_err_improve": 0.00546027614687955,
    "time": 18210.09814453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ (sin v) (+ 2.0 (* (* e (cos v)) 2.0))) (+ e e))",
    "output_parens": 8,
    "avg_bits_err_input": 0.14231372187554087,
    "avg_bits_err_output": 0.143761842188131,
    "avg_bits_err_improve": -0.0014481203125901454,
    "time": 15626.26318359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* -2.0 (fma (cos phi1) (- (* (cos phi2) (cos (- lambda1 lambda2)))) (- (* (* (cos phi2) (cos (- lambda1 lambda2))) (/ (cos phi1) -2.0))))))) R)",
    "output_parens": 21,
    "avg_bits_err_input": 16.90002975143135,
    "avg_bits_err_output": 16.900323278074932,
    "avg_bits_err_improve": -0.00029352664358128777,
    "time": 31893.90673828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.15e+16) (+ (* (/ (if (!= (+ b (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (fma b b (fma b (- b) (fma (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))) (- (* b b))))) (+ b (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (+ (/ (sqrt (fma a (* c -4.0) (* b b))) (* a 4.0)) (/ (- b) (* a 4.0)))) (/ (- (- (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 56,
    "avg_bits_err_input": 52.823534972120875,
    "avg_bits_err_output": 50.64446678723546,
    "avg_bits_err_improve": 2.1790681848854163,
    "time": 33498.343994140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (+ (/ (fma (- (sqrt (fma a (* -4.0 c) (* b b)))) (sqrt (fma a (* -4.0 c) (* b b))) (* (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))))) (- (+ b (sqrt (fma a (* -4.0 c) (* b b)))))) (* (- (sqrt (fma a (* -4.0 c) (* b b))) b) (/ (+ b (sqrt (fma a (* -4.0 c) (* b b)))) (+ b (sqrt (fma a (* -4.0 c) (* b b))))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 58,
    "avg_bits_err_input": 28.784753414520114,
    "avg_bits_err_output": 28.314006204657126,
    "avg_bits_err_improve": 0.47074720986298857,
    "time": 27896.085693359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma a (* c -4.0) (* b b)))) 0.0) (+ (/ (fma (- (sqrt (fma c (* a -4.0) (* b b)))) (sqrt (fma c (* a -4.0) (* b b))) (if (!= (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) 0.0) (/ 1.0 (/ 1.0 (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))))) (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))))) (- (+ b (sqrt (fma c (* a -4.0) (* b b)))))) (* (- (sqrt (fma c (* a -4.0) (* b b))) b) (/ (+ b (sqrt (fma c (* a -4.0) (* b b)))) (+ b (sqrt (fma c (* a -4.0) (* b b))))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 80,
    "avg_bits_err_input": 44.354955677005634,
    "avg_bits_err_output": 43.2770908072564,
    "avg_bits_err_improve": 1.0778648697492343,
    "time": 36366.591796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9724835388945,
    "avg_bits_err_output": 33.9724835388945,
    "avg_bits_err_improve": 0,
    "time": 22947.539794921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (* (cos (- lambda1 lambda2)) (cos phi2)) 0.0) (* (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)) (/ (cos (- lambda1 lambda2)) (* (cos phi2) (/ (cos (- lambda1 lambda2)) (cos phi2))))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.9316221955006693,
    "avg_bits_err_output": 0.9439839509781073,
    "avg_bits_err_improve": -0.012361755477438008,
    "time": 23253.666015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (log (exp (+ 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 29,
    "avg_bits_err_input": 29.48928923050382,
    "avg_bits_err_output": 29.48564543947322,
    "avg_bits_err_improve": 0.0036437910306013066,
    "time": 23019.11181640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(- (- (/ (exp x) (+ (exp x) (exp (- x)))) (/ (/ (exp (- x)) (+ (exp x) (exp (- x)))) 2.0)) (/ (log (+ 1.0 (expm1 (/ (exp (- x)) (+ (exp x) (exp (- x))))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 58.10358578893647,
    "avg_bits_err_output": 58.12936222592678,
    "avg_bits_err_improve": -0.025776436990312845,
    "time": 17906.937255859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (if (!= (- (exp x) (- (exp (- x)))) 0.0) (/ (- (+ (fma (- (exp x)) (exp (- x)) (* (exp (- x)) (exp x))) (fma (- (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)) (fma (- (exp x)) (+ (exp (- x)) (exp x)) (* (exp x) (+ (exp (- x)) (exp x))))))) (- (exp x) (- (exp (- x))))) (- (exp x) (exp (- x)))) 2.0)",
    "output_parens": 51,
    "avg_bits_err_input": 58.02302317436167,
    "avg_bits_err_output": 58.10221413807619,
    "avg_bits_err_improve": -0.07919096371452383,
    "time": 16153.37841796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008240601562950723,
    "avg_bits_err_output": 0.008240601562950723,
    "avg_bits_err_improve": 0,
    "time": 2592.033447265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (if (!= (* x x) 0.0) (* (* x x) (/ (fma x x -1.0) (* x x))) (fma x x -1.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.161125,
    "avg_bits_err_output": 32.16125,
    "avg_bits_err_improve": -0.00012500000000414957,
    "time": 5779.539794921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.456263283840364,
    "avg_bits_err_output": 58.456263283840364,
    "avg_bits_err_improve": 0,
    "time": 17543.6357421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.04375,
    "avg_bits_err_output": 0.04325,
    "avg_bits_err_improve": 0.0005000000000000004,
    "time": 2535.203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1302712406251803,
    "avg_bits_err_output": 0.1302712406251803,
    "avg_bits_err_improve": 0,
    "time": 12585.901611328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos t) (cos (atan (* (- eh) (/ (tan t) ew)))))) (* eh (* (sin t) (sin (atan (* (- eh) (/ (tan t) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12832312031259016,
    "avg_bits_err_output": 0.128,
    "avg_bits_err_improve": 0.0003231203125901583,
    "time": 25774.13720703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.37138127544293,
    "avg_bits_err_output": 4.013014378076799,
    "avg_bits_err_improve": 35.35836689736613,
    "time": 23968.208740234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.283674373791138,
    "avg_bits_err_output": 14.283674373791138,
    "avg_bits_err_improve": 0,
    "time": 2944.041015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (expm1 (log1p (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.13904330086437403,
    "avg_bits_err_output": 0.14525244212269064,
    "avg_bits_err_improve": -0.0062091412583166194,
    "time": 35277.422119140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (/ b (* a -6.0)) 0.0) (/ (fma (/ b (* a -6.0)) (/ b (* a -6.0)) (* (fma (sqrt (fma a (* c -3.0) (* b b))) 0.3333333333333333 (/ b -6.0)) (/ (/ b (* a -6.0)) a))) (/ b (* a -6.0))) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) 0.3333333333333333 (* (+ b b) -0.16666666666666666)) a))",
    "output_parens": 30,
    "avg_bits_err_input": 52.84631070773147,
    "avg_bits_err_output": 50.72462108354738,
    "avg_bits_err_improve": 2.1216896241840857,
    "time": 34444.23974609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (+ (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (- (sqrt (fma c (* a -3.0) (* b b)))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) (- (- b) (sqrt (fma c (* a -3.0) (* b b))))) (* (- (sqrt (fma b b (* -3.0 (* a c)))) b) (/ (+ b (sqrt (fma c (* a -3.0) (* b b)))) (+ b (sqrt (fma c (* a -3.0) (* b b))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 59,
    "avg_bits_err_input": 28.85335407011293,
    "avg_bits_err_output": 28.310469704949945,
    "avg_bits_err_improve": 0.5428843651629833,
    "time": 31276.0576171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(- (/ 0.0 a) (/ (/ (if (!= (+ b (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* b b) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))) 0.0) (/ 2.0 (/ 2.0 (+ (fma (- b) b (* b b)) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b)))) (+ b (sqrt (fma b b (* c (* a -3.0)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) a) -3.0))",
    "output_parens": 63,
    "avg_bits_err_input": 44.42040056330815,
    "avg_bits_err_output": 43.29900670286031,
    "avg_bits_err_improve": 1.1213938604478386,
    "time": 33274.49853515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b -1.0 (sqrt (fma b b (* c (* a -3.0))))) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.013366455742556,
    "avg_bits_err_output": 34.01337444198712,
    "avg_bits_err_improve": -7.98624456166408e-06,
    "time": 18232.416748046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (expm1 (log1p (* (cos phi2) (* (cos (- lambda1 lambda2)) (sin phi1)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.70846327050992,
    "avg_bits_err_output": 13.711853195437067,
    "avg_bits_err_improve": -0.003389924927146737,
    "time": 30439.851806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.027332819947535,
    "avg_bits_err_output": 0.4788461530624799,
    "avg_bits_err_improve": 28.548486666885054,
    "time": 19929.851806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(if (!= (/ x (+ 1.0 x)) 0.0) (/ (/ (+ (/ x (+ x -1.0)) (* (/ x (+ x 1.0)) x)) (+ 1.0 x)) (/ x (+ 1.0 x))) (+ (/ 1.0 (+ x -1.0)) (/ x (+ 1.0 x))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.013615601562950726,
    "avg_bits_err_improve": -0.0017406015629507256,
    "time": 7391.509765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ (- 1.0 (/ x (+ x -1.0))) (+ 1.0 x)) (/ 1.0 (fma x x -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.619113870524966,
    "avg_bits_err_output": 12.709171065406796,
    "avg_bits_err_improve": 1.9099428051181704,
    "time": 22278.68310546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (- (* (* C F) (fma 2.0 (pow B 2.0) (* A (* C -8.0)))) (* (fma 2.0 (pow B 2.0) (* A (* C -8.0))) (* F (- (if (!= (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) 0.0) (/ 2.0 (/ 2.0 (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) A))))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 39,
    "avg_bits_err_input": 52.557777024598984,
    "avg_bits_err_output": 52.364367044617374,
    "avg_bits_err_improve": 0.19340997998160958,
    "time": 39753.37451171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* (atan (/ (+ (- C A) (+ (- C A) (* (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) -2.0))) (+ B B))) (/ 180.0 PI))",
    "output_parens": 15,
    "avg_bits_err_input": 29.85365437021454,
    "avg_bits_err_output": 29.85490413477973,
    "avg_bits_err_improve": -0.0012497645651912137,
    "time": 21717.784423828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (* (* 2.0 F) (if (!= C 0.0) (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (/ C C)) (+ (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 31,
    "avg_bits_err_input": 52.76154166964942,
    "avg_bits_err_output": 52.45950326535845,
    "avg_bits_err_improve": 0.3020384042909683,
    "time": 34551.579833984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.391838770633505,
    "avg_bits_err_output": 15.391838770633505,
    "avg_bits_err_improve": 0,
    "time": 2047.91845703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (if (!= (/ 1.0 (/ -1.0 g)) 0.0) (+ (/ (* g g) (* g -2.0)) (/ (+ (* g g) (* (* g (/ (sqrt (- (* g g) (* h h))) (- g))) (* g -2.0))) (* g -2.0))) (* g (/ (+ g (sqrt (- (* g g) (* h h)))) (- g)))) (- (- g) (sqrt (fma h (- h) (* g g))))))))",
    "output_parens": 50,
    "avg_bits_err_input": 35.81750611425101,
    "avg_bits_err_output": 35.74940521474705,
    "avg_bits_err_improve": 0.06810089950396048,
    "time": 12709.465087890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9924015046946224,
    "avg_bits_err_output": 0.9814317671895736,
    "avg_bits_err_improve": 0.010969737505048816,
    "time": 7992.46728515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.931125,
    "avg_bits_err_output": 0.931125,
    "avg_bits_err_improve": 0,
    "time": 4645.546630859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* a1 (/ (/ a2 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-305) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+288) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.28370955146603,
    "avg_bits_err_output": 2.4579863457772317,
    "avg_bits_err_improve": 8.8257232056888,
    "time": 9618.467041015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5119730148866263,
    "avg_bits_err_output": 0.479625,
    "avg_bits_err_improve": 0.03234801488662625,
    "time": 9463.695556640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- x (hypot 1.0 x)) 0.0) (/ (- (fma (hypot 1.0 x) (hypot 1.0 x) (* x x)) (* x (+ x x))) (- (hypot 1.0 x) x)) (+ x (hypot 1.0 x))))",
    "output_parens": 17,
    "avg_bits_err_input": 52.99372040857784,
    "avg_bits_err_output": 45.2126823266831,
    "avg_bits_err_improve": 7.781038081894742,
    "time": 20621.18896484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.684403591105956,
    "avg_bits_err_output": 5.685062048275354,
    "avg_bits_err_improve": -0.0006584571693979413,
    "time": 15559.026123046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 2.0 (* x 2.0)) (/ (+ (+ x x) (+ x (+ x 4.0))) 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.017625,
    "avg_bits_err_improve": -0.003999999999999998,
    "time": 6405.489990234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1302.34326171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* w r) (* (* w (/ r (- 1.0 v))) (- 0.375 (* v 0.25)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.565362110838905,
    "avg_bits_err_output": 0.6264465122320378,
    "avg_bits_err_improve": 11.938915598606867,
    "time": 22318.050537109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0))))))))))",
    "output_parens": 48,
    "avg_bits_err_input": 0.5180940075640867,
    "avg_bits_err_output": 0.27449685113731837,
    "avg_bits_err_improve": 0.24359715642676838,
    "time": 69392.67993164062,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.25644350928271,
    "avg_bits_err_output": 1.1995300526959174,
    "avg_bits_err_improve": 17.056913456586795,
    "time": 9052.76171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.22679248125036058,
    "avg_bits_err_output": 0.18691748125036056,
    "avg_bits_err_improve": 0.03987500000000002,
    "time": 7833.0234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0,
    "time": 2505.244873046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.54698531867687,
    "avg_bits_err_output": 0.2660734968798676,
    "avg_bits_err_improve": 14.280911821797002,
    "time": 16870.152587890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 28.848695455601533,
    "avg_bits_err_output": 24.233501129742752,
    "avg_bits_err_improve": 4.615194325858781,
    "time": 22479.600341796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (if (!= (+ 2.0 (/ -1.0 (+ t (/ t t)))) 0.0) (/ (- (* (- (/ 2.0 (* t (+ 2.0 (/ 2.0 t)))) 2.0) (- (/ 2.0 (* t (+ 2.0 (/ 2.0 t)))) 2.0)) (/ (+ 2.0 (- 2.0 (/ 2.0 (+ t (/ t t))))) (* t (+ 2.0 (/ 2.0 t))))) (+ 2.0 (/ -1.0 (+ t (/ t t))))) (- 2.0 (/ 2.0 (+ t (/ t t)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.004125,
    "avg_bits_err_output": 0.0045,
    "avg_bits_err_improve": -0.00037499999999999947,
    "time": 10708.841796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.0085,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 0,
    "time": 8297.33056640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ (/ (* (/ t (+ t 1.0)) (* t 8.0)) (+ t 1.0)) 2.0) (+ 4.0 (/ (* (/ t (+ t 1.0)) (* t 8.0)) (+ t 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.046573120312590144,
    "avg_bits_err_output": 0.08669812031259015,
    "avg_bits_err_improve": -0.04012500000000001,
    "time": 9220.0849609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3638.839111328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2248.37841796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2317.971435546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.868468556723507,
    "avg_bits_err_output": 0.2465,
    "avg_bits_err_improve": 7.621968556723507,
    "time": 20309.070556640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.2546251846211645,
    "avg_bits_err_output": 7.2546251846211645,
    "avg_bits_err_improve": 0,
    "time": 3979.1953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.755211617548808,
    "avg_bits_err_output": 15.755211617548808,
    "avg_bits_err_improve": 0,
    "time": 8070.15869140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log (log (+ 1.0 (expm1 (exp (cos x)))))) (if (!= (exp (* 10.0 (* x x))) 0.0) (/ 1.0 (/ 1.0 (exp (* 10.0 (* x x))))) (exp (* 10.0 (* x x)))))",
    "output_parens": 20,
    "avg_bits_err_input": 3.532546884364404,
    "avg_bits_err_output": 3.534616992927156,
    "avg_bits_err_improve": -0.0020701085627519156,
    "time": 17173.415771484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 15.344769544218986,
    "avg_bits_err_output": 0.0975607748392475,
    "avg_bits_err_improve": 15.24720876937974,
    "time": 11563.032958984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.849550129934634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.849550129934634,
    "time": 3760.670654296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14092750219331,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.140427502193305,
    "time": 3747.6669921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2525,
    "avg_bits_err_improve": 63.7475,
    "time": 26417.106689453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325466514815,
    "avg_bits_err_output": 0.393875,
    "avg_bits_err_improve": 61.44937966514815,
    "time": 7665.756103515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.06103919246469,
    "avg_bits_err_output": 34.06103919246469,
    "avg_bits_err_improve": 0,
    "time": 28395.57763671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9724835388945,
    "avg_bits_err_output": 33.9724835388945,
    "avg_bits_err_improve": 0,
    "time": 27611.223876953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2548.73828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.804810527354064,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 39.79293552735406,
    "time": 3129.755126953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.48084172065822,
    "avg_bits_err_output": 20.48084172065822,
    "avg_bits_err_improve": 0,
    "time": 5012.8671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6571481356869886,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6571481356869886,
    "time": 8331.213623046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.040125,
    "avg_bits_err_improve": 0,
    "time": 4107.12548828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02239624062518029,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.011021240625180291,
    "time": 3793.954833984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.01425,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 0,
    "time": 2518.290771484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0,
    "time": 1636.88671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.41169605312878627,
    "avg_bits_err_output": 0.239125,
    "avg_bits_err_improve": 0.17257105312878626,
    "time": 5565.06396484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (exp (log1p (- 1.0 (cos x)))) 0.0) (/ (+ (* (- 1.0 (cos x)) (- 2.0 (cos x))) (+ (fma (- (cos x)) (- 1.0 (cos x)) (fma (cos x) (cos x) (* (cos x) (- 1.0 (+ (cos x) (cos x)))))) (fma (- (cos x)) (- 1.0 (cos x)) (* (cos x) (- 1.0 (cos x)))))) (exp (log1p (- 1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 43,
    "avg_bits_err_input": 30.224150718920463,
    "avg_bits_err_output": 30.22802290457151,
    "avg_bits_err_improve": -0.0038721856510477437,
    "time": 17909.22802734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.325377732130907,
    "avg_bits_err_output": 24.325377732130907,
    "avg_bits_err_improve": 0,
    "time": 11367.218505859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (if (!= (- (sin x) x) 0.0) (/ 1.0 (/ 1.0 (- x (sin x)))) (- x (sin x))) (tan x))",
    "output_parens": 12,
    "avg_bits_err_input": 29.580091874103584,
    "avg_bits_err_output": 29.58016886394595,
    "avg_bits_err_improve": -7.698984236625961e-05,
    "time": 31771.365234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590144,
    "avg_bits_err_output": 0.001625,
    "avg_bits_err_improve": 0.004948120312590144,
    "time": 2511.402587890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -6.5e-174) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 8e+127) (- 1.0 (+ (fma (- (pow (+ (/ i n) 1.0) n)) (/ 100.0 (/ i n)) (* 100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n)))) (- (+ (/ 100.0 (/ i n)) 1.0) (* 100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n)))))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 87,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 44.12123101854363,
    "avg_bits_err_improve": 3.60842874560376,
    "time": 28913.448486328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* (/ d (fma d d (* c c))) b) (* a (/ c (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 25.436088356440877,
    "avg_bits_err_output": 22.405565882451143,
    "avg_bits_err_improve": 3.030522473989734,
    "time": 11417.414306640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* (if (!= (/ c (fma c c (* d d))) 0.0) (* c (/ (/ c c) (fma c c (* d d)))) (/ (- (exp (log1p (/ c c))) 1.0) (+ c (* d (/ d c))))) b) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 24,
    "avg_bits_err_input": 25.623499127443804,
    "avg_bits_err_output": 13.621071175257132,
    "avg_bits_err_improve": 12.002427952186672,
    "time": 15057.554931640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (fma ux (+ maxCos -1.0) 1.0) 0.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035,
    "avg_bits_err_output": 0.01800317066803707,
    "avg_bits_err_improve": 0.016996829331962934,
    "time": 8038.97412109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (log (+ 1.0 (- (exp (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))) 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.505415196103039,
    "avg_bits_err_output": 12.363150541354118,
    "avg_bits_err_improve": 1.1422646547489208,
    "time": 25586.3837890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (+ ux ux) (* ux (+ ux (fma maxCos (fma ux maxCos (- 1.0 ux)) (- maxCos (* ux maxCos))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.548809366169355,
    "avg_bits_err_output": 0.3145641807532264,
    "avg_bits_err_improve": 13.234245185416128,
    "time": 27916.49853515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.34026445899576524,
    "avg_bits_err_output": 0.3253475178242654,
    "avg_bits_err_improve": 0.014916941171499831,
    "time": 42416.345947265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20140481469338017,
    "avg_bits_err_output": 0.20140481469338017,
    "avg_bits_err_improve": 0,
    "time": 19989.116943359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(/ (/ (* (sqrt (+ (/ u1 (- 4.0 (* u1 4.0))) (if (!= (* u1 (/ 1.5 (- -2.0 (* u1 -2.0)))) 0.0) (/ 2.0 (/ 2.6666666666666665 (/ u1 (- 1.0 u1)))) (* u1 (/ 1.5 (- 2.0 (+ u1 u1))))))) (sin (* 6.28318530718 u2))) 1.0) 1.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.542935509015052,
    "avg_bits_err_output": 0.5340001421674399,
    "avg_bits_err_improve": 0.008935366847612203,
    "time": 26371.36767578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log1p (expm1 (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32672121110921293,
    "avg_bits_err_output": 0.32806273203742087,
    "avg_bits_err_improve": -0.0013415209282079399,
    "time": 17475.826171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.32466646930498516,
    "avg_bits_err_output": 0.32526353104977934,
    "avg_bits_err_improve": -0.0005970617447941806,
    "time": 53927.58544921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.062307858716118235,
    "avg_bits_err_output": 0.062307858716118235,
    "avg_bits_err_improve": 0,
    "time": 14953.271728515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (fma s (exp (/ (fabs x) (- s))) s)) (+ (exp (/ (fabs x) (- s))) 1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13040594065941177,
    "avg_bits_err_output": 0.11885608693123609,
    "avg_bits_err_improve": 0.011549853728175685,
    "time": 16146.427490234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6827529928988721,
    "avg_bits_err_output": 0.6889228779478774,
    "avg_bits_err_improve": -0.006169885049005286,
    "time": 19146.2197265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.15776153656422884,
    "avg_bits_err_output": 0.15776153656422884,
    "avg_bits_err_improve": 0,
    "time": 17332.6591796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.668334903845633,
    "avg_bits_err_output": 2.668334903845633,
    "avg_bits_err_improve": 0,
    "time": 33930.787353515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (* (* cosTheta_i (/ (exp (* sinTheta_O (- (/ sinTheta_i v)))) (+ v v))) (/ 1.0 v)) (/ cosTheta_O (sinh (/ 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.45579228081252515,
    "avg_bits_err_output": 0.35783174480791863,
    "avg_bits_err_improve": 0.09796053600460652,
    "time": 22761.7958984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.10260851389960937,
    "avg_bits_err_output": 0.10205962149566168,
    "avg_bits_err_improve": 0.00054889240394769,
    "time": 8507.134521484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (- 1.0 (* alpha alpha)) (log (* alpha alpha))) PI) (- -1.0 (- (* (* alpha alpha) (* cosTheta cosTheta)) (* cosTheta cosTheta))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.46990039415795626,
    "avg_bits_err_output": 0.4712684699298749,
    "avg_bits_err_improve": -0.0013680757719186643,
    "time": 23962.822509765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) s))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3279020321432367,
    "avg_bits_err_output": 1.2188335471514307,
    "avg_bits_err_improve": 0.10906848499180599,
    "time": 25847.7568359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(if (!= (- (* s (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) (- s)) 0.0) (+ (* (* s (log (/ 1.0 (fma u -4.0 1.0)))) (/ (* s (- (log (/ 1.0 (fma u -4.0 1.0))) -2.0)) (* s (- (log (/ 1.0 (fma u -4.0 1.0))) -2.0)))) (/ (fma (* s (- -1.0 (log (/ 1.0 (fma u -4.0 1.0))))) (fma s (log (/ 1.0 (fma u -4.0 1.0))) s) (* (fma s (log (/ 1.0 (fma u -4.0 1.0))) s) (fma s (log (/ 1.0 (fma u -4.0 1.0))) s))) (* (- (log (/ 1.0 (fma u -4.0 1.0))) -2.0) (- s)))) (* s (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 56,
    "avg_bits_err_input": 12.385976548948085,
    "avg_bits_err_output": 12.241183461078917,
    "avg_bits_err_improve": 0.1447930878691679,
    "time": 31868.150634765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* 2.0 PI) (* r s))) (/ (* (exp (/ (/ r s) -3.0)) (/ 0.125 r)) (* s PI)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.1447449350722043,
    "avg_bits_err_output": 0.15274246785258225,
    "avg_bits_err_improve": -0.007997532780377958,
    "time": 23993.222900390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i (* (/ (sin (* normAngle u)) (sin normAngle)) n1_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9024449258931355,
    "avg_bits_err_output": 0.7403937824327652,
    "avg_bits_err_improve": 0.1620511434603703,
    "time": 23962.6806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6945803313842076,
    "avg_bits_err_output": 0.46535455058141595,
    "avg_bits_err_improve": 0.22922578080279166,
    "time": 22002.785888671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (log (- 1.0 u1)) 0.0) (/ 1.0 (/ 1.0 (log (- 1.0 u1)))) (log (- 1.0 u1))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 13.570361051648597,
    "avg_bits_err_output": 13.573430648589495,
    "avg_bits_err_improve": -0.003069596940898478,
    "time": 22384.590576171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (!= (cos (* 2.0 (* PI u2))) 0.0) (+ (/ 1.0 (/ 1.0 (cos (* 2.0 (* PI u2))))) (/ (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (log (+ 1.0 (expm1 (* (cos (* 2.0 (* PI u2))) (cos (* 2.0 (* PI u2)))))))) (cos (* 2.0 (* PI u2))))) (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2)))))",
    "output_parens": 39,
    "avg_bits_err_input": 13.617788886988382,
    "avg_bits_err_output": 13.273218390286525,
    "avg_bits_err_improve": 0.34457049670185746,
    "time": 29897.636474609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (- alpha) (if (!= (log (- 1.0 u0)) 0.0) (/ (* alpha (* (log (- 1.0 u0)) (log (- 1.0 u0)))) (log (- 1.0 u0))) (* (log (- 1.0 u0)) alpha)))",
    "output_parens": 18,
    "avg_bits_err_input": 13.988949961053551,
    "avg_bits_err_output": 13.995138909145581,
    "avg_bits_err_improve": -0.006188948092029634,
    "time": 20922.55712890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.657846703115,
    "avg_bits_err_output": 12.662237133242364,
    "avg_bits_err_improve": -0.004390430127363842,
    "time": 19026.10546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (* PI l)) F) F))",
    "output_parens": 6,
    "avg_bits_err_input": 16.51630223095017,
    "avg_bits_err_output": 12.149131688793489,
    "avg_bits_err_improve": 4.367170542156682,
    "time": 20034.925048828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.210761842188131,
    "avg_bits_err_output": 0.15275,
    "avg_bits_err_improve": 0.05801184218813099,
    "time": 18616.820068359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.812547798383543,
    "avg_bits_err_output": 10.664861573467572,
    "avg_bits_err_improve": 3.1476862249159705,
    "time": 24198.748046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))) (/ (- (expm1 (* PI (/ f 4.0))) (+ (- (exp (* PI (/ f -4.0))) (exp (log1p (exp (* PI (/ f 4.0)))))) (exp (* PI (/ f -4.0))))) 2.0))) (/ PI -4.0))",
    "output_parens": 29,
    "avg_bits_err_input": 61.69592345952694,
    "avg_bits_err_output": 44.00533079069575,
    "avg_bits_err_improve": 17.690592668831187,
    "time": 182282.38256835938,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.855677604555986,
    "avg_bits_err_output": 34.11662580846703,
    "avg_bits_err_improve": 8.739051796088958,
    "time": 25261.2255859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8710282331018293,
    "avg_bits_err_output": 3.8710282331018293,
    "avg_bits_err_improve": 0,
    "time": 25202.7529296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (- (sqrt (- (* (pow (* 2.0 (/ l Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)) -1.0) 1.0)) 0.5)))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0442544754655605,
    "avg_bits_err_output": 1.0465044754655606,
    "avg_bits_err_improve": -0.0022500000000000853,
    "time": 13268.668701171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.231380863159591,
    "avg_bits_err_output": 10.231380863159591,
    "avg_bits_err_improve": 0,
    "time": 14348.30859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* U (* 2.0 (* n (- t (fma 2.0 (* l (/ l Om)) (* (pow (/ l Om) 2.0) (* n (- U U*))))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+300) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (+ (* (/ l (+ Om Om)) l) (* (/ l (+ Om Om)) l)))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* U (* (- t (* 2.0 (* l (/ l Om)))) (* 2.0 n))) (* (* n (pow (/ l Om) 2.0)) (* (* 2.0 n) (* U (- U U*))))))))",
    "output_parens": 79,
    "avg_bits_err_input": 34.9832577964157,
    "avg_bits_err_output": 29.515793325773874,
    "avg_bits_err_improve": 5.467464470641826,
    "time": 34613.94189453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ (sin k) l)) (/ 1.0 (tan k)))",
    "output_parens": 12,
    "avg_bits_err_input": 47.14853979378786,
    "avg_bits_err_output": 35.78354328779232,
    "avg_bits_err_improve": 11.364996505995542,
    "time": 43926.253662109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (* (+ 2.0 (pow (/ k t) 2.0)) (/ (pow t 3.0) l)) (sin k)) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.55534704050198,
    "avg_bits_err_output": 27.82588479820318,
    "avg_bits_err_improve": 4.729462242298798,
    "time": 19810.900390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* (cos th) (* a1 a1)) (* (cos th) (* a2 a2))) (sqrt 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.4899924843993411,
    "avg_bits_err_output": 0.43412161876694827,
    "avg_bits_err_improve": 0.05587086563239285,
    "time": 23546.74462890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.48712105639185577,
    "avg_bits_err_output": 0.44234850949911114,
    "avg_bits_err_improve": 0.044772546892744625,
    "time": 18247.8544921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (fma (exp (- l)) (- (cos (/ K 2.0))) (* (exp l) (cos (/ K 2.0)))) U)",
    "output_parens": 11,
    "avg_bits_err_input": 16.93383418685015,
    "avg_bits_err_output": 16.935209605758295,
    "avg_bits_err_improve": -0.0013754189081467416,
    "time": 22292.72900390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) (* (cos (- (/ (if (!= (* K n) 0.0) (fma (* K K) (* n (/ n (* K n))) (* (* n m) (/ (* K K) (* K n)))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))))",
    "output_parens": 63,
    "avg_bits_err_input": 14.87102626627843,
    "avg_bits_err_output": 13.757606503930068,
    "avg_bits_err_improve": 1.1134197623483608,
    "time": 8822.24560546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(- (* (- (sqrt (+ 1.0 (pow (/ U (* (+ J J) (cos (/ K 2.0)))) 2.0))) -1.0) (* J (* (cos (/ K 2.0)) -2.0))) (* J (* (cos (/ K 2.0)) -2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 17.872313721875543,
    "avg_bits_err_output": 17.88750488750217,
    "avg_bits_err_improve": -0.015191165626628589,
    "time": 30371.192626953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l)))) (if (<= (/ h l) -1e-224) (* w0 (sqrt (- 1.0 (if (!= (* (pow (* D (/ (/ M d) 2.0)) 2.0) (/ h l)) 0.0) (/ 1.0 (/ (/ 1.0 (/ h l)) (pow (* M (/ D (+ d d))) 2.0))) (* (pow (* D (/ (/ M d) 2.0)) 2.0) (/ h l)))))) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l))))))",
    "output_parens": 50,
    "avg_bits_err_input": 13.919590528764356,
    "avg_bits_err_output": 10.331701535129284,
    "avg_bits_err_improve": 3.5878889936350724,
    "time": 25110.734619140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 0.0) (* c0 (sqrt (/ (/ A V) l))) (if (<= (/ A (* V l)) 2e+293) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (/ A l) V)))))",
    "output_parens": 20,
    "avg_bits_err_input": 19.01020085077524,
    "avg_bits_err_output": 14.635772002089018,
    "avg_bits_err_improve": 4.3744288486862235,
    "time": 19913.829833984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -2e+68) (* (/ c0 (* 2.0 w)) (if (!= (* (* c0 d) (/ d (* D (* h (* D w))))) 0.0) (+ (/ 1.0 (/ 1.0 (* (* c0 d) (/ d (* D (* h (* D w))))))) (/ (* (* (* c0 d) (/ d (* D (* h (* D w))))) (sqrt (* (fma (* c0 d) (/ d (* D (* h (* D w)))) M) (- (* (* c0 d) (/ d (* D (* h (* D w))))) M)))) (* (* c0 d) (/ d (* D (* h (* D w))))))) (fma c0 (* d (/ d (* D (* h (* D w))))) (sqrt (* (fma (* c0 d) (/ d (* D (* h (* D w)))) M) (- (* (* c0 d) (/ d (* D (* h (* D w))))) M)))))) (if (<= d -1.68e-159) (* (/ c0 (* 2.0 w)) (fma (/ (/ (* d (* d c0)) D) (* (* w h) D)) 1.0 (sqrt (* (fma (* d d) (/ (/ c0 D) (* (* w h) D)) M) (- (/ (/ (* d (* d c0)) D) (* (* w h) D)) M))))) (* (/ c0 (* 2.0 w)) (+ (* (* c0 d) (/ d (* D (* h (* D w))))) (sqrt (* (fma (* c0 d) (/ d (* D (* h (* D w)))) M) (- (* (* c0 d) (/ d (* D (* h (* D w))))) M)))))))",
    "output_parens": 124,
    "avg_bits_err_input": 59.29488111332215,
    "avg_bits_err_output": 55.414500885887605,
    "avg_bits_err_improve": 3.880380227434543,
    "time": 44719.22705078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* D (/ M (+ d d))) 2.0) (+ l l)))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.725104960433168,
    "avg_bits_err_output": 25.97990763713058,
    "avg_bits_err_improve": 0.7451973233025875,
    "time": 38947.32958984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (- 1.0 (- (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 1.0) 1.0)) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 29,
    "avg_bits_err_input": 15.265705062211147,
    "avg_bits_err_output": 14.795628765966676,
    "avg_bits_err_improve": 0.47007629624447134,
    "time": 6565.44384765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9835490396778473,
    "avg_bits_err_output": 0.014893400615617778,
    "avg_bits_err_improve": 0.9686556390622296,
    "time": 3155.900390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (fma v (* v 5.0) -1.0) (* (- PI) (sqrt (- 2.0 (* v (* v 6.0)))))) (- t (* v (* v t))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44247189432537193,
    "avg_bits_err_output": 0.11219832382517222,
    "avg_bits_err_improve": 0.3302735705001997,
    "time": 18095.658935546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.013216520928207924,
    "avg_bits_err_output": 0.013216520928207924,
    "avg_bits_err_improve": 0,
    "time": 3286.877685546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5169218506131418,
    "avg_bits_err_output": 0.5169218506131418,
    "avg_bits_err_improve": 0,
    "time": 8612.076171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0931415881287134,
    "avg_bits_err_output": 2.075818467816123,
    "avg_bits_err_improve": 0.017323120312590312,
    "time": 17193.399169921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- Vef (- Ec (+ mu EDonor))) KbT)))) (/ NaChar (+ 2.0 (expm1 (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.015361468716510129,
    "avg_bits_err_output": 0.014538348403919982,
    "avg_bits_err_improve": 0.0008231203125901466,
    "time": 12624.72900390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (if (!= (* (* b b) 4.0) 0.0) (* (fma b (* b 4.0) (pow (fma b b (* a a)) 2.0)) (* b (/ b (* b b)))) (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.17933914418249194,
    "avg_bits_err_output": 0.2930024954309928,
    "avg_bits_err_improve": -0.11366335124850088,
    "time": 17685.3837890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18458191605492125,
    "avg_bits_err_output": 0.18458191605492125,
    "avg_bits_err_improve": 0,
    "time": 26142.15234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18646520187983545,
    "avg_bits_err_output": 0.18646520187983545,
    "avg_bits_err_improve": 0,
    "time": 21883.577880859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (+ (+ (/ x (* 2.0 (* (sqrt (fma 4.0 (* p p) (* x x))) 8.0))) (/ (+ (+ x x) (+ (+ x (+ x x)) (+ (+ x x) (+ x x)))) (* 2.0 (* (sqrt (fma 4.0 (* p p) (* x x))) 8.0)))) (/ x (* 4.0 (* (sqrt (fma 4.0 (* p p) (* x x))) 2.0))))))))",
    "output_parens": 42,
    "avg_bits_err_input": 13.173163709861829,
    "avg_bits_err_output": 13.227852861638436,
    "avg_bits_err_improve": -0.05468915177660705,
    "time": 17542.654541015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.89116367628887,
    "avg_bits_err_output": 0.0485,
    "avg_bits_err_improve": 40.84266367628887,
    "time": 6487.693115234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log1p (log1p (expm1 (expm1 (/ (- x (sin x)) (- x (tan x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 31.729140590893675,
    "avg_bits_err_output": 31.730764873427358,
    "avg_bits_err_improve": -0.0016242825336831856,
    "time": 22753.544189453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.53619996649882,
    "avg_bits_err_output": 33.53619996649882,
    "avg_bits_err_improve": 0,
    "time": 14999.54345703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (+ (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (sqrt (- (* b_2 b_2) (* a c))))) (+ a a))",
    "output_parens": 14,
    "avg_bits_err_input": 33.7289563848553,
    "avg_bits_err_output": 33.7302678664037,
    "avg_bits_err_improve": -0.001311481548398774,
    "time": 15260.2041015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (* (cos x) (/ -2.0 x)) (/ 2.0 x)) (+ x x))",
    "output_parens": 7,
    "avg_bits_err_input": 31.625737249144954,
    "avg_bits_err_output": 30.914940443431533,
    "avg_bits_err_improve": 0.7107968057134215,
    "time": 15811.65576171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.77697784492157,
    "avg_bits_err_output": 32.77697784492157,
    "avg_bits_err_improve": 0,
    "time": 15971.186767578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (exp (- (log1p N) (log N))))",
    "output_parens": 5,
    "avg_bits_err_input": 30.06302376670628,
    "avg_bits_err_output": 30.061670191088467,
    "avg_bits_err_improve": 0.0013535756178129077,
    "time": 11750.287841796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (+ (/ -0.5 x) (/ 1.0 (+ x (+ x 2.0)))) (/ (+ -1.0 (/ 2.0 (if (!= (/ 2.0 x) 0.0) (/ (+ (* (/ 2.0 x) (/ 2.0 x)) (* (/ 2.0 x) (* 2.0 (/ x x)))) (/ 2.0 x)) (/ (fma 2.0 x 2.0) x)))) (+ x x)))",
    "output_parens": 25,
    "avg_bits_err_input": 13.664943789160496,
    "avg_bits_err_output": 13.690358677648359,
    "avg_bits_err_improve": -0.02541488848786244,
    "time": 14779.22509765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (- (cos (+ x eps)) (if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (/ 1.0 (+ (cos x) -1.0))) (+ (cos x) -1.0))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 39.57246204492315,
    "avg_bits_err_output": 39.59666690858818,
    "avg_bits_err_improve": -0.024204863665033827,
    "time": 17069.933837890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.527942284184142,
    "avg_bits_err_output": 30.527942284184142,
    "avg_bits_err_improve": 0,
    "time": 10170.06298828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ 0.5 (sin x)) (/ (- 0.5 (cos x)) (sin x)))",
    "output_parens": 7,
    "avg_bits_err_input": 30.226092642270725,
    "avg_bits_err_output": 30.275182504142734,
    "avg_bits_err_improve": -0.04908986187200881,
    "time": 20914.197998046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* c (* a 4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8680721684986,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": -0.02072783024534175,
    "time": 20568.9384765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.8941878028341,
    "avg_bits_err_output": 33.914625700394,
    "avg_bits_err_improve": -0.02043789755990133,
    "time": 20615.918701171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (fma (/ (- 0.5 (* (log (- 1.0 x)) 0.5)) (- (log1p x))) 1.0 (/ (+ (* (log (- 1.0 x)) 0.5) 1.5) (log1p x))) (/ 1.0 (log1p x)))",
    "output_parens": 17,
    "avg_bits_err_input": 61.33709469106678,
    "avg_bits_err_output": 59.72222322297336,
    "avg_bits_err_improve": 1.614871468093419,
    "time": 22059.163330078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.0022783914742,
    "avg_bits_err_output": 44.23671744432036,
    "avg_bits_err_improve": 18.765560947153837,
    "time": 10857.72998046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (if (!= (/ eps (- eps -1.0)) 0.0) (- (- (/ (/ eps (- eps -1.0)) eps) (/ 0.0 (- eps -1.0))) (/ 1.0 (/ 1.0 (/ eps (- eps -1.0))))) (/ (- 1.0 eps) (- eps -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 58.44410861979138,
    "avg_bits_err_output": 58.457286102332674,
    "avg_bits_err_improve": -0.013177482541294694,
    "time": 19909.809326171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (!= (/ 1.0 x) 0.0) (if (!= (- (/ 0.5 x) (/ 0.5 (tan x))) 0.0) (* (- (/ 0.5 x) (/ 0.5 (tan x))) (/ (- (/ 0.5 x) (/ 0.5 (tan x))) (/ (- 1.0 (/ x (tan x))) (* (+ x x) 2.0)))) (+ (/ -1.0 (tan x)) (/ 1.0 x))) (/ (- 1.0 (/ x (tan x))) x))",
    "output_parens": 33,
    "avg_bits_err_input": 59.86598605168939,
    "avg_bits_err_output": 59.882179857302724,
    "avg_bits_err_improve": -0.016193805613333723,
    "time": 26738.396240234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))) (expm1 (* eps b)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.25932700563275,
    "avg_bits_err_output": 29.174127042860317,
    "avg_bits_err_improve": 31.085199962772432,
    "time": 26244.2275390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.29180283119123,
    "avg_bits_err_output": 0.3900943609377705,
    "avg_bits_err_improve": 40.90170847025345,
    "time": 4635.09912109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.69584748524195,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.69584748524195,
    "time": 3237.355224609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.58006687886283,
    "avg_bits_err_output": 0.015464992043082168,
    "avg_bits_err_improve": 29.564601886819748,
    "time": 5308.8037109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp (- x)) (- (exp x) -2.0)) 0.0) (/ (if (!= (fma (exp (- x)) 2.0 -4.0) 0.0) (/ (fma (fma (exp (- x)) 2.0 -4.0) (- (* (exp (- x)) (- (exp (- x)) 2.0)) (* (exp x) (exp x))) (- (* (fma (exp (- x)) 2.0 -4.0) (fma (exp (- x)) 2.0 -4.0)))) (fma (exp (- x)) 2.0 -4.0)) (- (* (- (exp (- x)) 2.0) (- (exp (- x)) 2.0)) (* (exp x) (exp x)))) (- 2.0 (- (exp (- x)) (exp x)))) (- 2.0 (+ (exp (- x)) (exp x)))))",
    "output_parens": 61,
    "avg_bits_err_input": 29.587006303554848,
    "avg_bits_err_output": 29.267185770629556,
    "avg_bits_err_improve": 0.31982053292529145,
    "time": 18671.82763671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (if (!= (- (/ 2.0 x) (/ 1.0 (+ 1.0 x))) 0.0) (/ 1.0 (/ 2.0 (- (/ 2.0 (+ 1.0 x)) (/ 4.0 x)))) (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x))) (/ 1.0 (- x 1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 9.74572717208754,
    "avg_bits_err_output": 9.756174923006128,
    "avg_bits_err_improve": -0.010447750918588739,
    "time": 31587.09033203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (if (!= (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps))) 0.0) (/ (* (tan (+ x eps)) (- (* (tan (+ x eps)) (/ (tan (+ x eps)) (tan (+ x eps)))) (/ (* (tan x) (* (tan x) (/ (tan (+ x eps)) (tan (+ x eps))))) (tan (+ x eps))))) (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps)))) (* (- (tan (+ x eps)) (tan x)) (/ (tan (+ x eps)) (tan (+ x eps))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 65,
    "avg_bits_err_input": 36.990941654153616,
    "avg_bits_err_output": 37.024317293372924,
    "avg_bits_err_improve": -0.033375639219308084,
    "time": 18260.4462890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (log1p (expm1 (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 30.42149008764258,
    "avg_bits_err_output": 29.731287806847043,
    "avg_bits_err_improve": 0.690202280795539,
    "time": 14482.530029296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (if (!= (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps))) 0.0) (/ (* (sin (+ x eps)) (- (* (sin (+ x eps)) (/ (sin (+ x eps)) (sin (+ x eps)))) (/ (* (sin x) (* (sin x) (/ (sin (+ x eps)) (sin (+ x eps))))) (sin (+ x eps))))) (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps)))) (* (- (sin (+ x eps)) (sin x)) (/ (sin (+ x eps)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 65,
    "avg_bits_err_input": 37.503821979855935,
    "avg_bits_err_output": 37.525568322472765,
    "avg_bits_err_improve": -0.021746342616829395,
    "time": 17622.338134765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (/ (/ (if (!= (/ 1.0 (sqrt x)) 0.0) (/ (- 1.0 (/ (sqrt x) (sqrt (+ 1.0 x)))) (sqrt x)) (+ (/ 1.0 (sqrt x)) (/ -1.0 (sqrt (+ 1.0 x))))) (sqrt (+ 1.0 x))) (/ 1.0 (sqrt x))) (/ (/ -1.0 (sqrt (+ 1.0 x))) (/ -1.0 (sqrt x))))",
    "output_parens": 30,
    "avg_bits_err_input": 19.814181388769363,
    "avg_bits_err_output": 19.81261814556177,
    "avg_bits_err_improve": 0.0015632432075918246,
    "time": 13842.26806640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (- (atan (+ N 1.0)) (atan N)) 0.0) (/ 1.0 (/ 1.0 (- (atan (+ N 1.0)) (atan N)))) (- (atan (+ N 1.0)) (atan N)))",
    "output_parens": 16,
    "avg_bits_err_input": 14.277424160347712,
    "avg_bits_err_output": 14.28094618961344,
    "avg_bits_err_improve": -0.0035220292657278662,
    "time": 7586.8662109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 28.96638773513798,
    "avg_bits_err_output": 28.96638773513798,
    "avg_bits_err_improve": 0,
    "time": 34458.12548828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.08487256701560164,
    "avg_bits_err_output": 0.07850696545265091,
    "avg_bits_err_improve": 0.006365601562950726,
    "time": 12094.232666015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(fma (* a b) (* b (* a -2.0)) (* (* b a) (* b a)))",
    "output_parens": 7,
    "avg_bits_err_input": 16.087441263329783,
    "avg_bits_err_output": 0.36751297188996457,
    "avg_bits_err_improve": 15.719928291439818,
    "time": 10111.675048828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= PI 0.0) (/ (* PI (fma PI (+ (/ angle 180.0) 1.0) (- PI))) PI) (fma PI (+ (/ angle 180.0) 1.0) (- PI))))) 2.0) (pow (* b (sin (/ (* PI angle) 180.0))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.348666461291202,
    "avg_bits_err_output": 20.374166965796682,
    "avg_bits_err_improve": -0.025500504505480137,
    "time": 28024.20458984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.37059061946111,
    "avg_bits_err_output": 31.37059061946111,
    "avg_bits_err_improve": 0,
    "time": 33485.6337890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* (/ angle 180.0) PI) 0.0) (/ 1.0 (/ 1.0 (* (/ angle 180.0) PI))) (* (/ angle 180.0) PI)))) 2.0) (pow (* b (cos (/ (if (!= (- (* PI (+ angle (+ angle (+ angle (+ angle angle))))) (* PI (+ angle (+ angle angle)))) 0.0) (* (- (* PI (+ angle (+ angle (+ angle (+ angle angle))))) (* PI (+ angle (+ angle angle)))) (/ (* PI (* (- (- angle) (+ angle (+ angle angle))) -2.0)) (log1p (expm1 (* PI (+ angle angle)))))) (* PI (* (- (- angle) (+ angle (+ angle angle))) -2.0))) 1440.0))) 2.0))",
    "output_parens": 56,
    "avg_bits_err_input": 20.541261682835103,
    "avg_bits_err_output": 20.638827804399345,
    "avg_bits_err_improve": -0.09756612156424183,
    "time": 34513.6181640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18474279776851638,
    "avg_bits_err_output": 0.18260642424864698,
    "avg_bits_err_improve": 0.0021363735198693945,
    "time": 14507.2109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3180175992242749,
    "avg_bits_err_output": 0.3176061407913269,
    "avg_bits_err_improve": 0.00041145843294804196,
    "time": 17082.119384765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13227124062518028,
    "avg_bits_err_output": 0.13227124062518028,
    "avg_bits_err_improve": 0,
    "time": 14478.293701171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.004589539228938,
    "avg_bits_err_output": 17.003400863830354,
    "avg_bits_err_improve": 0.001188675398584138,
    "time": 32995.072998046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.15e+16) (fma (sqrt (fma a (* -4.0 c) (* b b))) (/ 0.5 a) (- (* b (/ 0.5 a)))) (/ (- (- (- (+ (+ (sqrt (fma c (* a -4.0) (* b b))) 1.0) 1.0) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 52.31160300809916,
    "avg_bits_err_output": 50.243282511918835,
    "avg_bits_err_improve": 2.068320496180327,
    "time": 30419.9716796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (/ (if (!= (+ (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))) 0.0) (/ (fma (+ (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))) (+ (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))) (* (+ (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))) (+ (fma -4.0 b (sqrt (fma a (* -4.0 c) (* b b)))) (fma (- (sqrt (fma a (* -4.0 c) (* b b))) b) 4.0 (sqrt (fma a (* -4.0 c) (* b b))))))) (+ (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))))) (+ (fma (- (sqrt (fma a (* -4.0 c) (* b b))) b) 4.0 (+ (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))))) (+ (sqrt (fma a (* -4.0 c) (* b b))) (fma -4.0 b (sqrt (fma a (* -4.0 c) (* b b))))))) a) 16.0)",
    "output_parens": 94,
    "avg_bits_err_input": 28.508292504147214,
    "avg_bits_err_output": 28.143540050598382,
    "avg_bits_err_improve": 0.36475245354883157,
    "time": 49133.87548828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (- (- b) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0)) 0.0) (- (/ (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (- (sqrt (fma a (* c -4.0) (* b b)))) (* b b)) (* a 2.0)) (- (- b) (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (/ (- (sqrt (fma b b (* a (* c -4.0)))) b) (* a 2.0)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.87748042462839,
    "avg_bits_err_output": 42.742626812054134,
    "avg_bits_err_improve": 1.134853612574254,
    "time": 34169.41943359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.88879999874394,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": 0,
    "time": 17895.97900390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (expm1 (log1p (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8908471282957333,
    "avg_bits_err_output": 0.9031712397106962,
    "avg_bits_err_improve": -0.012324111414962924,
    "time": 21728.663818359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))) 0.0) (if (!= (/ 16.0 (* (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)) (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))))) 0.0) (- (- (/ (/ 16.0 (* (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)) (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))))) (/ 16.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (/ 0.0 (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))))) (/ 1.0 (/ 1.0 (/ 16.0 (* (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)) (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))))))) (/ (- 1.0 (/ 16.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))))) (- 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 159,
    "avg_bits_err_input": 29.039778307518205,
    "avg_bits_err_output": 29.00505720315181,
    "avg_bits_err_improve": 0.03472110436639397,
    "time": 22717.248291015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (- (exp x) (/ (exp (- x)) 2.0)) (/ (exp (- x)) 2.0)) (+ (exp x) (exp (- x))))",
    "output_parens": 14,
    "avg_bits_err_input": 58.189138759505,
    "avg_bits_err_output": 58.19118118082674,
    "avg_bits_err_improve": -0.002042421321739596,
    "time": 16178.476806640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (if (!= (- (exp x) (- (exp (- x)))) 0.0) (/ (- (+ (fma (- (exp (- x))) (- (exp (- x))) (* (exp (- x)) (- (exp (- x))))) (* (+ (exp (- x)) (exp x)) (- (exp (- x)) (exp x))))) (- (exp x) (- (exp (- x))))) (- (exp x) (exp (- x)))) 2.0)",
    "output_parens": 42,
    "avg_bits_err_input": 58.02941010114313,
    "avg_bits_err_output": 58.10159146658593,
    "avg_bits_err_improve": -0.07218136544280185,
    "time": 13559.234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008094360937770434,
    "avg_bits_err_output": 0.008094360937770434,
    "avg_bits_err_improve": 0,
    "time": 2864.262451171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.07325,
    "avg_bits_err_output": 32.07325,
    "avg_bits_err_improve": 0,
    "time": 5562.560546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.43124789208118,
    "avg_bits_err_output": 58.43124789208118,
    "avg_bits_err_improve": 0,
    "time": 17851.96044921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.04369812031259015,
    "avg_bits_err_output": 0.042863361324451066,
    "avg_bits_err_improve": 0.0008347589881390824,
    "time": 2351.252197265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh (tan t)) ew))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13021936093777042,
    "avg_bits_err_output": 0.1295,
    "avg_bits_err_improve": 0.0007193609377704191,
    "time": 24530.8876953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.122625,
    "avg_bits_err_output": 0.122625,
    "avg_bits_err_improve": 0,
    "time": 22697.40771484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 38.849716132013,
    "avg_bits_err_output": 3.58124714271852,
    "avg_bits_err_improve": 35.26846898929448,
    "time": 25054.092529296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.657914333518113,
    "avg_bits_err_output": 14.657914333518113,
    "avg_bits_err_improve": 0,
    "time": 5821.57861328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (if (!= (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta))))))) 0.0) (/ (- (* (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta))))))) (cos delta)) (* (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta))))))) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta))))))))) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta)))))))) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta)))))))))))",
    "output_parens": 88,
    "avg_bits_err_input": 0.16004668487053925,
    "avg_bits_err_output": 0.17260891485254964,
    "avg_bits_err_improve": -0.012562229982010398,
    "time": 36260.1767578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -3.0) (* b b))) 0.6666666666666666 (fma (sqrt (+ (* b b) (* a (* c -3.0)))) -0.3333333333333333 (/ (+ b b) -6.0))) a)",
    "output_parens": 14,
    "avg_bits_err_input": 52.33944271674547,
    "avg_bits_err_output": 50.431577910388064,
    "avg_bits_err_improve": 1.9078648063574022,
    "time": 28418.03759765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (+ (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (- (sqrt (fma c (* a -3.0) (* b b)))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) (- (- b) (sqrt (fma c (* a -3.0) (* b b))))) (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ (+ b (sqrt (fma c (* a -3.0) (* b b)))) (+ b (sqrt (fma c (* a -3.0) (* b b))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 59,
    "avg_bits_err_input": 28.646493578571594,
    "avg_bits_err_output": 28.178791058280456,
    "avg_bits_err_improve": 0.46770252029113735,
    "time": 29180.748779296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (+ (fma (- b) b (* b b)) (* b b))) 0.0) (* (if (!= (* b (- b)) 0.0) (/ (fma (* b b) (* b b) (* (* b b) (- (* b (fma b -1.0 b)) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))))) (* b (- b))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (/ (if (!= (* b b) 0.0) (/ (fma (* b b) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (* b b) (* b (- b)))) (* b b)) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (+ (fma (- b) b (* b b)) (* b b))))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 133,
    "avg_bits_err_input": 43.89042012060226,
    "avg_bits_err_output": 42.95134239517446,
    "avg_bits_err_improve": 0.9390777254278007,
    "time": 51953.4345703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.93005751268642,
    "avg_bits_err_output": 33.93005751268642,
    "avg_bits_err_improve": 0,
    "time": 18775.24658203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.362692445980375,
    "avg_bits_err_output": 13.362692445980375,
    "avg_bits_err_improve": 0,
    "time": 30477.584228515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.32578772281659,
    "avg_bits_err_output": 0.5284702927335423,
    "avg_bits_err_improve": 28.797317430083048,
    "time": 21177.313232421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (/ x (+ x (+ x 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011125,
    "avg_bits_err_output": 0.03607260624775762,
    "avg_bits_err_improve": -0.02494760624775762,
    "time": 7015.46533203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ (- 1.0 (/ x (+ x -1.0))) (+ 1.0 x)) (/ 1.0 (fma x x -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.143255548844879,
    "avg_bits_err_output": 12.275843664896744,
    "avg_bits_err_improve": 1.8674118839481348,
    "time": 16328.46142578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F) (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.36936568687435,
    "avg_bits_err_output": 52.12168872004511,
    "avg_bits_err_improve": 0.24767696682924623,
    "time": 41481.999267578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* (atan (* (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- C A)) (/ -1.0 B))) (/ 180.0 PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.552095268521562,
    "avg_bits_err_output": 29.550594482902067,
    "avg_bits_err_improve": 0.0015007856194948488,
    "time": 25545.478271484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* (- (pow B 2.0) (* A (* 4.0 C))) (* 2.0 F)))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.91519349146561,
    "avg_bits_err_output": 52.60708484901541,
    "avg_bits_err_improve": 0.3081086424502004,
    "time": 34382.22802734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.01564985920578,
    "avg_bits_err_output": 16.01564985920578,
    "avg_bits_err_improve": 0,
    "time": 1936.54931640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (+ (/ (* g (+ g (+ g (sqrt (- (* g g) (* h h)))))) (* g -2.0)) (/ (* g (sqrt (- (* g g) (* h h)))) (* g -2.0))) (- (- g) (sqrt (fma h (- h) (* g g))))))))",
    "output_parens": 38,
    "avg_bits_err_input": 35.977806423664475,
    "avg_bits_err_output": 35.92016332249889,
    "avg_bits_err_improve": 0.05764310116558846,
    "time": 16462.09375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9911727453198026,
    "avg_bits_err_output": 0.9777218046888523,
    "avg_bits_err_improve": 0.013450940630950314,
    "time": 5233.5390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (+ -1.0 (+ (exp a) 1.0)) (+ (exp a) (exp b)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.9006462406251803,
    "avg_bits_err_output": 1.0188299995149501,
    "avg_bits_err_improve": -0.11818375888976984,
    "time": 3003.54248046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-299) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e-287) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+208) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.103851474437171,
    "avg_bits_err_output": 3.210259701041634,
    "avg_bits_err_improve": 7.893591773395537,
    "time": 8730.43896484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5259289385955593,
    "avg_bits_err_output": 0.434375,
    "avg_bits_err_improve": 0.09155393859555933,
    "time": 14374.356201171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -116.0) (log (if (!= (+ 1.0 (exp (log1p (+ x (hypot 1.0 x))))) 0.0) (/ (- (* (if (!= (+ (+ x (+ 1.0 (hypot 1.0 x))) 2.0) 0.0) (/ (fma (+ 2.0 (+ x (hypot 1.0 x))) (+ 2.0 (+ x (hypot 1.0 x))) -1.0) (+ (+ x (+ 1.0 (hypot 1.0 x))) 2.0)) (+ x (+ 1.0 (hypot 1.0 x)))) (exp (log1p (+ x (hypot 1.0 x))))) 1.0) (+ 1.0 (exp (log1p (+ x (hypot 1.0 x)))))) (+ x (hypot 1.0 x)))) (log (+ x (hypot 1.0 x))))",
    "output_parens": 48,
    "avg_bits_err_input": 53.251528206832646,
    "avg_bits_err_output": 43.103982627187065,
    "avg_bits_err_improve": 10.14754557964558,
    "time": 18050.369140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.740628981971858,
    "avg_bits_err_output": 5.740628981971858,
    "avg_bits_err_improve": 0,
    "time": 13087.811767578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 0,
    "time": 2975.502197265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1213.135009765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.582187331450612,
    "avg_bits_err_output": 0.6024493636807774,
    "avg_bits_err_improve": 11.979737967769834,
    "time": 23032.28564453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5148986108851147,
    "avg_bits_err_output": 0.27579636952278613,
    "avg_bits_err_improve": 0.23910224136232855,
    "time": 66296.19482421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.313158470463996,
    "avg_bits_err_output": 1.409984404663397,
    "avg_bits_err_improve": 16.9031740658006,
    "time": 7599.7763671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2306079264948677,
    "avg_bits_err_output": 0.2306079264948677,
    "avg_bits_err_improve": 0,
    "time": 8425.78662109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2422.241943359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI (- b a)) (/ (- (/ 0.5 a) (/ 0.5 b)) (+ b a)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.656241829431005,
    "avg_bits_err_output": 0.28215432501298043,
    "avg_bits_err_improve": 14.374087504418025,
    "time": 15573.121337890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.178838880393464,
    "avg_bits_err_output": 24.517785991292307,
    "avg_bits_err_improve": 4.661052889101157,
    "time": 26663.6845703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ 2.0 (+ t (/ t t)))) (- 2.0 (/ 2.0 (+ t (/ t t))))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.0125,
    "avg_bits_err_output": 0.006125,
    "avg_bits_err_improve": 0.0063750000000000005,
    "time": 8079.566162109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (log (+ 1.0 (expm1 (* (- 2.0 (/ 2.0 (+ t (/ t t)))) (- 2.0 (/ 2.0 (+ (/ t t) t)))))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.01725,
    "avg_bits_err_output": 0.02569776774770735,
    "avg_bits_err_improve": -0.00844776774770735,
    "time": 12594.07080078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (+ 1.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0)))) (+ 4.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.04275,
    "avg_bits_err_output": 0.103625,
    "avg_bits_err_improve": -0.06087499999999999,
    "time": 16734.032958984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3433.61669921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2612.97119140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2695.771728515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.843910449075863,
    "avg_bits_err_output": 0.249875,
    "avg_bits_err_improve": 7.594035449075863,
    "time": 22546.50048828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.7158885577526855,
    "avg_bits_err_output": 7.7158885577526855,
    "avg_bits_err_improve": 0,
    "time": 3886.67431640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.11846614546361,
    "avg_bits_err_output": 16.11846614546361,
    "avg_bits_err_improve": 0,
    "time": 10054.525146484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (if (!= (+ 1.0 (exp (log1p (exp (* 10.0 (* x x)))))) 0.0) (/ (+ (* (exp (log1p (exp (* 10.0 (* x x))))) (exp (log1p (exp (* 10.0 (* x x)))))) -1.0) (+ 1.0 (exp (log1p (exp (* 10.0 (* x x))))))) (exp (* 10.0 (* x x)))) (+ 1.0 (+ (cos x) 1.0))) (* (exp (* 10.0 (* x x))) 2.0))",
    "output_parens": 39,
    "avg_bits_err_input": 3.5323393279850985,
    "avg_bits_err_output": 3.544218376566889,
    "avg_bits_err_improve": -0.011879048581790563,
    "time": 20160.271728515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -1e+55) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-31) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.29409370700576,
    "avg_bits_err_output": 0.024573120312590145,
    "avg_bits_err_improve": 15.26952058669317,
    "time": 8320.60205078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.96791563568305,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.96791563568305,
    "time": 4659.130126953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.30441054977922,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 38.30403554977922,
    "time": 4259.70068359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2985,
    "avg_bits_err_improve": 63.7015,
    "time": 25454.341552734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843251042012014,
    "avg_bits_err_output": 0.401875,
    "avg_bits_err_improve": 61.44137604201202,
    "time": 8192.268798828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.8941878028341,
    "avg_bits_err_output": 33.914625700394,
    "avg_bits_err_improve": -0.02043789755990133,
    "time": 23890.984619140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.88879999874394,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": 0,
    "time": 20169.34375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1841.240478515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.16383456716739,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 40.15370956716739,
    "time": 7098.670654296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.353977514116686,
    "avg_bits_err_output": 20.353977514116686,
    "avg_bits_err_improve": 0,
    "time": 5784.67041015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ (+ c b) (+ d a)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6186085787196505,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6186085787196505,
    "time": 6303.519775390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.036,
    "time": 5715.49560546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021969360937770434,
    "avg_bits_err_output": 0.01575,
    "avg_bits_err_improve": 0.006219360937770434,
    "time": 3416.9560546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01275,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.0013749999999999995,
    "time": 2124.357421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1425.3271484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3988729328161961,
    "avg_bits_err_output": 0.240875,
    "avg_bits_err_improve": 0.15799793281619612,
    "time": 5279.388427734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (exp (log1p (- 1.0 (cos x)))) 0.0) (/ (if (!= (- (cos x) (- 2.0 (* 2.0 (cos x)))) 0.0) (/ (- (* (* (cos x) (cos x)) (- (cos x) (- 2.0 (* 2.0 (cos x))))) (* (- (cos x) (- 2.0 (* 2.0 (cos x)))) (- (cos x) (- 2.0 (* 2.0 (cos x)))))) (- (cos x) (- 2.0 (* 2.0 (cos x))))) (- 2.0 (fma (cos x) (- 2.0 (cos x)) (cos x)))) (exp (log1p (- 1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 53,
    "avg_bits_err_input": 29.483744802675492,
    "avg_bits_err_output": 29.488933893535844,
    "avg_bits_err_improve": -0.005189090860351797,
    "time": 22974.539306640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.967283559370152,
    "avg_bits_err_output": 24.967283559370152,
    "avg_bits_err_improve": 0,
    "time": 11743.59765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ (sin x) (tan x)) 0.0) (/ (- (* (/ x (tan x)) (/ (sin x) (tan x))) (* (/ (sin x) (tan x)) (/ (sin x) (tan x)))) (/ (sin x) (tan x))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 27,
    "avg_bits_err_input": 30.077157344841027,
    "avg_bits_err_output": 30.08331252711387,
    "avg_bits_err_improve": -0.0061551822728418415,
    "time": 30339.99560546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00764624062518029,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.00652124062518029,
    "time": 2547.719970703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -0.035) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (* -2.0 (- (/ 0.5 (/ i n)) (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (* (+ i i) (/ i (/ i n))) n) n)))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 5.2e+222) (/ (log (+ 1.0 (expm1 (- 100.0 (* 100.0 (pow (+ 1.0 (/ i n)) n)))))) (/ (- i) n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (* -2.0 (- (/ 0.5 (/ i n)) (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (* (+ i i) (/ i (/ i n))) n) n)))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 65,
    "avg_bits_err_input": 47.686514191116316,
    "avg_bits_err_output": 45.50221500628527,
    "avg_bits_err_improve": 2.1842991848310476,
    "time": 29299.2216796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= d -500000.0) (+ (* d (/ b (fma c c (* d d)))) (/ (* (/ a (fma c c (* d d))) (+ c c)) 2.0)) (if (<= d 5e-275) (+ (/ (* b d) (fma c c (* d d))) (* a (/ c (fma c c (* d d))))) (+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 26.1341579976068,
    "avg_bits_err_output": 23.176841981979596,
    "avg_bits_err_improve": 2.957316015627203,
    "time": 13069.770263671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.197595971955746,
    "avg_bits_err_output": 23.080880370750236,
    "avg_bits_err_improve": 3.1167156012055095,
    "time": 12678.88818359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03375,
    "avg_bits_err_output": 0.023450605288241753,
    "avg_bits_err_improve": 0.01029939471175825,
    "time": 6840.533203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (- ux (* ux ux)) (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.703806796572488,
    "avg_bits_err_output": 0.5548526407844777,
    "avg_bits_err_improve": 13.14895415578801,
    "time": 24874.73681640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- (+ ux ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))) (* ux ux))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.741929338666584,
    "avg_bits_err_output": 0.3242414076635514,
    "avg_bits_err_improve": 13.417687931003032,
    "time": 24192.090087890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33763074281731875,
    "avg_bits_err_output": 0.33057706183191793,
    "avg_bits_err_improve": 0.007053680985400823,
    "time": 50332.556884765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.1906883504838014,
    "avg_bits_err_output": 0.1906883504838014,
    "avg_bits_err_improve": 0,
    "time": 18582.077392578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (* u1 (+ 1.0 (/ 1.0 (- 1.0 u1)))) 0.0) (* (/ (* 1.0 u1) (- 1.0 u1)) (* (+ 1.0 (/ 1.0 (- 1.0 u1))) (/ u1 (* u1 (+ 1.0 (/ 1.0 (- 1.0 u1))))))) (/ (* 1.0 u1) (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.5439826908594201,
    "avg_bits_err_output": 0.5478096468336351,
    "avg_bits_err_improve": -0.003826955974215007,
    "time": 21684.206298828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (if (!= (* 6.28318530718 u2) 0.0) (/ 1.0 (/ 1.0 (* 6.28318530718 u2))) (* 6.28318530718 u2))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.3170521316007832,
    "avg_bits_err_output": 0.3237429450757842,
    "avg_bits_err_improve": -0.006690813475001001,
    "time": 19865.70947265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(+ (* s (- (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))) (fma (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)) (* s (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))))",
    "output_parens": 60,
    "avg_bits_err_input": 0.33130660728913075,
    "avg_bits_err_output": 0.33276365068087543,
    "avg_bits_err_improve": -0.0014570433917446834,
    "time": 66970.48071289062,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ x (- s))) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.061751992049796756,
    "avg_bits_err_output": 0.06278918953951308,
    "avg_bits_err_improve": -0.0010371974897163266,
    "time": 11646.921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) s) (- (* (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 2.0)) -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 0.15397063354866408,
    "avg_bits_err_output": 0.1290456175324762,
    "avg_bits_err_improve": 0.02492501601618788,
    "time": 19027.88427734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(/ (* (sin (* x (* PI tau))) (/ (sin (* x PI)) (* x PI))) (* x (* PI tau)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.648488859115783,
    "avg_bits_err_output": 0.6803011917043549,
    "avg_bits_err_improve": -0.03181233258857186,
    "time": 20510.0439453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (- (exp (/ -2.0 v)) (* u (exp (/ -2.0 v)))) u)) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.1675748508106349,
    "avg_bits_err_output": 0.1686501848340153,
    "avg_bits_err_improve": -0.0010753340233804198,
    "time": 22762.95458984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4634390628625606,
    "avg_bits_err_output": 2.461625047994461,
    "avg_bits_err_improve": 0.0018140148680996226,
    "time": 52536.861328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* cosTheta_i (* (/ (/ cosTheta_O v) (sinh (/ 1.0 v))) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) (+ v v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47404769640329625,
    "avg_bits_err_output": 0.39825400771611635,
    "avg_bits_err_improve": 0.0757936886871799,
    "time": 22757.15478515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.1179853212986712,
    "avg_bits_err_output": 0.1181375260784348,
    "avg_bits_err_improve": -0.00015220477976360391,
    "time": 8672.620361328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (+ (/ (- 1.0 (* alpha alpha)) (log (* alpha alpha))) 0.0) PI) (- -1.0 (* (fma alpha alpha -1.0) (* cosTheta cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47274946954319436,
    "avg_bits_err_output": 0.4754283859565217,
    "avg_bits_err_improve": -0.002678916413327348,
    "time": 23334.784912109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(if (!= (* 3.0 s) 0.0) (* (* 3.0 s) (* (* s 9.0) (* 0.3333333333333333 (/ (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) (* 3.0 s))))) (* 3.0 (* s (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))",
    "output_parens": 18,
    "avg_bits_err_input": 1.3164124899728602,
    "avg_bits_err_output": 1.2469286976968594,
    "avg_bits_err_improve": 0.06948379227600077,
    "time": 24987.437744140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(+ (/ (* (/ (- (- 1.0 (- (exp (log (+ (log (/ 1.0 (fma u -4.0 1.0))) 2.0))) 2.0)) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) -2.0) s) 2.0) (/ (* (log (/ 1.0 (+ 1.0 (* u -4.0)))) s) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 12.394417548115204,
    "avg_bits_err_output": 12.358512967176267,
    "avg_bits_err_improve": 0.03590458093893645,
    "time": 21174.911376953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (/ (* 0.75 (/ (exp (/ r (* -3.0 s))) s)) (* PI 6.0))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1410571449845021,
    "avg_bits_err_output": 0.14310077581427777,
    "avg_bits_err_improve": -0.0020436308297756833,
    "time": 12227.742431640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* normAngle u)) (sin normAngle)) (* n0_i (/ (sin (- normAngle (* normAngle u))) (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8889425159661124,
    "avg_bits_err_output": 0.695640771468488,
    "avg_bits_err_improve": 0.19330174449762438,
    "time": 23736.767578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) cosTheta) (sqrt PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6715434552179841,
    "avg_bits_err_output": 0.5053896911196913,
    "avg_bits_err_improve": 0.16615376409829274,
    "time": 24065.371826171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (+ -0.5 (- (log (- 1.0 u1)) -0.5)))) (sin (- (* (exp (log1p (* 2.0 PI))) u2) (* u2 1.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.621784274776658,
    "avg_bits_err_output": 13.652301614954915,
    "avg_bits_err_improve": -0.030517340178256802,
    "time": 22919.1630859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (/ (- 1.0 (- (* (log (- 1.0 u1)) 2.0) -1.0)) -2.0))) (cos (if (!= (* 2.0 (* PI u2)) 0.0) (/ 1.0 (/ (/ 0.25 u2) (* (* PI u2) (/ 0.5 u2)))) (* 2.0 (* PI u2)))))",
    "output_parens": 22,
    "avg_bits_err_input": 13.665214078245482,
    "avg_bits_err_output": 13.686288064872583,
    "avg_bits_err_improve": -0.02107398662710125,
    "time": 25491.25927734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (* (log (- 1.0 u0)) alpha) 0.0) (* (* (* alpha alpha) (- (log (- 1.0 u0)))) (* alpha (* (/ (- (/ 1.0 alpha) 0.0) alpha) (/ 1.0 (- (/ 1.0 alpha) 0.0))))) (* (* alpha alpha) (- (log (- 1.0 u0)))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.170012526780337,
    "avg_bits_err_output": 14.177070650512201,
    "avg_bits_err_improve": -0.007058123731864541,
    "time": 20218.26611328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ -1.0 (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay)))) (if (!= (log (- 1.0 u0)) 0.0) (/ 1.0 (/ 1.0 (log (- 1.0 u0)))) (log (- 1.0 u0))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.597309665124838,
    "avg_bits_err_output": 12.60231225321633,
    "avg_bits_err_improve": -0.0050025880914912335,
    "time": 16644.65673828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ 1.0 F) (* (/ 1.0 (tan (* PI l))) F)))",
    "output_parens": 8,
    "avg_bits_err_input": 16.6436605511083,
    "avg_bits_err_output": 12.282386999549484,
    "avg_bits_err_improve": 4.361273551558817,
    "time": 19316.953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.20960112287783922,
    "avg_bits_err_output": 0.14833928068970825,
    "avg_bits_err_improve": 0.061261842188130966,
    "time": 15470.79443359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.19585464388637,
    "avg_bits_err_output": 10.139288202831374,
    "avg_bits_err_improve": 3.056566441054997,
    "time": 20609.7099609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (fma (/ (- (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 74,
    "avg_bits_err_input": 61.58779739507401,
    "avg_bits_err_output": 61.59347801410535,
    "avg_bits_err_improve": -0.005680619031338097,
    "time": 48555.933837890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.70191322909703,
    "avg_bits_err_output": 33.37680284899168,
    "avg_bits_err_improve": 9.32511038010535,
    "time": 24916.441650390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.202135922791699,
    "avg_bits_err_output": 4.202135922791699,
    "avg_bits_err_improve": 0,
    "time": 29161.188232421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (log (+ 1.0 (expm1 (/ 1.0 (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))))) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 1.060151335454401,
    "avg_bits_err_output": 1.0614013354544012,
    "avg_bits_err_improve": -0.0012500000000001954,
    "time": 14362.0048828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 10.389237730312896,
    "avg_bits_err_improve": 0,
    "time": 11778.7783203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e-128) (sqrt (- (- (* (* n t) (* U 2.0)) (* (* 4.0 (/ (* n l) Om)) (* U l))) (* 2.0 (* U (* n (* n (* (- U U*) (pow (/ l Om) 2.0)))))))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e+136) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* U (* 2.0 (* n t))) (+ (* U (* (* (/ l Om) 4.0) (* l n))) (* 2.0 (* U (* (* (- U U*) (* n (pow (/ l Om) 2.0))) n))))))))",
    "output_parens": 84,
    "avg_bits_err_input": 34.559575328156924,
    "avg_bits_err_output": 28.524658576937867,
    "avg_bits_err_improve": 6.034916751219058,
    "time": 30963.808837890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (pow t 3.0) (/ (pow (/ k t) 2.0) l)) (* (sin k) (/ (tan k) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.90102348639842,
    "avg_bits_err_output": 36.9504049491555,
    "avg_bits_err_improve": 10.950618537242924,
    "time": 42522.308349609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l))) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.68437030765328,
    "avg_bits_err_output": 27.46932038162929,
    "avg_bits_err_improve": 5.21504992602399,
    "time": 20374.97802734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (/ (+ (* a2 a2) (* a1 a1)) (sqrt 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5266481234615706,
    "avg_bits_err_output": 0.47846146876983314,
    "avg_bits_err_improve": 0.048186654691737496,
    "time": 21433.210205078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5506039723449057,
    "avg_bits_err_output": 0.5037811622042373,
    "avg_bits_err_improve": 0.04682281014066836,
    "time": 19214.9091796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (fma (- (exp l) (exp (- l))) (cos (/ K 2.0)) (fma (- (exp (- l))) (cos (/ K 2.0)) (* (exp (- l)) (cos (/ K 2.0))))) U)",
    "output_parens": 19,
    "avg_bits_err_input": 17.57793623564195,
    "avg_bits_err_output": 17.57793349674554,
    "avg_bits_err_improve": 2.7388964092267543e-06,
    "time": 26204.499755859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K n) 0.0) 0.0 (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 19,
    "avg_bits_err_input": 15.525022680929563,
    "avg_bits_err_output": 1.3036556413856701,
    "avg_bits_err_improve": 14.221367039543892,
    "time": 19704.5576171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.301167481250364,
    "avg_bits_err_output": 18.301167481250364,
    "avg_bits_err_improve": 0,
    "time": 25706.732177734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.097235306350637,
    "avg_bits_err_output": 10.741192408760126,
    "avg_bits_err_improve": 3.3560428975905108,
    "time": 23527.9130859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1e+152) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (* V l) -1e-299) (* c0 (sqrt (+ (+ (/ (/ A (* V l)) 8.0) (/ (+ A (+ (+ A A) (+ A A))) (* (* V (+ l l)) 4.0))) (/ A (* (* V l) 4.0))))) (if (<= (* V l) 5e-123) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) 1e+178) (* c0 (sqrt (if (!= (/ A (* l V)) 0.0) (/ 1.0 (/ 1.0 (/ A (* l V)))) (/ A (* l V))))) (* c0 (sqrt (/ (/ A V) l)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 18.458718662940683,
    "avg_bits_err_output": 14.522981781499103,
    "avg_bits_err_improve": 3.9357368814415796,
    "time": 16647.05126953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* d d) 0.0) (/ (/ (* c0 (fma d (* c0 (/ (/ (/ d w) D) (* D h))) (sqrt (* (fma d (* c0 (/ (/ (/ d w) D) (* D h))) M) (fma d (* c0 (/ (/ (/ d w) D) (* D h))) (- M)))))) w) 2.0) (if (<= (* d d) 1e+96) (+ (* (/ (/ c0 D) (* D (* w h))) (* (* d d) (/ c0 (+ w w)))) (* (/ c0 (* w 4.0)) (* (sqrt (fma (/ (/ c0 D) (* D (* w h))) (* d (* d (* (/ (/ c0 D) (* D (* w h))) (* d d)))) (* M (- M)))) 2.0))) (if (<= (* d d) 1e+252) (* (/ c0 (* 2.0 w)) (+ (* c0 (/ (* d d) (* w (* D (* h D))))) (sqrt (* (fma c0 (/ (* d d) (* w (* D (* h D)))) M) (fma c0 (/ (* d d) (* w (* D (* h D)))) (- M)))))) (* c0 (/ (fma d (* (/ c0 h) (/ (/ (/ d D) w) D)) (sqrt (* (fma d (* (/ c0 h) (/ (/ (/ d D) w) D)) M) (fma d (* (/ c0 h) (/ (/ (/ d D) w) D)) (- M))))) (+ w w))))))",
    "output_parens": 112,
    "avg_bits_err_input": 59.269508356723485,
    "avg_bits_err_output": 55.875389580579416,
    "avg_bits_err_improve": 3.3941187761440688,
    "time": 51747.51318359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= h -1.05e-16) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* D (/ M (+ d d))) 2.0) (* l 2.0))))) (if (<= h 1e+41) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (/ (* D M) 2.0) d) 2.0)) (/ h l)))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* D (/ M (+ d d))) 2.0) (* l 2.0)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 26.68856513104088,
    "avg_bits_err_output": 25.1055099879756,
    "avg_bits_err_improve": 1.5830551430652768,
    "time": 34070.46435546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(expm1 (log1p (- 1.0 (sqrt (log (+ 1.0 (expm1 (+ 0.5 (/ 0.5 (hypot 1.0 x))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.00784359152053,
    "avg_bits_err_output": 16.015758989572106,
    "avg_bits_err_improve": -0.007915398051576261,
    "time": 8103.42919921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 4.0 (- 1.0 (* v v))) (* 3.0 PI)) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9842193609377705,
    "avg_bits_err_output": 0.015334962500721158,
    "avg_bits_err_improve": 0.9688843984370493,
    "time": 3768.5576171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (- 1.0 (* v (* v 5.0))) PI) (* (- t (* v (* v t))) (sqrt (- 2.0 (* v (* v 6.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4448520355945246,
    "avg_bits_err_output": 0.278883584155841,
    "avg_bits_err_improve": 0.16596845143868355,
    "time": 20195.945068359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (/ (- 1.0 (* v v)) (/ 1.0 (sqrt (fma v (* v -3.0) 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014292481250360577,
    "avg_bits_err_output": 0.015469360937770436,
    "avg_bits_err_improve": -0.0011768796874098587,
    "time": 5897.33935546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* v (* 5.0 v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.515697075733991,
    "avg_bits_err_output": 0.515572075733991,
    "avg_bits_err_improve": 0.00012500000000004174,
    "time": 13523.073486328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (/ (+ (* k (+ k 10.0)) (+ (* k (+ k 10.0)) 2.0)) 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 2.106638157000591,
    "avg_bits_err_output": 2.095185276471154,
    "avg_bits_err_improve": 0.01145288052943716,
    "time": 15001.6904296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec EDonor) Vef)) KbT)))) (/ NaChar (- (exp (/ (- (+ Ev (+ Vef EAccept)) mu) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017997431866599887,
    "avg_bits_err_output": 0.017997431866599887,
    "avg_bits_err_improve": 0,
    "time": 7482.89306640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.1822479328161959,
    "avg_bits_err_output": 0.1814554515658353,
    "avg_bits_err_improve": 0.0007924812503605771,
    "time": 16650.251708984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1846298982688467,
    "avg_bits_err_output": 0.1846298982688467,
    "avg_bits_err_improve": 0,
    "time": 4835.1796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* b (* b (+ a 3.0))) (* a (- a (* a a)))))) -1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.18933762053106826,
    "avg_bits_err_output": 0.18906026620582783,
    "avg_bits_err_improve": 0.00027735432524042536,
    "time": 5015.877685546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.235230172694507,
    "avg_bits_err_output": 13.235230172694507,
    "avg_bits_err_improve": 0,
    "time": 20341.267578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.279883517511536,
    "avg_bits_err_output": 0.050125,
    "avg_bits_err_improve": 40.229758517511534,
    "time": 6007.01904296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (/ x (if (!= (- (tan x) x) 0.0) (/ 1.0 (/ 1.0 (- (tan x) x))) (- (tan x) x))))",
    "output_parens": 16,
    "avg_bits_err_input": 31.887283812701988,
    "avg_bits_err_output": 31.925227586285878,
    "avg_bits_err_improve": -0.03794377358389056,
    "time": 20020.613525390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.25679418892966,
    "avg_bits_err_output": 34.25679418892966,
    "avg_bits_err_improve": 0,
    "time": 14082.148193359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (/ b_2 -2.0) (- (sqrt (fma c (- a) (* b_2 b_2))) (/ b_2 -2.0))) a)",
    "output_parens": 9,
    "avg_bits_err_input": 34.646977942311466,
    "avg_bits_err_output": 34.6479525877107,
    "avg_bits_err_improve": -0.000974645399232088,
    "time": 16146.25341796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.51567623839316,
    "avg_bits_err_output": 30.72817746013369,
    "avg_bits_err_improve": 0.7874987782594687,
    "time": 18167.2099609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.593478801695994,
    "avg_bits_err_output": 32.593478801695994,
    "avg_bits_err_improve": 0,
    "time": 16827.3720703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 29.482993288620186,
    "avg_bits_err_output": 29.483117328523058,
    "avg_bits_err_improve": -0.00012403990287168654,
    "time": 12675.7490234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (+ (/ 0.5 (+ 1.0 x)) (/ -0.5 x)) (/ (- (/ -1.0 x) (+ -1.0 (/ x x))) (if (!= (- -1.0 x) 0.0) (/ 1.0 (/ 0.5 (- x -1.0))) (+ x (+ x 2.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 14.84130662861528,
    "avg_bits_err_output": 12.88398631776001,
    "avg_bits_err_improve": 1.9573203108552697,
    "time": 13709.11474609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (if (!= (+ 1.0 (cos x)) 0.0) (/ (* (+ 1.0 (cos x)) (cos x)) (+ 1.0 (cos x))) (cos x)))",
    "output_parens": 15,
    "avg_bits_err_input": 39.39427075411002,
    "avg_bits_err_output": 39.39475558340375,
    "avg_bits_err_improve": -0.0004848292937325027,
    "time": 16907.90283203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- 1.0 (- (cbrt x) (+ -1.0 (cbrt (+ x 1.0)))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.94498734798447,
    "avg_bits_err_output": 29.633294928707027,
    "avg_bits_err_improve": 0.31169241927744196,
    "time": 10636.395751953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(* (- 1.0 (cos x)) (/ 1.0 (sin x)))",
    "output_parens": 5,
    "avg_bits_err_input": 30.263074593365097,
    "avg_bits_err_output": 30.298260720862523,
    "avg_bits_err_improve": -0.035186127497425446,
    "time": 21889.082763671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) (+ b b)) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.195757106768276,
    "avg_bits_err_output": 34.226887017665355,
    "avg_bits_err_improve": -0.031129910897078616,
    "time": 24813.467041015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(- (/ (/ (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) -2.0) a) 0.0)",
    "output_parens": 9,
    "avg_bits_err_input": 34.44614432655109,
    "avg_bits_err_output": 34.45201058791806,
    "avg_bits_err_improve": -0.005866261366968217,
    "time": 23180.383544921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (if (!= (+ 1.0 (exp (log1p (log (- 1.0 x))))) 0.0) (/ (if (!= (- -1.0 (* (exp (log1p (log (- 1.0 x)))) (exp (log1p (log (- 1.0 x)))))) 0.0) (/ (- (+ 1.0 (* (+ 1.0 (log (- 1.0 x))) (* (+ 1.0 (log (- 1.0 x))) (- -1.0 (log (- 1.0 x)))))) (* (* (+ 1.0 (log (- 1.0 x))) (+ 1.0 (log (- 1.0 x)))) (* (log (- 1.0 x)) (+ 1.0 (log (- 1.0 x)))))) (- -1.0 (* (exp (log1p (log (- 1.0 x)))) (exp (log1p (log (- 1.0 x))))))) (fma (exp (log1p (log (- 1.0 x)))) (exp (log1p (log (- 1.0 x)))) -1.0)) (+ 1.0 (exp (log1p (log (- 1.0 x)))))) (log (- 1.0 x))) (log1p x))",
    "output_parens": 76,
    "avg_bits_err_input": 61.305152710857946,
    "avg_bits_err_output": 59.98145351368312,
    "avg_bits_err_improve": 1.3236991971748253,
    "time": 35061.327880859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- 1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (+ (log1p n) (- (+ (* n (log1p n)) -1.0) (* n (log n))))))))) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 62.99370881589905,
    "avg_bits_err_output": 6.787718361008622,
    "avg_bits_err_improve": 56.205990454890426,
    "time": 18059.39404296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (if (!= (* (/ eps (+ 1.0 eps)) (/ eps (+ 1.0 eps))) 0.0) (+ (* (/ (- 1.0 eps) (+ eps 1.0)) (/ (/ eps eps) (/ eps eps))) (/ (if (!= (* eps (/ eps (* (* (- -1.0 eps) (- -1.0 eps)) (* (- -1.0 eps) (- -1.0 eps))))) 0.0) (/ (if (!= (* (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* eps (* (/ eps (+ eps 1.0)) (/ eps (* (+ eps 1.0) (* (- -1.0 eps) (+ eps 1.0))))))) 0.0) (/ (+ (* (* (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* eps (* (/ eps (+ eps 1.0)) (/ eps (* (+ eps 1.0) (* (- -1.0 eps) (+ eps 1.0))))))) (* (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* eps (* (/ eps (+ eps 1.0)) (/ eps (* (+ eps 1.0) (* (- -1.0 eps) (+ eps 1.0)))))))) (* (/ (/ (/ (* eps eps) (- -1.0 eps)) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0))) (* (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* (* eps (/ (/ (/ (* eps eps) (- -1.0 eps)) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* (/ eps (+ eps 1.0)) (/ eps (* (+ eps 1.0) (* (- -1.0 eps) (+ eps 1.0))))))))) (* (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* eps (* (/ eps (+ eps 1.0)) (/ eps (* (+ eps 1.0) (* (- -1.0 eps) (+ eps 1.0)))))))) (fma (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* eps (/ (/ (/ (* eps eps) (- -1.0 eps)) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* (/ eps (* (* (- -1.0 eps) (+ eps 1.0)) (* (- -1.0 eps) (+ eps 1.0)))) (* eps (* (/ eps (+ eps 1.0)) (/ eps (* (+ eps 1.0) (* (- -1.0 eps) (+ eps 1.0))))))))) (* eps (/ eps (* (* (- -1.0 eps) (- -1.0 eps)) (* (- -1.0 eps) (- -1.0 eps)))))) (/ (+ (* eps (/ eps (* (- -1.0 eps) (- -1.0 eps)))) (* eps (/ (/ eps (+ eps 1.0)) (- -1.0 eps)))) (* (- -1.0 eps) (- -1.0 eps)))) (* (/ eps (+ eps 1.0)) (/ eps (- -1.0 eps))))) (/ (- 1.0 eps) (+ 1.0 eps))))",
    "output_parens": 219,
    "avg_bits_err_input": 58.463043797532045,
    "avg_bits_err_output": 58.493138634465396,
    "avg_bits_err_improve": -0.030094836933351132,
    "time": 22897.0517578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (* (/ 1.0 (/ (tan x) x)) (/ 1.0 x)))",
    "output_parens": 7,
    "avg_bits_err_input": 59.90029006700842,
    "avg_bits_err_output": 59.906765983864894,
    "avg_bits_err_improve": -0.006475916856473418,
    "time": 27345.75341796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (/ eps (expm1 (* eps a))) (expm1 (+ (* eps b) (* eps a)))) (expm1 (* eps b)))",
    "output_parens": 11,
    "avg_bits_err_input": 60.35248503890346,
    "avg_bits_err_output": 28.847369209207578,
    "avg_bits_err_improve": 31.50511582969588,
    "time": 25491.539306640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.71257744821935,
    "avg_bits_err_output": 0.4538962406251803,
    "avg_bits_err_improve": 40.25868120759417,
    "time": 4613.45947265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.639894128298145,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.63939412829814,
    "time": 2991.940673828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 28.49945657089388,
    "avg_bits_err_output": 0.01815499375684071,
    "avg_bits_err_improve": 28.48130157713704,
    "time": 3692.173828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (+ -2.0 (- (exp x) (exp (- x)))) 0.0) (+ (/ (fma (exp (- x)) (exp (- x)) (* (- 2.0 (exp x)) (+ (exp x) -2.0))) (- (exp (- x)) (+ (exp x) -2.0))) (/ (fma (- (exp (- x))) (exp (- x)) (* (exp (- x)) (exp (- x)))) (- (+ (exp x) -2.0) (exp (- x))))) (+ (+ (exp x) -2.0) (exp (- x))))",
    "output_parens": 46,
    "avg_bits_err_input": 29.14058623538579,
    "avg_bits_err_output": 28.71588924065601,
    "avg_bits_err_improve": 0.4246969947297785,
    "time": 19088.05859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.00177022459701,
    "avg_bits_err_output": 10.00177022459701,
    "avg_bits_err_improve": 0,
    "time": 30214.69091796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (log (+ 1.0 (expm1 (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 21,
    "avg_bits_err_input": 37.06446869702387,
    "avg_bits_err_output": 37.106409066932386,
    "avg_bits_err_improve": -0.04194036990851657,
    "time": 18291.07373046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (!= (sqrt (+ x 1.0)) 0.0) (if (!= (+ (sqrt (+ x 1.0)) (* (sqrt x) (/ (sqrt (+ x 1.0)) (sqrt (+ x 1.0))))) 0.0) (/ (+ (+ (* (sqrt (+ x 1.0)) (/ (* (sqrt x) (sqrt x)) (sqrt (+ x 1.0)))) (* (sqrt (+ x 1.0)) (+ (sqrt (+ x 1.0)) (* (- (sqrt x)) (/ (sqrt x) (sqrt (+ x 1.0))))))) (* (sqrt (+ x 1.0)) (* (sqrt x) (/ (- (sqrt x)) (sqrt (+ x 1.0)))))) (+ (sqrt (+ x 1.0)) (* (sqrt x) (/ (sqrt (+ x 1.0)) (sqrt (+ x 1.0)))))) (* (- (sqrt (+ x 1.0)) (sqrt x)) (/ (sqrt (+ x 1.0)) (sqrt (+ x 1.0))))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 75,
    "avg_bits_err_input": 30.073167042723615,
    "avg_bits_err_output": 29.86847247137089,
    "avg_bits_err_improve": 0.20469457135272506,
    "time": 22047.719482421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (+ (log1p (expm1 (+ (- (sin (+ x eps)) (+ (sin x) (sin x))) (/ 0.0 (sin (+ x eps)))))) (* (sin x) (/ (sin (+ x eps)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 28,
    "avg_bits_err_input": 37.03248519238114,
    "avg_bits_err_output": 37.09147661021918,
    "avg_bits_err_improve": -0.05899141783804396,
    "time": 16636.27099609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (- 1.0 (- (- 1.0 (/ -1.0 (/ (sqrt (+ 1.0 x)) (sqrt x)))) 1.0)) (sqrt x))",
    "output_parens": 10,
    "avg_bits_err_input": 19.56944854718025,
    "avg_bits_err_output": 19.578196432491556,
    "avg_bits_err_improve": -0.00874788531130477,
    "time": 13855.15380859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (if (!= (+ (- (atan (+ 1.0 N)) (atan N)) -1.0) 0.0) (/ 1.0 (/ 1.0 (+ (- (atan (+ 1.0 N)) (atan N)) -1.0))) (+ (- (atan (+ 1.0 N)) (atan N)) -1.0)) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 14.825275473549802,
    "avg_bits_err_output": 14.826909112800054,
    "avg_bits_err_improve": -0.0016336392502527275,
    "time": 8892.081787109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(/ (if (!= (- 1.0 (* (log (+ (exp a) (exp b))) 2.0)) 0.0) (/ (+ (* (- 1.0 (* (log (+ (exp a) (exp b))) 2.0)) (- 1.0 (* (log (+ (exp a) (exp b))) 2.0))) (- (- 1.0 (* (log (+ (exp a) (exp b))) 2.0)))) (- 1.0 (* (log (+ (exp a) (exp b))) 2.0))) (- (* (log (+ (exp a) (exp b))) 2.0))) -2.0)",
    "output_parens": 43,
    "avg_bits_err_input": 29.209372297151717,
    "avg_bits_err_output": 29.218068212145116,
    "avg_bits_err_improve": -0.008695914993399612,
    "time": 37023.263671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07142932343849158,
    "avg_bits_err_output": 0.0779411656266226,
    "avg_bits_err_improve": -0.0065118421881310146,
    "time": 14448.041015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 15.494462756005221,
    "avg_bits_err_output": 0.31277161719245794,
    "avg_bits_err_improve": 15.181691138812763,
    "time": 11361.452392578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (- -1.0 (* (/ angle 180.0) PI)) (* PI (/ (/ angle -180.0) (fma (/ angle 180.0) PI 1.0)))))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.553976437900413,
    "avg_bits_err_output": 20.56561508997483,
    "avg_bits_err_improve": -0.011638652074417166,
    "time": 26760.402587890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.68913021245405,
    "avg_bits_err_output": 31.68913021245405,
    "avg_bits_err_improve": 0,
    "time": 35382.44970703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.992348440806676,
    "avg_bits_err_output": 20.96169581126926,
    "avg_bits_err_improve": 0.030652629537417653,
    "time": 31118.280517578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* m (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.18145772226222148,
    "avg_bits_err_output": 0.18177144413776233,
    "avg_bits_err_improve": -0.00031372187554085107,
    "time": 14753.980712890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(+ (/ (fma (tan x) (* (tan x) 2.0) -2.0) (+ -2.0 (* (* (tan x) (tan x)) -2.0))) (/ (fma (- (/ 1.0 (+ -2.0 (* (- (fma (tan x) (tan x) 1.0) 1.0) -2.0)))) (/ 1.0 (+ -2.0 (* (* (tan x) (tan x)) -2.0))) (/ (/ 1.0 (+ -2.0 (* (* (tan x) (tan x)) -2.0))) (+ -2.0 (* (* (tan x) (tan x)) -2.0)))) (/ 1.0 (+ -2.0 (* (* (tan x) (tan x)) -2.0)))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.32372057079218763,
    "avg_bits_err_output": 0.3183568674744884,
    "avg_bits_err_improve": 0.005363703317699253,
    "time": 20967.67724609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (sin v) (/ e (+ 1.0 (+ (/ (+ 1.0 (* (* (cos v) e) 2.0)) 2.0) -0.5))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.1403962406251803,
    "avg_bits_err_output": 0.14193872187554085,
    "avg_bits_err_improve": -0.00154248125036055,
    "time": 15885.650146484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 12,
    "avg_bits_err_input": 16.526754732811064,
    "avg_bits_err_output": 16.526364552274718,
    "avg_bits_err_improve": 0.0003901805363462074,
    "time": 31110.45361328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma (* a c) -4.0 (* b b)))) 0.0) (/ (fma b b (+ (fma (sqrt (fma (* a c) -4.0 (* b b))) (sqrt (fma (* a c) -4.0 (* b b))) (- (* b b))) (* b (- b)))) (+ b (sqrt (fma (* a c) -4.0 (* b b))))) (- (sqrt (fma (* a c) -4.0 (* b b))) b)) (* a 2.0))",
    "output_parens": 35,
    "avg_bits_err_input": 52.58784690087849,
    "avg_bits_err_output": 51.49852223322416,
    "avg_bits_err_improve": 1.0893246676543313,
    "time": 31104.383056640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) 0.0) (/ (fma (/ (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) (/ (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) (* (/ (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) (/ (fma b -2.0 (sqrt (if (!= (* c (* -4.0 a)) 0.0) (fma b b (/ 1.0 (/ -0.25 (* a c)))) (fma -4.0 (* a c) (* b b))))) (* a 8.0)))) (/ (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0))) (/ (+ (sqrt (if (!= (* c (* -4.0 a)) 0.0) (fma b b (/ 1.0 (/ -0.25 (* a c)))) (fma -4.0 (* a c) (* b b)))) (fma b -2.0 (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b)))))) (* a 8.0)))",
    "output_parens": 106,
    "avg_bits_err_input": 28.054785036784796,
    "avg_bits_err_output": 27.492256251274277,
    "avg_bits_err_improve": 0.5625287855105192,
    "time": 30410.628173828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (+ b (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (* b b) (* b b) (* b (* (sqrt (fma c (* a -4.0) (* b b))) (* b (- (sqrt (fma c (* a -4.0) (* b b)))))))) (* b (- b))) (fma (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))) (- (* b b)))) (+ b (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (/ (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 4.0))",
    "output_parens": 61,
    "avg_bits_err_input": 43.88496704593725,
    "avg_bits_err_output": 42.74257925254583,
    "avg_bits_err_improve": 1.1423877933914213,
    "time": 27519.79296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) (+ b b)) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.194225814587526,
    "avg_bits_err_output": 34.226887017665355,
    "avg_bits_err_improve": -0.03266120307782927,
    "time": 17288.056396484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (* (/ (+ (+ (cos phi1) (* (cos (- lambda1 lambda2)) (+ (cos phi2) (cos phi2)))) (+ (cos phi1) (* (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)) 2.0))) (+ (cos phi1) (+ (cos phi1) (+ (cos phi1) (cos phi1))))) (cos phi1)) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.8901279830007941,
    "avg_bits_err_output": 0.9092805190900691,
    "avg_bits_err_improve": -0.01915253608927503,
    "time": 23524.33251953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) 0.0) (/ (if (!= (+ 1.0 (/ 16.0 (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))))) 0.0) (/ (+ (- 1.0 (/ (/ 256.0 (* (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) 2.0)))))) (- (/ (/ 256.0 (* (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) 2.0))))))) (+ 1.0 (/ 16.0 (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))))) (+ 1.0 (/ -16.0 (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))))) (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (- 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 171,
    "avg_bits_err_input": 29.18561948043984,
    "avg_bits_err_output": 29.176064410523395,
    "avg_bits_err_improve": 0.009555069916444836,
    "time": 28290.405029296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(+ (/ (fma (* (exp (- x)) -2.0) (/ (exp (- x)) (- (- (exp x)) (exp (- x)))) (* (- (exp (- x))) (/ (* (exp (- x)) -2.0) (- (- (exp x)) (exp (- x)))))) (+ (exp (- x)) (+ (exp (- x)) (+ (exp x) (exp x))))) (if (!= (/ (exp (- x)) (- (- (exp (- x))) (exp x))) 0.0) (/ (- (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))) (* (/ (exp (- x)) (- (- (exp (- x))) (exp x))) (/ (exp x) (- (- (exp (- x))) (exp x))))) (/ (exp (- x)) (- (- (exp (- x))) (exp x)))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))))",
    "output_parens": 96,
    "avg_bits_err_input": 58.03829425603023,
    "avg_bits_err_output": 58.08497612726302,
    "avg_bits_err_improve": -0.046681871232792105,
    "time": 17483.828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.95333233912599,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 57.945457339125994,
    "time": 9279.74072265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01337461079306209,
    "avg_bits_err_output": 0.01337461079306209,
    "avg_bits_err_improve": 0,
    "time": 3421.121337890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.129375,
    "avg_bits_err_output": 32.129375,
    "avg_bits_err_improve": 0,
    "time": 4519.05517578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (- (exp (log1p (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (/ (- (* x (/ x (- 1.0 x))) (/ x (+ -1.0 x))) (- 1.0 x)) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ -1.0 x)))))) 1.0))",
    "output_parens": 23,
    "avg_bits_err_input": 58.44706635597823,
    "avg_bits_err_output": 58.502449739204756,
    "avg_bits_err_improve": -0.05538338322652692,
    "time": 19160.1640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.04344812031259015,
    "avg_bits_err_output": 0.042875,
    "avg_bits_err_improve": 0.0005731203125901446,
    "time": 3411.890380859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12591748125036056,
    "avg_bits_err_output": 0.12591748125036056,
    "avg_bits_err_improve": 0,
    "time": 15917.02099609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* (cos t) (* (cos (atan (* (- eh) (/ (tan t) ew)))) ew))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12221936093777043,
    "avg_bits_err_output": 0.12182312031259014,
    "avg_bits_err_improve": 0.0003962406251802886,
    "time": 28270.501708984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 38.550200061136444,
    "avg_bits_err_output": 4.098770735984576,
    "avg_bits_err_improve": 34.451429325151864,
    "time": 24667.34423828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- a (* (/ b a) b)) a)))",
    "output_parens": 6,
    "avg_bits_err_input": 14.63862258158851,
    "avg_bits_err_output": 0.013225919365257202,
    "avg_bits_err_improve": 14.625396662223253,
    "time": 6350.2119140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (- (fma (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta)))))) -1.0) -1.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1578551135373302,
    "avg_bits_err_output": 0.164382016621714,
    "avg_bits_err_improve": -0.006526903084383806,
    "time": 35921.9150390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -3.0) (* b b))) 0.6666666666666666 (fma (sqrt (fma a (* c -3.0) (* b b))) -0.3333333333333333 (/ (+ b b) -6.0))) a)",
    "output_parens": 13,
    "avg_bits_err_input": 52.604906270673375,
    "avg_bits_err_output": 50.655130331844425,
    "avg_bits_err_improve": 1.9497759388289495,
    "time": 27620.56005859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ (sqrt (fma c (* a -3.0) (* b b))) (- b (- (sqrt (fma c (* a -3.0) (* b b))))))) (* b (/ b (- (- b) (sqrt (fma c (* a -3.0) (* b b))))))) 0.0) (* (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ (sqrt (fma -3.0 (* c a) (* b b))) (+ b (sqrt (fma -3.0 (* c a) (* b b)))))) (* b (/ b (- (- b) (sqrt (fma c (* a -3.0) (* b b))))))) (/ (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b))))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ (sqrt (fma -3.0 (* c a) (* b b))) (+ b (sqrt (fma -3.0 (* c a) (* b b)))))) (* b (/ b (- (- b) (sqrt (fma c (* a -3.0) (* b b))))))))) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 126,
    "avg_bits_err_input": 28.272329037636187,
    "avg_bits_err_output": 27.715781277949077,
    "avg_bits_err_improve": 0.5565477596871098,
    "time": 35579.121337890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (- (* b b) (if (!= (* a (* c -3.0)) 0.0) (/ 1.0 (/ 0.3333333333333333 (* a c))) (* 3.0 (* a c)))))) 0.0) (/ (if (!= (fma (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (* b (- b))) 0.0) (/ (* (fma (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (* b (- b))) (fma (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (* b (- b)))) (fma (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (* b (- b)))) (fma (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (sqrt (- (* b b) (if (!= (* c (* a -3.0)) 0.0) (/ 2.0 (/ 0.6666666666666666 (* a c))) (* a (* c 3.0))))) (* b (- b)))) (+ b (sqrt (- (* b b) (if (!= (* a (* c -3.0)) 0.0) (/ 1.0 (/ 0.3333333333333333 (* a c))) (* 3.0 (* a c))))))) (- (sqrt (- (* b b) (if (!= (* a (* c -3.0)) 0.0) (/ 1.0 (/ 0.3333333333333333 (* a c))) (* 3.0 (* a c))))) b)) (* 3.0 a))",
    "output_parens": 184,
    "avg_bits_err_input": 43.96643487876498,
    "avg_bits_err_output": 42.76743838110176,
    "avg_bits_err_improve": 1.1989964976632166,
    "time": 36169.254638671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b -1.0 (sqrt (fma b b (* c (* a -3.0))))) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.196854534573504,
    "avg_bits_err_output": 34.196517171421775,
    "avg_bits_err_improve": 0.0003373631517291642,
    "time": 19734.07421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (expm1 (log1p (* (cos (- lambda1 lambda2)) (sin phi1)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.156630702960724,
    "avg_bits_err_output": 13.164186795080056,
    "avg_bits_err_improve": -0.0075560921193318364,
    "time": 31023.939208984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.514354193511846,
    "avg_bits_err_output": 0.5485050926542355,
    "avg_bits_err_improve": 28.96584910085761,
    "time": 19678.461669921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.013,
    "avg_bits_err_output": 0.013,
    "avg_bits_err_improve": 0,
    "time": 5217.27392578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) 0.0) (/ (if (!= (- (/ 1.0 (* (+ 1.0 x) (+ 1.0 x))) (/ -1.0 (* (- 1.0 x) (- 1.0 x)))) 0.0) (/ (+ (fma (/ -1.0 (* (+ 1.0 x) (+ 1.0 x))) (/ 1.0 (* (+ 1.0 x) (+ 1.0 x))) (/ (/ 1.0 (* (+ 1.0 x) (+ 1.0 x))) (* (+ 1.0 x) (+ 1.0 x)))) (- (/ -1.0 (* (- 1.0 x) (* (+ -1.0 x) (* (+ -1.0 x) (+ -1.0 x))))) (/ (/ (/ 1.0 (+ 1.0 x)) (* (+ 1.0 x) (+ 1.0 x))) (+ 1.0 x)))) (- (/ -1.0 (* (- 1.0 x) (- 1.0 x))) (/ 1.0 (* (+ 1.0 x) (+ 1.0 x))))) (+ (/ -1.0 (* (- 1.0 x) (- 1.0 x))) (/ 1.0 (* (+ 1.0 x) (+ 1.0 x))))) (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0)))) (+ (/ 1.0 (+ 1.0 x)) (/ -1.0 (+ x -1.0))))",
    "output_parens": 83,
    "avg_bits_err_input": 14.359911804127425,
    "avg_bits_err_output": 14.715669818565582,
    "avg_bits_err_improve": -0.35575801443815713,
    "time": 24122.874755859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) -1e-211) (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (fma (fma (* A C) -4.0 (pow B 2.0)) F (fma (* (* A C) -4.0) F (* (* A C) (* F 4.0)))) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C))))) (if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 0.0) (/ (sqrt (* F (+ (* A (fma 2.0 (pow B 2.0) (* A (* C -8.0)))) (+ (* C (fma 2.0 (pow B 2.0) (* A (* C -8.0)))) (* (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ (* (pow B 2.0) -2.0) (* (* A C) 8.0))))))) (- (* A (* 4.0 C)) (pow B 2.0))) (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (if (!= (* (* A C) (* F 4.0)) 0.0) (* (- (* A (* C 4.0)) (pow B 2.0)) (* (- F) (/ (* A C) (/ (* A (* C F)) F)))) (* (fma (* A C) -4.0 (pow B 2.0)) F)) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C)))))))",
    "output_parens": 139,
    "avg_bits_err_input": 52.764235445500084,
    "avg_bits_err_output": 52.58778171529482,
    "avg_bits_err_improve": 0.17645373020526733,
    "time": 40450.474609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.396248183615747,
    "avg_bits_err_output": 29.396248183615747,
    "avg_bits_err_improve": 0,
    "time": 22766.08837890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* 2.0 (* (* F (- (pow B 2.0) (* 4.0 (* A C)))) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.38526105972533,
    "avg_bits_err_output": 52.06995821859411,
    "avg_bits_err_improve": 0.31530284113122065,
    "time": 37388.716552734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.471001910125102,
    "avg_bits_err_output": 15.471001910125102,
    "avg_bits_err_improve": 0,
    "time": 2206.76416015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (- (- (+ g (sqrt (fma h (- h) (* g g)))) g) g))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 36.41911381376894,
    "avg_bits_err_output": 36.4229560782295,
    "avg_bits_err_improve": -0.0038422644605589085,
    "time": 14790.527099609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9922577078205239,
    "avg_bits_err_output": 0.9773468046888524,
    "avg_bits_err_improve": 0.014910903131671538,
    "time": 5989.490478515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7405,
    "avg_bits_err_output": 0.7405,
    "avg_bits_err_improve": 0,
    "time": 3729.388427734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -5e+258) (/ (* a2 (/ a1 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-303) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (/ (* a1 (/ a2 b1)) b2) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+288) (/ (* a1 a2) (* b1 b2)) (* a1 (/ (/ a2 b2) b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 11.56122765733664,
    "avg_bits_err_output": 3.7913642387634976,
    "avg_bits_err_improve": 7.769863418573143,
    "time": 8164.373046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4620794223799711,
    "avg_bits_err_output": 0.4232259193652572,
    "avg_bits_err_improve": 0.03885350301471391,
    "time": 17333.232421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(+ (/ (+ 1.0 (log (+ x (hypot 1.0 x)))) 2.0) (+ (/ (+ 1.0 (log (+ x (hypot 1.0 x)))) 2.0) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 52.80995237557292,
    "avg_bits_err_output": 45.095071882655574,
    "avg_bits_err_improve": 7.714880492917345,
    "time": 24887.23828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.6820655613684465,
    "avg_bits_err_output": 5.681033610625166,
    "avg_bits_err_improve": 0.001031950743280774,
    "time": 18982.235107421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 0,
    "time": 3564.405517578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1288.097900390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (- (+ 3.0 (/ 2.0 (* r r))) (* (/ (- 0.375 (* v 0.25)) (- 1.0 v)) (if (!= (* (* w r) (* w r)) 0.0) (/ 1.0 (/ 1.0 (* (* w r) (* w r)))) (* (* w r) (* w r))))) 4.5)",
    "output_parens": 23,
    "avg_bits_err_input": 12.81312687351412,
    "avg_bits_err_output": 0.35269992254386323,
    "avg_bits_err_improve": 12.460426950970257,
    "time": 26229.150634765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0) (* x1 x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5178261617280987,
    "avg_bits_err_output": 0.2839608571959587,
    "avg_bits_err_improve": 0.23386530453214,
    "time": 71232.17895507812,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 17.86576924066963,
    "avg_bits_err_output": 1.304463772085617,
    "avg_bits_err_improve": 16.56130546858401,
    "time": 6821.845703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2370827222622215,
    "avg_bits_err_output": 0.1859052428037488,
    "avg_bits_err_improve": 0.0511774794584727,
    "time": 6763.85009765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0031981203125901443,
    "avg_bits_err_output": 0.0031981203125901443,
    "avg_bits_err_improve": 0,
    "time": 2350.90576171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 13.890576369762117,
    "avg_bits_err_output": 0.2889650535154667,
    "avg_bits_err_improve": 13.60161131624665,
    "time": 16844.038818359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(+ (+ (* (exp (* x (- -1.0 eps))) (+ 0.5 (/ -0.5 eps))) (* (exp (* x (+ eps -1.0))) (+ 0.5 (/ 0.5 eps)))) (* (+ 0.5 (+ (/ -0.5 eps) (+ (/ 0.5 eps) -0.5))) (+ (exp (* x (- -1.0 eps))) (exp (* x (- -1.0 eps))))))",
    "output_parens": 27,
    "avg_bits_err_input": 29.582559723460626,
    "avg_bits_err_output": 0.877174427972668,
    "avg_bits_err_improve": 28.705385295487957,
    "time": 30643.091796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (if (!= (+ 2.0 (/ 2.0 (fma (/ 1.0 t) t t))) 0.0) (/ (- 4.0 (/ 4.0 (* (+ t (/ t t)) (+ t (/ t t))))) (+ 2.0 (/ 2.0 (fma (/ 1.0 t) t t)))) (- 2.0 (/ 2.0 (fma (/ 1.0 t) t t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.021875,
    "avg_bits_err_output": 0.022625,
    "avg_bits_err_improve": -0.0007500000000000007,
    "time": 9023.8193359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ 2.0 (+ 1.0 (/ 4.0 (/ 4.0 t))))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025125,
    "avg_bits_err_output": 0.026073120312590146,
    "avg_bits_err_improve": -0.000948120312590145,
    "time": 13184.505126953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.033375,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 0.02425,
    "time": 7864.558837890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3393.41455078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2471.601318359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2424.714599609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.85217844556147,
    "avg_bits_err_output": 0.250625,
    "avg_bits_err_improve": 7.6015534455614695,
    "time": 18605.52392578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.356420441774422,
    "avg_bits_err_output": 7.356420441774422,
    "avg_bits_err_improve": 0,
    "time": 3624.738525390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.065916226199413,
    "avg_bits_err_output": 16.065916226199413,
    "avg_bits_err_improve": 0,
    "time": 8449.684814453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (if (!= (+ (+ (cos x) 1.0) 1.0) 0.0) (if (!= (* (cos x) (/ (+ (cos x) 3.0) (- -2.0 (cos x)))) 0.0) (/ (* (* (cos x) (/ (+ (cos x) 3.0) (- -2.0 (cos x)))) (/ (- (cos x) (* (cos x) (+ (cos x) 3.0))) (- -2.0 (cos x)))) (* (cos x) (/ (+ (cos x) 3.0) (- -2.0 (cos x))))) (* (cos x) (/ (+ (cos x) 2.0) (+ (cos x) 2.0)))) (cos x)) (exp (* 10.0 (* x x))))",
    "output_parens": 51,
    "avg_bits_err_input": 3.545927065533903,
    "avg_bits_err_output": 3.5440557925083356,
    "avg_bits_err_improve": 0.0018712730255674437,
    "time": 20133.510498046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 15.232342327066089,
    "avg_bits_err_improve": 0,
    "time": 10541.302978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.28054089694213,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.28054089694213,
    "time": 4234.7197265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.16200663003109,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.16125663003109,
    "time": 4953.078857421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.252,
    "avg_bits_err_improve": 63.748,
    "time": 21153.258056640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84324714829695,
    "avg_bits_err_output": 0.38207312031259016,
    "avg_bits_err_improve": 61.46117402798436,
    "time": 7390.577392578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(- (/ (/ (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) -2.0) a) 0.0)",
    "output_parens": 9,
    "avg_bits_err_input": 34.44614432655109,
    "avg_bits_err_output": 34.45201058791806,
    "avg_bits_err_improve": -0.005866261366968217,
    "time": 25073.86572265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) (+ b b)) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.194225814587526,
    "avg_bits_err_output": 34.226887017665355,
    "avg_bits_err_improve": -0.03266120307782927,
    "time": 21614.623779296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2699.577880859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.02494290489038,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 40.01456790489038,
    "time": 3695.815185546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(- (/ (* x x) (fma x x (* y y))) (/ (* y y) (fma x x (* y y))))",
    "output_parens": 9,
    "avg_bits_err_input": 20.003784732652008,
    "avg_bits_err_output": 20.00508544525335,
    "avg_bits_err_improve": -0.0013007126013420134,
    "time": 5814.994140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.640094545805552,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.640094545805552,
    "time": 8516.077880859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03475,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.034375,
    "time": 7820.352294921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02429248125036058,
    "avg_bits_err_output": 0.01625,
    "avg_bits_err_improve": 0.00804248125036058,
    "time": 4256.469482421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.013375,
    "time": 3956.75048828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1792.513427734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e (+ d c)) (+ b a))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4062834593805893,
    "avg_bits_err_output": 0.309625,
    "avg_bits_err_improve": 0.09665845938058931,
    "time": 4494.98681640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (expm1 (log1p (/ 1.0 (- 1.0 (cos x)))))) (- 1.0 (cos x)))",
    "output_parens": 12,
    "avg_bits_err_input": 29.794982550211905,
    "avg_bits_err_output": 29.794982332337412,
    "avg_bits_err_improve": 2.178744935577015e-07,
    "time": 8778.855224609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.974306063092257,
    "avg_bits_err_output": 24.971876148267548,
    "avg_bits_err_improve": 0.002429914824709556,
    "time": 12070.6845703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ (* (/ x (tan x)) 0.5) (- (expm1 (log1p (* x (/ 0.5 (tan x))))) (/ (sin x) (tan x))))",
    "output_parens": 13,
    "avg_bits_err_input": 29.917198975434502,
    "avg_bits_err_output": 29.934085370295687,
    "avg_bits_err_improve": -0.01688639486118504,
    "time": 29001.595947265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005448120312590145,
    "avg_bits_err_output": 0.005448120312590145,
    "avg_bits_err_improve": 0,
    "time": 1798.0986328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -1.35e+250) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.5e+156) (if (!= (fma -100.0 (/ (pow (+ (/ i n) 1.0) n) (/ i n)) (/ -100.0 (/ i n))) 0.0) (* (/ (+ 100.0 (* (pow (+ (/ i n) 1.0) n) 100.0)) (/ i n)) (if (!= (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0))) 0.0) (/ (+ (* (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0))) (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0)))) (* (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0))) (/ -100.0 (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0)))) (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0)))) (/ (fma 100.0 (pow (+ (/ i n) 1.0) n) -100.0) (fma 100.0 (pow (+ (/ i n) 1.0) n) 100.0)))) (/ (fma (pow (+ (/ i n) 1.0) n) 100.0 -100.0) (/ i n))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 143,
    "avg_bits_err_input": 47.42313709608519,
    "avg_bits_err_output": 45.29086079903413,
    "avg_bits_err_improve": 2.132276297051064,
    "time": 27185.950439453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(fma b (/ d (fma d d (* c c))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 8,
    "avg_bits_err_input": 26.400683635839055,
    "avg_bits_err_output": 23.058042848348673,
    "avg_bits_err_improve": 3.3426407874903816,
    "time": 12352.03466796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ c (fma d d (* c c))) b) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 1e-130) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- (* (/ c (fma d d (* c c))) b) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 25.865055488060655,
    "avg_bits_err_output": 22.43430507525623,
    "avg_bits_err_improve": 3.430750412804425,
    "time": 13826.417236328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03575,
    "avg_bits_err_output": 0.03575,
    "avg_bits_err_improve": 0,
    "time": 9217.4267578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (log (+ 1.0 (- (exp (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))) 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.53660620613949,
    "avg_bits_err_output": 12.366242329270712,
    "avg_bits_err_improve": 1.1703638768687785,
    "time": 24503.49365234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.573655209608024,
    "avg_bits_err_output": 0.3237718703589296,
    "avg_bits_err_improve": 13.249883339249095,
    "time": 25314.721435546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* maxCos maxCos) (* (* (- 1.0 ux) (- 1.0 ux)) (* ux ux))))) (* (sin (* PI (* uy 2.0))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.3487942396280732,
    "avg_bits_err_output": 0.3406395558884697,
    "avg_bits_err_improve": 0.008154683739603485,
    "time": 41064.542724609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ u0 (* (fma (cos (atan (/ (* alphay (tan (* PI (+ 0.5 (* 2.0 u1))))) alphax))) (/ (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (* alphax alphax)) (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (/ (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (* alphay alphay)))) (- 1.0 u0))))))",
    "output_parens": 44,
    "avg_bits_err_input": 0.19875731732960175,
    "avg_bits_err_output": 0.1990475583414627,
    "avg_bits_err_improve": -0.0002902410118609533,
    "time": 26954.429443359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (fma u1 (/ 0.25 (- 1.0 u1)) (if (!= (/ (* u1 0.25) (- 1.0 u1)) 0.0) (/ (* (* u1 1.5) (/ u1 u1)) (fma u1 -2.0 2.0)) (/ (* u1 1.5) (fma u1 -2.0 2.0))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.5274287772379858,
    "avg_bits_err_output": 0.5439346392782135,
    "avg_bits_err_improve": -0.016505862040227748,
    "time": 19718.396728515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3212644161665526,
    "avg_bits_err_output": 0.3212644161665526,
    "avg_bits_err_improve": 0,
    "time": 25352.797607421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output_parens": 21,
    "avg_bits_err_input": 0.3398029990847761,
    "avg_bits_err_output": 0.3398029990847761,
    "avg_bits_err_improve": 0,
    "time": 54726.284423828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(log1p (expm1 (/ 1.0 (+ (expm1 (/ x (- s))) 2.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.055718613676711756,
    "avg_bits_err_output": 0.06371099375684197,
    "avg_bits_err_improve": -0.007992380080130215,
    "time": 7867.908203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (* s (- -1.0 (exp (/ (fabs x) (- s)))))) (- -1.0 (exp (/ (fabs x) (- s)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16732094247556387,
    "avg_bits_err_output": 0.16767449833780151,
    "avg_bits_err_improve": -0.0003535558622376478,
    "time": 12777.17724609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6693614518190241,
    "avg_bits_err_output": 0.6693614518190241,
    "avg_bits_err_improve": 0,
    "time": 17556.188720703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (+ (+ (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) v) (- v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.14976554748583387,
    "avg_bits_err_output": 0.16315740197959297,
    "avg_bits_err_improve": -0.013391854493759098,
    "time": 23450.244140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5517181718552395,
    "avg_bits_err_output": 2.5497890519293303,
    "avg_bits_err_improve": 0.0019291199259092728,
    "time": 32755.0419921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (/ cosTheta_i (sinh (/ 1.0 v))) (* (/ cosTheta_O v) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) (+ v v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46066836139509765,
    "avg_bits_err_output": 0.39058421270263555,
    "avg_bits_err_improve": 0.0700841486924621,
    "time": 23277.96533203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.1147120518670971,
    "avg_bits_err_output": 0.11409436809061324,
    "avg_bits_err_improve": 0.0006176837764838572,
    "time": 12485.55029296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* cosTheta (- (* alpha (* alpha cosTheta)) cosTheta)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.45996173427410836,
    "avg_bits_err_output": 0.4871829819980028,
    "avg_bits_err_improve": -0.02722124772389445,
    "time": 22849.6279296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))",
    "output_parens": 5,
    "avg_bits_err_input": 1.317276311743076,
    "avg_bits_err_output": 1.2245366944051812,
    "avg_bits_err_improve": 0.09273961733789471,
    "time": 24892.160888671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* 2.0 (* (log (/ 1.0 (fma u -4.0 1.0))) (/ s 2.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 12.682042951267007,
    "avg_bits_err_output": 12.685170234083696,
    "avg_bits_err_improve": -0.0031272828166883926,
    "time": 22627.987548828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13378643935956866,
    "avg_bits_err_output": 0.13208244091261298,
    "avg_bits_err_improve": 0.001703998446955679,
    "time": 25480.91552734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (sin (- normAngle (* normAngle u))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9084112578988484,
    "avg_bits_err_output": 0.7610283416193515,
    "avg_bits_err_improve": 0.14738291627949685,
    "time": 22984.964599609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta)))) (- -1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.678554291109187,
    "avg_bits_err_output": 0.47223358114100794,
    "avg_bits_err_improve": 0.20632070996817903,
    "time": 25259.041259765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(- (* (sin (* 2.0 (* PI u2))) (+ 1.0 (sqrt (- (log (- 1.0 u1)))))) (* (sin (* 2.0 (if (!= (fma PI u2 1.0) 0.0) (* (* u2 (fma PI u2 1.0)) (/ PI (fma PI u2 1.0))) (* PI u2)))) 1.0))",
    "output_parens": 22,
    "avg_bits_err_input": 13.461463227361117,
    "avg_bits_err_output": 13.498040100080141,
    "avg_bits_err_improve": -0.03657687271902432,
    "time": 27118.37109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (<= u1 1.199999957179898e-7) (* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (- (log (+ 1.0 (expm1 (* (+ 1.0 (log (- 1.0 u1))) (+ 1.0 (log (- 1.0 u1))))))) 1.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2))) (* (if (!= (sqrt (- (log (- 1.0 u1)))) 0.0) (- (/ (/ (* (sqrt (- (log (- 1.0 u1)))) (sqrt (- (log (- 1.0 u1))))) (/ 1.0 (sqrt (- (log (- 1.0 u1)))))) (+ (/ 1.0 (/ 1.0 (sqrt (- (log (- 1.0 u1)))))) (- (- (sqrt (- (log (- 1.0 u1))))) (- (* (sqrt (- (log (- 1.0 u1)))) (sqrt (- (log (- 1.0 u1))))))))) 0.0) (sqrt (- (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2))))",
    "output_parens": 88,
    "avg_bits_err_input": 13.50769491823571,
    "avg_bits_err_output": 12.130538718333764,
    "avg_bits_err_improve": 1.3771561999019468,
    "time": 53051.30908203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (- (log (- 1.0 u0))) 0.0) (* (* (log (- 1.0 u0)) (- (log (- 1.0 u0)))) (/ (* alpha (- alpha)) (- (log (- 1.0 u0))))) (* (log (- 1.0 u0)) (* alpha (- alpha))))",
    "output_parens": 23,
    "avg_bits_err_input": 14.041905495798238,
    "avg_bits_err_output": 14.047651354390785,
    "avg_bits_err_improve": -0.005745858592547393,
    "time": 21203.21826171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (if (!= (/ cos2phi (* alphax alphax)) 0.0) (* (/ cos2phi alphax) (/ cos2phi (* cos2phi alphax))) (/ cos2phi (* alphax alphax))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.349824006685278,
    "avg_bits_err_output": 12.351587694499715,
    "avg_bits_err_improve": -0.0017636878144369206,
    "time": 19321.798583984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (/ 1.0 (/ 1.0 (* PI l))) (* PI l))) F) F))",
    "output_parens": 12,
    "avg_bits_err_input": 17.053863350340244,
    "avg_bits_err_output": 12.792556559017932,
    "avg_bits_err_improve": 4.261306791322312,
    "time": 21043.51318359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ x (tan B)) (+ (* (/ x (tan B)) 2.0) (/ -1.0 (sin B))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.217504167120048,
    "avg_bits_err_output": 0.1943060468074578,
    "avg_bits_err_improve": 0.023198120312590192,
    "time": 16448.700927734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (* F (/ (pow (fma 2.0 x (fma F F 2.0)) -0.5) (sin B))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.088389699750529,
    "avg_bits_err_output": 10.789965073266458,
    "avg_bits_err_improve": 3.2984246264840706,
    "time": 22675.420654296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 0.0) (/ (* (fma (/ (/ (* (exp (* PI (/ f -4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (/ (* (exp (* PI (/ f 4.0))) (exp (* PI (/ f 4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0))))))) (- (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 150,
    "avg_bits_err_input": 61.656665015601824,
    "avg_bits_err_output": 61.66054676378547,
    "avg_bits_err_improve": -0.0038817481836446177,
    "time": 78864.90625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.0332305403977,
    "avg_bits_err_output": 35.23954884751256,
    "avg_bits_err_improve": 7.793681692885144,
    "time": 23667.68994140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (expm1 (log1p (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 3.822046058506583,
    "avg_bits_err_output": 3.8377114725731407,
    "avg_bits_err_improve": -0.015665414066557748,
    "time": 27063.41064453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0909239778258346,
    "avg_bits_err_output": 1.0909239778258346,
    "avg_bits_err_improve": 0,
    "time": 10592.22998046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (+ (pow (/ Om Omc) 2.0) (+ (pow (/ Om Omc) 2.0) -2.0)) (+ -2.0 (* (pow (/ t l) 2.0) -4.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.250903229399619,
    "avg_bits_err_output": 10.25141388672924,
    "avg_bits_err_improve": -0.0005106573296220773,
    "time": 20705.973388671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e-151) (if (!= (sqrt (- (* U (* (* 2.0 n) (- t (* (/ l Om) (* 2.0 l))))) (* (- U U*) (* (* U (* 2.0 n)) (* n (pow (/ l Om) 2.0)))))) 0.0) (/ (* (sqrt (- (* U (* (* 2.0 n) (- t (* (/ l Om) (* 2.0 l))))) (* (- U U*) (* (* U (* 2.0 n)) (* n (pow (/ l Om) 2.0)))))) (sqrt (- (* U (* (* 2.0 n) (- t (* (/ l Om) (* 2.0 l))))) (* (- U U*) (* (* U (* 2.0 n)) (* n (pow (/ l Om) 2.0))))))) (sqrt (- (* U (* (* 2.0 n) (- t (* (/ l Om) (* 2.0 l))))) (* (- U U*) (* (* U (* 2.0 n)) (* n (pow (/ l Om) 2.0))))))) (sqrt (- (* U (* (* 2.0 n) (- t (* (/ l Om) (* 2.0 l))))) (* (- U U*) (* (* U (* 2.0 n)) (* n (pow (/ l Om) 2.0))))))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e+145) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (fma (* l (* n U)) (* (/ l Om) -4.0) (* (* n U) (* t 2.0))) (* (pow (/ l Om) 2.0) (* (* n (* 2.0 (- U U*))) (* n U)))))))",
    "output_parens": 153,
    "avg_bits_err_input": 34.73260626226498,
    "avg_bits_err_output": 28.311240426368148,
    "avg_bits_err_improve": 6.421365835896832,
    "time": 36402.6396484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (/ (pow t 3.0) l) (pow (/ k t) 2.0))) (* (sin k) (/ (tan k) l)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.42179906374774,
    "avg_bits_err_output": 36.30269260085428,
    "avg_bits_err_improve": 11.119106462893463,
    "time": 39865.328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (tan k) l) (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.4004713729434,
    "avg_bits_err_output": 26.496710876711774,
    "avg_bits_err_improve": 5.903760496231627,
    "time": 24680.5244140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (/ (* a2 (+ (/ (* (cos th) (+ a2 (+ a2 a2))) (* 2.0 (* 2.0 (sqrt 2.0)))) (/ (* (cos th) a2) (* 2.0 (* 2.0 (sqrt 2.0)))))) 1.0))",
    "output_parens": 23,
    "avg_bits_err_input": 0.5111644765845871,
    "avg_bits_err_output": 0.48403947658458685,
    "avg_bits_err_improve": 0.027125000000000232,
    "time": 26074.752197265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(+ (/ (pow (* PI (+ n n)) (fma k -0.5 0.5)) (* 4.0 (sqrt k))) (* (pow (* PI (+ n n)) (fma k -0.5 0.5)) (/ 0.75 (sqrt k))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4632588704756291,
    "avg_bits_err_output": 0.4354673607719888,
    "avg_bits_err_improve": 0.027791509703640305,
    "time": 20733.092041015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp (- l))) J (* (exp (- l)) J)) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.31387788804528,
    "avg_bits_err_output": 17.31830491321425,
    "avg_bits_err_improve": -0.004427025168968868,
    "time": 24567.580810546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K m) 0.0) 0.0 (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 19,
    "avg_bits_err_input": 15.628191190906573,
    "avg_bits_err_output": 1.4294631851226733,
    "avg_bits_err_improve": 14.1987280057839,
    "time": 16005.005126953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (cos (/ K 2.0)) (* (* -2.0 J) (sqrt (+ 1.0 (pow (if (!= (/ (/ U 4.0) (* J (cos (/ K 2.0)))) 0.0) (* (/ (/ U 4.0) (* J (cos (/ K 2.0)))) (/ (/ (/ U 4.0) (* J (cos (/ K 2.0)))) (/ (+ (/ (+ U U) (* J (cos (/ K 2.0)))) (/ (+ U U) (* J (cos (/ K 2.0))))) 32.0))) (/ (* (/ U J) 0.5) (cos (/ K 2.0)))) 2.0)))))",
    "output_parens": 44,
    "avg_bits_err_input": 17.778667481250363,
    "avg_bits_err_output": 17.831563195761102,
    "avg_bits_err_improve": -0.05289571451073982,
    "time": 54466.372802734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 2e-147) (* w0 (sqrt (- 1.0 (* (/ (pow (* D (/ (/ M 2.0) d)) 2.0) l) h)))) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.522832118794017,
    "avg_bits_err_output": 10.741518630493546,
    "avg_bits_err_improve": 3.781313488300471,
    "time": 15079.978271484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* c0 (sqrt (/ A (* V l)))) -1e-275) (* c0 (sqrt (* (/ (/ 2.0 V) (+ l l)) A))) (if (<= (* c0 (sqrt (/ A (* V l)))) 0.0) (* c0 (if (!= (sqrt (/ (/ A l) V)) 0.0) (/ 1.0 (/ 1.0 (sqrt (/ (/ A l) V)))) (sqrt (/ (/ A l) V)))) (* c0 (sqrt (/ A (* V l))))))",
    "output_parens": 36,
    "avg_bits_err_input": 19.03724219765438,
    "avg_bits_err_output": 16.751152919044227,
    "avg_bits_err_improve": 2.2860892786101523,
    "time": 16619.343505859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -2e-47) (/ (* c0 (/ (+ (* d (* c0 (/ d (* w (* h (* D D)))))) (sqrt (* (- (* d (* c0 (/ d (* w (* h (* D D)))))) M) (fma d (* c0 (/ d (* w (* h (* D D))))) M)))) (+ w w))) 1.0) (if (<= d 6.8e-216) (* (/ c0 (* 2.0 w)) (fma (/ (* (* (/ d D) (/ d D)) (/ c0 w)) h) 1.0 (sqrt (* (fma (/ c0 (* w h)) (* (/ d D) (/ d D)) M) (- (/ (* (* (/ d D) (/ d D)) (/ c0 w)) h) M))))) (if (<= d 3.2e+59) (+ (* (* (/ (/ (/ d (* w D)) h) D) (* c0 d)) (/ c0 (+ w w))) (* (sqrt (* (- (* (/ (/ (/ d (* w D)) h) D) (* c0 d)) M) (fma c0 (* d (/ (/ (/ d (* w D)) h) D)) M))) (/ c0 (+ w w)))) (/ (* c0 (/ (+ (* d (* c0 (/ d (* w (* h (* D D)))))) (sqrt (* (- (* d (* c0 (/ d (* w (* h (* D D)))))) M) (fma d (* c0 (/ d (* w (* h (* D D))))) M)))) (+ w w))) 1.0))))",
    "output_parens": 111,
    "avg_bits_err_input": 59.62991978504072,
    "avg_bits_err_output": 54.3016210146996,
    "avg_bits_err_improve": 5.328298770341121,
    "time": 43354.1044921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* 0.5 (/ (* (pow (* D (/ M (+ d d))) 2.0) (* h (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)))) l))) (fma (pow (/ d l) 0.5) (* (pow (/ d h) 0.5) (- 1.0 (* h (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l))))) 0.0))",
    "output_parens": 50,
    "avg_bits_err_input": 26.625379458411643,
    "avg_bits_err_output": 25.03917384658921,
    "avg_bits_err_improve": 1.5862056118224324,
    "time": 42278.169189453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (- (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 2.0)) (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.827180933665998,
    "avg_bits_err_output": 15.369193774276605,
    "avg_bits_err_improve": 0.4579871593893934,
    "time": 21593.68798828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9823231203125902,
    "avg_bits_err_output": 0.013073120312590145,
    "avg_bits_err_improve": 0.9692500000000001,
    "time": 3718.348876953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.46706241769983164,
    "avg_bits_err_output": 0.11305208319999194,
    "avg_bits_err_improve": 0.3540103344998397,
    "time": 12658.679931640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012896240625180291,
    "avg_bits_err_output": 0.012896240625180291,
    "avg_bits_err_improve": 0,
    "time": 3417.93603515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5246140864383407,
    "avg_bits_err_output": 0.5246140864383407,
    "avg_bits_err_improve": 0,
    "time": 10051.581787109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* a (+ (/ (pow k m) (* (fma k (+ k 10.0) 1.0) 4.0)) (/ (+ (pow k m) (/ (pow k m) 2.0)) (* (fma k (+ k 10.0) 1.0) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 2.1306996052535694,
    "avg_bits_err_output": 2.110386116677201,
    "avg_bits_err_improve": 0.0203134885763685,
    "time": 15295.734130859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ (exp (/ (- (+ Vef (+ EDonor mu)) Ec) KbT)) 1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02299749334274228,
    "avg_bits_err_output": 0.02299749334274228,
    "avg_bits_err_improve": 0,
    "time": 7453.71484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (pow (fma a a (* b b)) 2.0) (- 1.0 (* b (* b 4.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18560825061850234,
    "avg_bits_err_output": 0.18781576936814176,
    "avg_bits_err_improve": -0.0022075187496394255,
    "time": 21556.2294921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (if (!= (* (* b b) (* (fma a 3.0 -1.0) -4.0)) 0.0) (* (fma b (* (fma a 3.0 -1.0) (* b -4.0)) (fma (* a (fma a a a)) 4.0 (pow (fma b b (* a a)) 2.0))) (- (* b (/ b (* b b))) 0.0)) (fma 4.0 (fma a (fma a a a) (* b (* (fma a 3.0 -1.0) (- b)))) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 32,
    "avg_bits_err_input": 0.1839420758309814,
    "avg_bits_err_output": 0.3144274156256162,
    "avg_bits_err_improve": -0.1304853397946348,
    "time": 28966.636962890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (if (!= (* (* b (* b (+ 3.0 a))) 4.0) 0.0) (* (/ (/ b (/ b (* b (+ 3.0 a)))) (* b (+ 3.0 a))) (fma (+ 3.0 a) (* b (* b 4.0)) (fma 4.0 (* a (- a (* a a))) (pow (fma a a (* b b)) 2.0)))) (fma 4.0 (fma b (* b (+ 3.0 a)) (* a (- a (* a a)))) (pow (fma b b (* a a)) 2.0))) 1.0)",
    "output_parens": 36,
    "avg_bits_err_input": 0.1864564212650287,
    "avg_bits_err_output": 0.1982788386013336,
    "avg_bits_err_improve": -0.011822417336304902,
    "time": 23064.920654296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (/ (+ x (+ x x)) (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.228236724088283,
    "avg_bits_err_output": 13.40397663747468,
    "avg_bits_err_improve": -0.17573991338639594,
    "time": 18008.66943359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (+ -2.0 (+ 2.0 (/ (expm1 (* 2.0 x)) (expm1 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.60856231977707,
    "avg_bits_err_output": 0.06969812031259014,
    "avg_bits_err_improve": 41.538864199464484,
    "time": 11721.115966796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.193350173374697,
    "avg_bits_err_output": 31.193350173374697,
    "avg_bits_err_improve": 0,
    "time": 15633.945068359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (+ b_2 b_2)) a)",
    "output_parens": 8,
    "avg_bits_err_input": 34.538466372829376,
    "avg_bits_err_output": 34.55063166368171,
    "avg_bits_err_improve": -0.012165290852337307,
    "time": 14458.91650390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.359671427520006,
    "avg_bits_err_output": 34.358684847038035,
    "avg_bits_err_improve": 0.0009865804819710888,
    "time": 15970.025146484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(if (<= x -9e-5) (* (/ (- 1.0 (cos x)) x) (/ 1.0 x)) (if (<= x 0.2) (+ (- (/ 1.0 (* x x)) (+ 1.0 (/ (cos x) (* x x)))) 1.0) (/ (/ (/ (- (- 2.0 (cos x)) (cos x)) x) 2.0) x)))",
    "output_parens": 24,
    "avg_bits_err_input": 31.863183204671362,
    "avg_bits_err_output": 29.06149619185152,
    "avg_bits_err_improve": 2.8016870128198406,
    "time": 19519.572021484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(log1p (if (!= (- 2.0 (expm1 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) 0.0) (/ (- 1.0 (* (+ (expm1 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) -1.0) (+ (expm1 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) -1.0))) (+ 2.0 (- (expm1 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))))) (expm1 (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))))",
    "output_parens": 46,
    "avg_bits_err_input": 32.715736835205774,
    "avg_bits_err_output": 32.790118367609246,
    "avg_bits_err_improve": -0.07438153240347134,
    "time": 21033.1923828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (+ (fma (- (/ (log N) (+ (log1p N) (log N)))) (log N) (* (log N) (/ (log N) (+ (log1p N) (log N))))) (* (- (log1p N) (log N)) (/ (+ (log1p N) (log N)) (+ (log1p N) (log N))))) (- (log1p N) (log N)))",
    "output_parens": 36,
    "avg_bits_err_input": 28.931379202585735,
    "avg_bits_err_output": 28.9306800340167,
    "avg_bits_err_improve": 0.0006991685690351801,
    "time": 11866.58642578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (+ -1.0 (/ (+ x x) (+ x 1.0))) (+ x x)) (/ -1.0 (+ x x)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.697968263542883,
    "avg_bits_err_output": 14.724072275936434,
    "avg_bits_err_improve": -0.0261040123935512,
    "time": 14487.614501953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (if (!= (+ -1.0 (+ (cos x) -1.0)) 0.0) (/ (+ (* (+ (cos x) -1.0) (+ (cos x) -1.0)) -1.0) (+ -1.0 (+ (cos x) -1.0))) (cos x)))",
    "output_parens": 19,
    "avg_bits_err_input": 39.53909484960069,
    "avg_bits_err_output": 39.557928581417286,
    "avg_bits_err_improve": -0.018833731816599197,
    "time": 16284.218505859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (cbrt (+ 1.0 x)) (- -1.0 (cbrt x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.693757557383183,
    "avg_bits_err_output": 29.39581082190528,
    "avg_bits_err_improve": 0.29794673547790396,
    "time": 10757.0224609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.664429132167218,
    "avg_bits_err_output": 29.664429132167218,
    "avg_bits_err_improve": 0,
    "time": 21780.697509765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* c (* a 4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96952294757647,
    "avg_bits_err_output": 33.96409567475518,
    "avg_bits_err_improve": 0.005427272821293627,
    "time": 27047.464111328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- INFINITY)) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) 1e+303) (/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0)))))",
    "output_parens": 53,
    "avg_bits_err_input": 34.07549345058352,
    "avg_bits_err_output": 29.1764699765927,
    "avg_bits_err_improve": 4.899023473990823,
    "time": 22312.7333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (/ (/ (+ 1.0 (log (- 1.0 x))) (log1p x)) (/ 2.0 (* (log1p x) (/ 2.0 (log1p x))))) (/ 1.0 (log1p x)))",
    "output_parens": 14,
    "avg_bits_err_input": 61.2319294488308,
    "avg_bits_err_output": 59.57331137350411,
    "avg_bits_err_improve": 1.658618075326686,
    "time": 24492.992431640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (- (* (fma n (- (log1p n) (log n)) (log1p n)) (/ (exp (log (fma n (- (log1p n) (log n)) (log1p n)))) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n)))))) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 35,
    "avg_bits_err_input": 63.01122761611562,
    "avg_bits_err_output": 44.22874164900236,
    "avg_bits_err_improve": 18.78248596711326,
    "time": 17720.392333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.61476200552469,
    "avg_bits_err_output": 58.57599041148406,
    "avg_bits_err_improve": 0.03877159404063235,
    "time": 15567.11962890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (* (/ 1.0 (/ (tan x) x)) (/ 1.0 x)))",
    "output_parens": 7,
    "avg_bits_err_input": 59.8891276216965,
    "avg_bits_err_output": 59.89828895282225,
    "avg_bits_err_improve": -0.00916133112574613,
    "time": 26691.064453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.466944364512365,
    "avg_bits_err_output": 29.96132041562214,
    "avg_bits_err_improve": 30.505623948890225,
    "time": 27077.722412109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (/ (/ (exp x) (expm1 x)) (/ 1.0 (expm1 x))) (expm1 x))",
    "output_parens": 8,
    "avg_bits_err_input": 41.968656923695356,
    "avg_bits_err_output": 0.5263680453140326,
    "avg_bits_err_improve": 41.442288878381326,
    "time": 6843.433349609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.45593533040235,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.455435330402345,
    "time": 2781.308837890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.140522535259453,
    "avg_bits_err_output": 0.014320968774394887,
    "avg_bits_err_improve": 29.126201566485058,
    "time": 4310.72705078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (- (expm1 (- x)) (expm1 x)) 0.0) (/ (- (* (expm1 (- x)) (expm1 (- x))) (* (expm1 x) (expm1 x))) (- (expm1 (- x)) (expm1 x))) (+ (expm1 (- x)) (expm1 x)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.22318893748671,
    "avg_bits_err_output": 28.383886315354378,
    "avg_bits_err_improve": 0.8393026221323332,
    "time": 14826.552978515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (* (/ (/ 2.0 (+ 1.0 x)) (/ 4.0 x)) (/ 2.0 x)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 10.087273144814745,
    "avg_bits_err_output": 10.08754741386199,
    "avg_bits_err_improve": -0.00027426904724592305,
    "time": 26768.2275390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.007013946764296,
    "avg_bits_err_output": 37.007013946764296,
    "avg_bits_err_improve": 0,
    "time": 17456.59033203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (if (!= (sqrt x) 0.0) (/ (- (* (sqrt x) (+ (sqrt (+ x 1.0)) -1.0)) (* (sqrt x) (sqrt x))) (sqrt x)) (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x)))) -1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.700997026746272,
    "avg_bits_err_output": 28.961451575847256,
    "avg_bits_err_improve": 0.7395454508990156,
    "time": 14999.907470703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.16570685385567,
    "avg_bits_err_output": 37.16570685385567,
    "avg_bits_err_improve": 0,
    "time": 15902.4541015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) 0.0) (/ (- (/ (/ 0.5 (sqrt (+ 1.0 x))) (sqrt (+ 1.0 x))) (/ (- -1.0 (/ 0.5 (sqrt (+ 1.0 x)))) (sqrt (+ 1.0 x)))) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x))))) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 31,
    "avg_bits_err_input": 19.874430557313985,
    "avg_bits_err_output": 19.86768637176789,
    "avg_bits_err_improve": 0.006744185546097015,
    "time": 11826.771728515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (fma (atan (- N -1.0)) (/ (atan (- N -1.0)) (+ (atan (- N -1.0)) (atan N))) (* (atan N) (log1p (expm1 (/ (atan N) (- (- (atan N)) (atan (+ N 1.0)))))))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 31,
    "avg_bits_err_input": 15.409385879312945,
    "avg_bits_err_output": 15.41354264834373,
    "avg_bits_err_improve": -0.004156769030785767,
    "time": 9232.008544921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.50234736225663,
    "avg_bits_err_output": 29.50234736225663,
    "avg_bits_err_improve": 0,
    "time": 38416.682373046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07098120312590143,
    "avg_bits_err_output": 0.07098120312590143,
    "avg_bits_err_improve": 0,
    "time": 9444.262939453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.360975021658504,
    "avg_bits_err_output": 0.30055225625468746,
    "avg_bits_err_improve": 16.060422765403818,
    "time": 9927.263671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma angle (/ PI 180.0) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.387664189979713,
    "avg_bits_err_output": 20.385572267586852,
    "avg_bits_err_improve": 0.0020919223928608233,
    "time": 23174.2373046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.456932807889103,
    "avg_bits_err_output": 31.456932807889103,
    "avg_bits_err_improve": 0,
    "time": 30934.973876953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.077501069464418,
    "avg_bits_err_output": 20.03439941484796,
    "avg_bits_err_improve": 0.0431016546164571,
    "time": 29342.418701171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17320996250072115,
    "avg_bits_err_output": 0.16566748125036057,
    "avg_bits_err_improve": 0.007542481250360583,
    "time": 15480.16650390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(+ (/ (- (fma (tan x) (tan x) -1.0)) (fma (tan x) (tan x) 1.0)) (fma (/ (* (tan x) (tan x)) (- -1.0 (* (tan x) (tan x)))) (/ (* (tan x) (tan x)) (fma (tan x) (tan x) 1.0)) (* (/ (* (tan x) (tan x)) (fma (tan x) (tan x) 1.0)) (/ (* (tan x) (tan x)) (fma (tan x) (tan x) 1.0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.32397650950092693,
    "avg_bits_err_output": 0.32129524197119264,
    "avg_bits_err_improve": 0.002681267529734299,
    "time": 17459.3076171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (+ (/ (+ 1.0 (* (* e (cos v)) 2.0)) 2.0) -0.5)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.13916748125036058,
    "avg_bits_err_output": 0.14132556406367186,
    "avg_bits_err_improve": -0.002158082813311285,
    "time": 18071.777587890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (expm1 (log1p (* (sin phi1) (sin phi2)))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 16.9079449299305,
    "avg_bits_err_output": 16.915599792994147,
    "avg_bits_err_improve": -0.007654863063645934,
    "time": 30987.939697265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (fma b b (* (sqrt (fma c (* a -4.0) (* b b))) (- b))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (if (!= (* (/ b a) -0.25) 0.0) (/ (* (* (/ b a) -0.25) (/ (if (!= b 0.0) (/ (* b (- (sqrt (fma b b (* c (* a -4.0)))) b)) b) (- (sqrt (fma b b (* c (* a -4.0)))) b)) (* a 4.0))) (* (/ b a) -0.25)) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 4.0))))",
    "output_parens": 53,
    "avg_bits_err_input": 52.931795447052565,
    "avg_bits_err_output": 51.82749959596874,
    "avg_bits_err_improve": 1.104295851083826,
    "time": 31411.17822265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* b (/ -0.25 a)) 0.0) (/ (fma (* b (/ -0.25 a)) (* b (/ -0.25 a)) (* (* b (/ -0.25 a)) (/ (+ (sqrt (fma -4.0 (* a c) (* b b))) (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b))))) (* a 8.0)))) (* b (/ -0.25 a))) (/ (+ (sqrt (fma -4.0 (* a c) (* b b))) (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))))) (* a 8.0)))",
    "output_parens": 50,
    "avg_bits_err_input": 28.60219856016556,
    "avg_bits_err_output": 28.38886893418932,
    "avg_bits_err_improve": 0.21332962597624316,
    "time": 32370.14990234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-15) (/ (+ (sqrt (fma b b (* (* a c) -4.0))) (+ (sqrt (fma b b (* (* a c) -4.0))) (* b -2.0))) (* a 4.0)) (/ (log (log (+ 1.0 (if (!= (exp (exp (- (sqrt (fma a (* c -4.0) (* b b))) b))) 0.0) (/ (* (expm1 (exp (- (sqrt (fma a (* c -4.0) (* b b))) b))) (exp (exp (- (sqrt (fma a (* c -4.0) (* b b))) b)))) (exp (exp (- (sqrt (fma a (* c -4.0) (* b b))) b)))) (expm1 (exp (- (sqrt (fma a (* c -4.0) (* b b))) b))))))) (* a 2.0)))",
    "output_parens": 68,
    "avg_bits_err_input": 44.26002592204503,
    "avg_bits_err_output": 41.09950491496016,
    "avg_bits_err_improve": 3.160521007084874,
    "time": 25273.673828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (+ (sqrt (fma b b (* (* a c) -4.0))) (* b -2.0)) (sqrt (fma b b (* (* a c) -4.0)))) (* a 4.0))",
    "output_parens": 13,
    "avg_bits_err_input": 33.96409567475518,
    "avg_bits_err_output": 33.97104328979705,
    "avg_bits_err_improve": -0.006947615041873689,
    "time": 19731.0732421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (* (cos phi1) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))) (cos phi1)) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.8975531091494992,
    "avg_bits_err_output": 0.8981351940633159,
    "avg_bits_err_improve": -0.0005820849138167272,
    "time": 23956.614990234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (- 3.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (- 1.0 (* (+ -2.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) (+ -2.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) (- 3.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 30,
    "avg_bits_err_input": 29.275680607362645,
    "avg_bits_err_output": 29.277121964516475,
    "avg_bits_err_improve": -0.0014413571538298697,
    "time": 19117.472900390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (if (!= (+ (exp x) 1.0) 0.0) (/ (* (- -1.0 (exp x)) (- (expm1 (- x)) (+ (exp x) -1.0))) (+ (exp x) 1.0)) (- (exp x) (exp (- x)))) (+ (exp x) (exp (- x))))",
    "output_parens": 24,
    "avg_bits_err_input": 58.096357746333474,
    "avg_bits_err_output": 50.28958332356354,
    "avg_bits_err_improve": 7.806774422769934,
    "time": 16214.2890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.96805335612618,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 57.96055335612618,
    "time": 11816.78564453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- 0.0 (- (expm1 (log1p (/ 2.0 (+ (exp x) (exp (- x)))))) (/ 4.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.010417481250360577,
    "avg_bits_err_output": 0.011773684376262023,
    "avg_bits_err_improve": -0.0013562031259014458,
    "time": 5208.847900390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.698094360937773,
    "avg_bits_err_output": 31.698094360937773,
    "avg_bits_err_improve": 0,
    "time": 3750.978271484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (/ (* x x) (* (+ x -1.0) (+ x -1.0))) 0.0) (- (- (/ (* x (/ x (* x x))) (* (+ x -1.0) (+ x -1.0))) 0.0) (/ 1.0 (/ 1.0 (/ (* x x) (* (+ x -1.0) (+ x -1.0)))))) (/ (fma x x -1.0) (* (+ x -1.0) (- 1.0 x))))))",
    "output_parens": 30,
    "avg_bits_err_input": 58.610680513426786,
    "avg_bits_err_output": 58.61517242788461,
    "avg_bits_err_improve": -0.004491914457823043,
    "time": 17705.385986328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.0002500000000000002,
    "time": 2237.87353515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.124,
    "avg_bits_err_output": 0.124,
    "avg_bits_err_improve": 0,
    "time": 22866.096435546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1261462406251803,
    "avg_bits_err_improve": 0,
    "time": 14572.030517578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.29166150430416,
    "avg_bits_err_output": 3.735432900672037,
    "avg_bits_err_improve": 35.55622860363212,
    "time": 23536.49072265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.241415957400738,
    "avg_bits_err_output": 14.241415957400738,
    "avg_bits_err_improve": 0,
    "time": 3198.08349609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (fma (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (cos delta))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.15151540977261335,
    "avg_bits_err_output": 0.15202240456101637,
    "avg_bits_err_improve": -0.0005069947884030201,
    "time": 34883.0703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (+ b (sqrt (fma b b (* c (* a -3.0))))) (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b))) (+ b (sqrt (fma b b (* c (* a -3.0)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (fma (- (fabs b)) (fabs b) (* b b))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 63,
    "avg_bits_err_input": 52.923375528437695,
    "avg_bits_err_output": 51.56626474873595,
    "avg_bits_err_improve": 1.357110779701749,
    "time": 33584.410888671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (+ (- (/ 0.0 (+ b (sqrt (fma -3.0 (* c a) (* b b))))) (- b (sqrt (fma -3.0 (* c a) (* b b))))) (/ (fma (- (sqrt (fma -3.0 (* c a) (* b b)))) (sqrt (fma -3.0 (* c a) (* b b))) (* (sqrt (fma -3.0 (* c a) (* b b))) (sqrt (fma -3.0 (* c a) (* b b))))) (- (- b) (sqrt (fma -3.0 (* c a) (* b b)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 54,
    "avg_bits_err_input": 28.7157085658012,
    "avg_bits_err_output": 28.249210912243708,
    "avg_bits_err_improve": 0.46649765355749295,
    "time": 33130.927001953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (* b (- b)) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 85,
    "avg_bits_err_input": 44.29182590516657,
    "avg_bits_err_output": 43.279202961167684,
    "avg_bits_err_improve": 1.0126229439988848,
    "time": 26475.93212890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (/ (+ (sqrt (+ (* b b) (* a (* c -3.0)))) (- b)) 3.0) a)",
    "output_parens": 9,
    "avg_bits_err_input": 34.013940608330714,
    "avg_bits_err_output": 34.013817636057524,
    "avg_bits_err_improve": 0.00012297227318924797,
    "time": 22957.249267578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.473314311980436,
    "avg_bits_err_output": 13.473314311980436,
    "avg_bits_err_improve": 0,
    "time": 31098.51416015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.91820384602095,
    "avg_bits_err_output": 0.5215365739310077,
    "avg_bits_err_improve": 28.396667272089942,
    "time": 21453.32421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ x -1.0)) (/ x (+ 2.0 (+ x x)))) (/ x (+ 2.0 (+ x x))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011,
    "avg_bits_err_output": 0.027999503815187884,
    "avg_bits_err_improve": -0.016999503815187885,
    "time": 5745.9404296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (if (!= (/ x (+ x -1.0)) 0.0) (/ (- x (* x (/ x (+ x -1.0)))) x) (- 1.0 (/ x (+ x -1.0)))) (- (/ 1.0 (+ x -1.0)))) (+ 1.0 x))",
    "output_parens": 18,
    "avg_bits_err_input": 14.696180249082623,
    "avg_bits_err_output": 12.521998897536331,
    "avg_bits_err_improve": 2.1741813515462916,
    "time": 17858.63427734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (- C)) (* (fma (+ (pow B 2.0) (* (* A C) -4.0)) F (fma (* (* A C) -4.0) F (* A (* F (* C 4.0))))) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C)))))",
    "output_parens": 28,
    "avg_bits_err_input": 52.2410603264072,
    "avg_bits_err_output": 52.180020970507606,
    "avg_bits_err_improve": 0.061039355899595193,
    "time": 43962.206298828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* (atan (* (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- C A)) (/ -1.0 B))) (/ 180.0 PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.474804534991712,
    "avg_bits_err_output": 29.472912513814492,
    "avg_bits_err_improve": 0.0018920211772197604,
    "time": 20971.05029296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (+ (* A (* 2.0 (* F (- (pow B 2.0) (* 4.0 (* A C)))))) (* (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* 2.0 (* F (- (pow B 2.0) (* 4.0 (* A C)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 27,
    "avg_bits_err_input": 52.72704333584218,
    "avg_bits_err_output": 52.420426399674675,
    "avg_bits_err_improve": 0.30661693616750796,
    "time": 37938.684814453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.773959931546122,
    "avg_bits_err_output": 15.773959931546122,
    "avg_bits_err_improve": 0,
    "time": 1985.573974609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (fma g -1.0 (sqrt (* (+ g h) (- g h)))))) (cbrt (* (/ -0.5 a) (if (!= g 0.0) (/ (* g (+ g (sqrt (- (* g g) (* h h))))) g) (+ g (sqrt (- (* g g) (* h h))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 35.86431059287852,
    "avg_bits_err_output": 35.76863433116881,
    "avg_bits_err_improve": 0.09567626170970556,
    "time": 16696.434814453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9894441894575653,
    "avg_bits_err_output": 0.9754317671895736,
    "avg_bits_err_improve": 0.014012422267991709,
    "time": 6191.001953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (+ (exp a) (expm1 b)) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.7002193609377705,
    "avg_bits_err_output": 0.7256982392205324,
    "avg_bits_err_improve": -0.025478878282761963,
    "time": 15785.305908203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -2e+290) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-238) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 4e-262) (* a2 (/ (/ a1 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+294) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 11.460099516228876,
    "avg_bits_err_output": 3.458387754656833,
    "avg_bits_err_improve": 8.001711761572043,
    "time": 11604.658203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(+ (* x y) (+ (log1p (exp x)) (* (- y) (+ x x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5379376695931969,
    "avg_bits_err_output": 0.4988231203125902,
    "avg_bits_err_improve": 0.0391145492806067,
    "time": 8873.56689453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (+ x (- (expm1 (log (+ (hypot 1.0 x) 2.0))) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 53.05676708120647,
    "avg_bits_err_output": 45.0905249782307,
    "avg_bits_err_improve": 7.966242102975777,
    "time": 15156.856201171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.675553231529634,
    "avg_bits_err_output": 5.675553231529634,
    "avg_bits_err_improve": 0,
    "time": 15606.8271484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- x (- 2.0 x)) (- -2.0 (+ x x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.016323120312590145,
    "avg_bits_err_improve": -0.005073120312590145,
    "time": 2777.70458984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1131.475341796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 1.2e-33) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (/ r (- 1.0 v)) (* w (* w r)))) 4.5)) (- (- (+ 3.0 (/ 2.0 (* r r))) (* (/ (- 0.375 (* v 0.25)) (- 1.0 v)) (* w (* r (* r w))))) 4.5))",
    "output_parens": 29,
    "avg_bits_err_input": 13.006076314377172,
    "avg_bits_err_output": 0.3496727453198018,
    "avg_bits_err_improve": 12.65640356905737,
    "time": 21393.91064453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (* (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0)) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5146300528268175,
    "avg_bits_err_output": 0.27440240740892835,
    "avg_bits_err_improve": 0.24022764541788916,
    "time": 66200.51391601562,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.04225740340445,
    "avg_bits_err_output": 1.3973193946950893,
    "avg_bits_err_improve": 16.64493800870936,
    "time": 9695.166015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.19424060156295073,
    "avg_bits_err_output": 0.19424060156295073,
    "avg_bits_err_improve": 0,
    "time": 7656.978515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0035,
    "avg_bits_err_output": 0.0035,
    "avg_bits_err_improve": 0,
    "time": 2430.93505859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ (/ (- (/ -0.5 b) (/ -0.5 a)) (* a (/ 1.0 a))) (+ a b)) (/ PI (- b a)))",
    "output_parens": 11,
    "avg_bits_err_input": 14.080555225714622,
    "avg_bits_err_output": 0.2984704906396033,
    "avg_bits_err_improve": 13.782084735075019,
    "time": 15196.189697265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (- (/ (exp (* x (+ -1.0 eps))) (+ eps eps)) (- (/ (exp (* x (- -1.0 eps))) eps) (/ (exp (* x (+ -1.0 eps))) (+ eps eps)))) (- (- (exp (* x (- -1.0 eps))))))) 2.0)",
    "output_parens": 27,
    "avg_bits_err_input": 29.945426673179135,
    "avg_bits_err_output": 0.9392403860743537,
    "avg_bits_err_improve": 29.006186287104782,
    "time": 13051.96435546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (if (!= (/ 1.0 (+ (- 4.0 (/ (+ 4.0 (- 4.0 (/ 4.0 (+ t (/ t t))))) (+ t (/ t t)))) 2.0)) 0.0) (/ (/ (/ 1.0 (+ (- 4.0 (/ (+ 4.0 (- 4.0 (/ 4.0 (+ t (/ t t))))) (+ t (/ t t)))) 2.0)) (+ (- 4.0 (/ (+ 4.0 (- 4.0 (/ 4.0 (+ t (/ t t))))) (+ t (/ t t)))) 2.0)) (/ 1.0 (+ (- 4.0 (/ (+ 4.0 (- 4.0 (/ 4.0 (+ t (/ t t))))) (+ t (/ t t)))) 2.0))) (/ 1.0 (+ (- 4.0 (/ (+ 4.0 (- 4.0 (/ 4.0 (+ t (/ t t))))) (+ t (/ t t)))) 2.0))))",
    "output_parens": 59,
    "avg_bits_err_input": 0.020125,
    "avg_bits_err_output": 0.012167481250360579,
    "avg_bits_err_improve": 0.007957518749639422,
    "time": 6716.188232421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.02475,
    "avg_bits_err_output": 0.02475,
    "avg_bits_err_improve": 0,
    "time": 10340.638427734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (/ (* t 4.0) (+ t 1.0)))) (+ 2.0 (* (/ t (+ t 1.0)) (/ (* t 4.0) (+ t 1.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.0315,
    "avg_bits_err_output": 0.0395,
    "avg_bits_err_improve": -0.008,
    "time": 10702.671142578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3302.823486328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2444.784912109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2993.137939453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.860831900243411,
    "avg_bits_err_output": 0.248375,
    "avg_bits_err_improve": 7.61245690024341,
    "time": 19402.671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.365979288052949,
    "avg_bits_err_output": 7.365979288052949,
    "avg_bits_err_improve": 0,
    "time": 4243.959228515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.15603944471507,
    "avg_bits_err_output": 16.15603944471507,
    "avg_bits_err_improve": 0,
    "time": 3740.3544921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (if (!= (exp (* x (* x 10.0))) 0.0) (/ 1.0 (* (/ 1.0 (exp (* 10.0 (* x x)))) (- 0.0 (* (if (!= (+ 1.0 (exp (log1p (exp (* 10.0 (* x x)))))) 0.0) (/ (+ (* (exp (log1p (exp (* 10.0 (* x x))))) (exp (log1p (exp (* 10.0 (* x x)))))) -1.0) (+ 1.0 (exp (log1p (exp (* 10.0 (* x x))))))) (exp (* 10.0 (* x x)))) (/ -1.0 (exp (* 10.0 (* x x)))))))) (exp (* x (* x 10.0)))))",
    "output_parens": 52,
    "avg_bits_err_input": 3.531589396523647,
    "avg_bits_err_output": 3.5282120071457204,
    "avg_bits_err_improve": 0.003377389377926754,
    "time": 19050.89599609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ (+ (/ x (fma x x 1.0)) (/ (+ x (+ x x)) (fma x x 1.0))) 4.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 15.354761371984198,
    "avg_bits_err_improve": -0.018837108853606566,
    "time": 12318.793701171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.289253767540075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.289253767540075,
    "time": 3788.546630859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.72356555091175,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.72306555091175,
    "time": 3920.479736328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.253,
    "avg_bits_err_improve": 63.747,
    "time": 23358.728515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325825111469,
    "avg_bits_err_output": 0.402625,
    "avg_bits_err_improve": 61.44063325111469,
    "time": 7443.084228515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- INFINITY)) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) 1e+303) (/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0)))))",
    "output_parens": 53,
    "avg_bits_err_input": 34.07549345058352,
    "avg_bits_err_output": 29.1764699765927,
    "avg_bits_err_improve": 4.899023473990823,
    "time": 23342.447265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (+ (sqrt (fma b b (* (* a c) -4.0))) (* b -2.0)) (sqrt (fma b b (* (* a c) -4.0)))) (* a 4.0))",
    "output_parens": 13,
    "avg_bits_err_input": 33.96409567475518,
    "avg_bits_err_output": 33.97104328979705,
    "avg_bits_err_improve": -0.006947615041873689,
    "time": 24011.94580078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2566.595947265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.09852066573798,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 40.08727066573798,
    "time": 9775.642333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.502515420042872,
    "avg_bits_err_output": 20.502515420042872,
    "avg_bits_err_improve": 0,
    "time": 3841.91162109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ c (+ b (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6591384579897333,
    "avg_bits_err_output": 0.019331300966383105,
    "avg_bits_err_improve": 3.63980715702335,
    "time": 7681.032470703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037875,
    "avg_bits_err_output": 0.037875,
    "avg_bits_err_improve": 0,
    "time": 6138.154296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021948120312590146,
    "avg_bits_err_output": 0.0175,
    "avg_bits_err_improve": 0.004448120312590145,
    "time": 2578.2333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.014625,
    "avg_bits_err_output": 0.014625,
    "avg_bits_err_improve": 0,
    "time": 3563.583984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 1819.0107421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39961353437914676,
    "avg_bits_err_output": 0.24425,
    "avg_bits_err_improve": 0.15536353437914677,
    "time": 5528.098876953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (fma (/ (cos x) (- -2.0 (* (cos x) 2.0))) (cos x) (/ (fma (cos x) (cos x) -2.0) (+ (- -1.0 (cos x)) (- -1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 22,
    "avg_bits_err_input": 30.290450352934208,
    "avg_bits_err_output": 30.29307306650248,
    "avg_bits_err_improve": -0.002622713568271706,
    "time": 19608.280517578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (if (!= (* eps (/ (* x x) eps)) 0.0) (* (- (* x x) eps) (/ (* x x) (* eps (/ (* x x) eps)))) (fma x x (- eps))) (- (* x x) eps))))",
    "output_parens": 21,
    "avg_bits_err_input": 24.796915210370255,
    "avg_bits_err_output": 24.85201524511714,
    "avg_bits_err_improve": -0.05510003474688574,
    "time": 11612.730224609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (- -2.0 (/ (- x (sin x)) (tan x))) 0.0) (/ (/ (- (log (+ 1.0 (expm1 (fma (+ 1.0 (/ (- x (sin x)) (tan x))) (+ 1.0 (/ (- x (sin x)) (tan x))) -1.0)))) (- (- 2.0 (* (+ 1.0 (/ (- x (sin x)) (tan x))) (+ 1.0 (/ (- x (sin x)) (tan x))))) (fma (+ 1.0 (/ (- x (sin x)) (tan x))) (+ 1.0 (/ (- x (sin x)) (tan x))) (fma (+ 1.0 (/ (- x (sin x)) (tan x))) (+ 1.0 (/ (- x (sin x)) (tan x))) -1.0)))) 4.0) (+ (/ (- x (sin x)) (tan x)) 2.0)) (/ (- x (sin x)) (tan x)))",
    "output_parens": 68,
    "avg_bits_err_input": 29.532143519155557,
    "avg_bits_err_output": 29.540535533677513,
    "avg_bits_err_improve": -0.008392014521955815,
    "time": 43475.47900390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006198120312590144,
    "avg_bits_err_output": 0.006198120312590144,
    "avg_bits_err_improve": 0,
    "time": 2044.4716796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -2e+69) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (+ i i))) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 4e+110) (/ (if (!= (fma (pow (+ 1.0 (/ i n)) n) 100.0 100.0) 0.0) (/ (fma (pow (+ 1.0 (/ i n)) n) (* (pow (+ 1.0 (/ i n)) n) 10000.0) -10000.0) (fma (pow (+ 1.0 (/ i n)) n) 100.0 100.0)) (- -100.0 (* -100.0 (pow (+ 1.0 (/ i n)) n)))) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log (+ 1.0 (expm1 (+ i i)))) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 81,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 42.924930414845896,
    "avg_bits_err_improve": 4.523926818393292,
    "time": 31247.4638671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (/ (* b d) (+ (* d d) (* c c))) (* a (/ c (+ (* d d) (* c c)))))",
    "output_parens": 11,
    "avg_bits_err_input": 26.07241525507372,
    "avg_bits_err_output": 24.528985691191078,
    "avg_bits_err_improve": 1.5434295638826434,
    "time": 13629.35693359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma d d (* c c))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 2e+297) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma d d (* c c)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 26.106454942368067,
    "avg_bits_err_output": 22.757017176074317,
    "avg_bits_err_improve": 3.3494377662937502,
    "time": 15003.0400390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (if (!= ux 0.0) (/ (* ux (fma ux maxCos (- ux))) ux) (fma ux maxCos (- ux))) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.033625,
    "avg_bits_err_output": 0.029048457997890808,
    "avg_bits_err_improve": 0.004576542002109194,
    "time": 8687.934326171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- (- ux (- (* ux ux) ux)) (+ (* ux (* maxCos (fma ux maxCos (- 1.0 ux)))) (* ux (* maxCos (- 1.0 ux)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.369883984414619,
    "avg_bits_err_output": 0.5618758913343587,
    "avg_bits_err_improve": 12.808008093080261,
    "time": 30505.947998046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- (+ ux ux) (* ux ux)) (- (* (* ux maxCos) (+ (fma ux maxCos (- 1.0 ux)) (- 1.0 ux)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.402046285481308,
    "avg_bits_err_output": 0.3202253592113851,
    "avg_bits_err_improve": 13.081820926269923,
    "time": 26886.7734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33738181104624615,
    "avg_bits_err_output": 0.3272237736569437,
    "avg_bits_err_improve": 0.010158037389302432,
    "time": 45246.103759765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (log1p (expm1 (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 51,
    "avg_bits_err_input": 0.20460615593600745,
    "avg_bits_err_output": 0.2230724573088618,
    "avg_bits_err_improve": -0.01846630137285435,
    "time": 24513.847412109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (- (/ 0.0 (/ 1.0 (- 1.0 u1))) (/ (/ 1.0 (* (- 1.0 u1) (- 1.0 u1))) (- (/ 1.0 (- 1.0 u1))))) u1)) (sin (* 6.28318530718 u2)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.5396182899107279,
    "avg_bits_err_output": 0.5453451007271216,
    "avg_bits_err_improve": -0.0057268108163937015,
    "time": 20695.546630859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- (+ (- u1) 0.5) -0.5))) (cos (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3202862910193155,
    "avg_bits_err_output": 0.32689565192909975,
    "avg_bits_err_improve": -0.0066093609097842565,
    "time": 20304.458251953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (if (!= (/ PI s) 0.0) (/ 1.0 (/ 1.0 (/ PI s))) (/ PI s))))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.33423293891705724,
    "avg_bits_err_output": 0.33535138048957047,
    "avg_bits_err_improve": -0.001118441572513229,
    "time": 62423.604736328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06337955531749875,
    "avg_bits_err_output": 0.06337955531749875,
    "avg_bits_err_improve": 0,
    "time": 10355.927490234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (fabs x) (- s)))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16429215136219916,
    "avg_bits_err_output": 0.149155705432549,
    "avg_bits_err_improve": 0.01513644592965016,
    "time": 16217.00048828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641084826074513,
    "avg_bits_err_output": 0.6641084826074513,
    "avg_bits_err_improve": 0,
    "time": 20102.364013671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.16916530269330018,
    "avg_bits_err_output": 0.16916530269330018,
    "avg_bits_err_improve": 0,
    "time": 22419.80419921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.514782104455441,
    "avg_bits_err_output": 2.5111052247680314,
    "avg_bits_err_improve": 0.0036768796874095955,
    "time": 35586.3427734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (* cosTheta_i cosTheta_O) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) v)) (* (sinh (/ 1.0 v)) (* v 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4633497118029939,
    "avg_bits_err_output": 0.4081716782701151,
    "avg_bits_err_improve": 0.05517803353287881,
    "time": 26494.9130859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ 0.6931 (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (log (/ 0.5 v)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.12518526195804403,
    "avg_bits_err_output": 0.12640137166828339,
    "avg_bits_err_improve": -0.0012161097102393603,
    "time": 20345.89501953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46386933414691894,
    "avg_bits_err_output": 0.46386933414691894,
    "avg_bits_err_improve": 0,
    "time": 23641.632568359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(if (!= (* 3.0 s) 0.0) (* (/ (/ s s) -3.0) (* 9.0 (- (* s (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))) (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) (* 3.0 s)))",
    "output_parens": 17,
    "avg_bits_err_input": 1.3216063405233007,
    "avg_bits_err_output": 1.2030244526215146,
    "avg_bits_err_improve": 0.11858188790178614,
    "time": 26628.92822265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (log (/ 1.0 (+ 1.0 (* u -4.0)))) 0.0) (/ 1.0 (expm1 (log1p (/ 1.0 (log1p (expm1 (log (/ 1.0 (fma u -4.0 1.0))))))))) (log (/ 1.0 (+ 1.0 (* u -4.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 12.438894629017375,
    "avg_bits_err_output": 12.455315662039297,
    "avg_bits_err_improve": -0.016421033021922327,
    "time": 28282.463623046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(* (/ (/ 0.125 r) PI) (/ (+ (exp (/ r (* s -3.0))) (exp (/ (- r) s))) s))",
    "output_parens": 11,
    "avg_bits_err_input": 0.14841609693991722,
    "avg_bits_err_output": 0.1551720042127214,
    "avg_bits_err_improve": -0.006755907272804174,
    "time": 22945.690185546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i) (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9172214596710796,
    "avg_bits_err_output": 0.7470542059285746,
    "avg_bits_err_improve": 0.17016725374250496,
    "time": 23153.53857421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7000439462243894,
    "avg_bits_err_output": 0.48994152699850196,
    "avg_bits_err_improve": 0.2101024192258874,
    "time": 21982.7060546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (if (!= (* PI (* 2.0 u2)) 0.0) (/ (- (* u2 (* PI (* (* PI u2) 4.0))) (* (* u2 0.0) (* u2 0.0))) (* PI (* 2.0 u2))) (* PI (* 2.0 u2)))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.726960596178067,
    "avg_bits_err_output": 13.735033156222295,
    "avg_bits_err_improve": -0.008072560044228183,
    "time": 24874.16748046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (log1p (if (!= (expm1 (sqrt (- (log (- 1.0 u1))))) 0.0) (/ 1.0 (/ 1.0 (expm1 (sqrt (- (log (- 1.0 u1))))))) (expm1 (sqrt (- (log (- 1.0 u1))))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 24,
    "avg_bits_err_input": 13.768073639905353,
    "avg_bits_err_output": 13.7726789883687,
    "avg_bits_err_improve": -0.0046053484633468145,
    "time": 31442.567626953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (* (log (- 1.0 u0)) (* alpha alpha)) 0.0) (/ 1.0 (/ (/ -1.0 (* alpha alpha)) (if (!= (- -2.0 (log (- 1.0 u0))) 0.0) (/ (fma (+ 1.0 (log (- 1.0 u0))) (+ 1.0 (log (- 1.0 u0))) -1.0) (+ (log (- 1.0 u0)) 2.0)) (log (- 1.0 u0))))) (* (log (- 1.0 u0)) (- (* alpha alpha))))",
    "output_parens": 33,
    "avg_bits_err_input": 14.356825423854707,
    "avg_bits_err_output": 14.46287461004068,
    "avg_bits_err_improve": -0.10604918618597381,
    "time": 18421.2822265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.657366776701199,
    "avg_bits_err_output": 12.657366776701199,
    "avg_bits_err_improve": 0,
    "time": 17725.228759765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (- INFINITY)) (- (* PI l) (/ (/ 1.0 F) (* F (- (/ 1.0 (tan (* PI l))) (/ 0.0 F))))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) -2e+223) (- (* PI l) (* (/ F F) (if (!= (/ F (* F (/ F (/ (tan (* PI l)) (* F 2.0))))) 0.0) (/ (+ 0.0 (/ 1.0 (/ F (/ (tan (* PI l)) F)))) (* (/ F (* F (/ (+ F F) (/ (tan (* PI l)) (* F 2.0))))) (/ (+ F F) (/ (tan (* PI l)) (* F 2.0))))) (+ 0.0 (/ 1.0 (/ F (/ (tan (* PI l)) F))))))) (- (* PI l) (/ (/ 1.0 F) (* F (- (/ 1.0 (tan (* PI l))) (/ 0.0 F)))))))",
    "output_parens": 80,
    "avg_bits_err_input": 16.61431987146278,
    "avg_bits_err_output": 11.671998144162314,
    "avg_bits_err_improve": 4.942321727300465,
    "time": 20304.59912109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (- (/ x (tan B)) (/ -1.0 (sin B))) (* (/ x (tan B)) 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.21891901566846755,
    "avg_bits_err_output": 0.17302277504328728,
    "avg_bits_err_improve": 0.045896240625180273,
    "time": 15652.65380859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.808494131170866,
    "avg_bits_err_output": 10.454000934505217,
    "avg_bits_err_improve": 3.354493196665649,
    "time": 21694.2392578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (fma (- (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (- (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (/ PI -4.0))",
    "output_parens": 98,
    "avg_bits_err_input": 61.56136905097554,
    "avg_bits_err_output": 61.56606598095502,
    "avg_bits_err_improve": -0.004696929979473907,
    "time": 59312.917724609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= l 5.2e+66) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0))))))) (if (<= l 1.3e+204) (- (exp (log1p (* t (/ (sqrt 2.0) (sqrt (fma l (- (* (/ (+ x 1.0) (+ x -1.0)) l) l) (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))))))))) 1.0) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (fma (- l) l (* (/ (+ x 1.0) (+ x -1.0)) (* l l))))))))",
    "output_parens": 60,
    "avg_bits_err_input": 42.539973515654495,
    "avg_bits_err_output": 35.87806004470227,
    "avg_bits_err_improve": 6.661913470952221,
    "time": 32964.218994140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8189911087062542,
    "avg_bits_err_output": 3.8189911087062542,
    "avg_bits_err_improve": 0,
    "time": 25540.55322265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8909181020552495,
    "avg_bits_err_output": 0.8909181020552495,
    "avg_bits_err_improve": 0,
    "time": 9730.385986328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 10.300471547290924,
    "avg_bits_err_improve": 0,
    "time": 13974.028076171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-189) (sqrt (* (* 2.0 n) (* U (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om)))))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))))",
    "output_parens": 43,
    "avg_bits_err_input": 34.25266843955151,
    "avg_bits_err_output": 29.46330437479357,
    "avg_bits_err_improve": 4.789364064757944,
    "time": 35509.318115234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ 1.0 (* (/ (sin k) l) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 47.49037683069059,
    "avg_bits_err_output": 36.14604952148208,
    "avg_bits_err_improve": 11.344327309208516,
    "time": 36198.680908203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l))) (tan k)) l))",
    "output_parens": 12,
    "avg_bits_err_input": 32.127143358607746,
    "avg_bits_err_output": 27.388470105221064,
    "avg_bits_err_improve": 4.738673253386683,
    "time": 18018.88623046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (+ (fma (/ a2 (* (sqrt 2.0) 4.0)) a2 (* a2 (/ (+ a2 (+ a2 a2)) (* (sqrt 2.0) 4.0)))) (* a1 (/ a1 (sqrt 2.0)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5379524469000625,
    "avg_bits_err_output": 0.49111748439934083,
    "avg_bits_err_improve": 0.046834962500721666,
    "time": 22881.99365234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (if (!= (* 2.0 (* PI n)) 0.0) (/ 1.0 (/ 1.0 (* 2.0 (* PI n)))) (* 2.0 (* PI n))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4852067580956259,
    "avg_bits_err_output": 0.49597993812895047,
    "avg_bits_err_improve": -0.010773180033324559,
    "time": 18338.702392578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma (- (exp l) (exp (- l))) J (fma (- (exp (- l))) J (* (exp (- l)) J))) (cos (/ K 2.0))) U)",
    "output_parens": 16,
    "avg_bits_err_input": 17.53553653168156,
    "avg_bits_err_output": 17.534555896665957,
    "avg_bits_err_improve": 0.0009806350156047472,
    "time": 24399.12646484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (fabs (- m n)) (+ (pow (- (/ (+ m n) 2.0) M) 2.0) l))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.58374602098597,
    "avg_bits_err_output": 15.584311466230476,
    "avg_bits_err_improve": -0.0005654452445060798,
    "time": 6784.56982421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* -2.0 J) (* (cos (/ K 2.0)) (sqrt (+ 1.0 (pow (/ (/ U (* 2.0 J)) (cos (/ K 2.0))) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.186511842188136,
    "avg_bits_err_output": 18.19470996250072,
    "avg_bits_err_improve": -0.008198120312584933,
    "time": 27789.4638671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (/ (* D M) (* 2.0 d)) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.013086210429998,
    "avg_bits_err_output": 10.605552984371853,
    "avg_bits_err_improve": 3.4075332260581455,
    "time": 16269.217041015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 4e-300) (* c0 (sqrt (* 4.0 (/ (/ A (+ l l)) (+ V V))))) (if (<= (/ A (* V l)) 1e+303) (* c0 (sqrt (+ (/ (/ A (* l V)) 4.0) (/ (+ A (+ A A)) (* (+ l l) (+ V V)))))) (- (if (!= (* (sqrt (/ (/ A l) V)) (/ c0 (/ (fma (sqrt (/ (/ A l) V)) c0 1.0) (- -1.0 (* (sqrt (/ (/ A l) V)) c0))))) 0.0) (* (- (/ (fma (sqrt (/ (/ A l) V)) c0 1.0) (fma (sqrt (/ (/ A l) V)) c0 1.0)) (* (sqrt (/ (/ A l) V)) (/ c0 (/ (fma (sqrt (/ (/ A l) V)) c0 1.0) (- -1.0 (* (sqrt (/ (/ A l) V)) c0)))))) (- (* (sqrt (/ (/ A l) V)) (/ c0 (* (sqrt (/ (/ A l) V)) c0))) (/ 0.0 (/ (fma (sqrt (/ (/ A l) V)) c0 1.0) (- -1.0 (* (sqrt (/ (/ A l) V)) c0)))))) (fma (sqrt (/ (/ A l) V)) c0 1.0)) 1.0)))",
    "output_parens": 96,
    "avg_bits_err_input": 18.845743201392345,
    "avg_bits_err_output": 15.476022333056923,
    "avg_bits_err_improve": 3.3697208683354223,
    "time": 19123.01220703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* D D) 5e-258) (* c0 (/ (+ (* c0 (* (/ d D) (/ (/ (/ d w) h) D))) (sqrt (* (fma (/ d D) (* c0 (/ (/ (/ d w) h) D)) M) (fma c0 (* (/ d D) (/ (/ (/ d w) h) D)) (- M))))) (+ w w))) (* (/ c0 (* 2.0 w)) (+ (* d (* c0 (/ (/ d (* (* D w) D)) h))) (sqrt (* (fma d (* c0 (/ (/ d (* (* D w) D)) h)) M) (- (* d (* c0 (/ (/ d (* (* D w) D)) h))) M))))))",
    "output_parens": 53,
    "avg_bits_err_input": 59.545428212516434,
    "avg_bits_err_output": 54.12988155620257,
    "avg_bits_err_improve": 5.415546656313865,
    "time": 43042.91162109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (/ (* h (pow (* M (/ D (+ d d))) 2.0)) (+ l l))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.92738928625457,
    "avg_bits_err_output": 26.387256510268106,
    "avg_bits_err_improve": 0.5401327759864643,
    "time": 41049.620361328125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (- (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (- 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) -2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 15.40199340572836,
    "avg_bits_err_output": 14.930997879982858,
    "avg_bits_err_improve": 0.4709955257455025,
    "time": 17710.261474609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9841981203125901,
    "avg_bits_err_output": 0.012771240625180291,
    "avg_bits_err_improve": 0.9714268796874098,
    "time": 3831.756591796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- (/ (/ 1.0 PI) t) (* 5.0 (/ (/ (* v v) PI) t))) (* (sqrt (- 2.0 (* (* v v) 6.0))) (- 1.0 (* v v))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4565768815682678,
    "avg_bits_err_output": 0.27917012851402434,
    "avg_bits_err_improve": 0.17740675305424347,
    "time": 21127.37890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (if (!= (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))) 0.0) (/ 1.0 (/ 1.0 (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v)))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.012323120312590145,
    "avg_bits_err_output": 0.014761842188131013,
    "avg_bits_err_improve": -0.0024387218755408686,
    "time": 9214.0390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (if (!= (/ (- 1.0 (* v (* v -5.0))) (- 1.0 (* v v))) 0.0) (* (/ (fma v (* v -5.0) -1.0) (- 1.0 (* v v))) (- (/ (+ (* v (* v -10.0)) 2.0) (+ (* (* v v) 10.0) 2.0)) 0.0)) (/ (fma v (* v -5.0) 1.0) (fma v v -1.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 0.508847125251714,
    "avg_bits_err_output": 0.5303421767584648,
    "avg_bits_err_improve": -0.021495051506750795,
    "time": 12890.28271484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9987596601181528,
    "avg_bits_err_output": 1.9652384194929726,
    "avg_bits_err_improve": 0.03352124062518014,
    "time": 14148.58837890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ Vef EDonor) (- Ec mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.016281150418828574,
    "avg_bits_err_output": 0.016281150418828574,
    "avg_bits_err_improve": 0,
    "time": 7319.202880859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18960735349127605,
    "avg_bits_err_output": 0.18960735349127605,
    "avg_bits_err_improve": 0,
    "time": 12471.233154296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (if (!= (pow (fma a a (* b b)) 2.0) 0.0) (* (pow (fma a a (* b b)) 2.0) (/ (fma 4.0 (fma a (fma a a a) (* b (* b (- 1.0 (* 3.0 a))))) (pow (fma a a (* b b)) 2.0)) (pow (fma a a (* b b)) 2.0))) (fma 4.0 (fma a (fma a a a) (* b (* b (- 1.0 (* 3.0 a))))) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 34,
    "avg_bits_err_input": 0.18656697967695074,
    "avg_bits_err_output": 0.18982887503427864,
    "avg_bits_err_improve": -0.003261895357327904,
    "time": 17015.070556640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18854912789656242,
    "avg_bits_err_output": 0.18854912789656242,
    "avg_bits_err_improve": 0,
    "time": 4995.4462890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (- (exp (log1p (/ x (sqrt (fma 4.0 (* p p) (* x x)))))) 0.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.75244049231281,
    "avg_bits_err_output": 13.751857715376362,
    "avg_bits_err_improve": 0.0005827769364472601,
    "time": 13522.637939453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.75957069438255,
    "avg_bits_err_output": 0.081375,
    "avg_bits_err_improve": 40.67819569438255,
    "time": 5439.460693359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(if (!= (/ (sin x) (- x (tan x))) 0.0) (- (/ (* (/ x (- x (tan x))) (/ (sin x) (- x (tan x)))) (/ (sin x) (- x (tan x)))) (/ 1.0 (/ 1.0 (/ (sin x) (- x (tan x)))))) (/ (- x (sin x)) (- x (tan x))))",
    "output_parens": 31,
    "avg_bits_err_input": 31.426259028215274,
    "avg_bits_err_output": 31.397895485567453,
    "avg_bits_err_improve": 0.028363542647820594,
    "time": 23973.547607421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.40629718842668,
    "avg_bits_err_output": 34.40629718842668,
    "avg_bits_err_improve": 0,
    "time": 14895.376220703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.97145927407366,
    "avg_bits_err_output": 33.97145927407366,
    "avg_bits_err_improve": 0,
    "time": 17038.335693359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (if (!= (/ (- 1.0 (cos x)) x) 0.0) (/ 1.0 (/ 1.0 (/ (- 1.0 (cos x)) x))) (/ (- 1.0 (cos x)) x)) x)",
    "output_parens": 14,
    "avg_bits_err_input": 31.411070634483735,
    "avg_bits_err_output": 30.66657130221004,
    "avg_bits_err_improve": 0.7444993322736941,
    "time": 16255.250732421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.65270767685723,
    "avg_bits_err_output": 32.65270767685723,
    "avg_bits_err_improve": 0,
    "time": 16754.5205078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (- (- (log1p N) -1.0) 1.0) (log N))",
    "output_parens": 5,
    "avg_bits_err_input": 29.968340199517087,
    "avg_bits_err_output": 29.972079576042454,
    "avg_bits_err_improve": -0.003739376525366822,
    "time": 15133.47705078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ -0.5 x) (/ (+ (/ (- -1.0 x) x) 2.0) (+ x (+ x 2.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.957259567815925,
    "avg_bits_err_output": 14.96109737614972,
    "avg_bits_err_improve": -0.003837808333795323,
    "time": 14374.739501953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (cos (+ x eps)) 0.0) (/ (- (* (cos (+ x eps)) (cos (+ x eps))) (* (cos (+ x eps)) (if (!= (+ (cos x) 1.0) 0.0) (/ (fma (cos x) (cos x) -1.0) (+ (cos x) 1.0)) (+ (cos x) -1.0)))) (cos (+ x eps))) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 34,
    "avg_bits_err_input": 39.8583013065861,
    "avg_bits_err_output": 39.89125181072462,
    "avg_bits_err_improve": -0.032950504138518966,
    "time": 17838.57275390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (+ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (fma (cbrt x) (cbrt x) 1.0)) 1.0) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 30.21417733891934,
    "avg_bits_err_output": 30.071419639106477,
    "avg_bits_err_improve": 0.142757699812865,
    "time": 10290.55810546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.98425757669562,
    "avg_bits_err_output": 29.98425757669562,
    "avg_bits_err_improve": 0,
    "time": 21566.813720703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.02880879723151,
    "avg_bits_err_output": 34.02880879723151,
    "avg_bits_err_improve": 0,
    "time": 23747.652099609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.31682482700995,
    "avg_bits_err_output": 34.31682482700995,
    "avg_bits_err_improve": 0,
    "time": 25063.23876953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (/ (+ 1.0 (log (- 1.0 x))) (log1p x)) (/ 1.0 (log1p x)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.506351104515716,
    "avg_bits_err_output": 59.66879227060833,
    "avg_bits_err_improve": 1.8375588339073872,
    "time": 23154.628173828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 62.99830314314377,
    "avg_bits_err_output": 44.20458561864122,
    "avg_bits_err_improve": 18.793717524502554,
    "time": 12113.507080078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (if (!= (/ eps (- -1.0 eps)) 0.0) (/ (/ (- (/ eps (- -1.0 eps)) (* eps (/ eps (- -1.0 eps)))) (- -1.0 eps)) (/ eps (+ eps 1.0))) (/ (- 1.0 eps) (- eps -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 58.69856530902926,
    "avg_bits_err_output": 58.71593529778265,
    "avg_bits_err_improve": -0.017369988753387133,
    "time": 18594.899169921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (- 1.0 (/ (+ (/ x (tan x)) -1.0) x)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 60.03390797384855,
    "avg_bits_err_output": 60.020326004172674,
    "avg_bits_err_improve": 0.013581969675875882,
    "time": 26423.95654296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (/ (expm1 (* eps (+ a b))) (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.545498997463795,
    "avg_bits_err_output": 29.28348397923268,
    "avg_bits_err_improve": 31.262015018231114,
    "time": 25474.654052734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (expm1 (log1p (exp x))) (expm1 x))",
    "output_parens": 5,
    "avg_bits_err_input": 41.14198855681147,
    "avg_bits_err_output": 0.5001115281111156,
    "avg_bits_err_improve": 40.64187702870036,
    "time": 8799.695068359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.72375050291582,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.72312550291582,
    "time": 2797.037841796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.752675469533614,
    "avg_bits_err_output": 0.019508678590172007,
    "avg_bits_err_improve": 29.733166790943443,
    "time": 3552.276123046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (+ -2.0 (- (exp x) (exp (- x)))) 0.0) (/ (fma (exp (- x)) (exp (- x)) (* (+ (exp x) -2.0) (- 2.0 (exp x)))) (+ (exp (- x)) (- 2.0 (exp x)))) (+ (+ (exp x) -2.0) (exp (- x))))",
    "output_parens": 28,
    "avg_bits_err_input": 29.97256274512492,
    "avg_bits_err_output": 29.93406857965048,
    "avg_bits_err_improve": 0.038494165474443065,
    "time": 19354.18017578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.883531490737864,
    "avg_bits_err_output": 9.883531490737864,
    "avg_bits_err_improve": 0,
    "time": 23425.80126953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (+ (tan (+ x eps)) (tan x)) 0.0) (+ (/ (fma (- (tan x)) (tan x) (* (tan x) (tan x))) (+ (tan (+ x eps)) (tan x))) (* (- (tan (+ x eps)) (tan x)) (/ (+ (tan (+ x eps)) (tan x)) (+ (tan (+ x eps)) (tan x))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 37,
    "avg_bits_err_input": 36.82708596163752,
    "avg_bits_err_output": 36.93908721224337,
    "avg_bits_err_improve": -0.11200125060585009,
    "time": 16587.5068359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (log (+ 1.0 (if (!= (exp (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))) 0.0) (/ (* (expm1 (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))) (exp (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0))))) (exp (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0))))) (expm1 (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0))))))))",
    "output_parens": 37,
    "avg_bits_err_input": 30.46279392718438,
    "avg_bits_err_output": 29.555187189827045,
    "avg_bits_err_improve": 0.9076067373573338,
    "time": 10521.96875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (if (!= (/ (+ (sin (+ x eps)) (sin x)) (sin (+ x eps))) 0.0) (/ (/ (- (sin (+ x eps)) (* (sin x) (/ (sin x) (sin (+ x eps))))) (sin (+ x eps))) (/ (+ (sin (+ x eps)) (sin x)) (sin (+ x eps)))) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 47,
    "avg_bits_err_input": 37.2820694714606,
    "avg_bits_err_output": 37.29088475533022,
    "avg_bits_err_improve": -0.008815283869616053,
    "time": 16992.400390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.53816983068328,
    "avg_bits_err_output": 19.53816983068328,
    "avg_bits_err_improve": 0,
    "time": 13597.34033203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.104404949952972,
    "avg_bits_err_output": 15.104404949952972,
    "avg_bits_err_improve": 0,
    "time": 5118.416748046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.58275976293066,
    "avg_bits_err_output": 1.2541989507961064,
    "avg_bits_err_improve": 28.328560812134555,
    "time": 36112.351806640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07792999596793129,
    "avg_bits_err_output": 0.07790875534275102,
    "avg_bits_err_improve": 2.1240625180274364e-05,
    "time": 7210.91748046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(/ (* a (- b)) (/ (/ 1.0 b) a))",
    "output_parens": 5,
    "avg_bits_err_input": 16.681627241265716,
    "avg_bits_err_output": 0.2667291767454448,
    "avg_bits_err_improve": 16.41489806452027,
    "time": 10834.36376953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (- (* (/ 2.0 (* PI PI)) (/ 1.0 (* (/ 2.0 PI) angle))) 0.0)) (* PI (/ angle 180.0))))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 20.25536766350176,
    "avg_bits_err_output": 20.297708703903876,
    "avg_bits_err_improve": -0.04234104040211406,
    "time": 26251.1904296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (sin (* PI (/ angle 180.0))) (- (+ (pow b 2.0) (pow b 2.0)) (pow a 2.0))) (* (pow a 2.0) (sin (* PI (/ angle 180.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 31.64041768746994,
    "avg_bits_err_output": 31.618219328914805,
    "avg_bits_err_improve": 0.022198358555137077,
    "time": 31662.44091796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* PI (* angle -0.005555555555555556)) 0.0) (/ 1.0 (if (!= (/ (/ 180.0 angle) PI) 0.0) (- (/ (/ (/ 32400.0 angle) PI) 180.0) 0.0) (/ (/ 180.0 angle) PI))) (* angle (* PI 0.005555555555555556))))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 20.034816628433592,
    "avg_bits_err_output": 20.043403353554734,
    "avg_bits_err_improve": -0.008586725121141114,
    "time": 31577.38525390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* m (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.17814300435713698,
    "avg_bits_err_output": 0.18136236529490746,
    "avg_bits_err_improve": -0.003219360937770477,
    "time": 13755.457763671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.33644979461744556,
    "avg_bits_err_output": 0.3246097765696509,
    "avg_bits_err_improve": 0.011840018047794665,
    "time": 16541.486572265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* e (/ (sin v) (- (- -1.0 (* e (cos v))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.13521936093777043,
    "avg_bits_err_output": 0.13586560156295072,
    "avg_bits_err_improve": -0.0006462406251802888,
    "time": 15058.572998046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.959706606356065,
    "avg_bits_err_output": 16.955021869545124,
    "avg_bits_err_improve": 0.004684736810940393,
    "time": 33901.7607421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-33) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (/ (- (log (+ 1.0 (if (!= (exp (- (sqrt (fma c (* a -4.0) (* b b))) (+ b -1.0))) 0.0) (/ (* (expm1 (- (sqrt (fma c (* a -4.0) (* b b))) (+ b -1.0))) (exp (- (sqrt (fma c (* a -4.0) (* b b))) (+ b -1.0)))) (exp (- (sqrt (fma c (* a -4.0) (* b b))) (+ b -1.0)))) (expm1 (- (sqrt (fma c (* a -4.0) (* b b))) (+ b -1.0)))))) 1.0) (* a 2.0)))",
    "output_parens": 64,
    "avg_bits_err_input": 52.39074677848369,
    "avg_bits_err_output": 49.292821038113985,
    "avg_bits_err_improve": 3.0979257403697034,
    "time": 30601.183349609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (+ b (sqrt (fma b b (* a (* c -4.0))))) 0.0) (/ (fma (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0)))) (- (* b b))) (+ b (sqrt (fma b b (* a (* c -4.0)))))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) a) 0.25) (/ (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 4.0))",
    "output_parens": 39,
    "avg_bits_err_input": 28.434346419993858,
    "avg_bits_err_output": 27.607939257078193,
    "avg_bits_err_improve": 0.8264071629156646,
    "time": 34431.432861328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (* (fma (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))) (* b (- b))) (* b (- b))) (* b (- b))) (fma b (- b) (* (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b)))))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 52,
    "avg_bits_err_input": 43.21024841021872,
    "avg_bits_err_output": 42.062927625500286,
    "avg_bits_err_improve": 1.1473207847184312,
    "time": 26116.78271484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.03373881434307,
    "avg_bits_err_output": 34.03373881434307,
    "avg_bits_err_improve": 0,
    "time": 22565.61669921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (fma (cos phi1) (cos phi1) (* (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2)))) (cos phi1)) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.9227916492343113,
    "avg_bits_err_output": 0.9327768590127187,
    "avg_bits_err_improve": -0.009985209778407333,
    "time": 22479.73046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) 0.0) (/ (- 1.0 (/ (/ 16.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (- 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 65,
    "avg_bits_err_input": 29.48602237292531,
    "avg_bits_err_output": 29.47761725003152,
    "avg_bits_err_improve": 0.008405122893787365,
    "time": 28473.63330078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(- (log (+ 1.0 (expm1 (/ (exp x) (+ (exp x) (exp (- x))))))) (/ (exp (- x)) (+ (exp x) (exp (- x)))))",
    "output_parens": 17,
    "avg_bits_err_input": 58.31821049390211,
    "avg_bits_err_output": 58.34713565916691,
    "avg_bits_err_improve": -0.028925165264801933,
    "time": 17444.8701171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (+ (- (exp x) (expm1 (- x))) -1.0) 2.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.194048431410835,
    "avg_bits_err_output": 58.19985136456969,
    "avg_bits_err_improve": -0.005802933158854273,
    "time": 12530.9248046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 4.0 (+ (exp x) (+ (exp x) (+ (exp (- x)) (exp (- x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.007948120312590144,
    "avg_bits_err_output": 0.009865601562950722,
    "avg_bits_err_improve": -0.0019174812503605781,
    "time": 3285.8203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.8415,
    "avg_bits_err_output": 31.8415,
    "avg_bits_err_improve": 0,
    "time": 5905.79150390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.690047170071864,
    "avg_bits_err_output": 0.016453669577509954,
    "avg_bits_err_improve": 58.673593500494356,
    "time": 20440.055908203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ (- (sqrt (- 1.0 (* x x))) -0.5) x) (/ 1.0 (+ x x))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.04382312031259015,
    "avg_bits_err_output": 0.04414624062518029,
    "avg_bits_err_improve": -0.0003231203125901444,
    "time": 4336.40185546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12657312031259016,
    "avg_bits_err_output": 0.12657312031259016,
    "avg_bits_err_improve": 0,
    "time": 12345.746826171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13507312031259017,
    "avg_bits_err_output": 0.13507312031259017,
    "avg_bits_err_improve": 0,
    "time": 21748.795654296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (cos (/ (+ phi1 phi2) 2.0)) (+ lambda2 (- lambda1 (+ lambda2 lambda2)))) (- phi1 phi2)))",
    "output_parens": 10,
    "avg_bits_err_input": 38.737575955172545,
    "avg_bits_err_output": 3.547877743949037,
    "avg_bits_err_improve": 35.18969821122351,
    "time": 19767.278076171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (/ (* (/ (fabs (+ a b)) a) (fabs (- a b))) a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.581460396180367,
    "avg_bits_err_output": 0.025875,
    "avg_bits_err_improve": 14.555585396180367,
    "time": 6222.061279296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (fma (sin phi1) (- (sin (asin (+ (* (sin phi1) (cos delta)) (* (cos theta) (* (sin delta) (cos phi1))))))) (cos delta))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.14823173516493837,
    "avg_bits_err_output": 0.14397181121956365,
    "avg_bits_err_improve": 0.004259923945374722,
    "time": 35299.018310546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) 0.0) (/ (- (* (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b)))) (* (fma (- b) b (* b b)) (fma (- b) b (* b b)))) (if (!= (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) 0.0) (/ 1.0 (/ 1.0 (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 115,
    "avg_bits_err_input": 52.348724220987485,
    "avg_bits_err_output": 51.30860875325584,
    "avg_bits_err_improve": 1.0401154677316455,
    "time": 38781.9013671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* b b) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) 0.0) (/ (- 0.0 (fma (sqrt (fma c (* a -3.0) (* b b))) (* (sqrt (fma c (* a -3.0) (* b b))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b b))) (* (* b b) (- (* b b) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))))))) (- (* b b) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 93,
    "avg_bits_err_input": 28.62054275743222,
    "avg_bits_err_output": 28.15342951011335,
    "avg_bits_err_improve": 0.46711324731886705,
    "time": 37421.551513671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- b (- (sqrt (fma b b (* c (* a -3.0)))))) 0.0) (/ (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))) (+ b (sqrt (fma b b (* c (* a -3.0)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 32,
    "avg_bits_err_input": 43.33573691100468,
    "avg_bits_err_output": 42.21741950357395,
    "avg_bits_err_improve": 1.1183174074307303,
    "time": 28177.459228515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.085782308532885,
    "avg_bits_err_output": 34.085782308532885,
    "avg_bits_err_improve": 0,
    "time": 20005.721923828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (sin phi1) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.54259765526681,
    "avg_bits_err_output": 13.542595884045163,
    "avg_bits_err_improve": 1.7712216475729292e-06,
    "time": 30440.4775390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (- (+ (/ x (+ x 1.0)) (/ 1.0 (+ x -1.0))) (/ x (+ x -1.0))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 29.278962175140784,
    "avg_bits_err_output": 24.876557318318262,
    "avg_bits_err_improve": 4.402404856822521,
    "time": 21472.724853515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (log (log1p (expm1 (exp (/ 1.0 (+ x -1.0)))))) (/ x (+ x 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.015219360937770434,
    "avg_bits_err_improve": -0.0034693609377704337,
    "time": 3280.51025390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ (- 1.0 (/ x (+ x -1.0))) (+ 1.0 x)) (/ 1.0 (fma x x -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.511259199520136,
    "avg_bits_err_output": 12.590945762685058,
    "avg_bits_err_improve": 1.9203134368350785,
    "time": 18000.68115234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F) (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.38712920987268,
    "avg_bits_err_output": 52.04543445269844,
    "avg_bits_err_improve": 0.34169475717424547,
    "time": 40205.73193359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(if (<= A -3.6e+178) (* 180.0 (/ (atan (if (!= (fma (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (/ -1.0 B) (/ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) B)) 0.0) 0.0 (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B))) PI)) (* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI)))",
    "output_parens": 39,
    "avg_bits_err_input": 30.086011349813948,
    "avg_bits_err_output": 27.992261662332425,
    "avg_bits_err_improve": 2.093749687481523,
    "time": 24098.802978515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+257) (/ (sqrt (* (- (* (pow B 2.0) 2.0) (* A (* C 8.0))) (* F (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0))) 0.0)",
    "output_parens": 43,
    "avg_bits_err_input": 52.49758604289484,
    "avg_bits_err_output": 50.92107850487508,
    "avg_bits_err_improve": 1.5765075380197615,
    "time": 50041.78173828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ (/ g a) 2.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.747999065916055,
    "avg_bits_err_output": 15.762347569627485,
    "avg_bits_err_improve": -0.014348503711429927,
    "time": 1666.68798828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= (- (sqrt (- (* g g) (* h h))) g) 0.0) (/ (+ (* (sqrt (- (* g g) (* h h))) (- g (sqrt (- (* g g) (* h h))))) (* g (- g (sqrt (- (* g g) (* h h)))))) (- (sqrt (- (* g g) (* h h))) g)) (- (- g) (sqrt (- (* g g) (* h h))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 36.39747149191954,
    "avg_bits_err_output": 36.385500678959,
    "avg_bits_err_improve": 0.011970812960541366,
    "time": 16975.558837890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9896372187554094,
    "avg_bits_err_output": 0.9806180453140326,
    "avg_bits_err_improve": 0.009019173441376815,
    "time": 4998.166015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.8134481203125902,
    "avg_bits_err_output": 0.8173680453140325,
    "avg_bits_err_improve": -0.003919925001442337,
    "time": 5045.425537109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (/ (* a1 (/ a2 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) -4e-282) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (/ (* a1 (/ a2 b1)) b2) (if (<= (/ (* a1 a2) (* b1 b2)) 4e+302) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.2541952019844,
    "avg_bits_err_output": 2.7651668561326677,
    "avg_bits_err_improve": 8.489028345851732,
    "time": 8470.13818359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5053160970876119,
    "avg_bits_err_output": 0.44432312031259014,
    "avg_bits_err_improve": 0.0609929767750218,
    "time": 10195.341064453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -1000000.0) (log (/ (- -1.0 (+ (* (hypot 1.0 x) 2.0) (+ x (+ x -1.0)))) -2.0)) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 53.08757398226754,
    "avg_bits_err_output": 13.972758470560668,
    "avg_bits_err_improve": 39.11481551170687,
    "time": 18273.824951171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.738474669718629,
    "avg_bits_err_output": 5.738474669718629,
    "avg_bits_err_improve": 0,
    "time": 12318.6904296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 0,
    "time": 2845.2822265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1168.550537109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 13.043903285727616,
    "avg_bits_err_output": 0.6367630215194239,
    "avg_bits_err_improve": 12.407140264208191,
    "time": 16275.3095703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (/ (* (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) 4.0) (fma x1 x1 1.0))) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.511444133549421,
    "avg_bits_err_output": 0.27812032564986944,
    "avg_bits_err_improve": 0.23332380789955154,
    "time": 69445.51953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(if (<= u -6e-109) (/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u)) (if (<= u 1.25e-65) (* (/ (/ t1 (+ t1 u)) (+ t1 u)) (- v)) (/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))))",
    "output_parens": 22,
    "avg_bits_err_input": 18.071336238946007,
    "avg_bits_err_output": 0.6257855530008993,
    "avg_bits_err_improve": 17.445550685945108,
    "time": 5432.19091796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2382406015629507,
    "avg_bits_err_output": 0.19248120312590142,
    "avg_bits_err_improve": 0.04575939843704929,
    "time": 4348.97265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 2031.928955078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) 2.0) (+ b a)) (- b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.060157334164336,
    "avg_bits_err_output": 0.28442725625468745,
    "avg_bits_err_improve": 13.775730077909648,
    "time": 15529.446533203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (* x (- -1.0 eps))) (+ (/ (- (exp (* x (+ eps -1.0))) (exp (* x (- -1.0 eps)))) eps) (exp (fma eps x (- x))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.404405551391168,
    "avg_bits_err_output": 0.8745081114612204,
    "avg_bits_err_improve": 28.529897439929947,
    "time": 15237.261474609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (+ (/ (- 4.0 (/ 4.0 (fma (/ 1.0 t) t t))) (fma (/ 1.0 t) t t)) (/ 4.0 (fma (/ 1.0 t) t t)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.034,
    "avg_bits_err_output": 0.01810375937481971,
    "avg_bits_err_improve": 0.015896240625180292,
    "time": 6544.974853515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(+ (/ 1.0 (+ 2.0 (+ 2.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))))))) (/ (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))))) (+ 2.0 (+ 2.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))))))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.04125,
    "avg_bits_err_output": 0.081125,
    "avg_bits_err_improve": -0.039875,
    "time": 15385.586181640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (* (/ t (+ t 1.0)) (* (/ t (+ t 1.0)) 4.0)) -1.0) (- (* (/ t (+ t 1.0)) (* (/ t (+ t 1.0)) 4.0)) -2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.0395,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 0.032,
    "time": 15328.65478515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3506.217041015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2810.574951171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2840.308349609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.83415294849226,
    "avg_bits_err_output": 0.242125,
    "avg_bits_err_improve": 7.592027948492261,
    "time": 15966.35400390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.251812304277228,
    "avg_bits_err_output": 7.251812304277228,
    "avg_bits_err_improve": 0,
    "time": 3960.22705078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (+ (pow (+ x eps) 2.0) (pow x 2.0)) 0.0) (* (+ (pow (+ x eps) 2.0) (pow x 2.0)) (- (* (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))) (* (if (!= (/ (pow x 2.0) (+ (pow x 2.0) (pow (+ x eps) 2.0))) 0.0) (/ 1.0 (/ 1.0 (/ (pow x 2.0) (+ (pow x 2.0) (pow (+ x eps) 2.0))))) (/ (pow x 2.0) (+ (pow x 2.0) (pow (+ x eps) 2.0)))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 60,
    "avg_bits_err_input": 15.811674165106716,
    "avg_bits_err_output": 15.818382680534329,
    "avg_bits_err_improve": -0.006708515427613193,
    "time": 23497.611328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (+ (cos x) 1.0)) 0.0) (/ (fma (* (if (!= (exp (* 10.0 (* x x))) 0.0) (/ 1.0 (/ 1.0 (exp (* 10.0 (* x x))))) (exp (* 10.0 (* x x)))) (+ (cos x) 1.0)) (* (exp (* 10.0 (* x x))) (+ (cos x) 1.0)) (* (- (exp (* 10.0 (* x x)))) (* (exp (* 10.0 (* x x))) (+ (cos x) 1.0)))) (* (exp (* 10.0 (* x x))) (+ (cos x) 1.0))) (* (cos x) (exp (* 10.0 (* x x)))))",
    "output_parens": 54,
    "avg_bits_err_input": 3.533808319946438,
    "avg_bits_err_output": 3.539528309811651,
    "avg_bits_err_improve": -0.005719989865212938,
    "time": 26248.806640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 14.969313845086171,
    "avg_bits_err_improve": 0,
    "time": 10754.9306640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.13321700459055,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.13321700459055,
    "time": 4007.411376953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14235252904971,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.14160252904971,
    "time": 3945.58984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.297375,
    "avg_bits_err_improve": 63.702625,
    "time": 24051.341552734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325748725749,
    "avg_bits_err_output": 0.40519812031259017,
    "avg_bits_err_improve": 61.4380593669449,
    "time": 7058.6826171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.31682482700995,
    "avg_bits_err_output": 34.31682482700995,
    "avg_bits_err_improve": 0,
    "time": 27995.771484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.03373881434307,
    "avg_bits_err_output": 34.03373881434307,
    "avg_bits_err_improve": 0,
    "time": 26912.657470703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2898.059326171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.27328378007921,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 40.26315878007921,
    "time": 7854.408203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(- (/ (* x x) (fma x x (* y y))) (/ (* y y) (fma x x (* y y))))",
    "output_parens": 9,
    "avg_bits_err_input": 20.603900004970843,
    "avg_bits_err_output": 20.602854738884897,
    "avg_bits_err_improve": 0.0010452660859456842,
    "time": 6804.888916015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.675466294662739,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.675466294662739,
    "time": 7809.5712890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.039,
    "avg_bits_err_output": 0.039,
    "avg_bits_err_improve": 0,
    "time": 4560.08837890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02052124062518029,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0.00902124062518029,
    "time": 3342.574462890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 3026.677001953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1471.572998046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ d a) (+ e (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39513477500432725,
    "avg_bits_err_output": 0.248125,
    "avg_bits_err_improve": 0.14700977500432724,
    "time": 6075.16064453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.82809672115579,
    "avg_bits_err_output": 29.82809672115579,
    "avg_bits_err_improve": 0,
    "time": 7624.965576171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 25.156603882026246,
    "avg_bits_err_output": 25.156603882026246,
    "avg_bits_err_improve": 0,
    "time": 10606.047119140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (expm1 (log1p (/ x (tan x)))) (/ (sin x) (tan x)))",
    "output_parens": 8,
    "avg_bits_err_input": 30.202534991187456,
    "avg_bits_err_output": 30.2230469831055,
    "avg_bits_err_improve": -0.020511991918045425,
    "time": 30380.665771484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00475,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.00375,
    "time": 2112.84765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -9.6e+149) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (* i i) n) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* (+ (if (!= (pow (+ 1.0 (/ i n)) n) 0.0) (/ 1.0 (/ 1.0 (pow (+ 1.0 (/ i n)) n))) (pow (+ 1.0 (/ i n)) n)) -1.0) (/ 100.0 (/ i n))))",
    "output_parens": 45,
    "avg_bits_err_input": 47.793414774631046,
    "avg_bits_err_output": 46.956030948144374,
    "avg_bits_err_improve": 0.837383826486672,
    "time": 26115.0625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) -2e-58) (+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 4e+87) (/ (fma d b (* a c)) (+ (* c c) (* d d))) (+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 26.54672000234614,
    "avg_bits_err_output": 22.741948329249965,
    "avg_bits_err_improve": 3.8047716730961767,
    "time": 13255.656982421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) -1e-240) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 26.919322503604423,
    "avg_bits_err_output": 24.57827572785116,
    "avg_bits_err_improve": 2.341046775753263,
    "time": 14754.558837890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.034625,
    "avg_bits_err_output": 0.02209512018848141,
    "avg_bits_err_improve": 0.012529879811518593,
    "time": 6036.79345703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (log (+ 1.0 (- (exp (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))) 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.48019772248627,
    "avg_bits_err_output": 12.310281252887744,
    "avg_bits_err_improve": 1.169916469598526,
    "time": 21866.93701171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (log (+ 1.0 (expm1 (* uy (* 2.0 PI)))))) (sqrt (- (- ux (- ux)) (+ (* ux ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.519301336611504,
    "avg_bits_err_output": 0.3245735557572378,
    "avg_bits_err_improve": 13.194727780854265,
    "time": 24814.858642578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (if (!= uy 0.0) (/ (* PI (* uy (* 2.0 uy))) uy) (* PI (* 2.0 uy)))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 40,
    "avg_bits_err_input": 0.3487379499286087,
    "avg_bits_err_output": 0.3566955492992228,
    "avg_bits_err_improve": -0.007957599370614132,
    "time": 44420.619384765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20178646459810826,
    "avg_bits_err_output": 0.20178646459810826,
    "avg_bits_err_improve": 0,
    "time": 18297.064453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(log1p (expm1 (* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5406407732888537,
    "avg_bits_err_output": 0.542191174796839,
    "avg_bits_err_improve": -0.001550401507985244,
    "time": 21550.239501953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.33783987387645614,
    "avg_bits_err_output": 0.33783987387645614,
    "avg_bits_err_improve": 0,
    "time": 20452.83447265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (/ (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s))))))) (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 70,
    "avg_bits_err_input": 0.34373294970418733,
    "avg_bits_err_output": 0.3128801543571368,
    "avg_bits_err_improve": 0.030852795347050543,
    "time": 48939.022216796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(expm1 (log1p (/ 1.0 (+ 1.0 (exp (/ (- x) s))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.053398950078813255,
    "avg_bits_err_output": 0.058769439143927404,
    "avg_bits_err_improve": -0.005370489065114149,
    "time": 12049.228515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13206295199689416,
    "avg_bits_err_output": 0.11082314531724491,
    "avg_bits_err_improve": 0.021239806679649254,
    "time": 16444.66748046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641972797300889,
    "avg_bits_err_output": 0.6641972797300889,
    "avg_bits_err_improve": 0,
    "time": 21365.51416015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.16187538088854972,
    "avg_bits_err_output": 0.15675208363220644,
    "avg_bits_err_improve": 0.005123297256343279,
    "time": 20332.05615234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (* sinTheta_O sinTheta_O) (- (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.549048912363797,
    "avg_bits_err_output": 2.5433323914355888,
    "avg_bits_err_improve": 0.00571652092820818,
    "time": 31566.207275390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* cosTheta_i (* (/ cosTheta_O v) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) v))) (* 2.0 (sinh (/ 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4686063684886611,
    "avg_bits_err_output": 0.40051783463891133,
    "avg_bits_err_improve": 0.06808853384974978,
    "time": 23376.127197265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.11032161080318517,
    "avg_bits_err_output": 0.11113712788316621,
    "avg_bits_err_improve": -0.0008155170799810374,
    "time": 14347.1630859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (if (!= (/ (- (* alpha (/ alpha PI)) (/ -1.0 PI)) (log (* alpha alpha))) 0.0) (* (/ (- (* alpha (/ alpha PI)) (/ -1.0 PI)) (log (* alpha alpha))) (/ (/ (fma alpha alpha -1.0) (* PI (log (* alpha alpha)))) (/ (- (* alpha (/ alpha PI)) (/ -1.0 PI)) (log (* alpha alpha))))) (/ (fma alpha alpha -1.0) (* PI (log (* alpha alpha))))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 39,
    "avg_bits_err_input": 0.47728999914480447,
    "avg_bits_err_output": 0.5184430410337356,
    "avg_bits_err_improve": -0.04115304188893115,
    "time": 23188.239990234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))",
    "output_parens": 5,
    "avg_bits_err_input": 1.2990784434495346,
    "avg_bits_err_output": 1.2150959553651142,
    "avg_bits_err_improve": 0.08398248808442044,
    "time": 25777.908935546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (log (/ 1.0 (+ 1.0 (* u -4.0)))) 0.0) (/ 1.0 (/ 1.0 (log (/ 1.0 (+ 1.0 (* u -4.0)))))) (log (/ 1.0 (+ 1.0 (* u -4.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.58015451999077,
    "avg_bits_err_output": 12.583280679781787,
    "avg_bits_err_improve": -0.0031261597910159367,
    "time": 18368.838134765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (* 0.75 (/ (exp (/ r (* -3.0 s))) (* s (* PI 6.0))))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1470153545370418,
    "avg_bits_err_output": 0.14861351365251096,
    "avg_bits_err_improve": -0.0015981591154691777,
    "time": 24722.12744140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i) (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8823517852884531,
    "avg_bits_err_output": 0.7443515937158445,
    "avg_bits_err_improve": 0.13800019157260868,
    "time": 24447.8115234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (/ (+ 1.0 c) 2.0) (+ (/ (+ 1.0 c) 2.0) (* (exp (* cosTheta (- cosTheta))) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* cosTheta (sqrt PI)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.6824175854522285,
    "avg_bits_err_output": 0.4615029546704363,
    "avg_bits_err_improve": 0.22091463078179224,
    "time": 22745.46435546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(fma (sin (* 2.0 (* PI u2))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (expm1 (log1p (sin (* 2.0 (* PI u2))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.323353505942526,
    "avg_bits_err_output": 13.310546201271746,
    "avg_bits_err_improve": 0.012807304670779729,
    "time": 24848.903076171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(log (exp (* (sqrt (- (log (- 1.0 u1)))) (cos (* PI (+ u2 u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.368858134355358,
    "avg_bits_err_output": 13.399281444181236,
    "avg_bits_err_improve": -0.03042330982587771,
    "time": 24270.0771484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (* (log (- 1.0 u0)) (* alpha alpha)) 0.0) (* (* (if (!= (log (- 1.0 u0)) 0.0) (/ 1.0 (/ 1.0 (log (- 1.0 u0)))) (log (- 1.0 u0))) (* alpha (* alpha (* alpha (- alpha))))) (/ (- (log (- 1.0 u0))) (* (log (- 1.0 u0)) (* alpha (- alpha))))) (* (log (- 1.0 u0)) (- (* alpha alpha))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.121224912919445,
    "avg_bits_err_output": 14.133745392195932,
    "avg_bits_err_improve": -0.01252047927648725,
    "time": 20769.00732421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (+ (/ sin2phi (* (* alphay (+ alphay alphay)) 2.0)) (if (!= (/ (/ (/ sin2phi alphay) alphay) 4.0) 0.0) (* (/ (/ (/ sin2phi alphay) alphay) 4.0) (/ (+ sin2phi (+ sin2phi sin2phi)) sin2phi)) (/ (+ sin2phi (+ sin2phi sin2phi)) (* alphay (* (+ alphay alphay) 2.0)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 12.447327489928941,
    "avg_bits_err_output": 12.450191090754865,
    "avg_bits_err_improve": -0.00286360082592374,
    "time": 18290.304931640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -5e+38) (- (if (!= (* PI l) 0.0) (/ 1.0 (/ (/ (/ l (* PI l)) PI) (/ l PI))) (* PI l)) (/ (tan (* PI l)) (* F F))) (if (<= F 4.1e-183) (- (* PI l) (* (/ (/ (/ (* (/ 0.5 F) (/ (* F (* F 8.0)) F)) (fabs F)) (fabs F)) 4.0) (tan (* PI l)))) (- (* PI l) (/ (/ (tan (* PI l)) F) F))))",
    "output_parens": 40,
    "avg_bits_err_input": 16.601878004565418,
    "avg_bits_err_output": 8.514827279228399,
    "avg_bits_err_improve": 8.087050725337019,
    "time": 21575.068115234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2144387218755409,
    "avg_bits_err_output": 0.15,
    "avg_bits_err_improve": 0.0644387218755409,
    "time": 14733.429443359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (* F (/ (pow (fma 2.0 x (fma F F 2.0)) -0.5) (sin B))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.15189048950995,
    "avg_bits_err_output": 10.708669793339524,
    "avg_bits_err_improve": 3.4432206961704264,
    "time": 19519.283935546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (- (/ (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) 2.0)) (+ (- (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (+ (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) 1.0)) (/ (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) 2.0)) (* (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* f (/ PI -4.0))) (- (exp (* f (/ PI -4.0))) (exp (* PI (/ f 4.0))))))))) (/ PI -4.0))",
    "output_parens": 78,
    "avg_bits_err_input": 61.46676337592357,
    "avg_bits_err_output": 61.473923934634186,
    "avg_bits_err_improve": -0.007160558710616272,
    "time": 73644.861328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.27858462668803,
    "avg_bits_err_output": 34.169288033909794,
    "avg_bits_err_improve": 9.109296592778236,
    "time": 23346.756103515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.821904746008287,
    "avg_bits_err_output": 3.821904746008287,
    "avg_bits_err_improve": 0,
    "time": 25822.443359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (log (+ 1.0 (expm1 (log (exp (/ 1.0 (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))))))) 0.5)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.9649431985483787,
    "avg_bits_err_output": 0.9665681985483787,
    "avg_bits_err_improve": -0.0016249999999999876,
    "time": 14827.38623046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 10.12306861262298,
    "avg_bits_err_improve": -0.0010679349679687533,
    "time": 25827.75634765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -8.5e+29) (sqrt (fma (* 2.0 (* n U)) (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* (/ l Om) (* 2.0 l)))) (fma (- (* 2.0 (* l (/ l Om)))) (* 2.0 (* n U)) (* (* 2.0 (* n U)) (* 2.0 (* l (/ l Om))))))) (if (<= U 4.4e+16) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (sqrt (if (!= (* (* 2.0 n) (* U t)) 0.0) (* t (* (* U (* n -2.0)) (* (* U (* 2.0 n)) (/ (- (fma (pow (/ l Om) 2.0) (* n (- U U*)) (* 2.0 (* l (/ l Om)))) t) (* 2.0 (* t (* U n))))))) (* (* 2.0 (* n U)) (- t (fma (pow (/ l Om) 2.0) (* n (- U U*)) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 82,
    "avg_bits_err_input": 33.972974253867456,
    "avg_bits_err_output": 29.81907811624229,
    "avg_bits_err_improve": 4.153896137625164,
    "time": 35618.611083984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (- (/ 2.0 (* (/ (pow t 3.0) l) (pow (/ k t) 2.0))) 0.0) (/ (sin k) l)) (/ 1.0 (tan k)))",
    "output_parens": 13,
    "avg_bits_err_input": 47.131482056898776,
    "avg_bits_err_output": 36.14990489665353,
    "avg_bits_err_improve": 10.981577160245244,
    "time": 44184.8017578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (sin k) l) (* (pow t 3.0) (* (+ 2.0 (pow (/ k t) 2.0)) (/ (tan k) l)))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.47317359083393,
    "avg_bits_err_output": 26.632512216305443,
    "avg_bits_err_improve": 5.840661374528487,
    "time": 25161.854248046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (/ (+ (* a2 a2) (* a1 a1)) (sqrt 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5343601531460959,
    "avg_bits_err_output": 0.48717594220544014,
    "avg_bits_err_improve": 0.047184210940655724,
    "time": 22740.77734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(+ (/ (pow (* PI (+ n n)) (fma k -0.5 0.5)) (* 4.0 (sqrt k))) (* (pow (* PI (+ n n)) (fma k -0.5 0.5)) (/ 0.75 (sqrt k))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.49964689433809917,
    "avg_bits_err_output": 0.4714563636797594,
    "avg_bits_err_improve": 0.028190530658339763,
    "time": 21937.73388671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (- (* J (cos (/ K 2.0))) (- (* J (cos (/ K 2.0))) (* (cos (/ K 2.0)) (* J (- (exp l) (exp (- l))))))) (* (cos (/ K 2.0)) (fma (- (exp (- l))) J (* (exp (- l)) J)))) U)",
    "output_parens": 28,
    "avg_bits_err_input": 17.01749178768661,
    "avg_bits_err_output": 17.02511105255542,
    "avg_bits_err_improve": -0.007619264868811371,
    "time": 23757.317138671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (+ (+ (* K (/ (+ m n) 2.0)) (* K (/ m 2.0))) (* K (/ n 2.0))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 23,
    "avg_bits_err_input": 15.429412809716103,
    "avg_bits_err_output": 15.425068217421785,
    "avg_bits_err_improve": 0.004344592294318161,
    "time": 18115.296142578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.04782312031259,
    "avg_bits_err_output": 18.04782312031259,
    "avg_bits_err_improve": 0,
    "time": 33599.697998046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l)))) (if (<= (/ h l) -2e-74) (* w0 (sqrt (- 1.0 (* (pow (* M (/ D (* 2.0 d))) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l))))))",
    "output_parens": 34,
    "avg_bits_err_input": 13.978490889181716,
    "avg_bits_err_output": 10.143345981246403,
    "avg_bits_err_improve": 3.8351449079353124,
    "time": 24008.634033203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 5e-324) (* c0 (sqrt (/ (* A (/ 2.0 l)) (+ V V)))) (if (<= (/ A (* V l)) 5e+266) (* c0 (sqrt (- (/ (+ A (/ A 2.0)) (* l (+ V V))) (/ (/ A (* V l)) -4.0)))) (* c0 (sqrt (/ (* A (/ 2.0 l)) (+ V V))))))",
    "output_parens": 31,
    "avg_bits_err_input": 18.650584142982236,
    "avg_bits_err_output": 14.759194423511364,
    "avg_bits_err_improve": 3.8913897194708724,
    "time": 18978.496337890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) 1e+253) (* (if (!= (* c0 (/ (* d (/ d D)) (* w (* D h)))) 0.0) (+ (/ 1.0 (/ 1.0 (* c0 (/ (* d (/ d D)) (* w (* D h)))))) (* (* c0 (/ (* d (/ d D)) (* w (* D h)))) (/ (sqrt (* (fma c0 (/ (* d (/ d D)) (* w (* D h))) M) (fma c0 (/ (* d (/ d D)) (* w (* D h))) (- M)))) (* c0 (/ (* d (/ d D)) (* w (* D h))))))) (+ (* c0 (/ (/ (* d d) (* D (* D h))) w)) (sqrt (* (fma c0 (/ (/ (* d d) (* D (* D h))) w) M) (fma c0 (/ (/ (* d d) (* D (* D h))) w) (- M)))))) (/ c0 (+ w w))) (* (/ c0 (* 2.0 w)) (if (!= (sqrt (* (fma d (* d (/ c0 (* (* h w) (* D D)))) M) (- (* (/ c0 (* (* h w) (* D D))) (* d d)) M))) 0.0) 0.0 (fma c0 (/ (* d d) (* (* h w) (* D D))) (sqrt (* (fma d (* d (/ c0 (* (* h w) (* D D)))) M) (- (* (/ c0 (* (* h w) (* D D))) (* d d)) M)))))))",
    "output_parens": 140,
    "avg_bits_err_input": 59.53759391199181,
    "avg_bits_err_output": 34.3413889263289,
    "avg_bits_err_improve": 25.196204985662916,
    "time": 54190.420166015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (pow (/ d l) 0.5) (- (pow (/ d h) 0.5) (* (pow (+ (/ (* D M) (* (* (+ d d) 2.0) 2.0)) (/ (* M (+ D (+ D D))) (* (* (+ d d) 2.0) 2.0))) 2.0) (* (/ 0.5 l) (* h (pow (/ d h) 0.5))))))",
    "output_parens": 26,
    "avg_bits_err_input": 25.561166891117207,
    "avg_bits_err_output": 23.821422608004305,
    "avg_bits_err_improve": 1.739744283112902,
    "time": 38502.736572265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (- (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 1.0)))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 31,
    "avg_bits_err_input": 15.804121893032281,
    "avg_bits_err_output": 15.343127747588246,
    "avg_bits_err_improve": 0.46099414544403494,
    "time": 22106.136474609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9842712406251803,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 0.9732712406251803,
    "time": 3691.7783203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.43664791206242864,
    "avg_bits_err_output": 0.11397856662892103,
    "avg_bits_err_improve": 0.3226693454335076,
    "time": 17044.2744140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (+ (* v (* v -3.0)) 1.0))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01102124062518029,
    "avg_bits_err_output": 0.01102124062518029,
    "avg_bits_err_improve": 0,
    "time": 8653.02392578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5026736243882015,
    "avg_bits_err_output": 0.5026736243882015,
    "avg_bits_err_improve": 0,
    "time": 10294.396728515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* (pow k m) (/ (+ a a) (+ 2.0 (* (+ k 10.0) (+ k k)))))",
    "output_parens": 8,
    "avg_bits_err_input": 2.1803358968477475,
    "avg_bits_err_output": 2.2437692532038156,
    "avg_bits_err_improve": -0.06343335635606806,
    "time": 17020.7763671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (- (- (/ (- mu (- Ec (+ Vef EDonor))) KbT) -1.0) 1.0)) -1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.01842832603964897,
    "avg_bits_err_output": 0.018428326039648966,
    "avg_bits_err_improve": 3.469446951953614e-18,
    "time": 10469.937255859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* b (* b 4.0))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18791059254041304,
    "avg_bits_err_output": 0.18744123160264262,
    "avg_bits_err_improve": 0.0004693609377704189,
    "time": 19181.77978515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1883576957532427,
    "avg_bits_err_output": 0.1883576957532427,
    "avg_bits_err_improve": 0,
    "time": 28446.4658203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18364499700213033,
    "avg_bits_err_output": 0.18364499700213033,
    "avg_bits_err_improve": 0,
    "time": 33194.14794921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (exp (log1p (+ (/ x (* (* (sqrt (fma 4.0 (* p p) (* x x))) 2.0) 2.0)) (/ (/ (+ x (/ x 2.0)) (sqrt (fma x x (* p (* 4.0 p))))) 2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.064064303577362,
    "avg_bits_err_output": 13.16822186755587,
    "avg_bits_err_improve": -0.10415756397850728,
    "time": 19378.989501953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.81136276382824,
    "avg_bits_err_output": 0.048375,
    "avg_bits_err_improve": 40.76298776382824,
    "time": 4919.98974609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (if (!= x 0.0) (/ (* x (- (tan x) x)) x) (- (tan x) x))) (/ x (- (tan x) x)))",
    "output_parens": 14,
    "avg_bits_err_input": 30.762234360860536,
    "avg_bits_err_output": 30.73457901071344,
    "avg_bits_err_improve": 0.027655350147096414,
    "time": 25041.55029296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.928949676298444,
    "avg_bits_err_output": 33.928949676298444,
    "avg_bits_err_improve": 0,
    "time": 14281.21435546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.00131642707157,
    "avg_bits_err_output": 34.00131642707157,
    "avg_bits_err_improve": 0,
    "time": 17013.706298828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(* (/ (- 1.0 (cos x)) x) (/ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 31.479503745857624,
    "avg_bits_err_output": 30.712277300496005,
    "avg_bits_err_improve": 0.7672264453616187,
    "time": 16587.47314453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(log (if (!= (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) 0.0) (/ 1.0 (/ 1.0 (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))))) (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))))",
    "output_parens": 26,
    "avg_bits_err_input": 32.72777396419889,
    "avg_bits_err_output": 32.81238492946398,
    "avg_bits_err_improve": -0.08461096526509237,
    "time": 22045.490478515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (if (!= (+ (+ (log1p N) 1.0) 1.0) 0.0) (/ (* (log1p N) (- (log1p N) -2.0)) (+ (log1p N) 2.0)) (log1p N)) (log N))",
    "output_parens": 15,
    "avg_bits_err_input": 29.78660663386939,
    "avg_bits_err_output": 29.79987047266095,
    "avg_bits_err_improve": -0.013263838791559124,
    "time": 12754.915283203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (+ (/ 1.0 (+ 1.0 x)) (/ -1.0 x)) (/ 1.0 (* (+ 1.0 x) (log (+ 1.0 (expm1 (/ 1.0 (+ 1.0 x))))))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.227968964086289,
    "avg_bits_err_output": 14.242989142744575,
    "avg_bits_err_improve": -0.015020178658286198,
    "time": 17673.8935546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (cos x))",
    "output_parens": 4,
    "avg_bits_err_input": 39.80847367086928,
    "avg_bits_err_output": 39.80847367086928,
    "avg_bits_err_improve": 0,
    "time": 17683.87646484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(log1p (- (+ (expm1 (- (cbrt (+ 1.0 x)) (cbrt x))) -1.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 29.97572181503202,
    "avg_bits_err_output": 29.979786441620828,
    "avg_bits_err_improve": -0.00406462658880713,
    "time": 10966.046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(log (exp (/ (- 1.0 (cos x)) (sin x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.441579290088793,
    "avg_bits_err_output": 30.500896650281355,
    "avg_bits_err_improve": -0.05931736019256206,
    "time": 20484.089599609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (* (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c))) (* (* a 4.0) (/ c (* c (* a 4.0))))) (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c)))))) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 34.157592644304245,
    "avg_bits_err_output": 34.40262710147095,
    "avg_bits_err_improve": -0.24503445716670313,
    "time": 23720.182861328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma (* a c) (* a (/ (* c 16.0) (- (* a (* c -4.0)) (* b b)))) (* b (* b (* (/ b (fma b b (* (* a c) 4.0))) b)))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 29,
    "avg_bits_err_input": 34.35626756182946,
    "avg_bits_err_output": 33.33807289871454,
    "avg_bits_err_improve": 1.0181946631149188,
    "time": 22722.489501953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (/ (+ 1.0 (log (- 1.0 x))) (* (log1p x) 2.0)) (+ (+ (/ (+ 1.0 (log (- 1.0 x))) (* (log1p x) 8.0)) 0.0) (- (/ (+ 1.0 (log (- 1.0 x))) (* (log1p x) 8.0)) (/ (- 1.5 (* (log (- 1.0 x)) 0.5)) (+ (log1p x) (log1p x))))))",
    "output_parens": 30,
    "avg_bits_err_input": 61.43951174953297,
    "avg_bits_err_output": 59.79913133564613,
    "avg_bits_err_improve": 1.640380413886838,
    "time": 22697.154541015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log (+ n 1.0)) (log n)) n)) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 63.00671293506907,
    "avg_bits_err_output": 44.217691249522346,
    "avg_bits_err_improve": 18.78902168554672,
    "time": 14497.3515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.7625527710156,
    "avg_bits_err_output": 58.7260410863843,
    "avg_bits_err_improve": 0.036511684631300056,
    "time": 17669.0439453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (- (+ 1.0 (/ (/ x (tan x)) -2.0)) (/ x (* (tan x) 2.0))) x)",
    "output_parens": 9,
    "avg_bits_err_input": 59.934265574616184,
    "avg_bits_err_output": 59.924079165129655,
    "avg_bits_err_improve": 0.010186409486529158,
    "time": 29584.073974609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.224248678815805,
    "avg_bits_err_output": 28.729934204663547,
    "avg_bits_err_improve": 31.494314474152258,
    "time": 25950.638671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ (+ (exp x) 1.0) (expm1 x)) (/ 1.0 (expm1 x)))",
    "output_parens": 7,
    "avg_bits_err_input": 41.09620958617261,
    "avg_bits_err_output": 0.5184289769542354,
    "avg_bits_err_improve": 40.57778060921838,
    "time": 3855.522216796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.8305333361147,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.8299083361147,
    "time": 3721.073974609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.26460244412646,
    "avg_bits_err_output": 0.017303307870343385,
    "avg_bits_err_improve": 29.247299136256117,
    "time": 5277.35009765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (+ (+ (* (exp x) (- (exp (- x)) 2.0)) (* (exp x) -2.0)) (* (exp x) 2.0))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 27,
    "avg_bits_err_input": 29.557129343382474,
    "avg_bits_err_output": 28.7910776342903,
    "avg_bits_err_improve": 0.7660517090921743,
    "time": 18791.61376953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (if (!= (/ -1.0 (* (+ x -1.0) (- 1.0 x))) 0.0) (/ (fma (/ -1.0 (* (+ x -1.0) (- 1.0 x))) (/ -1.0 (* (+ x -1.0) (- 1.0 x))) (* (/ (+ (- (/ -0.5 (+ 1.0 x)) (/ -1.0 x)) (- (/ -0.5 (+ 1.0 x)) (/ -1.0 x))) (- 1.0 x)) (/ -1.0 (* (+ x -1.0) (- 1.0 x))))) (/ -1.0 (* (+ x -1.0) (- 1.0 x)))) (/ (+ (- (/ -0.5 (+ 1.0 x)) (/ -1.0 x)) (+ (- (/ -0.5 (+ 1.0 x)) (/ -1.0 x)) (/ -1.0 (+ x -1.0)))) (- 1.0 x))) (/ 1.0 (+ x -1.0))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 64,
    "avg_bits_err_input": 9.862247228978633,
    "avg_bits_err_output": 9.852174350031545,
    "avg_bits_err_improve": 0.010072878947088526,
    "time": 26262.9443359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (+ (tan (+ x eps)) (tan x)) 0.0) (fma (tan (+ x eps)) (/ (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (* (tan x) (log1p (expm1 (/ (tan x) (- (- (tan x)) (tan (+ x eps)))))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 31,
    "avg_bits_err_input": 37.14351349314595,
    "avg_bits_err_output": 37.14991549425453,
    "avg_bits_err_improve": -0.0064020011085759165,
    "time": 19358.320068359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (if (!= (sqrt x) 0.0) (/ (- (* (sqrt x) (+ (sqrt (+ 1.0 x)) -1.0)) (* (sqrt x) (sqrt x))) (sqrt x)) (+ (- (sqrt (+ 1.0 x)) (sqrt x)) -1.0)) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 30.103093410625217,
    "avg_bits_err_output": 29.333046062056717,
    "avg_bits_err_improve": 0.7700473485685002,
    "time": 11503.181884765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (if (!= (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps))) 0.0) (/ (* (sin (+ x eps)) (- (/ (* (sin (+ x eps)) (sin (+ x eps))) (sin (+ x eps))) (* (sin (+ x eps)) (* (/ (sin x) (sin (+ x eps))) (/ (sin x) (sin (+ x eps))))))) (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps)))) (* (sin (+ x eps)) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 65,
    "avg_bits_err_input": 37.06058064168207,
    "avg_bits_err_output": 37.11357799581377,
    "avg_bits_err_improve": -0.052997354131697705,
    "time": 20025.581787109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(if (!= (/ 1.0 (sqrt x)) 0.0) (- (* (+ (/ 1.0 (sqrt x)) (/ -1.0 (sqrt (+ 1.0 x)))) 0.5) (/ (+ -1.0 (/ 1.0 (/ (sqrt (+ 1.0 x)) (sqrt x)))) (+ (sqrt x) (sqrt x)))) (+ (/ 1.0 (sqrt x)) (/ -1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 28,
    "avg_bits_err_input": 19.78679781097523,
    "avg_bits_err_output": 19.771097914896206,
    "avg_bits_err_improve": 0.015699896079024,
    "time": 15674.218017578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (- 1.0 (atan N)) (log (+ 1.0 (expm1 (+ (atan (+ N 1.0)) -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 15.702685266654953,
    "avg_bits_err_output": 15.720945483584309,
    "avg_bits_err_improve": -0.018260216929355977,
    "time": 9689.5576171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.68373776830271,
    "avg_bits_err_output": 29.68373776830271,
    "avg_bits_err_improve": 0,
    "time": 40143.04150390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (- 1.0 m) (/ (- m (* m m)) v)) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07484680468885217,
    "avg_bits_err_output": 0.07791921918104967,
    "avg_bits_err_improve": -0.0030724144921975005,
    "time": 12359.021240234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(/ (* a b) (/ (/ -1.0 a) b))",
    "output_parens": 4,
    "avg_bits_err_input": 16.554429015546823,
    "avg_bits_err_output": 0.2613496250072112,
    "avg_bits_err_improve": 16.293079390539614,
    "time": 10503.9873046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (+ angle (+ (+ angle (+ angle angle)) (+ angle (+ angle (+ angle angle))))) (/ PI 1440.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.127718495623387,
    "avg_bits_err_output": 20.137017024745557,
    "avg_bits_err_improve": -0.009298529122169441,
    "time": 26608.623779296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) (fma (- (+ (pow a 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (+ (pow a 2.0) (pow a 2.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 31.189253402311895,
    "avg_bits_err_output": 31.204295473897865,
    "avg_bits_err_improve": -0.015042071585970263,
    "time": 30360.152587890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* angle (/ PI 180.0)) 0.0) (* (* (/ angle 180.0) (/ (* PI PI) 180.0)) (/ angle (* (/ angle 180.0) PI))) (* angle (/ PI 180.0))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 20.250990098620672,
    "avg_bits_err_output": 20.27948093293272,
    "avg_bits_err_improve": -0.028490834312048463,
    "time": 29014.31005859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.174386842188131,
    "avg_bits_err_output": 0.174386842188131,
    "avg_bits_err_improve": 0,
    "time": 11769.559814453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32787923409624165,
    "avg_bits_err_output": 0.3239575338647301,
    "avg_bits_err_improve": 0.00392170023151156,
    "time": 17904.25732421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* e (/ (sin v) (- (- -1.0 (* e (cos v))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.13361560156295077,
    "avg_bits_err_output": 0.13354248125036058,
    "avg_bits_err_improve": 7.312031259018581e-05,
    "time": 16273.648193359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.553132762127607,
    "avg_bits_err_output": 16.55313447732514,
    "avg_bits_err_improve": -1.715197534224444e-06,
    "time": 31355.277587890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(fma (if (!= (- (+ b (- (sqrt (fma a (* c -4.0) (* b b))) b)) (- b)) 0.0) (/ (- (* (+ b (- (sqrt (fma a (* c -4.0) (* b b))) b)) (+ b (- (sqrt (fma a (* c -4.0) (* b b))) b))) (* b b)) (- (+ b (- (sqrt (fma a (* c -4.0) (* b b))) b)) (- b))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (/ 0.5 a) (fma (- b) (/ 0.5 a) (* b (/ 0.5 a))))",
    "output_parens": 46,
    "avg_bits_err_input": 52.54578696672873,
    "avg_bits_err_output": 51.60945007029214,
    "avg_bits_err_improve": 0.9363368964365861,
    "time": 30020.529541015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (+ (* (- (sqrt (fma a (* -4.0 c) (* b b))) b) (* (/ (+ b (sqrt (fma a (* -4.0 c) (* b b)))) (+ b (sqrt (fma a (* -4.0 c) (* b b))))) 0.5)) (/ (fma (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))) (- (* b b))) (+ b (+ (sqrt (fma a (* -4.0 c) (* b b))) (+ b (sqrt (fma a (* -4.0 c) (* b b)))))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 56,
    "avg_bits_err_input": 28.703022829959906,
    "avg_bits_err_output": 28.145625898041736,
    "avg_bits_err_improve": 0.55739693191817,
    "time": 28824.945068359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (fma (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))) (* b (- b))) (+ b (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 43.95278290847692,
    "avg_bits_err_output": 42.756068955294076,
    "avg_bits_err_improve": 1.1967139531828437,
    "time": 28092.125244140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* b b) (* (* a c) -4.0)) 0.0) (+ (* (fma b b (* a (* c 4.0))) (/ (* b b) (fma b b (* a (* c 4.0))))) (* (fma b b (* a (* c 4.0))) (* (* a -4.0) (/ c (fma b b (* a (* c 4.0))))))) (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 34,
    "avg_bits_err_input": 34.16796812371057,
    "avg_bits_err_output": 34.208906158480396,
    "avg_bits_err_improve": -0.04093803476982316,
    "time": 23712.693359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (* (cos phi2) (cos (- lambda1 lambda2))) 0.0) (/ (* (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)) (* (cos phi2) (cos (- lambda1 lambda2)))) (* (cos phi2) (cos (- lambda1 lambda2)))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.8658996775858595,
    "avg_bits_err_output": 0.8707864246849314,
    "avg_bits_err_improve": -0.004886747099071886,
    "time": 24375.68603515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ -1.0 (- (/ 2.0 (+ (exp (* -2.0 x)) 1.0)))) 0.0) (/ (- 1.0 (* (/ 2.0 (+ (exp (* -2.0 x)) 1.0)) (/ 2.0 (+ (exp (* -2.0 x)) 1.0)))) (+ -1.0 (- (/ 2.0 (- (exp (log (+ (exp (* -2.0 x)) 2.0))) 1.0))))) (+ -1.0 (/ 2.0 (+ (exp (* -2.0 x)) 1.0))))",
    "output_parens": 33,
    "avg_bits_err_input": 29.094274758241443,
    "avg_bits_err_output": 29.09471460642519,
    "avg_bits_err_improve": -0.00043984818374553925,
    "time": 21043.466064453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(+ (/ (/ (exp x) (+ (exp x) (exp (- x)))) 2.0) (/ (- (/ (exp x) 2.0) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 18,
    "avg_bits_err_input": 58.341430065011906,
    "avg_bits_err_output": 58.34864437415905,
    "avg_bits_err_improve": -0.007214309147144604,
    "time": 16648.09716796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (if (!= (- (exp x) (- (exp (- x)))) 0.0) (if (!= (* (exp x) (/ (exp x) (+ (exp (- x)) (exp x)))) 0.0) (/ (- (* (* (exp x) (/ (exp x) (+ (exp (- x)) (exp x)))) (* (exp x) (/ (exp x) (+ (exp (- x)) (exp x))))) (* (* (exp x) (/ (exp x) (+ (exp (- x)) (exp x)))) (* (exp (- x)) (/ (exp (- x)) (+ (exp (- x)) (exp x)))))) (* (exp x) (/ (exp x) (+ (exp (- x)) (exp x))))) (* (+ (exp (- x)) (exp x)) (/ (- (exp x) (exp (- x))) (+ (exp (- x)) (exp x))))) (- (exp x) (exp (- x)))) 2.0)",
    "output_parens": 82,
    "avg_bits_err_input": 58.420190970130484,
    "avg_bits_err_output": 58.467818314219656,
    "avg_bits_err_improve": -0.047627344089171686,
    "time": 15990.155029296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007823120312590144,
    "avg_bits_err_output": 0.007823120312590144,
    "avg_bits_err_improve": 0,
    "time": 4503.16357421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.969375,
    "avg_bits_err_output": 31.969375,
    "avg_bits_err_improve": 0,
    "time": 4365.94921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (* (/ x (- 1.0 x)) (/ x (- 1.0 x))) 0.0) (/ (if (!= (/ (fma x x -1.0) (* (- 1.0 x) (/ (+ x -1.0) (/ x (- 1.0 x))))) 0.0) (/ (* (/ (fma x x -1.0) (* (- 1.0 x) (/ (+ x -1.0) (/ x (- 1.0 x))))) (/ (fma x x -1.0) (* (- 1.0 x) (/ (+ x -1.0) (/ x (- 1.0 x)))))) (/ (fma x x -1.0) (* (- 1.0 x) (/ (+ x -1.0) (/ x (- 1.0 x)))))) (/ (fma x x -1.0) (* (- 1.0 x) (/ (+ x -1.0) (/ x (- 1.0 x)))))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 58.75718426350197,
    "avg_bits_err_output": 58.754872355130274,
    "avg_bits_err_improve": 0.0023119083716949262,
    "time": 19743.274169921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010875,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0,
    "time": 4244.038818359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12107312031259015,
    "avg_bits_err_output": 0.12107312031259015,
    "avg_bits_err_improve": 0,
    "time": 24258.700927734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1320212406251803,
    "avg_bits_err_output": 0.1320212406251803,
    "avg_bits_err_improve": 0,
    "time": 21824.09033203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.16164565647196,
    "avg_bits_err_output": 3.7749426851545427,
    "avg_bits_err_improve": 35.38670297131742,
    "time": 23692.185546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (+ a b) (/ (- a b) a)) a)))",
    "output_parens": 7,
    "avg_bits_err_input": 15.001870432482269,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 14.989620432482269,
    "time": 7136.330322265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (+ (fma (sin phi1) (- (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))) (cos delta)) (fma (- (sin phi1)) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.15074603719722948,
    "avg_bits_err_output": 0.14900972379620236,
    "avg_bits_err_improve": 0.0017363134010271175,
    "time": 32964.97900390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(fma (- b (sqrt (fma b b (* c (* a -3.0))))) (if (!= (/ -0.3333333333333333 a) 0.0) (/ 1.0 (/ 1.0 (/ -0.3333333333333333 a))) (/ -0.3333333333333333 a)) (fma (- b) (/ 0.3333333333333333 a) (* b (/ 0.3333333333333333 a))))",
    "output_parens": 18,
    "avg_bits_err_input": 52.54121187401281,
    "avg_bits_err_output": 51.54978775294944,
    "avg_bits_err_improve": 0.9914241210633676,
    "time": 28740.560791015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 33,
    "avg_bits_err_input": 28.833534575413424,
    "avg_bits_err_output": 28.351929632205064,
    "avg_bits_err_improve": 0.4816049432083602,
    "time": 28967.496826171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ b (* a -3.0))) 0.0) (* (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ b (* a -3.0))) (/ (/ (fma (sqrt (fma b b (* c (* -3.0 a)))) 0.3333333333333333 (/ b -3.0)) a) (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ b (* a -3.0))))) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333))",
    "output_parens": 45,
    "avg_bits_err_input": 44.071963725662876,
    "avg_bits_err_output": 42.25344685893082,
    "avg_bits_err_improve": 1.818516866732054,
    "time": 37267.505859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.19149044542867,
    "avg_bits_err_output": 34.19149044542867,
    "avg_bits_err_improve": 0,
    "time": 20890.183349609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (if (!= (* (sin (- lambda1 lambda2)) (cos phi2)) 0.0) (- (/ 1.0 (/ (/ 1.0 (sin (- lambda1 lambda2))) (cos phi2))) 0.0) (* (sin (- lambda1 lambda2)) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 28,
    "avg_bits_err_input": 13.244023484142858,
    "avg_bits_err_output": 13.26445541894863,
    "avg_bits_err_improve": -0.020431934805772656,
    "time": 31966.0361328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.478830136119743,
    "avg_bits_err_output": 0.5415885544994505,
    "avg_bits_err_improve": 28.93724158162029,
    "time": 20062.209716796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 1621.9296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (if (!= (/ (/ 2.0 (+ 1.0 x)) (+ 1.0 x)) 0.0) (/ (fma (/ (/ 2.0 (+ 1.0 x)) (+ 1.0 x)) (/ (/ 2.0 (+ 1.0 x)) (+ 1.0 x)) (* (/ (/ 2.0 (+ 1.0 x)) (+ 1.0 x)) (* (/ -1.0 (+ x -1.0)) (/ 2.0 (+ 1.0 x))))) (/ (/ 2.0 (+ 1.0 x)) (+ 1.0 x))) (/ (fma (/ -1.0 (+ x -1.0)) 2.0 (/ 2.0 (+ 1.0 x))) (+ 1.0 x))) (/ 2.0 (+ 1.0 x)))",
    "output_parens": 40,
    "avg_bits_err_input": 14.356729808407922,
    "avg_bits_err_output": 14.279447702951483,
    "avg_bits_err_improve": 0.07728210545643854,
    "time": 18919.6162109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (!= (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (fma (* A C) -4.0 (pow B 2.0)) (* F -2.0)))) (* (fma (* A C) -4.0 (pow B 2.0)) -2.0)) 0.0) (+ (/ 1.0 (/ 1.0 (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (fma (* A C) -4.0 (pow B 2.0)) (* F -2.0)))) (* (fma (* A C) -4.0 (pow B 2.0)) -2.0)))) (/ 1.0 (/ 1.0 (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (fma (* A C) -4.0 (pow B 2.0)) (* F -2.0)))) (* (fma (* A C) -4.0 (pow B 2.0)) -2.0))))) (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (fma (* A C) -4.0 (pow B 2.0)) (* F -2.0)))) (- (* C (* A 4.0)) (pow B 2.0))))",
    "output_parens": 83,
    "avg_bits_err_input": 52.68465213343055,
    "avg_bits_err_output": 52.69859974158542,
    "avg_bits_err_improve": -0.013947608154865065,
    "time": 44859.15771484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 28.799872016422874,
    "avg_bits_err_output": 28.79888141200962,
    "avg_bits_err_improve": 0.000990604413253493,
    "time": 26285.248779296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 5e+272) (/ (sqrt (* 2.0 (* (* F (- (pow B 2.0) (* 4.0 (* A C)))) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0))) 0.0)",
    "output_parens": 43,
    "avg_bits_err_input": 52.626284500470604,
    "avg_bits_err_output": 51.04650264504013,
    "avg_bits_err_improve": 1.5797818554304754,
    "time": 40013.010986328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.048649245902647,
    "avg_bits_err_output": 15.048649245902647,
    "avg_bits_err_improve": 0,
    "time": 1762.50537109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (* g (- (sqrt (* (+ g h) (- g h))) g)) g) (- (sqrt (- (* g g) (* h h))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 28,
    "avg_bits_err_input": 36.04933893785269,
    "avg_bits_err_output": 35.98127768577154,
    "avg_bits_err_improve": 0.06806125208115077,
    "time": 15244.806884765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9915689859449832,
    "avg_bits_err_output": 0.9780874062518031,
    "avg_bits_err_improve": 0.01348157969318009,
    "time": 6382.23828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(+ (+ 1.0 (/ (exp a) (+ (exp a) (exp b)))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.6864481203125902,
    "avg_bits_err_output": 0.8021784659415379,
    "avg_bits_err_improve": -0.11573034562894768,
    "time": 9122.85107421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-317) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e-277) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+279) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.087774609214982,
    "avg_bits_err_output": 2.3212239834702233,
    "avg_bits_err_improve": 8.76655062574476,
    "time": 8688.5185546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5410586298238309,
    "avg_bits_err_output": 0.459,
    "avg_bits_err_improve": 0.08205862982383089,
    "time": 7941.3046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -1e+18) (log (if (!= (+ 1.0 (exp (log1p (+ x (hypot 1.0 x))))) 0.0) (/ (- (* (if (!= (+ (+ x (+ 1.0 (hypot 1.0 x))) 2.0) 0.0) (/ (fma (+ 2.0 (+ x (hypot 1.0 x))) (+ 2.0 (+ x (hypot 1.0 x))) -1.0) (+ (+ x (+ 1.0 (hypot 1.0 x))) 2.0)) (+ x (+ 1.0 (hypot 1.0 x)))) (exp (log1p (+ x (hypot 1.0 x))))) 1.0) (+ 1.0 (exp (log1p (+ x (hypot 1.0 x)))))) (+ x (hypot 1.0 x)))) (log (if (!= (exp (log1p (+ x (hypot 1.0 x)))) 0.0) (if (!= (- (hypot 1.0 x) x) 0.0) (/ (+ (* (hypot 1.0 x) (- (hypot 1.0 x) x)) (* x (- (hypot 1.0 x) x))) (- (hypot 1.0 x) x)) (+ x (hypot 1.0 x))) (+ x (hypot 1.0 x)))))",
    "output_parens": 71,
    "avg_bits_err_input": 53.053144343062264,
    "avg_bits_err_output": 42.881566742304656,
    "avg_bits_err_improve": 10.171577600757608,
    "time": 22529.36474609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.661814674667153,
    "avg_bits_err_output": 5.662486607515121,
    "avg_bits_err_improve": -0.0006719328479682929,
    "time": 17074.832763671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014125,
    "avg_bits_err_output": 0.014125,
    "avg_bits_err_improve": 0,
    "time": 2967.690185546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1280.60400390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (- (/ (/ 2.0 r) r) 0.0)) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 14,
    "avg_bits_err_input": 12.904227775203816,
    "avg_bits_err_output": 0.5838775167919796,
    "avg_bits_err_improve": 12.320350258411837,
    "time": 19605.4169921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0) (* x1 x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5144545917423572,
    "avg_bits_err_output": 0.2890222219023705,
    "avg_bits_err_improve": 0.2254323698399867,
    "time": 71272.34619140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.37992929354394,
    "avg_bits_err_output": 1.3087197422870103,
    "avg_bits_err_improve": 17.071209551256928,
    "time": 10076.8740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (- (* x 0.954929658551372) (* x (* x (* x 0.25801227546559596)))) (* x (* x (* x -0.12900613773279798))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.2313942038992627,
    "avg_bits_err_output": 0.20225264726366377,
    "avg_bits_err_improve": 0.029141556635598947,
    "time": 8553.862060546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 2498.74365234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (+ (/ PI (* a (* 2.0 (- b a)))) (/ (/ PI (* (- b a) -2.0)) b)) (+ b a))",
    "output_parens": 11,
    "avg_bits_err_input": 14.448593729422706,
    "avg_bits_err_output": 0.2602868517693537,
    "avg_bits_err_improve": 14.188306877653352,
    "time": 15203.376220703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (+ 1.0 (/ 1.0 eps)) (exp (* x (+ eps -1.0)))) (* (/ 1.0 eps) (exp (* (+ 1.0 eps) (- x))))) (- (- (exp (* (+ 1.0 eps) (- x)))))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.068608974404512,
    "avg_bits_err_output": 24.426316774183892,
    "avg_bits_err_improve": 4.64229220022062,
    "time": 22185.984619140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.00525,
    "avg_bits_err_output": 0.00525,
    "avg_bits_err_improve": 0,
    "time": 7178.67578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- (- (/ (/ 8.0 (+ 4.0 (/ 4.0 t))) t) 2.0)) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 27,
    "avg_bits_err_input": 0.008625,
    "avg_bits_err_output": 0.030125,
    "avg_bits_err_improve": -0.0215,
    "time": 15106.34765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (/ (* t 4.0) (+ t 1.0)))) (+ 2.0 (* (/ t (+ t 1.0)) (/ (* t 4.0) (+ t 1.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.047125,
    "avg_bits_err_output": 0.071125,
    "avg_bits_err_improve": -0.023999999999999994,
    "time": 12193.946533203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3473.598876953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2983.459228515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2362.7607421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.822439552994903,
    "avg_bits_err_output": 0.2555,
    "avg_bits_err_improve": 7.566939552994904,
    "time": 16363.358154296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.196932921991729,
    "avg_bits_err_output": 7.196932921991729,
    "avg_bits_err_improve": 0,
    "time": 3401.164306640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.775917841363928,
    "avg_bits_err_output": 15.775917841363928,
    "avg_bits_err_improve": 0,
    "time": 3625.360595703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (if (!= (exp (log1p (cos x))) 0.0) (/ (log (+ 1.0 (expm1 (* (cos x) (+ (cos x) 1.0))))) (exp (log1p (cos x)))) (cos x)) (expm1 (log1p (exp (* 10.0 (* x x))))))",
    "output_parens": 23,
    "avg_bits_err_input": 3.5279987713504624,
    "avg_bits_err_output": 3.5274973500034594,
    "avg_bits_err_improve": 0.0005014213470029283,
    "time": 26406.03271484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 15.238760082455856,
    "avg_bits_err_improve": 0,
    "time": 15184.533203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.974329284874436,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.974329284874436,
    "time": 4202.681640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.31492535642638,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.31417535642638,
    "time": 5092.27978515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.249375,
    "avg_bits_err_improve": 63.750625,
    "time": 26141.96826171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843247791892665,
    "avg_bits_err_output": 0.39075,
    "avg_bits_err_improve": 61.45249779189267,
    "time": 8140.85791015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma (* a c) (* a (/ (* c 16.0) (- (* a (* c -4.0)) (* b b)))) (* b (* b (* (/ b (fma b b (* (* a c) 4.0))) b)))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 29,
    "avg_bits_err_input": 34.35626756182946,
    "avg_bits_err_output": 33.33807289871454,
    "avg_bits_err_improve": 1.0181946631149188,
    "time": 23151.162353515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* b b) (* (* a c) -4.0)) 0.0) (+ (* (fma b b (* a (* c 4.0))) (/ (* b b) (fma b b (* a (* c 4.0))))) (* (fma b b (* a (* c 4.0))) (* (* a -4.0) (/ c (fma b b (* a (* c 4.0))))))) (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 34,
    "avg_bits_err_input": 34.16796812371057,
    "avg_bits_err_output": 34.208906158480396,
    "avg_bits_err_improve": -0.04093803476982316,
    "time": 26570.36083984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1971.77001953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.96699280021474,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 39.95649280021474,
    "time": 7094.697021484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(* (- x y) (/ (+ x y) (fma y y (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.940154839816145,
    "avg_bits_err_output": 20.179825594639,
    "avg_bits_err_improve": -0.23967075482285338,
    "time": 4334.902099609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6135202606315286,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6135202606315286,
    "time": 7592.312255859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.032625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.031875,
    "time": 7083.63134765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021542481250360578,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.011167481250360578,
    "time": 4724.047607421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01225,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.011375,
    "time": 3414.0361328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1979.806640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ c (+ b (+ a d))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4040592109406551,
    "avg_bits_err_output": 0.247,
    "avg_bits_err_improve": 0.15705921094065511,
    "time": 5236.12158203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (+ 1.0 (exp (log1p (- 1.0 (cos x))))) 0.0) (/ (if (!= (- 3.0 (* 2.0 (cos x))) 0.0) (/ (+ (* (fma 2.0 (cos x) -3.0) (- (fma 2.0 (cos x) -3.0) (* (cos x) (- (cos x) 2.0)))) (fma (- (* (- 3.0 (* 2.0 (cos x))) (- 2.0 (cos x)))) (cos x) (* (fma 2.0 (cos x) -3.0) (* (cos x) (- (cos x) 2.0))))) (- 3.0 (* 2.0 (cos x)))) (fma (- 2.0 (cos x)) (- 2.0 (cos x)) -1.0)) (+ 1.0 (exp (log1p (- 1.0 (cos x)))))) (- 1.0 (cos x)))",
    "output_parens": 56,
    "avg_bits_err_input": 30.534509587325942,
    "avg_bits_err_output": 30.539328411596408,
    "avg_bits_err_improve": -0.004818824270465427,
    "time": 28526.15283203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.624325936858042,
    "avg_bits_err_output": 24.620764951331186,
    "avg_bits_err_improve": 0.003560985526856797,
    "time": 13184.9775390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ x (- (tan x))) 0.0) (/ (- (fma (/ x (tan x)) (/ (- (sin x) x) (tan x)) 1.0) 1.0) (/ x (- (tan x)))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 21,
    "avg_bits_err_input": 29.735580462747357,
    "avg_bits_err_output": 29.738692719370004,
    "avg_bits_err_improve": -0.00311225662264647,
    "time": 29448.349365234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0055,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.004625,
    "time": 3040.491455078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -7.8e+42) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (/ (- -100.0 (/ (pow (+ 1.0 (/ i n)) n) -0.01)) (/ i n)))",
    "output_parens": 36,
    "avg_bits_err_input": 47.906857548174784,
    "avg_bits_err_output": 45.455968448910255,
    "avg_bits_err_improve": 2.450889099264529,
    "time": 24925.166259765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 0.0) (fma b (/ d (fma c c (* d d))) (* a (/ c (fma c c (* d d))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 2e-19) (/ (+ (* (+ d d) (+ b b)) (* (+ c c) (+ a a))) (* (* (fma d d (* c c)) 2.0) 2.0)) (fma b (/ d (fma c c (* d d))) (* a (/ c (fma c c (* d d)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 25.968229817912984,
    "avg_bits_err_output": 22.49468887824084,
    "avg_bits_err_improve": 3.4735409396721444,
    "time": 14188.443603515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) -4e-210) (+ (* c (/ b (fma d d (* c c)))) (* a (/ d (- (fma d d (* c c)))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 5e+274) (fma b (/ c (fma c c (* d d))) (/ (* a (- d)) (fma c c (* d d)))) (fma b (/ c (fma c c (* d d))) (if (!= (* d (/ a (fma d d (* c c)))) 0.0) (/ 1.0 (/ (/ 1.0 d) (/ a (- (fma d d (* c c)))))) (* a (- (/ d (fma d d (* c c)))))))))",
    "output_parens": 59,
    "avg_bits_err_input": 26.133310396043644,
    "avg_bits_err_output": 23.97257130175183,
    "avg_bits_err_improve": 2.160739094291813,
    "time": 12111.616943359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.02276184218813101,
    "avg_bits_err_improve": 0.014863157811868987,
    "time": 4004.23291015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (if (!= (* (- 1.0 ux) (fma ux maxCos (- 1.0 ux))) 0.0) (/ (- (* (- 1.0 (* (fma ux maxCos (- 1.0 ux)) (* ux maxCos))) (* (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (* (- 1.0 ux) (* (fma ux maxCos (- 1.0 ux)) (log (+ 1.0 (expm1 (* (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))) (* (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- 1.0 (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.493586621741947,
    "avg_bits_err_output": 12.33383044753249,
    "avg_bits_err_improve": 1.1597561742094573,
    "time": 27811.110107421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- ux (+ (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (* ux (+ ux -1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.529781691518084,
    "avg_bits_err_output": 0.3382351387788464,
    "avg_bits_err_improve": 13.191546552739236,
    "time": 24343.562255859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (if (!= (* uy (* 2.0 PI)) 0.0) (/ 1.0 (- (/ (/ 0.5 PI) uy) 0.0)) (* uy (* 2.0 PI)))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 42,
    "avg_bits_err_input": 0.33362818424911234,
    "avg_bits_err_output": 0.34746118910846213,
    "avg_bits_err_improve": -0.013833004859349796,
    "time": 37966.296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20030153685924734,
    "avg_bits_err_output": 0.20030153685924734,
    "avg_bits_err_improve": 0,
    "time": 20103.1826171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(log1p (expm1 (* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5431772925161444,
    "avg_bits_err_output": 0.544726332193992,
    "avg_bits_err_improve": -0.0015490396778475857,
    "time": 19698.617919921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ u1 (- 1.0 u1)) 0.0) (/ (* u1 (/ u1 (- 1.0 u1))) u1) (/ u1 (- 1.0 u1)))) (cos (* 6.28318530718 u2)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.3217833431545981,
    "avg_bits_err_output": 0.3486987876790413,
    "avg_bits_err_improve": -0.026915444524443166,
    "time": 22524.15576171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.33924215969447646,
    "avg_bits_err_output": 0.3394921596944765,
    "avg_bits_err_improve": -0.000250000000000028,
    "time": 43275.459228515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06396203401129882,
    "avg_bits_err_output": 0.06396203401129882,
    "avg_bits_err_improve": 0,
    "time": 11900.6982421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13358078798172698,
    "avg_bits_err_output": 0.11898761581939883,
    "avg_bits_err_improve": 0.014593172162328152,
    "time": 22942.699951171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641672695097591,
    "avg_bits_err_output": 0.6647208177201474,
    "avg_bits_err_improve": -0.0005535482103882217,
    "time": 20062.041748046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1575425624589511,
    "avg_bits_err_output": 0.15136695170411923,
    "avg_bits_err_improve": 0.006175610754831862,
    "time": 18426.40478515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (/ (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) -2.0) (- (* eta eta) (/ (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) 2.0))))))",
    "output_parens": 18,
    "avg_bits_err_input": 2.537795758433255,
    "avg_bits_err_output": 2.5496067099981685,
    "avg_bits_err_improve": -0.01181095156491363,
    "time": 38921.6435546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (/ (* cosTheta_i (/ (exp (* sinTheta_i (/ sinTheta_O (- v)))) (+ v v))) (* (+ v v) (sinh (/ 1.0 v)))) (+ cosTheta_O cosTheta_O))",
    "output_parens": 14,
    "avg_bits_err_input": 0.45374477729140716,
    "avg_bits_err_output": 0.3838733752358132,
    "avg_bits_err_improve": 0.06987140205559395,
    "time": 25188.406982421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931) 0.0) (fma (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) 0.6931) (/ (log (/ 0.5 v)) (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) 0.6931)) (/ 1.0 (/ 1.0 (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) 0.6931)))) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 37,
    "avg_bits_err_input": 0.1066016481684797,
    "avg_bits_err_output": 0.1406484958803799,
    "avg_bits_err_improve": -0.0340468477119002,
    "time": 15070.20751953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (+ (* alpha alpha) -1.0) (log (* alpha alpha))) PI) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.47146334320773836,
    "avg_bits_err_output": 0.48941868872424454,
    "avg_bits_err_improve": -0.017955345516506183,
    "time": 21624.29833984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (/ (fma u 1.7777777777777777 -1.7777777777777777) -1.3333333333333333)))))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3238551415534026,
    "avg_bits_err_output": 1.2945726694319026,
    "avg_bits_err_improve": 0.029282472121499925,
    "time": 24242.0234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (- 2.0 (log (/ 1.0 (fma u -4.0 1.0)))) 0.0) (/ (- 1.0 (log (+ 1.0 (expm1 (* (+ (log (/ 1.0 (fma u -4.0 1.0))) -1.0) (+ (log (/ 1.0 (fma u -4.0 1.0))) -1.0)))))) (- 2.0 (log (/ 1.0 (fma u -4.0 1.0))))) (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 28,
    "avg_bits_err_input": 12.310275082294115,
    "avg_bits_err_output": 11.826411171219789,
    "avg_bits_err_improve": 0.4838639110743266,
    "time": 26899.626708984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (/ (* s (* r PI)) 0.16666666666666666)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.15304794401725277,
    "avg_bits_err_output": 0.14728206421656279,
    "avg_bits_err_improve": 0.005765879800689988,
    "time": 34986.670166015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (/ (sin (* normAngle (- 1.0 u))) (sin normAngle)) n0_i) (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8490767472671129,
    "avg_bits_err_output": 0.7009809937203761,
    "avg_bits_err_improve": 0.14809575354673676,
    "time": 25142.661376953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (/ (* (sqrt (- 1.0 (+ cosTheta cosTheta))) (exp (* cosTheta (- cosTheta)))) (* cosTheta (sqrt PI)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7068688293326224,
    "avg_bits_err_output": 0.47660613689778525,
    "avg_bits_err_improve": 0.23026269243483716,
    "time": 19867.161376953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* u2 (expm1 (log1p (* 2.0 PI))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.520307270022995,
    "avg_bits_err_output": 13.533678811027412,
    "avg_bits_err_improve": -0.013371541004417509,
    "time": 22773.68603515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (if (!= (- -1.0 (+ 1.0 (sqrt (- (log (- 1.0 u1)))))) 0.0) (- (/ (* (+ 1.0 (sqrt (- (log (- 1.0 u1))))) (- -1.0 (sqrt (- (log (- 1.0 u1)))))) (- -2.0 (sqrt (- (log (- 1.0 u1)))))) (log (+ 1.0 (expm1 (/ 1.0 (+ (sqrt (- (log (- 1.0 u1)))) 2.0)))))) (sqrt (- (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 43,
    "avg_bits_err_input": 13.570601282770717,
    "avg_bits_err_output": 12.920134541704963,
    "avg_bits_err_improve": 0.6504667410657543,
    "time": 24276.60888671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(/ (- alpha) (/ (/ 1.0 (log (- 1.0 u0))) alpha))",
    "output_parens": 6,
    "avg_bits_err_input": 13.978770255565019,
    "avg_bits_err_output": 13.982657347097435,
    "avg_bits_err_improve": -0.003887091532416065,
    "time": 19687.968017578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (if (!= (+ 1.0 (+ 1.0 (log (- 1.0 u0)))) 0.0) (/ (fma (+ 1.0 (log (- 1.0 u0))) (+ 1.0 (log (- 1.0 u0))) -1.0) (+ 1.0 (+ 1.0 (log (- 1.0 u0))))) (log (- 1.0 u0)))) (+ (/ (/ cos2phi alphax) alphax) (/ sin2phi (* alphay alphay))))",
    "output_parens": 27,
    "avg_bits_err_input": 12.741572865133525,
    "avg_bits_err_output": 12.824875119767624,
    "avg_bits_err_improve": -0.08330225463409846,
    "time": 20222.129150390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -1.15e-221) (- (* PI l) (/ (/ (tan (* PI l)) F) F)) (if (<= F 1.5e-162) (- (* PI l) (/ (/ (/ (tan (* PI l)) (* F (/ F (/ F (/ 1.0 F))))) F) F)) (- (* PI l) (/ (/ (tan (* PI l)) F) F))))",
    "output_parens": 27,
    "avg_bits_err_input": 16.591322162193293,
    "avg_bits_err_output": 8.795090622980531,
    "avg_bits_err_improve": 7.796231539212762,
    "time": 20995.926025390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2183977750432873,
    "avg_bits_err_output": 0.15408405316774643,
    "avg_bits_err_improve": 0.06431372187554088,
    "time": 17467.400146484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.678654866980793,
    "avg_bits_err_output": 10.901710655019425,
    "avg_bits_err_improve": 2.776944211961368,
    "time": 21109.616943359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (/ (* (exp (* PI (/ f 4.0))) (- (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (exp (* PI (/ f -4.0))))) (* (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))))) (/ (* (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))))) (* (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))))))) (/ PI -4.0))",
    "output_parens": 59,
    "avg_bits_err_input": 61.54165585945417,
    "avg_bits_err_output": 61.64474647952181,
    "avg_bits_err_improve": -0.1030906200676398,
    "time": 81630.91235351562,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.32659585248511,
    "avg_bits_err_output": 34.05247603458801,
    "avg_bits_err_improve": 9.274119817897102,
    "time": 26535.137451171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.231344212828495,
    "avg_bits_err_output": 4.231344212828495,
    "avg_bits_err_improve": 0,
    "time": 26976.367919921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (log (+ 1.0 (expm1 (/ 1.0 (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))))) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.9556506569647484,
    "avg_bits_err_output": 0.9572756569647484,
    "avg_bits_err_improve": -0.0016249999999999876,
    "time": 12407.16552734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 9.879481038585118,
    "avg_bits_err_improve": -0.00034697342185197044,
    "time": 15584.672607421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-317) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+253) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (+ (* U (* (* (/ l Om) -2.0) (* l (* 2.0 n)))) (* U (* (* 2.0 n) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.715856491886406,
    "avg_bits_err_output": 28.91747938853611,
    "avg_bits_err_improve": 5.7983771033502975,
    "time": 33972.687744140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ (sin k) l)) (/ 1.0 (tan k)))",
    "output_parens": 12,
    "avg_bits_err_input": 47.454367195334584,
    "avg_bits_err_output": 36.43584395308107,
    "avg_bits_err_improve": 11.018523242253515,
    "time": 39071.993408203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (sin k) l) (* (* (tan k) (pow t 3.0)) (/ (+ 2.0 (pow (/ k t) 2.0)) l))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.29597966000656,
    "avg_bits_err_output": 27.61038465750829,
    "avg_bits_err_improve": 4.6855950024982675,
    "time": 24862.523681640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* (* a1 a1) (+ (cos th) (cos th))) (* a2 (* a2 (+ (cos th) (cos th))))) (+ (sqrt 2.0) (sqrt 2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5231174843993409,
    "avg_bits_err_output": 0.5132208672068825,
    "avg_bits_err_improve": 0.009896617192458379,
    "time": 23185.725341796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.4621902415054958,
    "avg_bits_err_output": 0.4111960908520914,
    "avg_bits_err_improve": 0.0509941506534044,
    "time": 19751.9990234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (if (!= (* (exp l) J) 0.0) (* (* J (- (exp l) (exp (- l)))) (* J (/ (exp l) (* (exp l) J)))) (* J (- (exp l) (exp (- l))))) (cos (/ K 2.0))) U)",
    "output_parens": 24,
    "avg_bits_err_input": 17.13823190441733,
    "avg_bits_err_output": 17.139213229336303,
    "avg_bits_err_improve": -0.0009813249189711826,
    "time": 23235.203857421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K n) 0.0) 0.0 (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 19,
    "avg_bits_err_input": 15.457810561855487,
    "avg_bits_err_output": 1.2512396960415713,
    "avg_bits_err_improve": 14.206570865813916,
    "time": 17386.519287109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* -2.0 J) (* (cos (/ K 2.0)) (sqrt (+ 1.0 (pow (/ (/ U (* 2.0 J)) (cos (/ K 2.0))) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.109875,
    "avg_bits_err_output": 18.117002443751083,
    "avg_bits_err_improve": -0.007127443751084428,
    "time": 32807.63232421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) -5e-18) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l)))) (if (<= (/ h l) -1e-119) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (/ (* (pow (if (!= (/ (/ (* D M) d) 2.0) 0.0) (/ 2.0 (/ 4.0 (/ (* D M) d))) (/ (/ (* D M) d) 2.0)) 2.0) h) l))))))",
    "output_parens": 42,
    "avg_bits_err_input": 14.03672484659555,
    "avg_bits_err_output": 10.867260166274637,
    "avg_bits_err_improve": 3.169464680320914,
    "time": 19439.028076171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -5e+257) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l)))) (if (<= (* V l) -2e-244) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 5e-311) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l)))) (if (<= (* V l) 5e+287) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l))))))))",
    "output_parens": 38,
    "avg_bits_err_input": 20.075743097737565,
    "avg_bits_err_output": 15.10424478469002,
    "avg_bits_err_improve": 4.971498313047546,
    "time": 17606.5146484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= M -2.3e-150) (* (/ c0 (* 2.0 w)) (if (!= (* (/ d (* (* w D) (* h D))) (* c0 d)) 0.0) (fma (sqrt (* (fma c0 (* d (/ d (* (* w D) (* h D)))) M) (fma (/ d (* (* w D) (* h D))) (* c0 d) (- M)))) (/ (* (/ d (* (* w D) (* h D))) (* c0 d)) (* (/ d (* (* w D) (* h D))) (* c0 d))) (/ 1.0 (/ 1.0 (* (/ d (* (* w D) (* h D))) (* c0 d))))) (if (!= 0.0 0.0) 0.0 (fma c0 (* d (/ (/ d h) (* D (* D w)))) (sqrt (* (fma d (/ (* d (/ c0 D)) (* D (* w h))) M) (- (/ (* (* d (/ c0 D)) d) (* D (* w h))) M))))))) (if (<= M 6.2e-293) (* c0 (/ (fma c0 (* (/ d D) (/ d (* w (* D h)))) (sqrt (* (fma c0 (* (/ d D) (/ d (* w (* D h)))) M) (fma (* d (/ d (* w (* D h)))) (/ c0 D) (- M))))) (+ w w))) (if (<= M 1.3e-272) (* (/ c0 (* 2.0 w)) (if (!= (* (/ d (* (* w D) (* h D))) (* c0 d)) 0.0) (fma (sqrt (* (fma c0 (* d (/ d (* (* w D) (* h D)))) M) (fma (/ d (* (* w D) (* h D))) (* c0 d) (- M)))) (/ (* (/ d (* (* w D) (* h D))) (* c0 d)) (* (/ d (* (* w D) (* h D))) (* c0 d))) (/ 1.0 (/ 1.0 (* (/ d (* (* w D) (* h D))) (* c0 d))))) (if (!= 0.0 0.0) 0.0 (fma c0 (* d (/ (/ d h) (* D (* D w)))) (sqrt (* (fma d (/ (* d (/ c0 D)) (* D (* w h))) M) (- (/ (* (* d (/ c0 D)) d) (* D (* w h))) M))))))) (if (<= M 4e-203) (/ (/ (* c0 (fma c0 (* d (/ (/ (/ d w) h) (* D D))) (sqrt (* (fma c0 (* d (/ (/ (/ d w) h) (* D D))) M) (fma c0 (* d (/ (/ (/ d w) h) (* D D))) (- M)))))) w) 2.0) (if (<= M 9e-86) (* (/ c0 (* 2.0 w)) (if (!= (* (/ d (* (* w D) (* h D))) (* c0 d)) 0.0) (fma (sqrt (* (fma c0 (* d (/ d (* (* w D) (* h D)))) M) (fma (/ d (* (* w D) (* h D))) (* c0 d) (- M)))) (/ (* (/ d (* (* w D) (* h D))) (* c0 d)) (* (/ d (* (* w D) (* h D))) (* c0 d))) (/ 1.0 (/ 1.0 (* (/ d (* (* w D) (* h D))) (* c0 d))))) (if (!= 0.0 0.0) 0.0 (fma c0 (* d (/ (/ d h) (* D (* D w)))) (sqrt (* (fma d (/ (* d (/ c0 D)) (* D (* w h))) M) (- (/ (* (* d (/ c0 D)) d) (* D (* w h))) M))))))) (/ (/ (* c0 (fma c0 (* d (/ (/ (/ d h) (* w D)) D)) (sqrt (* (fma c0 (* d (/ (/ (/ d h) (* w D)) D)) M) (- (* (/ (/ d h) (* w D)) (* d (/ c0 D))) M))))) w) 2.0))))))",
    "output_parens": 295,
    "avg_bits_err_input": 59.4890401168143,
    "avg_bits_err_output": 57.245353815366556,
    "avg_bits_err_improve": 2.2436863014477453,
    "time": 55458.378662109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (/ (* (pow (* D (/ M (+ d d))) 2.0) (pow (/ d l) 0.5)) (+ l l)) (* (pow (/ d h) 0.5) h))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+276) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (* (pow (/ d l) 0.5) (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l))) (* (pow (/ d h) 0.5) h)))))",
    "output_parens": 85,
    "avg_bits_err_input": 26.57517247183802,
    "avg_bits_err_output": 24.222854766409675,
    "avg_bits_err_improve": 2.3523177054283444,
    "time": 40605.503662109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (if (!= (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (- (* (- (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 1.0) 1.0) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0)) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 78,
    "avg_bits_err_input": 15.268472142618139,
    "avg_bits_err_output": 14.798651270381537,
    "avg_bits_err_improve": 0.4698208722366015,
    "time": 24648.308837890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 (- 1.0 (* v v))) PI) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9855212406251803,
    "avg_bits_err_output": 0.00975,
    "avg_bits_err_improve": 0.9757712406251803,
    "time": 4837.14892578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (- 1.0 (* v (* v 5.0))) PI) (* (- t (* v (* v t))) (sqrt (- 2.0 (* v (* v 6.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42904849037918835,
    "avg_bits_err_output": 0.2867390001988949,
    "avg_bits_err_improve": 0.14230949018029343,
    "time": 20073.160400390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010948120312590145,
    "avg_bits_err_output": 0.010948120312590145,
    "avg_bits_err_improve": 0,
    "time": 3929.425048828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5439001819329498,
    "avg_bits_err_output": 0.5439001819329498,
    "avg_bits_err_improve": 0,
    "time": 9609.34765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9259301046592883,
    "avg_bits_err_output": 1.9084819843466982,
    "avg_bits_err_improve": 0.01744812031259002,
    "time": 15981.796142578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (/ (- Vef (- Ec (+ mu EDonor))) KbT)) -1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018231961784336958,
    "avg_bits_err_output": 0.018231961784336958,
    "avg_bits_err_improve": 0,
    "time": 7903.967529296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (if (!= (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0)) 0.0) (+ (/ (* b (* b 4.0)) 2.0) (/ (+ (pow (fma b b (* a a)) 2.0) (fma b (* b 4.0) (pow (fma b b (* a a)) 2.0))) 2.0)) (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 27,
    "avg_bits_err_input": 0.19278029524739168,
    "avg_bits_err_output": 0.20048385038956515,
    "avg_bits_err_improve": -0.007703555142173468,
    "time": 16446.365966796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (+ (* -4.0 (- (* b b))) (+ (* -4.0 (* b (* b (* a 3.0)))) (fma a (* 4.0 (fma a a a)) (pow (fma b b (* a a)) 2.0)))) -1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1859979328161958,
    "avg_bits_err_output": 0.1853823312532451,
    "avg_bits_err_improve": 0.0006156015629507072,
    "time": 22472.080078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (if (!= (pow (fma b b (* a a)) 2.0) 0.0) (* (pow (fma b b (* a a)) 2.0) (/ (fma 4.0 (fma b (* b (+ 3.0 a)) (* a (- a (* a a)))) (pow (fma b b (* a a)) 2.0)) (pow (fma b b (* a a)) 2.0))) (fma 4.0 (fma b (* b (+ 3.0 a)) (* a (- a (* a a)))) (pow (fma b b (* a a)) 2.0))) 1.0)",
    "output_parens": 34,
    "avg_bits_err_input": 0.19748326282425066,
    "avg_bits_err_output": 0.1997711148846472,
    "avg_bits_err_improve": -0.002287852060396528,
    "time": 24232.2578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.033998074617855,
    "avg_bits_err_output": 13.033998074617855,
    "avg_bits_err_improve": 0,
    "time": 17577.074951171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.25816847325312,
    "avg_bits_err_output": 0.04775,
    "avg_bits_err_improve": 41.21041847325312,
    "time": 4634.907958984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (/ x (- (tan x) x)))",
    "output_parens": 8,
    "avg_bits_err_input": 31.461052173174245,
    "avg_bits_err_output": 31.429315610889542,
    "avg_bits_err_improve": 0.031736562284702785,
    "time": 17888.5546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.31137639132593,
    "avg_bits_err_output": 34.31137639132593,
    "avg_bits_err_improve": 0,
    "time": 16753.41015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.67612592308911,
    "avg_bits_err_output": 33.67545856634495,
    "avg_bits_err_improve": 0.0006673567441595196,
    "time": 16968.004150390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.736452024498952,
    "avg_bits_err_output": 30.95250076986972,
    "avg_bits_err_improve": 0.7839512546292333,
    "time": 16074.315185546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(log (log (exp (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 33.29715031191236,
    "avg_bits_err_output": 33.37678026845252,
    "avg_bits_err_improve": -0.0796299565401597,
    "time": 19481.69580078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 28.969261763196297,
    "avg_bits_err_output": 28.969739470154316,
    "avg_bits_err_improve": -0.0004777069580192972,
    "time": 11811.481201171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (!= (/ (/ x x) (+ x 1.0)) 0.0) (/ (/ (/ 1.0 (- -1.0 x)) x) (* (+ x 1.0) (/ 1.0 (+ x 1.0)))) (/ (+ (/ x (+ x 1.0)) -1.0) x))",
    "output_parens": 17,
    "avg_bits_err_input": 14.50278024762384,
    "avg_bits_err_output": 0.075,
    "avg_bits_err_improve": 14.42778024762384,
    "time": 10774.933837890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (+ (cos (+ x eps)) (cos x)) 0.0) (/ (fma (cos (+ x eps)) (+ (cos (+ x eps)) (cos x)) (* (cos x) (- (- (cos x)) (cos (+ x eps))))) (+ (cos (+ x eps)) (cos x))) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 29,
    "avg_bits_err_input": 39.86815598606264,
    "avg_bits_err_output": 39.93712319720338,
    "avg_bits_err_improve": -0.06896721114073756,
    "time": 17499.372802734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (- (fma (+ (cbrt x) (cbrt (+ 1.0 x))) (- (cbrt x) (cbrt (+ 1.0 x))) (* (cbrt (+ 1.0 x)) (+ (cbrt (+ 1.0 x)) (+ (cbrt x) (- (- (cbrt x)) (cbrt (+ 1.0 x)))))))) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 38,
    "avg_bits_err_input": 29.348605674942352,
    "avg_bits_err_output": 29.358939498645835,
    "avg_bits_err_improve": -0.010333823703483347,
    "time": 9631.357421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(if (!= (/ (- (cos x)) (sin x)) 0.0) (* (/ (cos x) (sin x)) (/ (/ (- 1.0 (cos x)) (sin x)) (/ (cos x) (sin x)))) (/ (- 1.0 (cos x)) (sin x)))",
    "output_parens": 22,
    "avg_bits_err_input": 30.28445121235955,
    "avg_bits_err_output": 30.32757677274512,
    "avg_bits_err_improve": -0.04312556038557247,
    "time": 22707.453857421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (* (fma b b (* a (* c -4.0))) (* (* a 4.0) (/ (/ c c) (* a 4.0)))) (/ (* (fma c (* a -4.0) (* b b)) (* a (/ 4.0 c))) (* a (/ 4.0 c)))))) (* a 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 33.95559404567842,
    "avg_bits_err_output": 34.61662420041067,
    "avg_bits_err_improve": -0.6610301547322521,
    "time": 34961.199951171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(- (/ (/ (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) -2.0) a) 0.0)",
    "output_parens": 9,
    "avg_bits_err_input": 33.66758794091285,
    "avg_bits_err_output": 33.6878259203981,
    "avg_bits_err_improve": -0.02023797948524475,
    "time": 21300.350830078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.270619768826684,
    "avg_bits_err_output": 0.8816123892796293,
    "avg_bits_err_improve": 60.38900737954705,
    "time": 23947.70361328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log (+ n 1.0)) (log n)) n)) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 62.99302958475544,
    "avg_bits_err_output": 44.230468405191445,
    "avg_bits_err_improve": 18.762561179563995,
    "time": 16523.3369140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (log (- (/ 1.0 (- (+ eps eps) (- -1.0 (* eps eps)))) (* (/ eps (+ eps 1.0)) (/ eps (+ eps 1.0))))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 58.74642241238647,
    "avg_bits_err_output": 58.77644246082089,
    "avg_bits_err_improve": -0.03002004843441597,
    "time": 21185.76416015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ (log (+ 1.0 (expm1 (/ (- 1.0 (/ x (tan x))) x)))) 2.0) (/ (if (!= (/ -1.0 (/ x (tan x))) 0.0) (/ (/ (+ -1.0 (/ 1.0 (/ x (tan x)))) (/ x (tan x))) (/ -1.0 (/ x (tan x)))) (+ 1.0 (/ -1.0 (/ x (tan x))))) (/ (+ x x) (/ x (tan x)))))",
    "output_parens": 34,
    "avg_bits_err_input": 59.8838557877573,
    "avg_bits_err_output": 59.873585547978514,
    "avg_bits_err_improve": 0.010270239778783719,
    "time": 30632.986572265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ a b))) (expm1 (* eps b))) (/ eps (expm1 (* eps a))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.345378136483426,
    "avg_bits_err_output": 29.48840025688199,
    "avg_bits_err_improve": 30.856977879601434,
    "time": 25479.69775390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.57759652460927,
    "avg_bits_err_output": 0.4115424812503606,
    "avg_bits_err_improve": 41.16605404335891,
    "time": 5571.66748046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64956406296297,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.648939062962974,
    "time": 3404.64208984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.190555501613225,
    "avg_bits_err_output": 0.021933307961146224,
    "avg_bits_err_improve": 29.16862219365208,
    "time": 18818.686767578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (- (expm1 x) (expm1 (- x))) 0.0) (/ (- (* (expm1 x) (expm1 x)) (* (expm1 (- x)) (expm1 (- x)))) (- (expm1 x) (expm1 (- x)))) (+ (expm1 x) (expm1 (- x))))",
    "output_parens": 24,
    "avg_bits_err_input": 29.97122092094942,
    "avg_bits_err_output": 29.093578982706703,
    "avg_bits_err_improve": 0.8776419382427179,
    "time": 18543.744384765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (* (/ (/ 2.0 (+ 1.0 x)) (/ 4.0 x)) (/ 2.0 x)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 9.863463027586418,
    "avg_bits_err_output": 9.85969145387963,
    "avg_bits_err_improve": 0.003771573706787379,
    "time": 27500.6044921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (+ (tan (+ x eps)) (tan x)) 0.0) (fma (tan x) (/ (tan x) (- (- (tan x)) (tan (+ x eps)))) (* (tan (+ x eps)) (/ (tan (+ x eps)) (+ (tan x) (tan (+ x eps)))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 29,
    "avg_bits_err_input": 36.57062617300174,
    "avg_bits_err_output": 36.579443488906165,
    "avg_bits_err_improve": -0.00881731590442314,
    "time": 19733.607177734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (<= (- (sqrt (+ x 1.0)) (sqrt x)) 0.0) (log (- (- (exp (log (+ (expm1 (- (sqrt (+ 1.0 x)) (sqrt x))) 3.0))) 1.0) 1.0)) (if (!= (sqrt x) 0.0) (/ (- (- (* (sqrt x) (- (sqrt (+ x 1.0)) (sqrt x))) (* (sqrt x) (sqrt x))) (* (sqrt x) (- (sqrt x)))) (sqrt x)) (- (sqrt (+ x 1.0)) (sqrt x))))",
    "output_parens": 41,
    "avg_bits_err_input": 29.19445551519674,
    "avg_bits_err_output": 27.889662042483177,
    "avg_bits_err_improve": 1.3047934727135626,
    "time": 12559.255615234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.310897933782066,
    "avg_bits_err_output": 37.310897933782066,
    "avg_bits_err_improve": 0,
    "time": 17744.592041015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (- (if (!= (+ 1.0 (sqrt (+ 1.0 x))) 0.0) (/ 1.0 (/ 1.0 (+ 1.0 (sqrt (+ 1.0 x))))) (+ 1.0 (sqrt (+ 1.0 x)))) 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 20.190462941858282,
    "avg_bits_err_output": 20.186477508563055,
    "avg_bits_err_improve": 0.003985433295227381,
    "time": 12548.927734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (+ (fma (- (/ (atan N) (+ (atan (+ 1.0 N)) (atan N)))) (atan N) (* (atan N) (/ (atan N) (+ (atan (+ 1.0 N)) (atan N))))) (* (+ (atan (+ 1.0 N)) (atan N)) (/ (- (atan (+ 1.0 N)) (atan N)) (+ (atan (+ 1.0 N)) (atan N))))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 42,
    "avg_bits_err_input": 15.352790914590928,
    "avg_bits_err_output": 15.355574783321343,
    "avg_bits_err_improve": -0.002783868730414696,
    "time": 9772.33056640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (- -1.0 (+ (log (+ (exp a) (exp b))) 1.0)) 0.0) (/ (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 2.0)) (+ (log (+ (exp a) (exp b))) 2.0)) (log (+ (exp a) (exp b))))",
    "output_parens": 28,
    "avg_bits_err_input": 29.13578993921866,
    "avg_bits_err_output": 29.136707420469026,
    "avg_bits_err_improve": -0.0009174812503651708,
    "time": 38256.292724609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07544116562662259,
    "avg_bits_err_output": 0.08025488750216347,
    "avg_bits_err_improve": -0.004813721875540883,
    "time": 10850.9892578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.44636450593131,
    "avg_bits_err_output": 0.30952161719245797,
    "avg_bits_err_improve": 16.13684288873885,
    "time": 11218.023193359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ PI 180.0) angle))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.76230206679157,
    "avg_bits_err_output": 20.72380693969476,
    "avg_bits_err_improve": 0.0384951270968088,
    "time": 32230.164794921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (sin (* PI (/ angle 180.0))) (- (pow a 2.0) (pow b 2.0))) (* -2.0 (cos (* PI (/ angle 180.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.402692556196307,
    "avg_bits_err_output": 31.386637297931834,
    "avg_bits_err_improve": 0.016055258264472627,
    "time": 26951.991455078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 21.01613996667177,
    "avg_bits_err_output": 20.96936347953923,
    "avg_bits_err_improve": 0.04677648713254001,
    "time": 28629.110107421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (* (/ (- 1.0 m) v) m) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1709080828133113,
    "avg_bits_err_output": 0.2177220082014342,
    "avg_bits_err_improve": -0.0468139253881229,
    "time": 10366.1640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3192409679578293,
    "avg_bits_err_output": 0.31557999513477,
    "avg_bits_err_improve": 0.0036609728230593275,
    "time": 17687.607177734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* e (/ (* (sin v) 2.0) (- (- -2.0 (* (cos v) (+ e e))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.13709436093777044,
    "avg_bits_err_output": 0.13538684218813102,
    "avg_bits_err_improve": 0.001707518749639425,
    "time": 15707.404541015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos phi1) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.26532266119347,
    "avg_bits_err_output": 17.26266872835983,
    "avg_bits_err_improve": 0.0026539328336383505,
    "time": 32189.459716796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) 0.0) (/ 2.0 (/ 4.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (* 0.5 (if (!= (/ b a) 0.0) (/ (fma (/ b a) (/ (sqrt (fma c (* a -4.0) (* b b))) a) (- (* (/ b a) (/ b a)))) (/ b a)) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a))))",
    "output_parens": 40,
    "avg_bits_err_input": 52.29929976882252,
    "avg_bits_err_output": 51.21492500294323,
    "avg_bits_err_improve": 1.0843747658792893,
    "time": 25644.484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (fma (sqrt (fma b b (* c (* a -4.0)))) (sqrt (fma b b (* c (* a -4.0)))) (fma (- (sqrt (fma b b (* c (* a -4.0))))) (sqrt (fma b b (* c (* a -4.0)))) (* (+ b (sqrt (fma b b (* c (* a -4.0))))) (- b (sqrt (fma b b (* c (* a -4.0)))))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 52,
    "avg_bits_err_input": 28.574083879377984,
    "avg_bits_err_output": 28.072463254423024,
    "avg_bits_err_improve": 0.5016206249549597,
    "time": 33960.7978515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0)))))) 0.0) (/ (+ (fma (- (fabs b)) (fabs b) (* b b)) (+ (+ (* b (- b)) (fma (sqrt (if (!= (fma b (- b) (* c (* a 4.0))) 0.0) (/ 8.0 (/ 8.0 (fma c (* a -4.0) (* b b)))) (fma c (* a -4.0) (* b b)))) (sqrt (if (!= (fma b (- b) (* c (* a 4.0))) 0.0) (/ 8.0 (/ 8.0 (fma c (* a -4.0) (* b b)))) (fma c (* a -4.0) (* b b)))) (* b (- b)))) (* b b))) (- b (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0)))))))) (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0))))) b)) (* a 2.0))",
    "output_parens": 99,
    "avg_bits_err_input": 43.86897274401046,
    "avg_bits_err_output": 42.88255303218179,
    "avg_bits_err_improve": 0.9864197118286739,
    "time": 34060.139892578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* a (* c 4.0)) 0.0) (* (+ (* c (* a -4.0)) (* b b)) (* 4.0 (/ (* a c) (* a (* c 4.0))))) (+ (* c (* a -4.0)) (* b b))))) (* a 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 33.9597819943698,
    "avg_bits_err_output": 34.10462707029256,
    "avg_bits_err_improve": -0.14484507592275975,
    "time": 19768.153076171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (fma (cos (- lambda1 lambda2)) (cos phi2) (+ (cos phi1) 1.0)) 0.0) (/ (* (fma (cos (- lambda1 lambda2)) (cos phi2) (+ (cos phi1) 1.0)) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1))) (fma (cos (- lambda1 lambda2)) (cos phi2) (+ (cos phi1) 1.0))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.9338465601211272,
    "avg_bits_err_output": 0.9440703230543716,
    "avg_bits_err_improve": -0.01022376293324434,
    "time": 23867.2578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))) 0.0) (/ (- 1.0 (/ 16.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (+ 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (- 1.0 (/ 4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 60,
    "avg_bits_err_input": 28.86677195124757,
    "avg_bits_err_output": 28.828819224965873,
    "avg_bits_err_improve": 0.037952726281698546,
    "time": 23249.112060546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (- (exp x) (/ (exp (- x)) 2.0)) (/ (exp (- x)) 2.0)) (+ (exp x) (exp (- x))))",
    "output_parens": 14,
    "avg_bits_err_input": 58.21967768377833,
    "avg_bits_err_output": 58.220349881532044,
    "avg_bits_err_improve": -0.0006721977537154089,
    "time": 14740.0869140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.86675641053981,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 57.858756410539804,
    "time": 13350.07421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010865601562950722,
    "avg_bits_err_output": 0.010865601562950722,
    "avg_bits_err_improve": 0,
    "time": 2707.357177734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.50683755496477,
    "avg_bits_err_output": 32.50683755496477,
    "avg_bits_err_improve": 0,
    "time": 6295.774169921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 0.015823120312590144,
    "avg_bits_err_improve": 58.7190462872187,
    "time": 16892.61962890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.098125,
    "avg_bits_err_output": 0.09819812031259015,
    "avg_bits_err_improve": -7.312031259014418e-05,
    "time": 2686.2998046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh (tan t)) ew))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.130375,
    "avg_bits_err_output": 0.13119812031259012,
    "avg_bits_err_improve": -0.000823120312590131,
    "time": 28825.93310546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1260212406251803,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 23927.9404296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.78113974327733,
    "avg_bits_err_output": 3.76039455618086,
    "avg_bits_err_improve": 35.020745187096466,
    "time": 24348.333740234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.835913914949252,
    "avg_bits_err_output": 0.010323120312590145,
    "avg_bits_err_improve": 14.825590794636662,
    "time": 7334.572021484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (log (+ 1.0 (expm1 (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.1495530779968154,
    "avg_bits_err_output": 0.177774263654134,
    "avg_bits_err_improve": -0.028221185657318626,
    "time": 33748.7607421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (sqrt (fma b b (* a (* -3.0 c)))) (/ 0.3333333333333333 a)) 0.0) (- (/ (* (fma (sqrt (fma b b (* a (* -3.0 c)))) 0.3333333333333333 (/ b -3.0)) (* (sqrt (fma b b (* a (* -3.0 c)))) (/ 0.3333333333333333 a))) (* (sqrt (fma b b (* a (* -3.0 c)))) 0.3333333333333333)) 0.0) (/ (fma (sqrt (fma b b (* a (* -3.0 c)))) 0.3333333333333333 (/ b -3.0)) a))",
    "output_parens": 35,
    "avg_bits_err_input": 52.33902114744207,
    "avg_bits_err_output": 50.27828678555486,
    "avg_bits_err_improve": 2.0607343618872065,
    "time": 29217.2900390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (+ (/ (fma (- b) b (* b b)) (+ b (sqrt (fma c (* a -3.0) (* b b))))) (* (- (sqrt (fma b b (* -3.0 (* a c)))) b) (/ (+ b (sqrt (fma c (* a -3.0) (* b b)))) (+ b (sqrt (fma c (* a -3.0) (* b b))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 42,
    "avg_bits_err_input": 28.737962075875984,
    "avg_bits_err_output": 28.275468207805584,
    "avg_bits_err_improve": 0.4624938680703998,
    "time": 29076.53955078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* (* c a) -3.0))) (- b)) 0.0) (/ (+ (fma (- b) b (* b b)) (+ (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))) (fma (- (- (- b))) b (* b b)))) (- (sqrt (fma b b (* (* c a) -3.0))) (- b))) (- (sqrt (fma b b (* (* c a) -3.0))) b)) (* 3.0 a))",
    "output_parens": 43,
    "avg_bits_err_input": 43.860597649161285,
    "avg_bits_err_output": 42.77797989377065,
    "avg_bits_err_improve": 1.0826177553906362,
    "time": 27560.634521484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.005469977839034,
    "avg_bits_err_output": 34.005469977839034,
    "avg_bits_err_improve": 0,
    "time": 21528.704833984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (sin phi1) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.731879525442293,
    "avg_bits_err_output": 13.732564670297686,
    "avg_bits_err_improve": -0.0006851448553923944,
    "time": 30090.444580078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.29014617868307,
    "avg_bits_err_output": 0.5227213877362972,
    "avg_bits_err_improve": 28.767424790946773,
    "time": 19398.590087890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (/ x (+ x (+ x 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010823120312590145,
    "avg_bits_err_output": 0.028520879839797203,
    "avg_bits_err_improve": -0.017697759527207056,
    "time": 3229.378662109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- (/ 2.0 (/ (+ 1.0 x) (+ x -1.0))) 2.0) (if (!= (+ x (- 2.0 x)) 0.0) (/ (if (!= (* x x) 0.0) (/ (fma (* x x) (* x x) (* (- x 2.0) (* (- 2.0 x) (* x x)))) (* x x)) (fma x x (* (- 2.0 x) (- x 2.0)))) (+ x (- 2.0 x))) (+ x (+ x -2.0))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 14.899094940515976,
    "avg_bits_err_improve": -0.019187969016400075,
    "time": 21320.778076171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output_parens": 21,
    "avg_bits_err_input": 52.55267109565867,
    "avg_bits_err_output": 52.55267109565867,
    "avg_bits_err_improve": 0,
    "time": 49297.1015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 29.518849631088848,
    "avg_bits_err_output": 29.518840380069044,
    "avg_bits_err_improve": 9.251019804423777e-06,
    "time": 21845.77685546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ C (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (* (* F (- (pow B 2.0) (* C (* A 4.0)))) 2.0))) (- (* C (* A 4.0)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.65280475486105,
    "avg_bits_err_output": 52.359196648812365,
    "avg_bits_err_improve": 0.29360810604868703,
    "time": 33211.321044921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.675261129035539,
    "avg_bits_err_output": 15.675261129035539,
    "avg_bits_err_improve": 0,
    "time": 1947.55224609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 36.258130008360105,
    "avg_bits_err_output": 36.23534466451818,
    "avg_bits_err_improve": 0.022785343841924544,
    "time": 13462.1005859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9892859031316716,
    "avg_bits_err_output": 0.9769718046888524,
    "avg_bits_err_improve": 0.012314098442819277,
    "time": 6931.93115234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(* (exp a) (/ 1.0 (+ (exp a) (exp b))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.7728231203125902,
    "avg_bits_err_output": 0.7779906015629509,
    "avg_bits_err_improve": -0.005167481250360706,
    "time": 6069.943359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* a2 (/ (/ a1 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-293) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* a2 (/ (/ a1 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+307) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.033263149210494,
    "avg_bits_err_output": 2.694431746046325,
    "avg_bits_err_improve": 8.33883140316417,
    "time": 9180.337646484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5711422606473945,
    "avg_bits_err_output": 0.488,
    "avg_bits_err_improve": 0.0831422606473945,
    "time": 10666.155029296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -4e+16) (log (if (!= (- 2.0 (+ x (hypot 1.0 x))) 0.0) (/ (fma (+ x (+ (hypot 1.0 x) -1.0)) (+ x (+ (hypot 1.0 x) -1.0)) -1.0) (+ (+ x (hypot 1.0 x)) -2.0)) (+ x (hypot 1.0 x)))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 53.001803818880376,
    "avg_bits_err_output": 14.261392860484781,
    "avg_bits_err_improve": 38.74041095839559,
    "time": 19583.462158203125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (if (!= (+ (log a) (log b)) 0.0) (* (+ (log a) (+ (log a) (+ (log b) (log b)))) (/ (+ (log a) (log b)) (+ (log a) (+ (log a) (+ (log b) (log b)))))) (+ (log a) (log b))))",
    "output_parens": 28,
    "avg_bits_err_input": 5.71631120409847,
    "avg_bits_err_output": 5.774723095753044,
    "avg_bits_err_improve": -0.05841189165457461,
    "time": 13506.53173828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (- 1.0 x) (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01425,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 0,
    "time": 4463.8720703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1241.54443359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 13.234242980792,
    "avg_bits_err_output": 0.6793388601106028,
    "avg_bits_err_improve": 12.554904120681398,
    "time": 26217.5634765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (* x1 x1) (fma (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))))) (+ x1 x1)))",
    "output_parens": 47,
    "avg_bits_err_input": 0.5027885008178629,
    "avg_bits_err_output": 0.2850948660026329,
    "avg_bits_err_improve": 0.21769363481522996,
    "time": 63669.7939453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.37980176535948,
    "avg_bits_err_output": 1.429727649296328,
    "avg_bits_err_improve": 16.950074116063153,
    "time": 8387.988037109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2082830828133113,
    "avg_bits_err_output": 0.196511842188131,
    "avg_bits_err_improve": 0.011771240625180285,
    "time": 7315.114990234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2306.927978515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (+ (/ (/ PI (+ b a)) a) (- (/ PI (* (+ b a) b)))) (* (- b a) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 14.499340347252387,
    "avg_bits_err_output": 0.24777664894763243,
    "avg_bits_err_improve": 14.251563698304755,
    "time": 16661.954345703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.538187497987234,
    "avg_bits_err_output": 24.820016387163793,
    "avg_bits_err_improve": 4.718171110823441,
    "time": 18725.0322265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (+ (- 4.0 (/ (+ 4.0 (- 4.0 (/ 4.0 (+ t (/ t t))))) (+ t (/ t t)))) 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.042,
    "avg_bits_err_output": 0.011865601562950722,
    "avg_bits_err_improve": 0.03013439843704928,
    "time": 9552.57421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (/ (+ 2.0 (+ 2.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0)))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 0.05,
    "avg_bits_err_output": 0.07137464743511719,
    "avg_bits_err_improve": -0.02137464743511719,
    "time": 11836.584716796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (* (* 8.0 (/ t (+ t 1.0))) (/ t (+ t 1.0))) -2.0) (+ 4.0 (* (/ t (+ t 1.0)) (* 8.0 (/ t (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.025875,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 0.016,
    "time": 13748.739013671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3301.932861328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2424.10693359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2449.83740234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.825802818610342,
    "avg_bits_err_output": 0.242625,
    "avg_bits_err_improve": 7.583177818610341,
    "time": 21012.900146484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.313456544664289,
    "avg_bits_err_output": 7.313456544664289,
    "avg_bits_err_improve": 0,
    "time": 3683.831298828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.09118304571128,
    "avg_bits_err_output": 16.09118304571128,
    "avg_bits_err_improve": 0,
    "time": 6209.72119140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (if (!= (exp (* 10.0 (* x x))) 0.0) (/ 1.0 (/ 1.0 (expm1 (log1p (exp (* 10.0 (* x x))))))) (exp (* 10.0 (* x x)))))",
    "output_parens": 17,
    "avg_bits_err_input": 3.556954082220967,
    "avg_bits_err_output": 3.5564795267700093,
    "avg_bits_err_improve": 0.00047455545095775875,
    "time": 25814.103271484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 14.7099627821281,
    "avg_bits_err_improve": 0,
    "time": 11835.527099609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.3977754163026,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.3977754163026,
    "time": 4198.099609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.535438043916855,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 39.534563043916854,
    "time": 4281.81640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.251,
    "avg_bits_err_improve": 63.749,
    "time": 19407.356689453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325919191947,
    "avg_bits_err_output": 0.408625,
    "avg_bits_err_improve": 61.43463419191947,
    "time": 8053.740478515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(- (/ (/ (+ b (sqrt (+ (* b b) (* a (* c -4.0))))) -2.0) a) 0.0)",
    "output_parens": 9,
    "avg_bits_err_input": 33.66758794091285,
    "avg_bits_err_output": 33.6878259203981,
    "avg_bits_err_improve": -0.02023797948524475,
    "time": 23060.198974609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* a (* c 4.0)) 0.0) (* (+ (* c (* a -4.0)) (* b b)) (* 4.0 (/ (* a c) (* a (* c 4.0))))) (+ (* c (* a -4.0)) (* b b))))) (* a 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 33.9597819943698,
    "avg_bits_err_output": 34.10462707029256,
    "avg_bits_err_improve": -0.14484507592275975,
    "time": 23836.495849609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2203.75537109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.2457102326979,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 39.2354602326979,
    "time": 3950.17919921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- (- x) y) (* (- x y) -4.0)) (+ (* (+ y y) (+ y y)) (* (+ x x) (+ x x))))",
    "output_parens": 13,
    "avg_bits_err_input": 20.59203578829052,
    "avg_bits_err_output": 20.590425369116627,
    "avg_bits_err_improve": 0.0016104191738932627,
    "time": 11912.48779296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.645317901549117,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.645317901549117,
    "time": 8460.4580078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03775,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.036375,
    "time": 5719.0927734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019969360937770436,
    "avg_bits_err_output": 0.00975,
    "avg_bits_err_improve": 0.010219360937770436,
    "time": 5118.84130859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.014875,
    "avg_bits_err_improve": 0,
    "time": 2527.748779296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000125,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 0,
    "time": 1469.393310546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3994178578176384,
    "avg_bits_err_output": 0.242875,
    "avg_bits_err_improve": 0.15654285781763838,
    "time": 4713.0693359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (exp (log1p (- 1.0 (cos x)))) 0.0) (+ (/ (* (- 2.0 (cos x)) (- 1.0 (cos x))) (* (- 2.0 (cos x)) 2.0)) (if (!= (- (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0)) (/ -2.0 (/ 4.0 (- 2.0 (cos x))))) 0.0) (/ (if (!= (+ (/ 2.0 (/ (/ -8.0 (- (cos x) 2.0)) (- 2.0 (cos x)))) (/ (- 2.0 (cos x)) (+ (* (cos x) -4.0) 8.0))) 0.0) (/ (- (/ 2.0 (* (/ (/ -8.0 (- (cos x) 2.0)) (- 2.0 (cos x))) (/ (/ -4.0 (- 2.0 (cos x))) (- (cos x) 2.0)))) (* (- 2.0 (cos x)) (/ (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0)) (* -4.0 (fma 2.0 (cos x) -4.0))))) (+ (/ 2.0 (/ (/ -8.0 (- (cos x) 2.0)) (- 2.0 (cos x)))) (/ (- 2.0 (cos x)) (+ (* (cos x) -4.0) 8.0)))) (- (/ 2.0 (/ (/ -8.0 (- (cos x) 2.0)) (- 2.0 (cos x)))) (/ (- 2.0 (cos x)) (+ (* (cos x) -4.0) 8.0)))) (- (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0)) (/ -2.0 (/ 4.0 (- 2.0 (cos x)))))) (+ (/ 0.5 (/ 1.0 (- 2.0 (cos x)))) (/ (- 2.0 (cos x)) (fma 2.0 (cos x) -4.0))))) (- 1.0 (cos x)))",
    "output_parens": 123,
    "avg_bits_err_input": 30.245784507366725,
    "avg_bits_err_output": 30.252301917860308,
    "avg_bits_err_improve": -0.006517410493582787,
    "time": 24014.75732421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.74729623413098,
    "avg_bits_err_output": 24.74729623413098,
    "avg_bits_err_improve": 0,
    "time": 11689.30810546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (- (/ (- (sin x) x) (tan x)) -1.0) 0.0) (/ (- (- (/ (- (sin x) x) (tan x)) -1.0) (* (+ (/ (- x (sin x)) (tan x)) -1.0) (+ (/ (- x (sin x)) (tan x)) -1.0))) (- (/ (- (sin x) x) (tan x)) -1.0)) (/ (- x (sin x)) (tan x)))",
    "output_parens": 34,
    "avg_bits_err_input": 29.94598572055244,
    "avg_bits_err_output": 29.955472761251983,
    "avg_bits_err_improve": -0.009487040699543314,
    "time": 27149.88916015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007073120312590144,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.006698120312590144,
    "time": 2197.0732421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -4.9e+117) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i (+ i i)) (/ i n)) n) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 2.8e+80) (/ (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0)) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 63,
    "avg_bits_err_input": 47.892560485256006,
    "avg_bits_err_output": 44.9548301043284,
    "avg_bits_err_improve": 2.9377303809276043,
    "time": 26482.3388671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (- INFINITY)) (+ (* (/ d (fma d d (* c c))) b) (* c (/ a (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 1e+279) (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (+ (* (if (!= (/ d (fma d d (* c c))) 0.0) (/ (/ (* d d) (fma d d (* c c))) d) (/ d (fma d d (* c c)))) b) (* a (/ c (fma c c (* d d)))))))",
    "output_parens": 54,
    "avg_bits_err_input": 26.12211874181536,
    "avg_bits_err_output": 22.69368834802692,
    "avg_bits_err_improve": 3.428430393788439,
    "time": 14134.948486328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= d -8500000.0) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (+ (* d d) (* c c))))) (if (<= d 9.5e-47) (fma b (/ c (fma c c (* d d))) (/ (* a (- d)) (fma c c (* d d)))) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (+ (* d d) (* c c)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 26.308678419576303,
    "avg_bits_err_output": 22.7760210679187,
    "avg_bits_err_improve": 3.5326573516576047,
    "time": 11703.4560546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.034,
    "avg_bits_err_output": 0.034,
    "avg_bits_err_improve": 0,
    "time": 5569.8916015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.438470364147909,
    "avg_bits_err_output": 0.546339375927316,
    "avg_bits_err_improve": 12.892130988220593,
    "time": 24443.75537109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (if (!= (- ux (+ (- ux) (* ux ux))) 0.0) (* (fma (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- ux) (+ ux (- ux (* ux ux)))) (/ (+ ux (- ux (* ux ux))) (+ ux (- ux (* ux ux))))) (- 1.0 (fma (- 1.0 ux) (- 1.0 ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))))))",
    "output_parens": 39,
    "avg_bits_err_input": 13.469913441361573,
    "avg_bits_err_output": 0.33681769173741904,
    "avg_bits_err_improve": 13.133095749624154,
    "time": 25824.029052734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* maxCos maxCos) (* (* (- 1.0 ux) (- 1.0 ux)) (* ux ux))))) (* (sin (* PI (* uy 2.0))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.33065003407957066,
    "avg_bits_err_output": 0.31889821301815413,
    "avg_bits_err_improve": 0.011751821061416534,
    "time": 50930.87548828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20943728552988009,
    "avg_bits_err_output": 0.20943728552988009,
    "avg_bits_err_improve": 0,
    "time": 19382.549072265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (- (/ 0.0 (/ 1.0 (- 1.0 u1))) (/ (/ 1.0 (* (- 1.0 u1) (- 1.0 u1))) (- (/ 1.0 (- 1.0 u1))))) u1)) (sin (expm1 (log1p (* 6.28318530718 u2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.5440503140067406,
    "avg_bits_err_output": 0.585742951862606,
    "avg_bits_err_improve": -0.04169263785586541,
    "time": 25778.222900390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.33463633674053544,
    "avg_bits_err_output": 0.33463633674053544,
    "avg_bits_err_improve": 0,
    "time": 21149.466552734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (expm1 (log1p (/ PI s)))))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.3268509457247941,
    "avg_bits_err_output": 0.3295515097884661,
    "avg_bits_err_improve": -0.002700564063671973,
    "time": 48455.5556640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05719053371969949,
    "avg_bits_err_output": 0.05719053371969949,
    "avg_bits_err_improve": 0,
    "time": 6788.19140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.1363717012863607,
    "avg_bits_err_output": 0.11792112645600542,
    "avg_bits_err_improve": 0.018450574830355282,
    "time": 7565.938232421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (expm1 (log1p (* x PI)))) (expm1 (log1p (* x PI)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.6721000649712545,
    "avg_bits_err_output": 0.6966673807066,
    "avg_bits_err_improve": -0.02456731573534543,
    "time": 19153.225830078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (log1p (expm1 (exp (/ -2.0 v)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.1595977041511719,
    "avg_bits_err_output": 0.1648577528731995,
    "avg_bits_err_improve": -0.0052600487220276215,
    "time": 19846.849365234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.602624512973444,
    "avg_bits_err_output": 2.597886751420056,
    "avg_bits_err_improve": 0.004737761553388342,
    "time": 27511.8642578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (/ cosTheta_i (sinh (/ 1.0 v))) (* (/ cosTheta_O v) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) (+ v v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4680016482563398,
    "avg_bits_err_output": 0.39922842609668646,
    "avg_bits_err_improve": 0.06877322215965331,
    "time": 24868.126220703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (+ 0.6931 (log (/ 0.5 v))) 0.0) (/ (* (+ 0.6931 (log (/ 0.5 v))) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))) (+ 0.6931 (log (/ 0.5 v)))) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 30,
    "avg_bits_err_input": 0.13372623535774267,
    "avg_bits_err_output": 0.14002311032382025,
    "avg_bits_err_improve": -0.006296874966077587,
    "time": 30526.5185546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (- 1.0 (* alpha alpha)) (log (* alpha alpha))) (- PI)) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.47169524392017503,
    "avg_bits_err_output": 0.4723638753661346,
    "avg_bits_err_improve": -0.0006686314459595777,
    "time": 22250.90478515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(fma s (log (+ 1.0 (expm1 (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) 3.0)))) 0.0)",
    "output_parens": 8,
    "avg_bits_err_input": 1.313558536097618,
    "avg_bits_err_output": 1.2418475940186826,
    "avg_bits_err_improve": 0.07171094207893547,
    "time": 22581.698974609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (expm1 (log1p (+ (* (log (/ 1.0 (fma u -4.0 1.0))) (* s 4.0)) (* (* (log (log (+ 1.0 (expm1 (/ 1.0 (fma u -4.0 1.0)))))) s) -2.0)))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 12.496819115533375,
    "avg_bits_err_output": 12.10268376673301,
    "avg_bits_err_improve": 0.39413534880036494,
    "time": 22223.0634765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (* PI (* s (* r 6.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1393646669422509,
    "avg_bits_err_output": 0.14296786923395782,
    "avg_bits_err_improve": -0.003603202291706936,
    "time": 23567.919189453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8787843934670551,
    "avg_bits_err_output": 0.7347434780730501,
    "avg_bits_err_improve": 0.144040915394005,
    "time": 24742.15380859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7050612200225589,
    "avg_bits_err_output": 0.48864000076540287,
    "avg_bits_err_improve": 0.21642121925715602,
    "time": 17184.173583984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* 2.0 (* PI u2))) (- (+ 1.0 (sqrt (- (log (- 1.0 u1))))) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 13.64286270808231,
    "avg_bits_err_output": 13.680146649681078,
    "avg_bits_err_improve": -0.037283941598767356,
    "time": 23998.80078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(+ (log1p (expm1 (* (cos (* 2.0 (* PI u2))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)))) (cos (* 2.0 (* PI u2))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.68930644715885,
    "avg_bits_err_output": 13.653882967865993,
    "avg_bits_err_improve": 0.03542347929285761,
    "time": 24613.7568359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (- alpha) (* alpha (log1p (expm1 (log (- 1.0 u0))))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.121078724752802,
    "avg_bits_err_output": 14.120989457481421,
    "avg_bits_err_improve": 8.926727138103274e-05,
    "time": 20649.50830078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (if (!= (/ cos2phi (* alphax (+ alphax alphax))) 0.0) (* (/ cos2phi (/ (/ cos2phi (* alphax alphax)) 2.0)) (+ (/ cos2phi (* (+ alphax alphax) (* (+ alphax alphax) (* alphax alphax)))) (/ cos2phi (* (+ alphax alphax) (* (+ alphax alphax) (* alphax alphax)))))) (/ cos2phi (* alphax alphax))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 32,
    "avg_bits_err_input": 12.559770403455477,
    "avg_bits_err_output": 12.562119285091688,
    "avg_bits_err_improve": -0.00234888163621072,
    "time": 20993.076904296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (* PI l)) F) F))",
    "output_parens": 6,
    "avg_bits_err_input": 16.484532653509525,
    "avg_bits_err_output": 12.374160131594374,
    "avg_bits_err_improve": 4.110372521915151,
    "time": 19206.74169921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2216887218755409,
    "avg_bits_err_output": 0.15707312031259013,
    "avg_bits_err_improve": 0.06461560156295076,
    "time": 15452.181640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.64980104240478,
    "avg_bits_err_output": 10.510295020058447,
    "avg_bits_err_improve": 3.1395060223463336,
    "time": 21113.66064453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (/ (* PI f) 4.0)) (exp (* PI (/ f -4.0)))) (expm1 (log1p (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (/ PI -4.0))",
    "output_parens": 20,
    "avg_bits_err_input": 61.462011496647925,
    "avg_bits_err_output": 61.46698207676093,
    "avg_bits_err_improve": -0.004970580113003109,
    "time": 54810.2919921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.925394382291636,
    "avg_bits_err_output": 34.93641960592971,
    "avg_bits_err_improve": 7.988974776361928,
    "time": 22422.285400390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.6964799854752193,
    "avg_bits_err_output": 3.6964799854752193,
    "avg_bits_err_improve": 0,
    "time": 25058.347900390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0654600485173984,
    "avg_bits_err_output": 1.0731369282048084,
    "avg_bits_err_improve": -0.007676879687410043,
    "time": 9335.77392578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 10.159801384007425,
    "avg_bits_err_improve": 0,
    "time": 10568.310791015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 8e-317) (sqrt (* U (* 2.0 (* n (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* (/ l Om) l)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e+291) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* U (* 2.0 (* n (- t (+ (* (- U U*) (* n (pow (/ l Om) 2.0))) (* 2.0 (* (/ l Om) l))))))))))",
    "output_parens": 72,
    "avg_bits_err_input": 34.57310368756563,
    "avg_bits_err_output": 29.269057924770156,
    "avg_bits_err_improve": 5.304045762795472,
    "time": 35481.8505859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ 1.0 (* (/ (sin k) l) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 47.32513768766738,
    "avg_bits_err_output": 35.96475496231782,
    "avg_bits_err_improve": 11.36038272534956,
    "time": 41895.91796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) INFINITY) (/ 2.0 (* (/ (sin k) l) (* (pow t 3.0) (* (+ 2.0 (pow (/ k t) 2.0)) (/ (tan k) l))))) 0.0)",
    "output_parens": 27,
    "avg_bits_err_input": 32.56549354709639,
    "avg_bits_err_output": 21.512848275741508,
    "avg_bits_err_improve": 11.05264527135488,
    "time": 24827.45849609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* a2 (* a2 (cos th))) (* a1 (* a1 (cos th)))) (sqrt 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.4966031984601277,
    "avg_bits_err_output": 0.4371453031432103,
    "avg_bits_err_improve": 0.059457895316917364,
    "time": 23154.798095703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5202207130428028,
    "avg_bits_err_output": 0.4654383027088808,
    "avg_bits_err_improve": 0.054782410333922005,
    "time": 17046.74853515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.5399525058927,
    "avg_bits_err_output": 17.5399525058927,
    "avg_bits_err_improve": 0,
    "time": 25453.2568359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (fabs (- m n)) (+ (pow (- (/ (+ m n) 2.0) M) 2.0) l))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.777861285819132,
    "avg_bits_err_output": 14.777861285819132,
    "avg_bits_err_improve": 0,
    "time": 11613.066162109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.513615601562954,
    "avg_bits_err_output": 18.513615601562954,
    "avg_bits_err_improve": 0,
    "time": 32698.743408203125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) -2e+241) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M 2.0) d)) 2.0) h) l)))) (if (<= (/ h l) 1e-175) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M 2.0) d)) 2.0) h) l))))))",
    "output_parens": 33,
    "avg_bits_err_input": 13.833042091093368,
    "avg_bits_err_output": 10.316277691333077,
    "avg_bits_err_improve": 3.516764399760291,
    "time": 13706.347412109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1e+243) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) -2e-190) (if (!= (* (sqrt (/ A (* l V))) c0) 0.0) (/ 1.0 (/ 1.0 (* (sqrt (/ A (* l V))) c0))) (* (sqrt (/ A (* l V))) c0)) (if (<= (* V l) 2e-186) (* c0 (sqrt (+ (if (!= (/ (+ (/ A (+ V V)) (/ A V)) (+ l l)) 0.0) (/ 1.0 (/ 1.0 (/ (+ (/ A (+ V V)) (/ A V)) (+ l l)))) (/ (+ (/ A (+ V V)) (/ A V)) (+ l l))) (/ (/ A (+ l l)) (+ V V))))) (if (<= (* V l) 2e+164) (* c0 (sqrt (+ (/ (+ A (+ A A)) (* (* V (+ l l)) 2.0)) (/ A (* (* V (+ l l)) 2.0))))) (* c0 (sqrt (/ (/ A V) l)))))))",
    "output_parens": 78,
    "avg_bits_err_input": 19.087414540911038,
    "avg_bits_err_output": 14.964313665165081,
    "avg_bits_err_improve": 4.123100875745957,
    "time": 17601.89111328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= D -2.3e-57) (* (/ c0 (* 2.0 w)) (+ (* d (/ (* (/ (/ d w) h) c0) (* D D))) (sqrt (* (- (* d (/ (* (/ (/ d w) h) c0) (* D D))) M) (fma d (/ (* (/ (/ d w) h) c0) (* D D)) M))))) (if (<= D -1e-214) (* (fma d (* (/ d (* w h)) (/ (/ c0 D) D)) (sqrt (* (fma d (* (/ d (* w h)) (/ (/ c0 D) D)) (- M)) (fma d (* (/ d (* w h)) (/ (/ c0 D) D)) M)))) (/ c0 (* w 2.0))) (if (<= D 5e-172) (fma (sqrt (* (fma c0 (* d (/ (/ (/ d w) D) (* h D))) M) (fma (/ (/ (/ d w) D) (* h D)) (* c0 d) (- M)))) (/ c0 (+ w w)) (* (* (/ (/ (/ d w) D) (* h D)) (* c0 d)) (/ c0 (* w 2.0)))) (if (<= D 3.05e+60) (* (/ c0 (* 2.0 w)) (+ (* d (/ (* (/ (/ d w) h) c0) (* D D))) (sqrt (* (- (* d (/ (* (/ (/ d w) h) c0) (* D D))) M) (fma d (/ (* (/ (/ d w) h) c0) (* D D)) M))))) (if (<= D 1.3e+230) (* (/ c0 (* 2.0 w)) (fma (/ (* d c0) (* (* D D) (* w h))) d (sqrt (* (fma d (/ (* d c0) (* (* D D) (* w h))) M) (- (* d (/ (* d c0) (* (* D D) (* w h)))) M))))) (* (/ c0 (* 2.0 w)) (+ (* c0 (* (/ d (* D w)) (/ d (* D h)))) (sqrt (* (fma c0 (* (/ d (* D w)) (/ d (* D h))) M) (fma c0 (* (/ d (* D w)) (/ d (* D h))) (- M)))))))))))",
    "output_parens": 160,
    "avg_bits_err_input": 59.588639698190775,
    "avg_bits_err_output": 56.103640749828756,
    "avg_bits_err_improve": 3.484998948362019,
    "time": 47776.873046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= l -1.42e-21) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (* (pow (/ d l) 0.5) (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l))) (* (pow (/ d h) 0.5) h))) (if (<= l 6.1e-37) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (pow (* D (/ M (+ d d))) 2.0) (* (pow (/ d l) 0.5) (* h (pow (/ d h) 0.5)))) (+ l l))) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* h (* (pow (/ d l) 0.5) (* (pow (/ d h) 0.5) (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l))))))))",
    "output_parens": 61,
    "avg_bits_err_input": 25.877465678062265,
    "avg_bits_err_output": 24.833859787597824,
    "avg_bits_err_improve": 1.0436058904644412,
    "time": 40826.04150390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (- (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (- 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) -2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 15.425813022918906,
    "avg_bits_err_output": 14.96536887779824,
    "avg_bits_err_improve": 0.46044414512066645,
    "time": 15117.626953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9855943609377705,
    "avg_bits_err_output": 0.01214624062518029,
    "avg_bits_err_improve": 0.9734481203125902,
    "time": 2625.84765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.43574238835900414,
    "avg_bits_err_output": 0.11474563777807893,
    "avg_bits_err_improve": 0.3209967505809252,
    "time": 14892.064697265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010344360937770435,
    "avg_bits_err_output": 0.009646240625180288,
    "avg_bits_err_improve": 0.0006981203125901465,
    "time": 3965.50244140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5108302076528658,
    "avg_bits_err_output": 0.5108302076528658,
    "avg_bits_err_improve": 0,
    "time": 12550.09912109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* a (+ (/ (pow k m) (* (fma k (+ k 10.0) 1.0) 4.0)) (/ (+ (pow k m) (+ (pow k m) (pow k m))) (* (* (fma k (+ k 10.0) 1.0) 2.0) 2.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 2.2294409504701145,
    "avg_bits_err_output": 2.2260168080336693,
    "avg_bits_err_improve": 0.0034241424364451767,
    "time": 17323.318115234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)) -1.0)) (/ NaChar (+ 1.0 (exp (- (- (/ (+ EAccept (- (+ Vef Ev) mu)) KbT) -1.0) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.025436822098208918,
    "avg_bits_err_output": 0.025113701785618774,
    "avg_bits_err_improve": 0.0003231203125901444,
    "time": 9138.609619140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* b (* b 4.0))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18291973225554356,
    "avg_bits_err_output": 0.18259661194295337,
    "avg_bits_err_improve": 0.00032312031259018603,
    "time": 15038.945556640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1823065744436745,
    "avg_bits_err_output": 0.1823065744436745,
    "avg_bits_err_improve": 0,
    "time": 4167.51611328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19048803207133594,
    "avg_bits_err_output": 0.19048803207133594,
    "avg_bits_err_improve": 0,
    "time": 3858.677490234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (log1p (expm1 (/ (+ x (+ x x)) (* 4.0 (sqrt (fma 4.0 (* p p) (* x x)))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 13.609559969502971,
    "avg_bits_err_output": 13.752869287759507,
    "avg_bits_err_improve": -0.14330931825653614,
    "time": 14436.869873046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(expm1 (log1p (sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 40.77464088323663,
    "avg_bits_err_output": 0.06458111332859166,
    "avg_bits_err_improve": 40.710059769908035,
    "time": 11154.59814453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(if (!= (/ x (- (tan x) x)) 0.0) (/ (* (/ x (- (tan x) x)) (+ (/ x (- (tan x) x)) (+ (/ (- (sin x) x) (- (tan x) x)) (/ x (- x (tan x)))))) (/ x (- (tan x) x))) (/ (- x (sin x)) (- x (tan x))))",
    "output_parens": 31,
    "avg_bits_err_input": 31.428593048015863,
    "avg_bits_err_output": 31.41062998746319,
    "avg_bits_err_improve": 0.017963060552673937,
    "time": 26422.804931640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.058381366922966,
    "avg_bits_err_output": 34.058381366922966,
    "avg_bits_err_improve": 0,
    "time": 14558.0595703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.03008086100492,
    "avg_bits_err_output": 34.03008086100492,
    "avg_bits_err_improve": 0,
    "time": 16005.565673828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (* (/ 2.0 x) (/ (- 1.0 (cos x)) (* x (/ 2.0 x)))) x)",
    "output_parens": 8,
    "avg_bits_err_input": 30.90666563524404,
    "avg_bits_err_output": 30.14952663302026,
    "avg_bits_err_improve": 0.7571390022237807,
    "time": 18275.723388671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (log (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) 0.0) (/ 1.0 (/ 1.0 (log (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))))) (log (exp (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))))",
    "output_parens": 28,
    "avg_bits_err_input": 32.706754976689055,
    "avg_bits_err_output": 32.811960223452644,
    "avg_bits_err_improve": -0.10520524676358889,
    "time": 19162.376953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (fma (log1p N) (/ (log1p N) (+ (log1p N) (log N))) (* (- (log N)) (/ (log N) (+ (log1p N) (log N))))) (- (log1p N) (log N)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.18356159511976,
    "avg_bits_err_output": 29.196054321405555,
    "avg_bits_err_improve": -0.012492726285795897,
    "time": 13433.142333984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (+ (/ x (+ x 1.0)) -1.0) x)",
    "output_parens": 4,
    "avg_bits_err_input": 14.669926653435628,
    "avg_bits_err_output": 14.668779477536821,
    "avg_bits_err_improve": 0.0011471758988061964,
    "time": 15529.3427734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (- (cos x)) (+ (if (!= (cos (+ x eps)) 0.0) (/ (* (+ -1.0 (cos (+ x eps))) (cos (+ x eps))) (cos (+ x eps))) (+ -1.0 (cos (+ x eps)))) 1.0))",
    "output_parens": 20,
    "avg_bits_err_input": 39.62885796385204,
    "avg_bits_err_output": 39.642234111352224,
    "avg_bits_err_improve": -0.0133761475001819,
    "time": 16857.189453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (cbrt (+ x 1.0)) 0.0) (- (/ (- (* (cbrt (+ x 1.0)) -2.0) (/ (* (cbrt (+ x 1.0)) (cbrt x)) (/ (cbrt (+ x 1.0)) -2.0))) -2.0) (/ 0.0 (cbrt (+ x 1.0)))) (- (cbrt (+ x 1.0)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 29.672128719980382,
    "avg_bits_err_output": 29.685498822742435,
    "avg_bits_err_improve": -0.013370102762053193,
    "time": 14731.72119140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.002686708335755,
    "avg_bits_err_output": 30.002686708335755,
    "avg_bits_err_improve": 0,
    "time": 20386.085693359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(+ (/ (sqrt (if (!= (- (* b b) (* a (* c -4.0))) 0.0) (fma b (* b (* b (/ b (fma b b (* a (* c 4.0)))))) (* (* 16.0 (/ (* a c) (fma b b (* a (* c 4.0))))) (* c (- a)))) (fma a (* c -4.0) (* b b)))) (* a 2.0)) (/ b (* a -2.0)))",
    "output_parens": 31,
    "avg_bits_err_input": 34.234673131877436,
    "avg_bits_err_output": 33.41011998443883,
    "avg_bits_err_improve": 0.824553147438607,
    "time": 23266.69140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (sqrt (fma a (* c -4.0) (* b b))) b) (* a -2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 33.710277482896295,
    "avg_bits_err_output": 33.722165164792145,
    "avg_bits_err_improve": -0.011887681895849767,
    "time": 23606.15087890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (!= (/ (+ 1.0 (log (- 1.0 x))) (log1p x)) 0.0) (/ (/ (- (* (+ 1.0 (log (- 1.0 x))) (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (log1p x)) (* (/ 1.0 (log1p x)) (+ 1.0 (log (- 1.0 x))))) (/ (log (- 1.0 x)) (log1p x)))",
    "output_parens": 35,
    "avg_bits_err_input": 61.368384163634296,
    "avg_bits_err_output": 59.13884388869203,
    "avg_bits_err_improve": 2.2295402749422664,
    "time": 24907,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (+ (+ (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))) 2.0) -2.0)) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 22,
    "avg_bits_err_input": 63.004861545587985,
    "avg_bits_err_output": 44.22279105056104,
    "avg_bits_err_improve": 18.782070495026943,
    "time": 16017.623046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (if (!= (/ 1.0 (- -1.0 eps)) 0.0) (/ (- (/ (/ eps (- eps -1.0)) (- eps -1.0)) (/ 1.0 (* (- -1.0 eps) (- -1.0 eps)))) (/ 1.0 (- -1.0 eps))) (/ (- 1.0 eps) (- eps -1.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 58.55311717107745,
    "avg_bits_err_output": 58.57017800189994,
    "avg_bits_err_improve": -0.017060830822487105,
    "time": 16089.708984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (if (!= (+ 1.0 (/ 1.0 (/ x (tan x)))) 0.0) (/ (- 1.0 (/ 1.0 (* (/ x (tan x)) (/ x (tan x))))) (+ -1.0 (/ -1.0 (/ x (tan x))))) (+ -1.0 (/ 1.0 (/ x (tan x))))) (* x (/ 1.0 (/ x (tan x)))))",
    "output_parens": 27,
    "avg_bits_err_input": 59.86659524500726,
    "avg_bits_err_output": 59.84893609142943,
    "avg_bits_err_improve": 0.017659153577831432,
    "time": 28896.796630859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ a b))) (expm1 (* eps a))) (/ eps (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.52131561508944,
    "avg_bits_err_output": 29.255656039636563,
    "avg_bits_err_improve": 31.26565957545288,
    "time": 26124.3466796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.146003904474156,
    "avg_bits_err_output": 0.3975943609377705,
    "avg_bits_err_improve": 40.74840954353638,
    "time": 6422.111328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.65758867147359,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 58.65721367147359,
    "time": 3149.586669921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.113551741286233,
    "avg_bits_err_output": 0.01916850310022949,
    "avg_bits_err_improve": 29.094383238186005,
    "time": 5166.2294921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.460704682000475,
    "avg_bits_err_output": 28.595772139196423,
    "avg_bits_err_improve": 0.864932542804052,
    "time": 18470.824951171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(fma (/ 2.0 (+ 1.0 x)) (- 0.5 (/ (/ 2.0 x) (/ 2.0 (+ 1.0 x)))) (/ 1.0 (+ x -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 9.633505261051234,
    "avg_bits_err_output": 9.627404210498577,
    "avg_bits_err_improve": 0.006101050552656417,
    "time": 25604.2685546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.7534910911402,
    "avg_bits_err_output": 36.7534910911402,
    "avg_bits_err_improve": 0,
    "time": 15742.794189453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (if (!= (sqrt (+ x 1.0)) 0.0) (* (sqrt (+ x 1.0)) (/ (+ (sqrt x) (- 1.0 (sqrt (+ x 1.0)))) (sqrt (+ x 1.0)))) (+ (sqrt x) (- 1.0 (sqrt (+ x 1.0))))))",
    "output_parens": 21,
    "avg_bits_err_input": 29.591864212488453,
    "avg_bits_err_output": 28.87125973712212,
    "avg_bits_err_improve": 0.7206044753663328,
    "time": 9243.03515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (+ (sin (+ x eps)) (expm1 (log1p (* (sin x) (/ (- (sin (+ x eps))) (sin (+ x eps))))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 21,
    "avg_bits_err_input": 37.01132265054853,
    "avg_bits_err_output": 37.031879417874165,
    "avg_bits_err_improve": -0.020556767325636827,
    "time": 16398.659912109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (if (!= 0.5 0.0) (+ 0.5 (/ (+ 0.25 (/ 1.0 (/ (* (sqrt (+ 1.0 x)) -2.0) (sqrt x)))) 0.5)) (+ 1.0 (/ (/ 4.0 (sqrt (+ 1.0 x))) (/ -4.0 (sqrt x))))) (sqrt x))",
    "output_parens": 20,
    "avg_bits_err_input": 20.256004051314022,
    "avg_bits_err_output": 20.255099727308362,
    "avg_bits_err_improve": 0.0009043240056598734,
    "time": 13374.215087890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.178066987185467,
    "avg_bits_err_output": 14.178066987185467,
    "avg_bits_err_improve": 0,
    "time": 4651.78955078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.38078377963852,
    "avg_bits_err_output": 29.38078377963852,
    "avg_bits_err_improve": 0,
    "time": 33092.20068359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07448514209423482,
    "avg_bits_err_output": 0.07448514209423482,
    "avg_bits_err_improve": 0,
    "time": 18524.537109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(/ (* b (- a)) (/ (/ 1.0 b) a))",
    "output_parens": 5,
    "avg_bits_err_input": 16.067174388564737,
    "avg_bits_err_output": 0.26683882381930746,
    "avg_bits_err_improve": 15.80033556474543,
    "time": 11516.594970703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (if (!= (* PI (/ angle 360.0)) 0.0) (/ 1.0 (/ (/ 1.0 (/ angle 180.0)) PI)) (* PI (/ angle 180.0))))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.417983566486676,
    "avg_bits_err_output": 20.471959594034583,
    "avg_bits_err_improve": -0.053976027547907535,
    "time": 25709.98046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* (- (pow a 2.0) (pow b 2.0)) -2.0) (sin (* PI (/ angle 180.0)))) (cos (/ (* PI angle) 180.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 31.15099973059393,
    "avg_bits_err_output": 31.207531256630986,
    "avg_bits_err_improve": -0.05653152603705536,
    "time": 25795.646484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* (/ angle 180.0) PI) 0.0) (/ (/ (* angle 360.0) (/ 180.0 PI)) 360.0) (* (/ angle 180.0) PI)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.207910606075902,
    "avg_bits_err_output": 20.290577074505233,
    "avg_bits_err_improve": -0.08266646842933056,
    "time": 32631.678955078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17090158869586775,
    "avg_bits_err_output": 0.17131034640495865,
    "avg_bits_err_improve": -0.0004087577090909067,
    "time": 16246.5849609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3234814492662428,
    "avg_bits_err_output": 0.3143218244774213,
    "avg_bits_err_improve": 0.009159624788821485,
    "time": 19344.53759765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (sin v) (* (/ 2.0 (fma (cos v) (+ e e) 2.0)) e))",
    "output_parens": 7,
    "avg_bits_err_input": 0.13239624062518027,
    "avg_bits_err_output": 0.1354293234384916,
    "avg_bits_err_improve": -0.0030330828133113275,
    "time": 18354.730712890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))) (log1p (expm1 (* (sin phi1) (sin phi2)))))) R)",
    "output_parens": 13,
    "avg_bits_err_input": 17.053078116884766,
    "avg_bits_err_output": 17.059024836891773,
    "avg_bits_err_improve": -0.0059467200070066895,
    "time": 32214.105224609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b 1.0) 0.0) (/ (+ (- (* (sqrt (fma c (* a -4.0) (* b b))) (- b -1.0)) (* b b)) (- b)) (+ b 1.0)) (- (sqrt (fma b b (* (* a c) -4.0))) b)) (* a 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 52.41960666705849,
    "avg_bits_err_output": 50.50539182707071,
    "avg_bits_err_improve": 1.9142148399877783,
    "time": 24465.026611328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (fma (sqrt (fma -4.0 (* a c) (* b b))) (sqrt (fma -4.0 (* a c) (* b b))) (- (* b b))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 28.521127677284223,
    "avg_bits_err_output": 27.914677318183468,
    "avg_bits_err_improve": 0.6064503591007551,
    "time": 31902.90087890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (fma b b (* (sqrt (fma b b (* c (* a -4.0)))) (- b))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (/ (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 4.0))",
    "output_parens": 27,
    "avg_bits_err_input": 43.933839051325805,
    "avg_bits_err_output": 42.71556875257382,
    "avg_bits_err_improve": 1.2182702987519818,
    "time": 25676.50634765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.23904482868608,
    "avg_bits_err_output": 34.23904482868608,
    "avg_bits_err_improve": 0,
    "time": 22227.300048828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (* (cos (- lambda1 lambda2)) (cos phi2)) 0.0) (/ (fma (cos (- lambda1 lambda2)) (* (cos phi2) (cos phi1)) (* (cos (- lambda1 lambda2)) (* (cos (- lambda1 lambda2)) (* (cos phi2) (cos phi2))))) (* (cos (- lambda1 lambda2)) (cos phi2))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 37,
    "avg_bits_err_input": 0.9072351064400549,
    "avg_bits_err_output": 0.9317576560048362,
    "avg_bits_err_improve": -0.024522549564781282,
    "time": 25344.7802734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (+ 1.0 (expm1 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.07634473132597,
    "avg_bits_err_output": 29.08333279235264,
    "avg_bits_err_improve": -0.0069880610266679355,
    "time": 20603.82666015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(fma (/ (exp x) (+ (exp (- x)) (exp x))) (/ (exp x) (* (+ (exp (- x)) (exp x)) 2.0)) (fma (/ (exp x) (+ (exp (- x)) (exp x))) (/ (exp x) (* (+ (exp (- x)) (exp x)) 2.0)) (* (/ (exp (- x)) (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (- (exp (- x))))))",
    "output_parens": 44,
    "avg_bits_err_input": 58.071940921935386,
    "avg_bits_err_output": 58.10534786349209,
    "avg_bits_err_improve": -0.03340694155670576,
    "time": 19290.943115234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (if (!= (expm1 x) 0.0) (* (- (expm1 x) (expm1 (- x))) (/ (expm1 x) (expm1 x))) (- (exp x) (exp (- x)))) 2.0)",
    "output_parens": 16,
    "avg_bits_err_input": 57.99240368509231,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 57.98440368509231,
    "time": 14744.57861328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.00789624062518029,
    "avg_bits_err_output": 0.00789624062518029,
    "avg_bits_err_improve": 0,
    "time": 3136.515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.369375,
    "avg_bits_err_output": 32.369375,
    "avg_bits_err_improve": 0,
    "time": 5005.494873046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.54309489220731,
    "avg_bits_err_output": 0.016094360937770436,
    "avg_bits_err_improve": 58.527000531269536,
    "time": 13418.86181640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026573120312590147,
    "avg_bits_err_output": 0.026573120312590147,
    "avg_bits_err_improve": 0,
    "time": 3227.057373046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12382312031259014,
    "avg_bits_err_output": 0.12382312031259014,
    "avg_bits_err_improve": 0,
    "time": 29183.346435546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1261462406251803,
    "avg_bits_err_improve": 0,
    "time": 24639.5634765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.08669208283665,
    "avg_bits_err_output": 3.6927638902791835,
    "avg_bits_err_improve": 35.39392819255747,
    "time": 22214.214111328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.449749711339619,
    "avg_bits_err_output": 0.013247159990437492,
    "avg_bits_err_improve": 14.436502551349182,
    "time": 7286.471435546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (if (!= (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))) 0.0) (/ 1.0 (/ (/ 1.0 (sin phi1)) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 0.1635200668372493,
    "avg_bits_err_output": 0.1683987586172905,
    "avg_bits_err_improve": -0.004878691780041217,
    "time": 35362.953857421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (- (/ (sqrt (- (* b b) (* (* a c) 3.0))) (* a 3.0)) (/ b (* a -3.0))) 0.0) (/ (fma (/ (sqrt (- (* b b) (* (* a c) 3.0))) (* a 3.0)) (/ (sqrt (- (* b b) (* (* a c) 3.0))) (* a 3.0)) (- (* (/ b (* a -3.0)) (/ b (* a -3.0))))) (- (/ (sqrt (- (* b b) (* (* a c) 3.0))) (* a 3.0)) (/ b (* a -3.0)))) (/ (- (sqrt (- (* b b) (* (* a c) 3.0))) b) (* a 3.0)))",
    "output_parens": 52,
    "avg_bits_err_input": 52.4813404162015,
    "avg_bits_err_output": 51.52685401377365,
    "avg_bits_err_improve": 0.9544864024278468,
    "time": 28999.980712890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 32,
    "avg_bits_err_input": 28.675928576812307,
    "avg_bits_err_output": 28.04521479975105,
    "avg_bits_err_improve": 0.6307137770612563,
    "time": 30666.18505859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (- b) b (* b b))) 0.0) (/ (- (fma (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (- (* b (* b (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))))))) (* (fma (- b) b (* b b)) (fma (- b) b (* b b)))) (- (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (- b) b (* b b)))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 109,
    "avg_bits_err_input": 44.010822380376474,
    "avg_bits_err_output": 42.938967073817324,
    "avg_bits_err_improve": 1.0718553065591507,
    "time": 66345.95825195312,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.27727371167057,
    "avg_bits_err_output": 34.27727371167057,
    "avg_bits_err_improve": 0,
    "time": 19192.943603515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (if (!= (* (sin (- lambda1 lambda2)) (cos phi2)) 0.0) (* (* (sin (- lambda1 lambda2)) (* (cos phi2) (cos phi2))) (/ (sin (- lambda1 lambda2)) (* (sin (- lambda1 lambda2)) (cos phi2)))) (* (sin (- lambda1 lambda2)) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 35,
    "avg_bits_err_input": 13.235009709166363,
    "avg_bits_err_output": 13.258597722862339,
    "avg_bits_err_improve": -0.023588013695976073,
    "time": 34446.650634765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (+ 1.0 x)) (- (+ x -1.0) (* x (/ x (+ 1.0 x))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.474627970452524,
    "avg_bits_err_output": 0.531199891393961,
    "avg_bits_err_improve": 28.943428079058563,
    "time": 16858.293701171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (- (/ x (+ x (+ x 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.010375,
    "avg_bits_err_output": 0.03602066434202206,
    "avg_bits_err_improve": -0.025645664342022055,
    "time": 2193.06298828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(* -2.0 (/ (- (/ 1.0 (- -1.0 x)) (+ (/ x (- -1.0 x)) 1.0)) (- (- (+ x x) 2.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 14.716908677052219,
    "avg_bits_err_output": 12.781538527402452,
    "avg_bits_err_improve": 1.935370149649767,
    "time": 20287.94384765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- C (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A)) (- (+ (* (pow B 2.0) (* F -2.0)) (* F (* -2.0 (* C (* A -4.0)))))))) (- (- (pow B 2.0) (* A (* 4.0 C)))))",
    "output_parens": 24,
    "avg_bits_err_input": 52.34570415851834,
    "avg_bits_err_output": 52.07585400794074,
    "avg_bits_err_improve": 0.26985015057759654,
    "time": 37306.74462890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.768099971483018,
    "avg_bits_err_output": 29.768099971483018,
    "avg_bits_err_improve": 0,
    "time": 25574.88916015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(- (/ (sqrt (* (* (+ (pow B 2.0) (* (* A C) -4.0)) F) (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (+ (pow B 2.0) (* (* A C) -4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.39194310070474,
    "avg_bits_err_output": 52.08410590118529,
    "avg_bits_err_improve": 0.3078371995194473,
    "time": 37569.927490234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.164742181436335,
    "avg_bits_err_output": 16.164742181436335,
    "avg_bits_err_improve": 0,
    "time": 2161.127197265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (+ g (sqrt (fma h (- h) (* g g)))) 0.0) (* (+ g (sqrt (fma h (- h) (* g g)))) (/ (- (sqrt (- (* g g) (* h h))) g) (+ g (sqrt (- (* g g) (* h h)))))) (- (sqrt (fma h (- h) (* g g))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 35.7464310882645,
    "avg_bits_err_output": 35.731330862470635,
    "avg_bits_err_improve": 0.015100225793865718,
    "time": 14693.211669921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9913639109464255,
    "avg_bits_err_output": 0.974252443751082,
    "avg_bits_err_improve": 0.01711146719534351,
    "time": 7284.935302734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (+ (+ (exp a) 1.0) -1.0) (+ (exp a) (exp b)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.667125,
    "avg_bits_err_output": 0.7774866904772038,
    "avg_bits_err_improve": -0.11036169047720379,
    "time": 8285.808837890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-295) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+257) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.423395897667953,
    "avg_bits_err_output": 2.5105537224188748,
    "avg_bits_err_improve": 8.912842175249079,
    "time": 9101.175048828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5129727632595006,
    "avg_bits_err_output": 0.4325,
    "avg_bits_err_improve": 0.08047276325950059,
    "time": 10847.359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- (hypot 1.0 x) x) 0.0) (/ (+ (* (hypot 1.0 x) (- x (hypot 1.0 x))) (* x (- x (hypot 1.0 x)))) (- x (hypot 1.0 x))) (+ x (hypot 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 52.89206785441452,
    "avg_bits_err_output": 45.12025899280964,
    "avg_bits_err_improve": 7.771808861604882,
    "time": 18740.455810546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.651442741400846,
    "avg_bits_err_output": 5.650000246529884,
    "avg_bits_err_improve": 0.00144249487096193,
    "time": 17739.730224609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- x (- 2.0 x)) (- -2.0 (+ x x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.017448120312590146,
    "avg_bits_err_improve": -0.004823120312590145,
    "time": 3523.906494140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1263.767578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (- (+ (/ (/ -3.0 r) (* r -2.0)) (/ (/ 1.0 (+ r r)) r)) 0.0)) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 19,
    "avg_bits_err_input": 12.357390301486214,
    "avg_bits_err_output": 0.5230104230353576,
    "avg_bits_err_improve": 11.834379878450857,
    "time": 22962.059814453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (* x1 x1) (fma (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))))) (+ x1 x1)))",
    "output_parens": 47,
    "avg_bits_err_input": 0.5166551153454957,
    "avg_bits_err_output": 0.29027447965027553,
    "avg_bits_err_improve": 0.22638063569522016,
    "time": 93757.80297851562,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.23924039327486,
    "avg_bits_err_output": 1.2200588557399485,
    "avg_bits_err_improve": 17.01918153753491,
    "time": 7824.79150390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.21791748125036056,
    "avg_bits_err_output": 0.18373120312590144,
    "avg_bits_err_improve": 0.034186278124459124,
    "time": 7484.491455078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026652410118609203,
    "avg_bits_err_output": 0.0026652410118609203,
    "avg_bits_err_improve": 0,
    "time": 2387.056396484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(+ (/ (/ (/ PI (+ b a)) a) (* (- b a) 2.0)) (* (/ PI (+ b a)) (/ -0.5 (* b (- b a)))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.487350327184277,
    "avg_bits_err_output": 0.2545359031316704,
    "avg_bits_err_improve": 14.232814424052608,
    "time": 15956.5107421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.288659464539627,
    "avg_bits_err_output": 24.61220133334815,
    "avg_bits_err_improve": 4.6764581311914775,
    "time": 21758.388671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (- 2.0 (/ (/ 2.0 t) (+ 2.0 (/ 2.0 t)))) (- (/ (/ 2.0 t) (+ 2.0 (/ 2.0 t)))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.020375,
    "avg_bits_err_output": 0.021375,
    "avg_bits_err_improve": -0.0010000000000000009,
    "time": 7202.96240234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (/ (/ (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))) (+ (/ t t) t)) (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.025625,
    "avg_bits_err_output": 0.08163684218813101,
    "avg_bits_err_improve": -0.05601184218813102,
    "time": 14938.73486328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (* (* (/ t (+ t 1.0)) 4.0) (/ t (+ t 1.0))) -1.0) (+ 2.0 (/ (* t (* (/ t (+ t 1.0)) 4.0)) (+ t 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.035375,
    "avg_bits_err_output": 0.06278167301339763,
    "avg_bits_err_improve": -0.02740667301339763,
    "time": 8225.2060546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3538.0048828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2758.798095703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2601.93798828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.80911877941945,
    "avg_bits_err_output": 0.248875,
    "avg_bits_err_improve": 7.56024377941945,
    "time": 21269.3564453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.568363101246445,
    "avg_bits_err_output": 7.568363101246445,
    "avg_bits_err_improve": 0,
    "time": 3708.8623046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (pow (+ x eps) 2.0) 0.0) (* (pow (+ x eps) 2.0) (log (+ 1.0 (- (+ (expm1 (- (exp (log1p (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) (pow (+ x eps) 2.0)))) 1.0)) -1.0) -1.0)))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 16.151271773531636,
    "avg_bits_err_output": 16.219619532743565,
    "avg_bits_err_improve": -0.06834775921192815,
    "time": 18151.0927734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (* (/ 1.0 (/ 1.0 (* (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (- (/ 1.0 (* (/ 1.0 (cos x)) (cos x))) (* (- 1.0 (* (cos x) (cos x))) (/ (* (cos x) (cos x)) (* (cos x) (cos x))))))))) (/ 1.0 (* (if (!= (+ 1.0 (exp (log1p (exp (* 10.0 (* x x)))))) 0.0) (/ (+ (* (exp (log1p (exp (* 10.0 (* x x))))) (exp (log1p (exp (* 10.0 (* x x)))))) -1.0) (+ 1.0 (exp (log1p (exp (* 10.0 (* x x))))))) (exp (* 10.0 (* x x)))) (cos x)))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 74,
    "avg_bits_err_input": 3.5337284328666234,
    "avg_bits_err_output": 3.5590741262207444,
    "avg_bits_err_improve": -0.025345693354120957,
    "time": 29969.3369140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5.0) (if (!= (* (/ (- -2.0 (* x (+ x x))) (* (fma x x 1.0) -2.0)) (/ x (fma x x 1.0))) 0.0) (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) (/ x (fma x x 1.0))) (if (<= x 5e-50) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (- -2.0 (* x (+ x x))) (* (fma x x 1.0) -2.0)) (/ x (fma x x 1.0))) 0.0) (* (/ x (+ x (/ 1.0 x))) (/ 1.0 x)) (/ x (fma x x 1.0)))))",
    "output_parens": 43,
    "avg_bits_err_input": 14.775483775594797,
    "avg_bits_err_output": 0.013073120312590145,
    "avg_bits_err_improve": 14.762410655282206,
    "time": 6781.561767578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.41319217748289,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.41319217748289,
    "time": 4660.263427734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.72486944223623,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 38.723869442236236,
    "time": 4444.634521484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.25725,
    "avg_bits_err_improve": 63.74275,
    "time": 27183.914794921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843250776468324,
    "avg_bits_err_output": 0.392125,
    "avg_bits_err_improve": 61.451125776468324,
    "time": 7058.754150390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (sqrt (fma a (* c -4.0) (* b b))) b) (* a -2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 33.710277482896295,
    "avg_bits_err_output": 33.722165164792145,
    "avg_bits_err_improve": -0.011887681895849767,
    "time": 24234.841064453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.23904482868608,
    "avg_bits_err_output": 34.23904482868608,
    "avg_bits_err_improve": 0,
    "time": 24247.80126953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2608.59423828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.02464764542883,
    "avg_bits_err_output": 0.01975,
    "avg_bits_err_improve": 40.00489764542883,
    "time": 11215.606201171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.27894301975897,
    "avg_bits_err_output": 20.27894301975897,
    "avg_bits_err_improve": 0,
    "time": 4490.754150390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ c (+ b (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.5764649048846247,
    "avg_bits_err_output": 0.021879107201957803,
    "avg_bits_err_improve": 3.554585797682667,
    "time": 7862.34326171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0385,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.037125,
    "time": 8501.49267578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.016948120312590145,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0.005823120312590146,
    "time": 3410.15771484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.014374999999999999,
    "time": 3554.896484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1713.940673828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e (+ c a)) (+ b d))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4032691734413764,
    "avg_bits_err_output": 0.242,
    "avg_bits_err_improve": 0.16126917344137642,
    "time": 5696.805908203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 1.0 (cos x)) 0.0) (* (if (!= (* (cos x) (- 1.0 (cos x))) 0.0) (/ (- (* (cos x) (* (+ (cos x) -1.0) (+ (cos x) -1.0))) (* (cos x) (* (cos x) (* (+ (cos x) -1.0) (+ (cos x) -1.0))))) (* (cos x) (- 1.0 (cos x)))) (* (+ (cos x) -1.0) (+ (cos x) -1.0))) (/ 1.0 (- 1.0 (cos x)))) (- 1.0 (cos x)))",
    "output_parens": 43,
    "avg_bits_err_input": 29.500441905640464,
    "avg_bits_err_output": 29.506182747612936,
    "avg_bits_err_improve": -0.0057408419724716,
    "time": 20227.189208984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= (- (* x x) (- eps)) 0.0) (* (- (/ eps (fma x x eps)) (if (!= (* x (/ x (fma x x eps))) 0.0) (+ (/ 1.0 (/ 1.0 (* x (/ x (fma x x eps))))) (/ (fma (/ (* x (/ x (fma x x eps))) (- (fma x x eps))) (* x x) (* x (* x (* (/ x (fma x x eps)) (/ x (fma x x eps)))))) (* x (/ x (- (fma x x eps)))))) (* x (/ x (fma x x eps))))) (- (fma x x eps))) (- (* x x) eps))))",
    "output_parens": 49,
    "avg_bits_err_input": 24.28423411580665,
    "avg_bits_err_output": 24.354743424370007,
    "avg_bits_err_improve": -0.07050930856335569,
    "time": 12665.079833984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (* (sin x) (/ -1.0 (tan x))) (* (/ -1.0 (tan x)) x))",
    "output_parens": 8,
    "avg_bits_err_input": 30.51516062313163,
    "avg_bits_err_output": 30.533485329648865,
    "avg_bits_err_improve": -0.018324706517233835,
    "time": 30476.226806640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590144,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.005823120312590144,
    "time": 2793.913818359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3.4e-15) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.15e+258) (+ (- (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))) (+ 1.0 (/ 100.0 (/ i n)))) 1.0) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 65,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 45.820597299015866,
    "avg_bits_err_improve": 2.124982636774007,
    "time": 26839.25048828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (- INFINITY)) (+ (* d (/ b (fma d d (* c c)))) (* c (/ a (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 2e+284) (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (+ (* d (/ b (fma d d (* c c)))) (* c (/ a (fma d d (* c c)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 26.41803412600564,
    "avg_bits_err_output": 23.171959575746662,
    "avg_bits_err_improve": 3.246074550258978,
    "time": 13756.18310546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= c -5000000000000.0) (- (* b (/ c (fma c c (* d d)))) (* d (/ a (fma d d (* c c))))) (if (<= c 1e-299) (- (/ (* b c) (fma c c (* d d))) (* a (/ d (fma c c (* d d))))) (- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 26.36938487891704,
    "avg_bits_err_output": 23.149803141088213,
    "avg_bits_err_improve": 3.2195817378288254,
    "time": 15169.9091796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033375,
    "avg_bits_err_output": 0.01753053411825244,
    "avg_bits_err_improve": 0.015844465881747562,
    "time": 6216.128173828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* ux ux))) (- (* maxCos (+ (* ux (fma ux maxCos (- 1.0 ux))) (- ux (* ux ux))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.604116756017186,
    "avg_bits_err_output": 0.5408892968420869,
    "avg_bits_err_improve": 13.0632274591751,
    "time": 27196.23095703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (+ (* ux (- maxCos)) (+ ux (* ux (fma ux maxCos (- 1.0 ux))))) (- (* (* ux maxCos) (fma ux maxCos (- 1.0 ux)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.633105205358305,
    "avg_bits_err_output": 0.354918049717643,
    "avg_bits_err_improve": 13.278187155640662,
    "time": 25074.6513671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3533256941859234,
    "avg_bits_err_output": 0.3484161854363792,
    "avg_bits_err_improve": 0.004909508749544211,
    "time": 43629.563232421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.21003759491720253,
    "avg_bits_err_output": 0.21016259491720254,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 25809.19873046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5273052096597759,
    "avg_bits_err_output": 0.5273052096597759,
    "avg_bits_err_improve": 0,
    "time": 20185.73193359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (- (- 1.0 (* u2 -6.28318530718)) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3268196327186358,
    "avg_bits_err_output": 0.3480386216482113,
    "avg_bits_err_improve": -0.021218988929575522,
    "time": 20086.2119140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.33150640204892723,
    "avg_bits_err_output": 0.33263613830957,
    "avg_bits_err_improve": -0.0011297362606427774,
    "time": 48870.18310546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(log1p (expm1 (/ 1.0 (+ 2.0 (expm1 (/ x (- s)))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.05803104458225688,
    "avg_bits_err_output": 0.06481842762579573,
    "avg_bits_err_improve": -0.006787383043538854,
    "time": 14847.9560546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (fma s (exp (/ (fabs x) (- s))) s)) (+ (expm1 (/ (fabs x) (- s))) 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13354197425442763,
    "avg_bits_err_output": 0.11694804003302431,
    "avg_bits_err_improve": 0.016593934221403317,
    "time": 18946.181884765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x PI)) (* x PI)) (/ (sin (* x (* PI tau))) (* x (* PI tau))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6751124505807413,
    "avg_bits_err_output": 0.6751944269136092,
    "avg_bits_err_improve": -8.197633286788353e-05,
    "time": 19454.36328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15663811306823494,
    "avg_bits_err_output": 0.15281908933121355,
    "avg_bits_err_improve": 0.003819023737021393,
    "time": 19586.673583984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.561479138020748,
    "avg_bits_err_output": 2.5558232954459363,
    "avg_bits_err_improve": 0.005655842574811665,
    "time": 26884.96435546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (* cosTheta_i cosTheta_O) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) v)) (* (sinh (/ 1.0 v)) (* v 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46465221439493026,
    "avg_bits_err_output": 0.41279691568284455,
    "avg_bits_err_improve": 0.05185529871208572,
    "time": 23221.767578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= 0.6931 0.0) (fma 0.6931 (/ (+ (log (/ 0.5 v)) (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v)) 0.6931) 0.6931) (+ (log (/ 0.5 v)) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.10215365043857581,
    "avg_bits_err_output": 0.10663454962604303,
    "avg_bits_err_improve": -0.004480899187467219,
    "time": 10415.549560546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (- 1.0 (* alpha alpha)) (- PI)) (log (* alpha alpha))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4702707101683745,
    "avg_bits_err_output": 0.4928501961625535,
    "avg_bits_err_improve": -0.02257948599417897,
    "time": 21979.9951171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (log (+ 1.0 (expm1 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 1.3115123199176546,
    "avg_bits_err_output": 1.234163185396416,
    "avg_bits_err_improve": 0.0773491345212387,
    "time": 24345.724609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (log (/ 1.0 (+ 1.0 (* u -4.0)))) 0.0) (/ 1.0 (/ 1.0 (/ (- (- 2.0 (log (/ 1.0 (fma u -4.0 1.0)))) (+ (log (/ 1.0 (fma u -4.0 1.0))) (* (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) 2.0))) -4.0))) (log (/ 1.0 (+ 1.0 (* u -4.0))))))",
    "output_parens": 28,
    "avg_bits_err_input": 12.513838276691208,
    "avg_bits_err_output": 12.523808919901938,
    "avg_bits_err_improve": -0.009970643210730046,
    "time": 29960.27978515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (* 0.75 (/ (* (exp (/ r (* -3.0 s))) 0.16666666666666666) (* s PI)))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.13220703589264557,
    "avg_bits_err_output": 0.14213770354282862,
    "avg_bits_err_improve": -0.00993066765018305,
    "time": 26346.2646484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8584023282747201,
    "avg_bits_err_output": 0.7312921724531211,
    "avg_bits_err_improve": 0.127110155821599,
    "time": 27008.57080078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (* (exp (* cosTheta (- cosTheta))) (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) (+ cosTheta cosTheta)))) (+ (* (exp (* cosTheta (- cosTheta))) (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) (+ cosTheta cosTheta)))) (+ 1.0 c))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.6866850533746715,
    "avg_bits_err_output": 0.48004621881456,
    "avg_bits_err_improve": 0.20663883456011145,
    "time": 18875.037841796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (log1p (expm1 (* 2.0 (* PI u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.621533033039467,
    "avg_bits_err_output": 13.621716004549441,
    "avg_bits_err_improve": -0.0001829715099734841,
    "time": 23649.060791015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (- (log (+ 1.0 (expm1 (log (exp (* (+ 1.0 (log (- 1.0 u1))) (+ 1.0 (log (- 1.0 u1))))))))) 1.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 34,
    "avg_bits_err_input": 13.670547721294065,
    "avg_bits_err_output": 13.251943293725317,
    "avg_bits_err_improve": 0.4186044275687486,
    "time": 27116.8759765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (* alpha (* alpha (log (- 1.0 u0)))) 0.0) (* (* alpha (* (log (- 1.0 u0)) (* (* alpha alpha) alpha))) (/ (log (- 1.0 u0)) (* (- alpha) (* alpha (log (- 1.0 u0)))))) (* alpha (* (- alpha) (log (- 1.0 u0)))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.035741003659682,
    "avg_bits_err_output": 14.0541444743534,
    "avg_bits_err_improve": -0.01840347069371795,
    "time": 18104.379150390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ -1.0 (+ (/ sin2phi (* alphay alphay)) (+ (/ sin2phi (* alphay alphay)) (/ (+ cos2phi cos2phi) (* alphax alphax))))) (- (* (log (- 1.0 u0)) -2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 12.619550375658925,
    "avg_bits_err_output": 12.646938131000569,
    "avg_bits_err_improve": -0.027387755341644393,
    "time": 18457.675537109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (- (/ (* (/ (tan (* PI l)) F) 1.5) (+ F F)) (/ (/ (/ (tan (* PI l)) F) -2.0) (+ F F))))",
    "output_parens": 15,
    "avg_bits_err_input": 16.926184191673947,
    "avg_bits_err_output": 12.699773009750693,
    "avg_bits_err_improve": 4.226411181923254,
    "time": 21452.0205078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21206372187554084,
    "avg_bits_err_output": 0.15119812031259017,
    "avg_bits_err_improve": 0.06086560156295068,
    "time": 16904.271484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.320328265980981,
    "avg_bits_err_output": 10.155644659421528,
    "avg_bits_err_improve": 3.1646836065594535,
    "time": 21856.87255859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))) 0.0) (+ (/ 1.0 (/ 1.0 (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))))) (/ (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (* (exp (* f (/ PI -4.0))) (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))) (- (exp (* f (/ PI -4.0))) (exp (* PI (/ f 4.0))))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))))) (/ (+ (* (exp (* f (/ PI -4.0))) (/ (exp (* f (/ PI -4.0))) (- (exp (* f (/ PI -4.0))) (exp (* PI (/ f 4.0)))))) (/ (* (exp (* PI (/ f 4.0))) (exp (* PI (/ f 4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))))) (/ PI -4.0))",
    "output_parens": 164,
    "avg_bits_err_input": 61.322369661325304,
    "avg_bits_err_output": 61.33543315638245,
    "avg_bits_err_improve": -0.013063495057146213,
    "time": 79865.89184570312,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.89399472837731,
    "avg_bits_err_output": 35.10772037110138,
    "avg_bits_err_improve": 7.7862743572759285,
    "time": 23550.51513671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9176017611745624,
    "avg_bits_err_output": 3.9176017611745624,
    "avg_bits_err_improve": 0,
    "time": 27168.36474609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8943742678845564,
    "avg_bits_err_output": 0.8943742678845564,
    "avg_bits_err_improve": 0,
    "time": 9967.59033203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 10.863580387019924,
    "avg_bits_err_improve": -0.0010484345916701443,
    "time": 10375.74755859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-299) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) INFINITY) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (* 2.0 n) (* U (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 71,
    "avg_bits_err_input": 34.56024740422174,
    "avg_bits_err_output": 28.896142306603057,
    "avg_bits_err_improve": 5.664105097618684,
    "time": 34665.937255859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ 2.0 (* (pow t 3.0) (/ (pow (/ k t) 2.0) l))) (/ 1.0 (* (/ (sin k) l) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 47.23044222472221,
    "avg_bits_err_output": 35.944616221471954,
    "avg_bits_err_improve": 11.285826003250257,
    "time": 41752.318359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)) INFINITY) (/ 2.0 (/ (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l))) (tan k)) l)) 0.0)",
    "output_parens": 26,
    "avg_bits_err_input": 32.163229373401556,
    "avg_bits_err_output": 22.178430303419397,
    "avg_bits_err_improve": 9.98479906998216,
    "time": 33430.130126953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (/ (+ (+ (* a1 a1) (* a2 (/ a2 2.0))) (* a2 (/ a2 2.0))) (sqrt 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5397894765845872,
    "avg_bits_err_output": 0.487734776578817,
    "avg_bits_err_improve": 0.05205470000577023,
    "time": 22100.776611328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.4818863233716547,
    "avg_bits_err_output": 0.4445188811256223,
    "avg_bits_err_improve": 0.03736744224603239,
    "time": 18526.934814453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma (exp l) J (- J (+ J (* J (exp (- l)))))) (cos (/ K 2.0))) U)",
    "output_parens": 11,
    "avg_bits_err_input": 17.829651954521946,
    "avg_bits_err_output": 17.86162339766069,
    "avg_bits_err_improve": -0.031971443138743894,
    "time": 23003.487548828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 16,
    "avg_bits_err_input": 15.418386189492933,
    "avg_bits_err_output": 15.418386189492933,
    "avg_bits_err_improve": 0,
    "time": 10115.458740234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (cos (/ K 2.0)) (* (sqrt (+ 1.0 (pow (/ (/ U (cos (/ K 2.0))) (* 2.0 J)) 2.0))) (* J -2.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 17.46453308281331,
    "avg_bits_err_output": 17.48142932343849,
    "avg_bits_err_improve": -0.01689624062517936,
    "time": 27920.6455078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (/ (pow (* M (/ (/ D 2.0) d)) 2.0) l) h))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.68570072456706,
    "avg_bits_err_output": 10.464422646594123,
    "avg_bits_err_improve": 3.2212780779729364,
    "time": 13733.1728515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 0.0) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (/ A (* V l)) 1e+291) (* c0 (sqrt (+ (+ (/ (/ A (* V l)) 8.0) (/ (+ A (+ (+ A A) (+ A A))) (* (* V (+ l l)) 4.0))) (/ A (* (* V l) 4.0))))) (* c0 (sqrt (/ (/ A V) l)))))",
    "output_parens": 35,
    "avg_bits_err_input": 19.321031222129317,
    "avg_bits_err_output": 14.814285757331103,
    "avg_bits_err_improve": 4.506745464798215,
    "time": 17047.45654296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (+ (* d (/ (* d (/ c0 (* h (* D w)))) D)) (sqrt (* (fma d (/ (* d (/ c0 (* h (* D w)))) D) M) (- (* d (/ (* d (/ c0 (* h (* D w)))) D)) M)))))",
    "output_parens": 25,
    "avg_bits_err_input": 59.72345062510315,
    "avg_bits_err_output": 54.05417476009677,
    "avg_bits_err_improve": 5.669275865006377,
    "time": 45909.724853515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= d -5.5e-139) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (* 0.5 (pow (* (/ M 2.0) (/ D d)) 2.0)) l)))) (if (<= d 1.5e-45) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (* (/ h l) (pow (/ d l) 0.5)) (* (pow (/ d h) 0.5) (* 0.5 (pow (/ (* M D) (+ d d)) 2.0))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (/ (* h (/ (pow (* D (/ (/ M d) 2.0)) 2.0) l)) 2.0)))))",
    "output_parens": 51,
    "avg_bits_err_input": 26.54313077399435,
    "avg_bits_err_output": 25.20010063664658,
    "avg_bits_err_improve": 1.3430301373477675,
    "time": 42526.6630859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (- (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 1.0)))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 31,
    "avg_bits_err_input": 16.014168059511185,
    "avg_bits_err_output": 15.559833373013047,
    "avg_bits_err_improve": 0.4543346864981377,
    "time": 24935.085205078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 (- 1.0 (* v v))) PI) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9868656015629508,
    "avg_bits_err_output": 0.011049039677847344,
    "avg_bits_err_improve": 0.9758165618851035,
    "time": 4393.770751953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (- 1.0 (* v (* v 5.0))) PI) (* (sqrt (- 2.0 (* v (* v 6.0)))) (* (- 1.0 (* v v)) t))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.42591781149169733,
    "avg_bits_err_output": 0.30015755452183784,
    "avg_bits_err_improve": 0.12576025696985949,
    "time": 20219.4580078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(- (* (/ (sqrt 2.0) 4.0) (sqrt (+ (* (* v v) -3.0) 1.0))) (* v (* (/ (sqrt 2.0) 4.0) (* v (sqrt (+ (* (* v v) -3.0) 1.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.012707722262221501,
    "avg_bits_err_output": 0.013134601949631357,
    "avg_bits_err_improve": -0.00042687968740985627,
    "time": 6165.44921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5507649356150287,
    "avg_bits_err_output": 0.5507649356150287,
    "avg_bits_err_improve": 0,
    "time": 10598.59912109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.14736174471255,
    "avg_bits_err_output": 2.14736174471255,
    "avg_bits_err_improve": 0,
    "time": 7773.930908203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ mu (+ Vef EDonor)) Ec) KbT)))) (/ NaChar (+ 1.0 (expm1 (log1p (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.022732716761480035,
    "avg_bits_err_output": 0.023732716761480036,
    "avg_bits_err_improve": -0.0010000000000000009,
    "time": 9606.722900390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18781373264222415,
    "avg_bits_err_output": 0.18754249201704384,
    "avg_bits_err_improve": 0.00027124062518030234,
    "time": 17359.342529296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (if (!= (* (* b b) (* (fma a 3.0 -1.0) -4.0)) 0.0) (* (+ (* (* b b) (* (fma a 3.0 -1.0) -4.0)) (fma 4.0 (* a (fma a a a)) (pow (fma a a (* b b)) 2.0))) (/ 1.0 (/ (/ (/ (* b (* b (fma a 3.0 -1.0))) b) (- 1.0 (* a 3.0))) (- b)))) (fma 4.0 (fma a (fma a a a) (* b (- b (* a (* b 3.0))))) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 39,
    "avg_bits_err_input": 0.18910664275575975,
    "avg_bits_err_output": 0.20765732820338167,
    "avg_bits_err_improve": -0.018550685447621923,
    "time": 25895.310302734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18459005351546667,
    "avg_bits_err_output": 0.18459005351546667,
    "avg_bits_err_improve": 0,
    "time": 21679.31787109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (+ (/ (/ (/ x 2.0) (sqrt (fma 4.0 (* p p) (* x x)))) 4.0) (/ (+ x (+ (+ x x) (+ x x))) (* 2.0 (* 4.0 (sqrt (fma 4.0 (* p p) (* x x)))))))))))",
    "output_parens": 30,
    "avg_bits_err_input": 13.296697980081309,
    "avg_bits_err_output": 13.367337209105104,
    "avg_bits_err_improve": -0.07063922902379538,
    "time": 20610.416748046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.59271767812149,
    "avg_bits_err_output": 0.049125,
    "avg_bits_err_improve": 40.54359267812149,
    "time": 14254.481689453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (+ (- (sin x) (/ x 4.0)) (- (/ x 4.0))) (/ x 2.0)) (- (tan x) x))",
    "output_parens": 11,
    "avg_bits_err_input": 31.110674265336044,
    "avg_bits_err_output": 31.164079664066563,
    "avg_bits_err_improve": -0.05340539873051853,
    "time": 22574.831787109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.820198183972245,
    "avg_bits_err_output": 33.820198183972245,
    "avg_bits_err_improve": 0,
    "time": 15092.49365234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.05588322986994,
    "avg_bits_err_output": 34.05588322986994,
    "avg_bits_err_improve": 0,
    "time": 15262.509521484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.329167050767772,
    "avg_bits_err_output": 30.57454678980546,
    "avg_bits_err_improve": 0.7546202609623123,
    "time": 18200.908447265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (+ (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))) 0.0) (/ (- (* (pow (+ 1.0 x) (/ 1.0 n)) (pow (+ 1.0 x) (/ 1.0 n))) (* (pow x (/ 1.0 n)) (pow x (/ 1.0 n)))) (+ (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 34,
    "avg_bits_err_input": 32.00250505090117,
    "avg_bits_err_output": 32.01547170345358,
    "avg_bits_err_improve": -0.012966652552407254,
    "time": 20365.333984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (if (!= (+ (+ (log1p N) 1.0) 1.0) 0.0) (/ (+ (* (log1p N) (log1p N)) (* (log1p N) 2.0)) (+ (+ (log1p N) 1.0) 1.0)) (log1p N)) (log N))",
    "output_parens": 18,
    "avg_bits_err_input": 29.40489672648931,
    "avg_bits_err_output": 29.50135268665644,
    "avg_bits_err_improve": -0.09645596016713043,
    "time": 13041.93408203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (!= (/ 1.0 (+ 1.0 x)) 0.0) (/ (- (/ -1.0 x) (+ -1.0 (/ x x))) (+ 1.0 x)) (+ (/ 1.0 (+ 1.0 x)) (/ -1.0 x)))",
    "output_parens": 14,
    "avg_bits_err_input": 14.392850973268146,
    "avg_bits_err_output": 0.068125,
    "avg_bits_err_improve": 14.324725973268146,
    "time": 14826.13720703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (cos (+ x eps)) 0.0) (/ (+ (* (cos (+ x eps)) (- (cos (+ x eps)) (cos x))) (fma (- (cos x)) (cos (+ x eps)) (* (cos (+ x eps)) (cos x)))) (cos (+ x eps))) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 28,
    "avg_bits_err_input": 39.940981555116096,
    "avg_bits_err_output": 39.99073194777623,
    "avg_bits_err_improve": -0.04975039266013681,
    "time": 16656.09375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (cbrt x) 0.0) (/ (- (- (* (cbrt x) (- (cbrt (+ 1.0 x)) (cbrt x))) (* (cbrt x) (cbrt x))) (* (cbrt x) (- (cbrt x)))) (cbrt x)) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.536233998661956,
    "avg_bits_err_output": 29.546933960653814,
    "avg_bits_err_improve": -0.01069996199185752,
    "time": 12205.12646484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(- (+ (/ (fma (cos x) -0.5 0.75) (sin x)) (/ (/ (fma (cos x) -0.5 0.25) (sin x)) 2.0)) (- (/ (/ (fma (cos x) -0.5 0.25) (sin x)) 2.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 29.938340772734886,
    "avg_bits_err_output": 30.002065359659188,
    "avg_bits_err_improve": -0.06372458692430172,
    "time": 20973.21435546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* a (* c 4.0)) 0.0) (* (fma b b (* a (* c -4.0))) (/ (* c 4.0) (* c (* (/ 4.0 a) a)))) (fma b b (* a (* c -4.0)))))) (* a 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 34.148113047899024,
    "avg_bits_err_output": 34.27843261285134,
    "avg_bits_err_improve": -0.1303195649523161,
    "time": 25789.107177734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.4079375625893,
    "avg_bits_err_output": 34.4079375625893,
    "avg_bits_err_improve": 0,
    "time": 26064.76904296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.41774068935821,
    "avg_bits_err_output": 0.8891805652098372,
    "avg_bits_err_improve": 60.52856012414838,
    "time": 31069.931884765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (* n (log1p n)) (- -1.0 (* n (log n)))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.00128345677194,
    "avg_bits_err_output": 0.6159013302608417,
    "avg_bits_err_improve": 62.3853821265111,
    "time": 16601.826171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(if (!= (log (/ (- 1.0 eps) (+ 1.0 eps))) 0.0) (/ 1.0 (/ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) (log (/ (- 1.0 eps) (+ 1.0 eps))))",
    "output_parens": 16,
    "avg_bits_err_input": 58.5901143684253,
    "avg_bits_err_output": 58.59043830235902,
    "avg_bits_err_improve": -0.00032393393372132095,
    "time": 23680.19482421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (log (+ 1.0 (expm1 (- 1.0 (/ x (tan x)))))) x)",
    "output_parens": 7,
    "avg_bits_err_input": 59.937304562023,
    "avg_bits_err_output": 59.947696507069594,
    "avg_bits_err_improve": -0.010391945046592355,
    "time": 27837.669921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (/ eps (expm1 (* eps a))) (expm1 (* eps (+ a b)))) (expm1 (* eps b)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.549631115990856,
    "avg_bits_err_output": 29.62271943318116,
    "avg_bits_err_improve": 30.926911682809695,
    "time": 26678.92529296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.02666931851472,
    "avg_bits_err_output": 0.4600943609377705,
    "avg_bits_err_improve": 40.56657495757695,
    "time": 6593.879638671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.78338549412474,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.78263549412474,
    "time": 2794.009033203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.372772749799932,
    "avg_bits_err_output": 0.017067347324700076,
    "avg_bits_err_improve": 29.35570540247523,
    "time": 5293.9599609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (if (!= (* (exp x) (- (exp (- x)) 2.0)) 0.0) (/ 1.0 (/ 1.0 (* (exp x) (- (exp (- x)) 2.0)))) (* (exp x) (- (exp (- x)) 2.0)))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 35,
    "avg_bits_err_input": 30.072393212563146,
    "avg_bits_err_output": 29.475097870104882,
    "avg_bits_err_improve": 0.5972953424582634,
    "time": 18966.236572265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ (- 1.0 (/ (/ 4.0 x) (/ 2.0 (+ 1.0 x)))) (+ 1.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 9.623785173793717,
    "avg_bits_err_output": 9.65220771169139,
    "avg_bits_err_improve": -0.02842253789767213,
    "time": 25655.05712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.96683802788382,
    "avg_bits_err_output": 36.96683802788382,
    "avg_bits_err_improve": 0,
    "time": 18537.17529296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (- x -1.0)) (+ 1.0 (sqrt x))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.598634197073682,
    "avg_bits_err_output": 28.919616907144913,
    "avg_bits_err_improve": 0.679017289928769,
    "time": 17611.32958984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (+ (* (- (sin (+ x eps)) (sin x)) (/ (sin (+ x eps)) (sin (+ x eps)))) (fma (/ (sin x) (- (sin (+ x eps)))) (sin (+ x eps)) (expm1 (log1p (* (sin x) (/ (sin (+ x eps)) (sin (+ x eps)))))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 36,
    "avg_bits_err_input": 37.26211806434747,
    "avg_bits_err_output": 37.262608910026955,
    "avg_bits_err_improve": -0.0004908456794865401,
    "time": 16104.1171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (fma (+ 0.5 (/ 2.0 (/ (* (sqrt (+ x 1.0)) -2.0) (sqrt x)))) 1.0 0.5) (sqrt x))",
    "output_parens": 10,
    "avg_bits_err_input": 20.01758811801997,
    "avg_bits_err_output": 20.024172255146265,
    "avg_bits_err_improve": -0.006584137126296241,
    "time": 12084.798828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ N 1.0)) (atan N)) 0.0) (/ (- (* (atan (+ N 1.0)) (atan (+ N 1.0))) (* (atan N) (atan N))) (+ (atan (+ N 1.0)) (atan N))) (- (atan (+ N 1.0)) (atan N)))",
    "output_parens": 24,
    "avg_bits_err_input": 15.61891513363768,
    "avg_bits_err_output": 15.624919045041798,
    "avg_bits_err_improve": -0.006003911404118156,
    "time": 11945.928466796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (exp (log1p (log (+ (exp a) (exp b))))) 0.0) (/ (- (log (+ (exp a) (exp b))) (- -1.0 (fma (log (+ (exp a) (exp b))) (log (+ (exp a) (exp b))) -1.0))) (if (!= (- 1.0 (log (+ (exp a) (exp b)))) 0.0) (/ (+ (* (log (+ (exp a) (exp b))) (log (+ (exp a) (exp b)))) -1.0) (+ (log (+ (exp a) (exp b))) -1.0)) (+ 1.0 (log (+ (exp a) (exp b)))))) (log (+ (exp a) (exp b))))",
    "output_parens": 56,
    "avg_bits_err_input": 29.872719925704544,
    "avg_bits_err_output": 29.88764167744795,
    "avg_bits_err_improve": -0.014921751743404599,
    "time": 38095.39794921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (- m (* m m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.08473027599603312,
    "avg_bits_err_output": 0.08292072124054027,
    "avg_bits_err_improve": 0.0018095547554928537,
    "time": 11248.369873046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 15.945028183788345,
    "avg_bits_err_output": 0.30325977500432677,
    "avg_bits_err_improve": 15.641768408784019,
    "time": 10742.113037109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (/ (* PI angle) -180.0) 0.0) (/ (/ 1.0 (/ (/ (- (/ 4.0 (/ 2.0 angle)) (/ 0.0 PI)) angle) (* PI (+ angle angle)))) 180.0) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 25,
    "avg_bits_err_input": 20.515547362137298,
    "avg_bits_err_output": 20.547849000140396,
    "avg_bits_err_improve": -0.03230163800309782,
    "time": 29673.86669921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (sin (* PI (/ angle 180.0))) (- (+ (pow b 2.0) (pow b 2.0)) (pow a 2.0))) (* (sin (* PI (/ angle 180.0))) (pow a 2.0))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 32.063659563320776,
    "avg_bits_err_output": 32.06593080394317,
    "avg_bits_err_improve": -0.0022712406223917014,
    "time": 28101.097412109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (if (!= (* angle (/ PI 180.0)) 0.0) (/ 1.0 (/ 1.0 (* angle (/ PI 180.0)))) (* angle (/ PI 180.0))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.54605131535058,
    "avg_bits_err_output": 20.559380040771295,
    "avg_bits_err_improve": -0.013328725420713283,
    "time": 28038.90869140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1838492043822976,
    "avg_bits_err_output": 0.17888367481976303,
    "avg_bits_err_improve": 0.004965529562534571,
    "time": 11751.607421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (- (tan x)) 1.0) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3173243178783786,
    "avg_bits_err_output": 0.30371630887824425,
    "avg_bits_err_improve": 0.013608009000134369,
    "time": 19803.0859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13806372187554086,
    "avg_bits_err_output": 0.13806372187554086,
    "avg_bits_err_improve": 0,
    "time": 15930.545654296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.69982691895783,
    "avg_bits_err_output": 16.697546309644128,
    "avg_bits_err_improve": 0.0022806093137006656,
    "time": 32314.990478515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.9e+16) (fma (- (sqrt (fma a (* -4.0 c) (* b b))) b) (/ 0.5 a) (fma (- b) (/ 0.5 a) (* b (/ 0.5 a)))) (/ (+ (- (+ (sqrt (fma -4.0 (* a c) (* b b))) 1.0) b) -1.0) (* a 2.0)))",
    "output_parens": 23,
    "avg_bits_err_input": 52.48820756036882,
    "avg_bits_err_output": 50.39821311150361,
    "avg_bits_err_improve": 2.0899944488652125,
    "time": 33537.12255859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (+ (/ (fma (- (sqrt (fma a (* -4.0 c) (* b b)))) (sqrt (fma a (* -4.0 c) (* b b))) (* (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))))) (- (+ b (sqrt (fma a (* -4.0 c) (* b b)))))) (* (- (sqrt (fma a (* -4.0 c) (* b b))) b) (/ (+ b (sqrt (fma a (* -4.0 c) (* b b)))) (+ b (sqrt (fma a (* -4.0 c) (* b b))))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 58,
    "avg_bits_err_input": 28.15600209448868,
    "avg_bits_err_output": 27.686014413688046,
    "avg_bits_err_improve": 0.46998768080063513,
    "time": 35223.25,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (fma b b (* (sqrt (fma b b (* c (* a -4.0)))) (- b))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (/ (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 4.0))",
    "output_parens": 27,
    "avg_bits_err_input": 43.623192487426074,
    "avg_bits_err_output": 42.43569839984051,
    "avg_bits_err_improve": 1.1874940875855629,
    "time": 26221.668701171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (* a 2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 34.15091079335884,
    "avg_bits_err_output": 34.149267869523726,
    "avg_bits_err_improve": 0.0016429238351136632,
    "time": 18170.306640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (* (cos (- lambda1 lambda2)) (cos phi2)) 0.0) (/ (+ (* (cos (- lambda1 lambda2)) (* (cos (- lambda1 lambda2)) (* (cos phi2) (cos phi2)))) (* (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (* (cos (- lambda1 lambda2)) (cos phi2))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.8504595051628373,
    "avg_bits_err_output": 0.8706053284893197,
    "avg_bits_err_improve": -0.020145823326482404,
    "time": 25469.807861328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.14982067071498,
    "avg_bits_err_output": 29.14982067071498,
    "avg_bits_err_improve": 0,
    "time": 3264.070556640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(fma (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp x) (+ (exp x) (exp (- x)))) (- (expm1 (log1p (/ (* (+ (exp (- x)) (exp (- x))) (/ (+ (exp (- x)) (exp (- x))) (+ (exp (- x)) (exp x)))) (+ (+ (exp (- x)) (exp x)) (+ (exp x) (+ (+ (exp (- x)) (exp (- x))) (+ (exp (- x)) (+ (exp x) (exp x)))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 58.448047843824696,
    "avg_bits_err_output": 58.453007489415384,
    "avg_bits_err_improve": -0.0049596455906879555,
    "time": 16748.651123046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18063737195172,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 58.17363737195172,
    "time": 17083.097412109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009521240625180288,
    "avg_bits_err_output": 0.009521240625180288,
    "avg_bits_err_improve": 0,
    "time": 1972.374267578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.13066524101186,
    "avg_bits_err_output": 32.13066524101186,
    "avg_bits_err_improve": 0,
    "time": 6165.579833984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (* (/ (- -1.0 x) (+ x -1.0)) (/ x (- 1.0 x))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 58.583991478371566,
    "avg_bits_err_improve": -0.0066901200343778555,
    "time": 21273.502685546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.026698120312590144,
    "avg_bits_err_output": 0.027323120312590144,
    "avg_bits_err_improve": -0.0006250000000000006,
    "time": 2791.54541015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* eh (* (cos t) (sin (atan (/ eh (* ew (tan t)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.11932312031259014,
    "avg_bits_err_output": 0.11925,
    "avg_bits_err_improve": 7.312031259014418e-05,
    "time": 22522.30859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1252712406251803,
    "avg_bits_err_output": 0.1252712406251803,
    "avg_bits_err_improve": 0,
    "time": 21693.8720703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 38.89351583101381,
    "avg_bits_err_output": 3.8097932490754105,
    "avg_bits_err_improve": 35.083722581938396,
    "time": 25898.171142578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.201469142944786,
    "avg_bits_err_output": 14.201469142944786,
    "avg_bits_err_improve": 0,
    "time": 3823.63916015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15155727584531054,
    "avg_bits_err_output": 0.1462474676845626,
    "avg_bits_err_improve": 0.005309808160747942,
    "time": 34223.848388671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ 0.16666666666666666 a)) 0.0) (/ 1.0 (/ 3.0 (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a))) (/ (if (!= (* b -0.3333333333333333) 0.0) (/ (fma (sqrt (fma b b (* c (* a -3.0)))) (* b -0.1111111111111111) (* b (* b 0.1111111111111111))) (* b -0.3333333333333333)) (fma b -0.3333333333333333 (* (sqrt (fma b b (* c (* a -3.0)))) 0.3333333333333333))) a))",
    "output_parens": 37,
    "avg_bits_err_input": 52.52465316488392,
    "avg_bits_err_output": 51.498102130903156,
    "avg_bits_err_improve": 1.0265510339807662,
    "time": 27132.212890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ 0.16666666666666666 a)) 0.0) (/ 1.0 (/ 3.0 (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a))) (* (/ (if (!= (+ b (sqrt (fma a (* c -3.0) (* b b)))) 0.0) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b))) (+ b (sqrt (fma a (* c -3.0) (* b b))))) (- (sqrt (fma a (* c -3.0) (* b b))) b)) a) 0.3333333333333333))",
    "output_parens": 48,
    "avg_bits_err_input": 28.28270455726747,
    "avg_bits_err_output": 27.78738208923176,
    "avg_bits_err_improve": 0.49532246803570956,
    "time": 31544.715576171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (- b) b (* b b))) 0.0) (/ (- (* (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (* (fma (- b) b (* b b)) (fma (- b) b (* b b)))) (- (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (- b) b (* b b)))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 97,
    "avg_bits_err_input": 43.671751270778614,
    "avg_bits_err_output": 42.50509646194659,
    "avg_bits_err_improve": 1.1666548088320212,
    "time": 39851.58935546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (sqrt (fma b b (* c (* a -3.0)))) (+ (sqrt (fma b b (* c (* a -3.0)))) (* b -2.0))) (* a 6.0))",
    "output_parens": 13,
    "avg_bits_err_input": 34.18203478559806,
    "avg_bits_err_output": 34.19149655517775,
    "avg_bits_err_improve": -0.00946176957968703,
    "time": 20738.7998046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (expm1 (log1p (* (cos (- lambda1 lambda2)) (sin phi1)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.058333628631958,
    "avg_bits_err_output": 13.064501152231244,
    "avg_bits_err_improve": -0.006167523599286184,
    "time": 31923.8056640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.988357069377088,
    "avg_bits_err_output": 0.5123856984240773,
    "avg_bits_err_improve": 28.475971370953012,
    "time": 20186.630615234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (log1p (expm1 (/ 1.0 (+ x -1.0)))) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.021519226984736083,
    "avg_bits_err_improve": -0.009769226984736083,
    "time": 4724.486328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (if (!= (+ 1.0 (/ x (+ x -1.0))) 0.0) (/ (- 1.0 (* (/ x (+ x -1.0)) (/ x (+ x -1.0)))) (+ 1.0 (/ x (+ x -1.0)))) (- 1.0 (/ x (+ x -1.0)))) (- (/ 1.0 (+ x -1.0)))) (+ 1.0 x))",
    "output_parens": 24,
    "avg_bits_err_input": 14.406561586031108,
    "avg_bits_err_output": 12.50327673730212,
    "avg_bits_err_improve": 1.9032848487289886,
    "time": 16497.0322265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (!= (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (+ (pow B 2.0) (* (* A C) -4.0)) (* F -2.0)))) (- (* A (* C 4.0)) (pow B 2.0))) 0.0) (* (sqrt (* (* (fma (* A C) -4.0 (pow B 2.0)) F) (* (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) 2.0))) (/ (/ (sqrt (* (* (fma (* A C) -4.0 (pow B 2.0)) F) (* (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) 2.0))) (- (* A (* C 4.0)) (pow B 2.0))) (* (- (* A (* C 4.0)) (pow B 2.0)) (/ (sqrt (* (* (fma (* A C) -4.0 (pow B 2.0)) F) (* (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) 2.0))) (- (* A (* C 4.0)) (pow B 2.0)))))) (/ (sqrt (* (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* (+ (pow B 2.0) (* (* A C) -4.0)) (* F -2.0)))) (- (* A (* C 4.0)) (pow B 2.0))))",
    "output_parens": 101,
    "avg_bits_err_input": 52.35448496416277,
    "avg_bits_err_output": 52.40187633340928,
    "avg_bits_err_improve": -0.04739136924650467,
    "time": 43696.799072265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.9966691977714,
    "avg_bits_err_output": 29.9966691977714,
    "avg_bits_err_improve": 0,
    "time": 23387.570068359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+254) (/ (sqrt (* (* (- (pow B 2.0) (* 4.0 (* A C))) (* F 2.0)) (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (- (* 4.0 (* A C)) (pow B 2.0))) 0.0)",
    "output_parens": 43,
    "avg_bits_err_input": 52.60273035188702,
    "avg_bits_err_output": 51.029390823774804,
    "avg_bits_err_improve": 1.5733395281122142,
    "time": 36629.92724609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.795443944367163,
    "avg_bits_err_output": 15.795443944367163,
    "avg_bits_err_improve": 0,
    "time": 1878.651611328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (/ (* g (+ g (sqrt (fma h (- h) (* g g))))) (- g)) (- (- g) (sqrt (fma h (- h) (* g g))))))))",
    "output_parens": 29,
    "avg_bits_err_input": 36.48752067575829,
    "avg_bits_err_output": 36.419520347958134,
    "avg_bits_err_improve": 0.06800032780015641,
    "time": 15810.489013671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (* PI 0.6666666666666666) (/ (acos (/ (- g) h)) 3.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9910877828190814,
    "avg_bits_err_output": 0.9910877828190814,
    "avg_bits_err_improve": 0,
    "time": 4723.679931640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7174693609377705,
    "avg_bits_err_output": 0.7174693609377705,
    "avg_bits_err_improve": 0,
    "time": 2121.89892578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -1e+299) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-272) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 4e+282) (/ (* a1 a2) (* b1 b2)) (* (/ 1.0 b2) (* a1 (/ a2 b1)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.130581512558171,
    "avg_bits_err_output": 3.1246464094439936,
    "avg_bits_err_improve": 8.005935103114178,
    "time": 9244.199462890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.504616368894811,
    "avg_bits_err_output": 0.43307312031259015,
    "avg_bits_err_improve": 0.07154324858222083,
    "time": 9092.41943359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (+ x (if (!= (hypot 1.0 x) 0.0) (/ 1.0 (/ 1.0 (expm1 (log1p (hypot 1.0 x))))) (hypot 1.0 x))))",
    "output_parens": 11,
    "avg_bits_err_input": 53.246138133384655,
    "avg_bits_err_output": 45.31720931064098,
    "avg_bits_err_improve": 7.928928822743671,
    "time": 13926.927978515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.657056111221792,
    "avg_bits_err_output": 5.657056111221792,
    "avg_bits_err_improve": 0,
    "time": 12015.548828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (- 1.0 x) (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.01375,
    "avg_bits_err_improve": -0.0011249999999999993,
    "time": 4237.69677734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1168.992919921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 4.8e-6) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (/ r (- 1.0 v)) (* w (* w r)))) 4.5)) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* w (* (* r (/ (* r w) (- 1.0 v))) (- 0.375 (* v 0.25)))) 4.5)))",
    "output_parens": 29,
    "avg_bits_err_input": 12.816982311973051,
    "avg_bits_err_output": 0.2944985128960555,
    "avg_bits_err_improve": 12.522483799076996,
    "time": 21094.69189453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (fma (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0) (* x1 x1) (* (* x1 x1) -6.0)))))) (+ x1 x1)))",
    "output_parens": 49,
    "avg_bits_err_input": 0.516347479053766,
    "avg_bits_err_output": 0.2868428830004122,
    "avg_bits_err_improve": 0.22950459605335377,
    "time": 57027.881591796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.34940208147552,
    "avg_bits_err_output": 1.2848367838350179,
    "avg_bits_err_improve": 17.064565297640502,
    "time": 6358.943603515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (+ (- 0.954929658551372 (* (* x x) 0.06450306886639899)) (- (* (* x x) 0.06450306886639899))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.25451515121455115,
    "avg_bits_err_output": 0.1955661656266226,
    "avg_bits_err_improve": 0.05894898558792855,
    "time": 9447.809326171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002875,
    "avg_bits_err_output": 0.002875,
    "avg_bits_err_improve": 0,
    "time": 2719.193603515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (- (/ PI (* (- b a) (* a 2.0))) (/ (/ PI 2.0) (* b (- b a)))) (+ b a))",
    "output_parens": 11,
    "avg_bits_err_input": 14.666970671311079,
    "avg_bits_err_output": 0.2416278203183591,
    "avg_bits_err_improve": 14.42534285099272,
    "time": 16824.585693359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(+ (- (* (exp (- (* eps x) x)) (+ 0.5 (/ 0.5 eps))) (* (/ 0.5 eps) (exp (* x (- -1.0 eps))))) (- (* (exp (* x (- -1.0 eps))) -0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 30.225742800812153,
    "avg_bits_err_output": 25.404747227739687,
    "avg_bits_err_improve": 4.820995573072466,
    "time": 27499.4716796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01925,
    "avg_bits_err_output": 0.01925,
    "avg_bits_err_improve": 0,
    "time": 4386.797119140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025375,
    "avg_bits_err_output": 0.025375,
    "avg_bits_err_improve": 0,
    "time": 7285.636962890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.057125,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 0.0485,
    "time": 9833.219970703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3488.027099609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2467.849365234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2797.47265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.816005798380656,
    "avg_bits_err_output": 0.251875,
    "avg_bits_err_improve": 7.564130798380656,
    "time": 21706.47998046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.538505130238594,
    "avg_bits_err_output": 7.538505130238594,
    "avg_bits_err_improve": 0,
    "time": 3864.17431640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.801908414872768,
    "avg_bits_err_output": 15.801908414872768,
    "avg_bits_err_improve": 0,
    "time": 19988.810302734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (+ 1.0 (+ (cos x) 1.0))) 0.0) (* (* (exp (* 10.0 (* x x))) (+ 1.0 (+ (cos x) 1.0))) (/ (* (cos x) (exp (* 10.0 (* x x)))) (if (!= (* (exp (* 10.0 (* x x))) (+ (cos x) 1.0)) 0.0) (/ (* (* (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x)))) (+ (* (- -1.0 (cos x)) (- -1.0 (cos x))) (+ (cos x) 1.0))) (- (- (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (- -1.0 (cos x)))) (exp (* 10.0 (* x x))))) (* (exp (* 10.0 (* x x))) (+ (cos x) 2.0))))) (* (cos x) (exp (* 10.0 (* x x)))))",
    "output_parens": 73,
    "avg_bits_err_input": 3.5229290729726883,
    "avg_bits_err_output": 3.524934069000647,
    "avg_bits_err_improve": -0.002004996027958672,
    "time": 23655.073486328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.824278310572428,
    "avg_bits_err_output": 14.824278310572428,
    "avg_bits_err_improve": 0,
    "time": 13037.611083984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 46.07436253481996,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 46.07436253481996,
    "time": 3879.844482421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.92231583010681,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 38.92169083010681,
    "time": 3842.848388671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2985,
    "avg_bits_err_improve": 63.7015,
    "time": 25057.7216796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325161638259,
    "avg_bits_err_output": 0.38775,
    "avg_bits_err_improve": 61.45550161638259,
    "time": 7177.620849609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.4079375625893,
    "avg_bits_err_output": 34.4079375625893,
    "avg_bits_err_improve": 0,
    "time": 28777.1220703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (* a 2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 34.15091079335884,
    "avg_bits_err_output": 34.149267869523726,
    "avg_bits_err_improve": 0.0016429238351136632,
    "time": 21719.29345703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2217.6279296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.913044624331306,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 39.902919624331304,
    "time": 7254.5419921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.96967203494729,
    "avg_bits_err_output": 19.96967203494729,
    "avg_bits_err_improve": 0,
    "time": 3857.51953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6203335493770865,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6203335493770865,
    "time": 8527.89306640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037375,
    "avg_bits_err_output": 0.037375,
    "avg_bits_err_improve": 0,
    "time": 8277.482421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02189624062518029,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0.01077124062518029,
    "time": 4476.8349609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.014,
    "time": 3512.26171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1741.22802734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ b (+ d a)) (+ c e))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40043665469173684,
    "avg_bits_err_output": 0.246,
    "avg_bits_err_improve": 0.15443665469173684,
    "time": 6274.73291015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (- (/ (+ -1.0 (* (* (cos x) (cos x)) 2.0)) (* (- (* (cos x) -2.0) 2.0) 2.0)) (/ (- 1.0 (* (- (* (cos x) (cos x)) 1.0) 2.0)) (* (- (* (cos x) -2.0) 2.0) 2.0))) (- 1.0 (cos x)))",
    "output_parens": 28,
    "avg_bits_err_input": 30.191106099795643,
    "avg_bits_err_output": 30.191351401482247,
    "avg_bits_err_improve": -0.0002453016866041935,
    "time": 21279.20703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (* (if (!= (* x (/ x eps)) 0.0) (- 1.0 (/ 1.0 (/ (/ 1.0 x) (/ x eps)))) (/ (- eps (* x x)) eps)) (- eps)) (- (* x x) eps))))",
    "output_parens": 20,
    "avg_bits_err_input": 24.514198845606824,
    "avg_bits_err_output": 24.57904898089861,
    "avg_bits_err_improve": -0.06485013529178474,
    "time": 12480.33349609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ (* (- x (sin x)) (/ 2.0 (tan x))) (- (/ (sin x) (tan x)) (/ x (tan x))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.620194048603626,
    "avg_bits_err_output": 30.714391810207314,
    "avg_bits_err_improve": -0.09419776160368798,
    "time": 29902.678955078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.008985521314888553,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.007860521314888553,
    "time": 2870.25732421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -1.4e+52) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (log1p (expm1 (* i (/ i (/ i (+ n n)))))) n) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 0.00068) (/ (log (+ 1.0 (expm1 (- (fma 100.0 (pow (+ 1.0 (/ i n)) n) -100.0))))) (/ (- i) n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (log1p (expm1 (* i (/ i (/ i (+ n n)))))) n) (+ n n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 73,
    "avg_bits_err_input": 47.51389797100418,
    "avg_bits_err_output": 42.55060483537783,
    "avg_bits_err_improve": 4.963293135626344,
    "time": 31134.44482421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (fma (/ (+ c (+ c c)) (* (fma d d (* c c)) 4.0)) a (* (/ (/ c 4.0) (fma d d (* c c))) a)))",
    "output_parens": 17,
    "avg_bits_err_input": 26.23347368555568,
    "avg_bits_err_output": 23.259417164493662,
    "avg_bits_err_improve": 2.9740565210620176,
    "time": 15172.5654296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 1e+261) (/ (+ (- (* b c) (* a (+ d d))) (* a d)) (+ (* c c) (* d d))) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 25.817283732166857,
    "avg_bits_err_output": 22.593442910354206,
    "avg_bits_err_improve": 3.223840821812651,
    "time": 14444.68212890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035,
    "avg_bits_err_output": 0.021386842188131014,
    "avg_bits_err_improve": 0.01361315781186899,
    "time": 9199.26953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.477731247355846,
    "avg_bits_err_output": 0.5302934119237512,
    "avg_bits_err_improve": 12.947437835432096,
    "time": 24427.833740234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- ux (* ux ux)) (+ (- ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.512545684136345,
    "avg_bits_err_output": 0.32654214770992857,
    "avg_bits_err_improve": 13.186003536426417,
    "time": 22119.044921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* (* maxCos maxCos) (* (- 1.0 ux) (- 1.0 ux))) (* ux ux)))) (* (sin (* 2.0 (* uy PI))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.335919802336988,
    "avg_bits_err_output": 0.3235394852853906,
    "avg_bits_err_improve": 0.012380317051597367,
    "time": 43795.4111328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.2037270697866437,
    "avg_bits_err_output": 0.20385206978664372,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 25623.338623046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (+ (/ (/ u1 (- 1.0 u1)) 4.0) (/ u1 (- (- 2.0 u1) u1))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5349836831455806,
    "avg_bits_err_output": 0.5420528967146393,
    "avg_bits_err_improve": -0.007069213569058652,
    "time": 19562.3525390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3227656436061535,
    "avg_bits_err_output": 0.3227656436061535,
    "avg_bits_err_improve": 0,
    "time": 19329.2548828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (* (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s)))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 71,
    "avg_bits_err_input": 0.35156261527631183,
    "avg_bits_err_output": 0.332583403690848,
    "avg_bits_err_improve": 0.01897921158546384,
    "time": 47974.2568359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(log1p (expm1 (/ 1.0 (+ (expm1 (/ x (- s))) 2.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06832913801329205,
    "avg_bits_err_output": 0.07435335887341502,
    "avg_bits_err_improve": -0.00602422086012297,
    "time": 11179.43115234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (fabs x) (- s)))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16523170877488302,
    "avg_bits_err_output": 0.1516112197097689,
    "avg_bits_err_improve": 0.013620489065114122,
    "time": 19020.758056640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.682310690196305,
    "avg_bits_err_output": 0.6773463464738506,
    "avg_bits_err_improve": 0.004964343722454356,
    "time": 20494.177001953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15861638220756208,
    "avg_bits_err_output": 0.15347524502718632,
    "avg_bits_err_improve": 0.00514113718037576,
    "time": 19242.703857421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma (- sinTheta_O) (/ sinTheta_O (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) (* eta eta)))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5935418963603016,
    "avg_bits_err_output": 2.5937473783840232,
    "avg_bits_err_improve": -0.00020548202372161484,
    "time": 34348.392822265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* cosTheta_i (* (/ cosTheta_O v) (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) v))) (* 2.0 (sinh (/ 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4720714258862903,
    "avg_bits_err_output": 0.40887862509631107,
    "avg_bits_err_improve": 0.06319280078997924,
    "time": 22364.798828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (/ (+ (* 0.6931 (log (/ 0.5 v))) 0.48038761) 0.6931)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.10872540520199615,
    "avg_bits_err_output": 0.10901071124975938,
    "avg_bits_err_improve": -0.000285306047763223,
    "time": 10629.266845703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (+ (* alpha alpha) -1.0) PI) (log (* alpha alpha))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4721451103973117,
    "avg_bits_err_output": 0.49811035665867753,
    "avg_bits_err_improve": -0.025965246261365815,
    "time": 23241.255126953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(if (!= (* 3.0 s) 0.0) (* (* s 9.0) (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) (/ s (/ (- s) -0.3333333333333333)))) (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) (* 3.0 s)))",
    "output_parens": 17,
    "avg_bits_err_input": 1.316074137437004,
    "avg_bits_err_output": 1.2162836583169145,
    "avg_bits_err_improve": 0.09979047912008943,
    "time": 23062.106689453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* 4.0 (* (log (/ 1.0 (fma u -4.0 1.0))) (* s 0.25)))",
    "output_parens": 6,
    "avg_bits_err_input": 12.215416280237807,
    "avg_bits_err_output": 12.226344773608103,
    "avg_bits_err_improve": -0.010928493370295556,
    "time": 19645.6396484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.14434114182003469,
    "avg_bits_err_output": 0.14434114182003469,
    "avg_bits_err_improve": 0,
    "time": 18582.057373046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n0_i (/ (sin (* (- 1.0 u) normAngle)) (sin normAngle)) (* (sin (* u normAngle)) (/ n1_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8396854338492937,
    "avg_bits_err_output": 0.7580982531545724,
    "avg_bits_err_improve": 0.08158718069472137,
    "time": 24846.222900390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6941100610671365,
    "avg_bits_err_output": 0.47605915802075643,
    "avg_bits_err_improve": 0.21805090304638003,
    "time": 19306.005126953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sin (* PI (* 2.0 u2))) (log (+ 1.0 (expm1 (sqrt (- (log (- 1.0 u1))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.628203123889442,
    "avg_bits_err_output": 13.652517111143188,
    "avg_bits_err_improve": -0.02431398725374656,
    "time": 21740.193603515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (log (+ 1.0 (expm1 (sqrt (- (log1p (expm1 (log (- 1.0 u1))))))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.681134453204013,
    "avg_bits_err_output": 13.703680015778048,
    "avg_bits_err_improve": -0.022545562574034506,
    "time": 22807.69580078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (- alpha) (* alpha (log (- 1.0 u0))))",
    "output_parens": 5,
    "avg_bits_err_input": 14.204926261487806,
    "avg_bits_err_output": 14.204745833698084,
    "avg_bits_err_improve": 0.00018042778972215956,
    "time": 18198.6455078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (if (!= (+ 1.0 (/ cos2phi (* alphax alphax))) 0.0) (/ (/ (+ cos2phi (/ (* cos2phi cos2phi) (* alphax alphax))) (* alphax alphax)) (+ 1.0 (/ cos2phi (* alphax alphax)))) (/ cos2phi (* alphax alphax))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 24,
    "avg_bits_err_input": 12.649040992138502,
    "avg_bits_err_output": 12.648450548008105,
    "avg_bits_err_improve": 0.0005904441303972163,
    "time": 17460.680419921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+17) (- (* PI l) (/ (/ (- (tan (* PI l))) (* F F)) (* F (log1p (expm1 (/ -1.0 F)))))) (if (<= (* PI l) 2000000000000.0) (- (* PI l) (/ (/ (tan (* PI l)) F) F)) (- (* PI l) (/ (/ (- (tan (* PI l))) (* F F)) (* F (log1p (expm1 (/ -1.0 F))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 17.075932214308526,
    "avg_bits_err_output": 8.272129868743265,
    "avg_bits_err_improve": 8.803802345565261,
    "time": 19034.1943359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21093872187554086,
    "avg_bits_err_output": 0.1530212406251803,
    "avg_bits_err_improve": 0.05791748125036056,
    "time": 16683.675537109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 14.431978838362001,
    "avg_bits_err_output": 10.914386890074327,
    "avg_bits_err_improve": 3.5175919482876736,
    "time": 20952.2177734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (fma (- (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (+ (fma (- (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (- (/ (/ (* (exp (* PI (/ f 4.0))) (exp (* PI (/ f 4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))))) (/ PI -4.0))",
    "output_parens": 146,
    "avg_bits_err_input": 61.47967505940285,
    "avg_bits_err_output": 61.56341303947328,
    "avg_bits_err_improve": -0.0837379800704312,
    "time": 90429.02368164062,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.7656167302722,
    "avg_bits_err_output": 33.58714251625888,
    "avg_bits_err_improve": 9.17847421401332,
    "time": 23001.93017578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.0281374659385,
    "avg_bits_err_output": 4.0281374659385,
    "avg_bits_err_improve": 0,
    "time": 26352.367919921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (- (sqrt (- (* (pow (* 2.0 (/ l Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)) -1.0) 1.0)) 0.5)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9678373356809318,
    "avg_bits_err_output": 0.9662785320861577,
    "avg_bits_err_improve": 0.0015588035947741163,
    "time": 13654.55712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (+ 1.0 (pow (/ t l) 2.0)) 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.220808766035601,
    "avg_bits_err_output": 10.233219418688812,
    "avg_bits_err_improve": -0.012410652653210619,
    "time": 14707.788818359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-303) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+307) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* (pow (/ l Om) 2.0) (* (* U -2.0) (* n (* n (- U U*))))) (fma -2.0 (* n (* U t)) (* l (* (/ l Om) (* (* n U) 4.0))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.04677738193184,
    "avg_bits_err_output": 27.77038674974293,
    "avg_bits_err_improve": 6.27639063218891,
    "time": 37530.638427734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (tan k) l) (* (* (pow t 3.0) (sin k)) (/ (pow (/ k t) 2.0) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.5559019041451,
    "avg_bits_err_output": 36.863070033174345,
    "avg_bits_err_improve": 10.692831870970757,
    "time": 54877.778076171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)) INFINITY) (/ (/ 2.0 (/ (tan k) l)) (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l)))) 0.0)",
    "output_parens": 26,
    "avg_bits_err_input": 31.979910067780295,
    "avg_bits_err_output": 21.37625980306935,
    "avg_bits_err_improve": 10.603650264710947,
    "time": 26716.814208984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (/ (* a1 (/ (* (cos th) a1) (sqrt 2.0))) 1.0) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5648131609608497,
    "avg_bits_err_output": 0.4898082734586855,
    "avg_bits_err_improve": 0.07500488750216416,
    "time": 23054.26318359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (if (!= (- -2.0 (/ 1.0 (sqrt k))) 0.0) (/ (- 1.0 (* (+ 1.0 (/ 1.0 (sqrt k))) (+ 1.0 (/ 1.0 (sqrt k))))) (- -2.0 (/ 1.0 (sqrt k)))) (/ 1.0 (sqrt k))) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 0.5456900857066218,
    "avg_bits_err_output": 0.5845450694897071,
    "avg_bits_err_improve": -0.03885498378308527,
    "time": 17908.0869140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- J) (- (* (exp (- l)) (cos (/ K 2.0))) (* (cos (/ K 2.0)) (exp l)))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.53336760725125,
    "avg_bits_err_output": 17.54285461116602,
    "avg_bits_err_improve": -0.009487003914770753,
    "time": 21071.9453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K (- m n)) 0.0) (* K (* (- n m) (* (+ n m) (expm1 (log1p (/ K (* K (- n m)))))))) (* K (+ n m))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 30,
    "avg_bits_err_input": 15.488595464350512,
    "avg_bits_err_output": 1.22389879376309,
    "avg_bits_err_improve": 14.264696670587423,
    "time": 10521.961669921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.323688721875545,
    "avg_bits_err_output": 18.323688721875545,
    "avg_bits_err_improve": 0,
    "time": 28901.592041015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 200000000.0) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M 2.0) d)) 2.0) h) l)))) (if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 2e+285) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ h l)))))))",
    "output_parens": 39,
    "avg_bits_err_input": 13.83694474873081,
    "avg_bits_err_output": 9.455919635156228,
    "avg_bits_err_improve": 4.381025113574582,
    "time": 11785.8017578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 0.0) (* c0 (sqrt (/ (* A (/ 2.0 l)) (+ V V)))) (if (<= (/ A (* V l)) 5e+271) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (* (/ A V) (/ 1.0 l))))))",
    "output_parens": 23,
    "avg_bits_err_input": 19.374822214766585,
    "avg_bits_err_output": 15.006503709963157,
    "avg_bits_err_improve": 4.368318504803428,
    "time": 17660.926513671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -3.6e-28) (* c0 (/ (fma c0 (* d (/ (/ (/ d D) w) (* D h))) (sqrt (* (fma d (* (/ (/ (/ d D) w) (* D h)) c0) M) (- (* (* d (/ (/ d D) w)) (/ c0 (* D h))) M)))) (+ w w))) (if (<= d -1.7e-193) (* (/ c0 (* 2.0 w)) (fma d (/ (* (/ (/ c0 h) (* w D)) d) D) (sqrt (* (- (* d (/ (* (/ (/ c0 h) (* w D)) d) D)) M) (fma d (/ (* (/ (/ c0 h) (* w D)) d) D) M))))) (if (<= d 1e-203) (* (/ c0 (* 2.0 w)) (+ (* c0 (* d (/ (/ (/ d w) h) (* D D)))) (sqrt (* (fma c0 (* d (/ (/ (/ d w) h) (* D D))) M) (fma c0 (* d (/ (/ (/ d w) h) (* D D))) (- M)))))) (if (<= d 5e+122) (* (/ c0 (* 2.0 w)) (+ (/ (* (* d d) (/ (/ c0 h) (* w D))) D) (sqrt (* (- (* (/ c0 D) (/ (/ (* d d) (* w D)) h)) M) (+ (* d (/ (* (/ (/ c0 h) (* w D)) d) D)) M))))) (* (/ c0 (* 2.0 w)) (+ (* d (* c0 (/ (/ d (* (* D w) D)) h))) (sqrt (* (fma d (* c0 (/ (/ d (* (* D w) D)) h)) M) (- (* d (* c0 (/ (/ d (* (* D w) D)) h))) M)))))))))",
    "output_parens": 132,
    "avg_bits_err_input": 59.372895800855844,
    "avg_bits_err_output": 56.86345290617976,
    "avg_bits_err_improve": 2.5094428946760843,
    "time": 43510.924560546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* h (/ (* (pow (* M (/ D (+ d d))) 2.0) (* (pow (/ d h) 0.5) (pow (/ d l) 0.5))) (+ l l)))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+195) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h (+ l l))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (/ (/ (* (pow (- (* M (exp (log1p (/ D (+ d d))))) M) 2.0) h) l) 2.0)))))",
    "output_parens": 83,
    "avg_bits_err_input": 26.50709304258459,
    "avg_bits_err_output": 24.424360136841557,
    "avg_bits_err_improve": 2.0827329057430326,
    "time": 42532.177978515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (- (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 2.0)) (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.410765365702012,
    "avg_bits_err_output": 14.951387713242744,
    "avg_bits_err_improve": 0.45937765245926876,
    "time": 21884.21484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9845050362151283,
    "avg_bits_err_output": 0.011646240625180288,
    "avg_bits_err_improve": 0.972858795589948,
    "time": 4263.65234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (/ (fma v (* v 5.0) -1.0) (* PI (fma v v -1.0))) t) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4633783556607222,
    "avg_bits_err_output": 0.2656061590929675,
    "avg_bits_err_improve": 0.19777219656775474,
    "time": 23140.447021484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011417481250360578,
    "avg_bits_err_output": 0.011417481250360578,
    "avg_bits_err_improve": 0,
    "time": 6462.324951171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5266227886698662,
    "avg_bits_err_output": 0.5266227886698662,
    "avg_bits_err_improve": 0,
    "time": 9720.4267578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8686203510089219,
    "avg_bits_err_output": 1.8513703510089219,
    "avg_bits_err_improve": 0.017249999999999988,
    "time": 12637.744384765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- Vef (- Ec (+ mu EDonor))) KbT)))) (/ NaChar (- (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01684419868296054,
    "avg_bits_err_output": 0.01684419868296054,
    "avg_bits_err_improve": 0,
    "time": 6890.384033203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18172445195251588,
    "avg_bits_err_output": 0.18172445195251588,
    "avg_bits_err_improve": 0,
    "time": 16109.6220703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (+ (* a (* a a)) (* a a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1894806141215219,
    "avg_bits_err_output": 0.19000398893587206,
    "avg_bits_err_improve": -0.0005233748143501638,
    "time": 28103.92529296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* b (* b (+ 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19098629414064683,
    "avg_bits_err_output": 0.19111129414064684,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 28073.84814453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (if (!= (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.0) (/ (- (* (/ x (sqrt (fma 4.0 (* p p) (* x x)))) (/ x (sqrt (fma 4.0 (* p p) (* x x))))) (- (/ x (sqrt (fma 4.0 (* p p) (* x x)))))) (/ x (sqrt (fma 4.0 (* p p) (* x x))))) (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 39,
    "avg_bits_err_input": 13.1530980595127,
    "avg_bits_err_output": 13.15502261273562,
    "avg_bits_err_improve": -0.0019245532229188456,
    "time": 23540.9130859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.69647215902946,
    "avg_bits_err_output": 0.031625,
    "avg_bits_err_improve": 40.66484715902946,
    "time": 5437.218505859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(if (!= (/ x (- (tan x) x)) 0.0) (/ (* -2.0 (fma (/ x (- (tan x) x)) (/ x (* (- x (tan x)) -2.0)) (/ (* (sin x) (/ x (- (tan x) x))) (* (- (tan x) x) -2.0)))) (/ x (- (tan x) x))) (/ (- x (sin x)) (- x (tan x))))",
    "output_parens": 32,
    "avg_bits_err_input": 31.956759432176327,
    "avg_bits_err_output": 32.10351874218688,
    "avg_bits_err_improve": -0.14675931001055176,
    "time": 21853.28271484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 3.4e+131) (/ (- (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (+ b_2 b_2)) a) (/ 0.0 a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.406898499133696,
    "avg_bits_err_output": 29.710280351955674,
    "avg_bits_err_improve": 4.696618147178022,
    "time": 14323.48388671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.130214017463175,
    "avg_bits_err_output": 34.130214017463175,
    "avg_bits_err_improve": 0,
    "time": 14603.1171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.26032868957306,
    "avg_bits_err_output": 30.539434941879733,
    "avg_bits_err_improve": 0.7208937476933279,
    "time": 16198.747802734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.901508937959015,
    "avg_bits_err_output": 32.901508937959015,
    "avg_bits_err_improve": 0,
    "time": 16481.608642578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (fma (log1p N) (/ (log1p N) (+ (log1p N) (log N))) (* (- (log N)) (/ (log N) (+ (log1p N) (log N))))) (- (log1p N) (log N)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.93056365801526,
    "avg_bits_err_output": 29.940982998512748,
    "avg_bits_err_improve": -0.010419340497488605,
    "time": 12734.708251953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.68472582155708,
    "avg_bits_err_output": 14.68472582155708,
    "avg_bits_err_improve": 0,
    "time": 17983.47314453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (+ (cos x) -1.0) 0.0) (/ (- (* (cos (+ x eps)) (+ (cos x) -1.0)) (* (/ (+ (cos x) (+ (cos x) -2.0)) 2.0) (+ (cos x) -1.0))) (+ (cos x) -1.0)) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 27,
    "avg_bits_err_input": 39.05257047549476,
    "avg_bits_err_output": 39.05942347279932,
    "avg_bits_err_improve": -0.006852997304555686,
    "time": 16986.445556640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ x 1.0)) -1.0) 0.0) (/ (- (* (+ (cbrt (+ x 1.0)) -1.0) (+ (cbrt (+ x 1.0)) (cbrt x))) (* (+ (cbrt (+ x 1.0)) -1.0) (+ (cbrt x) (cbrt x)))) (+ (cbrt (+ x 1.0)) -1.0)) (- (cbrt (+ x 1.0)) (cbrt x)))",
    "output_parens": 29,
    "avg_bits_err_input": 30.197480960898407,
    "avg_bits_err_output": 30.219597178735768,
    "avg_bits_err_improve": -0.022116217837361063,
    "time": 11937.82470703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.07695533708086,
    "avg_bits_err_output": 30.07695533708086,
    "avg_bits_err_improve": 0,
    "time": 21186.30078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.3501025909059,
    "avg_bits_err_output": 34.3501025909059,
    "avg_bits_err_improve": 0,
    "time": 21085.599609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.77893227627691,
    "avg_bits_err_output": 33.77893227627691,
    "avg_bits_err_improve": 0,
    "time": 27212.546142578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.27502969496562,
    "avg_bits_err_output": 0.8776817819600102,
    "avg_bits_err_improve": 60.39734791300561,
    "time": 25492.71337890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (if (!= (* (fma n (- (log1p n) (log n)) (log1p n)) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 0.0) (- (/ 1.0 (/ (- (exp (log1p (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 1.0) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) 0.0) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 58,
    "avg_bits_err_input": 63.00398418059162,
    "avg_bits_err_output": 44.213596999268155,
    "avg_bits_err_improve": 18.790387181323467,
    "time": 17381.230224609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(if (!= (- -1.0 (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))))) 0.0) (/ (if (!= (- (- (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))) (- (* (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))) (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))))))) 0.0) (/ (- (* (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))) (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))) (* (- (* (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))) (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))))) (- (* (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))) (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))))))) (- (- (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))) (- (* (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))) (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))))))) (- (fma (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))) (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))) -1.0))) (- -1.0 (+ 1.0 (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0))))))) (log (+ (/ eps (- -1.0 eps)) (/ 1.0 (+ eps 1.0)))))",
    "output_parens": 135,
    "avg_bits_err_input": 58.60424749611224,
    "avg_bits_err_output": 58.61278806702526,
    "avg_bits_err_improve": -0.008540570913019963,
    "time": 14067.328857421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (- 1.0 (/ 1.0 (/ (tan x) x))) x)",
    "output_parens": 5,
    "avg_bits_err_input": 59.92112891366323,
    "avg_bits_err_output": 59.914398191829235,
    "avg_bits_err_improve": 0.006730721833996256,
    "time": 27027.24658203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.140743792295865,
    "avg_bits_err_output": 28.721120210688692,
    "avg_bits_err_improve": 31.419623581607173,
    "time": 26196.42431640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.01706065155699,
    "avg_bits_err_output": 0.3081462406251803,
    "avg_bits_err_improve": 40.70891441093181,
    "time": 3304.8056640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.7997733144941,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.7991483144941,
    "time": 2654.873291015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.25061422360539,
    "avg_bits_err_output": 0.021366638851527356,
    "avg_bits_err_improve": 29.22924758475386,
    "time": 3990.872314453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (+ (+ (* (exp x) (exp (- x))) (- (* (exp x) 4.0))) (* (exp x) 2.0))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 27,
    "avg_bits_err_input": 29.786134354770688,
    "avg_bits_err_output": 28.932628777578987,
    "avg_bits_err_improve": 0.8535055771917008,
    "time": 18770.359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ 0.0 (if (!= (/ 1.0 (+ x 1.0)) 0.0) (/ (if (!= (/ 1.0 (* (+ x 1.0) (+ x -1.0))) 0.0) (/ (fma (/ 1.0 (* (+ x 1.0) (+ x -1.0))) (/ 1.0 (* (+ x 1.0) (+ x -1.0))) (* (/ 1.0 (* (+ x 1.0) (+ x -1.0))) (/ (+ (/ -2.0 x) (/ 1.0 (+ x 1.0))) (+ x 1.0)))) (/ 1.0 (* (+ x 1.0) (+ x -1.0)))) (/ (+ (/ -2.0 x) (+ (/ 1.0 (+ x 1.0)) (/ 1.0 (+ x -1.0)))) (+ x 1.0))) (/ 1.0 (+ x 1.0))) (+ (/ 1.0 (+ x 1.0)) (+ (/ -2.0 x) (/ 1.0 (+ x -1.0))))))",
    "output_parens": 55,
    "avg_bits_err_input": 9.997585651399895,
    "avg_bits_err_output": 9.990949248174323,
    "avg_bits_err_improve": 0.0066364032255723515,
    "time": 28073.274658203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (+ (- (- (tan (+ x eps)) (tan x)) 0.0) (/ (fma (- (tan x)) (tan (+ x eps)) (* (tan (+ x eps)) (tan x))) (tan (+ x eps)))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 26,
    "avg_bits_err_input": 36.81786670156528,
    "avg_bits_err_output": 36.90891297002916,
    "avg_bits_err_improve": -0.09104626846387731,
    "time": 18437.61572265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (!= (sqrt (+ x 1.0)) 0.0) (if (!= (+ (sqrt (+ x 1.0)) (* (sqrt x) (/ (sqrt (+ x 1.0)) (sqrt (+ x 1.0))))) 0.0) (/ (+ (+ (* (sqrt (+ x 1.0)) (/ (* (sqrt x) (sqrt x)) (sqrt (+ x 1.0)))) (* (sqrt (+ x 1.0)) (- (sqrt (+ x 1.0)) (/ (* (sqrt x) (sqrt x)) (sqrt (+ x 1.0)))))) (* (sqrt (+ x 1.0)) (* (sqrt x) (/ (- (sqrt x)) (sqrt (+ x 1.0)))))) (+ (sqrt (+ x 1.0)) (* (sqrt x) (/ (sqrt (+ x 1.0)) (sqrt (+ x 1.0)))))) (* (- (sqrt (+ x 1.0)) (sqrt x)) (/ (sqrt (+ x 1.0)) (sqrt (+ x 1.0))))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 74,
    "avg_bits_err_input": 30.252629808651058,
    "avg_bits_err_output": 30.048621222583602,
    "avg_bits_err_improve": 0.20400858606745587,
    "time": 18952.5986328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (- (/ (sin (+ x eps)) (sin (+ x eps))) (/ (sin x) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 21,
    "avg_bits_err_input": 36.32264449718903,
    "avg_bits_err_output": 36.32646616138368,
    "avg_bits_err_improve": -0.003821664194646246,
    "time": 17986.1806640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) 0.0) (/ (+ 2.0 (/ 2.0 (sqrt (+ 1.0 x)))) (* (+ 2.0 (/ 2.0 (sqrt (+ 1.0 x)))) (sqrt (+ 1.0 x)))) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 24,
    "avg_bits_err_input": 19.81417387830634,
    "avg_bits_err_output": 19.80063595475045,
    "avg_bits_err_improve": 0.013537923555890785,
    "time": 13977.8837890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (+ (/ (/ (if (!= (* (atan (+ N 1.0)) (+ (atan N) (atan (+ N 1.0)))) 0.0) (/ (- (* (* (atan (+ N 1.0)) (+ (atan N) (atan (+ N 1.0)))) (* (atan N) (+ (atan N) (atan (+ N 1.0))))) (* (* (atan (+ N 1.0)) (+ (atan N) (atan (+ N 1.0)))) (* (atan (+ N 1.0)) (+ (atan N) (atan (+ N 1.0)))))) (* (atan (+ N 1.0)) (+ (atan N) (atan (+ N 1.0))))) (- (* (atan N) (atan N)) (* (atan (+ N 1.0)) (atan (+ N 1.0))))) (+ (atan (- N -1.0)) (atan N))) -2.0) (+ (/ (* (atan N) (- (atan N))) (+ (atan (- N -1.0)) (+ (atan (- N -1.0)) (+ (atan N) (atan N))))) (* (/ (atan (- N -1.0)) 2.0) (/ (atan (- N -1.0)) (+ (atan (- N -1.0)) (atan N)))))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 99,
    "avg_bits_err_input": 15.39863673234765,
    "avg_bits_err_output": 15.406503163468866,
    "avg_bits_err_improve": -0.0078664311212151,
    "time": 12678.320068359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(+ 1.0 (+ (log (+ (exp a) (exp b))) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 29.97896328006593,
    "avg_bits_err_output": 29.996857199856997,
    "avg_bits_err_improve": -0.017893919791067248,
    "time": 34368.872802734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07897149133190084,
    "avg_bits_err_output": 0.07544085226967129,
    "avg_bits_err_improve": 0.003530639062229557,
    "time": 9292.522705078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 15.903204116975754,
    "avg_bits_err_output": 0.3044578953169171,
    "avg_bits_err_improve": 15.598746221658837,
    "time": 10266.833251953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (- (* (/ PI angle) (/ 1.0 (* PI PI))) 0.0)) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.387206927066792,
    "avg_bits_err_output": 20.381427097101074,
    "avg_bits_err_improve": 0.005779829965717909,
    "time": 30040.886474609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (if (!= (+ (- (pow a 2.0) (pow b 2.0)) (* (- (pow a 2.0) (pow b 2.0)) (+ (sin (* PI (/ angle 180.0))) 1.0))) 0.0) (* (- (* (- (pow a 2.0) (pow b 2.0)) (+ (sin (* PI (/ angle 180.0))) 1.0)) (- (pow b 2.0) (pow a 2.0))) (* (expm1 (log1p (/ (- (pow a 2.0) (pow b 2.0)) (* (- (pow a 2.0) (pow b 2.0)) (+ 2.0 (sin (* PI (/ angle 180.0)))))))) (sin (* PI (/ angle 180.0))))) (* (sin (* PI (/ angle 180.0))) (- (pow a 2.0) (pow b 2.0)))) (* -2.0 (cos (* PI (/ angle 180.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 30.9352262690336,
    "avg_bits_err_output": 30.947027647172572,
    "avg_bits_err_improve": -0.011801378138972751,
    "time": 39348.5693359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.48632514778673,
    "avg_bits_err_output": 20.471371914947706,
    "avg_bits_err_improve": 0.014953232839022945,
    "time": 25046.656005859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18276502308887604,
    "avg_bits_err_output": 0.18223379506936926,
    "avg_bits_err_improve": 0.0005312280195067798,
    "time": 12363.90673828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3224571174867323,
    "avg_bits_err_output": 0.3125559392174768,
    "avg_bits_err_improve": 0.009901178269255462,
    "time": 17880.6689453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ (sin v) (+ 2.0 (* (* e (cos v)) 2.0))) (+ e e))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13652124062518028,
    "avg_bits_err_output": 0.1335212406251803,
    "avg_bits_err_improve": 0.002999999999999975,
    "time": 15042.5986328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.75292398859684,
    "avg_bits_err_output": 16.75184946268735,
    "avg_bits_err_improve": 0.0010745259094910864,
    "time": 31489.55419921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 30000000000000.0) (+ (* (/ (if (!= (- b) 0.0) (/ (if (!= (* b b) 0.0) (/ (fma (* b b) (* b b) (* (* b b) (* (sqrt (fma b b (* c (* a -4.0)))) (- b)))) (* b b)) (* b (- b (sqrt (fma b b (* c (* a -4.0))))))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (+ (/ (sqrt (fma a (* c -4.0) (* b b))) (* a 4.0)) (/ (- b) (* a 4.0)))) (/ (- (if (!= (+ b -1.0) 0.0) (/ (- (* (sqrt (fma a (* c -4.0) (* b b))) (+ b -1.0)) (* (+ b -1.0) (+ b -1.0))) (+ b -1.0)) (- (sqrt (fma a (* c -4.0) (* b b))) (+ b -1.0))) 1.0) (* a 2.0)))",
    "output_parens": 71,
    "avg_bits_err_input": 52.74444090573376,
    "avg_bits_err_output": 50.6107239510664,
    "avg_bits_err_improve": 2.1337169546673636,
    "time": 27656.517333984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))) (* b (- b))) (- (sqrt (fma a (* c -4.0) (* b b))) (- b))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 33,
    "avg_bits_err_input": 28.281940080108033,
    "avg_bits_err_output": 27.708320332911786,
    "avg_bits_err_improve": 0.573619747196247,
    "time": 31637.93359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (- b) (* a 2.0)) 0.0) (/ (fma (/ (- b) (* a 2.0)) (/ (- b) (* a 2.0)) (+ (* (* (/ b a) -0.5) (/ (- b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (* (* (/ b a) -0.5) (/ b (* a 2.0))))) (/ (- b) (* a 2.0))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 2.0)))",
    "output_parens": 39,
    "avg_bits_err_input": 44.09986219561546,
    "avg_bits_err_output": 43.25023717254123,
    "avg_bits_err_improve": 0.8496250230742248,
    "time": 28445.039794921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* b b) (* (* a c) -4.0)) 0.0) (* (fma 4.0 (* a c) (* b b)) (/ (+ (* b b) (* a (* c -4.0))) (- (* b b) (* (* a c) -4.0)))) (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 34.37159669082678,
    "avg_bits_err_output": 34.36510480387868,
    "avg_bits_err_improve": 0.006491886948097658,
    "time": 20937.3193359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (- (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)) 0.0) (/ (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (- (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (- (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.9558991854781022,
    "avg_bits_err_output": 0.960777212167576,
    "avg_bits_err_improve": -0.004878026689473791,
    "time": 23857.5107421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (+ 1.0 (* (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0))))) 0.0) (/ (if (!= (+ 1.0 (/ 16.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) 0.0) (/ (- 1.0 (/ (/ 256.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))) (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0)))) (+ 1.0 (/ 16.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))))) (- 1.0 (/ 16.0 (* (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0) (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))))) (+ 1.0 (/ 4.0 (+ 1.0 (* (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0)))))) (- 1.0 (/ 4.0 (+ 1.0 (* (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0)))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 125,
    "avg_bits_err_input": 30.090555670984433,
    "avg_bits_err_output": 30.04952865689999,
    "avg_bits_err_improve": 0.04102701408444176,
    "time": 25433.5498046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))) 0.0) (/ (- (* (/ (exp x) (+ (exp x) (exp (- x)))) (* (/ (exp x) (+ (exp x) (exp (- x)))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))))) (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 103,
    "avg_bits_err_input": 58.27648372474449,
    "avg_bits_err_output": 58.35493817892634,
    "avg_bits_err_improve": -0.07845445418185193,
    "time": 16960.925048828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.126209404233144,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 58.119584404233144,
    "time": 15897.616455078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.015559970711631062,
    "avg_bits_err_output": 0.015559970711631062,
    "avg_bits_err_improve": 0,
    "time": 1586.090087890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.17,
    "avg_bits_err_output": 32.17,
    "avg_bits_err_improve": 0,
    "time": 5295.411376953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (* (/ (- -1.0 x) (+ x -1.0)) (/ x (- 1.0 x))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 58.59154683982613,
    "avg_bits_err_output": 58.5949883178833,
    "avg_bits_err_improve": -0.0034414780571694337,
    "time": 20433.142578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.027521240625180292,
    "avg_bits_err_output": 0.027521240625180292,
    "avg_bits_err_improve": 0,
    "time": 3839.46044921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12882312031259016,
    "avg_bits_err_output": 0.12882312031259016,
    "avg_bits_err_improve": 0,
    "time": 23308.86767578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1260212406251803,
    "avg_bits_err_output": 0.1260212406251803,
    "avg_bits_err_improve": 0,
    "time": 12968.368896484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.80015680612026,
    "avg_bits_err_output": 3.7637794875901585,
    "avg_bits_err_improve": 35.03637731853011,
    "time": 25330.38037109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.633290516393384,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 14.625415516393383,
    "time": 6910.116943359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1623259767667463,
    "avg_bits_err_output": 0.15964670570445677,
    "avg_bits_err_improve": 0.0026792710622895177,
    "time": 35182.666015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (sqrt (fma b b (* a (* -3.0 c)))) (/ 0.3333333333333333 a)) 0.0) (- (/ (* (fma (sqrt (fma b b (* a (* -3.0 c)))) 0.3333333333333333 (/ b -3.0)) (/ (/ (* (sqrt (fma b b (* a (* -3.0 c)))) (/ 0.6666666666666666 a)) a) (/ 2.0 a))) (* (sqrt (fma b b (* a (* -3.0 c)))) 0.3333333333333333)) 0.0) (/ (fma (sqrt (fma b b (* a (* -3.0 c)))) 0.3333333333333333 (/ b -3.0)) a))",
    "output_parens": 38,
    "avg_bits_err_input": 52.72143720535621,
    "avg_bits_err_output": 50.59842441328882,
    "avg_bits_err_improve": 2.1230127920673922,
    "time": 28568.79638671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ (sqrt (fma c (* a -3.0) (* b b))) (- b (- (sqrt (fma c (* a -3.0) (* b b))))))) (* b (/ b (- (- b) (sqrt (fma c (* a -3.0) (* b b))))))) 0.0) (* (- (* (sqrt (fma c (* a -3.0) (* b b))) (log1p (expm1 (/ (sqrt (fma c (* a -3.0) (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b)))))))) (* b (/ b (- (- b) (sqrt (fma c (* a -3.0) (* b b))))))) (/ (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b))))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ (sqrt (fma c (* a -3.0) (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b)))))) (* b (/ b (- (- b) (sqrt (fma c (* a -3.0) (* b b))))))))) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 128,
    "avg_bits_err_input": 28.434287850800708,
    "avg_bits_err_output": 27.842241523552154,
    "avg_bits_err_improve": 0.5920463272485534,
    "time": 37296.32958984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- b) 0.0) (/ (fma b b (* (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- b)) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.163788074526806,
    "avg_bits_err_output": 43.17014819583261,
    "avg_bits_err_improve": 0.9936398786941965,
    "time": 24392.8447265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (/ (- b (sqrt (fma a (* c -3.0) (* b b)))) 3.0) (- a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.420186962105916,
    "avg_bits_err_output": 34.43695368480452,
    "avg_bits_err_improve": -0.016766722698605463,
    "time": 18680.495849609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (expm1 (log1p (* (cos (- lambda1 lambda2)) (sin phi1)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.414988571793534,
    "avg_bits_err_output": 13.421327227224468,
    "avg_bits_err_improve": -0.006338655430933926,
    "time": 31719.08154296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.565583672812078,
    "avg_bits_err_output": 25.11810702283373,
    "avg_bits_err_improve": 4.4474766499783485,
    "time": 18097.43701171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (/ (+ (/ 1.0 (+ x -1.0)) (/ (+ x x) (+ x (+ x 2.0)))) (+ x -1.0)) (/ 1.0 (+ x -1.0))) (+ (/ 1.0 (+ x -1.0)) (/ (+ x x) (+ x (+ x 2.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.012125,
    "avg_bits_err_output": 0.031137194065081898,
    "avg_bits_err_improve": -0.019012194065081898,
    "time": 6413.559814453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -9.5e+153) (/ 0.0 (+ x (+ x 2.0))) (if (<= x 9.5e+153) (/ (- (+ (/ -2.0 (+ x (+ x 2.0))) (/ (+ x x) (* (+ x (+ x 2.0)) (+ x -1.0)))) (/ -2.0 (* (+ x (+ x 2.0)) (+ x -1.0)))) -1.0) (/ 0.0 (+ x (+ x 2.0)))))",
    "output_parens": 27,
    "avg_bits_err_input": 14.508512973173719,
    "avg_bits_err_output": 13.102495532217066,
    "avg_bits_err_improve": 1.4060174409566528,
    "time": 17613.945556640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (+ (* F (* A (* C -8.0))) (* F (* 2.0 (pow B 2.0)))))) (- (* A (* C 4.0)) (pow B 2.0)))",
    "output_parens": 21,
    "avg_bits_err_input": 52.25923150834944,
    "avg_bits_err_output": 51.9641558872604,
    "avg_bits_err_improve": 0.2950756210890404,
    "time": 36909.71533203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 28.93617685401632,
    "avg_bits_err_output": 28.92042685544654,
    "avg_bits_err_improve": 0.0157499985697811,
    "time": 22400.9677734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(- (/ (sqrt (fma (* 2.0 C) (* (fma A (* C -4.0) (pow B 2.0)) F) (* (fma A (* C -4.0) (pow B 2.0)) (* F (* 2.0 (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (+ (pow B 2.0) (* (* A C) -4.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 52.02030090309533,
    "avg_bits_err_output": 51.80436211529206,
    "avg_bits_err_improve": 0.21593878780327458,
    "time": 40758.185302734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.826817317709503,
    "avg_bits_err_output": 15.826817317709503,
    "avg_bits_err_improve": 0,
    "time": 2232.1552734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- (sqrt (- (* g g) (* h h))) g) 0.0) (/ 1.0 (/ 1.0 (- (if (!= 0.0 0.0) (/ (* (sqrt (- (* g g) (* h h))) 0.0) 0.0) (sqrt (- (* g g) (* h h)))) g))) (- (sqrt (fma h (- h) (* g g))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 40,
    "avg_bits_err_input": 36.579882857277,
    "avg_bits_err_output": 36.55560185497392,
    "avg_bits_err_improve": 0.02428100230307706,
    "time": 18896.603515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9890996250072126,
    "avg_bits_err_output": 0.9754293234384918,
    "avg_bits_err_improve": 0.013670301568720844,
    "time": 6182.342529296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log (+ 1.0 (expm1 (/ (exp a) (+ (exp a) (exp b))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5879777323043995,
    "avg_bits_err_output": 0.683161113109899,
    "avg_bits_err_improve": -0.09518338080549948,
    "time": 3620.43310546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (/ (* a1 (/ a2 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-302) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+303) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 10.981464548096051,
    "avg_bits_err_output": 2.154025120291962,
    "avg_bits_err_improve": 8.827439427804089,
    "time": 11336.001708984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4043473413791487,
    "avg_bits_err_output": 0.365875,
    "avg_bits_err_improve": 0.03847234137914868,
    "time": 10198.601318359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- (hypot 1.0 x) x) 0.0) (/ (- (- (exp (log1p (* x x))) (* (hypot 1.0 x) (hypot 1.0 x))) 1.0) (- x (hypot 1.0 x))) (+ x (hypot 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 53.552911619301796,
    "avg_bits_err_output": 45.39694664773132,
    "avg_bits_err_improve": 8.155964971570477,
    "time": 20323.473876953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.661859374034152,
    "avg_bits_err_output": 5.661859374034152,
    "avg_bits_err_improve": 0,
    "time": 13204.32666015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- 1.0 (/ (+ x x) (+ 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01375,
    "avg_bits_err_output": 0.014674039677847346,
    "avg_bits_err_improve": -0.0009240396778473457,
    "time": 4806.051513671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1265.8125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (- (+ 3.0 (/ 2.0 (* r r))) (* (fma (* r w) (* r w) 0.0) (/ (* 0.125 (- 3.0 (* 2.0 v))) (- 1.0 v)))) 4.5)",
    "output_parens": 14,
    "avg_bits_err_input": 12.788903629004727,
    "avg_bits_err_output": 0.3657531968856375,
    "avg_bits_err_improve": 12.423150432119089,
    "time": 27101.174072265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (+ (* (* x1 x1) (* (/ (- x1 (fma x1 (* x1 3.0) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) (* (* (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (/ (* x1 2.0) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))))) (+ x1 x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.505693749776676,
    "avg_bits_err_output": 0.24888451237056503,
    "avg_bits_err_improve": 0.256809237406111,
    "time": 68000.28247070312,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(if (<= (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))) 0.0) (* (/ v (+ t1 u)) (/ (- t1) (+ t1 u))) (if (<= (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))) 2e+249) (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))) (* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))))",
    "output_parens": 34,
    "avg_bits_err_input": 18.173742226920712,
    "avg_bits_err_output": 1.1495708359096988,
    "avg_bits_err_improve": 17.024171391011013,
    "time": 5725.52490234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.262886842188131,
    "avg_bits_err_output": 0.262886842188131,
    "avg_bits_err_improve": 0,
    "time": 7027.088623046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 2325.32373046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) 2.0) (- b a)) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.359633506226235,
    "avg_bits_err_output": 0.2722771664573776,
    "avg_bits_err_improve": 14.087356339768856,
    "time": 16906.775634765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.37776484209796,
    "avg_bits_err_output": 24.676585847708747,
    "avg_bits_err_improve": 4.701178994389213,
    "time": 13986.73828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020875,
    "avg_bits_err_output": 0.020875,
    "avg_bits_err_improve": 0,
    "time": 3841.66748046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (/ (+ 2.0 (+ 2.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0)))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 0.022125,
    "avg_bits_err_output": 0.06849858974046881,
    "avg_bits_err_improve": -0.04637358974046881,
    "time": 8879.260986328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ (* 8.0 (* (/ t (+ 1.0 t)) (/ t (+ 1.0 t)))) 2.0) (+ 4.0 (- (+ 1.0 (* (* 8.0 (/ t (+ t 1.0))) (/ t (+ t 1.0)))) 1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.02375,
    "avg_bits_err_output": 0.007625,
    "avg_bits_err_improve": 0.016125,
    "time": 13941.259521484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3091.888671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2502.03173828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2810.959228515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.825823433141715,
    "avg_bits_err_output": 0.244,
    "avg_bits_err_improve": 7.581823433141715,
    "time": 21451.051513671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3515319460888335,
    "avg_bits_err_output": 7.3515319460888335,
    "avg_bits_err_improve": 0,
    "time": 51476.570068359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.847349048417943,
    "avg_bits_err_output": 15.847349048417943,
    "avg_bits_err_improve": 0,
    "time": 23687.911865234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (- (log (+ 1.0 (expm1 (+ (cos x) 1.0)))) 1.0) (if (!= (exp (* x (* x 10.0))) 0.0) (/ 1.0 (/ 1.0 (exp (* x (* x 10.0))))) (exp (* x (* x 10.0)))))",
    "output_parens": 20,
    "avg_bits_err_input": 3.5123727756933536,
    "avg_bits_err_output": 3.584973895276164,
    "avg_bits_err_improve": -0.07260111958281046,
    "time": 14657.55615234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.166612181515402,
    "avg_bits_err_output": 15.166612181515402,
    "avg_bits_err_improve": 0,
    "time": 15193.0283203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.42165213534209,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.42165213534209,
    "time": 4639.71337890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.114711767779134,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 39.114336767779136,
    "time": 4339.2421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.245125,
    "avg_bits_err_improve": 63.754875,
    "time": 24291.475341796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.843254462246236,
    "avg_bits_err_output": 0.403,
    "avg_bits_err_improve": 61.44025446224624,
    "time": 7368.212646484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.77893227627691,
    "avg_bits_err_output": 33.77893227627691,
    "avg_bits_err_improve": 0,
    "time": 28733.80859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* b b) (* (* a c) -4.0)) 0.0) (* (fma 4.0 (* a c) (* b b)) (/ (+ (* b b) (* a (* c -4.0))) (- (* b b) (* (* a c) -4.0)))) (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 34.37159669082678,
    "avg_bits_err_output": 34.36510480387868,
    "avg_bits_err_improve": 0.006491886948097658,
    "time": 23359.6357421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2045.55224609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.22072273549194,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 40.21109773549194,
    "time": 4363.979248046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.40656451780972,
    "avg_bits_err_output": 20.409472600623033,
    "avg_bits_err_improve": -0.0029080828133132286,
    "time": 7125.015380859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.671258470053417,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.671258470053417,
    "time": 9929.108642578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04025,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.03925,
    "time": 8118.126953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021219360937770434,
    "avg_bits_err_output": 0.0145,
    "avg_bits_err_improve": 0.006719360937770433,
    "time": 5187.135986328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x (* x x) (* x x))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.01475,
    "avg_bits_err_improve": -0.0002499999999999985,
    "time": 3474.985595703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1875.38232421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39365357187842565,
    "avg_bits_err_output": 0.245875,
    "avg_bits_err_improve": 0.14777857187842564,
    "time": 4640.077392578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 1.0 (cos x)) 0.0) (/ 1.0 (if (!= (exp (log1p (/ 1.0 (- 1.0 (cos x))))) 0.0) (/ (- (* (exp (log1p (/ 1.0 (- 1.0 (cos x))))) (exp (log1p (/ 1.0 (- 1.0 (cos x)))))) (- (- (expm1 (log1p (exp (log1p (* (+ 1.0 (/ 1.0 (- 1.0 (cos x)))) (+ 1.0 (/ 1.0 (- 1.0 (cos x))))))))) (* (/ 1.0 (- 1.0 (cos x))) (+ 1.0 (/ 1.0 (- 1.0 (cos x)))))) 1.0)) (exp (log1p (/ 1.0 (- 1.0 (cos x)))))) (/ 1.0 (- 1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 58,
    "avg_bits_err_input": 30.024454308598948,
    "avg_bits_err_output": 30.02445348638631,
    "avg_bits_err_improve": 8.222126375301286e-07,
    "time": 32547.2265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.370254713542884,
    "avg_bits_err_output": 24.370254713542884,
    "avg_bits_err_improve": 0,
    "time": 11138.6650390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (- (/ (- x (sin x)) (tan x)) (- 1.0 (+ 1.0 (/ (- x (sin x)) (tan x))))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 16,
    "avg_bits_err_input": 29.915080730161787,
    "avg_bits_err_output": 29.929420492717682,
    "avg_bits_err_improve": -0.014339762555895419,
    "time": 30650.43359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.007375,
    "time": 2356.7275390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -0.55) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 3.1e+147) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ i (expm1 (log1p (/ i (/ i n)))))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 83,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 44.12502264840107,
    "avg_bits_err_improve": 4.094936259660564,
    "time": 31190.918701171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 9,
    "avg_bits_err_input": 25.993224218479938,
    "avg_bits_err_output": 22.63184986297462,
    "avg_bits_err_improve": 3.361374355505319,
    "time": 12870.14208984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 25.82646100911031,
    "avg_bits_err_output": 22.884517428713156,
    "avg_bits_err_improve": 2.9419435803971545,
    "time": 13113.621337890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037375,
    "avg_bits_err_output": 0.02080641359472751,
    "avg_bits_err_improve": 0.01656858640527249,
    "time": 5334.29296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (if (!= (* ux ux) 0.0) (- (* (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (/ ux (* ux ux)))) (/ 2.0 (/ 2.0 (* ux ux)))) (- ux (fma ux ux (- (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) ux))))))",
    "output_parens": 33,
    "avg_bits_err_input": 13.446977237234336,
    "avg_bits_err_output": 0.5644649971318603,
    "avg_bits_err_improve": 12.882512240102475,
    "time": 28194.62841796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.488496597821669,
    "avg_bits_err_output": 0.31524797709408414,
    "avg_bits_err_improve": 13.173248620727584,
    "time": 28610.304931640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33099399119083023,
    "avg_bits_err_output": 0.3157737499644894,
    "avg_bits_err_improve": 0.015220241226340803,
    "time": 41215.224609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20555927976382687,
    "avg_bits_err_output": 0.20555927976382687,
    "avg_bits_err_improve": 0,
    "time": 19280.3447265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (expm1 (log1p (/ u1 (- 1.0 u1))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5456668669841892,
    "avg_bits_err_output": 0.5471979130715833,
    "avg_bits_err_improve": -0.0015310460873940723,
    "time": 19906.55224609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (+ 1.0 (expm1 (* 6.28318530718 u2))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3175356435446397,
    "avg_bits_err_output": 0.31957014606730205,
    "avg_bits_err_improve": -0.0020345025226623514,
    "time": 18520.39111328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (/ (/ (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0) (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s)))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 88,
    "avg_bits_err_input": 0.3393021149501038,
    "avg_bits_err_output": 0.3398731298194365,
    "avg_bits_err_improve": -0.0005710148693326977,
    "time": 56406.299072265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(expm1 (log1p (/ 1.0 (+ (exp (/ x (- s))) 1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06095025814003622,
    "avg_bits_err_output": 0.06608014564219965,
    "avg_bits_err_improve": -0.0051298875021634285,
    "time": 15797.247802734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13555194388532374,
    "avg_bits_err_output": 0.11540209042482251,
    "avg_bits_err_improve": 0.02014985346050123,
    "time": 21179.52880859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6725417830419382,
    "avg_bits_err_output": 0.6725417830419382,
    "avg_bits_err_improve": 0,
    "time": 20095.124267578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (+ (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) -1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1565655748760634,
    "avg_bits_err_output": 0.1571877096537676,
    "avg_bits_err_improve": -0.000622134777704203,
    "time": 26600.490478515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (+ (fma (/ (- sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) sinTheta_O (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (fma (/ (- sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) sinTheta_O (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))))",
    "output_parens": 34,
    "avg_bits_err_input": 2.5370615514369237,
    "avg_bits_err_output": 2.5354193634964544,
    "avg_bits_err_improve": 0.0016421879404693307,
    "time": 25662.283935546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* cosTheta_O (* (* cosTheta_i (/ (/ 0.5 v) (sinh (/ 1.0 v)))) (/ 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4635854936640751,
    "avg_bits_err_output": 0.36364626525294913,
    "avg_bits_err_improve": 0.09993922841112596,
    "time": 25117.445068359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.12413746575755602,
    "avg_bits_err_output": 0.12343580030294266,
    "avg_bits_err_improve": 0.0007016654546133649,
    "time": 9638.70361328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (- 1.0 (* alpha alpha)) (log (* alpha alpha))) (- PI)) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.45308520440294736,
    "avg_bits_err_output": 0.4699264112222977,
    "avg_bits_err_improve": -0.016841206819350363,
    "time": 23154.46923828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (- (+ (/ s -2.0) (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) s)) (- (- s) (/ s -2.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 1.3284716984949052,
    "avg_bits_err_output": 1.266349812118052,
    "avg_bits_err_improve": 0.06212188637685312,
    "time": 23093.84228515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (expm1 (log1p (log (/ 1.0 (+ 1.0 (* u -4.0)))))))",
    "output_parens": 7,
    "avg_bits_err_input": 12.48234462060713,
    "avg_bits_err_output": 12.491125503185673,
    "avg_bits_err_improve": -0.00878088257854337,
    "time": 27258.781982421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (- (* (exp (log1p (* 2.0 PI))) s) s))) (/ (* (exp (/ r (* s -3.0))) (/ 0.125 r)) (* s PI)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.14111506861303263,
    "avg_bits_err_output": 0.14098895674859616,
    "avg_bits_err_improve": 0.00012611186443647893,
    "time": 25427.27001953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle (- 1.0 u))) (sin normAngle)) n0_i (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9105841127247802,
    "avg_bits_err_output": 0.7353719420400662,
    "avg_bits_err_improve": 0.17521217068471406,
    "time": 24116.287353515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6943907046587724,
    "avg_bits_err_output": 0.4694998444497559,
    "avg_bits_err_improve": 0.2248908602090165,
    "time": 20010.283447265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (- (exp (log1p (sqrt (- (log (- 1.0 u1)))))) 1.0) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 11,
    "avg_bits_err_input": 13.523444399449476,
    "avg_bits_err_output": 13.560093935100543,
    "avg_bits_err_improve": -0.03664953565106721,
    "time": 24758.876953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (log (- 1.0 u1)) 0.0) (/ 1.0 (/ 1.0 (/ (- 1.0 (- (* (log (- 1.0 u1)) 2.0) -1.0)) -2.0))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 20,
    "avg_bits_err_input": 13.569321538697196,
    "avg_bits_err_output": 13.594591796962767,
    "avg_bits_err_improve": -0.0252702582655715,
    "time": 31939.996826171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (* alpha (- alpha)) (fma alpha alpha (* alpha (- alpha))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.36378234277145,
    "avg_bits_err_output": 14.305907326942869,
    "avg_bits_err_improve": 0.05787501582858212,
    "time": 21725.02587890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (expm1 (log (- 1.0 u0))))) (+ (/ (/ cos2phi alphax) alphax) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.555894410737363,
    "avg_bits_err_output": 12.558569250517627,
    "avg_bits_err_improve": -0.002674839780263838,
    "time": 18563.63671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+14) (- (* PI l) (* (* (/ 1.0 (- (* F F))) (- (- (/ 1.0 (* F F)) (- (/ 1.0 (* F F)) (* F (/ F (* F F))))))) (tan (* PI l)))) (if (<= (* PI l) 5e-7) (- (* PI l) (* (/ (tan (* PI l)) F) (/ 1.0 F))) (- (* PI l) (* (* (/ 1.0 (- (* F F))) (- (- (/ 1.0 (* F F)) (- (/ 1.0 (* F F)) (* F (/ F (* F F))))))) (tan (* PI l))))))",
    "output_parens": 51,
    "avg_bits_err_input": 15.773801323529252,
    "avg_bits_err_output": 8.118161210594366,
    "avg_bits_err_improve": 7.655640112934886,
    "time": 20415.118896484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21324615082787057,
    "avg_bits_err_output": 0.15438054926491981,
    "avg_bits_err_improve": 0.05886560156295076,
    "time": 16123.15625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.305414975164256,
    "avg_bits_err_output": 10.04198722875009,
    "avg_bits_err_improve": 3.263427746414166,
    "time": 22972.457763671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 0.0) (/ (- (* (* (if (!= (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) 0.0) (/ 1.0 (/ 1.0 (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 188,
    "avg_bits_err_input": 61.495448534344035,
    "avg_bits_err_output": 61.511449980717856,
    "avg_bits_err_improve": -0.016001446373820727,
    "time": 107578.75415039062,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.08167959874521,
    "avg_bits_err_output": 33.74364180171359,
    "avg_bits_err_improve": 9.338037797031618,
    "time": 29697.378662109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.7811349724727923,
    "avg_bits_err_output": 3.7811349724727923,
    "avg_bits_err_improve": 0,
    "time": 27115.450927734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9849839384753238,
    "avg_bits_err_output": 0.9785803826382192,
    "avg_bits_err_improve": 0.006403555837104613,
    "time": 10529.89208984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (if (!= (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)) 0.0) (- (/ (pow (/ Om Omc) 2.0) (- -1.0 (* 2.0 (pow (/ t l) 2.0)))) (/ (pow (/ Om Omc) 2.0) (- (- (pow (/ Om Omc) 2.0)) (* (pow (/ Om Omc) 2.0) (* 2.0 (pow (/ t l) 2.0)))))) (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 10.050605001670776,
    "avg_bits_err_improve": -0.009334182950617276,
    "time": 30276.216064453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -4.5e+65) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U 2.5e-272) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (sqrt (if (!= (* (* n U) (* -2.0 (fma l (* l (/ 2.0 Om)) (- t)))) 0.0) (* (* 2.0 (* (* n U) (- t (fma 2.0 (* l (/ l Om)) (* n (* (pow (/ l Om) 2.0) (- U U*))))))) (- (* U (/ n (* n U))) (/ 0.0 (fma (/ 2.0 Om) (* l l) (- t))))) (* 2.0 (* (* n U) (- t (fma 2.0 (* l (/ l Om)) (* n (* (pow (/ l Om) 2.0) (- U U*)))))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.158295003873945,
    "avg_bits_err_output": 30.40017048235669,
    "avg_bits_err_improve": 3.7581245215172565,
    "time": 35936.6904296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.65e-108) (/ 2.0 (/ (* (pow (/ k t) 2.0) (fma (* (pow t 3.0) (/ (sin k) l)) (tan k) 0.0)) l)) (if (<= t 1.82e-91) (/ 2.0 (* (pow (/ k t) 2.0) (+ (fma (- (/ (sin k) l)) (tan k) (* (sin k) (/ (tan k) l))) (* (/ (pow t 3.0) l) (* (sin k) (/ (tan k) l)))))) (/ 2.0 (* (* (pow (/ k t) 2.0) (/ (pow t 3.0) l)) (* (sin k) (/ (tan k) l))))))",
    "output_parens": 47,
    "avg_bits_err_input": 47.94815009988665,
    "avg_bits_err_output": 30.84124453926364,
    "avg_bits_err_improve": 17.106905560623005,
    "time": 50464.55029296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (/ (pow t 3.0) l) (* (sin k) (+ 2.0 (pow (/ k t) 2.0)))) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 33.04164693993361,
    "avg_bits_err_output": 28.56224863453558,
    "avg_bits_err_improve": 4.479398305398025,
    "time": 21431.115234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (/ (+ (+ (* a1 a1) (* a2 (/ a2 2.0))) (* a2 (/ a2 2.0))) (sqrt 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5554900406482592,
    "avg_bits_err_output": 0.5083152281446534,
    "avg_bits_err_improve": 0.04717481250360589,
    "time": 22052.318359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5035408448820499,
    "avg_bits_err_output": 0.459120923777458,
    "avg_bits_err_improve": 0.044419921104591864,
    "time": 19503.6201171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (- (* (* (exp l) J) (cos (/ K 2.0))) (* J (* (exp (- l)) (cos (/ K 2.0))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.975882678524336,
    "avg_bits_err_output": 17.99734323473083,
    "avg_bits_err_improve": -0.02146055620649534,
    "time": 24311.627197265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.11939821613272,
    "avg_bits_err_output": 15.11939821613272,
    "avg_bits_err_improve": 0,
    "time": 19104.692138671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* -2.0 (* (* J (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* 2.0 (* J (cos (/ K 2.0))))) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.053417481250364,
    "avg_bits_err_output": 18.053417481250364,
    "avg_bits_err_improve": 0,
    "time": 30717.97265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.461150724602188,
    "avg_bits_err_output": 11.098913593666635,
    "avg_bits_err_improve": 3.3622371309355525,
    "time": 29421.31787109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -4e+223) (* c0 (sqrt (+ (/ (/ A (+ l l)) (+ V V)) (/ (+ (/ A l) (/ A (+ l l))) (+ V V))))) (if (<= (* V l) -5e-128) (* c0 (sqrt (* (/ (/ 2.0 l) V) (/ A 2.0)))) (if (<= (* V l) 2e-286) (* c0 (sqrt (/ (* A (/ 2.0 l)) (+ V V)))) (if (<= (* V l) 5e+177) (* c0 (sqrt (* (/ (/ 2.0 l) V) (/ A 2.0)))) (* c0 (sqrt (+ (/ (/ (+ A (+ A A)) V) (+ (+ l l) (+ l l))) (/ (/ A (+ V V)) (+ l l)))))))))",
    "output_parens": 57,
    "avg_bits_err_input": 18.365234728141775,
    "avg_bits_err_output": 13.881033340064535,
    "avg_bits_err_improve": 4.48420138807724,
    "time": 17517.889404296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= c0 -6.2e-181) (* (/ c0 (* 2.0 w)) (+ (* c0 (* (/ d D) (/ d (* D (* w h))))) (sqrt (* (fma c0 (* (/ d D) (/ d (* D (* w h)))) M) (fma c0 (* (/ d D) (/ d (* D (* w h)))) (- M)))))) (if (<= c0 1e-292) (/ (/ (* c0 (fma d (* (/ d D) (/ (/ c0 (* w h)) D)) (sqrt (* (fma (/ d D) (* d (/ (/ c0 (* w h)) D)) M) (fma (/ d D) (* d (/ (/ c0 (* w h)) D)) (- M)))))) w) 2.0) (fma (* (/ c0 2.0) (/ (sqrt (* (fma (* d (/ d D)) (/ c0 (* h (* D w))) M) (- (* (* d (/ d D)) (/ c0 (* h (* D w)))) M))) w)) 1.0 (* (* (* d (/ d D)) (/ c0 (* h (* D w)))) (/ c0 (* w 2.0))))))",
    "output_parens": 81,
    "avg_bits_err_input": 59.66478830287663,
    "avg_bits_err_output": 55.021251740769266,
    "avg_bits_err_improve": 4.643536562107364,
    "time": 47749.356201171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) -1e+177) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* (* (pow (* M (/ D (* 2.0 d))) 2.0) 0.5) (* (pow (/ d h) 0.5) (* (/ h l) (pow (/ d l) 0.5))))) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (* h (pow (/ d h) 0.5)) (* (pow (* D (/ M (+ d d))) 2.0) (* 0.5 (pow (/ d l) 0.5)))) l)))",
    "output_parens": 54,
    "avg_bits_err_input": 26.39968467194701,
    "avg_bits_err_output": 25.512986346375378,
    "avg_bits_err_improve": 0.8866983255716328,
    "time": 40389.751953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (- (- 1.0 (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 2.0)) (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.823127177455826,
    "avg_bits_err_output": 15.366349660427115,
    "avg_bits_err_improve": 0.4567775170287103,
    "time": 18809.015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 1.3333333333333333 (* (* PI (- 1.0 (* v v))) (sqrt (- 2.0 (* v (* v 6.0))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9849481203125902,
    "avg_bits_err_output": 0.013344360937770436,
    "avg_bits_err_improve": 0.9716037593748197,
    "time": 5374.94384765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- (fma v (* v 5.0) -1.0)) PI) (- t (* v (* v t)))) (sqrt (- 2.0 (* v (* v 6.0))))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.45465630542840224,
    "avg_bits_err_output": 0.26437744375108174,
    "avg_bits_err_improve": 0.1902788616773205,
    "time": 19610.499267578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (- (sqrt 2.0) (* (sqrt 2.0) (* v v))) 4.0) (sqrt (fma v (* v -3.0) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011594360937770434,
    "avg_bits_err_output": 0.009948120312590146,
    "avg_bits_err_improve": 0.001646240625180288,
    "time": 6580.854736328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.540316684964843,
    "avg_bits_err_output": 0.540316684964843,
    "avg_bits_err_improve": 0,
    "time": 13413.85693359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1102546721326263,
    "avg_bits_err_output": 2.0755353111948556,
    "avg_bits_err_improve": 0.03471936093777073,
    "time": 14022.9951171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)) 1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01231245750865524,
    "avg_bits_err_output": 0.01231245750865524,
    "avg_bits_err_improve": 0,
    "time": 10725.392333984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17756308742908467,
    "avg_bits_err_output": 0.17756308742908467,
    "avg_bits_err_improve": 0,
    "time": 14976.069091796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18674727088642265,
    "avg_bits_err_output": 0.18674727088642265,
    "avg_bits_err_improve": 0,
    "time": 4683.387939453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (if (!= (* b (* b (+ 3.0 a))) 0.0) (/ 1.0 (/ (/ 1.0 (* b b)) (+ 3.0 a))) (* b (* b (+ 3.0 a))))))) 1.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.19231989481123013,
    "avg_bits_err_output": 0.19319489481123014,
    "avg_bits_err_improve": -0.0008750000000000147,
    "time": 20575.655517578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (if (!= (* x x) 0.0) (* (/ x (/ 1.0 (/ -1.0 x))) (- (fma x x (* 4.0 (* p p))))) (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 12.608469703750725,
    "avg_bits_err_output": 12.85784909426631,
    "avg_bits_err_improve": -0.24937939051558544,
    "time": 16259.56689453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (/ (/ (expm1 (* 2.0 x)) (expm1 x)) (expm1 x)) (/ 1.0 (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 41.431867444974664,
    "avg_bits_err_output": 0.059,
    "avg_bits_err_improve": 41.372867444974666,
    "time": 7579.14794921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (/ x (- (tan x) x)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.18348031684792,
    "avg_bits_err_output": 32.16341684879651,
    "avg_bits_err_improve": 0.02006346805141135,
    "time": 17269.31640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.63248713143524,
    "avg_bits_err_output": 33.63248713143524,
    "avg_bits_err_improve": 0,
    "time": 13816.206298828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.83693593573938,
    "avg_bits_err_output": 33.83693593573938,
    "avg_bits_err_improve": 0,
    "time": 17912.802001953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 30.972926340166577,
    "avg_bits_err_output": 30.19597706644041,
    "avg_bits_err_improve": 0.7769492737261672,
    "time": 16814.61181640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (pow x (/ 1.0 n)) 0.0) (if (!= (* (pow x (/ 1.0 n)) (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n)))) 0.0) (/ (if (!= (- (* (pow (+ 1.0 x) (/ 1.0 n)) (* (pow x (/ 1.0 n)) (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n))))) (* (pow x (/ 1.0 n)) (* (pow x (/ 1.0 n)) (- (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n))))))) 0.0) (/ (* (* (pow x (/ 1.0 n)) (* (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) (* (* (pow x (/ 1.0 n)) (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n)))) (+ (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))) (- (* (pow (+ 1.0 x) (/ 1.0 n)) (* (pow x (/ 1.0 n)) (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n))))) (* (pow x (/ 1.0 n)) (* (pow x (/ 1.0 n)) (- (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n)))))))) (* (pow x (/ 1.0 n)) (* (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))))) (* (pow x (/ 1.0 n)) (/ (pow x (/ 1.0 n)) (pow x (/ 1.0 n))))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 134,
    "avg_bits_err_input": 32.80354560491808,
    "avg_bits_err_output": 32.82642987130872,
    "avg_bits_err_improve": -0.022884266390640562,
    "time": 24301.626220703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (if (!= (+ (log1p N) -2.0) 0.0) (/ (+ (* (+ (log1p N) -1.0) (+ (log1p N) -1.0)) -1.0) (+ (log1p N) -2.0)) (log1p N)) (log N))",
    "output_parens": 16,
    "avg_bits_err_input": 29.60636451278117,
    "avg_bits_err_output": 29.62303485319741,
    "avg_bits_err_improve": -0.016670340416240492,
    "time": 12540.44091796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (/ -0.5 x) (/ 0.5 (+ x 1.0))) (/ (+ 1.0 (/ (- x) (+ x 1.0))) (+ x x)))",
    "output_parens": 11,
    "avg_bits_err_input": 14.483121854825036,
    "avg_bits_err_output": 14.464070092168917,
    "avg_bits_err_improve": 0.019051762656118854,
    "time": 15477.312255859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (log (+ 1.0 (expm1 (- 1.0 (cos x))))) (+ (cos (+ x eps)) -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 39.31030765211852,
    "avg_bits_err_output": 39.33819188867624,
    "avg_bits_err_improve": -0.027884236557724762,
    "time": 16007.356689453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.89126835068925,
    "avg_bits_err_output": 29.89126835068925,
    "avg_bits_err_improve": 0,
    "time": 10641.197998046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.11700333397715,
    "avg_bits_err_output": 30.11700333397715,
    "avg_bits_err_improve": 0,
    "time": 21221.036865234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* a (* c 4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.32765323271245,
    "avg_bits_err_output": 34.33133773121742,
    "avg_bits_err_improve": -0.003684498504966882,
    "time": 25729.369873046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.79028626161961,
    "avg_bits_err_output": 33.819535236733316,
    "avg_bits_err_improve": -0.029248975113702613,
    "time": 23344.005126953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.43207225054348,
    "avg_bits_err_output": 0.8421744423602281,
    "avg_bits_err_improve": 60.58989780818325,
    "time": 24459.31640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.00466487177278,
    "avg_bits_err_output": 44.22976739736848,
    "avg_bits_err_improve": 18.774897474404305,
    "time": 11408.664794921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (+ 1.0 (expm1 (expm1 (log (/ (- 1.0 eps) (- eps -1.0))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.596153017157654,
    "avg_bits_err_output": 58.60205894028946,
    "avg_bits_err_improve": -0.005905923131805935,
    "time": 17391.843505859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(log (exp (/ (- 1.0 (/ x (tan x))) x)))",
    "output_parens": 6,
    "avg_bits_err_input": 59.85900928057009,
    "avg_bits_err_output": 59.84467520249787,
    "avg_bits_err_improve": 0.014334078072224088,
    "time": 27568.34521484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.058192328871215,
    "avg_bits_err_output": 28.63822003420981,
    "avg_bits_err_improve": 31.419972294661406,
    "time": 25513.01953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.789398730570014,
    "avg_bits_err_output": 0.3798443609377704,
    "avg_bits_err_improve": 41.40955436963225,
    "time": 7651.012939453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.5733929586296,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.5727679586296,
    "time": 4410.323486328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.440749570452372,
    "avg_bits_err_output": 0.01680195072789178,
    "avg_bits_err_improve": 29.42394761972448,
    "time": 4567.3310546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (- (exp (- x)) (- (* (exp x) 2.0) (* (exp (- x)) (expm1 x))))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 29.261318308666194,
    "avg_bits_err_output": 28.61585217934525,
    "avg_bits_err_improve": 0.645466129320944,
    "time": 15340.62548828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.8563395808831,
    "avg_bits_err_output": 9.8563395808831,
    "avg_bits_err_improve": 0,
    "time": 29387.280029296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.53202988348641,
    "avg_bits_err_output": 37.53202988348641,
    "avg_bits_err_improve": 0,
    "time": 17676.0693359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (if (!= (sqrt (+ x 1.0)) 0.0) (/ (- (exp (log1p (* (sqrt (+ x 1.0)) (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))))) 1.0) (sqrt (+ x 1.0))) (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))))",
    "output_parens": 24,
    "avg_bits_err_input": 29.986196283008077,
    "avg_bits_err_output": 29.217351661377197,
    "avg_bits_err_improve": 0.7688446216308797,
    "time": 17244.307373046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (if (!= (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps))) 0.0) (/ (* (sin (+ x eps)) (- (* (sin (+ x eps)) (/ (sin (+ x eps)) (sin (+ x eps)))) (/ (* (sin x) (* (sin x) (/ (sin (+ x eps)) (sin (+ x eps))))) (sin (+ x eps))))) (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps)))) (* (- (sin (+ x eps)) (sin x)) (/ (sin (+ x eps)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 65,
    "avg_bits_err_input": 36.6590889673482,
    "avg_bits_err_output": 36.68065254592529,
    "avg_bits_err_improve": -0.021563578577094233,
    "time": 19261.430419921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(if (!= (+ (/ 1.0 (sqrt (+ 1.0 x))) (/ 1.0 (sqrt x))) 0.0) (/ (+ (+ (/ (/ 1.0 (sqrt x)) (sqrt x)) (/ (/ -1.0 (sqrt (+ 1.0 x))) (sqrt (+ 1.0 x)))) (/ (fma (/ (/ -1.0 (sqrt (+ 1.0 x))) (sqrt (+ 1.0 x))) (/ (/ 1.0 (sqrt x)) (sqrt x)) (/ (/ (/ (/ 1.0 (sqrt x)) (sqrt x)) (sqrt (+ 1.0 x))) (sqrt (+ 1.0 x)))) (/ (/ 1.0 (sqrt x)) (sqrt x)))) (+ (/ 1.0 (sqrt (+ 1.0 x))) (/ 1.0 (sqrt x)))) (+ (/ 1.0 (sqrt x)) (/ -1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 59,
    "avg_bits_err_input": 19.679766766756835,
    "avg_bits_err_output": 19.68860491606714,
    "avg_bits_err_improve": -0.008838149310303578,
    "time": 11863.75634765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.616473437918307,
    "avg_bits_err_output": 14.616473437918307,
    "avg_bits_err_improve": 0,
    "time": 3500.558837890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (+ (log (+ (exp a) (exp b))) 1.0) 0.0) (/ (log (+ 1.0 (expm1 (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 1.0))))) (+ (log (+ (exp a) (exp b))) 1.0)) (log (+ (exp a) (exp b))))",
    "output_parens": 30,
    "avg_bits_err_input": 30.030601608617232,
    "avg_bits_err_output": 30.31133538287665,
    "avg_bits_err_improve": -0.28073377425941715,
    "time": 39743.33251953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(+ -1.0 (+ (* (/ m v) (- (- (* m m) m) (+ m -1.0))) m))",
    "output_parens": 8,
    "avg_bits_err_input": 0.07089868437626201,
    "avg_bits_err_output": 0.08664343629957882,
    "avg_bits_err_improve": -0.015744751923316813,
    "time": 12651.92041015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (/ a (/ -1.0 b)) (* b a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.438582997518917,
    "avg_bits_err_output": 0.27797669219101545,
    "avg_bits_err_improve": 16.160606305327903,
    "time": 9730.789306640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ PI 180.0) angle))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.63888738572131,
    "avg_bits_err_output": 20.611279822759382,
    "avg_bits_err_improve": 0.027607562961929233,
    "time": 24702.7451171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (sin (* PI (/ angle 180.0))) (- (+ (pow b 2.0) (pow b 2.0)) (pow a 2.0))) (* (pow a 2.0) (sin (* PI (/ angle 180.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 31.005119747765104,
    "avg_bits_err_output": 30.979706828603632,
    "avg_bits_err_improve": 0.025412919161471592,
    "time": 32598.08251953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (expm1 (log1p (sin (* angle (/ PI 180.0)))))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.73157717929106,
    "avg_bits_err_output": 20.691346727919882,
    "avg_bits_err_improve": 0.040230451371179754,
    "time": 28712.593994140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- m (* m m)) (/ m v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1753656015629507,
    "avg_bits_err_output": 0.1767926847629426,
    "avg_bits_err_improve": -0.0014270831999919076,
    "time": 15597.11376953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (- (tan x)) 1.0) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.337931329582567,
    "avg_bits_err_output": 0.321403294084734,
    "avg_bits_err_improve": 0.016528035497832994,
    "time": 16280.4130859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (+ (/ (+ e (+ e e)) (* (* (fma e (cos v) 1.0) 2.0) 2.0)) (/ e (* (* (fma e (cos v) 1.0) 2.0) 2.0))) (sin v))",
    "output_parens": 15,
    "avg_bits_err_input": 0.13375,
    "avg_bits_err_output": 0.1341674812503606,
    "avg_bits_err_improve": -0.0004174812503605907,
    "time": 15866.5029296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (log (+ 1.0 (if (!= (exp (* (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2)))) 0.0) (/ (+ (* (exp (* (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2)))) (exp (* (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2))))) (- (exp (* (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2)))))) (exp (* (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2))))) (expm1 (* (cos (- lambda1 lambda2)) (* (cos phi1) (cos phi2))))))))) R)",
    "output_parens": 55,
    "avg_bits_err_input": 17.303448346569223,
    "avg_bits_err_output": 17.62804600666257,
    "avg_bits_err_improve": -0.324597660093346,
    "time": 32821.213134765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 7.2e+15) (if (!= (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) 0.0) (/ 2.0 (/ 4.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (* 0.5 (if (!= (/ b a) 0.0) (fma (sqrt (fma a (* c -4.0) (* b b))) (/ b (* a b)) (/ 1.0 (/ -1.0 (/ b a)))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a)))) (/ (- (- (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 48,
    "avg_bits_err_input": 52.41704766489184,
    "avg_bits_err_output": 50.2978320751337,
    "avg_bits_err_improve": 2.1192155897581415,
    "time": 26301.563720703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* -0.5 (/ b a)) 0.0) (/ (/ (* (if (!= (+ b (sqrt (fma -4.0 (* c a) (* b b)))) 0.0) (/ (fma (sqrt (fma -4.0 (* c a) (* b b))) (sqrt (fma -4.0 (* c a) (* b b))) (* b (- b))) (+ b (sqrt (fma -4.0 (* c a) (* b b))))) (- (sqrt (fma -4.0 (* c a) (* b b))) b)) (* b -0.5)) (* a a)) (* (/ b a) -1.0)) (* 0.5 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a)))",
    "output_parens": 47,
    "avg_bits_err_input": 28.070033190974513,
    "avg_bits_err_output": 27.53484072441236,
    "avg_bits_err_improve": 0.5351924665621546,
    "time": 21773.911865234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (fma b (+ b (sqrt (fma b b (* a (* c -4.0))))) (- (* (sqrt (fma b b (* a (* c -4.0)))) (+ b (sqrt (fma b b (* a (* c -4.0)))))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 39,
    "avg_bits_err_input": 44.1178578555359,
    "avg_bits_err_output": 43.108263890094086,
    "avg_bits_err_improve": 1.009593965441816,
    "time": 38690.36865234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.33352993524726,
    "avg_bits_err_output": 34.33352993524726,
    "avg_bits_err_improve": 0,
    "time": 18774.427734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))) 0.0) (* (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))) (/ (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)) (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.8863062573141274,
    "avg_bits_err_output": 0.8963865843568655,
    "avg_bits_err_improve": -0.010080327042738091,
    "time": 23149.16748046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (- 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 30,
    "avg_bits_err_input": 29.548493054417236,
    "avg_bits_err_output": 29.543292040423253,
    "avg_bits_err_improve": 0.0052010139939824285,
    "time": 20401.62109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))) 0.0) (/ (- (* (/ (exp x) (+ (exp x) (exp (- x)))) (* (/ (exp x) (+ (exp x) (exp (- x)))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))))) (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 103,
    "avg_bits_err_input": 58.16080974381946,
    "avg_bits_err_output": 58.196247896538516,
    "avg_bits_err_improve": -0.035438152719052596,
    "time": 17460.937255859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.911683130642594,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 57.903808130642595,
    "time": 11530.007080078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.00827124062518029,
    "avg_bits_err_output": 0.00827124062518029,
    "avg_bits_err_improve": 0,
    "time": 1986.586181640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.5055,
    "avg_bits_err_output": 31.5055,
    "avg_bits_err_improve": 0,
    "time": 5641.895263671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.581499101870136,
    "avg_bits_err_output": 0.018740601562950723,
    "avg_bits_err_improve": 58.56275850030718,
    "time": 22883.36279296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0595,
    "avg_bits_err_output": 0.05907312031259015,
    "avg_bits_err_improve": 0.00042687968740984933,
    "time": 3680.55126953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* eh (* (cos t) (sin (atan (/ eh (* ew (tan t)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13082312031259016,
    "avg_bits_err_output": 0.12882312031259016,
    "avg_bits_err_improve": 0.0020000000000000018,
    "time": 24251.614990234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13344812031259015,
    "avg_bits_err_output": 0.1335,
    "avg_bits_err_improve": -5.1879687409855935e-05,
    "time": 27355.7763671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.331420605937446,
    "avg_bits_err_output": 3.889548600518053,
    "avg_bits_err_improve": 35.44187200541939,
    "time": 24520.763427734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 13.897197625531357,
    "avg_bits_err_output": 13.897197625531357,
    "avg_bits_err_improve": 0,
    "time": 4396.926025390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (fma (sin phi1) (- (sin (asin (expm1 (log1p (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1))))))))) (cos delta))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.15194354739338634,
    "avg_bits_err_output": 0.1577403153712512,
    "avg_bits_err_improve": -0.005796767977864853,
    "time": 33369.1826171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (- (* (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a)) (/ (+ b b) (* a -6.0))) 0.0) (/ (fma (/ 0.3333333333333333 (fabs a)) (* (sqrt (fma a (* c -3.0) (* b b))) (* (sqrt (fma a (* c -3.0) (* b b))) (/ 0.3333333333333333 (fabs a)))) (* (/ (+ b b) 36.0) (/ (/ (+ b b) a) (- a)))) (- (* (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a)) (/ (+ b b) (* a -6.0)))) (/ (fma (sqrt (fma b b (* a (* c -3.0)))) 2.0 (* b -2.0)) (* a 6.0)))",
    "output_parens": 53,
    "avg_bits_err_input": 52.43019930029488,
    "avg_bits_err_output": 50.68666847795258,
    "avg_bits_err_improve": 1.7435308223423007,
    "time": 30304.593017578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 32,
    "avg_bits_err_input": 28.225461096610402,
    "avg_bits_err_output": 27.674267579912357,
    "avg_bits_err_improve": 0.5511935166980457,
    "time": 31240.6279296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (if (!= (- (* b b) (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) 0.0) (/ (- (* (* b b) (* b b)) (* (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))))) (- (* b b) (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 101,
    "avg_bits_err_input": 44.135650546231574,
    "avg_bits_err_output": 43.02400191879774,
    "avg_bits_err_improve": 1.111648627433837,
    "time": 40448.658447265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 3.0)",
    "output_parens": 7,
    "avg_bits_err_input": 34.36338207535971,
    "avg_bits_err_output": 34.382926059206774,
    "avg_bits_err_improve": -0.019543983847064794,
    "time": 20117.994873046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (if (!= (* (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0) (sin phi1)) 0.0) (* (* (* (cos (- lambda1 lambda2)) (cos phi2)) (* (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0) (sin phi1))) (/ (sin phi1) (* (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0) (sin phi1)))) (* (cos (- lambda1 lambda2)) (* (cos phi2) (sin phi1))))))",
    "output_parens": 43,
    "avg_bits_err_input": 12.574238166279743,
    "avg_bits_err_output": 12.58516604179206,
    "avg_bits_err_improve": -0.010927875512317442,
    "time": 32353.526123046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 28.480170105057223,
    "avg_bits_err_output": 0.5084651304555159,
    "avg_bits_err_improve": 27.971704974601707,
    "time": 18160.537353515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (/ x (+ x (+ x 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.0584472178141021,
    "avg_bits_err_improve": -0.0444472178141021,
    "time": 4103.8359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (- 1.0 (/ x (+ -1.0 x))) (/ -1.0 (+ -1.0 x))) (+ 1.0 x))",
    "output_parens": 8,
    "avg_bits_err_input": 14.24985535555293,
    "avg_bits_err_output": 12.378409067052562,
    "avg_bits_err_improve": 1.8714462885003673,
    "time": 16191.8037109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (fma (fma 2.0 (pow B 2.0) (* A (* C -8.0))) (* F (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) 0.0)) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 52.29320011853661,
    "avg_bits_err_output": 51.98221193006769,
    "avg_bits_err_improve": 0.31098818846891874,
    "time": 38270.8447265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(/ (if (!= (* (atan (/ (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) B)) 180.0) 0.0) (/ (* (* (atan (/ (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) B)) 180.0) (* (atan (/ (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) B)) 180.0)) (* (atan (/ (- C (+ A (if (!= (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) 0.0) (/ 1.0 (/ 1.0 (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) B)) 180.0)) (* (atan (/ (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) B)) 180.0)) PI)",
    "output_parens": 69,
    "avg_bits_err_input": 29.835945267164455,
    "avg_bits_err_output": 30.475573176775804,
    "avg_bits_err_improve": -0.6396279096113489,
    "time": 32068.49267578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* 2.0 (* (* F (- (pow B 2.0) (* 4.0 (* A C)))) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.51048112459206,
    "avg_bits_err_output": 52.180036841193704,
    "avg_bits_err_improve": 0.3304442833983572,
    "time": 35482.2939453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.627804421622432,
    "avg_bits_err_output": 15.627804421622432,
    "avg_bits_err_improve": 0,
    "time": 2275.8291015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (+ g (sqrt (fma g g (* h (- h))))) 0.0) (/ (- (* (sqrt (fma g g (* h (- h)))) (sqrt (fma g g (* h (- h))))) (* g g)) (+ g (sqrt (fma g g (* h (- h)))))) (- (sqrt (fma g g (* h (- h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 36.08011519144055,
    "avg_bits_err_output": 36.04212079576282,
    "avg_bits_err_improve": 0.03799439567772822,
    "time": 17696.29638671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9912152265701634,
    "avg_bits_err_output": 0.9770968046888523,
    "avg_bits_err_improve": 0.014118421881311072,
    "time": 5446.393798828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(+ (/ (exp a) (* (+ (exp a) (exp b)) 4.0)) (/ (* (exp a) 0.75) (+ (exp a) (exp b))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6922712406251803,
    "avg_bits_err_output": 0.6938962406251803,
    "avg_bits_err_improve": -0.0016249999999999876,
    "time": 5384.833251953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (/ (* a1 (/ a2 b1)) b2) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-283) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 4e+292) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.372823166249141,
    "avg_bits_err_output": 2.695288113610451,
    "avg_bits_err_improve": 8.67753505263869,
    "time": 8123.789794921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4780040635518175,
    "avg_bits_err_output": 0.442625,
    "avg_bits_err_improve": 0.035379063551817524,
    "time": 14765.859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- (hypot 1.0 x) x) 0.0) (/ (fma (hypot 1.0 x) (hypot 1.0 x) (* x (- x))) (- (hypot 1.0 x) x)) (+ x (hypot 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 52.93568994831417,
    "avg_bits_err_output": 44.805622820334996,
    "avg_bits_err_improve": 8.130067127979174,
    "time": 22445.47705078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.77550359204577,
    "avg_bits_err_output": 5.77550359204577,
    "avg_bits_err_improve": 0,
    "time": 14114.847412109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.013875,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0,
    "time": 2911.083740234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1245.85107421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (fma (- 0.375 (* v 0.25)) (/ (* (* w r) (* w r)) (- 1.0 v)) 4.5))",
    "output_parens": 12,
    "avg_bits_err_input": 12.285871629202978,
    "avg_bits_err_output": 0.36795825219299233,
    "avg_bits_err_improve": 11.917913377009986,
    "time": 20301.83447265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (+ (* (* x1 x1) (* (/ (- x1 (fma x1 (* x1 3.0) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) (* (* (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (/ (* x1 2.0) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))))) (+ x1 x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5128226024455851,
    "avg_bits_err_output": 0.2510476815709618,
    "avg_bits_err_improve": 0.2617749208746233,
    "time": 64550.805908203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.10776151392575,
    "avg_bits_err_output": 1.3643686092939336,
    "avg_bits_err_improve": 16.74339290463182,
    "time": 5694.626953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2234789628874018,
    "avg_bits_err_output": 0.2234789628874018,
    "avg_bits_err_improve": 0,
    "time": 8156.4453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026981203125901448,
    "avg_bits_err_output": 0.0026981203125901448,
    "avg_bits_err_improve": 0,
    "time": 3020.400634765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (+ (/ PI (* (- b a) a)) (/ PI (* b (- (- b a))))) (+ b a)) 2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 14.28120578385956,
    "avg_bits_err_output": 0.2439272562546874,
    "avg_bits_err_improve": 14.037278527604872,
    "time": 15227.739990234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.59160663785604,
    "avg_bits_err_output": 24.878989771072366,
    "avg_bits_err_improve": 4.712616866783673,
    "time": 20201.986083984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 0,
    "time": 3665.458984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.016375,
    "avg_bits_err_output": 0.016375,
    "avg_bits_err_improve": 0,
    "time": 9192.879150390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (+ (* (* (/ t (+ t 1.0)) (/ t (+ t 1.0))) 16.0) 3.0)) (+ 8.0 (* (* (/ t (+ t 1.0)) (/ t (+ t 1.0))) 16.0)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.048375,
    "avg_bits_err_output": 0.006125,
    "avg_bits_err_improve": 0.04225,
    "time": 10345.277099609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3091.885009765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2878.25244140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2314.286865234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.8035933305167395,
    "avg_bits_err_output": 0.245375,
    "avg_bits_err_improve": 7.558218330516739,
    "time": 19123.304443359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(if (!= (+ (pow (+ x eps) 5.0) (pow x 5.0)) 0.0) (* (+ (pow (+ x eps) 5.0) (pow x 5.0)) (if (!= (/ (pow x 5.0) (+ (pow (+ x eps) 5.0) (pow x 5.0))) 0.0) (- (/ (* (/ (pow (+ x eps) 5.0) (+ (pow (+ x eps) 5.0) (pow x 5.0))) (/ (pow x 5.0) (+ (pow (+ x eps) 5.0) (pow x 5.0)))) (/ (pow x 5.0) (+ (pow (+ x eps) 5.0) (pow x 5.0)))) (/ 1.0 (/ 1.0 (/ (pow x 5.0) (+ (pow (+ x eps) 5.0) (pow x 5.0)))))) (/ (- (pow (+ x eps) 5.0) (pow x 5.0)) (+ (pow (+ x eps) 5.0) (pow x 5.0))))) (- (pow (+ x eps) 5.0) (pow x 5.0)))",
    "output_parens": 62,
    "avg_bits_err_input": 7.0989590952705415,
    "avg_bits_err_output": 7.0999746431739785,
    "avg_bits_err_improve": -0.001015547903437053,
    "time": 5895.256103515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.626894356708267,
    "avg_bits_err_output": 15.626894356708267,
    "avg_bits_err_improve": 0,
    "time": 35274.3349609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (cos x) (+ (exp (* 10.0 (* x x))) 1.0)) 0.0) (* (/ (* (cos x) (fma (if (!= (exp (* 10.0 (* x x))) 0.0) (/ 1.0 (/ 1.0 (exp (* 10.0 (* x x))))) (exp (* 10.0 (* x x)))) (cos x) (cos x))) (+ (exp (* 10.0 (* x x))) 1.0)) (/ (exp (* 10.0 (* x x))) (cos x))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 42,
    "avg_bits_err_input": 3.555339469037401,
    "avg_bits_err_output": 3.5551990673010563,
    "avg_bits_err_improve": 0.00014040173634466413,
    "time": 22258.584228515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.8233887960941,
    "avg_bits_err_output": 14.8233887960941,
    "avg_bits_err_improve": 0,
    "time": 10963.353515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.17150046941011,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.17150046941011,
    "time": 5008.75634765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.086585328122624,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.08633532812262,
    "time": 3896.584228515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.24675,
    "avg_bits_err_improve": 63.75325,
    "time": 24621.167236328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325163339247,
    "avg_bits_err_output": 0.3945,
    "avg_bits_err_improve": 61.44875163339247,
    "time": 7436.493408203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.79028626161961,
    "avg_bits_err_output": 33.819535236733316,
    "avg_bits_err_improve": -0.029248975113702613,
    "time": 25654.305419921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.33352993524726,
    "avg_bits_err_output": 34.33352993524726,
    "avg_bits_err_improve": 0,
    "time": 21022.3916015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2524.4462890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.379538544695365,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 39.369913544695365,
    "time": 2937.63232421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(* (- x y) (/ (+ x y) (fma y y (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 19.832435837777357,
    "avg_bits_err_output": 20.063194656088438,
    "avg_bits_err_improve": -0.23075881831108092,
    "time": 4036.033447265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (if (!= b 0.0) (+ (+ (+ b c) (+ d a)) (/ 0.0 b)) (+ a (+ b (+ c d)))) 2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 3.7066968622617615,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.7066968622617615,
    "time": 12840.84716796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.039,
    "time": 7345.201904296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (+ (* b b) (* b a)) (* a (+ a b)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.020844360937770434,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0.003719360937770432,
    "time": 6230.86767578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.016,
    "time": 4094.15966796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.000375,
    "time": 1714.59521484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ b (+ d a)) (+ c e))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4018659781302286,
    "avg_bits_err_output": 0.24675,
    "avg_bits_err_improve": 0.15511597813022862,
    "time": 5535.2158203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.15436374729859,
    "avg_bits_err_output": 30.15436374729859,
    "avg_bits_err_improve": 0,
    "time": 6862.580322265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.62497337338717,
    "avg_bits_err_output": 24.62497337338717,
    "avg_bits_err_improve": 0,
    "time": 2973.9443359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.982081294775853,
    "avg_bits_err_output": 30.004479841849687,
    "avg_bits_err_improve": -0.022398547073834152,
    "time": 28255.85888671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00725,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.006625000000000001,
    "time": 1884.281982421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3.2e+254) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.56e+116) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 61,
    "avg_bits_err_input": 47.579275910185075,
    "avg_bits_err_output": 45.65706470885942,
    "avg_bits_err_improve": 1.922211201325652,
    "time": 25263.244384765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) -1e+287) (+ (* c (/ a (fma d d (* c c)))) (* b (/ d (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 1e+237) (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (+ (* (/ b (fma d d (* c c))) d) (* a (/ c (fma c c (* d d)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 26.56655196064843,
    "avg_bits_err_output": 23.588445799376498,
    "avg_bits_err_improve": 2.9781061612719313,
    "time": 11920.9296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d))))) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))))",
    "output_parens": 26,
    "avg_bits_err_input": 25.48909648430748,
    "avg_bits_err_output": 24.072471484307492,
    "avg_bits_err_improve": 1.4166249999999891,
    "time": 11805.620361328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037875,
    "avg_bits_err_output": 0.020860521314888556,
    "avg_bits_err_improve": 0.017014478685111443,
    "time": 8588.629150390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (if (!= (- ux (* ux ux)) 0.0) (/ (* (- ux (* ux ux)) (- (- ux (* ux ux)) (fma (* ux maxCos) (fma ux maxCos (- 2.0 (* 2.0 ux))) (- ux)))) (- ux (* ux ux))) (- 1.0 (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 13.770385221272825,
    "avg_bits_err_output": 0.5469348509907295,
    "avg_bits_err_improve": 13.223450370282096,
    "time": 26765.63525390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (expm1 (log1p (sqrt (fma (- ux (fma ux maxCos 1.0)) (- (* ux maxCos) ux) (- 1.0 (fma ux (+ maxCos -1.0) 1.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.808443394040077,
    "avg_bits_err_output": 11.421326927018848,
    "avg_bits_err_improve": 2.3871164670212295,
    "time": 30995.50390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* ux (- maxCos (* ux maxCos))) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33048018785438493,
    "avg_bits_err_output": 0.33093819888669235,
    "avg_bits_err_improve": -0.0004580110323074149,
    "time": 65132.490966796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 48,
    "avg_bits_err_input": 0.19787968083262134,
    "avg_bits_err_output": 0.1979315605200312,
    "avg_bits_err_improve": -5.1879687409855935e-05,
    "time": 23404.180908203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ u1 (- 1.0 u1)) 0.0) (/ 1.0 (/ 1.0 (/ u1 (- 1.0 u1)))) (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.5395669897023756,
    "avg_bits_err_output": 0.553626917205405,
    "avg_bits_err_improve": -0.014059927503029424,
    "time": 18603.593505859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (+ (/ (/ u1 (- 1.0 u1)) 8.0) (* u1 (/ 1.25 (- 2.0 (+ u1 u1))))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3182523052562121,
    "avg_bits_err_output": 0.3371493491650376,
    "avg_bits_err_improve": -0.01889704390882546,
    "time": 23093.891357421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (- (+ (/ PI s) 1.0) 1.0)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.3291006081264169,
    "avg_bits_err_output": 0.33051478035035736,
    "avg_bits_err_improve": -0.0014141722239404686,
    "time": 83199.75756835938,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06253090445323171,
    "avg_bits_err_output": 0.06253090445323171,
    "avg_bits_err_improve": 0,
    "time": 9618.882080078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (fabs x) (- s)))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1602904943487237,
    "avg_bits_err_output": 0.1475920522684732,
    "avg_bits_err_improve": 0.012698442080250505,
    "time": 9404.06884765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6678888130575138,
    "avg_bits_err_output": 0.6697037708744058,
    "avg_bits_err_improve": -0.0018149578168920044,
    "time": 18126.069091796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.151137259172071,
    "avg_bits_err_output": 0.1448124751468385,
    "avg_bits_err_improve": 0.006324784025232483,
    "time": 18779.75244140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (fma (/ (- sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) sinTheta_O (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 2.5843473848796834,
    "avg_bits_err_output": 2.581149061054511,
    "avg_bits_err_improve": 0.0031983238251722668,
    "time": 27661.3935546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (* (if (!= (* (/ (exp (* sinTheta_i (/ sinTheta_O (- v)))) v) (+ cosTheta_O cosTheta_O)) 0.0) (/ 1.0 (/ 1.0 (* (/ (exp (* sinTheta_i (/ sinTheta_O (- v)))) v) (+ cosTheta_O (+ cosTheta_O (+ cosTheta_O cosTheta_O)))))) (* (/ (exp (* sinTheta_i (/ sinTheta_O (- v)))) v) (+ cosTheta_O (+ cosTheta_O (+ cosTheta_O cosTheta_O))))) (/ 1.0 (+ v v))) (/ cosTheta_i (* (sinh (/ 1.0 v)) 4.0)))",
    "output_parens": 37,
    "avg_bits_err_input": 0.45646508831999544,
    "avg_bits_err_output": 0.37729608481330384,
    "avg_bits_err_improve": 0.0791690035066916,
    "time": 26817.65673828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (log (/ 0.5 v)) 0.0) (/ (* (log (/ 0.5 v)) (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) (+ 0.6931 (log (/ 0.5 v))))) (log (/ 0.5 v))) (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 27,
    "avg_bits_err_input": 0.1017916211995896,
    "avg_bits_err_output": 0.10579207945480869,
    "avg_bits_err_improve": -0.004000458255219094,
    "time": 12822.777099609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (+ (- 2.0 (* alpha (+ alpha alpha))) (- 2.0 (* alpha (+ alpha alpha)))) (- (* PI (* (* 4.0 (log (* alpha alpha))) (fma cosTheta (- (* alpha (* alpha cosTheta)) cosTheta) 1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.47458210654791216,
    "avg_bits_err_output": 0.47459150498496144,
    "avg_bits_err_improve": -9.398437049279451e-06,
    "time": 23560.884521484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) 3.0) s)",
    "output_parens": 5,
    "avg_bits_err_input": 1.3262383922843086,
    "avg_bits_err_output": 1.2383229012990344,
    "avg_bits_err_improve": 0.08791549098527418,
    "time": 22475.468017578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (- -1.0 (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) 0.0) (/ (if (!= (- 1.0 (* (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))))) 0.0) (/ (if (!= (* (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0)) 0.0) (/ (fma (* (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0)) (* (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0)) (* (* (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0)) (* (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0)))) (* (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0))) (* (fma (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (* (log (/ 1.0 (fma u -4.0 1.0))) (+ (log (/ 1.0 (fma u -4.0 1.0))) 2.0)))) (- 1.0 (* (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))))) (- (* (- -2.0 (log (/ 1.0 (fma u -4.0 1.0)))) (- (log (/ 1.0 (fma u -4.0 1.0))))))) (- -1.0 (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))))) (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 168,
    "avg_bits_err_input": 12.264057598280885,
    "avg_bits_err_output": 12.377796056892658,
    "avg_bits_err_improve": -0.11373845861177223,
    "time": 70485.81640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (* 0.75 (/ (exp (/ (/ r -3.0) s)) (* s (* PI 6.0))))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1294345796303651,
    "avg_bits_err_output": 0.12935615319653065,
    "avg_bits_err_improve": 7.842643383443315e-05,
    "time": 25342.288818359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle (- 1.0 u))) (sin normAngle)) n0_i (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.946681081244515,
    "avg_bits_err_output": 0.7613295599263478,
    "avg_bits_err_improve": 0.18535152131816723,
    "time": 25450.3388671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- c (- -1.0 (/ (* (exp (* cosTheta (- cosTheta))) (sqrt (- 1.0 (+ cosTheta cosTheta)))) (* cosTheta (sqrt PI))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7156405514643401,
    "avg_bits_err_output": 0.49566389537308353,
    "avg_bits_err_improve": 0.2199766560912566,
    "time": 22916.418212890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (+ (if (!= u2 0.0) (* u2 (/ (- (* u2 (* 2.0 PI)) u2) u2)) (- (* u2 (* 2.0 PI)) u2)) u2)))",
    "output_parens": 17,
    "avg_bits_err_input": 13.541846383590148,
    "avg_bits_err_output": 13.545321654708784,
    "avg_bits_err_improve": -0.003475271118636769,
    "time": 22619.511474609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (!= (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2)))) 0.0) (/ 2.0 (/ (/ 2.0 (cos (* 2.0 (* PI u2)))) (sqrt (- (log (- 1.0 u1)))))) (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2)))))",
    "output_parens": 28,
    "avg_bits_err_input": 13.591794425307109,
    "avg_bits_err_output": 13.605957014256443,
    "avg_bits_err_improve": -0.01416258894933442,
    "time": 24393.741455078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(/ (- alpha) (- (/ (/ (/ (/ 1.0 alpha) alpha) (log (- 1.0 u0))) (/ 1.0 alpha)) 0.0))",
    "output_parens": 10,
    "avg_bits_err_input": 14.192672930035418,
    "avg_bits_err_output": 14.201721255114988,
    "avg_bits_err_improve": -0.009048325079570319,
    "time": 20717.84716796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ (/ sin2phi alphay) alphay)))",
    "output_parens": 9,
    "avg_bits_err_input": 12.561665502677593,
    "avg_bits_err_output": 12.561265470094304,
    "avg_bits_err_improve": 0.00040003258328979996,
    "time": 16126.94384765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -4e+160) (- (if (!= (* PI l) 0.0) (/ 1.0 (* (- (/ (/ 1.5 PI) l) (/ (/ (/ 1.0 PI) l) -2.0)) 0.5)) (* PI l)) (/ (tan (* PI l)) (* F F))) (if (<= (* PI l) -1e+33) (- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (* (- (exp (log1p (/ 1.0 (* PI l)))) 1.0) (* PI (* PI (* l l)))) (* PI l))) F) F)) (if (<= (* PI l) 200000000000.0) (- (* PI l) (/ (/ (tan (* PI l)) F) F)) (if (<= (* PI l) 2e+148) (- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (* (- (exp (log1p (/ 1.0 (* PI l)))) 1.0) (* PI (* PI (* l l)))) (* PI l))) F) F)) (- (* PI l) (/ (tan (expm1 (log1p (* PI l)))) (* F F)))))))",
    "output_parens": 79,
    "avg_bits_err_input": 16.87330777360657,
    "avg_bits_err_output": 6.63887874961707,
    "avg_bits_err_improve": 10.234429023989499,
    "time": 21712.1376953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.22167019050571782,
    "avg_bits_err_output": 0.15668797821724945,
    "avg_bits_err_improve": 0.06498221228846837,
    "time": 19404.223388671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.174091690595713,
    "avg_bits_err_output": 11.00226566246667,
    "avg_bits_err_improve": 3.1718260281290434,
    "time": 22749.86669921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 0.0) (/ (+ (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (+ (/ (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (exp (* PI (/ f -4.0))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (* (* (exp (* PI (/ f 4.0))) (/ (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 206,
    "avg_bits_err_input": 61.491432612763994,
    "avg_bits_err_output": 61.49927558859085,
    "avg_bits_err_improve": -0.007842975826854115,
    "time": 158677.82690429688,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.840952807663975,
    "avg_bits_err_output": 34.17914661673478,
    "avg_bits_err_improve": 8.661806190929191,
    "time": 24051.30517578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.980989365904106,
    "avg_bits_err_output": 3.980989365904106,
    "avg_bits_err_improve": 0,
    "time": 27741.62890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (exp (log1p (sqrt (- (* (pow (* 2.0 (/ l Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))) 1.0)) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 1.094125,
    "avg_bits_err_output": 1.096875,
    "avg_bits_err_improve": -0.00275000000000003,
    "time": 12665.00341796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (if (!= (pow (/ t l) 2.0) 0.0) (/ 1.0 (/ 1.0 (pow (/ t l) 2.0))) (pow (/ t l) 2.0)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 10.622255477766458,
    "avg_bits_err_improve": 7.312031259054663e-05,
    "time": 17998.002685546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* (* 2.0 n) (* U (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 4e+266) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* 2.0 (- (* n (* U t)) (* (* 2.0 (/ l Om)) (* n (* U l))))) (* 2.0 (* (* n (- U U*)) (* (* n U) (pow (/ l Om) 2.0))))))))",
    "output_parens": 77,
    "avg_bits_err_input": 34.67842107000908,
    "avg_bits_err_output": 28.28359616340969,
    "avg_bits_err_improve": 6.394824906599389,
    "time": 36777.401611328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ 1.0 (* (/ (sin k) l) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 47.336429510506825,
    "avg_bits_err_output": 36.3201099156388,
    "avg_bits_err_improve": 11.016319594868023,
    "time": 46372.1044921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)) INFINITY) (/ (/ (/ 2.0 (pow t 3.0)) (/ (sin k) l)) (* (+ 2.0 (pow (/ k t) 2.0)) (/ (tan k) l))) 0.0)",
    "output_parens": 26,
    "avg_bits_err_input": 32.277784931514574,
    "avg_bits_err_output": 21.553229469639124,
    "avg_bits_err_improve": 10.72455546187545,
    "time": 32048.954345703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* a2 (* a2 (cos th))) (* a1 (* a1 (cos th)))) (sqrt 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5807400406482597,
    "avg_bits_err_output": 0.4648671078320631,
    "avg_bits_err_improve": 0.1158729328161966,
    "time": 23648.674560546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (+ n (* n (fma 2.0 PI -1.0))) (fma k -0.5 0.5)) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5224056608305663,
    "avg_bits_err_output": 0.4841830466858689,
    "avg_bits_err_improve": 0.03822261414469735,
    "time": 18747.869873046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp (- l))) J (* (exp (- l)) J)) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.31369576187562,
    "avg_bits_err_output": 17.314745707574517,
    "avg_bits_err_improve": -0.0010499456988952716,
    "time": 23653.22412109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 16,
    "avg_bits_err_input": 15.274467448716402,
    "avg_bits_err_output": 15.274467448716402,
    "avg_bits_err_improve": 0,
    "time": 8986.448486328125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.00421936093777,
    "avg_bits_err_output": 18.00421936093777,
    "avg_bits_err_improve": 0,
    "time": 31944.44384765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (/ (pow (* M (/ (/ D 2.0) d)) 2.0) l) h))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.127842899506629,
    "avg_bits_err_output": 10.635134125505404,
    "avg_bits_err_improve": 3.4927087740012244,
    "time": 19625.2685546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -5e+186) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) -5e-98) (* c0 (sqrt (* (/ (/ 2.0 V) (+ l l)) A))) (if (<= (* V l) 1e-318) (* c0 (sqrt (* (/ A V) (/ 1.0 l)))) (if (<= (* V l) 2e+247) (* c0 (sqrt (if (!= (/ A (* l V)) 0.0) (/ 1.0 (/ 1.0 (/ A (* l V)))) (/ A (* l V))))) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 19.331082942441245,
    "avg_bits_err_output": 15.096920025232986,
    "avg_bits_err_improve": 4.234162917208259,
    "time": 18761.24658203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -1e+142) (* (/ c0 (* 2.0 w)) (fma c0 (* d (/ (/ (/ (/ d D) D) w) h)) (sqrt (* (fma d (* c0 (/ (/ (/ (/ d D) D) w) h)) M) (- (* c0 (* d (/ (/ (/ (/ d D) D) w) h))) M))))) (if (<= d -5e-128) (* (/ c0 (* 2.0 w)) (+ (* c0 (/ (* d d) (* h (* D (* w D))))) (sqrt (- (* (* c0 (/ (* d d) (* h (* D (* w D))))) (* c0 (/ (* d d) (* h (* D (* w D)))))) (* M M))))) (if (<= d -7.6e-286) (* (fma (/ (/ (/ d D) D) (* w h)) (* d c0) (sqrt (* (fma (/ (/ (/ d D) D) (* w h)) (* d c0) M) (fma (/ (/ (/ d D) D) (* w h)) (* d c0) (- M))))) (/ c0 (* w 2.0))) (if (<= d 5.4e-93) (fma (sqrt (fma (* d (* d (/ (/ (* c0 (/ d h)) D) (* D w)))) (/ (/ (* c0 (/ d h)) D) (* D w)) (* M (- M)))) (/ c0 (+ w w)) (* (/ (/ (* c0 (/ d h)) D) (* D w)) (/ (* c0 (+ d d)) (* w 4.0)))) (* (/ c0 (* 2.0 w)) (if (!= (* c0 (/ (* d (/ d D)) (* D (* w h)))) 0.0) (+ (/ 1.0 (/ 1.0 (* c0 (/ (* d (/ d D)) (* D (* w h)))))) (* (sqrt (* (fma c0 (/ (* d (/ d D)) (* D (* w h))) M) (fma c0 (/ (* d (/ d D)) (* D (* w h))) (- M)))) (/ (* c0 (/ (* d (/ d D)) (* D (* w h)))) (* c0 (/ (* d (/ d D)) (* D (* w h))))))) (fma c0 (/ (* d (/ d D)) (* D (* w h))) (sqrt (* (fma c0 (/ (* d (/ d D)) (* D (* w h))) M) (fma c0 (/ (* d (/ d D)) (* D (* w h))) (- M)))))))))))",
    "output_parens": 181,
    "avg_bits_err_input": 59.43901740849568,
    "avg_bits_err_output": 56.23946505886922,
    "avg_bits_err_improve": 3.199552349626458,
    "time": 47794.6181640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(/ (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (+ (/ (/ (* h (pow (/ (* D M) (+ d d)) 2.0)) l) -2.0) (+ (/ (/ (* h (pow (/ (* D M) (+ d d)) 2.0)) l) -2.0) 2.0))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 26.404284773602452,
    "avg_bits_err_output": 25.630143929973926,
    "avg_bits_err_improve": 0.7741408436285262,
    "time": 42821.626708984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (- (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (- 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) -2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 15.707598007090736,
    "avg_bits_err_output": 15.245137888719855,
    "avg_bits_err_improve": 0.4624601183708812,
    "time": 10691.841064453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9818340531677464,
    "avg_bits_err_output": 0.011021240625180291,
    "avg_bits_err_improve": 0.9708128125425661,
    "time": 3342.541259765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (/ (fma v (* v 5.0) -1.0) (- PI)) (* (- 1.0 (* v v)) t)) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44198733279738894,
    "avg_bits_err_output": 0.27191992500144224,
    "avg_bits_err_improve": 0.1700674077959467,
    "time": 20888.382568359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (- (sqrt (+ 1.0 (* (* v v) -3.0))) (* (* v v) (sqrt (+ 1.0 (* (* v v) -3.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01320366957750995,
    "avg_bits_err_output": 0.01189624062518029,
    "avg_bits_err_improve": 0.0013074289523296607,
    "time": 5805.237060546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5152070115660735,
    "avg_bits_err_output": 0.5152070115660735,
    "avg_bits_err_improve": 0,
    "time": 11865.71044921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* (pow k m) (/ (+ a a) (+ 2.0 (* (+ k 10.0) (+ k k)))))",
    "output_parens": 8,
    "avg_bits_err_input": 1.9546565265742808,
    "avg_bits_err_output": 1.976299376736537,
    "avg_bits_err_improve": -0.02164285016225631,
    "time": 15118.525390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec EDonor) Vef)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.021912583770241124,
    "avg_bits_err_output": 0.021912583770241124,
    "avg_bits_err_improve": 0,
    "time": 7679.5302734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* b (* b 4.0))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18203655590132128,
    "avg_bits_err_output": 0.18176531527614098,
    "avg_bits_err_improve": 0.00027124062518030234,
    "time": 13690.81640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18997040104138205,
    "avg_bits_err_output": 0.18997040104138205,
    "avg_bits_err_improve": 0,
    "time": 7766.20166015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18842033202660644,
    "avg_bits_err_output": 0.18842033202660644,
    "avg_bits_err_improve": 0,
    "time": 3522.094482421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (/ (- (+ (/ x (sqrt (if (!= (* 4.0 (* p p)) 0.0) (fma 4.0 (* p p) (* x x)) (fma 4.0 (* p p) (* x x))))) (+ 2.0 (/ (/ x (sqrt (if (!= (* 4.0 (* p p)) 0.0) (fma 4.0 (* p p) (* x x)) (fma 4.0 (* p p) (* x x))))) 2.0))) (- (/ (/ x (sqrt (if (!= (* 4.0 (* p p)) 0.0) (fma 4.0 (* p p) (* x x)) (fma 4.0 (* p p) (* x x))))) 2.0))) 2.0)))",
    "output_parens": 45,
    "avg_bits_err_input": 13.208008860755024,
    "avg_bits_err_output": 13.212188891487624,
    "avg_bits_err_improve": -0.004180030732600315,
    "time": 14003.377197265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.59321119733226,
    "avg_bits_err_output": 0.056875,
    "avg_bits_err_improve": 40.53633619733226,
    "time": 8186.31103515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.68612750779363,
    "avg_bits_err_output": 31.68612750779363,
    "avg_bits_err_improve": 0,
    "time": 15530.593017578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma b_2 b_2 (* c (- a)))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.730158327203675,
    "avg_bits_err_output": 33.731047360449196,
    "avg_bits_err_improve": -0.0008890332455209204,
    "time": 12669.146484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.53854291580848,
    "avg_bits_err_output": 33.53854291580848,
    "avg_bits_err_improve": 0,
    "time": 15655.01611328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.106342939284794,
    "avg_bits_err_output": 30.2972682547755,
    "avg_bits_err_improve": 0.8090746845092944,
    "time": 14885.87255859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.4629577493785,
    "avg_bits_err_output": 32.4629577493785,
    "avg_bits_err_improve": 0,
    "time": 16429.1220703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (fma (/ (log N) (- (- (log N)) (log1p N))) (log N) (/ (* (log1p N) (log1p N)) (+ (log N) (log1p N)))) (- (log1p N) (log N)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.500741789756933,
    "avg_bits_err_output": 29.513878357504613,
    "avg_bits_err_improve": -0.01313656774767935,
    "time": 11892.8076171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ (/ -1.0 x) (- -1.0 x)))",
    "output_parens": 4,
    "avg_bits_err_input": 14.328016796907551,
    "avg_bits_err_output": 0.070125,
    "avg_bits_err_improve": 14.25789179690755,
    "time": 12119.34326171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (- (if (!= (- 1.0 (cos x)) 0.0) (/ (fma (cos x) (cos x) -1.0) (+ (cos x) -1.0)) (+ 1.0 (cos x))) 1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 39.60068821796507,
    "avg_bits_err_output": 39.62020676574628,
    "avg_bits_err_improve": -0.019518547781210316,
    "time": 15437.862548828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (+ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (fma (cbrt x) (cbrt x) 1.0)) 1.0) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 29.750049245808967,
    "avg_bits_err_output": 29.590923695362555,
    "avg_bits_err_improve": 0.15912555044641152,
    "time": 9777.042724609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.96797140621094,
    "avg_bits_err_output": 29.96797140621094,
    "avg_bits_err_improve": 0,
    "time": 21033.05029296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70671116528833,
    "avg_bits_err_output": 33.70671116528833,
    "avg_bits_err_improve": 0,
    "time": 24492.354248046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- INFINITY)) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) 2e+290) (/ (/ (+ b (sqrt (fma b b (* c (* a -4.0))))) -2.0) a) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0)))))",
    "output_parens": 52,
    "avg_bits_err_input": 33.13804826137772,
    "avg_bits_err_output": 28.75461624240001,
    "avg_bits_err_improve": 4.383432018977707,
    "time": 22906.83544921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.182643001630375,
    "avg_bits_err_output": 0.9016868636088902,
    "avg_bits_err_improve": 60.28095613802149,
    "time": 23987.6435546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log1p n) (log n)) n)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 63.01021685974004,
    "avg_bits_err_output": 44.18695966562837,
    "avg_bits_err_improve": 18.82325719411167,
    "time": 16101.988525390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (exp (log1p (log (/ (- 1.0 eps) (+ 1.0 eps))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 58.60315345304578,
    "avg_bits_err_output": 58.62284927681032,
    "avg_bits_err_improve": -0.019695823764543263,
    "time": 16080.906494140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (log (+ 1.0 (expm1 (- 1.0 (/ x (tan x)))))) x)",
    "output_parens": 7,
    "avg_bits_err_input": 59.887347463261065,
    "avg_bits_err_output": 59.88277856996283,
    "avg_bits_err_improve": 0.0045688932982344,
    "time": 30067.3505859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.538691125731525,
    "avg_bits_err_output": 28.937452537852884,
    "avg_bits_err_improve": 31.60123858787864,
    "time": 25086.807861328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 40.86726586985108,
    "avg_bits_err_output": 0.5421156015629508,
    "avg_bits_err_improve": 40.325150268288134,
    "time": 5081.737060546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64070708086842,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.639832080868416,
    "time": 2546.32763671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.486760751671497,
    "avg_bits_err_output": 0.022180644893423293,
    "avg_bits_err_improve": 29.464580106778072,
    "time": 3481.51953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (exp x) 0.0) (/ (+ (* (exp x) (- 2.0 (+ (exp x) (exp (- x))))) (fma (- (fabs (exp x))) (fabs (exp x)) (* (exp x) (exp x)))) (exp x)) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 28,
    "avg_bits_err_input": 29.683117156777303,
    "avg_bits_err_output": 29.105568122925142,
    "avg_bits_err_improve": 0.5775490338521614,
    "time": 19471.873291015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (+ (- -2.0 (* (- (/ 2.0 x) (/ 1.0 (+ x 1.0))) (- 1.0 x))) (- (/ 2.0 (/ x (+ x -1.0))) (/ (+ x -1.0) (+ x 1.0)))) (+ 2.0 (* -2.0 x))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 29,
    "avg_bits_err_input": 9.791196462515073,
    "avg_bits_err_output": 9.822918876078882,
    "avg_bits_err_improve": -0.031722413563809226,
    "time": 29626.578369140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (if (!= (* (/ (/ (tan x) (tan (+ x eps))) -2.0) (/ (/ (tan x) (tan (+ x eps))) -2.0)) 0.0) (- (/ (* (/ (/ (tan x) (tan (+ x eps))) 2.0) (* (/ (/ (tan x) (tan (+ x eps))) 2.0) (- (* (/ (/ (tan x) (tan (+ x eps))) -2.0) (/ (/ (tan x) (tan (+ x eps))) -2.0)) (+ (/ (tan x) (tan (+ x eps))) (- (/ (tan (+ x eps)) (tan (+ x eps)))))))) (* (/ (/ (tan x) (tan (+ x eps))) -2.0) (/ (/ (tan x) (tan (+ x eps))) -2.0))) (/ 1.0 (/ 1.0 (* (/ (/ (tan x) (tan (+ x eps))) -2.0) (/ (/ (tan x) (tan (+ x eps))) -2.0))))) (- (/ (tan (+ x eps)) (tan (+ x eps))) (/ (tan x) (tan (+ x eps)))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 95,
    "avg_bits_err_input": 37.32211213782556,
    "avg_bits_err_output": 37.33235114362625,
    "avg_bits_err_improve": -0.010239005800684708,
    "time": 18578.2158203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (log (+ 1.0 (expm1 (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x)))))) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 29.89520388300476,
    "avg_bits_err_output": 29.217516917554146,
    "avg_bits_err_improve": 0.677686965450615,
    "time": 13862.57568359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps)))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 18,
    "avg_bits_err_input": 37.076021656316286,
    "avg_bits_err_output": 37.077639936009945,
    "avg_bits_err_improve": -0.0016182796936590194,
    "time": 18778.822509765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ (/ 1.0 (sqrt (+ 1.0 x))) -1.0) 0.0) (/ (/ (+ (/ 1.0 (sqrt (+ 1.0 x))) -1.0) (sqrt (+ 1.0 x))) (log1p (expm1 (+ (/ 1.0 (sqrt (+ 1.0 x))) -1.0)))) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 19.768123257986957,
    "avg_bits_err_output": 19.73935274150207,
    "avg_bits_err_improve": 0.0287705164848866,
    "time": 13390.8076171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (atan (+ 1.0 N)) (+ 1.0 (- -1.0 (atan N))))",
    "output_parens": 6,
    "avg_bits_err_input": 14.990133460485552,
    "avg_bits_err_output": 14.996060527837022,
    "avg_bits_err_improve": -0.005927067351469972,
    "time": 5535.156494140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (+ (log (+ (exp a) (exp b))) -1.0) 0.0) (/ (+ (log (+ (exp a) (exp b))) (fma (+ (log (+ (exp a) (exp b))) -1.0) (+ (log (+ (exp a) (exp b))) -1.0) -1.0)) (+ (log (+ (exp a) (exp b))) -1.0)) (log (+ (exp a) (exp b))))",
    "output_parens": 33,
    "avg_bits_err_input": 29.77134824367137,
    "avg_bits_err_output": 29.830497271018157,
    "avg_bits_err_improve": -0.05914902734678762,
    "time": 39312.060302734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07404492500144229,
    "avg_bits_err_output": 0.07404492500144229,
    "avg_bits_err_improve": 0,
    "time": 10875.144287109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(/ (* a (- b)) (/ (/ 1.0 b) a))",
    "output_parens": 5,
    "avg_bits_err_input": 16.864693567269725,
    "avg_bits_err_output": 0.2699084593805888,
    "avg_bits_err_improve": 16.594785107889138,
    "time": 9919.935302734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (/ 1.0 (* PI angle))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.318325708829597,
    "avg_bits_err_output": 20.322653362839958,
    "avg_bits_err_improve": -0.004327654010360504,
    "time": 26684.218994140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (+ (- (- (pow a 2.0)) (pow a 2.0)) (* (- (pow a 2.0) (pow b 2.0)) -2.0)) (* (sin (* PI (/ angle 180.0))) (* 2.0 (pow a 2.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 31.073264448467892,
    "avg_bits_err_output": 31.088968292498983,
    "avg_bits_err_improve": -0.015703844031090597,
    "time": 37554.905517578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* (/ angle 180.0) PI) 0.0) (* (/ (* angle (/ PI 180.0)) (log1p (expm1 (* (/ angle 180.0) (* PI 2.0))))) (* angle (* PI 0.011111111111111112))) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 20.21627943539432,
    "avg_bits_err_output": 20.067412226811133,
    "avg_bits_err_improve": 0.14886720858318725,
    "time": 30682.406005859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17499060156295074,
    "avg_bits_err_output": 0.17353308281331128,
    "avg_bits_err_improve": 0.0014575187496394526,
    "time": 16946.181640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(- (* (* (* (tan x) (/ (tan x) (fma (tan x) (tan x) 1.0))) (+ (* (tan x) (/ (tan x) (- -1.0 (* (tan x) (tan x))))) (* (tan x) (/ (tan x) (fma (tan x) (tan x) 1.0))))) (/ (fma (tan x) (tan x) 1.0) (fma (tan x) (tan x) 1.0))) (/ (fma (tan x) (tan x) -1.0) (fma (tan x) (tan x) 1.0)))",
    "output_parens": 40,
    "avg_bits_err_input": 0.32144531176572927,
    "avg_bits_err_output": 0.3155277783138174,
    "avg_bits_err_improve": 0.005917533451911872,
    "time": 19398.63671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (+ (/ (+ 1.0 (* (* e (cos v)) 2.0)) 2.0) -0.5)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.13386560156295074,
    "avg_bits_err_output": 0.13850244375108173,
    "avg_bits_err_improve": -0.004636842188130985,
    "time": 17894.306640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.50614705770733,
    "avg_bits_err_output": 16.5045181690646,
    "avg_bits_err_improve": 0.001628888642731141,
    "time": 30785.455078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 68000000.0) (if (!= (* -0.5 (/ b a)) 0.0) (/ (+ (fma (/ b (- a)) (* b (/ -0.5 a)) (* (/ b a) (* b (/ -0.5 a)))) (* (if (!= (+ b (sqrt (fma a (* c -4.0) (* b b)))) 0.0) (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))) (- (* b b))) (+ b (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (/ (* b (/ -0.5 a)) a))) (* (/ b a) -1.0)) (* 0.5 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (+ (/ -1.0 (* a 2.0)) (+ (/ (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) (* a 2.0)) (/ b (* a -2.0)))))",
    "output_parens": 72,
    "avg_bits_err_input": 52.60920530351322,
    "avg_bits_err_output": 50.52558279205223,
    "avg_bits_err_improve": 2.0836225114609945,
    "time": 30990.408935546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) (+ (fma (- b) (/ 0.25 a) (* b (/ 0.25 a))) (* (- b (sqrt (fma c (* a -4.0) (* b b)))) (/ -0.25 a))))",
    "output_parens": 21,
    "avg_bits_err_input": 28.32917868863751,
    "avg_bits_err_output": 27.66352392467686,
    "avg_bits_err_improve": 0.6656547639606494,
    "time": 27556.960693359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-17) (if (!= (* -0.5 (/ b a)) 0.0) (* (* -0.5 (/ b a)) (- (/ (sqrt (fma b b (* c (* a -4.0)))) (- (* a (/ b a)))) (/ b (- (* a (/ b a)))))) (/ (- b (sqrt (fma a (* c -4.0) (* b b)))) (* a -2.0))) (+ (/ -1.0 (* a 2.0)) (+ (/ (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) (* a 2.0)) (/ b (* a -2.0)))))",
    "output_parens": 51,
    "avg_bits_err_input": 43.78874762707837,
    "avg_bits_err_output": 42.809699523680486,
    "avg_bits_err_improve": 0.9790481033978864,
    "time": 34582.125732421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70310996181358,
    "avg_bits_err_output": 33.70310996181358,
    "avg_bits_err_improve": 0,
    "time": 18786.150390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) 0.0) (/ (fma (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)) (* (cos phi2) (cos (- lambda1 lambda2))) (* (cos phi1) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.8872506754157247,
    "avg_bits_err_output": 0.9179793168224432,
    "avg_bits_err_improve": -0.030728641406718493,
    "time": 26065.04541015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (- (/ 1.0 (+ -1.0 (/ -2.0 (+ 1.0 (exp (* -2.0 x)))))) (/ (/ 8.0 (+ -2.0 (/ 4.0 (- -1.0 (exp (* -2.0 x)))))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 33,
    "avg_bits_err_input": 29.361745493776258,
    "avg_bits_err_output": 29.35472371358386,
    "avg_bits_err_improve": 0.007021780192399518,
    "time": 28394.621826171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.118687058443555,
    "avg_bits_err_output": 1.2238255640636722,
    "avg_bits_err_improve": 56.89486149437988,
    "time": 14738.621337890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.0167606326519,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 58.0080106326519,
    "time": 8535.80078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007469360937770434,
    "avg_bits_err_output": 0.007469360937770434,
    "avg_bits_err_improve": 0,
    "time": 3147.8466796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.55375,
    "avg_bits_err_output": 31.55375,
    "avg_bits_err_improve": 0,
    "time": 4905.068115234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (* (/ 2.0 (- 1.0 x)) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 58.59061824405141,
    "avg_bits_err_output": 0.025636842188131018,
    "avg_bits_err_improve": 58.564981401863285,
    "time": 14123.73486328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (* (+ 1.0 (sqrt (- 1.0 (* x x)))) (/ 1.0 x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.020625,
    "avg_bits_err_output": 0.020698120312590145,
    "avg_bits_err_improve": -7.312031259014418e-05,
    "time": 3288.91259765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* eh (* (cos t) (sin (atan (/ eh (* ew (tan t)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13032312031259013,
    "avg_bits_err_output": 0.12921936093777042,
    "avg_bits_err_improve": 0.0011037593748197128,
    "time": 25627.858642578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12325,
    "avg_bits_err_output": 0.12332312031259013,
    "avg_bits_err_improve": -7.31203125901303e-05,
    "time": 26594.110107421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.03542395506298,
    "avg_bits_err_output": 3.6185957387935366,
    "avg_bits_err_improve": 35.416828216269444,
    "time": 23701.953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.14076196427245,
    "avg_bits_err_output": 0.009948120312590146,
    "avg_bits_err_improve": 14.13081384395986,
    "time": 5803.63818359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15376049262704158,
    "avg_bits_err_output": 0.15022269637112598,
    "avg_bits_err_improve": 0.003537796255915604,
    "time": 34297.65283203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 3000000000000.0) (fma b (/ -0.16666666666666666 a) (+ (* (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) a) 0.16666666666666666) (* (sqrt (fma b b (* c (* a -3.0)))) (/ 0.16666666666666666 a)))) (if (!= (/ -0.16666666666666666 a) 0.0) (/ (+ (/ 0.027777777777777776 (* a a)) (* (/ -0.16666666666666666 a) (/ (fma (- (sqrt (fma a (* c -3.0) (* b b))) b) 0.16666666666666666 (/ (+ (sqrt (fma a (* c -3.0) (* b b))) (- 1.0 b)) 6.0)) a))) (/ -0.16666666666666666 a)) (fma (/ (- (sqrt (fma a (* c -3.0) (* b b))) b) a) 0.16666666666666666 (/ (+ (/ (+ (sqrt (fma a (* c -3.0) (* b b))) (- 1.0 b)) 6.0) -0.16666666666666666) a))))",
    "output_parens": 58,
    "avg_bits_err_input": 52.643515077095074,
    "avg_bits_err_output": 50.4482822622901,
    "avg_bits_err_improve": 2.1952328148049745,
    "time": 35982.646240234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (+ (+ (fma (- b) (sqrt (fma a (* c -3.0) (* b b))) (* b (sqrt (fma a (* c -3.0) (* b b))))) (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b)))) (fma (- b) b (* b b))) (+ b (sqrt (fma c (* a -3.0) (* b b))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 48,
    "avg_bits_err_input": 28.449788997139287,
    "avg_bits_err_output": 28.05994523837669,
    "avg_bits_err_improve": 0.3898437587625949,
    "time": 31367.60791015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (if (!= (* b b) 0.0) (/ (fma (* b b) (* b b) (* (* b b) (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))))) (* b b)) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b))))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 60,
    "avg_bits_err_input": 43.86024444686531,
    "avg_bits_err_output": 42.778465299859214,
    "avg_bits_err_improve": 1.0817791470060953,
    "time": 32165.65869140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.75598930418483,
    "avg_bits_err_output": 33.75598930418483,
    "avg_bits_err_improve": 0,
    "time": 21145.082763671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (sin phi1) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.83495008420797,
    "avg_bits_err_output": 12.833259122093928,
    "avg_bits_err_improve": 0.0016909621140417386,
    "time": 32299.95458984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.214774936467396,
    "avg_bits_err_output": 0.49859642205199795,
    "avg_bits_err_improve": 28.716178514415397,
    "time": 17383.03564453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01325,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": 0,
    "time": 3123.322509765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- (/ -1.0 (- 1.0 x)) (+ 1.0 (/ x (- 1.0 x)))) (- -1.0 x))",
    "output_parens": 8,
    "avg_bits_err_input": 14.2279152119211,
    "avg_bits_err_output": 12.375512878890982,
    "avg_bits_err_improve": 1.8524023330301187,
    "time": 19081.82275390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 2e+171) (/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C) (- A)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C))))) 0.0)",
    "output_parens": 45,
    "avg_bits_err_input": 52.022102674683836,
    "avg_bits_err_output": 50.949614696091494,
    "avg_bits_err_improve": 1.072487978592342,
    "time": 34220.279296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.622284869091633,
    "avg_bits_err_output": 29.622284869091633,
    "avg_bits_err_improve": 0,
    "time": 30149.177001953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (* (pow B 2.0) 2.0) (* A (* C 8.0))) (* F (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.20052644554488,
    "avg_bits_err_output": 51.89719110099454,
    "avg_bits_err_improve": 0.30333534455034084,
    "time": 35394.177734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.173155062949267,
    "avg_bits_err_output": 16.173155062949267,
    "avg_bits_err_improve": 0,
    "time": 1841.423583984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (if (!= (/ 1.0 (/ -1.0 g)) 0.0) (/ (if (!= (* (sqrt (- (* g g) (* h h))) (* -1.0 (/ 1.0 (/ -1.0 g)))) 0.0) (* (* (sqrt (- (* g g) (* h h))) (* -1.0 (/ 1.0 (/ -1.0 g)))) (/ (* (- g) (- (* (sqrt (- (* g g) (* h h))) (/ g (- g))) g)) (* (sqrt (- (* g g) (* h h))) (* -1.0 (/ 1.0 (/ -1.0 g)))))) (* (- g) (- (* (sqrt (- (* g g) (* h h))) (/ g (- g))) g))) (/ 1.0 (/ -1.0 g))) (* g (/ (+ g (sqrt (- (* g g) (* h h)))) (- g)))) (- (- g) (sqrt (fma h (- h) (* g g))))))))",
    "output_parens": 84,
    "avg_bits_err_input": 36.10844214362376,
    "avg_bits_err_output": 36.011054398471586,
    "avg_bits_err_improve": 0.09738774515217585,
    "time": 15543.9775390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.990130264069442,
    "avg_bits_err_output": 0.9783680453140327,
    "avg_bits_err_improve": 0.011762218755409393,
    "time": 5147.346435546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6863101077719279,
    "avg_bits_err_output": 0.6863101077719279,
    "avg_bits_err_improve": 0,
    "time": 7827.468505859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-250) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (/ (* a1 (/ a2 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+263) (/ (* a1 a2) (* b1 b2)) (/ (* a1 (/ a2 b2)) b1)))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.756077792918333,
    "avg_bits_err_output": 3.9555373012716415,
    "avg_bits_err_improve": 7.800540491646691,
    "time": 9595.014404296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4106678932626421,
    "avg_bits_err_output": 0.3514693609377705,
    "avg_bits_err_improve": 0.0591985323248716,
    "time": 8448.02783203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (!= (+ 1.0 (- (log (+ x (hypot 1.0 x))) -1.0)) 0.0) (/ (- (* (+ 1.0 (log (+ x (hypot 1.0 x)))) (+ 1.0 (log (+ x (hypot 1.0 x))))) 1.0) (+ 1.0 (- (log (+ x (hypot 1.0 x))) -1.0))) (log (+ x (hypot 1.0 x))))",
    "output_parens": 26,
    "avg_bits_err_input": 53.188717752877125,
    "avg_bits_err_output": 45.24037783165342,
    "avg_bits_err_improve": 7.948339921223706,
    "time": 14194.53271484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.688435062155849,
    "avg_bits_err_output": 5.688435062155849,
    "avg_bits_err_improve": 0,
    "time": 15343.047607421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (/ x (- -1.0 x)) (/ 1.0 (- -1.0 x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.01525,
    "avg_bits_err_output": 0.015665241011860922,
    "avg_bits_err_improve": -0.0004152410118609222,
    "time": 3219.405029296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1197.026123046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* r w) (* (/ (* r w) (- 1.0 v)) (- 0.375 (* v 0.25)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 13.409354168210111,
    "avg_bits_err_output": 0.3157985289122435,
    "avg_bits_err_improve": 13.093555639297868,
    "time": 22235.670654296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0) (* x1 x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5119075524366935,
    "avg_bits_err_output": 0.288585456933342,
    "avg_bits_err_improve": 0.22332209550335153,
    "time": 61500.0263671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(if (<= u -2e-19) (/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u)) (if (<= u 6.8e-62) (* (/ (/ t1 (+ t1 u)) (+ t1 u)) (- v)) (/ (* (/ v (+ t1 u)) (- t1)) (+ t1 u))))",
    "output_parens": 22,
    "avg_bits_err_input": 18.199758453382344,
    "avg_bits_err_output": 0.2998105221849815,
    "avg_bits_err_improve": 17.899947931197364,
    "time": 7149.656005859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (/ (* x x) 7.751569170074954)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.24974869440854447,
    "avg_bits_err_output": 0.20294396125465514,
    "avg_bits_err_improve": 0.04680473315388933,
    "time": 7807.10107421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0,
    "time": 3097.180419921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (* PI (- (/ 0.5 (* a (- b a))) (/ 0.5 (* b (- b a))))) (+ a b))",
    "output_parens": 10,
    "avg_bits_err_input": 14.513709106071017,
    "avg_bits_err_output": 0.2847956781359976,
    "avg_bits_err_improve": 14.22891342793502,
    "time": 16080.459228515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.52543822715212,
    "avg_bits_err_output": 24.79734225575716,
    "avg_bits_err_improve": 4.728095971394957,
    "time": 14497.23779296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 3908.92919921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017875,
    "avg_bits_err_output": 0.017875,
    "avg_bits_err_improve": 0,
    "time": 14058.033935546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (* (* (/ t (+ t 1.0)) 4.0) (/ t (+ t 1.0))) -1.0) (+ 2.0 (* (/ t (+ t 1.0)) (* (/ t (+ t 1.0)) 4.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.047625,
    "avg_bits_err_output": 0.007625,
    "avg_bits_err_improve": 0.04,
    "time": 8090.025634765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2666.896240234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2772.323974609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2843.55029296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.856874630548388,
    "avg_bits_err_output": 0.2415,
    "avg_bits_err_improve": 7.615374630548388,
    "time": 19456.046142578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(if (!= (pow (+ x eps) 5.0) 0.0) (* (pow (+ x eps) 5.0) (if (!= (/ (pow x 5.0) (- (pow (+ x eps) 5.0))) 0.0) (/ (- (* (/ (pow x 5.0) (- (pow (+ x eps) 5.0))) (/ (pow x 5.0) (- (pow (+ x eps) 5.0)))) (* (if (!= (/ (pow x 5.0) (pow (+ x eps) 5.0)) 0.0) (/ 1.0 (/ -1.0 (/ (pow x 5.0) (pow (+ x eps) 5.0)))) (/ (pow x 5.0) (- (pow (+ x eps) 5.0)))) (/ (pow (+ x eps) 5.0) (- (pow (+ x eps) 5.0))))) (/ (pow x 5.0) (- (pow (+ x eps) 5.0)))) (/ (- (pow (+ x eps) 5.0) (pow x 5.0)) (pow (+ x eps) 5.0)))) (- (pow (+ x eps) 5.0) (pow x 5.0)))",
    "output_parens": 67,
    "avg_bits_err_input": 7.5660326112087155,
    "avg_bits_err_output": 7.569070886331584,
    "avg_bits_err_improve": -0.0030382751228685834,
    "time": 19591.25439453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.333745352421747,
    "avg_bits_err_output": 15.333745352421747,
    "avg_bits_err_improve": 0,
    "time": 14217.39306640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (if (!= (- -1.0 (exp (cos x))) 0.0) (/ (- 1.0 (if (!= (* (exp (cos x)) (exp (cos x))) 0.0) (/ 1.0 (/ 1.0 (* (exp (cos x)) (exp (cos x))))) (* (exp (cos x)) (exp (cos x))))) (- -1.0 (exp (cos x)))) (expm1 (cos x)))) (exp (* 10.0 (* x x))))",
    "output_parens": 36,
    "avg_bits_err_input": 3.5732909029815776,
    "avg_bits_err_output": 3.57126622852961,
    "avg_bits_err_improve": 0.002024674451967634,
    "time": 17418.474609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 0.09152124062518029,
    "avg_bits_err_improve": 14.812107530172767,
    "time": 7904.823974609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.26257073515229,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.26257073515229,
    "time": 4718.580810546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.62585231336359,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.625352313363585,
    "time": 4666.607666015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.295125,
    "avg_bits_err_improve": 63.704875,
    "time": 27845.87060546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843251581151,
    "avg_bits_err_output": 0.3935,
    "avg_bits_err_improve": 61.449751581151,
    "time": 8720.310302734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- INFINITY)) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) 2e+290) (/ (/ (+ b (sqrt (fma b b (* c (* a -4.0))))) -2.0) a) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0)))))",
    "output_parens": 52,
    "avg_bits_err_input": 33.13804826137772,
    "avg_bits_err_output": 28.75461624240001,
    "avg_bits_err_improve": 4.383432018977707,
    "time": 25022.79296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70310996181358,
    "avg_bits_err_output": 33.70310996181358,
    "avg_bits_err_improve": 0,
    "time": 24234.29345703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1796.636474609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.778903636442365,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 39.76665363644236,
    "time": 4229.187255859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(- (/ (* x (+ x y)) (fma y y (* x x))) (* (/ (+ y x) (fma y y (* x x))) y))",
    "output_parens": 11,
    "avg_bits_err_input": 20.43269442652045,
    "avg_bits_err_output": 20.386496452484796,
    "avg_bits_err_improve": 0.04619797403565329,
    "time": 8572.0205078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6682673616342902,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6682673616342902,
    "time": 8330.9990234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(+ (* a (+ b c)) (* a d))",
    "output_parens": 4,
    "avg_bits_err_input": 0.038,
    "avg_bits_err_output": 0.040125,
    "avg_bits_err_improve": -0.002125000000000002,
    "time": 6418.2392578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.02454248125036058,
    "avg_bits_err_output": 0.02454248125036058,
    "avg_bits_err_improve": 0,
    "time": 5703.212890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.013375,
    "time": 2622.648193359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1377.9052734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40139417344137657,
    "avg_bits_err_output": 0.235625,
    "avg_bits_err_improve": 0.16576917344137657,
    "time": 4513.158203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (/ (- (if (!= (+ 1.0 (exp (log1p (* (cos x) (cos x))))) 0.0) (/ (- (* (- -1.0 (* (cos x) (cos x))) (- -1.0 (* (cos x) (cos x)))) 1.0) (+ 1.0 (exp (log1p (* (cos x) (cos x)))))) (* (cos x) (cos x))) 1.0) (- -1.0 (cos x))) (- 1.0 (cos x)))",
    "output_parens": 38,
    "avg_bits_err_input": 30.175013497041636,
    "avg_bits_err_output": 30.191501431459113,
    "avg_bits_err_improve": -0.016487934417476424,
    "time": 19585.9853515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (+ (/ (if (!= (* (* x x) (- eps)) 0.0) (/ (+ (* x (* (* x eps) (* x (* x eps)))) (* (* x x) (* eps (* (* x x) (- eps))))) (* (* x x) (- eps))) (* eps (+ (* x x) (* x (- x))))) (- eps)) (* eps (/ (- (* x x) eps) eps))) (- (* x x) eps))))",
    "output_parens": 39,
    "avg_bits_err_input": 24.807716904491198,
    "avg_bits_err_output": 24.862462363319803,
    "avg_bits_err_improve": -0.05474545882860582,
    "time": 10874.300537109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ x (- (tan x))) 0.0) (/ (+ (fma (- (fabs (/ x (tan x)))) (fabs (/ x (tan x))) (* (/ x (tan x)) (/ x (tan x)))) (* (/ x (- (tan x))) (/ (- x (sin x)) (tan x)))) (if (!= (/ x (tan x)) 0.0) (/ 1.0 (/ -1.0 (/ x (tan x)))) (/ x (- (tan x))))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 43,
    "avg_bits_err_input": 30.112599360710764,
    "avg_bits_err_output": 30.111144016003905,
    "avg_bits_err_improve": 0.0014553447068585967,
    "time": 31076.39111328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005875,
    "avg_bits_err_output": 0.005875,
    "avg_bits_err_improve": 0,
    "time": 2061.855712890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (!= (/ 100.0 (/ i n)) 0.0) (/ (+ (* (/ (pow (+ (/ i n) 1.0) n) 100.0) 40000.0) -400.0) (* i (/ 4.0 n))) (* (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ 100.0 (/ i n))))",
    "output_parens": 20,
    "avg_bits_err_input": 47.77211882117193,
    "avg_bits_err_output": 47.784879959365455,
    "avg_bits_err_improve": -0.012761138193525312,
    "time": 29878.4375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 0.0) (+ (* (/ b (fma d d (* c c))) d) (* a (/ c (fma c c (* d d))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 5e+264) (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (+ (* (/ b (fma d d (* c c))) d) (* a (/ c (fma c c (* d d)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 25.981051375107914,
    "avg_bits_err_output": 23.589080399470816,
    "avg_bits_err_improve": 2.391970975637097,
    "time": 13083.342529296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.025556527964095,
    "avg_bits_err_output": 23.136015032351725,
    "avg_bits_err_improve": 2.88954149561237,
    "time": 14513.4658203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.036,
    "avg_bits_err_output": 0.022500203512582077,
    "avg_bits_err_improve": 0.01349979648741792,
    "time": 6577.417724609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (- (- ux (- (* ux ux) ux)) (* ux (* maxCos (fma ux maxCos (- 1.0 ux))))) (- (* ux (* maxCos (- 1.0 ux)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.628666110642111,
    "avg_bits_err_output": 0.543577357967431,
    "avg_bits_err_improve": 13.08508875267468,
    "time": 23053.6494140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- (+ ux ux) (* ux ux)) (- (* (* ux maxCos) (+ (fma ux maxCos (- 1.0 ux)) (- 1.0 ux)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.67249297037591,
    "avg_bits_err_output": 0.3198989796971644,
    "avg_bits_err_improve": 13.352593990678745,
    "time": 25135.872314453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33726015310460555,
    "avg_bits_err_output": 0.3261547077656477,
    "avg_bits_err_improve": 0.011105445338957853,
    "time": 38153.257080078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20730650370629405,
    "avg_bits_err_output": 0.20730650370629405,
    "avg_bits_err_improve": 0,
    "time": 18248.586181640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (- (/ 0.0 (/ 1.0 (- 1.0 u1))) (/ (/ 1.0 (* (+ -1.0 u1) (+ -1.0 u1))) (/ -1.0 (- 1.0 u1)))) u1)) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5367695534358211,
    "avg_bits_err_output": 0.5461509391246732,
    "avg_bits_err_improve": -0.00938138568885205,
    "time": 22829.39892578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (- 1.0 u1) 4.0)) (/ (+ u1 (* u1 0.5)) (- 2.0 (+ u1 u1))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.3323867862721689,
    "avg_bits_err_output": 0.3482194600911634,
    "avg_bits_err_improve": -0.015832673818994503,
    "time": 20472.70654296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.3336518788743524,
    "avg_bits_err_output": 0.3335221328930775,
    "avg_bits_err_improve": 0.0001297459812748536,
    "time": 82456.3935546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (expm1 (log (+ (exp (/ x (- s))) 2.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06429548788115326,
    "avg_bits_err_output": 0.09366642515675053,
    "avg_bits_err_improve": -0.029370937275597267,
    "time": 23672.35888671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.14993301787864208,
    "avg_bits_err_output": 0.1287506813758924,
    "avg_bits_err_improve": 0.02118233650274967,
    "time": 18036.829833984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6669101577778684,
    "avg_bits_err_output": 0.6669101577778684,
    "avg_bits_err_improve": 0,
    "time": 19376.18603515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (- (+ v (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))) v) -1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.15813005669845615,
    "avg_bits_err_output": 0.1700689679394885,
    "avg_bits_err_improve": -0.011938911241032357,
    "time": 21319.947265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4823853075992357,
    "avg_bits_err_output": 2.4797694026941106,
    "avg_bits_err_improve": 0.0026159049051250882,
    "time": 35789.093017578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (/ (* (* (/ 0.25 v) (* cosTheta_i (/ 2.0 v))) cosTheta_O) (sinh (/ 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.46618866059225506,
    "avg_bits_err_output": 0.38289652075678515,
    "avg_bits_err_improve": 0.0832921398354699,
    "time": 23199.545166015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (- (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) (+ v v)) (+ 0.6931 (log (/ 0.5 v)))) (- 0.0 (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) (+ v v)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.11093281078861096,
    "avg_bits_err_output": 0.1121797072151464,
    "avg_bits_err_improve": -0.0012468964265354432,
    "time": 17332.73486328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (- (exp (log (* alpha alpha))) 1.0) PI) (log (* alpha alpha))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 0.466228432430596,
    "avg_bits_err_output": 0.48936975509572667,
    "avg_bits_err_improve": -0.023141322665130692,
    "time": 21177.30419921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(+ (/ (* (* 3.0 s) (log (/ 1.0 (if (!= (+ (* u 1.3333333333333333) 1.3333333333333333) 0.0) (/ (fma u (* u 1.7777777777777777) -1.7777777777777777) (fma u -1.3333333333333333 -1.3333333333333333)) (fma u -1.3333333333333333 1.3333333333333333))))) 2.0) (/ (* (* 3.0 s) (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 1.3193486567454937,
    "avg_bits_err_output": 1.1221758158936952,
    "avg_bits_err_improve": 0.19717284085179854,
    "time": 27838.0673828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (- -1.0 (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) 0.0) (/ (- (- 1.0 (* (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) (- -2.0 (log (/ 1.0 (fma u -4.0 1.0))))) (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 30,
    "avg_bits_err_input": 12.206946242590604,
    "avg_bits_err_output": 12.241869113892971,
    "avg_bits_err_improve": -0.03492287130236704,
    "time": 27278.102294921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (/ (* PI (* s r)) 0.16666666666666666)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12661813465590116,
    "avg_bits_err_output": 0.13151745710073012,
    "avg_bits_err_improve": -0.004899322444828963,
    "time": 23840.95361328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8848375306681342,
    "avg_bits_err_output": 0.6833279153654704,
    "avg_bits_err_improve": 0.20150961530266376,
    "time": 24673.342041015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta)))) (- -1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6889490988543148,
    "avg_bits_err_output": 0.47418458800040514,
    "avg_bits_err_improve": 0.21476451085390963,
    "time": 21815.48876953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (expm1 (log1p (* 2.0 (* PI u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.639527819892129,
    "avg_bits_err_output": 13.642456461810882,
    "avg_bits_err_improve": -0.0029286419187535273,
    "time": 23669.915771484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(+ (if (!= (* (cos (* 2.0 (* PI u2))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)) 0.0) (/ 1.0 (/ 1.0 (* (cos (* 2.0 (* PI u2))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0)))) (* (cos (* 2.0 (* PI u2))) (+ (sqrt (- (log (- 1.0 u1)))) -1.0))) (cos (* 2.0 (* PI u2))))",
    "output_parens": 35,
    "avg_bits_err_input": 13.688588634235135,
    "avg_bits_err_output": 13.592289972115722,
    "avg_bits_err_improve": 0.09629866211941263,
    "time": 26907.778564453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (- alpha) (fma (log (- 1.0 u0)) alpha alpha) (* alpha (fma (log (- 1.0 u0)) alpha alpha))) (* (* alpha (log (- 1.0 u0))) (- alpha)))",
    "output_parens": 15,
    "avg_bits_err_input": 14.112642639836032,
    "avg_bits_err_output": 14.039432984833995,
    "avg_bits_err_improve": 0.07320965500203691,
    "time": 22104.832763671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (if (!= (/ (/ cos2phi alphax) alphax) 0.0) (* (/ cos2phi alphax) (/ (/ cos2phi alphax) cos2phi)) (/ (/ cos2phi alphax) alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.548936959150813,
    "avg_bits_err_output": 12.552068839769333,
    "avg_bits_err_improve": -0.0031318806185201,
    "time": 17215.254150390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (+ (/ (+ (tan (* PI l)) (+ (tan (* PI l)) (tan (* PI l)))) (+ (+ F F) (+ F F))) (/ (tan (* PI l)) (+ (+ F F) (+ F F)))) F))",
    "output_parens": 22,
    "avg_bits_err_input": 16.827125798040637,
    "avg_bits_err_output": 12.661926255785216,
    "avg_bits_err_improve": 4.16519954225542,
    "time": 20860.922119140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21240808281331133,
    "avg_bits_err_output": 0.1566462406251803,
    "avg_bits_err_improve": 0.055761842188131044,
    "time": 16787.314697265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.72987245158614,
    "avg_bits_err_output": 10.531957499136015,
    "avg_bits_err_improve": 3.197914952450125,
    "time": 22122.88427734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 0.0) (/ (+ (* (/ (- (* (exp (* PI (/ f 4.0))) (exp (* PI (/ f 4.0)))) (* (exp (* PI (/ f -4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (fma (/ (exp (* PI (/ f -4.0))) (- (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (exp (* PI (/ f -4.0))) (/ (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (exp (* PI (/ f -4.0))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 218,
    "avg_bits_err_input": 61.54822637419554,
    "avg_bits_err_output": 61.634159487125785,
    "avg_bits_err_improve": -0.08593311293024186,
    "time": 97306.5908203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.43996276536648,
    "avg_bits_err_output": 35.25405675031379,
    "avg_bits_err_improve": 8.185906015052694,
    "time": 23566.90283203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8436816310052255,
    "avg_bits_err_output": 3.8436816310052255,
    "avg_bits_err_improve": 0,
    "time": 26044.287841796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (log (+ 1.0 (expm1 (/ 1.0 (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))))) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 1.0800849081295463,
    "avg_bits_err_output": 1.0809599081295462,
    "avg_bits_err_improve": -0.0008749999999999591,
    "time": 11744.683349609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 10.384655121214958,
    "avg_bits_err_improve": -0.0004031302191975783,
    "time": 16954.7822265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -5e+18) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U -5.6e-250) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om)))))))) (if (<= U 2e-226) (sqrt (- (* (* 2.0 (* n U)) (- t (* (/ l Om) (* 2.0 l)))) (* (* n (pow (/ l Om) 2.0)) (* (* 2.0 n) (* U (- U U*)))))) (if (<= U 6.3e-190) (sqrt (- (if (!= (* (* n U) (* (* l (/ l Om)) 4.0)) 0.0) (/ (* (* (* n U) (* (* l (/ l Om)) 4.0)) (- (* 2.0 (* (* n U) t)) (* (* n U) (* (* l (/ l Om)) 4.0)))) (* (* n U) (* (* l (/ l Om)) 4.0))) (* U (* (- t (* 2.0 (* l (/ l Om)))) (* 2.0 n)))) (* (* n (pow (/ l Om) 2.0)) (* (* 2.0 n) (* U (- U U*)))))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))))))",
    "output_parens": 111,
    "avg_bits_err_input": 34.65783381182702,
    "avg_bits_err_output": 30.39025165971737,
    "avg_bits_err_improve": 4.267582152109647,
    "time": 38685.005859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (/ (sin k) l) (tan k))) (* (/ (pow t 3.0) l) (pow (/ k t) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.600965719084996,
    "avg_bits_err_output": 36.522860499245915,
    "avg_bits_err_improve": 11.078105219839081,
    "time": 46633.8212890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (* (pow t 3.0) (/ (sin k) l)) (* (+ 2.0 (pow (/ k t) 2.0)) (tan k))) l))",
    "output_parens": 12,
    "avg_bits_err_input": 32.70258891534153,
    "avg_bits_err_output": 27.424509174836345,
    "avg_bits_err_improve": 5.278079740505184,
    "time": 24033.357421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (/ (/ (* a2 (* a2 (cos th))) 2.0) (sqrt 2.0)) (+ (* a2 (* a2 (/ (/ (cos th) (sqrt 2.0)) 2.0))) (* (cos th) (/ (* a1 a1) (sqrt 2.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.5150255672126525,
    "avg_bits_err_output": 0.48344718283062027,
    "avg_bits_err_improve": 0.0315783843820322,
    "time": 23197.99560546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5365099251197049,
    "avg_bits_err_output": 0.4929001687342728,
    "avg_bits_err_improve": 0.043609756385432075,
    "time": 19914.73291015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma J (- (- (exp l) (exp (- l))) (exp (- l))) (- (* (exp (- l)) (- J)))) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.293928584652306,
    "avg_bits_err_output": 17.306268498025844,
    "avg_bits_err_improve": -0.01233991337353757,
    "time": 24276.680419921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (fma n K (* K m)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 16,
    "avg_bits_err_input": 15.446249203110485,
    "avg_bits_err_output": 15.446483370395667,
    "avg_bits_err_improve": -0.00023416728518199648,
    "time": 8296.643798828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.973542481250362,
    "avg_bits_err_output": 17.973542481250362,
    "avg_bits_err_improve": 0,
    "time": 30576.418212890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* (/ (pow (* (/ D (+ d d)) M) 2.0) l) h))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.15935888795238,
    "avg_bits_err_output": 10.899450553650087,
    "avg_bits_err_improve": 3.259908334302292,
    "time": 22134.228759765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -5e+276) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) -5e-71) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 2e-122) (* c0 (sqrt (* (/ A V) (/ 1.0 l)))) (if (<= (* V l) 4e+78) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (+ (/ (/ (+ A (+ A A)) l) (+ (+ V V) (+ V V))) (/ (/ A (+ l l)) (+ V V)))))))))",
    "output_parens": 43,
    "avg_bits_err_input": 19.553756028197697,
    "avg_bits_err_output": 15.854317065319776,
    "avg_bits_err_improve": 3.6994389628779203,
    "time": 21037.610595703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* d d) 2e-236) (* (/ c0 (* 2.0 w)) (+ (* c0 (* (/ d D) (/ (/ (/ d h) w) D))) (sqrt (* (fma c0 (* (/ d D) (/ (/ (/ d h) w) D)) M) (fma c0 (* (/ d D) (/ (/ (/ d h) w) D)) (- M)))))) (if (<= (* d d) 5e+234) (+ (* (* (* d d) (/ (/ c0 (* w D)) (* h D))) (/ c0 (* w 2.0))) (* (sqrt (* (+ M (* (* d d) (/ (/ c0 (* w D)) (* h D)))) (- (* (* d d) (/ (/ c0 (* w D)) (* h D))) M))) (/ c0 (* w 2.0)))) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))))",
    "output_parens": 85,
    "avg_bits_err_input": 59.488770402858144,
    "avg_bits_err_output": 52.5294282819504,
    "avg_bits_err_improve": 6.959342120907742,
    "time": 44746.435302734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) (* (* h (/ (pow (/ d h) 0.5) l)) (* (pow (/ d l) 0.5) (* 0.5 (pow (* D (/ M (* d 2.0))) 2.0))))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+250) (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (+ (* (pow (/ (* D M) (+ d d)) 2.0) (/ h (* l -2.0))) 1.0))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (/ (* (pow (- (exp (log1p (/ (- (* D (exp (log1p (* M 0.5)))) D) d))) 1.0) 2.0) (* 0.5 h)) l)))))",
    "output_parens": 86,
    "avg_bits_err_input": 26.928219754942614,
    "avg_bits_err_output": 24.60342338585017,
    "avg_bits_err_improve": 2.324796369092443,
    "time": 40097.763916015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0)))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 30,
    "avg_bits_err_input": 15.2251660647968,
    "avg_bits_err_output": 14.754727920710945,
    "avg_bits_err_improve": 0.4704381440858558,
    "time": 25065.353271484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9836462406251804,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 0.9740212406251804,
    "time": 4574.086669921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (fma v (* v 5.0) -1.0) (* (fma v v -1.0) PI)) (* (sqrt (- 2.0 (* v (* v 6.0)))) t))",
    "output_parens": 11,
    "avg_bits_err_input": 0.44761267390050846,
    "avg_bits_err_output": 0.28992353695208645,
    "avg_bits_err_improve": 0.15768913694842202,
    "time": 19469.44775390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(/ (* (sqrt (+ 1.0 (* (* v v) -3.0))) (* (- 1.0 (* v v)) (sqrt 2.0))) 4.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.012719360937770433,
    "avg_bits_err_output": 0.01341748125036058,
    "avg_bits_err_improve": -0.0006981203125901465,
    "time": 5550.753662109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5217996194694392,
    "avg_bits_err_output": 0.5217996194694392,
    "avg_bits_err_improve": 0,
    "time": 9611.1611328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* a (/ (pow k m) (- (* k (+ k 10.0)) -1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 2.06863836397435,
    "avg_bits_err_output": 2.019546685187866,
    "avg_bits_err_improve": 0.04909167878648413,
    "time": 7290.10693359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (if (!= (exp (/ (- (+ Vef (+ mu EDonor)) Ec) KbT)) 0.0) (/ 1.0 (/ 1.0 (exp (/ (- (+ Vef (+ mu EDonor)) Ec) KbT)))) (exp (/ (- (+ Vef (+ mu EDonor)) Ec) KbT))))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 29,
    "avg_bits_err_input": 0.017803982015155383,
    "avg_bits_err_output": 0.018178982015155384,
    "avg_bits_err_improve": -0.00037500000000000033,
    "time": 9920.67236328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (pow (fma a a (* b b)) 2.0) (+ (* b (* b 4.0)) -1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.1843212018417508,
    "avg_bits_err_output": 0.18529996121657047,
    "avg_bits_err_improve": -0.000978759374819671,
    "time": 12329.400390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1849417761643687,
    "avg_bits_err_output": 0.1849417761643687,
    "avg_bits_err_improve": 0,
    "time": 25551.47412109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18395327522396127,
    "avg_bits_err_output": 0.18395327522396127,
    "avg_bits_err_improve": 0,
    "time": 23198.53759765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (if (!= (fma 4.0 (* p p) (* x x)) 0.0) (/ 1.0 (/ 1.0 (fma 4.0 (* p p) (* x x)))) (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.511156673774472,
    "avg_bits_err_output": 13.64674418602649,
    "avg_bits_err_improve": -0.13558751225201782,
    "time": 15247.5078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.110354816562136,
    "avg_bits_err_output": 0.063,
    "avg_bits_err_improve": 41.047354816562134,
    "time": 4246.90625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(log1p (log1p (expm1 (expm1 (- (if (!= (/ (sin x) (- (tan x) x)) 0.0) (/ 1.0 (/ 1.0 (/ (sin x) (- (tan x) x)))) (/ (sin x) (- (tan x) x))) (/ x (- (tan x) x)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 31.762109247225116,
    "avg_bits_err_output": 31.75295131687698,
    "avg_bits_err_improve": 0.009157930348134613,
    "time": 21024.54736328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.13426978784239,
    "avg_bits_err_output": 34.13426978784239,
    "avg_bits_err_improve": 0,
    "time": 12904.447265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (if (!= (- (* b_2 b_2) (* c (- a))) 0.0) (* (fma b_2 b_2 (* a c)) (/ (- (* b_2 b_2) (* a c)) (- (* b_2 b_2) (* c (- a))))) (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 24,
    "avg_bits_err_input": 34.2973491957779,
    "avg_bits_err_output": 34.29993674626423,
    "avg_bits_err_improve": -0.0025875504863321908,
    "time": 14431.523681640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.54762944792096,
    "avg_bits_err_output": 30.758613942105768,
    "avg_bits_err_improve": 0.7890155058151933,
    "time": 16320.223876953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.52726198764511,
    "avg_bits_err_output": 32.52726198764511,
    "avg_bits_err_improve": 0,
    "time": 15795.650146484375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (- (+ (expm1 (- (log1p N) (log N))) -1.0) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.188278670226154,
    "avg_bits_err_output": 29.19032657171458,
    "avg_bits_err_improve": -0.002047901488424486,
    "time": 12828.12744140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (/ x x) (+ x (+ x 2.0))) (/ (+ (/ x (+ x (+ x 2.0))) -1.0) x))",
    "output_parens": 10,
    "avg_bits_err_input": 14.899962691339875,
    "avg_bits_err_output": 14.901416160906606,
    "avg_bits_err_improve": -0.0014534695667318687,
    "time": 16163.686767578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (cos (+ x eps)) (cos x))",
    "output_parens": 4,
    "avg_bits_err_input": 39.72788865800732,
    "avg_bits_err_output": 39.72788865800732,
    "avg_bits_err_improve": 0,
    "time": 17377.46142578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (+ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (fma (cbrt x) (cbrt x) 1.0)) 1.0) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 29.449209773693745,
    "avg_bits_err_output": 29.327558397587012,
    "avg_bits_err_improve": 0.12165137610673327,
    "time": 11839.1669921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ 0.25 (sin x)) (/ (+ (- (cos x)) 0.75) (sin x)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.38121018738277,
    "avg_bits_err_output": 29.406700892365464,
    "avg_bits_err_improve": -0.025490704982694012,
    "time": 23751.302978515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (fma b b (* a (* c -4.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.09578963633692,
    "avg_bits_err_output": 34.09982015876602,
    "avg_bits_err_improve": -0.0040305224291046216,
    "time": 21891.761474609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma c (* (* a 16.0) (* a (/ c (- (* a (* c -4.0)) (* b b))))) (* (* b b) (/ (* b b) (- (* b b) (* a (* c -4.0)))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 30,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 33.72854510259447,
    "avg_bits_err_improve": 0.12798214858365498,
    "time": 25999.584228515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (- (* (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) 0.5) (/ (- 1.0 (log (- 1.0 x))) (+ (log1p x) (log1p x)))) -0.5)",
    "output_parens": 16,
    "avg_bits_err_input": 61.26492470872319,
    "avg_bits_err_output": 50.286507042242526,
    "avg_bits_err_improve": 10.978417666480667,
    "time": 24165.76025390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log (+ n 1.0)) (log n)) n)) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 63.00460421687091,
    "avg_bits_err_output": 44.199417924430115,
    "avg_bits_err_improve": 18.805186292440794,
    "time": 16157.848876953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(+ 1.0 (+ (log (- (/ eps (- -1.0 eps)) (/ 1.0 (- -1.0 eps)))) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 58.61421781599877,
    "avg_bits_err_output": 58.634652986427916,
    "avg_bits_err_improve": -0.020435170429145444,
    "time": 17797.528564453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (/ (- (/ x (/ x (tan x))) x) (tan x)) x)",
    "output_parens": 7,
    "avg_bits_err_input": 59.95428283110227,
    "avg_bits_err_output": 59.938637338115115,
    "avg_bits_err_improve": 0.01564549298715434,
    "time": 30091.693115234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.32324488120562,
    "avg_bits_err_output": 29.0244882744018,
    "avg_bits_err_improve": 31.298756606803817,
    "time": 25291.827880859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.37114770170423,
    "avg_bits_err_output": 0.39732312031259015,
    "avg_bits_err_improve": 40.97382458139164,
    "time": 7396.708984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.694040926597964,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.693415926597964,
    "time": 2835.72314453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.25158828609527,
    "avg_bits_err_output": 0.01600607606577124,
    "avg_bits_err_improve": 29.2355822100295,
    "time": 3733.43701171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (+ (expm1 x) (expm1 (- x))) 0.0) (/ (* (+ (expm1 x) (expm1 (- x))) (+ (expm1 x) (expm1 (- x)))) (+ (expm1 x) (expm1 (- x)))) (+ (expm1 x) (expm1 (- x))))",
    "output_parens": 24,
    "avg_bits_err_input": 29.636062920659565,
    "avg_bits_err_output": 28.738446964626533,
    "avg_bits_err_improve": 0.8976159560330323,
    "time": 19016.090576171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ 0.0 (+ (/ -2.0 x) (if (!= (/ 1.0 (+ 1.0 x)) 0.0) (/ (+ 1.0 (/ 1.0 (/ (+ x -1.0) (+ 1.0 x)))) (+ 1.0 x)) (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))))))",
    "output_parens": 19,
    "avg_bits_err_input": 10.084907377362468,
    "avg_bits_err_output": 10.097874045672611,
    "avg_bits_err_improve": -0.012966668310143703,
    "time": 28829.8720703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (if (!= (/ (+ (tan (+ x eps)) (tan x)) (tan (+ x eps))) 0.0) (/ (/ (- (tan (+ x eps)) (* (tan x) (/ (tan x) (tan (+ x eps))))) (tan (+ x eps))) (/ (+ (tan (+ x eps)) (tan x)) (tan (+ x eps)))) (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 47,
    "avg_bits_err_input": 37.269582755506676,
    "avg_bits_err_output": 37.275969131549914,
    "avg_bits_err_improve": -0.006386376043238329,
    "time": 19412.47119140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.50086927330795,
    "avg_bits_err_output": 28.84472591409056,
    "avg_bits_err_improve": 0.6561433592173884,
    "time": 19508.80859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps)))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 18,
    "avg_bits_err_input": 37.201022185864595,
    "avg_bits_err_output": 37.20296830428363,
    "avg_bits_err_improve": -0.0019461184190348035,
    "time": 16741.346923828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (+ (/ (sqrt (+ 1.0 x)) (sqrt x)) -1.0) (sqrt (+ 1.0 x)))",
    "output_parens": 8,
    "avg_bits_err_input": 20.403880175719536,
    "avg_bits_err_output": 20.399106652707268,
    "avg_bits_err_improve": 0.004773523012268299,
    "time": 11553.68408203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.088187256374939,
    "avg_bits_err_output": 14.088187256374939,
    "avg_bits_err_improve": 0,
    "time": 3581.845458984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.37658192425628,
    "avg_bits_err_output": 29.37658192425628,
    "avg_bits_err_improve": 0,
    "time": 33678.405029296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (* (- m (* m m)) (- 1.0 m)) v) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0742920849918798,
    "avg_bits_err_output": 0.07679580340980405,
    "avg_bits_err_improve": -0.0025037184179242528,
    "time": 11302.836181640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.250279562481776,
    "avg_bits_err_output": 0.31243665469173687,
    "avg_bits_err_improve": 15.937842907790039,
    "time": 10271.438720703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (/ (* PI (+ (+ angle angle) (+ angle (+ angle (+ (+ angle angle) (+ angle angle)))))) 1440.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.38239609746375,
    "avg_bits_err_output": 20.407923176860436,
    "avg_bits_err_improve": -0.025527079396685082,
    "time": 25041.9755859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.088215511093885,
    "avg_bits_err_output": 31.088215511093885,
    "avg_bits_err_improve": 0,
    "time": 35041.786376953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (/ (* angle PI) 180.0))) 2.0) (pow (* b (cos (* (/ PI 2880.0) (+ (+ angle (+ (+ angle angle) (+ angle angle))) (+ angle (fma (* (- angle (- angle)) -2.0) -2.0 (+ angle angle))))))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.56853517139335,
    "avg_bits_err_output": 20.605493454314924,
    "avg_bits_err_improve": -0.03695828292157444,
    "time": 28001.1552734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17595056406367185,
    "avg_bits_err_output": 0.17411908981252194,
    "avg_bits_err_improve": 0.001831474251149906,
    "time": 16432.49267578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3189410841024603,
    "avg_bits_err_output": 0.31038988561268716,
    "avg_bits_err_improve": 0.008551198489773149,
    "time": 18947.82763671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.14049060156295073,
    "avg_bits_err_output": 0.14049060156295073,
    "avg_bits_err_improve": 0,
    "time": 14432.3564453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (if (!= (* (cos phi2) (cos (- lambda1 lambda2))) 0.0) (/ (/ (* (cos (- lambda1 lambda2)) (* (cos (- lambda1 lambda2)) (* (cos phi2) (cos phi2)))) (cos (- lambda1 lambda2))) (cos phi2)) (* (cos phi2) (cos (- lambda1 lambda2))))))) R)",
    "output_parens": 31,
    "avg_bits_err_input": 16.351595573944635,
    "avg_bits_err_output": 16.366741909483032,
    "avg_bits_err_improve": -0.015146335538396727,
    "time": 31126.466064453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b 1.0) 0.0) (/ (+ (- (* (sqrt (fma c (* -4.0 a) (* b b))) (+ b 1.0)) (* b b)) (- b)) (+ b 1.0)) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 52.37542226341931,
    "avg_bits_err_output": 50.443201395085026,
    "avg_bits_err_improve": 1.9322208683342836,
    "time": 23732.055419921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (fma (sqrt (fma -4.0 (* a c) (* b b))) (sqrt (fma -4.0 (* a c) (* b b))) (- (* b b))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) a) 0.25) (+ (/ (sqrt (fma c (* a -4.0) (* b b))) (* a 4.0)) (/ (* b -0.25) a)))",
    "output_parens": 41,
    "avg_bits_err_input": 28.841902841350603,
    "avg_bits_err_output": 28.401309946754022,
    "avg_bits_err_improve": 0.44059289459658046,
    "time": 31752.4599609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (fma b b (fma (+ b b) (- b) (* (sqrt (fma b b (* a (* -4.0 c)))) (sqrt (fma b b (* a (* -4.0 c))))))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 33,
    "avg_bits_err_input": 43.7664966882125,
    "avg_bits_err_output": 42.76088067823498,
    "avg_bits_err_improve": 1.0056160099775155,
    "time": 29277.51171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (fma b b (* a (* c -4.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.09730309892419,
    "avg_bits_err_output": 34.09982015876602,
    "avg_bits_err_improve": -0.002517059841828484,
    "time": 18054.879150390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (+ (cos phi1) (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0)) 0.0) (* (+ (cos phi1) (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0)) (/ (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (+ (cos phi1) (fma (cos (- lambda1 lambda2)) (cos phi2) 1.0)))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.9115798475594101,
    "avg_bits_err_output": 0.9224163205413045,
    "avg_bits_err_improve": -0.010836472981894385,
    "time": 27356.283447265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 3.0) 0.0) (/ (+ (/ (+ 2.0 (- (/ 4.0 (+ 1.0 (exp (* -2.0 x)))) -2.0)) (exp (log1p (exp (* -2.0 x))))) -3.0) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 3.0)) (- -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x))))))",
    "output_parens": 30,
    "avg_bits_err_input": 28.889383349182452,
    "avg_bits_err_output": 28.88506467499004,
    "avg_bits_err_improve": 0.00431867419241172,
    "time": 24383.808349609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (* (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp x) (+ (exp x) (exp (- x))))) 0.0) (/ (- (* (* (if (!= (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))) 0.0) (* (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))) (/ (/ (exp x) (+ (exp x) (exp (- x)))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))) (/ (exp x) (+ (exp x) (exp (- x))))) (/ (exp x) (+ (exp x) (exp (- x))))) (* (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp x) (+ (exp x) (exp (- x)))))) (* (* (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp x) (+ (exp x) (exp (- x))))) (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) (/ (exp (- x)) (+ (exp x) (exp (- x))))))) (* (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp x) (+ (exp x) (exp (- x)))))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 132,
    "avg_bits_err_input": 58.0612262879322,
    "avg_bits_err_output": 58.07227082132101,
    "avg_bits_err_improve": -0.011044533388812283,
    "time": 20063.06005859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.71578129667867,
    "avg_bits_err_output": 0.00825,
    "avg_bits_err_improve": 57.707531296678674,
    "time": 12913.9306640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.007719360937770434,
    "avg_bits_err_output": 0.09378928621442392,
    "avg_bits_err_improve": -0.08606992527665348,
    "time": 3626.119873046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.89775,
    "avg_bits_err_output": 31.89775,
    "avg_bits_err_improve": 0,
    "time": 4827.90234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.60761187666961,
    "avg_bits_err_output": 0.01839624062518029,
    "avg_bits_err_improve": 58.58921563604443,
    "time": 12853.96435546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (- (+ (/ (sqrt (- 1.0 (* x x))) x) (/ 1.0 (+ x x))) (/ -1.0 (+ x x))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.05141524101186092,
    "avg_bits_err_output": 0.05154024101186092,
    "avg_bits_err_improve": -0.0001250000000000001,
    "time": 5467.431396484375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* (* eh (cos t)) (sin (atan (/ eh (* ew (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12225,
    "avg_bits_err_output": 0.121625,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 25935.089111328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1295,
    "avg_bits_err_output": 0.1295,
    "avg_bits_err_improve": 0,
    "time": 25360.35302734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 40.385934374038776,
    "avg_bits_err_output": 3.778640136639726,
    "avg_bits_err_improve": 36.60729423739905,
    "time": 22702.85888671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.264119382402065,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 14.254744382402064,
    "time": 7773.875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (if (!= (fma (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (sin phi1)) (- (cos delta))) 0.0) (/ (- (* (cos delta) (cos delta)) (* (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1))))))) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1))))))))) (+ (cos delta) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1))))))))) (fma (sin (asin (fma (sin phi1) (cos delta) (* (cos theta) (* (sin delta) (cos phi1)))))) (- (sin phi1)) (cos delta)))))",
    "output_parens": 82,
    "avg_bits_err_input": 0.1612182612364986,
    "avg_bits_err_output": 0.16858929330596018,
    "avg_bits_err_improve": -0.007371032069461575,
    "time": 35188.84033203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (+ (fma (- b) b (* b b)) (* b b))) 0.0) (/ (- (* (fma (+ b (sqrt (fma b b (* c (* a -3.0))))) (- (sqrt (fma b b (* c (* a -3.0)))) b) (fma (- (fabs b)) (fabs b) (* b b))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (* (fma (- b) b (* b b)) (fma (- b) b (* b b)))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (+ (fma (- b) b (* b b)) (* b b)))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 102,
    "avg_bits_err_input": 52.381283108553,
    "avg_bits_err_output": 51.26044452718612,
    "avg_bits_err_improve": 1.1208385813668826,
    "time": 36798.1337890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ (fma (- b) b (* b b)) (* b b))) 0.0) (* (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ 0.0 (* b b))) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ 0.0 (* b b))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 87,
    "avg_bits_err_input": 29.000176910769337,
    "avg_bits_err_output": 28.352866495016055,
    "avg_bits_err_improve": 0.6473104157532816,
    "time": 32981.722900390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (- b) b (* b b))) 0.0) (/ (- (* (fma b b (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b (+ b b))))) (* (- (sqrt (fma b b (* c (* a -3.0)))) b) (+ b (sqrt (fma b b (* c (* a -3.0))))))) (* (fma (- b) b (* b b)) (fma (- b) b (* b b)))) (- (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (- b) b (* b b)))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 99,
    "avg_bits_err_input": 43.800473786413896,
    "avg_bits_err_output": 42.66506071062405,
    "avg_bits_err_improve": 1.1354130757898488,
    "time": 31590.00439453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (sqrt (fma b b (* a (* c -3.0)))) 0.0) (/ (- (* (sqrt (fma b b (* a (* c -3.0)))) (sqrt (fma b b (* a (* c -3.0))))) (* b (sqrt (fma b b (* a (* c -3.0)))))) (sqrt (fma b b (* a (* c -3.0))))) (- (sqrt (fma b b (* a (* c -3.0)))) b)) (* 3.0 a))",
    "output_parens": 33,
    "avg_bits_err_input": 34.136680201286005,
    "avg_bits_err_output": 34.19259464606035,
    "avg_bits_err_improve": -0.05591444477434493,
    "time": 21372.1904296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.090280293143818,
    "avg_bits_err_output": 13.090158529601144,
    "avg_bits_err_improve": 0.00012176354267445788,
    "time": 30611.49169921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 25.141181743828806,
    "avg_bits_err_improve": 4.435341568499634,
    "time": 23616.09765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(if (!= (/ x (+ 1.0 x)) 0.0) (+ (/ x (+ x 1.0)) (/ x (- (* x x) x))) (+ (/ 1.0 (+ x -1.0)) (/ x (+ 1.0 x))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.0132259193652572,
    "avg_bits_err_improve": -0.0017259193652572006,
    "time": 9015.375244140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (- 1.0 (/ x (+ x -1.0))) (- (/ 1.0 (+ x -1.0)))) (+ 1.0 x))",
    "output_parens": 9,
    "avg_bits_err_input": 14.87853005323882,
    "avg_bits_err_output": 12.917384746632278,
    "avg_bits_err_improve": 1.9611453066065412,
    "time": 19631.594482421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (- C)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C)))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.28084410863378,
    "avg_bits_err_output": 51.9444795999623,
    "avg_bits_err_improve": 0.3363645086714797,
    "time": 36840.512939453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (- (exp (log1p (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 29.631214795776373,
    "avg_bits_err_output": 29.643449797896793,
    "avg_bits_err_improve": -0.012235002120419836,
    "time": 26081.30224609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* 2.0 (* (* F (- (pow B 2.0) (* 4.0 (* A C)))) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.13494609591828,
    "avg_bits_err_output": 51.855613765176294,
    "avg_bits_err_improve": 0.2793323307419868,
    "time": 34368.4736328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.375658357687337,
    "avg_bits_err_output": 15.375658357687337,
    "avg_bits_err_improve": 0,
    "time": 2342.331787109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (if (!= (* g (- g (sqrt (fma h (- h) (* g g))))) 0.0) (/ 1.0 (/ 1.0 (* g (- g (sqrt (fma h (- h) (* g g))))))) (* g (- g (sqrt (fma h (- h) (* g g)))))) (- g)) (- (sqrt (fma h (- h) (* g g))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 36.11006560959621,
    "avg_bits_err_output": 36.0731322036133,
    "avg_bits_err_improve": 0.03693340598291428,
    "time": 15866.166748046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9898921062575732,
    "avg_bits_err_output": 0.9765355265643934,
    "avg_bits_err_improve": 0.013356579693179826,
    "time": 5562.83935546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.5634481203125902,
    "avg_bits_err_output": 0.5634481203125902,
    "avg_bits_err_improve": 0,
    "time": 10967.479248046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-291) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ (/ a1 (+ b1 b1)) b2) (+ a2 a2)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+276) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 38,
    "avg_bits_err_input": 11.160701667980266,
    "avg_bits_err_output": 2.832395895763912,
    "avg_bits_err_improve": 8.328305772216353,
    "time": 9990.23193359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49714040828653017,
    "avg_bits_err_output": 0.44719812031259015,
    "avg_bits_err_improve": 0.049942287973940014,
    "time": 9064.260986328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -0.033) (log (if (!= (+ (+ x (hypot 1.0 x)) -2.0) 0.0) (/ (fma (+ x (+ (hypot 1.0 x) -1.0)) (+ x (+ (hypot 1.0 x) -1.0)) -1.0) (+ (+ x (hypot 1.0 x)) -2.0)) (+ x (hypot 1.0 x)))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 53.115667577270706,
    "avg_bits_err_output": 13.733300366926064,
    "avg_bits_err_improve": 39.38236721034464,
    "time": 14320.48193359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.680914404955915,
    "avg_bits_err_output": 5.681142041675973,
    "avg_bits_err_improve": -0.00022763672005865487,
    "time": 12986.47265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (if (!= (+ (/ x (- -1.0 x)) (/ 1.0 (- -1.0 x))) 0.0) (/ (/ (- 1.0 x) (- -1.0 x)) (+ (/ x (- -1.0 x)) (/ 1.0 (- -1.0 x)))) (/ (- 1.0 x) (- x -1.0))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0.0017499999999999998,
    "time": 5922.615234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1246.076904296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 13.229562452244346,
    "avg_bits_err_output": 0.7082169273587804,
    "avg_bits_err_improve": 12.521345524885566,
    "time": 24093.311279296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)) (* (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* x1 2.0))))))) (+ x1 x1)))",
    "output_parens": 47,
    "avg_bits_err_input": 0.5125338784601732,
    "avg_bits_err_output": 0.2678869460988504,
    "avg_bits_err_improve": 0.2446469323613228,
    "time": 65616.00317382812,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* -2.0 (* v (/ t1 (+ t1 (+ t1 (+ u u)))))) (+ t1 u))",
    "output_parens": 8,
    "avg_bits_err_input": 17.856409227374165,
    "avg_bits_err_output": 1.257897050947513,
    "avg_bits_err_improve": 16.598512176426652,
    "time": 5691.783935546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.22539340061561777,
    "avg_bits_err_output": 0.18787673793068907,
    "avg_bits_err_improve": 0.0375166626849287,
    "time": 7289.331787109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2663.515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 13.761072592660604,
    "avg_bits_err_output": 0.24842725625468728,
    "avg_bits_err_improve": 13.512645336405916,
    "time": 16685.505126953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(if (<= (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 0.0) (- (expm1 (log (- (* (exp (* x (- -1.0 eps))) (+ -0.5 (/ 0.5 eps))) (- -1.0 (* (exp (fma x eps (- x))) (+ -0.5 (/ -0.5 eps)))))))) (expm1 (log1p (+ (+ (* (exp (- (fma eps x x))) (- 0.5 (/ 0.5 eps))) (* (exp (* x (+ eps -1.0))) (/ 0.5 eps))) (* (exp (* x (+ eps -1.0))) 0.5)))))",
    "output_parens": 53,
    "avg_bits_err_input": 29.204602081864202,
    "avg_bits_err_output": 0.6186210650728486,
    "avg_bits_err_improve": 28.585981016791354,
    "time": 29812.493408203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (+ (/ (- 8.0 (/ 8.0 (+ t (/ t t)))) (* t (+ 2.0 (/ 2.0 t)))) (/ 4.0 (+ t (/ t t))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.019375,
    "avg_bits_err_output": 0.0036981203125901444,
    "avg_bits_err_improve": 0.015676879687409856,
    "time": 12000.810546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.023,
    "avg_bits_err_output": 0.030375,
    "avg_bits_err_improve": -0.007375,
    "time": 12053.426025390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- -2.0 (* (* (/ t (+ t 1.0)) (/ t (+ t 1.0))) 8.0)) (+ (* (* (/ t (+ t 1.0)) (/ t (+ t 1.0))) -8.0) -4.0))",
    "output_parens": 15,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 0.032,
    "time": 17128.018310546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3095.756103515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2306.1865234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2588.240234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.859650380151461,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 7.6109003801514605,
    "time": 22346.0234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(if (!= (pow (+ x eps) 5.0) 0.0) (* (pow (+ x eps) 5.0) (/ (- (pow (+ x eps) 5.0) (pow x 5.0)) (pow (+ x eps) 5.0))) (- (pow (+ x eps) 5.0) (pow x 5.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 7.644378882563689,
    "avg_bits_err_output": 7.644458265688102,
    "avg_bits_err_improve": -7.938312441257978e-05,
    "time": 20500.7958984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (- (pow (+ x eps) 2.0) (pow x 2.0)) 0.0) (* (* (- (pow x 2.0) (- (pow (+ x eps) 2.0) (- (pow x 2.0) (pow (+ x eps) 2.0)))) -1.0) (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) (* (- (pow x 2.0) (pow (+ x eps) 2.0)) -2.0))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 31,
    "avg_bits_err_input": 16.52739149729937,
    "avg_bits_err_output": 16.528235858237142,
    "avg_bits_err_improve": -0.0008443609377728478,
    "time": 17903.984619140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (/ 1.0 (* (/ (/ 2.0 (cos x)) (exp (* 10.0 (* x x)))) 0.5)) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 20,
    "avg_bits_err_input": 3.5098863314918933,
    "avg_bits_err_output": 3.513361003092749,
    "avg_bits_err_improve": -0.0034746716008555723,
    "time": 20069.685791015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 14.731017406151821,
    "avg_bits_err_improve": 0,
    "time": 11123.199462890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.124525152334634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.124525152334634,
    "time": 5011.48095703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.42814559085069,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.42789559085069,
    "time": 5690.632568359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(if (!= (* 1.7e+308 t) 0.0) (* t (/ (* 1.7e+308 (+ -1.0 t)) t)) (/ (/ (* -1.7e+308 (- 1.7e+308 (* 1.7e+308 t))) -1.7e+308) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.3040212406251803,
    "avg_bits_err_improve": 63.69597875937482,
    "time": 26704.843505859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(/ (* t t) 2.5e+31)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843251666115286,
    "avg_bits_err_output": 0.412009775004327,
    "avg_bits_err_improve": 61.43124189111096,
    "time": 7826.8935546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma c (* (* a 16.0) (* a (/ c (- (* a (* c -4.0)) (* b b))))) (* (* b b) (/ (* b b) (- (* b b) (* a (* c -4.0)))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 30,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 33.72854510259447,
    "avg_bits_err_improve": 0.12798214858365498,
    "time": 27001.649169921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (fma b b (* a (* c -4.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 34.09730309892419,
    "avg_bits_err_output": 34.09982015876602,
    "avg_bits_err_improve": -0.002517059841828484,
    "time": 22877.929931640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2356.720947265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.957346973747235,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 39.949221973747235,
    "time": 3889.98779296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.07051112173985,
    "avg_bits_err_output": 20.07051112173985,
    "avg_bits_err_improve": 0,
    "time": 11180.064208984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6618832283851797,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6618832283851797,
    "time": 7798.845703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.035375,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.034874999999999996,
    "time": 6510.003173828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.023698120312590144,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.013323120312590144,
    "time": 4216.8115234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.01325,
    "time": 3096.624267578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 1642.45849609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ c a) (+ b d)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40413477500432715,
    "avg_bits_err_output": 0.241,
    "avg_bits_err_improve": 0.16313477500432716,
    "time": 5402.42578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (/ (- (/ (log (+ 1.0 (expm1 (- (* (cos x) (cos x)) 1.0)))) 2.0) (/ (- 1.0 (* (cos x) (cos x))) 2.0)) (- -1.0 (cos x))) (- 1.0 (cos x)))",
    "output_parens": 23,
    "avg_bits_err_input": 29.33689209056337,
    "avg_bits_err_output": 29.33846704657549,
    "avg_bits_err_improve": -0.001574956012120765,
    "time": 20490.489990234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.32207227533444,
    "avg_bits_err_output": 24.320206766674616,
    "avg_bits_err_improve": 0.001865508659822268,
    "time": 11878.389404296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ (- x) (tan x)) 0.0) (/ (if (!= (fma (/ (- (sin x) x) (tan x)) (/ x (tan x)) 1.0) 0.0) (/ (- (* (fma (/ (- (sin x) x) (tan x)) (/ x (tan x)) 1.0) (fma (/ (- (sin x) x) (tan x)) (/ x (tan x)) 1.0)) (fma (/ (- (sin x) x) (tan x)) (/ x (tan x)) 1.0)) (fma (/ (- (sin x) x) (tan x)) (/ x (tan x)) 1.0)) (* (- (sin x) x) (/ x (* (tan x) (tan x))))) (/ (- x) (tan x))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 60,
    "avg_bits_err_input": 29.891511944556225,
    "avg_bits_err_output": 29.897443894164137,
    "avg_bits_err_improve": -0.005931949607912657,
    "time": 31153.1630859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.008719360937770431,
    "avg_bits_err_output": 0.008719360937770431,
    "avg_bits_err_improve": 0,
    "time": 2161.25048828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -2.5e-15) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 4e-18) 0.0 (if (<= n 5.8e+151) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (* i (/ i (* n n)))) (log1p (expm1 (/ 1.0 (/ 2.0 (/ 2.0 (/ i n))))))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.02e+293) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (* i (* i n)) n) (* i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))))",
    "output_parens": 113,
    "avg_bits_err_input": 47.55933602860441,
    "avg_bits_err_output": 42.36627221730165,
    "avg_bits_err_improve": 5.193063811302764,
    "time": 28400.26171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(fma b (/ d (fma c c (* d d))) (* a (/ c (fma c c (* d d)))))",
    "output_parens": 8,
    "avg_bits_err_input": 26.282295503603127,
    "avg_bits_err_output": 23.162956859551347,
    "avg_bits_err_improve": 3.11933864405178,
    "time": 11519.804931640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 2e+279) (/ (fma a (- d) (- (* b c) (+ (* a (- d)) (* a d)))) (+ (* c c) (* d d))) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 49,
    "avg_bits_err_input": 25.908890223171973,
    "avg_bits_err_output": 22.640451967061264,
    "avg_bits_err_improve": 3.2684382561107093,
    "time": 15340.56689453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03425,
    "avg_bits_err_output": 0.024210878354688034,
    "avg_bits_err_improve": 0.010039121645311969,
    "time": 10168.373779296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- (- ux (* ux (+ ux -1.0))) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.532161296898241,
    "avg_bits_err_output": 0.5488933950027851,
    "avg_bits_err_improve": 12.983267901895456,
    "time": 24576.017578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(/ (* (cos (* uy (* 2.0 PI))) (sqrt (- (- ux (- (* ux (+ (* ux (* maxCos maxCos)) ux)) ux)) (* (- ux (* ux ux)) (+ maxCos maxCos))))) 1.0)",
    "output_parens": 17,
    "avg_bits_err_input": 13.571100165100978,
    "avg_bits_err_output": 0.33784062372628715,
    "avg_bits_err_improve": 13.233259541374691,
    "time": 25758.722412109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33834245490952625,
    "avg_bits_err_output": 0.3203913676352838,
    "avg_bits_err_improve": 0.01795108727424244,
    "time": 42370.438232421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20443398826188036,
    "avg_bits_err_output": 0.20443398826188036,
    "avg_bits_err_improve": 0,
    "time": 17545.569580078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(if (!= (sin (* 6.28318530718 u2)) 0.0) (/ (sqrt (/ u1 (- 1.0 u1))) (/ 1.0 (sin (* 6.28318530718 u2)))) (* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.5322783060501183,
    "avg_bits_err_output": 0.584408991606833,
    "avg_bits_err_improve": -0.05213068555671474,
    "time": 20688.830322265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (if (!= (/ (- u1) (* (- 1.0 u1) 4.0)) 0.0) (/ (* (- (+ u1 (+ u1 u1))) (/ u1 (* 4.0 (* (- 1.0 u1) (* (- 1.0 u1) 4.0))))) (/ (- u1) (* (- 1.0 u1) 4.0))) (/ (+ u1 (+ u1 u1)) (* (- 1.0 u1) 4.0))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 35,
    "avg_bits_err_input": 0.32006129259685334,
    "avg_bits_err_output": 0.3633236758026858,
    "avg_bits_err_improve": -0.04326238320583248,
    "time": 25866.658203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.3359695363788537,
    "avg_bits_err_output": 0.3361409007471095,
    "avg_bits_err_improve": -0.0001713643682558219,
    "time": 33287.83984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ (- x) s)) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05602140916728211,
    "avg_bits_err_output": 0.05516270029860545,
    "avg_bits_err_improve": 0.000858708868676665,
    "time": 17228.966796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(* (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (/ 1.0 (fma s (exp (/ (fabs x) (- s))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13045220970122418,
    "avg_bits_err_output": 0.18113972173089088,
    "avg_bits_err_improve": -0.050687512029666704,
    "time": 14381.402587890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (log1p (expm1 (sin (* PI (* x tau))))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6725636303603195,
    "avg_bits_err_output": 0.6846591564354931,
    "avg_bits_err_improve": -0.012095526075173613,
    "time": 18591.727783203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.15501197676078995,
    "avg_bits_err_output": 0.15042157656993405,
    "avg_bits_err_improve": 0.004590400190855909,
    "time": 23712.478759765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.6561803163408895,
    "avg_bits_err_output": 2.65427467727866,
    "avg_bits_err_improve": 0.0019056390622296249,
    "time": 32983.24658203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (- cosTheta_i) (* (- (/ cosTheta_O v)) (/ (/ (exp (/ (* sinTheta_i (- sinTheta_O)) v)) v) (* 2.0 (sinh (/ 1.0 v))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4647366230633134,
    "avg_bits_err_output": 0.38656109763954993,
    "avg_bits_err_improve": 0.07817552542376349,
    "time": 24046.09228515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= 0.6931 0.0) (/ (+ 0.48038761 (+ (/ (* (fma cosTheta_i cosTheta_O (- -1.0 (* sinTheta_i sinTheta_O))) 0.6931) v) (* 0.6931 (log (/ 0.5 v))))) 0.6931) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.13299457682521126,
    "avg_bits_err_output": 0.14373710420007219,
    "avg_bits_err_improve": -0.010742527374860922,
    "time": 14155.8193359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(- (/ (/ (/ (- 1.0 (* alpha alpha)) (log (* alpha alpha))) PI) (fma cosTheta (fma alpha (* cosTheta alpha) (- cosTheta)) 1.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4683460707194643,
    "avg_bits_err_output": 0.4716877843935709,
    "avg_bits_err_improve": -0.0033417136741065723,
    "time": 23921.43505859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3189906511052305,
    "avg_bits_err_output": 1.2315768881584737,
    "avg_bits_err_improve": 0.08741376294675685,
    "time": 27100.849609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(if (!= s 0.0) (* s (/ (* (log (/ 1.0 (fma u -4.0 1.0))) (+ s s)) (+ s s))) (* s (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 12.41898949309484,
    "avg_bits_err_output": 12.419039502717952,
    "avg_bits_err_improve": -5.0009623112856616e-05,
    "time": 23468.67138671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (/ (* (exp (* r (/ -0.3333333333333333 s))) 0.75) (* s (* r (* PI 6.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1354666053125164,
    "avg_bits_err_output": 0.14482280452396062,
    "avg_bits_err_improve": -0.009356199211444233,
    "time": 22796.34228515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8720949351974231,
    "avg_bits_err_output": 0.6674094420951406,
    "avg_bits_err_improve": 0.20468549310228246,
    "time": 27819.7158203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) cosTheta) (sqrt PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7015683320417706,
    "avg_bits_err_output": 0.5476861851359371,
    "avg_bits_err_improve": 0.15388214690583346,
    "time": 22154.62841796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(if (!= (sin (* 2.0 (* PI u2))) 0.0) (if (!= (- (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (/ 2.0 (/ 2.0 (sin (* 2.0 (* PI u2)))))) (sin (* 2.0 (* PI u2)))) 0.0) (/ (fma (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (/ 2.0 (/ 2.0 (sin (* 2.0 (* PI u2)))))) (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (/ 2.0 (/ 2.0 (sin (* 2.0 (* PI u2)))))) (/ -2.0 (/ (/ 2.0 (sin (* 2.0 (* PI u2)))) (sin (* 2.0 (* PI u2)))))) (- (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (/ 2.0 (/ 2.0 (sin (* 2.0 (* PI u2)))))) (sin (* 2.0 (* PI u2))))) (fma (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (/ 2.0 (/ 2.0 (sin (* 2.0 (* PI u2))))) (/ 2.0 (/ 2.0 (sin (* 2.0 (* PI u2))))))) (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 94,
    "avg_bits_err_input": 13.702145640368503,
    "avg_bits_err_output": 13.504305890205444,
    "avg_bits_err_improve": 0.19783975016305888,
    "time": 26253.24755859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (<= u1 1.1499999885700163e-7) (* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (/ (- (+ 2.0 (* (+ 1.0 (log (- 1.0 u1))) (- -1.0 (log (- 1.0 u1))))) (log (+ 1.0 (expm1 (* (+ 1.0 (log (- 1.0 u1))) (+ 1.0 (log (- 1.0 u1)))))))) -2.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2))) (* (sqrt (- (/ (- 1.0 (- (* (log (- 1.0 u1)) 2.0) -1.0)) -2.0))) (cos (* (* 2.0 PI) u2))))",
    "output_parens": 55,
    "avg_bits_err_input": 13.752268772711531,
    "avg_bits_err_output": 12.182302582880586,
    "avg_bits_err_improve": 1.5699661898309447,
    "time": 37861.084716796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma alpha alpha (* alpha (- alpha))) (* (log (- 1.0 u0)) (* alpha (- alpha))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.252310686522181,
    "avg_bits_err_output": 14.158647394162335,
    "avg_bits_err_improve": 0.09366329235984594,
    "time": 17300.41552734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(+ (/ (/ (log (- 1.0 u0)) -2.0) (+ (/ (/ cos2phi alphax) alphax) (/ sin2phi (* alphay alphay)))) (/ (/ (log (- 1.0 u0)) -2.0) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay)))))",
    "output_parens": 19,
    "avg_bits_err_input": 12.511917658031727,
    "avg_bits_err_output": 12.515904195346033,
    "avg_bits_err_improve": -0.003986537314306204,
    "time": 18879.108154296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (* PI l)) F) F))",
    "output_parens": 6,
    "avg_bits_err_input": 16.467013265433167,
    "avg_bits_err_output": 12.439077698581977,
    "avg_bits_err_improve": 4.027935566851189,
    "time": 19933.57373046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.213636842188131,
    "avg_bits_err_output": 0.15509436093777043,
    "avg_bits_err_improve": 0.05854248125036057,
    "time": 19379.300048828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (expm1 (log1p (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 14.485261577706648,
    "avg_bits_err_output": 11.108831976227503,
    "avg_bits_err_improve": 3.3764296014791455,
    "time": 21033.35009765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (expm1 (log1p (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (expm1 (* PI (/ f 4.0))) (expm1 (* PI (/ f -4.0)))))))) (/ PI -4.0))",
    "output_parens": 20,
    "avg_bits_err_input": 61.58862009234665,
    "avg_bits_err_output": 1.9521395608677168,
    "avg_bits_err_improve": 59.63648053147894,
    "time": 47778.490478515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.7452470102987,
    "avg_bits_err_output": 35.301352359365254,
    "avg_bits_err_improve": 7.443894650933444,
    "time": 29870.4912109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin th) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin ky))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9675895151539873,
    "avg_bits_err_output": 4.02064260226912,
    "avg_bits_err_improve": -0.053053087115133124,
    "time": 28840.677001953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.967667200391513,
    "avg_bits_err_output": 0.967667200391513,
    "avg_bits_err_improve": 0,
    "time": 9463.108154296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (if (!= (+ (/ (- -1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ -2.0 (fma 2.0 (pow (/ t l) 2.0) 1.0))) 0.0) (* (- 1.0 (pow (/ Om Omc) 2.0)) (/ (/ (+ (- -1.0 (pow (/ Om Omc) 2.0)) -2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)) (+ (- -1.0 (pow (/ Om Omc) 2.0)) -2.0))) (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 10.555344400619981,
    "avg_bits_err_improve": -0.005445746591870915,
    "time": 20238.831787109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-235) (sqrt (fma U (* (* 2.0 n) (- t (* 2.0 (* l (/ l Om))))) (- (* (* 2.0 n) (* U (* (pow (/ l Om) 2.0) (* n (- U U*)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+306) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.772395436123226,
    "avg_bits_err_output": 29.436582776418536,
    "avg_bits_err_improve": 5.33581265970469,
    "time": 32349.586181640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ (/ 2.0 (sin k)) (/ (tan k) l)) (* (pow (/ k t) 2.0) (/ (pow t 3.0) l)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.968548489729244,
    "avg_bits_err_output": 37.16849043401957,
    "avg_bits_err_improve": 10.800058055709677,
    "time": 42491.791015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l))) (tan k)) l))",
    "output_parens": 12,
    "avg_bits_err_input": 33.357204472368096,
    "avg_bits_err_output": 28.62428323394562,
    "avg_bits_err_improve": 4.7329212384224775,
    "time": 24256.174560546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (+ (* a2 (/ a2 (sqrt 2.0))) (* a1 (/ a1 (sqrt 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5120276343964563,
    "avg_bits_err_output": 0.45595658126766925,
    "avg_bits_err_improve": 0.05607105312878702,
    "time": 20591.114501953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (if (!= (* PI n) 0.0) (* (* n (* PI PI)) (/ n (* PI n))) (* PI n))) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5343900507637622,
    "avg_bits_err_output": 0.5518890490696963,
    "avg_bits_err_improve": -0.017498998305934044,
    "time": 16821.454345703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (fma (exp l) (cos (/ K 2.0)) (- (* (exp (- l)) (cos (/ K 2.0))))) U)",
    "output_parens": 11,
    "avg_bits_err_input": 17.52382925669616,
    "avg_bits_err_output": 17.525047710371485,
    "avg_bits_err_improve": -0.0012184536753245823,
    "time": 22983.36083984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 16,
    "avg_bits_err_input": 15.372463040371839,
    "avg_bits_err_output": 15.372463040371839,
    "avg_bits_err_improve": 0,
    "time": 12644.29541015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.87244812031259,
    "avg_bits_err_output": 18.87244812031259,
    "avg_bits_err_improve": 0,
    "time": 33168.55126953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (* h (/ (pow (* D (/ M (* d 2.0))) 2.0) l)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.208183454186809,
    "avg_bits_err_output": 10.622245783965738,
    "avg_bits_err_improve": 3.585937670221071,
    "time": 12239.4052734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -2e+217) (* c0 (sqrt (+ (/ (/ (+ A (+ A A)) l) (+ (+ V V) (+ V V))) (/ (/ A l) (* V 4.0))))) (if (<= (* V l) -5.0) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 5e-42) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) 2e+145) (* c0 (if (!= (sqrt (/ A (* l V))) 0.0) (/ 1.0 (/ 1.0 (sqrt (/ A (* l V))))) (sqrt (/ A (* l V))))) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l))))))))",
    "output_parens": 53,
    "avg_bits_err_input": 19.039959213284444,
    "avg_bits_err_output": 16.826463673683826,
    "avg_bits_err_improve": 2.2134955396006184,
    "time": 16665.51220703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -5400000.0) (* (/ c0 (* 2.0 w)) (fma d (* d (/ (/ (/ (/ c0 D) w) D) h)) (sqrt (* (+ (* d (* d (/ (/ (/ (/ c0 D) w) D) h))) M) (- (* d (* d (/ (/ (/ (/ c0 D) w) D) h))) M))))) (if (<= d -2.6e-181) (/ (+ (* c0 (sqrt (* (fma (/ d (* D w)) (* c0 (/ d (* D h))) M) (- (* (/ d (* D h)) (* c0 (/ d (* D w)))) M)))) (* c0 (* (/ d (* D h)) (* c0 (/ d (* D w)))))) (* w 2.0)) (* (/ c0 (* 2.0 w)) (+ (* (/ (/ (/ d w) h) D) (* c0 (/ d D))) (sqrt (* (fma (/ (/ (/ d w) h) D) (* c0 (/ d D)) M) (- (* (/ (/ (/ d w) h) D) (* c0 (/ d D))) M)))))))",
    "output_parens": 80,
    "avg_bits_err_input": 59.97466461697975,
    "avg_bits_err_output": 54.66374379318769,
    "avg_bits_err_improve": 5.31092082379206,
    "time": 51337.077392578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* h (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (/ (pow (* M (/ D (+ d d))) 2.0) (+ l l)))))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+199) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* h (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (/ (pow (* M (/ D (+ d d))) 2.0) (+ l l))))))))",
    "output_parens": 85,
    "avg_bits_err_input": 27.179215347818232,
    "avg_bits_err_output": 25.018122139835143,
    "avg_bits_err_improve": 2.1610932079830896,
    "time": 44730.312744140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (+ (- (sqrt (+ 0.5 (/ 0.5 (- (exp (log1p (hypot 1.0 x))) 1.0))))) (- 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) 2.0)",
    "output_parens": 15,
    "avg_bits_err_input": 16.0976448010201,
    "avg_bits_err_output": 15.653950192834447,
    "avg_bits_err_improve": 0.4436946081856519,
    "time": 24629.305908203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9851981203125901,
    "avg_bits_err_output": 0.008969360937770433,
    "avg_bits_err_improve": 0.9762287593748197,
    "time": 5322.316162109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (- (- (- 4.0 (* v (* v 10.0))) (* v (* v 5.0))) (* v (* v 5.0))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))) (* (- 1.0 (* v v)) (+ (+ t t) (+ t t))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.4699651755792754,
    "avg_bits_err_output": 0.19394335487423478,
    "avg_bits_err_improve": 0.27602182070504067,
    "time": 20365.715576171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (- (sqrt (+ 1.0 (* (* v v) -3.0))) (* (* v v) (sqrt (+ 1.0 (* (* v v) -3.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.011448120312590146,
    "avg_bits_err_output": 0.010073120312590144,
    "avg_bits_err_improve": 0.0013750000000000012,
    "time": 9146.212890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5498065734829228,
    "avg_bits_err_output": 0.5498065734829228,
    "avg_bits_err_improve": 0,
    "time": 8390.913330078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.8855198915566997,
    "avg_bits_err_output": 1.8855198915566997,
    "avg_bits_err_improve": 0,
    "time": 23385.546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)) -1.0)) (/ NaChar (- (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.023025757404635052,
    "avg_bits_err_output": 0.023025757404635052,
    "avg_bits_err_improve": 0,
    "time": 7123.6875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.18252857187842536,
    "avg_bits_err_output": 0.1813610906280648,
    "avg_bits_err_improve": 0.0011674812503605636,
    "time": 16563.99951171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18674133035577506,
    "avg_bits_err_output": 0.1865432100431849,
    "avg_bits_err_improve": 0.00019812031259017204,
    "time": 21674.145263671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* b (* b (+ a 3.0))) (* a (- a (* a a)))))) -1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.18881329892135118,
    "avg_bits_err_output": 0.18884534139050868,
    "avg_bits_err_improve": -3.204246915750053e-05,
    "time": 5674.68310546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (/ (+ x (+ x x)) (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.46761535571047,
    "avg_bits_err_output": 13.59691800272033,
    "avg_bits_err_improve": -0.12930264700985994,
    "time": 14447.328857421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.82770324993401,
    "avg_bits_err_output": 0.073375,
    "avg_bits_err_improve": 40.75432824993401,
    "time": 6016.0517578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (if (!= (tan x) 0.0) (- (/ (* x (tan x)) (tan x)) (tan x)) (- x (tan x))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.2218692274709,
    "avg_bits_err_output": 30.785956495244736,
    "avg_bits_err_improve": 0.4359127322261642,
    "time": 23083.11572265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.3586201905314,
    "avg_bits_err_output": 33.3586201905314,
    "avg_bits_err_improve": 0,
    "time": 15248.45263671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.39088452413298,
    "avg_bits_err_output": 34.39088452413298,
    "avg_bits_err_improve": 0,
    "time": 15355.19873046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(* (/ (- 1.0 (cos x)) x) (/ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 31.249751031140796,
    "avg_bits_err_output": 30.52600246301496,
    "avg_bits_err_improve": 0.7237485681258349,
    "time": 15859.927490234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.315236178028606,
    "avg_bits_err_output": 32.315236178028606,
    "avg_bits_err_improve": 0,
    "time": 17579.671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (+ (log1p N) 1.0) 0.0) (/ (- (* (+ (log1p N) 1.0) (+ (log N) 1.0)) (* (+ (log1p N) 1.0) (+ (log1p N) 1.0))) (- -1.0 (log1p N))) (- (log1p N) (log N)))",
    "output_parens": 21,
    "avg_bits_err_input": 29.67818123973979,
    "avg_bits_err_output": 29.70334917697821,
    "avg_bits_err_improve": -0.0251679372384217,
    "time": 13112.319580078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (+ (/ x (+ x 1.0)) -1.0) x)",
    "output_parens": 4,
    "avg_bits_err_input": 14.62474502994269,
    "avg_bits_err_output": 14.612460995887764,
    "avg_bits_err_improve": 0.012284034054927062,
    "time": 13906.400146484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (- (cos x)) (+ (if (!= (+ 1.0 (cos (+ x eps))) 0.0) (/ (fma (cos (+ x eps)) (cos (+ x eps)) -1.0) (+ 1.0 (cos (+ x eps)))) (+ -1.0 (cos (+ x eps)))) 1.0))",
    "output_parens": 21,
    "avg_bits_err_input": 39.42344523042765,
    "avg_bits_err_output": 39.478760860893956,
    "avg_bits_err_improve": -0.05531563046630339,
    "time": 17395.833740234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (if (!= (* (cbrt x) (cbrt x)) 0.0) (/ 1.0 (/ 1.0 (* (cbrt x) (cbrt x)))) (* (cbrt x) (cbrt x)))) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 34,
    "avg_bits_err_input": 29.974136662457955,
    "avg_bits_err_output": 30.017018176894382,
    "avg_bits_err_improve": -0.04288151443642718,
    "time": 11411.9521484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(if (!= (/ (- 1.0 (cos x)) (sin x)) 0.0) (if (!= (/ (+ (cos x) -1.0) (* (sin x) (- 1.0 (cos x)))) 0.0) (/ (+ (* (cos x) (/ (/ (- 1.0 (cos x)) (sin x)) (* (sin x) (- 1.0 (cos x))))) (- (/ (/ (- 1.0 (cos x)) (sin x)) (* (sin x) (- 1.0 (cos x)))))) (/ (+ (cos x) -1.0) (* (sin x) (- 1.0 (cos x))))) (- (/ (* (/ (+ (cos x) -1.0) (sin x)) (+ (cos x) -1.0)) (- 1.0 (cos x))) 0.0)) (/ (- 1.0 (cos x)) (sin x)))",
    "output_parens": 60,
    "avg_bits_err_input": 30.415523609635727,
    "avg_bits_err_output": 30.386301456204446,
    "avg_bits_err_improve": 0.029222153431280873,
    "time": 28340.532958984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.67674917748502,
    "avg_bits_err_output": 33.67674917748502,
    "avg_bits_err_improve": 0,
    "time": 21063.445556640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (fma c (* a -4.0) (* b (- b))) 0.0) (fma b (* b (* b (/ b (- (* b b) (* c (* a -4.0)))))) (* c (* a (/ (* c (* a 16.0)) (fma c (* a -4.0) (* b (- b))))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 30,
    "avg_bits_err_input": 34.2952012372741,
    "avg_bits_err_output": 33.27708717264173,
    "avg_bits_err_improve": 1.0181140646323712,
    "time": 22954.98486328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.48234358383173,
    "avg_bits_err_output": 0.821415199487455,
    "avg_bits_err_improve": 60.660928384344274,
    "time": 26560.41455078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (log1p n) (* (- (log (+ n 1.0)) (log n)) n)) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 63.003586208812294,
    "avg_bits_err_output": 44.22176888048834,
    "avg_bits_err_improve": 18.781817328323953,
    "time": 16517.21533203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(if (!= (log (/ (- 1.0 eps) (+ 1.0 eps))) 0.0) (/ 1.0 (/ 1.0 (if (!= (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 0.0) (/ (if (!= (+ (log (/ (- 1.0 eps) (- eps -1.0))) (fma (+ 1.0 (log (/ (- 1.0 eps) (- eps -1.0)))) (+ 1.0 (log (/ (- 1.0 eps) (- eps -1.0)))) -1.0)) 0.0) (* (* (log (/ (- 1.0 eps) (- eps -1.0))) (+ 1.0 (log (/ (- 1.0 eps) (- eps -1.0))))) (/ (- (log (/ (- 1.0 eps) (- eps -1.0))) (- 1.0 (* (- -1.0 (log (/ (- 1.0 eps) (- eps -1.0)))) (- -1.0 (log (/ (- 1.0 eps) (- eps -1.0))))))) (+ (log (/ (- 1.0 eps) (- eps -1.0))) (fma (+ 1.0 (log (/ (- 1.0 eps) (- eps -1.0)))) (+ 1.0 (log (/ (- 1.0 eps) (- eps -1.0)))) -1.0)))) (* (log (/ (- 1.0 eps) (- eps -1.0))) (+ 1.0 (log (/ (- 1.0 eps) (- eps -1.0)))))) (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) (log (/ (- 1.0 eps) (+ 1.0 eps)))))) (log (/ (- 1.0 eps) (+ 1.0 eps))))",
    "output_parens": 102,
    "avg_bits_err_input": 58.50507453227207,
    "avg_bits_err_output": 58.50940051765248,
    "avg_bits_err_improve": -0.004325985380411623,
    "time": 17726.468505859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (!= (+ 1.0 (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x)))) 0.0) (/ (- 1.0 (* (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x))) (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x))))) (+ 1.0 (if (!= (+ (+ (/ 1.0 x) -1.0) (/ 1.0 (tan x))) 0.0) (/ (fma (- 1.0 (/ 1.0 x)) (- 1.0 (/ 1.0 x)) (/ -1.0 (* (tan x) (tan x)))) (- 1.0 (+ (/ 1.0 (tan x)) (/ 1.0 x)))) (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x)))))) (+ (/ 1.0 x) (/ -1.0 (tan x))))",
    "output_parens": 53,
    "avg_bits_err_input": 59.88408315217295,
    "avg_bits_err_output": 59.27020352861013,
    "avg_bits_err_improve": 0.6138796235628163,
    "time": 31479.62109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ b a))) (/ eps (expm1 (* eps a)))) (expm1 (* eps b)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.029807782035185,
    "avg_bits_err_output": 29.01615188013082,
    "avg_bits_err_improve": 31.013655901904364,
    "time": 26245.004150390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.20346794511585,
    "avg_bits_err_output": 0.46777124062518033,
    "avg_bits_err_improve": 40.735696704490664,
    "time": 7327.191162109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.72378344594542,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.723033445945426,
    "time": 4601.918701171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.601623270563962,
    "avg_bits_err_output": 0.02071736561972104,
    "avg_bits_err_improve": 29.58090590494424,
    "time": 4458.568115234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (+ -2.0 (- (exp x) (exp (- x)))) 0.0) (/ (if (!= (* (exp x) 2.0) 0.0) (/ (fma (exp x) (* (exp x) 4.0) (* (* (exp x) 2.0) (+ (* (exp (- x)) (exp (- x))) (fma (exp x) (- 2.0 (exp x)) -4.0)))) (* (exp x) 2.0)) (fma (exp (- x)) (exp (- x)) (fma (exp x) (- 4.0 (exp x)) -4.0))) (+ (exp (- x)) (- 2.0 (exp x)))) (+ (+ (exp x) -2.0) (exp (- x))))",
    "output_parens": 51,
    "avg_bits_err_input": 29.934927720364247,
    "avg_bits_err_output": 29.66427238699644,
    "avg_bits_err_improve": 0.2706553333678059,
    "time": 18790.47216796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.74829177130195,
    "avg_bits_err_output": 9.74829177130195,
    "avg_bits_err_improve": 0,
    "time": 28041.59130859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (+ (tan (+ x eps)) (tan x)) 0.0) (+ (fma (- (/ (tan x) (+ (tan (+ x eps)) (tan x)))) (tan x) (* (tan x) (/ (tan x) (+ (tan (+ x eps)) (tan x))))) (* (- (tan (+ x eps)) (tan x)) (/ (+ (tan (+ x eps)) (tan x)) (+ (tan (+ x eps)) (tan x))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 42,
    "avg_bits_err_input": 36.43921113191494,
    "avg_bits_err_output": 36.44162470591498,
    "avg_bits_err_improve": -0.002413574000044605,
    "time": 18008.596923828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (!= (+ 1.0 (sqrt (+ x 1.0))) 0.0) (/ (+ (- (* (sqrt (+ 1.0 x)) (sqrt (+ 1.0 x))) (* (+ 1.0 (sqrt (+ 1.0 x))) (sqrt x))) (sqrt (+ 1.0 x))) (+ 1.0 (sqrt (+ x 1.0)))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 27,
    "avg_bits_err_input": 30.0311619115621,
    "avg_bits_err_output": 29.305438931407434,
    "avg_bits_err_improve": 0.7257229801546679,
    "time": 16714.286865234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.6909443846718,
    "avg_bits_err_output": 36.6909443846718,
    "avg_bits_err_improve": 0,
    "time": 15947.154541015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ (/ 1.0 (sqrt (+ 1.0 x))) -1.0) 0.0) (/ (/ (log1p (expm1 (+ (/ 1.0 (sqrt (+ 1.0 x))) -1.0))) (sqrt (+ 1.0 x))) (+ (/ 1.0 (sqrt (+ 1.0 x))) -1.0)) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 19.65787767276261,
    "avg_bits_err_output": 19.640960707532038,
    "avg_bits_err_improve": 0.01691696523057118,
    "time": 17899.576904296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.706098295422246,
    "avg_bits_err_output": 14.706098295422246,
    "avg_bits_err_improve": 0,
    "time": 4382.409912109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (log (+ (exp a) (exp b))) 0.0) (/ 1.0 (if (!= (+ 1.0 (/ 1.0 (log (+ (exp a) (exp b))))) 0.0) (/ (/ (+ 1.0 (/ 1.0 (log (+ (exp a) (exp b))))) (log (+ (exp a) (exp b)))) (+ 1.0 (/ 1.0 (log (+ (exp a) (exp b)))))) (/ 1.0 (log (+ (exp a) (exp b)))))) (log (+ (exp a) (exp b))))",
    "output_parens": 42,
    "avg_bits_err_input": 29.49036338333371,
    "avg_bits_err_output": 29.497936638963576,
    "avg_bits_err_improve": -0.007573255629864661,
    "time": 39407.084228515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (* (- 1.0 m) (- m (* m m))) v) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07734252772443494,
    "avg_bits_err_output": 0.07575472521415125,
    "avg_bits_err_improve": 0.0015878025102836896,
    "time": 8490.57666015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.085804749389116,
    "avg_bits_err_output": 0.30406165469173674,
    "avg_bits_err_improve": 15.78174309469738,
    "time": 10386.55859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (/ (* PI (+ (+ angle angle) (+ angle (+ angle (+ (+ angle angle) (+ angle angle)))))) 1440.0))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.213355120457617,
    "avg_bits_err_output": 20.234598733939723,
    "avg_bits_err_improve": -0.021243613482106127,
    "time": 25043.7822265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (+ (pow b 2.0) (pow b 2.0)) (sin (* PI (/ angle 180.0))) (- (+ (/ (* (sin (* PI (/ angle 180.0))) (pow a 2.0)) 2.0) (/ (* (sin (* PI (/ angle 180.0))) (- (pow a 2.0) (* (pow a 2.0) -2.0))) 2.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 28,
    "avg_bits_err_input": 31.50825619267726,
    "avg_bits_err_output": 31.521070289713208,
    "avg_bits_err_improve": -0.012814097035949601,
    "time": 26392.695068359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* (/ angle 180.0) PI) 0.0) (/ (* (* PI PI) (* (/ angle 180.0) (/ angle angle))) PI) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.177170824327334,
    "avg_bits_err_output": 20.170178453940693,
    "avg_bits_err_improve": 0.0069923703866408005,
    "time": 29136.50146484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17100804548200058,
    "avg_bits_err_output": 0.17100804548200058,
    "avg_bits_err_improve": 0,
    "time": 15215.980712890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.33175743549675557,
    "avg_bits_err_output": 0.3332832874467403,
    "avg_bits_err_improve": -0.0015258519499847245,
    "time": 17109.15478515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (+ (+ -1.0 (* (* (cos v) (/ e 2.0)) 2.0)) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.1347193609377704,
    "avg_bits_err_output": 0.13826184218813103,
    "avg_bits_err_improve": -0.003542481250360635,
    "time": 16110.104736328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.104720361712022,
    "avg_bits_err_output": 17.098447668484702,
    "avg_bits_err_improve": 0.0062726932273200475,
    "time": 31065.57421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* a (* c -4.0)))) (- b)) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (* b (* b b)) b (* b (* (sqrt (fma b b (* c (* a -4.0)))) (* (sqrt (fma b b (* c (* a -4.0)))) (- b))))) (* b (- b))) (- (* (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0))))) (* b b))) (- (sqrt (fma b b (* a (* c -4.0)))) (- b))) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (* a 2.0))",
    "output_parens": 55,
    "avg_bits_err_input": 52.76154780897245,
    "avg_bits_err_output": 51.77381335756298,
    "avg_bits_err_improve": 0.987734451409473,
    "time": 29775.685791015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (+ (fma (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))) (* b b)) 0.0) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 34,
    "avg_bits_err_input": 28.529744901384003,
    "avg_bits_err_output": 27.98636106895359,
    "avg_bits_err_improve": 0.5433838324304112,
    "time": 29970.509033203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (sqrt (fma b b (* a (* -4.0 c)))) (* (sqrt (fma b b (* a (* -4.0 c)))) (* b (- b))) (* b (* b (* b b)))) (* b (- b))) (fma b (- b) (* (sqrt (fma b b (* a (* -4.0 c)))) (sqrt (fma b b (* a (* -4.0 c))))))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 53,
    "avg_bits_err_input": 43.742041672974686,
    "avg_bits_err_output": 42.607886528019336,
    "avg_bits_err_improve": 1.1341551449553506,
    "time": 28693.35595703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.678949773148155,
    "avg_bits_err_output": 33.678949773148155,
    "avg_bits_err_improve": 0,
    "time": 18689.93994140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (* (cos phi2) (cos (- lambda1 lambda2))) 0.0) (* (/ (+ (* (cos phi2) (cos (- lambda1 lambda2))) (cos phi1)) (cos phi2)) (/ (* (cos phi2) (cos (- lambda1 lambda2))) (cos (- lambda1 lambda2)))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.8554353573512197,
    "avg_bits_err_output": 0.8608765252281576,
    "avg_bits_err_improve": -0.005441167876937936,
    "time": 23256.53173828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(/ (+ (/ 1.0 (- -1.0 (exp (* x -2.0)))) (- (/ 3.0 (- -1.0 (exp (* x -2.0)))) -2.0)) -2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 29.589158234542733,
    "avg_bits_err_output": 29.585283637754586,
    "avg_bits_err_improve": 0.0038745967881474996,
    "time": 18559.87158203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(fma (/ (exp x) (+ (exp x) (exp (- x)))) (/ (exp x) (+ (exp x) (exp (- x)))) (- (log1p (expm1 (* (exp (- x)) (/ (/ (exp (- x)) (+ (exp x) (exp (- x)))) (+ (exp x) (exp (- x)))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 58.12261903136475,
    "avg_bits_err_output": 58.13027931232827,
    "avg_bits_err_improve": -0.007660280963520449,
    "time": 17441.645263671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.055986656383155,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 58.04748665638316,
    "time": 11181.95556640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008448120312590145,
    "avg_bits_err_output": 0.008448120312590145,
    "avg_bits_err_improve": 0,
    "time": 2337.667236328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.881625,
    "avg_bits_err_output": 31.881625,
    "avg_bits_err_improve": 0,
    "time": 5310.95263671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 0.01854248125036058,
    "avg_bits_err_improve": 58.477403523882934,
    "time": 16782.05517578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.026875,
    "avg_bits_err_output": 0.027125,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 4317.102783203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ eh (* ew (tan t))))) (* (* eh (cos t)) (sin (atan (/ eh (* ew (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12744812031259015,
    "avg_bits_err_output": 0.126125,
    "avg_bits_err_improve": 0.0013231203125901592,
    "time": 23104.987060546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.129,
    "avg_bits_err_output": 0.129,
    "avg_bits_err_improve": 0,
    "time": 28410.06787109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.20791525352395,
    "avg_bits_err_output": 3.7676012769625267,
    "avg_bits_err_improve": 35.44031397656143,
    "time": 24195.919921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (+ (/ (- (* b (/ b a)) a) (+ a a)) (/ (- (* b (/ b a)) a) (+ a a)))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.227114489635877,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 14.213489489635878,
    "time": 6509.82763671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1485108369463292,
    "avg_bits_err_output": 0.1470290048304523,
    "avg_bits_err_improve": 0.00148183211587688,
    "time": 31969.2197265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -4e-34) (if (!= (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) (* a 6.0)) 0.0) (/ 1.0 (/ 1.0 (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333))) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333)) (* (- (sqrt (if (!= (* b b) 0.0) (if (!= (- (* c (* (* a -3.0) (- (/ b b) 0.0))) (* b (/ (* b b) b))) 0.0) (/ 0.0 (- (* c (* (* a -3.0) (- (/ b b) 0.0))) (* b (/ (* b b) b)))) 0.0) (fma a (* c -3.0) (* b b)))) b) (/ 0.3333333333333333 a)))",
    "output_parens": 67,
    "avg_bits_err_input": 52.79820351486748,
    "avg_bits_err_output": 50.748847621098946,
    "avg_bits_err_improve": 2.049355893768535,
    "time": 24305.896728515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- b) 0.0) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) (- b) (* b b)) (- b)) (- (sqrt (fma b b (* (* c a) -3.0))) b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.675115352585333,
    "avg_bits_err_output": 28.196488953853134,
    "avg_bits_err_improve": 0.4786263987321995,
    "time": 24447.9365234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (* (if (!= b 0.0) (/ (* b (- (sqrt (fma b b (* c (* a -3.0)))) b)) b) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (+ b (sqrt (fma b b (* c (* a -3.0))))))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 46,
    "avg_bits_err_input": 43.717116949100095,
    "avg_bits_err_output": 42.61172372542898,
    "avg_bits_err_improve": 1.1053932236711148,
    "time": 25807.74462890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (- (* b b) (* c (* 3.0 a)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.73140712667356,
    "avg_bits_err_output": 33.73140712667356,
    "avg_bits_err_improve": 0,
    "time": 22960.7841796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (if (!= (sin phi1) 0.0) (/ (* (cos (- lambda1 lambda2)) (* (* (cos phi2) (sin phi1)) (sin phi1))) (sin phi1)) (* (cos (- lambda1 lambda2)) (* (cos phi2) (sin phi1))))))",
    "output_parens": 28,
    "avg_bits_err_input": 12.970295589353583,
    "avg_bits_err_output": 13.084691534954146,
    "avg_bits_err_improve": -0.11439594560056321,
    "time": 32329.08837890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 28.870565557947803,
    "avg_bits_err_output": 24.537717727525347,
    "avg_bits_err_improve": 4.332847830422455,
    "time": 16927.738037109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(if (!= (/ x (+ 1.0 x)) 0.0) (+ (/ (/ x (+ x -1.0)) (+ x x)) (/ (+ (/ x (+ x -1.0)) (* x (/ (+ x x) (+ x 1.0)))) (+ x x))) (+ (/ 1.0 (+ x -1.0)) (/ x (+ 1.0 x))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.01325,
    "avg_bits_err_output": 0.04816748125036058,
    "avg_bits_err_improve": -0.03491748125036058,
    "time": 4691.57275390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- 0.0 (/ 2.0 (+ x -1.0))) (+ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 14.062164864266142,
    "avg_bits_err_output": 0.071,
    "avg_bits_err_improve": 13.991164864266143,
    "time": 21758.852294921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F) (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.255105281448856,
    "avg_bits_err_output": 51.96705048207925,
    "avg_bits_err_improve": 0.2880547993696041,
    "time": 50812.90673828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(if (<= A -9.5e+157) (* (atan (/ (if (!= A 0.0) (if (!= (- (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) (* A (/ C A))) 0.0) 0.0 (- (- (* A (/ C A)) A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) (- (- C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) A)) B)) (/ 180.0 PI)) (* (atan (* (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- C A)) (/ -1.0 B))) (/ 180.0 PI)))",
    "output_parens": 47,
    "avg_bits_err_input": 29.818121364011493,
    "avg_bits_err_output": 27.79703226963391,
    "avg_bits_err_improve": 2.021089094377583,
    "time": 22652.70849609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (* (sqrt (* 2.0 (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F (- (pow B 2.0) (* C (* A 4.0))))))) 2.0) (- (- (pow B 2.0)) (- (pow B 2.0) (* A (* C 8.0)))))",
    "output_parens": 24,
    "avg_bits_err_input": 52.1401115349008,
    "avg_bits_err_output": 51.83548933419825,
    "avg_bits_err_improve": 0.3046222007025463,
    "time": 37588.38623046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.846903408451233,
    "avg_bits_err_output": 15.846903408451233,
    "avg_bits_err_improve": 0,
    "time": 1981.805908203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (* g (+ g (- (sqrt (fma g g (* h (- h))))))) (- g)) (- (sqrt (fma g g (* h (- h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 36.34708362534482,
    "avg_bits_err_output": 36.28082019962102,
    "avg_bits_err_improve": 0.06626342572380395,
    "time": 15475.823486328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9905714296960648,
    "avg_bits_err_output": 0.9749718046888525,
    "avg_bits_err_improve": 0.015599625007212348,
    "time": 5937.140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.804125,
    "avg_bits_err_output": 0.8073562031259016,
    "avg_bits_err_improve": -0.0032312031259016383,
    "time": 6758.918701171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -1e+268) (/ (* a1 (/ a2 b1)) b2) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-308) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+265) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 10.711597641688524,
    "avg_bits_err_output": 2.937712097290087,
    "avg_bits_err_improve": 7.773885544398437,
    "time": 10519.1923828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(+ (* x y) (- (log1p (exp x)) (* y (+ x x))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.49916476114975633,
    "avg_bits_err_output": 0.49125,
    "avg_bits_err_improve": 0.00791476114975631,
    "time": 10254.365966796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(- (- (log (+ x (hypot 1.0 x))) -1.0) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 52.9795181675399,
    "avg_bits_err_output": 45.24905127442575,
    "avg_bits_err_improve": 7.730466893114148,
    "time": 15095.15283203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (if (!= (+ (log a) (log b)) 0.0) (/ 1.0 (expm1 (log1p (/ 1.0 (+ (log a) (log b)))))) (+ (log a) (log b))))",
    "output_parens": 16,
    "avg_bits_err_input": 5.681446684364617,
    "avg_bits_err_output": 5.825571324886484,
    "avg_bits_err_improve": -0.14412464052186724,
    "time": 12178.716796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- x (- 2.0 x)) (- (- -2.0 x) x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.019875,
    "avg_bits_err_improve": -0.006500000000000001,
    "time": 3473.131103515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1285.69189453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (/ (* w r) (- 1.0 v)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.774235722855092,
    "avg_bits_err_output": 0.3431742573564724,
    "avg_bits_err_improve": 12.43106146549862,
    "time": 21362.780517578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0) (* x1 x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5159809249647487,
    "avg_bits_err_output": 0.2888797570446495,
    "avg_bits_err_improve": 0.22710116792009916,
    "time": 66487.0810546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.44557671619713,
    "avg_bits_err_output": 1.0171531638130082,
    "avg_bits_err_improve": 17.42842355238412,
    "time": 6608.937255859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2291156015629507,
    "avg_bits_err_output": 0.2291156015629507,
    "avg_bits_err_improve": 0,
    "time": 4115.92626953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0019481203125901445,
    "avg_bits_err_output": 0.0019481203125901445,
    "avg_bits_err_improve": 0,
    "time": 2150.561767578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) (+ a b)) 2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 14.481456735071005,
    "avg_bits_err_output": 0.28778797031547476,
    "avg_bits_err_improve": 14.19366876475553,
    "time": 15761.975341796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.81263627458951,
    "avg_bits_err_output": 25.04518464230312,
    "avg_bits_err_improve": 4.767451632286392,
    "time": 19820.363037109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.00425,
    "avg_bits_err_output": 0.00425,
    "avg_bits_err_improve": 0,
    "time": 3790.179931640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (/ (+ 2.0 (+ 2.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0)))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 0.007375,
    "avg_bits_err_output": 0.0369996474351172,
    "avg_bits_err_improve": -0.029624647435117203,
    "time": 14674.739501953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (* (* (/ t (+ t 1.0)) 4.0) (/ t (+ t 1.0))) -1.0) (+ 2.0 (* (/ t (+ t 1.0)) (* (/ t (+ t 1.0)) 4.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.0335,
    "avg_bits_err_output": 0.0095,
    "avg_bits_err_improve": 0.024,
    "time": 7951.769775390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3305.8642578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2855.87939453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2429.344970703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.824276137616425,
    "avg_bits_err_output": 0.253125,
    "avg_bits_err_improve": 7.571151137616425,
    "time": 15746.01025390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 7.796183698191227,
    "avg_bits_err_output": 7.811471594147508,
    "avg_bits_err_improve": -0.015287895956281439,
    "time": 4659.019287109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (+ (pow (+ x eps) 2.0) (pow x 2.0)) 0.0) (* (+ (pow (+ x eps) 2.0) (pow x 2.0)) (- (* (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))) (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (log1p (expm1 (/ (pow x 2.0) (+ (pow x 2.0) (pow (+ x eps) 2.0)))))))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 46,
    "avg_bits_err_input": 15.942217949882018,
    "avg_bits_err_output": 15.950941928117102,
    "avg_bits_err_improve": -0.008723978235083862,
    "time": 24769.80126953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* x (* x 10.0))) (+ (cos x) 1.0)) 0.0) (* (cos x) (* (+ (cos x) 1.0) (/ (expm1 (log1p (/ 1.0 (+ (cos x) 1.0)))) (/ 1.0 (exp (* x (* x 10.0))))))) (* (cos x) (exp (* x (* x 10.0)))))",
    "output_parens": 28,
    "avg_bits_err_input": 3.5227591036483363,
    "avg_bits_err_output": 3.5656813703599224,
    "avg_bits_err_improve": -0.042922266711586055,
    "time": 21331.072998046875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -2e+18) (if (!= (* (/ (- -2.0 (* x (+ x x))) (* (fma x x 1.0) -2.0)) (/ x (fma x x 1.0))) 0.0) (/ (* (* x (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x)))) (/ 1.0 (/ x (+ x (/ 1.0 x))))) x) (/ x (fma x x 1.0))) (if (<= x 50000000.0) (/ x (fma x x 1.0)) (if (!= (* (/ (- -2.0 (* x (+ x x))) (* (fma x x 1.0) -2.0)) (/ x (fma x x 1.0))) 0.0) (/ (* (* x (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x)))) (/ 1.0 (/ x (+ x (/ 1.0 x))))) x) (/ x (fma x x 1.0)))))",
    "output_parens": 58,
    "avg_bits_err_input": 14.88172632941671,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 14.87385132941671,
    "time": 9129.256103515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.74881219898697,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.74881219898697,
    "time": 3613.51220703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.073055117603154,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.07280511760315,
    "time": 3526.51806640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29375,
    "avg_bits_err_improve": 63.70625,
    "time": 18836.662353515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 4e-32 (* t t))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325134047954,
    "avg_bits_err_output": 0.410012218755409,
    "avg_bits_err_improve": 61.43323912172413,
    "time": 7528.6494140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (fma c (* a -4.0) (* b (- b))) 0.0) (fma b (* b (* b (/ b (- (* b b) (* c (* a -4.0)))))) (* c (* a (/ (* c (* a 16.0)) (fma c (* a -4.0) (* b (- b))))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 30,
    "avg_bits_err_input": 34.2952012372741,
    "avg_bits_err_output": 33.27708717264173,
    "avg_bits_err_improve": 1.0181140646323712,
    "time": 24212.2109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.678949773148155,
    "avg_bits_err_output": 33.678949773148155,
    "avg_bits_err_improve": 0,
    "time": 23061.514892578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2604.451171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.22878109257118,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 40.219406092571184,
    "time": 4069.53857421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.4468839462664,
    "avg_bits_err_output": 20.4468839462664,
    "avg_bits_err_improve": 0,
    "time": 5281.641845703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6851025900384813,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6851025900384813,
    "time": 7516.681640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038125,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03725,
    "time": 8416.50830078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.023719360937770433,
    "avg_bits_err_output": 0.023719360937770433,
    "avg_bits_err_improve": 0,
    "time": 5489.005615234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.014875,
    "time": 3028.251708984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.000875,
    "time": 1824.9775390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40499793281619606,
    "avg_bits_err_output": 0.235,
    "avg_bits_err_improve": 0.16999793281619607,
    "time": 4437.191650390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (exp (log1p (- 1.0 (cos x)))) 0.0) (/ (log (+ 1.0 (expm1 (* (- 1.0 (cos x)) (- 2.0 (cos x)))))) (exp (log1p (- 1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 21,
    "avg_bits_err_input": 30.082026384833778,
    "avg_bits_err_output": 30.106422639603185,
    "avg_bits_err_improve": -0.024396254769406767,
    "time": 22311.892578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (if (!= (/ (* eps (fma x x eps)) eps) 0.0) (/ (* (/ (* eps (fma x x eps)) eps) (fma x x (- eps))) (/ (* eps (fma x x eps)) eps)) (fma x x (- eps))) (- (* x x) eps))))",
    "output_parens": 23,
    "avg_bits_err_input": 24.184016653323592,
    "avg_bits_err_output": 24.21255396858912,
    "avg_bits_err_improve": -0.028537315265527496,
    "time": 11863.132568359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ (sin x) (- (tan x))) 0.0) (/ (/ (+ (* (sin x) (/ (sin x) (tan x))) (* x (/ (sin x) (- (tan x))))) (tan x)) (/ (sin x) (- (tan x)))) (/ (+ x (- (sin x))) (tan x)))",
    "output_parens": 29,
    "avg_bits_err_input": 30.419596007039722,
    "avg_bits_err_output": 30.426797882911796,
    "avg_bits_err_improve": -0.007201875872073771,
    "time": 33082.110595703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00575,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.005375,
    "time": 2335.580078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -6.8e+109) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i n)))) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (- (if (!= (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))) 0.0) (/ 1.0 (/ 1.0 (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))))) (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n)))) (/ 100.0 (/ i n))))",
    "output_parens": 55,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 47.20374911941436,
    "avg_bits_err_improve": 0.6377656616802412,
    "time": 28925.7744140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) -1e-50) (+ (* (/ d (fma d d (* c c))) b) (* a (/ c (fma c c (* d d))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 2e-150) (if (!= (* d (/ b (fma c c (* d d)))) 0.0) (+ (/ 2.0 (/ 2.0 (* d (/ b (fma c c (* d d)))))) (/ (* c (* a (* d (/ (/ b b) (fma c c (* d d)))))) d)) (/ (fma c a (* d b)) (fma c c (* d d)))) (+ (* (/ d (fma d d (* c c))) b) (* a (/ c (fma c c (* d d)))))))",
    "output_parens": 62,
    "avg_bits_err_input": 25.609066136059518,
    "avg_bits_err_output": 22.879521669500143,
    "avg_bits_err_improve": 2.729544466559375,
    "time": 15631.759521484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* (/ c (fma d d (* c c))) b) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 25.982753069101992,
    "avg_bits_err_output": 23.06828250315598,
    "avg_bits_err_improve": 2.9144705659460115,
    "time": 13828.503662109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.021926748933204645,
    "avg_bits_err_improve": 0.015698251066795354,
    "time": 5491.689453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (+ (- ux (* ux ux)) (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.570782447418955,
    "avg_bits_err_output": 0.5418606566486796,
    "avg_bits_err_improve": 13.028921790770275,
    "time": 22715.0419921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (if (!= (- (* ux ux) ux) 0.0) (/ (- (* (- (* ux ux) ux) (- ux (* ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))) (* (- (* ux ux) ux) (- (* ux ux) ux))) (- (* ux ux) ux)) (- (+ ux ux) (* ux (+ ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))))",
    "output_parens": 37,
    "avg_bits_err_input": 13.613212439241869,
    "avg_bits_err_output": 0.3781874287566743,
    "avg_bits_err_improve": 13.235025010485193,
    "time": 25107.886962890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33857795013352554,
    "avg_bits_err_output": 0.3287608016506093,
    "avg_bits_err_improve": 0.00981714848291626,
    "time": 43337.61083984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.2018069536215519,
    "avg_bits_err_output": 0.2018069536215519,
    "avg_bits_err_improve": 0,
    "time": 18762.352294921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ u1 (- 1.0 u1)) 0.0) (/ (/ u1 (/ (- 1.0 u1) u1)) u1) (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.5326200048436213,
    "avg_bits_err_output": 0.5581669470531018,
    "avg_bits_err_improve": -0.025546942209480505,
    "time": 20612.67431640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3063428212477156,
    "avg_bits_err_output": 0.3063428212477156,
    "avg_bits_err_improve": 0,
    "time": 21133.9228515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.33003870797885915,
    "avg_bits_err_output": 0.3301637079788592,
    "avg_bits_err_improve": -0.00012500000000004174,
    "time": 71859.03564453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (- (expm1 (/ x (- s))) -2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.059045489586960445,
    "avg_bits_err_output": 0.05978060387668485,
    "avg_bits_err_improve": -0.0007351142897244062,
    "time": 14302.37451171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) s) (+ (* (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 2.0)) 1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 0.15872914394076296,
    "avg_bits_err_output": 0.13587521151124776,
    "avg_bits_err_improve": 0.022853932429515195,
    "time": 19518.45263671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6646417569147469,
    "avg_bits_err_output": 0.671383895373748,
    "avg_bits_err_improve": -0.006742138459001068,
    "time": 19518.046142578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.17133664783748395,
    "avg_bits_err_output": 0.16523923275447755,
    "avg_bits_err_improve": 0.006097415083006402,
    "time": 18101.04736328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.499164735521869,
    "avg_bits_err_output": 2.4943656958440226,
    "avg_bits_err_improve": 0.004799039677846562,
    "time": 25789.946044921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* cosTheta_i (/ (* (/ (exp (/ (* sinTheta_i sinTheta_O) (- v))) v) cosTheta_O) (* (+ v v) (sinh (/ 1.0 v)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4724252346420962,
    "avg_bits_err_output": 0.40099931295985114,
    "avg_bits_err_improve": 0.07142592168224504,
    "time": 25083.335205078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.152237279469318,
    "avg_bits_err_output": 0.15260253656604564,
    "avg_bits_err_improve": -0.0003652570967276336,
    "time": 9922.261474609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (- -1.0 (- (* alpha alpha))) (log (* alpha alpha))) (* PI (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.47341459829872734,
    "avg_bits_err_output": 0.47904896747121617,
    "avg_bits_err_improve": -0.005634369172488829,
    "time": 21978.589599609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log (/ 1.0 (/ (fma u 1.7777777777777777 -1.7777777777777777) -1.3333333333333333)))))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3315633394986508,
    "avg_bits_err_output": 1.2916967074895034,
    "avg_bits_err_improve": 0.03986663200914742,
    "time": 23675.169921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(if (!= s 0.0) (* s (/ (/ (log (/ 1.0 (fma u -4.0 1.0))) (/ 1.0 (+ s s))) (* s (* s (/ 2.0 s))))) (* s (log (/ 1.0 (fma u -4.0 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.384435603547642,
    "avg_bits_err_output": 12.432679260989827,
    "avg_bits_err_improve": -0.048243657442185395,
    "time": 24541.000244140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (fma (exp (/ r (- s))) (/ 0.125 (* s PI)) (* (exp (/ (/ r s) -3.0)) (/ (/ 0.125 s) PI))) r)",
    "output_parens": 13,
    "avg_bits_err_input": 0.14616035262140678,
    "avg_bits_err_output": 0.15978005521516328,
    "avg_bits_err_improve": -0.0136197025937565,
    "time": 23434.196533203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (sin (* normAngle (- 1.0 u))) (/ n0_i (sin normAngle))) (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9163473813057331,
    "avg_bits_err_output": 0.7838140898065431,
    "avg_bits_err_improve": 0.13253329149919002,
    "time": 24678.235107421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta))) (+ 1.0 c)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.7136843510275821,
    "avg_bits_err_output": 0.47425739110826776,
    "avg_bits_err_improve": 0.23942695991931434,
    "time": 20856.083251953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (log (- 1.0 u1)) 0.0) (* (* (log (- 1.0 u1)) (log (- 1.0 u1))) (/ 1.0 (log (- 1.0 u1)))) (log (- 1.0 u1))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 21,
    "avg_bits_err_input": 13.477390005953321,
    "avg_bits_err_output": 13.480363092812105,
    "avg_bits_err_improve": -0.0029730868587840575,
    "time": 25637.0029296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (- (expm1 (log1p (- (log (- 1.0 u1)))))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.526408367458307,
    "avg_bits_err_output": 13.53043025648454,
    "avg_bits_err_improve": -0.004021889026232017,
    "time": 25326.331787109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(if (!= (* alpha (* alpha (log (- 1.0 u0)))) 0.0) (/ 1.0 (/ 1.0 (* alpha (* (- alpha) (log (- 1.0 u0)))))) (fma (- alpha) (* alpha (exp (log1p (log (- 1.0 u0))))) (* alpha alpha)))",
    "output_parens": 21,
    "avg_bits_err_input": 14.343850610989191,
    "avg_bits_err_output": 13.866531166568699,
    "avg_bits_err_improve": 0.4773194444204929,
    "time": 18154.052001953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(+ (/ (/ (log (- 1.0 u0)) -2.0) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay)))) (/ (/ (+ (log (- 1.0 u0)) (log (- 1.0 u0))) -2.0) (+ (/ sin2phi (* alphay alphay)) (+ (/ sin2phi (* alphay alphay)) (/ (+ cos2phi cos2phi) (* alphax alphax))))))",
    "output_parens": 26,
    "avg_bits_err_input": 12.578819480856613,
    "avg_bits_err_output": 12.611374742947518,
    "avg_bits_err_improve": -0.03255526209090576,
    "time": 19564.8662109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ F F) (/ (/ F F) (/ F (/ (tan (* PI l)) F)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.444907328151956,
    "avg_bits_err_output": 12.318845363452818,
    "avg_bits_err_improve": 4.126061964699138,
    "time": 20348.143798828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21333116579459072,
    "avg_bits_err_output": 0.15601744391904987,
    "avg_bits_err_improve": 0.057313721875540846,
    "time": 18375.27490234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.883072798316967,
    "avg_bits_err_output": 10.618202428838172,
    "avg_bits_err_improve": 3.2648703694787944,
    "time": 21485.852783203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (fma (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (* (exp (* PI (/ f -4.0))) (exp (* PI (/ f -4.0)))) (* (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))))))) (/ PI -4.0))",
    "output_parens": 49,
    "avg_bits_err_input": 61.58871014308897,
    "avg_bits_err_output": 61.60058893245225,
    "avg_bits_err_improve": -0.011878789363279907,
    "time": 50648.555419921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.99137361713371,
    "avg_bits_err_output": 33.739391355283075,
    "avg_bits_err_improve": 9.251982261850635,
    "time": 23414.234130859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.085453883550879,
    "avg_bits_err_output": 4.085453883550879,
    "avg_bits_err_improve": 0,
    "time": 27643.38818359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (expm1 (log1p (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0))))) 0.5)))",
    "output_parens": 17,
    "avg_bits_err_input": 1.1194553301976353,
    "avg_bits_err_output": 1.1195803301976353,
    "avg_bits_err_improve": -0.00012499999999993072,
    "time": 11906.46435546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 10.450937440019898,
    "avg_bits_err_improve": 0,
    "time": 13517.96630859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= Om -4.3e+51) (sqrt (* (* 2.0 (* n U)) (- t (fma (if (!= (* n (pow (/ l Om) 2.0)) 0.0) (/ 2.0 (/ (/ 2.0 n) (pow (/ l Om) 2.0))) (* n (pow (/ l Om) 2.0))) (- U U*) (* l (* l (/ 2.0 Om))))))) (if (<= Om -2.4e-263) (sqrt (* U (* (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* (/ l Om) (* l 2.0)))) (* 2.0 n)))) (if (<= Om 3.8e+18) (sqrt (- (* 2.0 (* (* n U) (- t (* 2.0 (* l (/ l Om)))))) (* (pow (/ l Om) 2.0) (* (* n (- U U*)) (* 2.0 (* n U)))))) (if (<= Om 6.2e+214) (sqrt (* U (* (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* (/ l Om) (* l 2.0)))) (* 2.0 n)))) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))))))",
    "output_parens": 90,
    "avg_bits_err_input": 34.54947140814998,
    "avg_bits_err_output": 32.326761731414805,
    "avg_bits_err_improve": 2.222709676735171,
    "time": 32468.37255859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (/ (* (sin k) (tan k)) l) (* (pow (/ k t) 2.0) (pow t 3.0))) l))",
    "output_parens": 11,
    "avg_bits_err_input": 47.70343549375484,
    "avg_bits_err_output": 37.38471305605974,
    "avg_bits_err_improve": 10.3187224376951,
    "time": 41467.827880859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 4.0 (* (+ 2.0 (pow (/ k t) 2.0)) (/ (tan k) (fabs l)))) (* (pow t 3.0) (/ (+ (sin k) (sin k)) (fabs l))))",
    "output_parens": 16,
    "avg_bits_err_input": 32.342430985604025,
    "avg_bits_err_output": 26.493471018817804,
    "avg_bits_err_improve": 5.8489599667862215,
    "time": 24364.724609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (/ (* a1 (- (* a1 (cos th)))) (- (sqrt 2.0))) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5184238750216361,
    "avg_bits_err_output": 0.48683158126766957,
    "avg_bits_err_improve": 0.03159229375396655,
    "time": 21773.614013671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5140279260500398,
    "avg_bits_err_output": 0.4725714366205276,
    "avg_bits_err_improve": 0.04145648942951219,
    "time": 18281.72314453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (if (!= (- (* (exp l) J) (* J (- (exp (- l))))) 0.0) (* J (* (/ J (* J (+ (exp l) (exp (- l))))) (- (* (exp l) (exp l)) (* (exp (- l)) (exp (- l)))))) (* J (- (exp l) (exp (- l))))) (cos (/ K 2.0))) U)",
    "output_parens": 35,
    "avg_bits_err_input": 17.213703918742553,
    "avg_bits_err_output": 17.271933027064556,
    "avg_bits_err_improve": -0.05822910832200279,
    "time": 22333.423828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K m) 0.0) 0.0 (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 19,
    "avg_bits_err_input": 15.008031903246641,
    "avg_bits_err_output": 1.1387877292497168,
    "avg_bits_err_improve": 13.869244173996924,
    "time": 17253.125732421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.203969360937773,
    "avg_bits_err_output": 18.203969360937773,
    "avg_bits_err_improve": 0,
    "time": 32965.34423828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.624542998972204,
    "avg_bits_err_output": 11.4324617116679,
    "avg_bits_err_improve": 3.1920812873043047,
    "time": 13391.8671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) (- INFINITY)) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* V l) -4e-189) (* c0 (sqrt (+ (/ (+ A (+ A A)) (* (* V (+ l l)) 2.0)) (/ A (* (* V (+ l l)) 2.0))))) (if (<= (* V l) 5e-213) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* V l) 2e+129) (* c0 (sqrt (* (/ A (* l V)) (/ (/ (- (* l V)) l) (- V))))) (* c0 (sqrt (/ (/ A l) V)))))))",
    "output_parens": 48,
    "avg_bits_err_input": 19.18210017194593,
    "avg_bits_err_output": 15.023777744904216,
    "avg_bits_err_improve": 4.158322427041714,
    "time": 16842.19287109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (if (!= (sqrt (* (fma (* d d) (/ c0 (* w (* D (* h D)))) M) (- (* (* d c0) (/ d (* w (* D (* h D))))) M))) 0.0) 0.0 (fma d (* d (/ c0 (* w (* D (* h D))))) (sqrt (* (+ (/ (* (* d c0) (/ (/ d D) w)) (* D h)) M) (- (* (* d c0) (/ d (* w (* D (* h D))))) M))))))",
    "output_parens": 42,
    "avg_bits_err_input": 59.74169802210378,
    "avg_bits_err_output": 35.74893698323035,
    "avg_bits_err_improve": 23.992761038873432,
    "time": 53679.24609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= h -1.2e+237) (- (* h (* (* 0.5 (/ (pow (* M (/ D (* d 2.0))) 2.0) l)) (* (pow (/ d h) 0.5) (- (pow (/ d l) 0.5))))) (* (pow (/ d h) 0.5) (- (pow (/ d l) 0.5)))) (if (<= h 4.2e-187) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M (/ D 2.0)) d) 2.0)) (/ h l)))) (- (* h (* (* 0.5 (/ (pow (* M (/ D (* d 2.0))) 2.0) l)) (* (pow (/ d h) 0.5) (- (pow (/ d l) 0.5))))) (* (pow (/ d h) 0.5) (- (pow (/ d l) 0.5))))))",
    "output_parens": 60,
    "avg_bits_err_input": 27.016522333590924,
    "avg_bits_err_output": 26.003382432189035,
    "avg_bits_err_improve": 1.013139901401889,
    "time": 47764.065673828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (- (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (+ (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (/ (- (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 2.0) (+ (+ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 2.0))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 55,
    "avg_bits_err_input": 15.448066746173776,
    "avg_bits_err_output": 14.981389029944545,
    "avg_bits_err_improve": 0.46667771622923127,
    "time": 29187.965087890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9822924812503606,
    "avg_bits_err_output": 0.01327124062518029,
    "avg_bits_err_improve": 0.9690212406251804,
    "time": 3018.375244140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (fma v (* v 5.0) -1.0) (* (- PI) (sqrt (- 2.0 (* 6.0 (* v v)))))) (- t (* t (* v v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.40754667459338745,
    "avg_bits_err_output": 0.11580208319999193,
    "avg_bits_err_improve": 0.29174459139339554,
    "time": 23535.17578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.015026789890100095,
    "avg_bits_err_output": 0.013005549264919807,
    "avg_bits_err_improve": 0.0020212406251802883,
    "time": 4935.15576171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.586107011897837,
    "avg_bits_err_output": 0.586107011897837,
    "avg_bits_err_improve": 0,
    "time": 10168.837158203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.06915416049006,
    "avg_bits_err_output": 2.0355079198648798,
    "avg_bits_err_improve": 0.03364624062518029,
    "time": 13707.3955078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- Vef (- Ec (+ mu EDonor))) KbT)))) (/ NaChar (- (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02500558392515775,
    "avg_bits_err_output": 0.02500558392515775,
    "avg_bits_err_improve": 0,
    "time": 8324.05224609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (if (!= (* (* b b) 4.0) 0.0) (if (!= (* (* b b) 4.0) 0.0) (fma b (* b 4.0) (pow (fma b b (* a a)) 2.0)) (fma b (* b 4.0) (pow (fma b b (* a a)) 2.0))) (fma b (* b 4.0) (if (!= 0.0 0.0) 0.0 (* (* b (pow (fma b b (* a a)) 2.0)) (/ 1.0 b))))) 1.0)",
    "output_parens": 29,
    "avg_bits_err_input": 0.1824013316399258,
    "avg_bits_err_output": 0.19773422695684276,
    "avg_bits_err_improve": -0.01533289531691695,
    "time": 15235.955810546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (fma (* a a) (+ a 1.0) (* (* b b) (- 1.0 (* a 3.0)))))) -1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.1823637998834221,
    "avg_bits_err_output": 0.1809981983204714,
    "avg_bits_err_improve": 0.001365601562950708,
    "time": 6056.488037109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18817552734808446,
    "avg_bits_err_output": 0.18817552734808446,
    "avg_bits_err_improve": 0,
    "time": 4264.59814453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (if (!= (/ x (* (sqrt (fma 4.0 (* p p) (* x x))) 2.0)) 0.0) (/ (* (/ (/ x (sqrt (fma x x (* 4.0 (* p p))))) 8.0) (+ x (+ x (+ (+ x x) (+ x x))))) x) (/ (/ (+ x (+ x x)) (sqrt (fma 4.0 (* p p) (* x x)))) 4.0))))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.050855588987446,
    "avg_bits_err_output": 13.285000675306424,
    "avg_bits_err_improve": -0.23414508631897846,
    "time": 14756.153564453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.95910217272023,
    "avg_bits_err_output": 0.0645,
    "avg_bits_err_improve": 40.89460217272023,
    "time": 5212.357421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(if (!= (/ (sin x) (- x (tan x))) 0.0) (+ (/ (* x (sin x)) (* (- x (tan x)) (+ (sin x) (sin x)))) (- (/ (* x (sin x)) (* (- x (tan x)) (+ (sin x) (sin x)))) (/ 1.0 (/ 1.0 (/ (sin x) (- x (tan x))))))) (/ (- x (sin x)) (- x (tan x))))",
    "output_parens": 37,
    "avg_bits_err_input": 31.1622441417708,
    "avg_bits_err_output": 31.19916384530615,
    "avg_bits_err_improve": -0.036919703535350124,
    "time": 23513.768798828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 -5.8e+149) (/ (if (!= (- b_2) 0.0) (- (/ 2.0 (/ -2.0 b_2)) 0.0) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a) (if (<= b_2 4.9e+108) (/ (- (sqrt (+ (- (- (* b_2 b_2) (* a c)) (* a c)) (* a c))) b_2) a) (/ 0.0 a)))",
    "output_parens": 27,
    "avg_bits_err_input": 33.58034283479927,
    "avg_bits_err_output": 27.94473667858947,
    "avg_bits_err_improve": 5.635606156209796,
    "time": 13449.752685546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (if (!= (- (* b_2 b_2) (* a c)) 0.0) (/ 1.0 (/ 1.0 (- (* b_2 b_2) (* a c)))) (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.07013790512233,
    "avg_bits_err_output": 34.302229573864565,
    "avg_bits_err_improve": -0.2320916687422354,
    "time": 15399.73974609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.809175377527488,
    "avg_bits_err_output": 31.054778701911584,
    "avg_bits_err_improve": 0.7543966756159044,
    "time": 16775.475341796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))) 0.0) (/ 1.0 (/ 1.0 (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 22,
    "avg_bits_err_input": 32.28090906370833,
    "avg_bits_err_output": 32.280912931871086,
    "avg_bits_err_improve": -3.868162757214577e-06,
    "time": 22074.959716796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (log1p N) (log N))",
    "output_parens": 3,
    "avg_bits_err_input": 29.299182087719696,
    "avg_bits_err_output": 29.298850929999393,
    "avg_bits_err_improve": 0.0003311577203035654,
    "time": 13150.22412109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (+ -1.0 (/ (+ x x) (+ x 1.0))) (+ x x)) (/ -1.0 (+ x x)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.731404307233335,
    "avg_bits_err_output": 14.743906766919899,
    "avg_bits_err_improve": -0.012502459686563938,
    "time": 13402.446533203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (- (cos x)) (log1p (expm1 (cos (+ x eps)))))",
    "output_parens": 7,
    "avg_bits_err_input": 39.3162565886154,
    "avg_bits_err_output": 39.343415321081885,
    "avg_bits_err_improve": -0.02715873246648215,
    "time": 17160.125244140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ x 1.0)) -1.0) 0.0) (/ (+ (* (+ (cbrt (+ x 1.0)) -1.0) (+ (cbrt (+ x 1.0)) -1.0)) (* (if (!= (cbrt (+ x 1.0)) 0.0) (* (cbrt (+ x 1.0)) (/ (+ (cbrt (+ x 1.0)) -1.0) (cbrt (+ x 1.0)))) (+ (cbrt (+ x 1.0)) -1.0)) (- 1.0 (cbrt x)))) (+ (cbrt (+ x 1.0)) -1.0)) (- (cbrt (+ x 1.0)) (cbrt x)))",
    "output_parens": 40,
    "avg_bits_err_input": 29.61538023469967,
    "avg_bits_err_output": 29.612541819931533,
    "avg_bits_err_improve": 0.0028384147681386196,
    "time": 15061.914794921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.256443566921956,
    "avg_bits_err_output": 30.256443566921956,
    "avg_bits_err_improve": 0,
    "time": 21428.655029296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.98275498666728,
    "avg_bits_err_output": 33.98275498666728,
    "avg_bits_err_improve": 0,
    "time": 21909.3525390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.42168904118794,
    "avg_bits_err_output": 34.42168904118794,
    "avg_bits_err_improve": 0,
    "time": 22274.617919921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.33684103380118,
    "avg_bits_err_output": 0.8779766977415902,
    "avg_bits_err_improve": 60.45886433605959,
    "time": 25910.540771484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (- (* (fma n (- (log1p n) (log n)) (log1p n)) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (if (!= (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0)) 0.0) (/ (+ (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0)) (* (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0)) (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0)))) (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0))) (fma n (- (log1p n) (log n)) (log1p n))))))) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 68,
    "avg_bits_err_input": 63.0083649550288,
    "avg_bits_err_output": 44.207468317961606,
    "avg_bits_err_improve": 18.800896637067197,
    "time": 17742.15185546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.53179012753429,
    "avg_bits_err_output": 58.492612005702235,
    "avg_bits_err_improve": 0.03917812183205882,
    "time": 16900.1962890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (!= (+ 1.0 (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x)))) 0.0) (/ (- 1.0 (* (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x))) (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x))))) (+ 1.0 (if (!= (+ (+ (/ 1.0 x) -1.0) (/ 1.0 (tan x))) 0.0) (/ (fma (- 1.0 (/ 1.0 x)) (- 1.0 (/ 1.0 x)) (/ -1.0 (* (tan x) (tan x)))) (- 1.0 (+ (/ 1.0 (tan x)) (/ 1.0 x)))) (+ (/ 1.0 (tan x)) (- 1.0 (/ 1.0 x)))))) (+ (/ 1.0 x) (/ -1.0 (tan x))))",
    "output_parens": 53,
    "avg_bits_err_input": 59.87089322200644,
    "avg_bits_err_output": 59.273340074658606,
    "avg_bits_err_improve": 0.5975531473478313,
    "time": 36801.43212890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (if (!= (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))) 0.0) (/ 1.0 (/ 1.0 (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a)))))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps a))))) (expm1 (* eps b)))",
    "output_parens": 28,
    "avg_bits_err_input": 60.37253754349297,
    "avg_bits_err_output": 29.596792352123757,
    "avg_bits_err_improve": 30.77574519136921,
    "time": 26913.28076171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.26232657018524,
    "avg_bits_err_output": 0.39649060156295074,
    "avg_bits_err_improve": 40.865835968622285,
    "time": 7597.27685546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.71435071468072,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.71347571468072,
    "time": 2785.085205078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.3258058584518,
    "avg_bits_err_output": 0.01681923215775668,
    "avg_bits_err_improve": 29.308986626294043,
    "time": 4243.547119140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (if (!= (* (exp x) (- (exp (- x)) 2.0)) 0.0) (/ 1.0 (/ 1.0 (* (exp x) (- (exp (- x)) 2.0)))) (* (exp x) (- (exp (- x)) 2.0)))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 35,
    "avg_bits_err_input": 29.413189572216908,
    "avg_bits_err_output": 28.90531179918768,
    "avg_bits_err_improve": 0.5078777730292288,
    "time": 18186.124755859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.814365027234135,
    "avg_bits_err_output": 9.814365027234135,
    "avg_bits_err_improve": 0,
    "time": 32209.839599609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.270815854716275,
    "avg_bits_err_output": 37.270815854716275,
    "avg_bits_err_improve": 0,
    "time": 16515.70361328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (if (!= (+ (sqrt (+ 1.0 x)) -1.0) 0.0) (* (+ (sqrt (+ 1.0 x)) -1.0) (/ (+ (sqrt (+ 1.0 x)) (- -1.0 (sqrt x))) (+ (sqrt (+ 1.0 x)) -1.0))) (+ (sqrt (+ 1.0 x)) (- -1.0 (sqrt x)))) -1.0)",
    "output_parens": 24,
    "avg_bits_err_input": 29.537471904759915,
    "avg_bits_err_output": 28.854568446635742,
    "avg_bits_err_improve": 0.6829034581241729,
    "time": 11719.941162109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(- (sin (+ x eps)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.47468880428797,
    "avg_bits_err_output": 36.47468880428797,
    "avg_bits_err_improve": 0,
    "time": 16735.89697265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (+ (/ (+ (/ -1.0 (sqrt x)) (/ 1.0 (sqrt (+ 1.0 x)))) (sqrt (+ 1.0 x))) (/ (fma (/ -1.0 (* (sqrt (+ 1.0 x)) (sqrt x))) (/ (/ 1.0 (sqrt x)) (sqrt (+ 1.0 x))) (/ (/ (/ 1.0 (sqrt x)) (sqrt (+ 1.0 x))) (* (sqrt (+ 1.0 x)) (sqrt x)))) (/ (/ 1.0 (sqrt x)) (sqrt (+ 1.0 x))))) (/ -1.0 (sqrt (+ 1.0 x))))",
    "output_parens": 41,
    "avg_bits_err_input": 19.69575315252571,
    "avg_bits_err_output": 19.757006281052973,
    "avg_bits_err_improve": -0.06125312852726239,
    "time": 15033.92724609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ N 1.0)) (atan N)) 0.0) (* (+ (atan (+ N 1.0)) (atan N)) (if (!= (/ (atan (+ N 1.0)) (- (- (atan N)) (atan (+ N 1.0)))) 0.0) (/ (fma (/ (atan (+ N 1.0)) (- (- (atan N)) (atan (+ N 1.0)))) (/ (atan (+ N 1.0)) (- (- (atan N)) (atan (+ N 1.0)))) (fma (/ (atan (+ N 1.0)) (- (- (atan N)) (atan (+ N 1.0)))) (/ (- (atan N) (atan (+ N 1.0))) (- (- (atan N)) (atan (+ N 1.0)))) (* (/ (atan (+ N 1.0)) (- (- (atan N)) (atan (+ N 1.0)))) (/ (- (atan (+ N 1.0))) (- (- (atan N)) (atan (+ N 1.0))))))) (/ (atan (+ N 1.0)) (- (- (atan N)) (atan (+ N 1.0))))) (/ (- (atan (+ N 1.0)) (atan N)) (+ (atan (+ N 1.0)) (atan N))))) (- (atan (+ N 1.0)) (atan N)))",
    "output_parens": 97,
    "avg_bits_err_input": 15.167809408758213,
    "avg_bits_err_output": 15.188320198736179,
    "avg_bits_err_improve": -0.020510789977965516,
    "time": 16993.036865234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (+ (log (+ (exp a) (exp b))) 1.0) 0.0) (/ (log (+ 1.0 (expm1 (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 1.0))))) (+ (log (+ (exp a) (exp b))) 1.0)) (log (+ (exp a) (exp b))))",
    "output_parens": 30,
    "avg_bits_err_input": 29.719850736957508,
    "avg_bits_err_output": 30.074411798108894,
    "avg_bits_err_improve": -0.3545610611513865,
    "time": 39269.9267578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.08232272405410936,
    "avg_bits_err_output": 0.0733627615533882,
    "avg_bits_err_improve": 0.00895996250072116,
    "time": 15745.856689453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.37196471908534,
    "avg_bits_err_output": 0.3123659781302284,
    "avg_bits_err_improve": 16.059598740955114,
    "time": 10422.012939453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (if (!= (/ 0.044444444444444446 (/ (/ 8.0 angle) PI)) 0.0) (- (/ (/ 0.0002469135802469136 (if (!= (/ 8.0 (* PI angle)) 0.0) (/ 1.0 (/ 0.005555555555555556 (/ (/ 0.044444444444444446 angle) PI))) (/ 8.0 (* PI angle)))) 0.005555555555555556) 0.0) (/ 0.044444444444444446 (/ (/ 8.0 angle) PI))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 36,
    "avg_bits_err_input": 20.389233911526752,
    "avg_bits_err_output": 20.401256789802325,
    "avg_bits_err_improve": -0.012022878275573134,
    "time": 30067.957763671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (- (pow a 2.0) (pow b 2.0)) (sin (* PI (/ angle 180.0))) (fma (- (pow b 2.0)) (sin (* PI (/ angle 180.0))) (* (pow b 2.0) (sin (* PI (/ angle 180.0)))))) (* -2.0 (cos (* PI (/ angle 180.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 31.27805907037909,
    "avg_bits_err_output": 31.253435585195632,
    "avg_bits_err_improve": 0.024623485183457916,
    "time": 27710.708251953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* (/ angle 180.0) PI) 0.0) (* (/ (/ angle 180.0) (* angle (/ PI 180.0))) (* (/ angle 180.0) (* PI PI))) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 20.15324652601649,
    "avg_bits_err_output": 20.15733923395107,
    "avg_bits_err_improve": -0.004092707934582052,
    "time": 30679.81005859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1864505640636719,
    "avg_bits_err_output": 0.1800153547271332,
    "avg_bits_err_improve": 0.006435209336538683,
    "time": 14487.96142578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31238967449275823,
    "avg_bits_err_output": 0.3154109398231021,
    "avg_bits_err_improve": -0.0030212653303438586,
    "time": 18208.026123046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (sin v) (/ e (+ 1.0 (* (cos v) e))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1309387218755409,
    "avg_bits_err_output": 0.1299174812503606,
    "avg_bits_err_improve": 0.001021240625180303,
    "time": 16454.3876953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.032407256751274,
    "avg_bits_err_output": 17.024819025085606,
    "avg_bits_err_improve": 0.0075882316656681326,
    "time": 32814.566650390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* b (/ -0.25 a)) 0.0) (/ (* (/ (* b -0.25) a) (fma b (/ -0.25 a) (/ (+ (sqrt (fma -4.0 (* a c) (* b b))) (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma -4.0 (* a c) (* b b))))) (* a 8.0)))) (* b (/ -0.25 a))) (/ (+ (sqrt (fma -4.0 (* a c) (* b b))) (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))))) (* a 8.0)))",
    "output_parens": 47,
    "avg_bits_err_input": 52.75275759132865,
    "avg_bits_err_output": 51.6977707834587,
    "avg_bits_err_improve": 1.0549868078699518,
    "time": 32298.425048828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (+ (fma (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))) (* b b)) 0.0) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 34,
    "avg_bits_err_input": 28.499638671508404,
    "avg_bits_err_output": 27.925877016708093,
    "avg_bits_err_improve": 0.573761654800311,
    "time": 34069.149658203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (fma (- b) (/ 1.0 (+ a a)) (* b (/ 1.0 (+ a a)))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a)))",
    "output_parens": 15,
    "avg_bits_err_input": 43.40407546852819,
    "avg_bits_err_output": 42.480537405206945,
    "avg_bits_err_improve": 0.9235380633212458,
    "time": 26326.29638671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.004483310277834,
    "avg_bits_err_output": 34.004483310277834,
    "avg_bits_err_improve": 0,
    "time": 21237.13232421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8421704250420191,
    "avg_bits_err_output": 0.8392374263551654,
    "avg_bits_err_improve": 0.002932998686853705,
    "time": 24255.906982421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (- 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 29.67968941526113,
    "avg_bits_err_output": 29.666388679340773,
    "avg_bits_err_improve": 0.013300735920356743,
    "time": 28162.578369140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(- (- (/ (exp x) (+ (exp x) (exp (- x)))) (/ (log1p (expm1 (/ (exp (- x)) (+ (exp x) (exp (- x)))))) 2.0)) (/ (/ (exp (- x)) (+ (exp x) (exp (- x)))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 58.03530237781477,
    "avg_bits_err_output": 58.04895393919852,
    "avg_bits_err_improve": -0.013651561383746014,
    "time": 19271.587646484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (if (!= (- (exp x) (- (exp (- x)))) 0.0) (/ (fma (exp x) (exp x) (if (!= (* (exp (- x)) (exp (- x))) 0.0) (/ 1.0 (/ -1.0 (expm1 (log1p (* (exp (- x)) (exp (- x))))))) (* (exp (- x)) (- (exp (- x)))))) (- (exp x) (- (exp (- x))))) (- (exp x) (exp (- x)))) 2.0)",
    "output_parens": 43,
    "avg_bits_err_input": 58.10137886102345,
    "avg_bits_err_output": 58.12665295692593,
    "avg_bits_err_improve": -0.025274095902481974,
    "time": 14941.83935546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0072712406251802895,
    "avg_bits_err_output": 0.0072712406251802895,
    "avg_bits_err_improve": 0,
    "time": 3658.3056640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.2495,
    "avg_bits_err_output": 32.2495,
    "avg_bits_err_improve": 0,
    "time": 4482.498046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (+ (/ x (* (- 1.0 x) 2.0)) (/ (+ x (+ x x)) (* (- 1.0 x) 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 58.52155357422325,
    "avg_bits_err_output": 0.020634805462213437,
    "avg_bits_err_improve": 58.50091876876103,
    "time": 13600.798583984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.02789624062518029,
    "avg_bits_err_output": 0.02789624062518029,
    "avg_bits_err_improve": 0,
    "time": 4559.197509765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh (tan t)) ew))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12275,
    "avg_bits_err_output": 0.12344812031259014,
    "avg_bits_err_improve": -0.0006981203125901447,
    "time": 24038.509765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13019812031259012,
    "avg_bits_err_output": 0.12984436093777044,
    "avg_bits_err_improve": 0.00035375937481968434,
    "time": 25530.024658203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.42654678543464,
    "avg_bits_err_output": 3.9756621258913993,
    "avg_bits_err_improve": 35.45088465954324,
    "time": 26446.5537109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.341059708464464,
    "avg_bits_err_output": 0.011686481637041212,
    "avg_bits_err_improve": 14.329373226827423,
    "time": 5464.764892578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (sin delta) (* (cos phi1) (cos theta))))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.13565926880974163,
    "avg_bits_err_output": 0.13627122707948489,
    "avg_bits_err_improve": -0.0006119582697432513,
    "time": 35026.200439453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(fma (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a) (/ (+ b b) (* a -6.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 52.7435470852624,
    "avg_bits_err_output": 51.05906327899032,
    "avg_bits_err_improve": 1.6844838062720768,
    "time": 24615.48828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (* b b) (* b b) (* (* b b) (* (sqrt (fma c (* a -3.0) (* b b))) (- (sqrt (fma c (* a -3.0) (* b b))))))) (* b (- b))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 55,
    "avg_bits_err_input": 28.642582371706403,
    "avg_bits_err_output": 28.19697354237165,
    "avg_bits_err_improve": 0.445608829334752,
    "time": 30635.2998046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -5e-23) (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* a 3.0)) (* (- (sqrt (if (!= (* b b) 0.0) (if (!= (- (* c (* (* a -3.0) (- (/ b b) 0.0))) (* b (/ (* b b) b))) 0.0) (/ 0.0 (- (* c (* (* a -3.0) (- (/ b b) 0.0))) (* b (/ (* b b) b)))) 0.0) (fma a (* c -3.0) (* b b)))) b) (/ 0.3333333333333333 a)))",
    "output_parens": 49,
    "avg_bits_err_input": 43.44111972458669,
    "avg_bits_err_output": 41.65357180714294,
    "avg_bits_err_improve": 1.787547917443753,
    "time": 27333.08544921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.06653552731876,
    "avg_bits_err_output": 34.06653552731876,
    "avg_bits_err_improve": 0,
    "time": 18067.520751953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (if (!= (- (cos (- lambda1 lambda2))) 0.0) (/ (* (* (sin phi1) (cos phi2)) (* (cos (- lambda1 lambda2)) (- (cos (- lambda1 lambda2))))) (- (cos (- lambda1 lambda2)))) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 12.991207689749464,
    "avg_bits_err_output": 12.99653232216285,
    "avg_bits_err_improve": -0.005324632413385544,
    "time": 30180.80126953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.167248913616987,
    "avg_bits_err_output": 0.5423790721199043,
    "avg_bits_err_improve": 28.624869841497084,
    "time": 19695.7236328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (- (/ x (+ x (+ x 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.045124287053355215,
    "avg_bits_err_improve": -0.03349928705335521,
    "time": 2748.40576171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (- 1.0 (/ x (+ x -1.0))) (- (/ 1.0 (+ x -1.0)))) (+ x 1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 14.508728574786986,
    "avg_bits_err_output": 12.616183079645788,
    "avg_bits_err_improve": 1.8925454951411975,
    "time": 14645.5263671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+222) (/ (sqrt (fma (fma 2.0 (pow B 2.0) (* C (* A -8.0))) (* F (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (fma 2.0 (pow B 2.0) (* C (* A -8.0))) (* F C)))) (- (* A (* 4.0 C)) (pow B 2.0))) 0.0)",
    "output_parens": 47,
    "avg_bits_err_input": 52.501496761601125,
    "avg_bits_err_output": 50.96388319200461,
    "avg_bits_err_improve": 1.537613569596516,
    "time": 38702.782958984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 29.037128243422124,
    "avg_bits_err_output": 29.03737412483999,
    "avg_bits_err_improve": -0.0002458814178645241,
    "time": 21159.4560546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* 2.0 (* (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F (- (pow B 2.0) (* C (* A 4.0))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.11395969337423,
    "avg_bits_err_output": 51.848988878888875,
    "avg_bits_err_improve": 0.264970814485352,
    "time": 37027.68994140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.500727153718927,
    "avg_bits_err_output": 15.500727153718927,
    "avg_bits_err_improve": 0,
    "time": 2068.7197265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (if (!= (* g (/ g g)) 0.0) (/ (- (* (* g (/ g g)) (* g (/ (sqrt (- (* g g) (* h h))) g))) (* (* g (/ g g)) (* g (/ g g)))) (* g (/ g g))) (+ (- (sqrt (- (* g g) (* h h))) g) (/ 0.0 g))) (- (sqrt (- (* g g) (* h h))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 50,
    "avg_bits_err_input": 36.32984600865366,
    "avg_bits_err_output": 36.24826770351091,
    "avg_bits_err_improve": 0.08157830514274877,
    "time": 15418.8681640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.990142106257573,
    "avg_bits_err_output": 0.9762005640636722,
    "avg_bits_err_improve": 0.013941542193900869,
    "time": 6821.65087890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6680212406251803,
    "avg_bits_err_output": 0.6680212406251803,
    "avg_bits_err_improve": 0,
    "time": 3713.3896484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-285) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+269) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.383478930627295,
    "avg_bits_err_output": 2.3906902611733476,
    "avg_bits_err_improve": 8.992788669453947,
    "time": 8434.5869140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5811207016134862,
    "avg_bits_err_output": 0.527125,
    "avg_bits_err_improve": 0.05399570161348621,
    "time": 10339.0498046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- (+ x (hypot 1.0 x)) -1.0) 0.0) (- (/ 1.0 (/ 1.0 (exp (log1p (+ x (hypot 1.0 x)))))) (/ (+ (hypot 1.0 x) (+ x 1.0)) (exp (log1p (+ x (hypot 1.0 x)))))) (+ x (hypot 1.0 x))))",
    "output_parens": 23,
    "avg_bits_err_input": 53.312481655785085,
    "avg_bits_err_output": 44.83036606359604,
    "avg_bits_err_improve": 8.482115592189047,
    "time": 24114.1142578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.658665575112182,
    "avg_bits_err_output": 5.658665575112182,
    "avg_bits_err_improve": 0,
    "time": 11247.642822265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (/ x (- -2.0 (+ x x))) (/ (- 2.0 x) (- -2.0 (+ x x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.012875,
    "avg_bits_err_output": 0.01675,
    "avg_bits_err_improve": -0.0038750000000000017,
    "time": 5549.6494140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1327.257080078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (- (+ 3.0 (/ 2.0 (* r r))) (* (fma (* r w) (* r w) 0.0) (/ (* 0.125 (- 3.0 (* 2.0 v))) (- 1.0 v)))) 4.5)",
    "output_parens": 14,
    "avg_bits_err_input": 12.663979549339475,
    "avg_bits_err_output": 0.4113239039050323,
    "avg_bits_err_improve": 12.252655645434443,
    "time": 27348.388671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (/ (* (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) 4.0) (fma x1 x1 1.0))) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5179001533525124,
    "avg_bits_err_output": 0.282162235245416,
    "avg_bits_err_improve": 0.23573791810709638,
    "time": 66072.8046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.868495681068495,
    "avg_bits_err_output": 1.376179898679323,
    "avg_bits_err_improve": 16.492315782389174,
    "time": 7003.98193359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2253233238251722,
    "avg_bits_err_output": 0.2253233238251722,
    "avg_bits_err_improve": 0,
    "time": 10480.564208984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.004,
    "avg_bits_err_output": 0.004,
    "avg_bits_err_improve": 0,
    "time": 3509.345458984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.7775402722595,
    "avg_bits_err_output": 0.27177161719245785,
    "avg_bits_err_improve": 14.505768655067042,
    "time": 16137.039794921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(if (!= (* (/ 0.5 eps) (exp (* x (- -1.0 eps)))) 0.0) (/ (/ (* (* (/ 0.5 eps) (exp (* x (- -1.0 eps)))) (+ (* (exp (fma eps x (- x))) 0.5) (+ (/ (/ (exp (* x (- eps 1.0))) eps) 2.0) (* (exp (* x (- -1.0 eps))) (- 0.5 (/ 0.5 eps)))))) (/ 0.5 eps)) (exp (* x (- -1.0 eps)))) (fma (exp (- (* eps x) x)) (+ 0.5 (/ 0.5 eps)) (* (exp (* x (- -1.0 eps))) (- 0.5 (/ 0.5 eps)))))",
    "output_parens": 48,
    "avg_bits_err_input": 30.29231448085851,
    "avg_bits_err_output": 25.55147102055078,
    "avg_bits_err_improve": 4.740843460307733,
    "time": 19123.988037109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (/ (+ (/ -4.0 (+ t (/ t t))) 8.0) (+ t (/ t t)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.01464624062518029,
    "avg_bits_err_improve": -0.00202124062518029,
    "time": 9289.00732421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.019,
    "avg_bits_err_output": 0.019,
    "avg_bits_err_improve": 0,
    "time": 14336.8642578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017,
    "avg_bits_err_output": 0.009,
    "avg_bits_err_improve": 0.008000000000000002,
    "time": 14022.933349609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3589.52490234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2459.840576171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2952.515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.824674060686979,
    "avg_bits_err_output": 0.250875,
    "avg_bits_err_improve": 7.573799060686979,
    "time": 18911.658447265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.094733465421128,
    "avg_bits_err_output": 7.094733465421128,
    "avg_bits_err_improve": 0,
    "time": 3570.7138671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) 4.0) (- (/ (pow x 2.0) 2.0) (expm1 (log1p (+ (/ (pow (+ x eps) 2.0) 2.0) (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) 4.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 15.474514949881973,
    "avg_bits_err_output": 15.506253709654219,
    "avg_bits_err_improve": -0.03173875977224583,
    "time": 15985.973388671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (* (/ (cos x) (* (exp (* 10.0 (* x x))) (cos x))) (* (* (* (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x)))) (* (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x))))) (+ (/ (/ (cos x) (exp (* 10.0 (* x x)))) (* (* (exp (* 10.0 (* x x))) 2.0) 2.0)) (/ (/ (+ (cos x) (+ (cos x) (cos x))) (* (exp (* 10.0 (* x x))) 2.0)) (* (exp (* 10.0 (* x x))) 2.0))))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 63,
    "avg_bits_err_input": 3.555566318981618,
    "avg_bits_err_output": 3.553970628150539,
    "avg_bits_err_improve": 0.0015956908310785778,
    "time": 30533.2470703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -4e-6) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (* (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x))) (/ x (/ x (+ x (/ 1.0 x))))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 0.002) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (* (/ (/ x (+ x (/ 1.0 x))) (+ x (/ 1.0 x))) (/ x (/ x (+ x (/ 1.0 x))))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 0.011396240625180288,
    "avg_bits_err_improve": 15.174658168795263,
    "time": 16238.798828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.03636601724201,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.03636601724201,
    "time": 4382.77734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.05344387228909,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 39.05306887228909,
    "time": 4276.849853515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(if (!= (* 1.7e+308 t) 0.0) (* t (/ (* 1.7e+308 (+ -1.0 t)) t)) (/ (/ (* -1.7e+308 (- 1.7e+308 (* 1.7e+308 t))) -1.7e+308) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2984174812503606,
    "avg_bits_err_improve": 63.70158251874964,
    "time": 21918.6962890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325111880238,
    "avg_bits_err_output": 0.399875,
    "avg_bits_err_improve": 61.44337611880238,
    "time": 8800.685546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.42168904118794,
    "avg_bits_err_output": 34.42168904118794,
    "avg_bits_err_improve": 0,
    "time": 23100.653564453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.004483310277834,
    "avg_bits_err_output": 34.004483310277834,
    "avg_bits_err_improve": 0,
    "time": 23186.980712890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1577.91162109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.857741367063106,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 39.84599136706311,
    "time": 4871.513671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (+ (* y (- x y)) (* x (- x y))) (+ (* y y) (* x x)))",
    "output_parens": 9,
    "avg_bits_err_input": 20.0666625807642,
    "avg_bits_err_output": 20.077562852109637,
    "avg_bits_err_improve": -0.010900271345438028,
    "time": 8151.26513671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6503057926418863,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6503057926418863,
    "time": 8163.396484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.039125,
    "time": 5624.330078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021073120312590145,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.010823120312590145,
    "time": 3126.96435546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.012375,
    "time": 2205.826904296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 1435.583984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3976960531287862,
    "avg_bits_err_output": 0.2415,
    "avg_bits_err_improve": 0.1561960531287862,
    "time": 5629.28125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (- (/ (+ -1.0 (* (* (cos x) (cos x)) 2.0)) (* (- (* (cos x) -2.0) 2.0) 2.0)) (/ (- 1.0 (* (- (* (cos x) (cos x)) 1.0) 2.0)) (* (- (* (cos x) -2.0) 2.0) 2.0))) (- 1.0 (cos x)))",
    "output_parens": 28,
    "avg_bits_err_input": 30.717366939253317,
    "avg_bits_err_output": 30.717909585874235,
    "avg_bits_err_improve": -0.0005426466209179637,
    "time": 19852.17919921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (+ (/ (if (!= (* (* x x) (- eps)) 0.0) (/ (+ (* x (* (* x eps) (* x (* x eps)))) (* (* x x) (* eps (* (* x x) (- eps))))) (* (* x x) (- eps))) (* eps (+ (* x x) (* x (- x))))) (- eps)) (* eps (/ (- (* x x) eps) eps))) (- (* x x) eps))))",
    "output_parens": 39,
    "avg_bits_err_input": 24.38325999275463,
    "avg_bits_err_output": 24.409345652292114,
    "avg_bits_err_improve": -0.026085659537482542,
    "time": 12126.574462890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ x (- (tan x))) 0.0) (/ (fma (/ x (tan x)) (/ x (* (tan x) -2.0)) (/ (+ (* x (/ (sin x) (tan x))) (* x (/ (* x -0.5) (tan x)))) (tan x))) (/ x (- (tan x)))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 30,
    "avg_bits_err_input": 29.847906859935847,
    "avg_bits_err_output": 29.879639380903644,
    "avg_bits_err_improve": -0.03173252096779677,
    "time": 34369.18896484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00699715999043749,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.00612215999043749,
    "time": 2318.46875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -3.9e+59) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* i i) (/ i n)) n) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= i -500.0) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* (+ i i) (/ (* n (+ i i)) n)))) (* (+ i i) (+ n n)))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (/ (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0)) (/ i n))))",
    "output_parens": 67,
    "avg_bits_err_input": 47.7425151892976,
    "avg_bits_err_output": 45.166067150945715,
    "avg_bits_err_improve": 2.5764480383518844,
    "time": 29242.743896484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (- INFINITY)) (+ (* d (/ b (fma d d (* c c)))) (* c (/ a (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 1e+307) (/ (+ (* (+ d d) (+ b b)) (* (+ c c) (+ a a))) (+ (* 2.0 (* (* d d) 2.0)) (* 2.0 (* 2.0 (* c c))))) (+ (* d (/ b (fma d d (* c c)))) (* c (/ a (fma d d (* c c)))))))",
    "output_parens": 52,
    "avg_bits_err_input": 25.84041357473784,
    "avg_bits_err_output": 22.365452204351982,
    "avg_bits_err_improve": 3.4749613703858593,
    "time": 12520.2978515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (if (!= (/ d (fma c c (* d d))) 0.0) (/ 1.0 (/ 1.0 (/ d (fma c c (* d d))))) (/ d (fma c c (* d d))))))",
    "output_parens": 19,
    "avg_bits_err_input": 25.61856440548663,
    "avg_bits_err_output": 22.513758372364926,
    "avg_bits_err_improve": 3.1048060331217044,
    "time": 14771.369384765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.020833600670583246,
    "avg_bits_err_improve": 0.016166399329416752,
    "time": 4959.919189453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- (- ux (* ux ux)) (+ (- ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.68308928991072,
    "avg_bits_err_output": 0.5468876849820578,
    "avg_bits_err_improve": 13.136201604928662,
    "time": 23895.30419921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (+ ux (- ux (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))) (* ux (- ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.72367366635082,
    "avg_bits_err_output": 0.31505176374439253,
    "avg_bits_err_improve": 13.408621902606427,
    "time": 24797.968994140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* maxCos maxCos) (* (* (- 1.0 ux) (- 1.0 ux)) (* ux ux))))) (* (sin (* PI (* uy 2.0))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.33072118587336513,
    "avg_bits_err_output": 0.3222353019840589,
    "avg_bits_err_improve": 0.008485883889306212,
    "time": 100009.99584960938,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20541054573943912,
    "avg_bits_err_output": 0.20541054573943912,
    "avg_bits_err_improve": 0,
    "time": 19752.590576171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (- 4.0 (* u1 4.0))) (if (!= (/ (+ u1 (+ u1 u1)) (- 8.0 (* u1 8.0))) 0.0) (/ 1.0 (/ 1.3333333333333333 (/ u1 (- 1.0 u1)))) (/ (* u1 1.5) (- 2.0 (+ u1 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 23,
    "avg_bits_err_input": 0.5447692852279641,
    "avg_bits_err_output": 0.5367526106858825,
    "avg_bits_err_improve": 0.008016674542081548,
    "time": 22223.24853515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (+ 1.0 (expm1 (* 6.28318530718 u2))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3203414002753925,
    "avg_bits_err_output": 0.32201700137629713,
    "avg_bits_err_improve": -0.0016756011009046445,
    "time": 21644.176025390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (/ (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s))))))) (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 70,
    "avg_bits_err_input": 0.3458643325518788,
    "avg_bits_err_output": 0.31671474256230303,
    "avg_bits_err_improve": 0.029149589989575786,
    "time": 44001.53173828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ x (- s))) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06266176980599433,
    "avg_bits_err_output": 0.06413828894231438,
    "avg_bits_err_improve": -0.001476519136320048,
    "time": 16545.63818359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (fma s (exp (/ (fabs x) (- s))) s)) (log (+ 1.0 (expm1 (+ (exp (/ (fabs x) (- s))) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.1694443566847406,
    "avg_bits_err_output": 0.15875397478393988,
    "avg_bits_err_improve": 0.01069038190080071,
    "time": 19941.64013671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6614285520357847,
    "avg_bits_err_output": 0.6614285520357847,
    "avg_bits_err_improve": 0,
    "time": 17089.3232421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (- (exp (/ -2.0 v)) (* u (exp (/ -2.0 v)))) u)) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.15195905975788243,
    "avg_bits_err_output": 0.15149072464597116,
    "avg_bits_err_improve": 0.0004683351119112722,
    "time": 18593.208740234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.527076019302284,
    "avg_bits_err_output": 2.527076019302284,
    "avg_bits_err_improve": 0,
    "time": 29786.079345703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* cosTheta_O (* (* cosTheta_i (/ (/ 0.5 v) (sinh (/ 1.0 v)))) (/ 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4683893808914111,
    "avg_bits_err_output": 0.36765086679339065,
    "avg_bits_err_improve": 0.10073851409802043,
    "time": 23916.791259765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (log (/ 0.5 v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.11109494293788265,
    "avg_bits_err_output": 0.11149825650410876,
    "avg_bits_err_improve": -0.00040331356622611003,
    "time": 7874.601806640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (+ (- 2.0 (* alpha (+ alpha alpha))) (- 2.0 (* alpha (+ alpha alpha)))) (- (* (* 4.0 (log (* alpha alpha))) (* PI (fma cosTheta (- (* alpha (* alpha cosTheta)) cosTheta) 1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.4714024399079597,
    "avg_bits_err_output": 0.47030527116111065,
    "avg_bits_err_improve": 0.0010971687468490643,
    "time": 22348.243896484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log (+ 1.0 (- (+ 1.0 (exp (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) 3.0))) 2.0))) s)",
    "output_parens": 10,
    "avg_bits_err_input": 1.3257919615366902,
    "avg_bits_err_output": 1.2715462710680145,
    "avg_bits_err_improve": 0.05424569046867567,
    "time": 28255.277099609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (log (/ 1.0 (+ 1.0 (* u -4.0)))) 0.0) (/ 1.0 (/ 1.0 (/ (* (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0) (+ 1.0 (- 0.0 (/ (/ (/ 1.0 (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0)) (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0)) (/ 1.0 (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0)))))) 2.0))) (log (/ 1.0 (+ 1.0 (* u -4.0))))))",
    "output_parens": 37,
    "avg_bits_err_input": 12.431461885444705,
    "avg_bits_err_output": 12.492351096183572,
    "avg_bits_err_improve": -0.06088921073886766,
    "time": 27773.807373046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* (exp (/ (/ r s) -3.0)) (/ 0.125 r)) (* s PI)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.14141178160890722,
    "avg_bits_err_output": 0.14348282568055862,
    "avg_bits_err_improve": -0.002071044071651401,
    "time": 24515.5390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n0_i (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) (* (sin (* u normAngle)) (/ n1_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.884920688474437,
    "avg_bits_err_output": 0.7818592896365315,
    "avg_bits_err_improve": 0.10306139883790544,
    "time": 23364.476318359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (+ c (/ (* (exp (* cosTheta (- cosTheta))) (sqrt (- 1.0 (+ cosTheta cosTheta)))) (* cosTheta (sqrt PI)))) -1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7058440506065694,
    "avg_bits_err_output": 0.4808484839139261,
    "avg_bits_err_improve": 0.2249955666926433,
    "time": 20667.911865234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (- (* (- (* 2.0 PI) -1.0) u2) (* u2 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.577721959130951,
    "avg_bits_err_output": 13.581940861755234,
    "avg_bits_err_improve": -0.0042189026242827055,
    "time": 24613.043701171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (+ (log (- 1.0 u1)) -1.0) 0.0) (* (* (log (- 1.0 u1)) (- 1.0 (log (- 1.0 u1)))) (/ -1.0 (+ (log (- 1.0 u1)) -1.0))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 24,
    "avg_bits_err_input": 13.624678750244207,
    "avg_bits_err_output": 13.629883713679147,
    "avg_bits_err_improve": -0.005204963434939813,
    "time": 21523.902099609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* alpha (if (!= (* alpha (log (- 1.0 u0))) 0.0) (/ 1.0 (/ 1.0 (* (- alpha) (log (- 1.0 u0))))) (* (- alpha) (log (- 1.0 u0))))) (* (fma (- alpha) alpha (* alpha alpha)) (log (- 1.0 u0))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.950693271702217,
    "avg_bits_err_output": 13.956772340403699,
    "avg_bits_err_improve": -0.00607906870148156,
    "time": 18046.628173828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (/ (+ (log (- 1.0 u0)) (log (- 1.0 u0))) (+ (/ (/ cos2phi alphax) alphax) (/ sin2phi (* alphay alphay)))) -2.0)",
    "output_parens": 12,
    "avg_bits_err_input": 12.67562021340418,
    "avg_bits_err_output": 12.677519783451064,
    "avg_bits_err_improve": -0.0018995700468842358,
    "time": 17281.177734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -1.2e-105) (- (* PI l) (+ (/ (tan (* PI l)) (* (+ F F) (+ F F))) (/ (+ (tan (* PI l)) (* (tan (* PI l)) 2.0)) (* (+ F F) (+ F F))))) (if (<= F -1.5e-126) (- (* PI l) (* (/ 1.0 (* (* F F) (* F (log1p (expm1 (/ F (/ F (/ 1.0 F)))))))) (tan (* PI l)))) (if (<= F -2.2e-173) (- (* PI l) (/ (* (tan (* PI l)) (/ 2.0 F)) (+ F F))) (if (<= F 9.2e-163) (- (* PI l) (/ (/ (/ (tan (* PI l)) (* F (/ F (/ F (/ 1.0 F))))) F) F)) (- (* PI l) (if (!= (/ (tan (* PI l)) (* F F)) 0.0) (/ 1.0 (* F (/ F (tan (* PI l))))) (/ (tan (* PI l)) (* F F))))))))",
    "output_parens": 77,
    "avg_bits_err_input": 16.631047126414845,
    "avg_bits_err_output": 8.755680805981852,
    "avg_bits_err_improve": 7.875366320432994,
    "time": 24813.492919921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21008496250072115,
    "avg_bits_err_output": 0.1472712406251803,
    "avg_bits_err_improve": 0.06281372187554085,
    "time": 16146.735107421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.269348627273855,
    "avg_bits_err_output": 10.150257486263355,
    "avg_bits_err_improve": 3.1190911410105002,
    "time": 21995.854736328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (fma (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 1.0 (* (exp (* PI (/ f -4.0))) (/ (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (/ PI -4.0))",
    "output_parens": 50,
    "avg_bits_err_input": 61.37488063878209,
    "avg_bits_err_output": 61.3848613388651,
    "avg_bits_err_improve": -0.00998070008301255,
    "time": 68399.97241210938,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.048819249214226,
    "avg_bits_err_output": 34.4027573751865,
    "avg_bits_err_improve": 8.646061874027723,
    "time": 23251.0869140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9409121748217673,
    "avg_bits_err_output": 3.9409121748217673,
    "avg_bits_err_improve": 0,
    "time": 27510.10302734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (- (sqrt (- (* (pow (* 2.0 (/ l Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)) -1.0) 1.0)) 0.5)))",
    "output_parens": 17,
    "avg_bits_err_input": 1.1116693791695658,
    "avg_bits_err_output": 1.1086300828701168,
    "avg_bits_err_improve": 0.0030392962994489903,
    "time": 15749.81298828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 10.46950615802758,
    "avg_bits_err_improve": -0.0013952435261099794,
    "time": 9877.65478515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -1e-78) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (if (<= U 1.5e-68) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om)))))))) (sqrt (* (* n U) (* -2.0 (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 46,
    "avg_bits_err_input": 34.93906984707936,
    "avg_bits_err_output": 30.713863953691803,
    "avg_bits_err_improve": 4.225205893387557,
    "time": 31102.836181640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (pow (/ k t) 2.0) (/ (pow t 3.0) l))) (* (/ (sin k) l) (tan k)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.464270556938324,
    "avg_bits_err_output": 36.114999563807494,
    "avg_bits_err_improve": 11.34927099313083,
    "time": 44884.537109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (tan k) l) (* (* (sin k) (/ (pow t 3.0) l)) (- (pow (/ k t) 2.0) -2.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.09885611619477,
    "avg_bits_err_output": 27.271973879708167,
    "avg_bits_err_improve": 4.8268822364866,
    "time": 18750.838623046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (+ (/ (* a2 a2) (sqrt 2.0)) (* a1 (+ (/ (+ a1 (+ a1 a1)) (* 2.0 (* 2.0 (sqrt 2.0)))) (/ a1 (* 2.0 (* 2.0 (sqrt 2.0))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.5102094015860297,
    "avg_bits_err_output": 0.46284831095796414,
    "avg_bits_err_improve": 0.04736109062806554,
    "time": 22750.430419921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (if (!= (* PI n) 0.0) (/ (- (* n (* PI PI))) (* (- n) (/ PI n))) (* PI n))) (fma k -0.5 0.5)) (sqrt k))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5278220424144104,
    "avg_bits_err_output": 0.5366299626113868,
    "avg_bits_err_improve": -0.008807920196976404,
    "time": 20805.67626953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (* (- (exp l) (exp (- l))) (* J (cos (/ K 2.0)))) (* (cos (/ K 2.0)) (fma (- (exp (- l))) J (* (exp (- l)) J)))) U)",
    "output_parens": 20,
    "avg_bits_err_input": 17.524502448964775,
    "avg_bits_err_output": 17.517466949184467,
    "avg_bits_err_improve": 0.00703549978030793,
    "time": 22683.130859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K (+ m n)) 0.0) (/ 1.0 (/ 1.0 (* K (+ m n)))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.238814040605956,
    "avg_bits_err_output": 15.240959010720022,
    "avg_bits_err_improve": -0.00214497011406678,
    "time": 8320.229248046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* -2.0 J) (* (cos (/ K 2.0)) (sqrt (+ 1.0 (pow (/ (/ U (* 2.0 J)) (cos (/ K 2.0))) 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.24563684218813,
    "avg_bits_err_output": 18.25226184218813,
    "avg_bits_err_improve": -0.006624999999999659,
    "time": 21237.745849609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (/ (* D M) (* 2.0 d)) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.99973424969177,
    "avg_bits_err_output": 10.824865913835074,
    "avg_bits_err_improve": 3.1748683358566954,
    "time": 15186.450927734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* c0 (sqrt (/ A (* V l)))) (- INFINITY)) (* c0 (sqrt (* (/ 2.0 (* l (/ 2.0 l))) (/ (/ A l) V)))) (if (<= (* c0 (sqrt (/ A (* V l)))) -2e-245) (* c0 (sqrt (/ A (* V l)))) (if (<= (* c0 (sqrt (/ A (* V l)))) 0.0) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l)))) (if (<= (* c0 (sqrt (/ A (* V l)))) 5e+133) (* c0 (sqrt (if (!= (/ A (* l V)) 0.0) (/ 1.0 (/ 1.0 (/ A (* l V)))) (/ A (* l V))))) (* c0 (sqrt (+ (/ (/ A (+ l l)) (+ V V)) (/ (+ (/ A l) (/ A (+ l l))) (+ V V)))))))))",
    "output_parens": 68,
    "avg_bits_err_input": 19.127674924208797,
    "avg_bits_err_output": 15.292943076844619,
    "avg_bits_err_improve": 3.8347318473641785,
    "time": 17980.81298828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* D D) 1e-278) (if (!= (* (/ c0 (* w 2.0)) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))) 0.0) (/ (* (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))) (* (/ c0 (* w 2.0)) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))) (* (/ c0 (* w 2.0)) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))) (if (<= (* D D) 1e+85) (+ (* (* (/ (/ d h) w) (* c0 (/ d (* D D)))) (/ (/ c0 2.0) w)) (* (sqrt (* (fma (/ (/ d h) w) (* c0 (/ d (* D D))) M) (- (* (/ (/ d h) w) (* c0 (/ d (* D D)))) M))) (/ (/ c0 2.0) w))) (if (<= (* D D) 1e+296) (if (!= (* (/ c0 (* w 2.0)) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))) 0.0) (/ (* (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))) (* (/ c0 (* w 2.0)) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))) (* (/ c0 (* w 2.0)) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M)))))) (/ (/ (* c0 (fma c0 (* d (/ d (* w (* h (* D D))))) (sqrt (* (fma c0 (* d (/ d (* w (* h (* D D))))) M) (fma d (* c0 (/ d (* w (* h (* D D))))) (- M)))))) w) 2.0))))",
    "output_parens": 319,
    "avg_bits_err_input": 59.578335426410895,
    "avg_bits_err_output": 53.26519597591675,
    "avg_bits_err_improve": 6.313139450494148,
    "time": 49670.050537109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= M -2e+97) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l))))) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (* h (pow (/ d h) 0.5)) (* (pow (* D (/ (/ M d) 2.0)) 2.0) (* 0.5 (pow (/ d l) 0.5)))) l)))",
    "output_parens": 35,
    "avg_bits_err_input": 26.63086244926833,
    "avg_bits_err_output": 24.965557485037582,
    "avg_bits_err_improve": 1.6653049642307494,
    "time": 41936.197021484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (log1p (expm1 (/ 0.5 (hypot 1.0 x)))))) -1.0)))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 32,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.53070234650946,
    "avg_bits_err_improve": 0.479122692684987,
    "time": 20185.761962890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9824693609377705,
    "avg_bits_err_output": 0.010698120312590145,
    "avg_bits_err_improve": 0.9717712406251804,
    "time": 5639.003662109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (- (* (* v v) 5.0) 1.0) PI) (* (sqrt (fma v (* v -6.0) 2.0)) (* t (fma v v -1.0)))) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.450863597056105,
    "avg_bits_err_output": 0.2974746675082187,
    "avg_bits_err_improve": 0.1533889295478863,
    "time": 17572.022705078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (- (sqrt (+ 1.0 (* (* v v) -3.0))) (* (* v v) (sqrt (+ 1.0 (* (* v v) -3.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.013219360937770434,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.002844360937770433,
    "time": 9085.18115234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5547808128388627,
    "avg_bits_err_output": 0.5547808128388627,
    "avg_bits_err_improve": 0,
    "time": 8860.82275390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.044204896471663,
    "avg_bits_err_output": 2.0353086558464826,
    "avg_bits_err_improve": 0.00889624062518024,
    "time": 14044.79248046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ mu (+ Vef EDonor)) Ec) KbT)))) (/ NaChar (- (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01445373388755319,
    "avg_bits_err_output": 0.01445373388755319,
    "avg_bits_err_improve": 0,
    "time": 7864.154296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (pow (fma a a (* b b)) 2.0) (fma b (* b 4.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1838846127163147,
    "avg_bits_err_output": 0.18309924843993386,
    "avg_bits_err_improve": 0.0007853642763808455,
    "time": 13355.415283203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18600154215544593,
    "avg_bits_err_output": 0.18600154215544593,
    "avg_bits_err_improve": 0,
    "time": 4671.958740234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1849129259339448,
    "avg_bits_err_output": 0.1849129259339448,
    "avg_bits_err_improve": 0,
    "time": 22254.71728515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.183217069403334,
    "avg_bits_err_output": 13.187257511568673,
    "avg_bits_err_improve": -0.004040442165338831,
    "time": 16862.972412109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.80101797391755,
    "avg_bits_err_output": 0.065375,
    "avg_bits_err_improve": 40.73564297391755,
    "time": 5833.476318359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(if (<= x -2.15e-8) (if (!= (/ x (- (tan x) x)) 0.0) (/ (/ (fma (/ x (- (tan x) x)) x (* (/ x (- x (tan x))) (sin x))) (- (- (tan x) x))) (/ x (- (tan x) x))) (/ (- x (sin x)) (- x (tan x)))) (if (<= x 1e-13) (if (!= (- (/ x (- x (tan x)))) 0.0) 0.0 (/ (- x (sin x)) (- x (tan x)))) (if (!= (/ x (- (tan x) x)) 0.0) (/ (/ (- (* x (/ x (- (tan x) x))) (* (sin x) (/ x (- (tan x) x)))) (- (- (tan x) x))) (/ x (- (tan x) x))) (/ (- x (sin x)) (- x (tan x))))))",
    "output_parens": 70,
    "avg_bits_err_input": 31.001298892878165,
    "avg_bits_err_output": 30.117499147400462,
    "avg_bits_err_improve": 0.8837997454777025,
    "time": 27008.008544921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 -5.6e+153) (/ (if (!= (- b_2) 0.0) (- (/ 2.0 (/ -2.0 b_2)) 0.0) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a) (if (<= b_2 1.1e+101) (/ (- (sqrt (if (!= (- (* b_2 b_2) (* a c)) 0.0) (/ 1.0 (/ 1.0 (- (* b_2 b_2) (* a c)))) (- (* b_2 b_2) (* a c)))) b_2) a) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a)))",
    "output_parens": 41,
    "avg_bits_err_input": 33.59610348022696,
    "avg_bits_err_output": 28.090729928502164,
    "avg_bits_err_improve": 5.505373551724794,
    "time": 15087.87451171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (if (!= (- (* b_2 b_2) (* a c)) 0.0) (/ 1.0 (/ 1.0 (- (* b_2 b_2) (* a c)))) (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.083170787186184,
    "avg_bits_err_output": 34.34027214828005,
    "avg_bits_err_improve": -0.2571013610938664,
    "time": 16059.823974609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(if (<= x -5.0) (/ (fma (- x) (/ (/ (cos x) x) x) (/ 1.0 x)) x) (if (<= x 0.0085) (+ (- (/ 1.0 (* x x)) (+ 1.0 (/ (cos x) (* x x)))) 1.0) (/ (/ (- 1.0 (cos x)) x) x)))",
    "output_parens": 23,
    "avg_bits_err_input": 31.4356699051609,
    "avg_bits_err_output": 28.779929139730502,
    "avg_bits_err_improve": 2.655740765430398,
    "time": 17395.599609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))) 0.0) (/ 1.0 (/ 1.0 (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 22,
    "avg_bits_err_input": 32.65638854650896,
    "avg_bits_err_output": 32.656782720125186,
    "avg_bits_err_improve": -0.0003941736162289544,
    "time": 19606.894775390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (fma (log1p N) (- (exp (log1p (/ (log1p N) (+ (log1p N) (log N))))) 1.0) (* (- (log N)) (/ (log N) (+ (log1p N) (log N))))) (- (log1p N) (log N)))",
    "output_parens": 27,
    "avg_bits_err_input": 29.519028777784158,
    "avg_bits_err_output": 29.551288514785252,
    "avg_bits_err_improve": -0.032259737001094635,
    "time": 12483.37353515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (+ -1.0 (* 2.0 (/ x (+ 1.0 x)))) (+ x x)) (/ -0.5 x))",
    "output_parens": 8,
    "avg_bits_err_input": 14.775579121337277,
    "avg_bits_err_output": 14.821231218524398,
    "avg_bits_err_improve": -0.045652097187121043,
    "time": 14709.44580078125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (cos (+ x eps)) 0.0) (- (* (/ (cos (+ x eps)) (- (cos (+ x eps)))) (cos x)) (- (exp (log1p (- (cos (+ x eps))))) 1.0)) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 23,
    "avg_bits_err_input": 39.53444158006489,
    "avg_bits_err_output": 39.52751769905288,
    "avg_bits_err_improve": 0.0069238810120140215,
    "time": 17702.35009765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (+ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (fma (cbrt x) (cbrt x) 1.0)) 1.0) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 29.87015529724748,
    "avg_bits_err_output": 29.694580426945887,
    "avg_bits_err_improve": 0.1755748703015918,
    "time": 11150.673828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.325512253725027,
    "avg_bits_err_output": 30.325512253725027,
    "avg_bits_err_improve": 0,
    "time": 22151.122802734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.76671665607642,
    "avg_bits_err_output": 33.76671665607642,
    "avg_bits_err_improve": 0,
    "time": 21094.833740234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (if (!= (- (* b b) (* (* a c) -4.0)) 0.0) (* (fma b b (* c (* a 4.0))) (/ (fma b b (* (* a c) -4.0)) (- (* b b) (* (* a c) -4.0)))) (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 33.90217231269888,
    "avg_bits_err_output": 33.90382067531772,
    "avg_bits_err_improve": -0.0016483626188374956,
    "time": 22895.590576171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (fma (/ -1.0 (log1p x)) (+ 1.0 (log (- 1.0 x))) (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ (if (!= (exp (log1p (log (- 1.0 x)))) 0.0) (/ (- (* (exp (log1p (log (- 1.0 x)))) (exp (log1p (log (- 1.0 x))))) (* (exp (log1p (log (- 1.0 x)))) 1.0)) (exp (log1p (log (- 1.0 x))))) (log (- 1.0 x))) (log1p x)))",
    "output_parens": 42,
    "avg_bits_err_input": 61.44332515996419,
    "avg_bits_err_output": 59.457595265174284,
    "avg_bits_err_improve": 1.9857298947899054,
    "time": 23910.70703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.009547988953926,
    "avg_bits_err_output": 44.24174513374905,
    "avg_bits_err_improve": 18.767802855204877,
    "time": 11504.170654296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (+ (/ (- eps -1.0) (- eps -1.0)) (- (/ (+ eps eps) (- eps -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.534877072668486,
    "avg_bits_err_output": 58.50491709642635,
    "avg_bits_err_improve": 0.02995997624213942,
    "time": 16553.130126953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (!= (+ (/ 1.0 (tan x)) (+ 2.0 (/ -1.0 x))) 0.0) (/ (- 1.0 (* (+ 1.0 (if (!= (+ (/ 1.0 (tan x)) (/ 1.0 x)) 0.0) (/ (- (/ 1.0 (* (tan x) (tan x))) (/ (/ 1.0 x) x)) (+ (/ 1.0 (tan x)) (/ 1.0 x))) (+ (/ 1.0 (tan x)) (/ -1.0 x)))) (+ 1.0 (+ (/ 1.0 (tan x)) (/ -1.0 x))))) (+ (/ 1.0 (tan x)) (+ 2.0 (/ -1.0 x)))) (+ (/ 1.0 x) (/ -1.0 (tan x))))",
    "output_parens": 47,
    "avg_bits_err_input": 59.796361490079846,
    "avg_bits_err_output": 59.75540620494741,
    "avg_bits_err_improve": 0.04095528513243352,
    "time": 31520.735107421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(+ (/ eps (expm1 (* eps b))) (* (/ eps (expm1 (* eps b))) (+ (/ (expm1 (* eps (+ a b))) (expm1 (* eps a))) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 60.24005956845239,
    "avg_bits_err_output": 29.066165140846966,
    "avg_bits_err_improve": 31.173894427605422,
    "time": 26658.13134765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.20429917238173,
    "avg_bits_err_output": 0.5166462406251803,
    "avg_bits_err_improve": 40.68765293175655,
    "time": 4264.679443359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.54128667628145,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.54066167628145,
    "time": 2779.28076171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.21804364908251,
    "avg_bits_err_output": 0.017365861892522247,
    "avg_bits_err_improve": 29.20067778718999,
    "time": 3216.853515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(if (!= (- (exp x) (+ (exp (- x)) 2.0)) 0.0) (* (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (* (exp x) (- (exp (- x)) 2.0))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))) (/ (if (!= (- -2.0 (- (exp x) (exp (- x)))) 0.0) (/ (- 4.0 (* (- (exp x) (exp (- x))) (- (exp x) (exp (- x))))) (- -2.0 (- (exp x) (exp (- x))))) (+ (- (exp x) (exp (- x))) -2.0)) (+ (exp (- x)) (- 2.0 (exp x))))) (+ (- (exp x) 2.0) (exp (- x))))",
    "output_parens": 67,
    "avg_bits_err_input": 29.494713068448025,
    "avg_bits_err_output": 29.01714258430553,
    "avg_bits_err_improve": 0.47757048414249326,
    "time": 19232.53759765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (if (!= (/ 1.0 (* (+ x -1.0) (+ x -1.0))) 0.0) (/ (fma (/ 1.0 (* (+ x -1.0) (+ x -1.0))) (/ 1.0 (* (+ x -1.0) (+ x -1.0))) (* (/ 1.0 (* (+ x -1.0) (+ x -1.0))) (/ (- (/ 2.0 x) (/ 1.0 (+ 1.0 x))) (- 1.0 x)))) (/ 1.0 (* (+ x -1.0) (+ x -1.0)))) (/ (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))) (+ x -1.0))) (/ 1.0 (+ x -1.0))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 54,
    "avg_bits_err_input": 10.551911233420748,
    "avg_bits_err_output": 10.541848163970185,
    "avg_bits_err_improve": 0.010063069450563233,
    "time": 29440.822509765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (+ (- (tan (+ x eps)) (tan x)) (/ (fma (- (tan x)) (tan (+ x eps)) (* (tan (+ x eps)) (tan x))) (tan (+ x eps)))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 25,
    "avg_bits_err_input": 36.82284035546564,
    "avg_bits_err_output": 36.9110361908999,
    "avg_bits_err_improve": -0.0881958354342629,
    "time": 17112.696044921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (if (!= (sqrt (+ x 1.0)) 0.0) (/ (expm1 (log1p (* (sqrt (+ x 1.0)) (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))))) (sqrt (+ x 1.0))) (- (+ (sqrt x) 1.0) (sqrt (+ x 1.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 30.07898519023648,
    "avg_bits_err_output": 29.30189204251101,
    "avg_bits_err_improve": 0.7770931477254699,
    "time": 13289.888916015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (+ (+ 1.0 (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps)))) -1.0)) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 20,
    "avg_bits_err_input": 36.994920403285256,
    "avg_bits_err_output": 37.00719304330427,
    "avg_bits_err_improve": -0.012272640019013181,
    "time": 17025.02392578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (+ (/ 1.0 (sqrt (+ 1.0 x))) (/ -1.0 (sqrt x))) (* (sqrt (+ 1.0 x)) (/ -1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 19.89772360002084,
    "avg_bits_err_output": 19.89761895103454,
    "avg_bits_err_improve": 0.00010464898629791719,
    "time": 15122.2802734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (atan (+ N 1.0)) (log1p (expm1 (+ -1.0 (atan N))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.240620254415086,
    "avg_bits_err_output": 15.264030343515447,
    "avg_bits_err_improve": -0.02341008910036102,
    "time": 9649.5,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.45688257295531,
    "avg_bits_err_output": 29.45688257295531,
    "avg_bits_err_improve": 0,
    "time": 38242.181396484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07492952695107366,
    "avg_bits_err_output": 0.08042952695107367,
    "avg_bits_err_improve": -0.005500000000000005,
    "time": 12014.93505859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (- (* b a)) (fma b (+ a a) (- (* b a))))",
    "output_parens": 7,
    "avg_bits_err_input": 16.207636134846265,
    "avg_bits_err_output": 0.177625,
    "avg_bits_err_improve": 16.030011134846266,
    "time": 12916.018310546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (/ 1.0 (* PI angle))) (* PI (/ angle 180.0))))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.41193543653165,
    "avg_bits_err_output": 20.45819507514755,
    "avg_bits_err_improve": -0.046259638615900656,
    "time": 25668.008544921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) (fma (- (+ (pow a 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (+ (pow a 2.0) (pow a 2.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 30.96692917185439,
    "avg_bits_err_output": 30.980025602295342,
    "avg_bits_err_improve": -0.0130964304409531,
    "time": 31525.533447265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.225061056929945,
    "avg_bits_err_output": 20.189419431285096,
    "avg_bits_err_improve": 0.03564162564484974,
    "time": 32271.9150390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17904492500144228,
    "avg_bits_err_output": 0.17904492500144228,
    "avg_bits_err_improve": 0,
    "time": 16518.488525390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.324533471101042,
    "avg_bits_err_output": 0.3226520587873961,
    "avg_bits_err_improve": 0.0018814123136459138,
    "time": 17600.733642578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ e (fma e (cos v) 1.0)) (sin v))",
    "output_parens": 5,
    "avg_bits_err_input": 0.13295996250072117,
    "avg_bits_err_output": 0.13309436093777044,
    "avg_bits_err_improve": -0.00013439843704926568,
    "time": 15738.0068359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos (- lambda1 lambda2)) (cos phi1)) (cos phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.953097082217212,
    "avg_bits_err_output": 16.948844070425853,
    "avg_bits_err_improve": 0.004253011791359285,
    "time": 31642.099853515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 51000000000.0) (/ (if (!= (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) 0.0) (/ (fma (sqrt (fma b b (* a (* c -4.0)))) (sqrt (fma b b (* a (* c -4.0)))) (- (* b b))) (+ b (sqrt (fma b b (* a (* c -4.0)))))) (- (sqrt (fma b b (* (* a c) -4.0))) b)) (* a 2.0)) (+ (/ -1.0 (* a 2.0)) (+ (/ (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) (* a 2.0)) (/ b (* a -2.0)))))",
    "output_parens": 47,
    "avg_bits_err_input": 52.821499066727064,
    "avg_bits_err_output": 50.720558619833156,
    "avg_bits_err_improve": 2.100940446893908,
    "time": 24783.139404296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (/ (fma (sqrt (fma -4.0 (* a c) (* b b))) (sqrt (fma -4.0 (* a c) (* b b))) (- (* b b))) (+ b (sqrt (fma -4.0 (* a c) (* b b))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 28.60818091170491,
    "avg_bits_err_output": 28.022274281893576,
    "avg_bits_err_improve": 0.5859066298113333,
    "time": 28974.091552734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -5e-16) (/ (if (!= b 0.0) (/ (* b (- (sqrt (fma b b (* a (* c -4.0)))) b)) b) (- (sqrt (fma b b (* a (* c -4.0)))) b)) (* a 2.0)) (- (- (/ (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0) (* a 2.0)) (/ b (* a 2.0))) (/ 0.5 a)))",
    "output_parens": 39,
    "avg_bits_err_input": 43.89645211831586,
    "avg_bits_err_output": 42.86744961094676,
    "avg_bits_err_improve": 1.0290025073690998,
    "time": 29240.576171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.76344596353321,
    "avg_bits_err_output": 33.76344596353321,
    "avg_bits_err_improve": 0,
    "time": 17479.7001953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8691847769019289,
    "avg_bits_err_output": 0.8691847769019289,
    "avg_bits_err_improve": 0,
    "time": 23903.04541015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (- -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))))",
    "output_parens": 7,
    "avg_bits_err_input": 29.46947039949891,
    "avg_bits_err_output": 29.47160972539062,
    "avg_bits_err_improve": -0.0021393258917115077,
    "time": 17834.6259765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(+ (+ (- (/ (+ (exp x) (/ (exp (- x)) -2.0)) (+ (exp x) (exp (- x)))) (/ (exp (- x)) (* (+ (exp x) (exp (- x))) 8.0))) (- (/ (exp (- x)) (* (+ (exp x) (exp (- x))) 8.0)))) (- (/ (/ (exp (- x)) 4.0) (+ (exp x) (exp (- x))))))",
    "output_parens": 39,
    "avg_bits_err_input": 58.01768685983989,
    "avg_bits_err_output": 58.03141808321835,
    "avg_bits_err_improve": -0.013731223378457003,
    "time": 19165.93408203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.026838844259885,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 58.018463844259884,
    "time": 10999.546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008813721875540867,
    "avg_bits_err_output": 0.008813721875540867,
    "avg_bits_err_improve": 0,
    "time": 2225.727294921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.345,
    "avg_bits_err_output": 32.345,
    "avg_bits_err_improve": 0,
    "time": 4339.31298828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (if (!= (/ x (- 1.0 x)) 0.0) (/ (if (!= (* (/ x (- 1.0 x)) (/ x (+ x -1.0))) 0.0) (- (/ 1.0 (/ -1.0 (/ (/ (* x x) (- 1.0 x)) (+ x -1.0)))) (* (* (/ x (+ x -1.0)) (/ x (* (- 1.0 x) (- 1.0 x)))) (/ x (/ (* x x) (- 1.0 x))))) (/ (/ (fma x x x) (- 1.0 x)) (- 1.0 x))) (/ x (- 1.0 x))) (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 44,
    "avg_bits_err_input": 58.52256983069233,
    "avg_bits_err_output": 58.547261745502134,
    "avg_bits_err_improve": -0.024691914809800153,
    "time": 22484.166748046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (- (+ (sqrt (- 1.0 (* x x))) 2.0) 1.0) x))",
    "output_parens": 7,
    "avg_bits_err_input": 0.019625,
    "avg_bits_err_output": 0.01975,
    "avg_bits_err_improve": -0.0001250000000000001,
    "time": 3878.0185546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ eh (* ew (tan t))))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.131125,
    "avg_bits_err_output": 0.131,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 26254.286865234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13334436093777044,
    "avg_bits_err_output": 0.13269812031259015,
    "avg_bits_err_improve": 0.0006462406251802888,
    "time": 23677.62744140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (cos (/ (+ phi1 phi2) 2.0)) (+ lambda2 (- lambda1 (+ lambda2 lambda2)))) (- phi1 phi2)))",
    "output_parens": 10,
    "avg_bits_err_input": 39.19432324589845,
    "avg_bits_err_output": 3.7212777024848043,
    "avg_bits_err_improve": 35.47304554341365,
    "time": 23298.24072265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.326517097683741,
    "avg_bits_err_output": 14.326517097683741,
    "avg_bits_err_improve": 0,
    "time": 5036.578369140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (fma (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (sin phi1)) (cos delta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1540273748569362,
    "avg_bits_err_output": 0.15076020590998976,
    "avg_bits_err_improve": 0.0032671689469464527,
    "time": 35574.74365234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(fma (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a) (/ (+ b b) (* a -6.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 52.85289051060008,
    "avg_bits_err_output": 51.18630603704656,
    "avg_bits_err_improve": 1.6665844735535202,
    "time": 32975.16552734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (/ (+ (if (!= (- (+ (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b -2.0)) 0.0) (/ (fma b (* b -4.0) (* (+ (sqrt (fma -3.0 (* c a) (* b b))) (sqrt (fma -3.0 (* c a) (* b b)))) (+ (sqrt (fma -3.0 (* c a) (* b b))) (sqrt (fma -3.0 (* c a) (* b b)))))) (- (+ (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b -2.0))) (+ (sqrt (fma c (* a -3.0) (* b b))) (fma b -2.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* (- (sqrt (fma b b (* c (* a -3.0)))) b) 2.0)) 4.0) (* 3.0 a))",
    "output_parens": 66,
    "avg_bits_err_input": 28.721469969936166,
    "avg_bits_err_output": 28.005436703190135,
    "avg_bits_err_improve": 0.716033266746031,
    "time": 34721.034912109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (* b (- b)) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 85,
    "avg_bits_err_input": 43.99996235999059,
    "avg_bits_err_output": 43.00920032801461,
    "avg_bits_err_improve": 0.9907620319759829,
    "time": 31646.62548828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* a 3.0))",
    "output_parens": 7,
    "avg_bits_err_input": 33.8056581876436,
    "avg_bits_err_output": 33.8057151135307,
    "avg_bits_err_improve": -5.6925887101044736e-05,
    "time": 18747.479248046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.121493596458414,
    "avg_bits_err_output": 13.121833804109993,
    "avg_bits_err_improve": -0.00034020765157904975,
    "time": 31824.527099609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.050979948618203,
    "avg_bits_err_output": 0.5593055330150896,
    "avg_bits_err_improve": 28.491674415603114,
    "time": 22106.981201171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 2.0 (/ (+ (+ x x) (+ x (+ x -4.0))) 2.0)) (/ x (+ x 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.018240601562950723,
    "avg_bits_err_improve": -0.006740601562950723,
    "time": 13075.697265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (if (!= (+ (- (/ 1.0 (fma x x -1.0))) (/ -1.0 (* (+ x -1.0) (+ x -1.0)))) 0.0) (/ (fma (/ -1.0 (* (+ x -1.0) (+ x -1.0))) (/ -1.0 (* (+ x -1.0) (+ x -1.0))) (- (/ (/ 1.0 (fma x x -1.0)) (fma x x -1.0)))) (+ (- (/ 1.0 (fma x x -1.0))) (/ -1.0 (* (+ x -1.0) (+ x -1.0))))) (/ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (+ x -1.0))) (/ 1.0 (+ x -1.0))) (/ (- 2.0 (/ 2.0 (/ (+ 1.0 x) (+ x -1.0)))) (- 2.0 (+ x x))))",
    "output_parens": 55,
    "avg_bits_err_input": 14.261181778937402,
    "avg_bits_err_output": 14.191157980097591,
    "avg_bits_err_improve": 0.07002379883981114,
    "time": 23056.551513671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 5e+260) (/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (- C)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C))))) 0.0)",
    "output_parens": 45,
    "avg_bits_err_input": 52.75869241148732,
    "avg_bits_err_output": 51.145888176106205,
    "avg_bits_err_improve": 1.6128042353811125,
    "time": 38907.843994140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 29.234304135622732,
    "avg_bits_err_output": 29.234297385157287,
    "avg_bits_err_improve": 6.75046544529323e-06,
    "time": 24906.3603515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(- (/ (sqrt (* 2.0 (* (* F (+ (pow B 2.0) (* A (* C -4.0)))) (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (+ (pow B 2.0) (* A (* C -4.0)))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.28914102363238,
    "avg_bits_err_output": 51.98973307083937,
    "avg_bits_err_improve": 0.29940795279301113,
    "time": 36801.596923828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.839933858978108,
    "avg_bits_err_output": 15.839933858978108,
    "avg_bits_err_improve": 0,
    "time": 2298.827392578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (/ (* g (+ g (sqrt (fma h (- h) (* g g))))) (- g)) (- (- g) (sqrt (fma h (- h) (* g g))))))))",
    "output_parens": 29,
    "avg_bits_err_input": 36.19173754887036,
    "avg_bits_err_output": 36.1213541349789,
    "avg_bits_err_improve": 0.07038341389145586,
    "time": 13444.990966796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9905926703212454,
    "avg_bits_err_output": 0.9764011281273443,
    "avg_bits_err_improve": 0.014191542193901174,
    "time": 5001.299560546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7236981203125902,
    "avg_bits_err_output": 0.7236981203125902,
    "avg_bits_err_improve": 0,
    "time": 3022.122314453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-303) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+184) (/ (* a1 a2) (* b1 b2)) (* a2 (/ (/ a1 b2) b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.187339252153905,
    "avg_bits_err_output": 3.601363253766862,
    "avg_bits_err_improve": 7.585975998387043,
    "time": 7845.09765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output_parens": 5,
    "avg_bits_err_input": 0.38977469366336176,
    "avg_bits_err_output": 0.38977469366336176,
    "avg_bits_err_improve": 0,
    "time": 10743.904296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (- (- (exp (log (+ (+ x (hypot 1.0 x)) 3.0))) 1.0) 1.0) 1.0)) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.005) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (log (- (- (- (exp (log (+ (+ x (hypot 1.0 x)) 3.0))) 1.0) 1.0) 1.0))))",
    "output_parens": 34,
    "avg_bits_err_input": 53.11471906277841,
    "avg_bits_err_output": 13.27936836426235,
    "avg_bits_err_improve": 39.835350698516066,
    "time": 18881.36328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.696461706896871,
    "avg_bits_err_output": 5.696461706896871,
    "avg_bits_err_improve": 0,
    "time": 11522.06201171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- x (- 2.0 x)) (- (- -2.0 x) x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.019948120312590144,
    "avg_bits_err_improve": -0.007323120312590144,
    "time": 3441.71044921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1199.49658203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= w -1e+149) (- (- (+ 3.0 (/ 2.0 (* r r))) (* (/ (- 0.375 (* v 0.25)) (- 1.0 v)) (* w (* r (* r w))))) 4.5) (if (<= w 2000000000000.0) (- (- (+ 3.0 (/ 2.0 (* r r))) (* (- 0.375 (* v 0.25)) (/ (* r (* w (* w r))) (- 1.0 v)))) 4.5) (- (- (+ 3.0 (/ 2.0 (* r r))) (* (/ (- 0.375 (* v 0.25)) (- 1.0 v)) (* w (* r (* r w))))) 4.5)))",
    "output_parens": 43,
    "avg_bits_err_input": 12.764505436557108,
    "avg_bits_err_output": 0.30548157969317924,
    "avg_bits_err_improve": 12.45902385686393,
    "time": 26411.399169921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma x1 (* x1 -6.0) (/ (+ (* (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (* x1 (- x1 (fma x1 (* x1 3.0) (* 2.0 x2)))) -2.0)) (* (- x1 (fma x1 (* x1 3.0) (* 2.0 x2))) (* x1 (* x1 -4.0)))) (fma x1 x1 1.0)))))) (+ x1 x1)))",
    "output_parens": 48,
    "avg_bits_err_input": 0.5078143109829513,
    "avg_bits_err_output": 0.2582533628598366,
    "avg_bits_err_improve": 0.2495609481231147,
    "time": 66789.220703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.078678852635576,
    "avg_bits_err_output": 1.2665935635899448,
    "avg_bits_err_improve": 16.812085289045633,
    "time": 9451.360595703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.25050960194963134,
    "avg_bits_err_output": 0.25050960194963134,
    "avg_bits_err_improve": 0,
    "time": 8126.0810546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00404024101186092,
    "avg_bits_err_output": 0.00404024101186092,
    "avg_bits_err_improve": 0,
    "time": 2488.889404296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ (- (/ 0.5 a) (/ 0.5 b)) (+ a b)) (/ PI (- b a)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.816422851129083,
    "avg_bits_err_output": 0.2867319562604566,
    "avg_bits_err_improve": 14.529690894868626,
    "time": 15611.6123046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.61187939349448,
    "avg_bits_err_output": 24.897086162926207,
    "avg_bits_err_improve": 4.714793230568272,
    "time": 16274.985595703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- (+ 2.0 (/ (/ -2.0 t) (+ 2.0 (/ 2.0 t)))) (/ (/ 2.0 t) (+ 2.0 (/ 2.0 t))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.018625,
    "avg_bits_err_output": 0.0205,
    "avg_bits_err_improve": -0.0018750000000000017,
    "time": 41231.583984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.023375,
    "avg_bits_err_output": 0.03675,
    "avg_bits_err_improve": -0.013374999999999998,
    "time": 19266.325927734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.049625,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 0.040875,
    "time": 10201.1533203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3294.377197265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3293.512939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2671.219970703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.8048787719210315,
    "avg_bits_err_output": 0.24625,
    "avg_bits_err_improve": 7.558628771921032,
    "time": 16924.689208984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.176543722603144,
    "avg_bits_err_output": 7.176543722603144,
    "avg_bits_err_improve": 0,
    "time": 3109.66845703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.948025801308923,
    "avg_bits_err_output": 15.948025801308923,
    "avg_bits_err_improve": 0,
    "time": 3205.766845703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* x (* x 10.0))) (cos x)) 0.0) (/ 1.0 (/ 1.0 (/ (/ (* (exp (* x (* x 10.0))) (* (exp (* x (* x 10.0))) (cos x))) (cos x)) (/ (if (!= (exp (* x (* x 10.0))) 0.0) (/ 1.0 (/ 1.0 (exp (* x (* x 10.0))))) (exp (* x (* x 10.0)))) (cos x))))) (* (exp (* x (* x 10.0))) (cos x)))",
    "output_parens": 41,
    "avg_bits_err_input": 3.543833777534675,
    "avg_bits_err_output": 3.5923127368866434,
    "avg_bits_err_improve": -0.04847895935196833,
    "time": 34077.928466796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -5e+17) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 5e-7) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 0.010698120312590145,
    "avg_bits_err_improve": 14.908048644845833,
    "time": 9245.5234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.13048641923284,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.13048641923284,
    "time": 4805.639404296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.37399185609116,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.37374185609116,
    "time": 4442.171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.307125,
    "avg_bits_err_improve": 63.692875,
    "time": 24111.22802734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325371826954,
    "avg_bits_err_output": 0.389875,
    "avg_bits_err_improve": 61.45337871826953,
    "time": 8376.797607421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (if (!= (- (* b b) (* (* a c) -4.0)) 0.0) (* (fma b b (* c (* a 4.0))) (/ (fma b b (* (* a c) -4.0)) (- (* b b) (* (* a c) -4.0)))) (fma b b (* (* a c) -4.0))))) (* a 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 33.90217231269888,
    "avg_bits_err_output": 33.90382067531772,
    "avg_bits_err_improve": -0.0016483626188374956,
    "time": 25338.087646484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.76344596353321,
    "avg_bits_err_output": 33.76344596353321,
    "avg_bits_err_improve": 0,
    "time": 18654.87744140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2222.295166015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.674689452994,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 39.665439452994,
    "time": 4646.375732421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(* (- x y) (if (!= (/ (- x y) (- (fma x x (* y y)))) 0.0) (- (/ (/ (* (+ x y) (- x y)) (fma x x (* y y))) (- x y)) 0.0) (/ (+ x y) (fma x x (* y y)))))",
    "output_parens": 22,
    "avg_bits_err_input": 20.329775514485313,
    "avg_bits_err_output": 20.09075945419409,
    "avg_bits_err_improve": 0.2390160602912239,
    "time": 10546.2822265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.665714915995972,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.665714915995972,
    "time": 9774.4677734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(+ (* a (+ b d)) (* a c))",
    "output_parens": 4,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.03825,
    "avg_bits_err_improve": -0.0006250000000000006,
    "time": 4404.917236328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019344360937770436,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 0.008344360937770436,
    "time": 2765.645263671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.015875,
    "time": 4084.220947265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 1998.5986328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ (+ c b) (+ e a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40403101562950744,
    "avg_bits_err_output": 0.2647712406251803,
    "avg_bits_err_improve": 0.13925977500432712,
    "time": 5311.10009765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (exp (log1p (- 1.0 (cos x)))) 0.0) (+ (if (!= (+ (* (cos x) (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0))) (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0))) 0.0) (/ (+ (/ (- 2.0 (cos x)) (+ (* (cos x) -4.0) 8.0)) (* (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0)) (* (* (cos x) (cos x)) (/ (- 2.0 (cos x)) (fma 2.0 (cos x) -4.0))))) (+ (* (cos x) (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0))) (/ (- (cos x) 2.0) (fma 2.0 (cos x) -4.0)))) (- (/ (- 1.0 (cos x)) 2.0) 0.0)) (+ (/ 0.5 (/ 1.0 (- 2.0 (cos x)))) (/ (- 2.0 (cos x)) (* (- 2.0 (cos x)) -2.0)))) (- 1.0 (cos x)))",
    "output_parens": 75,
    "avg_bits_err_input": 30.19763256285712,
    "avg_bits_err_output": 30.206069639569595,
    "avg_bits_err_improve": -0.008437076712475289,
    "time": 22561.667724609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.89990283792306,
    "avg_bits_err_output": 24.89990283792306,
    "avg_bits_err_improve": 0,
    "time": 11123.8310546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (+ 1.0 (expm1 (/ (- x (sin x)) (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 29.992117789079575,
    "avg_bits_err_output": 30.007527497938554,
    "avg_bits_err_improve": -0.015409708858978632,
    "time": 24650.09716796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007337554964767636,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006212554964767636,
    "time": 2168.6201171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3.8e-66) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (/ (* n n) (/ n i)) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.8e+84) (+ (+ (+ -1.0 (/ -100.0 (/ i n))) (* (pow (+ (/ i n) 1.0) n) (/ 100.0 (/ i n)))) 1.0) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (log1p (expm1 (* n (/ n (/ n i))))) (fabs n)) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 71,
    "avg_bits_err_input": 47.798963025806536,
    "avg_bits_err_output": 43.33690935604347,
    "avg_bits_err_improve": 4.4620536697630655,
    "time": 27507.02978515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) -1e-101) (+ (* (/ d (fma d d (* c c))) b) (* a (/ c (+ (* d d) (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 1e+153) (/ (+ (* a c) (* b d)) (fma d d (* c c))) (+ (* (/ d (fma d d (* c c))) b) (* a (/ c (+ (* d d) (* c c)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 26.035564446303326,
    "avg_bits_err_output": 22.763776397833787,
    "avg_bits_err_improve": 3.2717880484695385,
    "time": 11386.520263671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* (/ c (fma d d (* c c))) b) (* a (/ d (+ (* d d) (* c c)))))",
    "output_parens": 10,
    "avg_bits_err_input": 25.95546451676505,
    "avg_bits_err_output": 22.9613900622652,
    "avg_bits_err_improve": 2.9940744544998523,
    "time": 12644.9375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03225,
    "avg_bits_err_output": 0.023324960075102284,
    "avg_bits_err_improve": 0.008925039924897717,
    "time": 6052.473388671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (* (- ux (fma ux maxCos 1.0)) (- (* ux maxCos) ux)) (- (- (fma ux maxCos 1.0) 1.0) ux))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.686136210332535,
    "avg_bits_err_output": 1.642818102946709,
    "avg_bits_err_improve": 12.043318107385826,
    "time": 28017.448974609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* uy (* 2.0 PI))) (sqrt (- (* (- ux (fma ux maxCos 1.0)) (- (* ux maxCos) ux)) (+ -1.0 (- (fma ux maxCos 1.0) ux)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.72487156003154,
    "avg_bits_err_output": 11.38672855976101,
    "avg_bits_err_improve": 2.338143000270529,
    "time": 32322.41943359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.34560481299364165,
    "avg_bits_err_output": 0.33694958173182227,
    "avg_bits_err_improve": 0.008655231261819385,
    "time": 53116.767333984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.2039093460579787,
    "avg_bits_err_output": 0.2039093460579787,
    "avg_bits_err_improve": 0,
    "time": 19797.0556640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (+ (/ u1 (* (- 1.0 u1) 8.0)) (/ (+ (+ u1 u1) (+ u1 (+ u1 u1))) (* 4.0 (- (- 2.0 u1) u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 21,
    "avg_bits_err_input": 0.5239761466028169,
    "avg_bits_err_output": 0.542022567228899,
    "avg_bits_err_improve": -0.018046420626082083,
    "time": 21973.89697265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (if (!= (* 6.28318530718 u2) 0.0) (* (* u2 u2) (/ 6.28318530718 u2)) (* 6.28318530718 u2))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.33648332060704467,
    "avg_bits_err_output": 0.354653192102613,
    "avg_bits_err_improve": -0.018169871495568313,
    "time": 20227.349365234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (+ (- 1.0 (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))) -1.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.33416850618637534,
    "avg_bits_err_output": 0.33622927099250305,
    "avg_bits_err_improve": -0.002060764806127713,
    "time": 40785.896728515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05882812611399042,
    "avg_bits_err_output": 0.05882812611399042,
    "avg_bits_err_improve": 0,
    "time": 17002.904541015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (- (exp (log1p (exp (/ (fabs x) (- s))))) 0.0) (* s (+ (exp (/ (- (fabs x)) s)) 1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.13424615967520595,
    "avg_bits_err_output": 0.12449127217304246,
    "avg_bits_err_improve": 0.009754887502163495,
    "time": 20143.119384765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6724961202122393,
    "avg_bits_err_output": 0.6782623000482958,
    "avg_bits_err_improve": -0.00576617983605654,
    "time": 19135.291259765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (* (- 1.0 u) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15205500933767416,
    "avg_bits_err_output": 0.1454621762088687,
    "avg_bits_err_improve": 0.006592833128805459,
    "time": 15955.24755859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.579439253100349,
    "avg_bits_err_output": 2.579439253100349,
    "avg_bits_err_improve": 0,
    "time": 30366.469970703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* cosTheta_O (* (* (/ cosTheta_i (sinh (/ 1.0 v))) (/ 0.5 v)) (/ 1.0 v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4524569086763729,
    "avg_bits_err_output": 0.34685386039920035,
    "avg_bits_err_improve": 0.10560304827717254,
    "time": 27606.00146484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (/ (- (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) 1.0) v) (+ 0.6931 (expm1 (log1p (log (/ 0.5 v)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.133655879990983,
    "avg_bits_err_output": 0.13317259326131173,
    "avg_bits_err_improve": 0.0004832867296712673,
    "time": 8653.96044921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (- 1.0 (* alpha alpha)) (- PI)) (log (* alpha alpha))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4727386216274613,
    "avg_bits_err_output": 0.5001126076638613,
    "avg_bits_err_improve": -0.027373986036400066,
    "time": 22478.71533203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) s))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3366678960400442,
    "avg_bits_err_output": 1.2507090529585654,
    "avg_bits_err_improve": 0.08595884308147883,
    "time": 24994.4052734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(+ (/ (* (log (/ 1.0 (+ 1.0 (* u -4.0)))) s) 2.0) (/ (* (log (/ (/ 1.0 (log (+ 1.0 (expm1 (* (fma u -4.0 1.0) (fma u -4.0 1.0)))))) (/ 1.0 (fma u -4.0 1.0)))) s) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 12.261449949987062,
    "avg_bits_err_output": 11.523681879983393,
    "avg_bits_err_improve": 0.7377680700036695,
    "time": 21120.07080078125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13820640067753484,
    "avg_bits_err_output": 0.1375623275707575,
    "avg_bits_err_improve": 0.000644073106777332,
    "time": 23468.9501953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (* (- 1.0 u) normAngle)) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8725186000838073,
    "avg_bits_err_output": 0.725537859494969,
    "avg_bits_err_improve": 0.14698074058883837,
    "time": 25184.981689453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (/ (/ (* (sqrt (- (- 1.0 cosTheta) cosTheta)) (exp (* cosTheta (- cosTheta)))) cosTheta) (sqrt PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6713088026669302,
    "avg_bits_err_output": 0.4895557901287045,
    "avg_bits_err_improve": 0.18175301253822568,
    "time": 23243.644287109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(expm1 (log1p (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.367400261435419,
    "avg_bits_err_output": 13.384886864811925,
    "avg_bits_err_improve": -0.017486603376505983,
    "time": 19958.6845703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (if (!= (* 2.0 (* PI u2)) 0.0) (/ 1.0 (/ 1.0 (* 2.0 (expm1 (log1p (* PI u2)))))) (* 2.0 (* PI u2)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.414906258828818,
    "avg_bits_err_output": 13.42354317805527,
    "avg_bits_err_improve": -0.008636919226452378,
    "time": 20933.227783203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (- alpha) (if (!= (* (log (- 1.0 u0)) alpha) 0.0) (* (* alpha (- (log (- 1.0 u0)))) (/ (/ (- (log (- 1.0 u0))) (/ (log (- 1.0 u0)) alpha)) alpha)) (* (log (- 1.0 u0)) alpha)))",
    "output_parens": 23,
    "avg_bits_err_input": 14.056376922310076,
    "avg_bits_err_output": 14.06322156184301,
    "avg_bits_err_improve": -0.006844639532934238,
    "time": 21534.4755859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (if (!= (log (- 1.0 u0)) 0.0) (/ 1.0 (/ 1.0 (log (- 1.0 u0)))) (log (- 1.0 u0)))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.66285528476113,
    "avg_bits_err_output": 12.664190366576092,
    "avg_bits_err_improve": -0.0013350818149611143,
    "time": 20589.636474609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+39) (- (* PI l) (/ 0.0 (* (* F F) 4.0))) (if (<= (* PI l) 50000000.0) (- (* PI l) (/ (* (tan (* PI l)) (/ 1.0 F)) F)) (- (* PI l) (/ 0.0 (* (* F F) 4.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 16.691843987733897,
    "avg_bits_err_output": 8.686961871949148,
    "avg_bits_err_improve": 8.00488211578475,
    "time": 20035.88330078125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21904248125036055,
    "avg_bits_err_output": 0.15432312031259016,
    "avg_bits_err_improve": 0.06471936093777039,
    "time": 15173.197509765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.969781206720246,
    "avg_bits_err_output": 10.784918310963297,
    "avg_bits_err_improve": 3.1848628957569485,
    "time": 22059.7939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (/ (* PI f) 4.0)) (exp (* PI (/ f -4.0)))) (- (expm1 (* PI (/ f 4.0))) (expm1 (* PI (/ f -4.0)))))) (/ PI -4.0))",
    "output_parens": 18,
    "avg_bits_err_input": 61.33326911280274,
    "avg_bits_err_output": 1.798212580993688,
    "avg_bits_err_improve": 59.535056531809055,
    "time": 43321.976318359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.37771968794223,
    "avg_bits_err_output": 33.50065111458902,
    "avg_bits_err_improve": 8.877068573353213,
    "time": 24855.128173828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.860575818610361,
    "avg_bits_err_output": 3.860575818610361,
    "avg_bits_err_improve": 0,
    "time": 25319.87451171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0458010014493448,
    "avg_bits_err_output": 1.0458010014493448,
    "avg_bits_err_improve": 0,
    "time": 9332.857666015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.044448814120882,
    "avg_bits_err_output": 10.044448814120882,
    "avg_bits_err_improve": 0,
    "time": 15088.898193359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -5e-157) (sqrt (if (!= (* (* (- (fma (- U U*) (* n (pow (/ l Om) 2.0)) (* l (* (/ l Om) 2.0))) t) -2.0) (* U n)) 0.0) (/ 1.0 (/ 1.0 (* (* (- (fma (- U U*) (* n (pow (/ l Om) 2.0)) (* l (* (/ l Om) 2.0))) t) -2.0) (* U n)))) (* (* (- (fma (- U U*) (* n (pow (/ l Om) 2.0)) (* l (* (/ l Om) 2.0))) t) -2.0) (* U n)))) (if (<= n 1.1e-82) (sqrt (* U (* (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om))))) (* 2.0 n)))) (sqrt (* (* 2.0 n) (* U (- t (fma (* n (pow (/ l Om) 2.0)) (- U U*) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 72,
    "avg_bits_err_input": 35.1978862865177,
    "avg_bits_err_output": 31.00535086170528,
    "avg_bits_err_improve": 4.192535424812419,
    "time": 33253.187255859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (* (/ (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ (sin k) l)) (/ 1.0 (tan k))) (if (<= t 7e-150) (/ (/ 2.0 (pow (/ k t) 2.0)) (* (- (* (sin k) (/ (+ (/ (pow t 3.0) l) 1.0) l)) (expm1 (log1p (/ (sin k) l)))) (tan k))) (/ (/ 2.0 (/ (sin k) l)) (* (tan k) (/ (* (pow t 3.0) (pow (/ k t) 2.0)) l)))))",
    "output_parens": 44,
    "avg_bits_err_input": 47.38494465601513,
    "avg_bits_err_output": 33.92035613920183,
    "avg_bits_err_improve": 13.4645885168133,
    "time": 45416.908447265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (/ (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l))) l)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.22962081645923,
    "avg_bits_err_output": 27.284025794010276,
    "avg_bits_err_improve": 4.9455950224489555,
    "time": 21238.919189453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (cos th) (+ (* a2 (/ a2 (sqrt 2.0))) (* a1 (/ a1 (sqrt 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5215889125209148,
    "avg_bits_err_output": 0.4700084609550793,
    "avg_bits_err_improve": 0.05158045156583546,
    "time": 20374.727783203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.49177474195505366,
    "avg_bits_err_output": 0.4480052070697034,
    "avg_bits_err_improve": 0.043769534885350236,
    "time": 21346.2294921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (+ (* (exp l) (cos (/ K 2.0))) (* (cos (/ K 2.0)) (- (exp (- l)))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.508431442493627,
    "avg_bits_err_output": 17.511313804501995,
    "avg_bits_err_improve": -0.002882362008367778,
    "time": 24387.14111328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (if (!= (* K n) 0.0) (* (* (* K (+ n m)) (* K (/ n (* K n)))) (* K (/ n (* K n)))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) (* (cos (- (/ (if (!= (* K n) 0.0) (* (+ n m) (* n (* K (/ K (* K n))))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))))",
    "output_parens": 72,
    "avg_bits_err_input": 15.561705301890038,
    "avg_bits_err_output": 6.905139869115345,
    "avg_bits_err_improve": 8.656565432774693,
    "time": 14753.854248046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.464323120312592,
    "avg_bits_err_output": 17.464323120312592,
    "avg_bits_err_improve": 0,
    "time": 28060.83251953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.651517897889446,
    "avg_bits_err_output": 11.15818778159106,
    "avg_bits_err_improve": 3.4933301162983863,
    "time": 18485.732421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1.2e+41) (* c0 (sqrt (* (/ A V) (/ 1.0 l)))) (if (<= (* V l) -2e-120) (if (!= (* (sqrt (/ A (* l V))) c0) 0.0) (/ 1.0 (/ (/ 1.0 (sqrt (/ A (* l V)))) c0)) (* (sqrt (/ A (* l V))) c0)) (if (<= (* V l) 5e-293) (* c0 (sqrt (+ (/ (/ A V) (+ l l)) (/ (/ (- (+ A (+ A (/ (+ A A) 2.0))) A) (+ V V)) (+ l l))))) (if (<= (* V l) 1e+200) (* c0 (sqrt (/ A (* V l)))) (* (sqrt (/ (+ (/ A (+ V V)) (/ (+ (/ A 2.0) A) V)) (+ l l))) c0)))))",
    "output_parens": 62,
    "avg_bits_err_input": 19.103543663613543,
    "avg_bits_err_output": 15.666143562607681,
    "avg_bits_err_improve": 3.4374001010058617,
    "time": 18809.40234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= c0 -3.7e+167) (* c0 (/ (fma c0 (* (/ d (* w h)) (/ d (* D D))) (sqrt (* (fma c0 (* (/ d (* w h)) (/ d (* D D))) M) (fma c0 (* (/ d (* w h)) (/ d (* D D))) (- M))))) (+ w w))) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))))",
    "output_parens": 51,
    "avg_bits_err_input": 59.690435362156144,
    "avg_bits_err_output": 53.159552999370256,
    "avg_bits_err_improve": 6.5308823627858885,
    "time": 44715.04296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l)) h)))",
    "output_parens": 14,
    "avg_bits_err_input": 26.882942619124844,
    "avg_bits_err_output": 25.837610744311807,
    "avg_bits_err_improve": 1.0453318748130371,
    "time": 40901.997314453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (- (/ (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) (+ (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (/ (- 2.0 (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (+ (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 56,
    "avg_bits_err_input": 15.55160651413115,
    "avg_bits_err_output": 15.08340407428584,
    "avg_bits_err_improve": 0.4682024398453102,
    "time": 25645.711669921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9842924812503606,
    "avg_bits_err_output": 0.012573120312590145,
    "avg_bits_err_improve": 0.9717193609377704,
    "time": 3759.121337890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (- (- (- 4.0 (* v (* v 10.0))) (* v (* v 5.0))) (* v (* v 5.0))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))) (* (- 1.0 (* v v)) (+ (+ t t) (+ t t))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.42143915857060477,
    "avg_bits_err_output": 0.15571458871160607,
    "avg_bits_err_improve": 0.2657245698589987,
    "time": 24168.767822265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01252124062518029,
    "avg_bits_err_output": 0.01002124062518029,
    "avg_bits_err_improve": 0.0025000000000000005,
    "time": 6433.21630859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5478636605581666,
    "avg_bits_err_output": 0.5478636605581666,
    "avg_bits_err_improve": 0,
    "time": 9232.380615234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (if (!= (* k (- -10.0 k)) 0.0) (/ 1.0 (/ (/ -1.0 k) (- -10.0 k))) (* k (+ k 10.0))) -1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 1.9274456531526651,
    "avg_bits_err_output": 1.9076674578415176,
    "avg_bits_err_improve": 0.01977819531114755,
    "time": 11617.335693359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- Ec (+ Vef EDonor))) KbT)))) (/ NaChar (+ 1.0 (- (+ 2.0 (expm1 (/ (+ EAccept (- (+ Vef Ev) mu)) KbT))) 1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.02812955818689803,
    "avg_bits_err_output": 0.026160197249127597,
    "avg_bits_err_improve": 0.001969360937770434,
    "time": 8052.09326171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (if (!= (* (* b b) 4.0) 0.0) (* (fma b (* b 4.0) (pow (fma b b (* a a)) 2.0)) (* b (/ b (* b b)))) (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.18284945195251592,
    "avg_bits_err_output": 0.28796760736525884,
    "avg_bits_err_improve": -0.10511815541274291,
    "time": 13980.332763671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.19612962650265922,
    "avg_bits_err_output": 0.19612962650265922,
    "avg_bits_err_improve": 0,
    "time": 4480.65234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1943640478111961,
    "avg_bits_err_output": 0.1943640478111961,
    "avg_bits_err_improve": 0,
    "time": 23405.896728515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.472645032385683,
    "avg_bits_err_output": 13.472645032385683,
    "avg_bits_err_improve": 0,
    "time": 18219.637939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.566345583290996,
    "avg_bits_err_output": 0.015125,
    "avg_bits_err_improve": 40.551220583291,
    "time": 6642.51953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (exp (log1p (/ (if (!= (- (sin x) x) 0.0) (/ 1.0 (/ 1.0 (- x (sin x)))) (- x (sin x))) (- x (tan x))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 31.668470336410316,
    "avg_bits_err_output": 31.676681412177093,
    "avg_bits_err_improve": -0.008211075766777043,
    "time": 23334.563232421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.71794520895431,
    "avg_bits_err_output": 33.71794520895431,
    "avg_bits_err_improve": 0,
    "time": 14975.478759765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(- (/ (sqrt (- (* b_2 b_2) (* a c))) (- a)) (/ b_2 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.97385611769561,
    "avg_bits_err_output": 34.174581096820305,
    "avg_bits_err_improve": -0.20072497912469345,
    "time": 16449.355712890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.376303852537593,
    "avg_bits_err_output": 30.584198881593714,
    "avg_bits_err_improve": 0.7921049709438783,
    "time": 16225.575927734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.469962662104635,
    "avg_bits_err_output": 32.469962662104635,
    "avg_bits_err_improve": 0,
    "time": 24708.061279296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (fma (log1p N) (/ (log1p N) (+ (log N) (log1p N))) (/ (* (log N) (log N)) (- (- (log N)) (log1p N)))) (- (log1p N) (log N)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.552227315224616,
    "avg_bits_err_output": 29.591555258443737,
    "avg_bits_err_improve": -0.0393279432191207,
    "time": 12194.979248046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ (/ (- (/ x (/ (+ 1.0 x) x)) x) x) x) 0.0)",
    "output_parens": 7,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 14.295669130783187,
    "avg_bits_err_improve": 0.25750576504819556,
    "time": 13642.18603515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (+ (+ (cos (+ x eps)) -1.0) 1.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 39.93567122901428,
    "avg_bits_err_output": 39.956231005675846,
    "avg_bits_err_improve": -0.020559776661563944,
    "time": 18868.594970703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt x) -1.0) 0.0) (fma (/ (+ -1.0 (cbrt (+ 1.0 x))) (+ (cbrt x) -1.0)) (+ (cbrt x) -1.0) (/ -1.0 (/ 1.0 (+ (cbrt x) -1.0)))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 21,
    "avg_bits_err_input": 29.896581344258788,
    "avg_bits_err_output": 29.946462088095092,
    "avg_bits_err_improve": -0.049880743836304475,
    "time": 13210.276611328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ -1.0 (* (sin x) -2.0)) (- (* (+ 1.0 (/ (- (cos x)) 0.5)) (/ 0.5 (sin x))) 0.0))",
    "output_parens": 12,
    "avg_bits_err_input": 30.55151258194374,
    "avg_bits_err_output": 30.604746780674493,
    "avg_bits_err_improve": -0.053234198730752524,
    "time": 22289.322509765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.851531813868164,
    "avg_bits_err_output": 33.851531813868164,
    "avg_bits_err_improve": 0,
    "time": 23583.345458984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (- (- (- b) (* (sqrt (+ (* b b) (* a (* c -4.0)))) 2.0)) b) 2.0) (* a 2.0))",
    "output_parens": 12,
    "avg_bits_err_input": 34.081361275863955,
    "avg_bits_err_output": 34.08704650001849,
    "avg_bits_err_improve": -0.005685224154532875,
    "time": 20748.557861328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.06916301485907,
    "avg_bits_err_output": 0.9391977321981589,
    "avg_bits_err_improve": 60.12996528266091,
    "time": 22788.5478515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (log1p n) 0.0) (/ (+ (* (log1p n) (log1p n)) (* (log1p n) (- (+ (* n (log1p n)) -1.0) (* n (log n))))) (log1p n)) (+ (log1p n) (fma n (- (log1p n) (log n)) -1.0)))",
    "output_parens": 23,
    "avg_bits_err_input": 63.0130033641234,
    "avg_bits_err_output": 0.8152567656821182,
    "avg_bits_err_improve": 62.197746598441285,
    "time": 16150.041748046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.599320036676964,
    "avg_bits_err_output": 58.5513491808772,
    "avg_bits_err_improve": 0.047970855799761125,
    "time": 16031.106201171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (+ (- 1.0 (/ (/ x (tan x)) 2.0)) (- (/ (/ x (tan x)) 2.0))) x)",
    "output_parens": 10,
    "avg_bits_err_input": 59.906298302052484,
    "avg_bits_err_output": 59.89684302109844,
    "avg_bits_err_improve": 0.009455280954043133,
    "time": 29588.15673828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (/ (expm1 (* eps (+ a b))) (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.420969460268275,
    "avg_bits_err_output": 29.58466112914307,
    "avg_bits_err_improve": 30.836308331125206,
    "time": 28054.324951171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.9553766315833,
    "avg_bits_err_output": 0.4383231203125902,
    "avg_bits_err_improve": 40.51705351127071,
    "time": 5431.309326171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.792896419761746,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.792396419761744,
    "time": 3790.96484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.531069950251908,
    "avg_bits_err_output": 0.016973793617776685,
    "avg_bits_err_improve": 29.51409615663413,
    "time": 4295.2490234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (- (* (exp x) (exp (- x))) (* (exp x) 2.0))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 23,
    "avg_bits_err_input": 29.62849430006962,
    "avg_bits_err_output": 28.892466076818852,
    "avg_bits_err_improve": 0.7360282232507664,
    "time": 19706.979248046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (* (/ (/ 2.0 (+ 1.0 x)) (/ 4.0 x)) (/ 2.0 x)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 10.130581383432595,
    "avg_bits_err_output": 10.127609560835285,
    "avg_bits_err_improve": 0.002971822597309881,
    "time": 23155.002197265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (log (if (!= (expm1 (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps)))) 0.0) (/ (* (expm1 (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps)))) (exp (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (expm1 (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (exp (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 56,
    "avg_bits_err_input": 37.61544432487748,
    "avg_bits_err_output": 37.63291769420484,
    "avg_bits_err_improve": -0.01747336932736232,
    "time": 17185.2646484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (if (!= (- -1.0 (sqrt x)) 0.0) (/ (* (- -1.0 (sqrt x)) (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x)))) (- -1.0 (sqrt x))) (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x)))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 30.010578261194585,
    "avg_bits_err_output": 29.33744852369373,
    "avg_bits_err_improve": 0.6731297375008545,
    "time": 13794.32568359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (if (!= (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps))) 0.0) (/ (* (sin (+ x eps)) (- (* (sin (+ x eps)) (/ (sin (+ x eps)) (sin (+ x eps)))) (/ (* (sin x) (* (sin x) (/ (sin (+ x eps)) (sin (+ x eps))))) (sin (+ x eps))))) (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps)))) (* (- (sin (+ x eps)) (sin x)) (/ (sin (+ x eps)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 65,
    "avg_bits_err_input": 37.46693857426891,
    "avg_bits_err_output": 37.47818216919845,
    "avg_bits_err_improve": -0.011243594929538858,
    "time": 16258.93408203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (+ -1.0 (if (!= (/ (sqrt x) (sqrt (+ x 1.0))) 0.0) (/ 1.0 (/ 1.0 (/ (sqrt x) (sqrt (+ x 1.0))))) (/ (sqrt x) (sqrt (+ x 1.0))))) (- (sqrt x)))",
    "output_parens": 20,
    "avg_bits_err_input": 19.90763185922271,
    "avg_bits_err_output": 19.906507615676016,
    "avg_bits_err_improve": 0.0011242435466947143,
    "time": 13822.66845703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ N 1.0)) (atan N)) 0.0) (- (* (+ (atan (+ N 1.0)) (atan N)) (/ (atan (+ N 1.0)) (+ (atan (+ N 1.0)) (atan N)))) (/ (* (atan N) (+ (atan (+ N 1.0)) (atan N))) (+ (atan (+ N 1.0)) (atan N)))) (- (atan (+ N 1.0)) (atan N)))",
    "output_parens": 34,
    "avg_bits_err_input": 15.003709080553007,
    "avg_bits_err_output": 15.012329162793055,
    "avg_bits_err_improve": -0.008620082240048177,
    "time": 15569.4912109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (log (+ (exp a) (exp b))) 0.0) (/ 1.0 (/ 1.0 (log (+ (exp a) (exp b))))) (log (+ (exp a) (exp b))))",
    "output_parens": 16,
    "avg_bits_err_input": 29.503171876792933,
    "avg_bits_err_output": 29.5044268097781,
    "avg_bits_err_improve": -0.0012549329851658797,
    "time": 33122.851806640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (- m (* m m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0776488878888441,
    "avg_bits_err_output": 0.07525264726366379,
    "avg_bits_err_improve": 0.0023962406251803042,
    "time": 8389.44775390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(fma (* a b) (* b (* a -2.0)) (* (* b a) (* b a)))",
    "output_parens": 7,
    "avg_bits_err_input": 15.812565061129124,
    "avg_bits_err_output": 0.35077970158025895,
    "avg_bits_err_improve": 15.461785359548866,
    "time": 9546.643310546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (/ (* angle (* PI (* 3.08641975308642e-5 (/ PI 0.005555555555555556)))) PI))) 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 20.608705022628236,
    "avg_bits_err_output": 20.633431425594548,
    "avg_bits_err_improve": -0.024726402966312122,
    "time": 28255.01318359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (sin (* PI (/ angle 180.0))) (+ (+ (pow a 2.0) (pow a 2.0)) (fma (- (pow a 2.0) (pow b 2.0)) -2.0 (- (- (pow a 2.0)) (pow a 2.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 31.438873971055294,
    "avg_bits_err_output": 31.43960240878921,
    "avg_bits_err_improve": -0.0007284377339153991,
    "time": 29192.171142578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (log1p (expm1 (sin (if (!= (* (/ angle 180.0) PI) 0.0) (/ 1.0 (/ 1.0 (* (/ angle 180.0) PI))) (* (/ angle 180.0) PI)))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.29283692702173,
    "avg_bits_err_output": 20.335456029344368,
    "avg_bits_err_improve": -0.04261910232263588,
    "time": 32043.1416015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17735620312590142,
    "avg_bits_err_output": 0.17320996250072113,
    "avg_bits_err_improve": 0.004146240625180292,
    "time": 14620.77783203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31963946681700633,
    "avg_bits_err_output": 0.3180704014170943,
    "avg_bits_err_improve": 0.0015690653999120285,
    "time": 17063.347900390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13694812031259015,
    "avg_bits_err_output": 0.13694812031259015,
    "avg_bits_err_improve": 0,
    "time": 16181.604736328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 12,
    "avg_bits_err_input": 17.270826726077534,
    "avg_bits_err_output": 17.271090909539435,
    "avg_bits_err_improve": -0.0002641834619012684,
    "time": 31573.357421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 4.8e+16) (/ (if (!= (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0))))) (- b)) 0.0) (/ (fma b (- b) (* (sqrt (if (!= (fma b (- b) (* c (* a 4.0))) 0.0) (/ 32.0 (/ 32.0 (fma c (* a -4.0) (* b b)))) (fma c (* a -4.0) (* b b)))) (sqrt (if (!= (fma b (- b) (* c (* a 4.0))) 0.0) (/ 32.0 (/ 32.0 (fma c (* a -4.0) (* b b)))) (fma c (* a -4.0) (* b b)))))) (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0))))) (- b))) (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0))))) b)) (* a 2.0)) (/ (+ (- (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0) b) -1.0) (* a 2.0)))",
    "output_parens": 99,
    "avg_bits_err_input": 52.308047170860114,
    "avg_bits_err_output": 50.25283033905495,
    "avg_bits_err_improve": 2.0552168318051613,
    "time": 37148.108642578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (+ (if (!= (- (* (sqrt (fma c (* a -4.0) (* b b))) (+ (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) 0.0) (/ (* (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))))) (- (* (sqrt (fma c (* a -4.0) (* b b))) (+ (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))))))) (- (* (sqrt (fma c (* a -4.0) (* b b))) (+ (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))))) (if (!= (+ (* b (+ b (sqrt (fma c (* a -4.0) (* b b))))) (* (sqrt (fma c (* a -4.0) (* b b))) (+ b (sqrt (fma c (* a -4.0) (* b b)))))) 0.0) (/ (* (+ (* b (+ b (sqrt (fma c (* a -4.0) (* b b))))) (* (sqrt (fma c (* a -4.0) (* b b))) (+ b (sqrt (fma c (* a -4.0) (* b b)))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (+ (* b (+ b (sqrt (fma c (* a -4.0) (* b b))))) (* (sqrt (fma c (* a -4.0) (* b b))) (+ b (sqrt (fma c (* a -4.0) (* b b))))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (fma (- (fabs (sqrt (fma c (* a -4.0) (* b b))))) (fabs (sqrt (fma c (* a -4.0) (* b b)))) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 217,
    "avg_bits_err_input": 28.219183359608415,
    "avg_bits_err_output": 27.612235502531846,
    "avg_bits_err_improve": 0.6069478570765696,
    "time": 49476.887451171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) 0.0) (/ 2.0 (/ 4.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (* 0.5 (if (!= (/ b a) 0.0) (if (!= (+ (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ 1.0 (/ 1.0 (/ b a)))) 0.0) (/ (fma (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ (sqrt (fma a (* c -4.0) (* b b))) a) (- (/ (/ 1.0 (/ 1.0 (/ b a))) (/ 1.0 (/ b a))))) (+ (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ 1.0 (/ 1.0 (/ b a))))) (- (/ (sqrt (fma a (* c -4.0) (* b b))) a) (/ 1.0 (/ 1.0 (/ b a))))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a))))",
    "output_parens": 75,
    "avg_bits_err_input": 43.44645167037662,
    "avg_bits_err_output": 42.3026455587865,
    "avg_bits_err_improve": 1.1438061115901164,
    "time": 30333.680419921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.861446536139766,
    "avg_bits_err_output": 33.861446536139766,
    "avg_bits_err_improve": 0,
    "time": 19370.3935546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8077925542400564,
    "avg_bits_err_output": 0.807415012635698,
    "avg_bits_err_improve": 0.0003775416043583224,
    "time": 23305.638427734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (+ 1.0 (- (+ -1.0 (expm1 (+ (/ -2.0 (- -1.0 (exp (* -2.0 x)))) -1.0))) -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 29.0979440931814,
    "avg_bits_err_output": 29.10642181573568,
    "avg_bits_err_improve": -0.0084777225542787,
    "time": 22946.2314453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(+ (fma (/ (exp (- x)) (- (+ (exp x) (exp (- x))))) (/ (exp (- x)) (+ (exp x) (exp (- x)))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))) (- (- (/ (exp x) (+ (exp x) (exp (- x)))) (/ (- (exp (- x))) (* (+ (exp x) (exp (- x))) -2.0))) (/ (- (exp (- x))) (* (+ (exp x) (exp (- x))) -2.0))))",
    "output_parens": 58,
    "avg_bits_err_input": 58.04622256576127,
    "avg_bits_err_output": 58.10398712186068,
    "avg_bits_err_improve": -0.05776455609941422,
    "time": 15710.31689453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.06032060631522,
    "avg_bits_err_output": 58.06032060631522,
    "avg_bits_err_improve": 0,
    "time": 6325.6982421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008875,
    "avg_bits_err_output": 0.008875,
    "avg_bits_err_improve": 0,
    "time": 2712.21435546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.873125,
    "avg_bits_err_output": 31.873125,
    "avg_bits_err_improve": 0,
    "time": 3849.88134765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (+ (/ (+ x x) (- 1.0 x)) (- (/ (- 1.0 x) (* (- 1.0 x) (- 1.0 x))) (/ x (- 1.0 x))))))",
    "output_parens": 14,
    "avg_bits_err_input": 58.59448913333511,
    "avg_bits_err_output": 58.5859194460363,
    "avg_bits_err_improve": 0.00856968729880947,
    "time": 17024.06640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.003448120312590144,
    "avg_bits_err_output": 0.0036652410118609203,
    "avg_bits_err_improve": -0.00021712069927077617,
    "time": 2285.604736328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ eh (* ew (tan t)))))) (* (* eh (cos t)) (sin (atan (/ eh (* ew (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12686560156295074,
    "avg_bits_err_output": 0.12459436093777043,
    "avg_bits_err_improve": 0.002271240625180304,
    "time": 31819.260986328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.11644812031259014,
    "avg_bits_err_output": 0.12162316846281312,
    "avg_bits_err_improve": -0.005175048150222988,
    "time": 24870.28662109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.12043562712222,
    "avg_bits_err_output": 3.8016556487787714,
    "avg_bits_err_improve": 35.31877997834345,
    "time": 22554.27099609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.33800257757965,
    "avg_bits_err_output": 14.33800257757965,
    "avg_bits_err_improve": 0,
    "time": 3579.46142578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1580655913209612,
    "avg_bits_err_output": 0.15902119898942887,
    "avg_bits_err_improve": -0.0009556076684676673,
    "time": 35116.77685546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -3.0) (* b b))) 0.6666666666666666 (fma (sqrt (+ (* b b) (* a (* c -3.0)))) -0.3333333333333333 (/ (+ b b) -6.0))) a)",
    "output_parens": 14,
    "avg_bits_err_input": 52.311331709905836,
    "avg_bits_err_output": 50.41604945145242,
    "avg_bits_err_improve": 1.8952822584534132,
    "time": 25102.703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 33,
    "avg_bits_err_input": 28.321092932950116,
    "avg_bits_err_output": 27.72184345234797,
    "avg_bits_err_improve": 0.5992494806021469,
    "time": 31990.36181640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ 0.16666666666666666 a)) 0.0) (/ 1.0 (/ 3.0 (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a))) (+ (if (!= (* b (/ 0.3333333333333333 a)) 0.0) (/ (fma (* (/ b a) -0.3333333333333333) (* (/ b a) -0.3333333333333333) (* (* (/ b a) (/ b a)) -0.1111111111111111)) (* b (/ 0.3333333333333333 a))) (* (/ b a) 0.0)) (fma (/ (sqrt (fma b b (* a (* c -3.0)))) a) 0.3333333333333333 (* (/ b a) -0.3333333333333333))))",
    "output_parens": 44,
    "avg_bits_err_input": 43.46908362541463,
    "avg_bits_err_output": 41.696759674614015,
    "avg_bits_err_improve": 1.7723239508006188,
    "time": 32405.82373046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) a) 3.0)",
    "output_parens": 7,
    "avg_bits_err_input": 33.8970234565059,
    "avg_bits_err_output": 33.90989588753395,
    "avg_bits_err_improve": -0.012872431028050357,
    "time": 18871.28955078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (expm1 (log1p (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.522863158103593,
    "avg_bits_err_output": 13.52858496580029,
    "avg_bits_err_improve": -0.0057218076966965015,
    "time": 30957.623046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (if (!= (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0))) 0.0) (/ (- (* (/ x (+ x 1.0)) (/ x (+ x 1.0))) (/ (+ x -1.0) (+ x -1.0))) (+ (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (- (/ x (+ x 1.0)) (/ (+ x -1.0) (+ x -1.0)))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 33,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 24.700708494003997,
    "avg_bits_err_improve": 4.36445430479889,
    "time": 29924.866455078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (- (/ x (+ x (+ x 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.07612386241940919,
    "avg_bits_err_improve": -0.06274886241940919,
    "time": 2936.38818359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ (fma (/ -1.0 (+ x -1.0)) (/ 1.0 (+ x -1.0)) (* (/ 1.0 (- 1.0 x)) (/ 1.0 (- 1.0 x)))) (/ 1.0 (+ x -1.0))) (- (/ -1.0 (+ x -1.0)) (/ -1.0 (+ 1.0 x))))",
    "output_parens": 19,
    "avg_bits_err_input": 14.859461299622096,
    "avg_bits_err_output": 14.896565527876374,
    "avg_bits_err_improve": -0.03710422825427884,
    "time": 19621.16748046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))))) (- (* A (* C 4.0)) (pow B 2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 51.983211803226446,
    "avg_bits_err_output": 51.66521981611296,
    "avg_bits_err_improve": 0.3179919871134871,
    "time": 40677.71142578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.035061182282806,
    "avg_bits_err_output": 30.035061182282806,
    "avg_bits_err_improve": 0,
    "time": 24586.439453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 2e+182) (/ (sqrt (+ (* (- (pow B 2.0) (* 4.0 (* A C))) (* (* 2.0 F) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (/ (fma (* A (* C -4.0)) (* 2.0 (* (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) F)) (* (* A (* F 8.0)) (+ (* C (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* A (- C))))) 1.0))) (- (* 4.0 (* A C)) (pow B 2.0))) 0.0)",
    "output_parens": 70,
    "avg_bits_err_input": 51.99893718574888,
    "avg_bits_err_output": 49.29750999989398,
    "avg_bits_err_improve": 2.7014271858548966,
    "time": 37054.09423828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.240815313840924,
    "avg_bits_err_output": 15.240815313840924,
    "avg_bits_err_improve": 0,
    "time": 1802.569580078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 0.5 a) (if (!= g 0.0) (if (!= (* (- g) (/ g g)) 0.0) (/ (- (* (* (- g) (/ g g)) (* (- g) (/ g g))) (* (* (- g) (/ g g)) (* g (/ (sqrt (- (* g g) (* h h))) g)))) (* (- g) (/ g g))) (* g (/ (+ g (sqrt (- (* g g) (* h h)))) (- g)))) (- (- g) (sqrt (- (* g g) (* h h))))))))",
    "output_parens": 56,
    "avg_bits_err_input": 36.37509049241928,
    "avg_bits_err_output": 36.315595890181655,
    "avg_bits_err_improve": 0.0594946022376277,
    "time": 14282.908203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (* PI 0.6666666666666666) (- (exp (log1p (/ (acos (/ g (- h))) 3.0))) 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9902601515716059,
    "avg_bits_err_output": 0.9930432343849174,
    "avg_bits_err_improve": -0.0027830828133115215,
    "time": 6447.325439453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7168231203125902,
    "avg_bits_err_output": 0.7168231203125902,
    "avg_bits_err_improve": 0,
    "time": 2721.544677734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-292) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+284) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 10.990635441032403,
    "avg_bits_err_output": 2.416242722455524,
    "avg_bits_err_improve": 8.57439271857688,
    "time": 8557.576416015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5058062020706864,
    "avg_bits_err_output": 0.44275,
    "avg_bits_err_improve": 0.0630562020706864,
    "time": 13204.428955078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (+ x (- (exp (log1p (hypot 1.0 x))) 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 53.09023147039252,
    "avg_bits_err_output": 44.99393386623008,
    "avg_bits_err_improve": 8.096297604162437,
    "time": 17952.7685546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.677473653900648,
    "avg_bits_err_output": 5.678429289687119,
    "avg_bits_err_improve": -0.0009556357864708431,
    "time": 22112.379150390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (if (!= (+ (/ x (- -1.0 x)) (/ 1.0 (- -1.0 x))) 0.0) (/ (/ (- 1.0 x) (- -1.0 x)) (+ (/ x (- -1.0 x)) (/ 1.0 (- -1.0 x)))) (/ (- 1.0 x) (- x -1.0))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.0014999999999999996,
    "time": 5460.76220703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1249.246337890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.89513380956406,
    "avg_bits_err_output": 0.657736781721079,
    "avg_bits_err_improve": 12.237397027842981,
    "time": 23049.609130859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0) (* x1 x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5029244838468105,
    "avg_bits_err_output": 0.2863792763039112,
    "avg_bits_err_improve": 0.21654520754289935,
    "time": 63695.47705078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.21487455932854,
    "avg_bits_err_output": 1.4936878984196205,
    "avg_bits_err_improve": 16.72118666090892,
    "time": 6682.155029296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.24785620312590143,
    "avg_bits_err_output": 0.24785620312590143,
    "avg_bits_err_improve": 0,
    "time": 9064.280029296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 2809.533447265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 0.5 (* a (+ a b))) (/ 0.5 (* b (+ a b)))) (/ PI (- b a)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.088246987263581,
    "avg_bits_err_output": 0.28918007657304684,
    "avg_bits_err_improve": 13.799066910690534,
    "time": 16443.362548828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.22088656098563,
    "avg_bits_err_output": 24.56291490845745,
    "avg_bits_err_improve": 4.657971652528179,
    "time": 19011.493408203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020625,
    "avg_bits_err_output": 0.020625,
    "avg_bits_err_improve": 0,
    "time": 15364.427490234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.024875,
    "avg_bits_err_output": 0.0305,
    "avg_bits_err_improve": -0.005624999999999998,
    "time": 16286.635498046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.056875,
    "avg_bits_err_output": 0.009,
    "avg_bits_err_improve": 0.047875,
    "time": 12831.021728515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3029.900634765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2283.504150390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2698.164794921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.82853340489227,
    "avg_bits_err_output": 0.259375,
    "avg_bits_err_improve": 7.56915840489227,
    "time": 20999.35302734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.541647976561522,
    "avg_bits_err_output": 7.541647976561522,
    "avg_bits_err_improve": 0,
    "time": 4098.806884765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (+ (pow (+ x eps) 2.0) (pow x 2.0)) 0.0) (* (+ (pow (+ x eps) 2.0) (pow x 2.0)) (if (!= (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))) 0.0) (/ (- (* (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (* (/ (pow (+ x eps) 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))))) (* (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))) (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0)))))) (* (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))) (/ (pow x 2.0) (+ (pow (+ x eps) 2.0) (pow x 2.0))))) (/ (- (pow (+ x eps) 2.0) (pow x 2.0)) (+ (pow (+ x eps) 2.0) (pow x 2.0))))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 110,
    "avg_bits_err_input": 16.250982329742293,
    "avg_bits_err_output": 16.265933580433355,
    "avg_bits_err_improve": -0.014951250691062512,
    "time": 28248.60546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (cos x) 0.0) (/ (* (exp (* 10.0 (* x x))) (- (exp (log1p (* (cos x) (cos x)))) 1.0)) (cos x)) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 20,
    "avg_bits_err_input": 3.5421382670536876,
    "avg_bits_err_output": 3.5540617100368808,
    "avg_bits_err_improve": -0.011923442983193144,
    "time": 19890.60693359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -3e+26) (if (!= (* (* (+ 2.0 (* x (+ x x))) (/ 1.0 (+ 2.0 (* x (+ x x))))) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0))) (if (<= x 1.0) (/ x (fma x x 1.0)) (if (!= (* (* (+ 2.0 (* x (+ x x))) (/ 1.0 (+ 2.0 (* x (+ x x))))) (/ x (fma x x 1.0))) 0.0) (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) (/ x (fma x x 1.0)))))",
    "output_parens": 62,
    "avg_bits_err_input": 15.06790785240537,
    "avg_bits_err_output": 0.014625,
    "avg_bits_err_improve": 15.053282852405369,
    "time": 7717.117919921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.4131633067091,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.4131633067091,
    "time": 4123.135498046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.657742036475284,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 38.65761703647529,
    "time": 3797.05224609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.25275,
    "avg_bits_err_improve": 63.74725,
    "time": 19792.267578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (/ t 2.5e+31) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325490773342,
    "avg_bits_err_output": 0.3935,
    "avg_bits_err_improve": 61.449754907733414,
    "time": 7817.806884765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (- (- (- b) (* (sqrt (+ (* b b) (* a (* c -4.0)))) 2.0)) b) 2.0) (* a 2.0))",
    "output_parens": 12,
    "avg_bits_err_input": 34.081361275863955,
    "avg_bits_err_output": 34.08704650001849,
    "avg_bits_err_improve": -0.005685224154532875,
    "time": 23099.981689453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.861446536139766,
    "avg_bits_err_output": 33.861446536139766,
    "avg_bits_err_improve": 0,
    "time": 23307.1943359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2565.672607421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.144719079365316,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 40.13596907936532,
    "time": 4327.57861328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* y x) (- (* x (+ y x)) (* y y))) (- (fma y y (* x x))))",
    "output_parens": 10,
    "avg_bits_err_input": 20.2896927656655,
    "avg_bits_err_output": 20.29523545042845,
    "avg_bits_err_improve": -0.0055426847629505005,
    "time": 6521.537109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6723747271657574,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6723747271657574,
    "time": 9523.87890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.039625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.039375,
    "time": 6059.298095703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.022615601562950727,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.012240601562950726,
    "time": 5201.091064453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.01375,
    "avg_bits_err_improve": 0.001875,
    "time": 2262.934326171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1296.3037109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ b (+ d a)) (+ c e))",
    "output_parens": 4,
    "avg_bits_err_input": 0.38537537656727777,
    "avg_bits_err_output": 0.241625,
    "avg_bits_err_improve": 0.14375037656727777,
    "time": 4637.018798828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (+ 1.0 (exp (log1p (- 1.0 (cos x))))) 0.0) (/ (if (!= (- 3.0 (* 2.0 (cos x))) 0.0) (/ (+ (* (fma (cos x) (- 2.0 (cos x)) (fma 2.0 (cos x) -3.0)) (fma 2.0 (cos x) -3.0)) (fma (- 3.0 (* 2.0 (cos x))) (* (cos x) (- (cos x) 2.0)) (* (fma 2.0 (cos x) -3.0) (* (cos x) (- (cos x) 2.0))))) (- 3.0 (* 2.0 (cos x)))) (fma (- 2.0 (cos x)) (- 2.0 (cos x)) -1.0)) (+ 1.0 (exp (log1p (- 1.0 (cos x)))))) (- 1.0 (cos x)))",
    "output_parens": 54,
    "avg_bits_err_input": 30.096737201696023,
    "avg_bits_err_output": 30.106408126964546,
    "avg_bits_err_improve": -0.009670925268522979,
    "time": 29486.3125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(if (!= (+ x (sqrt (fma x x (- eps)))) 0.0) (+ (/ (fma (- x) x (* x x)) (- (- x) (sqrt (- (* x x) eps)))) (* (- x (sqrt (- (* x x) eps))) (/ (+ x (sqrt (- (* x x) eps))) (+ x (sqrt (- (* x x) eps)))))) (- x (sqrt (fma x x (- eps)))))",
    "output_parens": 34,
    "avg_bits_err_input": 24.78045917770206,
    "avg_bits_err_output": 24.96338882990831,
    "avg_bits_err_improve": -0.18292965220625135,
    "time": 12789.6748046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(if (!= (/ (- x) (tan x)) 0.0) (/ (if (!= (* (/ (- x) (tan x)) (/ x (tan x))) 0.0) (/ (fma (* (/ (- x) (tan x)) (/ x (tan x))) (* (/ (- x) (tan x)) (/ x (tan x))) (* (* (/ x (tan x)) (/ (sin x) (tan x))) (* (/ (- x) (tan x)) (/ x (tan x))))) (* (/ (- x) (tan x)) (/ x (tan x)))) (/ (* (- (sin x) x) (/ x (tan x))) (tan x))) (/ (- x) (tan x))) (/ (- x (sin x)) (tan x)))",
    "output_parens": 61,
    "avg_bits_err_input": 30.113208890120433,
    "avg_bits_err_output": 30.12739562489532,
    "avg_bits_err_improve": -0.01418673477488852,
    "time": 30253.866943359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006698120312590144,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.006198120312590144,
    "time": 3929.171142578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -5e+118) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 5e+16) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 61,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 42.965929107301285,
    "avg_bits_err_improve": 4.445674042601155,
    "time": 28366.330322265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.908789764300582,
    "avg_bits_err_output": 23.772160737019252,
    "avg_bits_err_improve": 3.13662902728133,
    "time": 12727.772216796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 5e+269) (/ (fma c b (* a (- d))) (+ (* c c) (* d d))) (- (* (/ b (fma c c (* d d))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 26.270625993114052,
    "avg_bits_err_output": 23.196952947705157,
    "avg_bits_err_improve": 3.0736730454088956,
    "time": 11031.69677734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035625,
    "avg_bits_err_output": 0.02137394680449909,
    "avg_bits_err_improve": 0.014251053195500907,
    "time": 4341.041015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* PI (* 2.0 uy))) (sqrt (fma (fma ux maxCos (- 1.0 ux)) (- ux (* ux maxCos)) (- ux (* ux maxCos)))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.462975043700663,
    "avg_bits_err_output": 0.5489403098859578,
    "avg_bits_err_improve": 12.914034733814706,
    "time": 25711.9404296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- ux (- ux)) (+ (* ux ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.507328469036898,
    "avg_bits_err_output": 0.31932466018854194,
    "avg_bits_err_improve": 13.188003808848356,
    "time": 26773.296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (if (!= (* uy (* 2.0 PI)) 0.0) (/ 1.0 (* (- (/ (/ 1.0 uy) (* PI 4.0))) -2.0)) (* uy (* 2.0 PI)))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 44,
    "avg_bits_err_input": 0.328177297868859,
    "avg_bits_err_output": 0.33942598238805066,
    "avg_bits_err_improve": -0.011248684519191643,
    "time": 39509.59423828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.21051020992672873,
    "avg_bits_err_output": 0.21051020992672873,
    "avg_bits_err_improve": 0,
    "time": 19647.1513671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ (/ u1 2.0) (- 1.0 u1)) 0.0) (/ (+ (/ (* u1 u1) (- 1.0 u1)) 0.0) u1) (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5418959333010298,
    "avg_bits_err_output": 0.5600593599670656,
    "avg_bits_err_improve": -0.018163426666035765,
    "time": 18601.778076171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.31916516594789673,
    "avg_bits_err_output": 0.31916516594789673,
    "avg_bits_err_improve": 0,
    "time": 18538.302490234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (fma u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.3321276630050384,
    "avg_bits_err_output": 0.3319295426924482,
    "avg_bits_err_improve": 0.0001981203125901998,
    "time": 58003.63330078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.058452828504809935,
    "avg_bits_err_output": 0.058452828504809935,
    "avg_bits_err_improve": 0,
    "time": 13625.24462890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (fabs x) (- s))) (fma (- (exp (/ (fabs x) (- s))) -2.0) (* s (exp (/ (fabs x) (- s)))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.15271362191927917,
    "avg_bits_err_output": 0.13084405248709663,
    "avg_bits_err_improve": 0.021869569432182545,
    "time": 18994.668701171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6767807164693598,
    "avg_bits_err_output": 0.6802871005567529,
    "avg_bits_err_improve": -0.003506384087393122,
    "time": 20648.078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.167893458786857,
    "avg_bits_err_output": 0.167893458786857,
    "avg_bits_err_improve": 0,
    "time": 19814.30712890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.6794854329685642,
    "avg_bits_err_output": 2.6753367485923016,
    "avg_bits_err_improve": 0.00414868437626259,
    "time": 23363.029052734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (* cosTheta_O (/ cosTheta_i v)) (/ (/ (exp (* sinTheta_O (- (/ sinTheta_i v)))) v) (* (sinh (/ 1.0 v)) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4523562980781001,
    "avg_bits_err_output": 0.3951566688861301,
    "avg_bits_err_improve": 0.057199629191970025,
    "time": 22739.628662109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= 0.6931 0.0) (+ 0.6931 (/ (* 0.6931 (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (log (/ 0.5 v)))) 0.6931)) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.09521814623317311,
    "avg_bits_err_output": 0.09967892366341574,
    "avg_bits_err_improve": -0.004460777430242632,
    "time": 13952.4375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (expm1 (log1p (/ (- 1.0 (* alpha alpha)) (log (* alpha alpha))))) (- (* PI (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4769048987141803,
    "avg_bits_err_output": 0.4889073336298613,
    "avg_bits_err_improve": -0.012002434915680982,
    "time": 21758.756591796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(+ (fma (- (- 3.0 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333)))))) s (* s (- 3.0 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))) (* s (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))",
    "output_parens": 19,
    "avg_bits_err_input": 1.3117305707750366,
    "avg_bits_err_output": 1.285766216663345,
    "avg_bits_err_improve": 0.025964354111691623,
    "time": 24992.287109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (* (* (if (!= (- -2.0 (log (/ 1.0 (fma u -4.0 1.0)))) 0.0) (/ (+ (+ (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))) -1.0) (* (log (/ 1.0 (fma u -4.0 1.0))) (+ 1.0 (log (/ 1.0 (fma u -4.0 1.0)))))) (+ (log (/ 1.0 (fma u -4.0 1.0))) 2.0)) (log (/ 1.0 (fma u -4.0 1.0)))) 2.0) s) 2.0)",
    "output_parens": 31,
    "avg_bits_err_input": 12.23917750314314,
    "avg_bits_err_output": 12.273062971348576,
    "avg_bits_err_improve": -0.03388546820543681,
    "time": 26077.80224609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (* 0.75 (/ (exp (/ (* r -0.3333333333333333) s)) (* s (* PI 6.0))))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.12330796069031025,
    "avg_bits_err_output": 0.13450045241755604,
    "avg_bits_err_improve": -0.01119249172724579,
    "time": 24598.160400390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9352968279169397,
    "avg_bits_err_output": 0.7858809116148541,
    "avg_bits_err_improve": 0.14941591630208562,
    "time": 24721.89013671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (/ (+ 1.0 c) 2.0) (+ (/ (+ 1.0 c) 2.0) (* (exp (* cosTheta (- cosTheta))) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* cosTheta (sqrt PI)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.6754996208738828,
    "avg_bits_err_output": 0.4789001326938784,
    "avg_bits_err_improve": 0.19659948818000444,
    "time": 22166.728515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (- (* (- (* 2.0 PI) -1.0) u2) (* u2 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.541353183554238,
    "avg_bits_err_output": 13.546355156000102,
    "avg_bits_err_improve": -0.005001972445864311,
    "time": 20721.458984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (- -1.0 (+ 1.0 (log (- 1.0 u1)))) 0.0) (/ (- 1.0 (log (+ 1.0 (- (exp (* (+ 1.0 (log (- 1.0 u1))) (+ 1.0 (log (- 1.0 u1))))) 1.0)))) (- -1.0 (+ 1.0 (log (- 1.0 u1))))) (log (- 1.0 u1))))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 31,
    "avg_bits_err_input": 13.585095345600042,
    "avg_bits_err_output": 12.45446007554956,
    "avg_bits_err_improve": 1.1306352700504814,
    "time": 31866.19677734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (* alpha alpha) (- -1.0 (log (- 1.0 u0))) (* alpha alpha)) (fma (- alpha) (fma (log (- 1.0 u0)) alpha alpha) (* alpha (fma (log (- 1.0 u0)) alpha alpha))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.020426091044692,
    "avg_bits_err_output": 14.008716438009163,
    "avg_bits_err_improve": 0.0117096530355294,
    "time": 20062.285400390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (expm1 (log1p (/ cos2phi (* alphax alphax)))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 11,
    "avg_bits_err_input": 12.522760797044796,
    "avg_bits_err_output": 12.525638140532878,
    "avg_bits_err_improve": -0.002877343488082218,
    "time": 17430.148193359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (* PI l)) F) F))",
    "output_parens": 6,
    "avg_bits_err_input": 17.292468979213908,
    "avg_bits_err_output": 12.822115418840736,
    "avg_bits_err_improve": 4.470353560373171,
    "time": 23003.790771484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.216625203512582,
    "avg_bits_err_output": 0.15286560156295073,
    "avg_bits_err_improve": 0.06375960194963126,
    "time": 16238.1630859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.636061481042615,
    "avg_bits_err_output": 10.349249890681094,
    "avg_bits_err_improve": 3.2868115903615216,
    "time": 21711.4306640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (fma (- (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (if (!= (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) 0.0) (/ (- (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (* (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (expm1 (log1p (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))))) (/ PI -4.0))",
    "output_parens": 212,
    "avg_bits_err_input": 61.47469298687306,
    "avg_bits_err_output": 61.48360106303155,
    "avg_bits_err_improve": -0.008908076158490985,
    "time": 70542.03515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.17700125312591,
    "avg_bits_err_output": 34.37024281937301,
    "avg_bits_err_improve": 8.806758433752897,
    "time": 26039.418212890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin th) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin ky))",
    "output_parens": 10,
    "avg_bits_err_input": 4.067728561313607,
    "avg_bits_err_output": 4.119333567345931,
    "avg_bits_err_improve": -0.05160500603232432,
    "time": 27882.0390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (log (+ 1.0 (- (+ (expm1 (/ 1.0 (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))) -1.0) -1.0))) 0.5)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.96675,
    "avg_bits_err_output": 0.968875,
    "avg_bits_err_improve": -0.0021250000000000435,
    "time": 14605.571044921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 9.789597222722069,
    "avg_bits_err_improve": 0,
    "time": 8924.79541015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-301) (sqrt (* U (* 2.0 (* n (- t (fma 2.0 (* l (/ l Om)) (* (pow (/ l Om) 2.0) (* (- U U*) n)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+285) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (/ (* n (* (- U U*) (* (* n (pow (/ l Om) 2.0)) (* U -2.0)))) 1.0) (* 2.0 (* U (* n (- (* 2.0 (* l (/ l Om))) t))))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.475201905767605,
    "avg_bits_err_output": 28.344266741651953,
    "avg_bits_err_improve": 6.130935164115652,
    "time": 32587.642333984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (pow t 3.0) (* (/ (* (sin k) (tan k)) (+ l l)) (* (/ (pow (/ k t) 2.0) l) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 47.61331606667237,
    "avg_bits_err_output": 38.31835554569584,
    "avg_bits_err_improve": 9.294960520976531,
    "time": 41492.203369140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (pow t 3.0) (/ (sin k) (fabs l))) (/ (* (+ 2.0 (pow (/ k t) 2.0)) (tan k)) (fabs l))))",
    "output_parens": 14,
    "avg_bits_err_input": 32.67543674537656,
    "avg_bits_err_output": 27.087516438582924,
    "avg_bits_err_improve": 5.5879203067936345,
    "time": 23599.8466796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* (cos th) (* a2 a2)) (/ (* (* (cos th) a1) (+ a1 a1)) 2.0)) (sqrt 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.49869022814465336,
    "avg_bits_err_output": 0.46981973907953856,
    "avg_bits_err_improve": 0.0288704890651148,
    "time": 23246.3828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.49524191574408905,
    "avg_bits_err_output": 0.44757843841488165,
    "avg_bits_err_improve": 0.04766347732920739,
    "time": 18857.498779296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp l) (* J (cos (/ K 2.0))) (- (* J (* (exp (- l)) (cos (/ K 2.0)))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.094342382592135,
    "avg_bits_err_output": 17.111950075698083,
    "avg_bits_err_improve": -0.017607693105947675,
    "time": 22620.02392578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K (+ m n)) 0.0) (/ 1.0 (/ 1.0 (* K (+ m n)))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.829365840309114,
    "avg_bits_err_output": 14.83366281576936,
    "avg_bits_err_improve": -0.004296975460245989,
    "time": 9570.22314453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.953490601562955,
    "avg_bits_err_output": 17.953490601562955,
    "avg_bits_err_improve": 0,
    "time": 29645.9619140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 5e-75) (* w0 (sqrt (- 1.0 (* (/ (pow (* M (/ (/ D 2.0) d)) 2.0) l) h)))) (if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 2e+281) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ h l)))))))",
    "output_parens": 39,
    "avg_bits_err_input": 14.144391989015354,
    "avg_bits_err_output": 9.687235836702502,
    "avg_bits_err_improve": 4.457156152312852,
    "time": 20422.130859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* c0 (sqrt (/ A (* V l)))) (- INFINITY)) (* c0 (sqrt (+ (/ (/ A l) (* V 4.0)) (if (!= (/ (+ (/ A (+ l l)) (/ A l)) (+ V V)) 0.0) (/ 1.0 (/ 1.0 (/ (+ (/ A (+ l l)) (/ A l)) (+ V V)))) (/ (+ (/ A (+ l l)) (/ A l)) (+ V V)))))) (if (<= (* c0 (sqrt (/ A (* V l)))) -5e-260) (* c0 (sqrt (+ (/ (+ A (/ A 2.0)) (* V (+ l l))) (/ A (* (* V (+ l l)) 2.0))))) (if (<= (* c0 (sqrt (/ A (* V l)))) 1e-315) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* c0 (sqrt (/ A (* V l)))) 5e+237) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (+ (/ (/ A l) (* V 4.0)) (if (!= (/ (+ (/ A (+ l l)) (/ A l)) (+ V V)) 0.0) (/ 1.0 (/ 1.0 (/ (+ (/ A (+ l l)) (/ A l)) (+ V V)))) (/ (+ (/ A (+ l l)) (/ A l)) (+ V V))))))))))",
    "output_parens": 101,
    "avg_bits_err_input": 19.57038228438656,
    "avg_bits_err_output": 15.057603328146243,
    "avg_bits_err_improve": 4.512778956240318,
    "time": 17319.267578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -2e+212) (/ (/ (* c0 (fma c0 (* d (/ d (* w (* h (* D D))))) (sqrt (* (fma c0 (* d (/ d (* w (* h (* D D))))) M) (fma d (* c0 (/ d (* w (* h (* D D))))) (- M)))))) w) 2.0) (if (<= d -1.5e-230) (* c0 (/ (fma c0 (* d (/ (/ (/ d D) w) (* D h))) (sqrt (* (fma c0 (* d (/ (/ (/ d D) w) (* D h))) M) (- (* c0 (* d (/ (/ (/ d D) w) (* D h)))) M)))) (+ w w))) (if (<= d 1.6e-28) (* (fma c0 (* (/ d (* w h)) (/ (/ d D) D)) (sqrt (* (- (* (/ (/ d D) D) (* d (/ c0 (* w h)))) M) (fma c0 (* (/ d (* w h)) (/ (/ d D) D)) M)))) (/ c0 (+ w w))) (if (<= d 5e+136) (* c0 (/ (fma c0 (* d (/ (/ d h) (* D (* D w)))) (sqrt (* (fma c0 (* d (/ (/ d h) (* D (* D w)))) M) (fma c0 (* d (/ (/ d h) (* D (* D w)))) (- M))))) (+ w w))) (* c0 (/ (fma c0 (* d (/ d (* w (* D (* D h))))) (sqrt (* (fma d (* c0 (/ d (* w (* D (* D h))))) M) (- (* d (* c0 (/ d (* w (* D (* D h)))))) M)))) (+ w w)))))))",
    "output_parens": 128,
    "avg_bits_err_input": 59.65366311255262,
    "avg_bits_err_output": 56.497567722570786,
    "avg_bits_err_improve": 3.156095389981836,
    "time": 45998.909912109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* M (/ D (* 2.0 d))) 2.0) (+ l l)))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.1102377170222,
    "avg_bits_err_output": 25.36739290035443,
    "avg_bits_err_improve": 0.7428448166677697,
    "time": 37847.295654296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (if (!= (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (- (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (* (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0)) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 77,
    "avg_bits_err_input": 15.198639124086169,
    "avg_bits_err_output": 14.729339328080698,
    "avg_bits_err_improve": 0.4692997960054708,
    "time": 25538.610107421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 4.0 (- 1.0 (* v v))) (* 3.0 PI)) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9842712406251803,
    "avg_bits_err_output": 0.014834962500721157,
    "avg_bits_err_improve": 0.9694362781244592,
    "time": 4002.521240234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- 1.0 (* v (* v 5.0))) PI) (sqrt (- 2.0 (* v (* v 6.0))))) (- t (* t (* v v)))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.4232660806086218,
    "avg_bits_err_output": 0.10758496250072117,
    "avg_bits_err_improve": 0.31568111810790067,
    "time": 15545.370849609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (+ (fma 3.0 (* v v) 1.0) -1.0))) (- 1.0 (* v v))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.011240601562950724,
    "avg_bits_err_output": 0.012344360937770436,
    "avg_bits_err_improve": -0.0011037593748197128,
    "time": 6241.384033203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5689749779216494,
    "avg_bits_err_output": 0.5689749779216494,
    "avg_bits_err_improve": 0,
    "time": 16353.241455078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* a (- (/ (pow k m) (+ (* k (- -10.0 k)) -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 2.057504563148923,
    "avg_bits_err_output": 2.049762911718058,
    "avg_bits_err_improve": 0.007741651430865026,
    "time": 15289.271484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (expm1 (log1p (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)))))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.024045067776892925,
    "avg_bits_err_output": 0.024276459853653613,
    "avg_bits_err_improve": -0.0002313920767606885,
    "time": 10172.271484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18088233125324507,
    "avg_bits_err_output": 0.18088233125324507,
    "avg_bits_err_improve": 0,
    "time": 14555.64404296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1909003037584943,
    "avg_bits_err_output": 0.1909003037584943,
    "avg_bits_err_improve": 0,
    "time": 4384.37451171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18768732722117645,
    "avg_bits_err_output": 0.18768732722117645,
    "avg_bits_err_improve": 0,
    "time": 3473.0810546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (if (!= (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.0) (/ (+ x (* x (/ x (sqrt (fma 4.0 (* p p) (* x x)))))) x) (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.275076765494285,
    "avg_bits_err_output": 13.273656788868864,
    "avg_bits_err_improve": 0.0014199766254208157,
    "time": 13794.6962890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.51736058791459,
    "avg_bits_err_output": 0.03325,
    "avg_bits_err_improve": 40.484110587914586,
    "time": 4859.06494140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 30.93712721710075,
    "avg_bits_err_output": 30.93712721710075,
    "avg_bits_err_improve": 0,
    "time": 15185.670166015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 -1.32e+154) (/ (if (!= (- b_2) 0.0) (- (/ 2.0 (/ -2.0 b_2)) 0.0) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a) (if (<= b_2 9.1e+142) (/ (- (sqrt (fma b_2 b_2 (* c (- a)))) b_2) a) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a)))",
    "output_parens": 31,
    "avg_bits_err_input": 34.61760259231339,
    "avg_bits_err_output": 28.672949362750515,
    "avg_bits_err_improve": 5.944653229562874,
    "time": 14178.23095703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 35.00094369766507,
    "avg_bits_err_output": 35.00116813449342,
    "avg_bits_err_improve": -0.00022443682834705214,
    "time": 14414.717529296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.632038646688006,
    "avg_bits_err_output": 30.86518080829755,
    "avg_bits_err_improve": 0.7668578383904574,
    "time": 15795.87451171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.07206991980063,
    "avg_bits_err_output": 33.07206991980063,
    "avg_bits_err_improve": 0,
    "time": 15267.89453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (+ (* (/ (log N) (+ (log N) (log1p N))) (/ (log N) -2.0)) (/ (+ (* (log N) (- (log N))) (* (log1p N) (+ (log1p N) (log1p N)))) (+ (log N) (+ (log N) (+ (log1p N) (log1p N)))))) (- (log1p N) (log N)))",
    "output_parens": 36,
    "avg_bits_err_input": 29.804529152916196,
    "avg_bits_err_output": 29.841543822276172,
    "avg_bits_err_improve": -0.03701466935997644,
    "time": 11374.226318359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (+ -1.0 (/ (+ x x) (+ x 1.0))) (+ x x)) (/ -1.0 (+ x x)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.2273226190291,
    "avg_bits_err_output": 14.26036450874143,
    "avg_bits_err_improve": -0.03304188971233124,
    "time": 16598.563232421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (cos (+ x eps)) 0.0) (/ (- (* (cos (+ x eps)) (cos (+ x eps))) (* (cos (+ x eps)) (if (!= (- 1.0 (cos x)) 0.0) (/ (* (- 1.0 (cos x)) (- 1.0 (cos x))) (+ (cos x) -1.0)) (+ (cos x) -1.0)))) (cos (+ x eps))) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 36,
    "avg_bits_err_input": 39.638216277975815,
    "avg_bits_err_output": 39.67398605576178,
    "avg_bits_err_improve": -0.03576977778596557,
    "time": 16849.952880859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (if (!= (+ (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0)) 0.0) (/ (- (* (+ (cbrt (+ 1.0 x)) -1.0) (+ (cbrt (+ 1.0 x)) -1.0)) (* (cbrt x) (cbrt x))) (+ (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0))) (+ (- (cbrt (+ 1.0 x)) (cbrt x)) -1.0)) 1.0)",
    "output_parens": 30,
    "avg_bits_err_input": 30.188358436767803,
    "avg_bits_err_output": 29.783178711299755,
    "avg_bits_err_improve": 0.4051797254680487,
    "time": 14761.839599609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.579054011345196,
    "avg_bits_err_output": 30.579054011345196,
    "avg_bits_err_improve": 0,
    "time": 20702.92236328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (* (+ (* (/ c c) (* b b)) (* (* c (* a -4.0)) (/ c c))) (/ (/ (* a 4.0) (* a 8.0)) (* (* a 4.0) (/ (/ c c) (* a 8.0))))) (fma b b (* a (* c -4.0)))))) (* a 2.0))",
    "output_parens": 30,
    "avg_bits_err_input": 34.93445466301425,
    "avg_bits_err_output": 35.058080073976434,
    "avg_bits_err_improve": -0.12362541096218393,
    "time": 30625.83154296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (fma b b (* c (* a -4.0))))) -2.0) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.44126964576185,
    "avg_bits_err_output": 34.456593387320886,
    "avg_bits_err_improve": -0.015323741559036819,
    "time": 25313.296142578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.999998) (/ (log (- 1.0 x)) (+ 1.0 (+ (log1p x) -1.0))) (/ (log (- 1.0 x)) (log1p x)))",
    "output_parens": 17,
    "avg_bits_err_input": 61.38891185717953,
    "avg_bits_err_output": 59.50244995764351,
    "avg_bits_err_improve": 1.886461899536016,
    "time": 24629.1484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- 1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (/ 1.0 (- (exp (log1p (/ 1.0 (+ (log1p n) (- (+ (* n (log1p n)) -1.0) (* n (log n))))))) 1.0)) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 27,
    "avg_bits_err_input": 62.99888327154557,
    "avg_bits_err_output": 7.073223705272593,
    "avg_bits_err_improve": 55.925659566272984,
    "time": 16636.95654296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(if (!= (+ (log (/ (+ eps -1.0) (- -1.0 eps))) 2.0) 0.0) (/ (fma (+ 1.0 (log (/ (+ eps -1.0) (- -1.0 eps)))) (+ 1.0 (log (- (/ eps (- -1.0 eps)) (/ 1.0 (- -1.0 eps))))) -1.0) (+ (log (/ (+ eps -1.0) (- -1.0 eps))) 2.0)) (log (/ (+ eps -1.0) (- -1.0 eps))))",
    "output_parens": 30,
    "avg_bits_err_input": 58.35341066314982,
    "avg_bits_err_output": 58.35833753342839,
    "avg_bits_err_improve": -0.004926870278566753,
    "time": 15641.240234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (/ (log (+ 1.0 (expm1 (+ (/ 1.0 (tan x)) (/ -1.0 x))))) (/ -1.0 (tan x))) (tan x))",
    "output_parens": 12,
    "avg_bits_err_input": 59.79855468872009,
    "avg_bits_err_output": 59.798668558745675,
    "avg_bits_err_improve": -0.00011387002558649328,
    "time": 27819.796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (/ (expm1 (* eps (+ a b))) (expm1 (* eps a)))) (expm1 (* eps b)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.394072675873275,
    "avg_bits_err_output": 29.27607945053609,
    "avg_bits_err_improve": 31.117993225337184,
    "time": 27018.18115234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 40.941937859467174,
    "avg_bits_err_output": 0.4216156015629508,
    "avg_bits_err_improve": 40.520322257904226,
    "time": 5460.320556640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.52065401188685,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 58.51965401188685,
    "time": 3787.791015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 28.826777816347242,
    "avg_bits_err_output": 0.017604374069748012,
    "avg_bits_err_improve": 28.809173442277494,
    "time": 3341.172119140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (- (* (exp x) (exp (- x))) (* 2.0 (exp x)))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 23,
    "avg_bits_err_input": 29.476469818524706,
    "avg_bits_err_output": 28.788556235362734,
    "avg_bits_err_improve": 0.687913583161972,
    "time": 18162.29052734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ -2.0 x) (if (!= (/ 1.0 (+ 1.0 x)) 0.0) (/ (+ 1.0 (/ 1.0 (/ (+ x -1.0) (+ 1.0 x)))) (+ 1.0 x)) (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 9.453149699537779,
    "avg_bits_err_output": 9.46854769676762,
    "avg_bits_err_improve": -0.01539799722984192,
    "time": 32877.444091796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (fma (- (/ (/ (tan x) (tan (+ x eps))) 2.0) (/ (tan (+ x eps)) (tan (+ x eps)))) (- (/ (/ (tan x) (tan (+ x eps))) 2.0) (/ (tan (+ x eps)) (tan (+ x eps)))) (* (/ (/ (tan x) (tan (+ x eps))) 2.0) (/ (/ (tan x) (tan (+ x eps))) -2.0)))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 45,
    "avg_bits_err_input": 36.94908442066489,
    "avg_bits_err_output": 36.961318421245906,
    "avg_bits_err_improve": -0.012234000581017312,
    "time": 19879.559326171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.873995510961144,
    "avg_bits_err_output": 29.20746749450489,
    "avg_bits_err_improve": 0.6665280164562546,
    "time": 13505.736328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (+ (- (sin (+ x eps)) (sin x)) 1.0) 0.0) (/ (fma (- (sin (+ x eps)) (sin x)) (- (sin (+ x eps)) (+ (sin x) -1.0)) (fma (- (sin x)) (- (sin (+ x eps)) (+ (sin x) -1.0)) (* (sin x) (- (sin (+ x eps)) (if (!= (sin x) 0.0) (* (sin x) (/ (+ (sin x) -1.0) (sin x))) (+ (sin x) -1.0)))))) (+ (- (sin (+ x eps)) (sin x)) 1.0)) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 51,
    "avg_bits_err_input": 36.83406834362443,
    "avg_bits_err_output": 36.876268477296385,
    "avg_bits_err_improve": -0.04220013367195463,
    "time": 18527.251708984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(if (!= (/ -0.5 (sqrt (+ 1.0 x))) 0.0) (/ (if (!= (/ (+ (/ -0.5 (sqrt x)) (/ 0.25 (sqrt (+ x 1.0)))) (sqrt (+ x 1.0))) 0.0) (/ (fma (/ (+ (/ -0.5 (sqrt x)) (/ 0.25 (sqrt (+ x 1.0)))) (sqrt (+ x 1.0))) (/ (+ (/ -0.5 (sqrt x)) (/ 0.25 (sqrt (+ x 1.0)))) (sqrt (+ x 1.0))) (* (/ (+ (/ -0.5 (sqrt x)) (/ 0.25 (sqrt (+ x 1.0)))) (sqrt (+ x 1.0))) (/ 0.25 (* (sqrt (+ x 1.0)) (sqrt (+ x 1.0)))))) (/ (+ (/ -0.5 (sqrt x)) (/ 0.25 (sqrt (+ x 1.0)))) (sqrt (+ x 1.0)))) (* (/ -0.5 (sqrt (+ x 1.0))) (+ (/ 1.0 (sqrt x)) (/ -1.0 (sqrt (+ x 1.0)))))) (/ -0.5 (sqrt (+ 1.0 x)))) (+ (/ -0.5 (sqrt (+ 1.0 x))) (+ (/ -0.5 (sqrt (+ 1.0 x))) (/ (/ -2.0 (sqrt x)) -2.0))))",
    "output_parens": 86,
    "avg_bits_err_input": 19.60310164925825,
    "avg_bits_err_output": 19.571538582741606,
    "avg_bits_err_improve": 0.03156306651664309,
    "time": 13690.439208984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.286482994686681,
    "avg_bits_err_output": 15.286482994686681,
    "avg_bits_err_improve": 0,
    "time": 3629.61767578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.306553821776255,
    "avg_bits_err_output": 29.306553821776255,
    "avg_bits_err_improve": 0,
    "time": 42971.4736328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07549304531403245,
    "avg_bits_err_output": 0.07549304531403245,
    "avg_bits_err_improve": 0,
    "time": 9442.544921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.49007435411809,
    "avg_bits_err_output": 0.3038941734413762,
    "avg_bits_err_improve": 16.186180180676715,
    "time": 10306.557373046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (/ (* PI angle) 180.0))) 2.0) (pow (* b (sin (* (/ PI 180.0) angle))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.819323155759186,
    "avg_bits_err_output": 20.7936253554441,
    "avg_bits_err_improve": 0.025697800315086283,
    "time": 25468.662841796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.789190770607956,
    "avg_bits_err_output": 31.789190770607956,
    "avg_bits_err_improve": 0,
    "time": 33485.411376953125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* (/ angle 180.0) PI) 0.0) (/ 1.0 (/ 1.0 (* PI (* (+ angle angle) 0.002777777777777778)))) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.727941041465197,
    "avg_bits_err_output": 20.751055785637124,
    "avg_bits_err_improve": -0.02311474417192727,
    "time": 27278.8564453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1719505640636719,
    "avg_bits_err_output": 0.1719505640636719,
    "avg_bits_err_improve": 0,
    "time": 15333.336181640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (if (!= (* (tan x) (tan x)) 0.0) (/ 1.0 (/ 1.0 (* (tan x) (tan x)))) (* (tan x) (tan x)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3035934497084736,
    "avg_bits_err_output": 0.32098400590321957,
    "avg_bits_err_improve": -0.017390556194746,
    "time": 15861.710693359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1374174812503606,
    "avg_bits_err_output": 0.1374174812503606,
    "avg_bits_err_improve": 0,
    "time": 15368.63134765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (expm1 (log1p (* (sin phi1) (sin phi2)))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 15.907197124315086,
    "avg_bits_err_output": 15.919800147474024,
    "avg_bits_err_improve": -0.012603023158938242,
    "time": 30556.37548828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (if (!= (* b b) 0.0) (/ (fma (* b b) (* b b) (* (* b b) (* (sqrt (fma b b (* c (* a -4.0)))) (- b)))) (* b b)) (* b (- b (sqrt (fma b b (* c (* a -4.0))))))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (+ (/ (sqrt (fma c (* a -4.0) (* b b))) (* a 4.0)) (/ (* b -0.25) a)))",
    "output_parens": 44,
    "avg_bits_err_input": 52.231235217471315,
    "avg_bits_err_output": 51.18738729865989,
    "avg_bits_err_improve": 1.043847918811423,
    "time": 29462.795166015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(* (if (!= (+ b (sqrt (fma b b (* -4.0 (* a c))))) 0.0) (/ (fma (sqrt (fma b b (* -4.0 (* a c)))) (sqrt (fma b b (* -4.0 (* a c)))) (* b (- b))) (+ b (sqrt (fma b b (* -4.0 (* a c)))))) (- (sqrt (fma b b (* -4.0 (* a c)))) b)) (/ 1.0 (+ a a)))",
    "output_parens": 32,
    "avg_bits_err_input": 28.56767270190151,
    "avg_bits_err_output": 28.043122209202366,
    "avg_bits_err_improve": 0.5245504926991451,
    "time": 36689.98486328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(fma (sqrt (fma c (* a -4.0) (* b b))) (/ 1.0 (+ a a)) (- (* b (/ 1.0 (+ a a)))))",
    "output_parens": 11,
    "avg_bits_err_input": 43.57419296955966,
    "avg_bits_err_output": 42.6502059851495,
    "avg_bits_err_improve": 0.9239869844101634,
    "time": 28484.484130859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) (* a -2.0)) 0.0) (* (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (* a 2.0)) (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) (* (* a -2.0) (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) (* a -2.0))))) (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (* a 2.0)))",
    "output_parens": 39,
    "avg_bits_err_input": 34.93790387716921,
    "avg_bits_err_output": 34.96900075663134,
    "avg_bits_err_improve": -0.031096879462126026,
    "time": 25102.4296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (log1p (expm1 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8057784476292126,
    "avg_bits_err_output": 0.8086403604568793,
    "avg_bits_err_improve": -0.0028619128276666794,
    "time": 23370.372802734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (+ 1.0 (/ -4.0 (fma (exp (* -2.0 x)) (+ (exp (* -2.0 x)) 2.0) 1.0))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 26,
    "avg_bits_err_input": 29.634759879073194,
    "avg_bits_err_output": 29.600275818172715,
    "avg_bits_err_improve": 0.0344840609004784,
    "time": 22529.044921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (/ (* (exp x) (exp x)) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))) 0.0) (- (/ 1.0 (/ 1.0 (/ (* (exp x) (exp x)) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))))) (/ (* (/ (* (exp (- x)) (exp (- x))) (+ (exp x) (exp (- x)))) (/ (* (exp x) (exp x)) (+ (exp x) (exp (- x))))) (* (exp x) (exp x)))) (- (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))) (/ 0.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 69,
    "avg_bits_err_input": 58.27129468449465,
    "avg_bits_err_output": 58.30301660932219,
    "avg_bits_err_improve": -0.031721924827543546,
    "time": 20972.1259765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.984881001746615,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 57.975506001746616,
    "time": 15467.89892578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(expm1 (log1p (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.008042481250360577,
    "avg_bits_err_output": 0.00955432343849159,
    "avg_bits_err_improve": -0.0015118421881310136,
    "time": 8281.46142578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.009,
    "avg_bits_err_output": 32.009,
    "avg_bits_err_improve": 0,
    "time": 5388.16357421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (* (/ 2.0 (- 1.0 x)) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 58.344897269166175,
    "avg_bits_err_output": 0.02623120312590145,
    "avg_bits_err_improve": 58.31866606604027,
    "time": 13410.587158203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.050896240625180285,
    "avg_bits_err_output": 0.05119812031259014,
    "avg_bits_err_improve": -0.00030187968740985616,
    "time": 2993.078369140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ eh (* ew (tan t)))))) (* (* eh (cos t)) (sin (atan (/ eh (* ew (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12784436093777043,
    "avg_bits_err_output": 0.12677124062518028,
    "avg_bits_err_improve": 0.001073120312590159,
    "time": 26655.13671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (if (!= (* ew (* (cos (atan (* eh (/ (- (tan t)) ew)))) (cos t))) 0.0) (* (* (cos (atan (* (/ (tan t) ew) (- eh)))) (* (* ew (cos t)) (cos t))) (/ ew (* ew (cos t)))) (* ew (* (cos (atan (* eh (/ (- (tan t)) ew)))) (cos t)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.12421936093777045,
    "avg_bits_err_output": 0.1751817671895733,
    "avg_bits_err_improve": -0.050962406251802844,
    "time": 24235.651611328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* lambda1 (cos (/ (+ phi1 phi2) 2.0))) (* lambda2 (cos (/ (+ phi1 phi2) 2.0)))) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 39.155730002212515,
    "avg_bits_err_output": 3.744273391573867,
    "avg_bits_err_improve": 35.411456610638645,
    "time": 22618.3134765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.54596624557503,
    "avg_bits_err_output": 0.010698120312590145,
    "avg_bits_err_improve": 14.53526812526244,
    "time": 6792.109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (+ (+ (fma (- (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (sin phi1) (cos delta)))))) (sin phi1) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (sin phi1) (cos delta))))))) (fma (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (sin phi1) (cos delta))))) (- (sin phi1)) (cos delta))) (fma (- (sin phi1)) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))",
    "output_parens": 73,
    "avg_bits_err_input": 0.15138822062361698,
    "avg_bits_err_output": 0.167905725278011,
    "avg_bits_err_improve": -0.016517504654394027,
    "time": 34929.911865234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 560000000000.0) (* (fma (sqrt (fma c (* a -3.0) (* b b))) 0.3333333333333333 (* b -0.3333333333333333)) (/ 1.0 a)) (+ (/ -0.3333333333333333 a) (+ (* (+ 1.0 (sqrt (fma b b (* c (* a -3.0))))) (/ 0.3333333333333333 a)) (* b (/ -0.3333333333333333 a)))))",
    "output_parens": 22,
    "avg_bits_err_input": 52.30746546370878,
    "avg_bits_err_output": 50.23175859790458,
    "avg_bits_err_improve": 2.0757068658042,
    "time": 30038.925048828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (+ (fma (- (/ b (+ b (sqrt (fma a (* c -3.0) (* b b)))))) b (* b (/ b (+ b (sqrt (fma a (* c -3.0) (* b b))))))) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b))) (+ b (sqrt (fma a (* c -3.0) (* b b)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 48,
    "avg_bits_err_input": 28.70276479473836,
    "avg_bits_err_output": 28.14961658358381,
    "avg_bits_err_improve": 0.55314821115455,
    "time": 31854.431396484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (if (!= (* (sqrt (fma c (* a -3.0) (* b b))) (* (- b) (* b (sqrt (fma c (* a -3.0) (* b b)))))) 0.0) (* (* (fma b (* b (* b b)) (* (sqrt (fma c (* a -3.0) (* b b))) (* (- b) (* b (sqrt (fma c (* a -3.0) (* b b))))))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) (/ (* b (- b)) (* (sqrt (fma c (* a -3.0) (* b b))) (* (- b) (* b (sqrt (fma c (* a -3.0) (* b b)))))))) (fma b (* b (* b b)) (* (sqrt (fma c (* a -3.0) (* b b))) (* (- b) (* b (sqrt (fma c (* a -3.0) (* b b)))))))) (* b (- b))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 110,
    "avg_bits_err_input": 43.607102224862125,
    "avg_bits_err_output": 42.52748444798524,
    "avg_bits_err_improve": 1.079617776876887,
    "time": 51197.73681640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (if (!= (- (* c (* a 3.0)) (* b b)) 0.0) (/ 1.0 (/ 1.0 (+ (* c (* a -3.0)) (* b b)))) (+ (* c (* a -3.0)) (* b b))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 34.976433453952566,
    "avg_bits_err_output": 35.23981942679284,
    "avg_bits_err_improve": -0.26338597284027543,
    "time": 19377.146728515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos (- lambda1 lambda2)) (if (!= (* (sin phi1) (cos phi2)) 0.0) (/ 1.0 (/ 1.0 (* (sin phi1) (cos phi2)))) (* (sin phi1) (cos phi2))))))",
    "output_parens": 25,
    "avg_bits_err_input": 13.031895371367533,
    "avg_bits_err_output": 13.04110860825203,
    "avg_bits_err_improve": -0.009213236884496823,
    "time": 30763.5390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.449825090040896,
    "avg_bits_err_output": 0.4675450624657182,
    "avg_bits_err_improve": 28.98228002757518,
    "time": 14494.263916015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01025,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0,
    "time": 3234.443603515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (* (+ x -1.0) (+ 1.0 x))) (+ (/ (/ x (+ x -1.0)) (+ 1.0 x)) (/ -1.0 (+ 1.0 x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.314104877727425,
    "avg_bits_err_output": 12.454091789667245,
    "avg_bits_err_improve": 1.86001308806018,
    "time": 19465.2685546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+210) (/ (sqrt (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))))) (- (* A (* C 4.0)) (pow B 2.0))) 0.0)",
    "output_parens": 42,
    "avg_bits_err_input": 52.13415897560496,
    "avg_bits_err_output": 50.76698289229135,
    "avg_bits_err_improve": 1.367176083313609,
    "time": 37495.90966796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.800572726157856,
    "avg_bits_err_output": 29.800572726157856,
    "avg_bits_err_improve": 0,
    "time": 23513.312744140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* 4.0 (* A C))) F)) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (pow B 2.0) (* 4.0 (* A C))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.04447761826772,
    "avg_bits_err_output": 51.7404401545305,
    "avg_bits_err_improve": 0.30403746373721674,
    "time": 34830.8994140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.521582783470016,
    "avg_bits_err_output": 15.521582783470016,
    "avg_bits_err_improve": 0,
    "time": 1803.00927734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- (sqrt (fma g g (* h (- h)))) g) 0.0) (/ 1.0 (/ 1.0 (- (sqrt (fma g g (* h (- h)))) g))) (- (sqrt (fma g g (* h (- h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 35.659372981148096,
    "avg_bits_err_output": 35.653659017366515,
    "avg_bits_err_improve": 0.005713963781580844,
    "time": 13639.7998046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.989068985944983,
    "avg_bits_err_output": 0.9755968046888523,
    "avg_bits_err_improve": 0.0134721812561307,
    "time": 5973.0986328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log (exp (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6440212406251803,
    "avg_bits_err_output": 0.76903645545781,
    "avg_bits_err_improve": -0.12501521483262967,
    "time": 4387.649658203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -1e+297) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-319) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 1e-294) (* a2 (/ (/ a1 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+296) (/ (* a1 a2) (* b1 b2)) (* a2 (/ (/ a1 b2) b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 11.476061622241211,
    "avg_bits_err_output": 3.0318526935096477,
    "avg_bits_err_improve": 8.444208928731562,
    "time": 10364.873291015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5304528334220815,
    "avg_bits_err_output": 0.472,
    "avg_bits_err_improve": 0.05845283342208152,
    "time": 8926.83935546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -0.00028) (log (if (!= (+ 1.0 (- 1.0 (+ x (hypot 1.0 x)))) 0.0) (/ (- 1.0 (* (+ x (+ (hypot 1.0 x) -1.0)) (+ x (+ (hypot 1.0 x) -1.0)))) (+ 1.0 (- 1.0 (+ x (hypot 1.0 x))))) (- (hypot 1.0 x) (- x)))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 29,
    "avg_bits_err_input": 53.16835519210999,
    "avg_bits_err_output": 13.887615349399892,
    "avg_bits_err_improve": 39.2807398427101,
    "time": 18980.185302734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.657870842628769,
    "avg_bits_err_output": 5.657024290836605,
    "avg_bits_err_improve": 0.0008465517921640853,
    "time": 11812.237060546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (if (!= (/ (* x x) (* (- x -1.0) (- x -1.0))) 0.0) (/ (- (* (/ x (- x -1.0)) (* (/ x (- x -1.0)) (/ (/ 1.0 (- x -1.0)) (- x -1.0)))) (* (/ (* x x) (* (- x -1.0) (- x -1.0))) (/ (* x x) (* (- x -1.0) (- x -1.0))))) (/ (* x x) (* (- x -1.0) (- x -1.0)))) (/ (- 1.0 x) (- x -1.0))))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.015375,
    "avg_bits_err_output": 0.018436481637041213,
    "avg_bits_err_improve": -0.0030614816370412128,
    "time": 5342.80908203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1255.970703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (/ (* w r) (- 1.0 v)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 13.311068669748659,
    "avg_bits_err_output": 0.3426592125151444,
    "avg_bits_err_improve": 12.968409457233514,
    "time": 24392.1650390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (* (* x1 x1) (+ -6.0 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0))))))) (+ x1 x1)))",
    "output_parens": 48,
    "avg_bits_err_input": 0.5085803715304767,
    "avg_bits_err_output": 0.2692561104198191,
    "avg_bits_err_improve": 0.23932426111065763,
    "time": 70025.7607421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(if (<= (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))) 0.0) (* (/ v (+ t1 u)) (/ (- t1) (+ t1 u))) (if (<= (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))) 5e+304) (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))) (* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))))",
    "output_parens": 34,
    "avg_bits_err_input": 18.47505220014807,
    "avg_bits_err_output": 1.151101121521497,
    "avg_bits_err_improve": 17.323951078626575,
    "time": 6872.090087890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2332692038992627,
    "avg_bits_err_output": 0.18062744375108172,
    "avg_bits_err_improve": 0.05264176014818098,
    "time": 6305.293701171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002948120312590144,
    "avg_bits_err_output": 0.002948120312590144,
    "avg_bits_err_improve": 0,
    "time": 2590.19677734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 15.187446997227202,
    "avg_bits_err_output": 0.2707740609435395,
    "avg_bits_err_improve": 14.916672936283662,
    "time": 16228.351318359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.39176485935185,
    "avg_bits_err_output": 24.69728633897233,
    "avg_bits_err_improve": 4.694478520379519,
    "time": 19388.861572265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (+ (* (- (/ 2.0 (+ t (/ t t))) 2.0) (- (/ 2.0 (+ t (/ t t))) 2.0)) 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.02175,
    "avg_bits_err_output": 0.005625,
    "avg_bits_err_improve": 0.016125,
    "time": 6797.767578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- (- 4.0 (/ (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))) (+ (/ t t) t))) (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0)))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.026875,
    "avg_bits_err_output": 0.0927336468769832,
    "avg_bits_err_improve": -0.0658586468769832,
    "time": 18020.552734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017625,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 0.008249999999999999,
    "time": 9074.2333984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3502.3369140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2396.234619140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2418.321044921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.794267633753049,
    "avg_bits_err_output": 0.253875,
    "avg_bits_err_improve": 7.540392633753049,
    "time": 17293.36962890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 6.871553505483716,
    "avg_bits_err_output": 6.899566503742784,
    "avg_bits_err_improve": -0.02801299825906778,
    "time": 4036.3896484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.11161327536692,
    "avg_bits_err_output": 15.11161327536692,
    "avg_bits_err_improve": 0,
    "time": 15207.425537109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (* (exp (* 10.0 (* x x))) (cos x)) 0.0) (/ 1.0 (* (/ (/ 1.0 (exp (* 10.0 (* x x)))) (* (exp (* 10.0 (* x x))) (* (cos x) (cos x)))) (* (exp (* 10.0 (* x x))) (cos x)))) (* (exp (* 10.0 (* x x))) (cos x)))",
    "output_parens": 31,
    "avg_bits_err_input": 3.5214174414767743,
    "avg_bits_err_output": 3.5225399133838042,
    "avg_bits_err_improve": -0.001122471907029965,
    "time": 24751.837890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 15.937445964149477,
    "avg_bits_err_improve": 0,
    "time": 10226.666748046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.9555078319992,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.9555078319992,
    "time": 4249.806640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.389331828656594,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.38883182865659,
    "time": 4246.8720703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(if (!= (* 1.7e+308 t) 0.0) (* t (/ (* 1.7e+308 (+ -1.0 t)) t)) (/ (/ (* -1.7e+308 (- 1.7e+308 (* 1.7e+308 t))) -1.7e+308) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.3063868421881309,
    "avg_bits_err_improve": 63.69361315781187,
    "time": 24665.188720703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 4e-32 (* t t))",
    "output_parens": 2,
    "avg_bits_err_input": 61.843251523038745,
    "avg_bits_err_output": 0.4263778203183597,
    "avg_bits_err_improve": 61.41687370272039,
    "time": 7445.466064453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (fma b b (* c (* a -4.0))))) -2.0) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.44126964576185,
    "avg_bits_err_output": 34.456593387320886,
    "avg_bits_err_improve": -0.015323741559036819,
    "time": 24282.72998046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) (* a -2.0)) 0.0) (* (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (* a 2.0)) (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) (* (* a -2.0) (/ (+ b (sqrt (fma a (* c -4.0) (* b b)))) (* a -2.0))))) (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (* a 2.0)))",
    "output_parens": 39,
    "avg_bits_err_input": 34.93790387716921,
    "avg_bits_err_output": 34.96900075663134,
    "avg_bits_err_improve": -0.031096879462126026,
    "time": 29588.029296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2216.824462890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.5427603283314,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 39.532385328331394,
    "time": 6278.92236328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.992478467082034,
    "avg_bits_err_output": 19.992478467082034,
    "avg_bits_err_improve": 0,
    "time": 5007.420654296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6715485494078313,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6715485494078313,
    "time": 8620.742919921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.039375,
    "time": 7455.58984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.020844360937770437,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": 0.010094360937770438,
    "time": 8295.841796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.0125,
    "time": 3675.430908203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 1632.4189453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40375977500432714,
    "avg_bits_err_output": 0.2465,
    "avg_bits_err_improve": 0.15725977500432714,
    "time": 7345.666015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (if (!= (/ (/ (fma (cos x) (cos x) -2.0) -2.0) (- -1.0 (cos x))) 0.0) (/ (- (* (/ (* (cos x) (cos x)) (- -2.0 (* (cos x) 2.0))) (/ (/ (fma (cos x) (cos x) -2.0) -2.0) (- -1.0 (cos x)))) (* (/ (/ (fma (cos x) (cos x) -2.0) -2.0) (- -1.0 (cos x))) (/ (/ (fma (cos x) (cos x) -2.0) -2.0) (- -1.0 (cos x))))) (/ (/ (fma (cos x) (cos x) -2.0) -2.0) (- -1.0 (cos x)))) (/ (fma (cos x) (cos x) -1.0) (- -1.0 (cos x)))) (- 1.0 (cos x)))",
    "output_parens": 60,
    "avg_bits_err_input": 30.43870851392195,
    "avg_bits_err_output": 30.44813563719789,
    "avg_bits_err_improve": -0.009427123275941085,
    "time": 23153.548828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.75693699231205,
    "avg_bits_err_output": 24.75210238464164,
    "avg_bits_err_improve": 0.004834607670410662,
    "time": 12173.81298828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ (* (- x (sin x)) (/ 2.0 (tan x))) (+ (+ 1.0 (/ (- (sin x) x) (tan x))) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 28.788777767944996,
    "avg_bits_err_output": 28.825933326236328,
    "avg_bits_err_improve": -0.03715555829133166,
    "time": 33020.947265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007363361324451065,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0.006113361324451064,
    "time": 2487.241943359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -4e-46) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* (/ i (fabs n)) (/ i (/ i n))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.15e-8) (/ (if (!= 100.0 0.0) (/ (- (* 100.0 (* (pow (+ 1.0 (/ i n)) n) 100.0)) 10000.0) 100.0) (- -100.0 (* (pow (+ 1.0 (/ i n)) n) -100.0))) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* (/ i (fabs n)) (/ i (/ i n))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 78,
    "avg_bits_err_input": 47.50174955065749,
    "avg_bits_err_output": 42.76251368908025,
    "avg_bits_err_improve": 4.739235861577242,
    "time": 29335.50048828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* (/ c (fma d d (* c c))) a) (* b (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.069959384915816,
    "avg_bits_err_output": 23.242979475934504,
    "avg_bits_err_improve": 2.8269799089813112,
    "time": 13408.269287109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* (/ c (fma d d (* c c))) b) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.65854345701529,
    "avg_bits_err_output": 23.414331613916954,
    "avg_bits_err_improve": 3.2442118430983378,
    "time": 14640.96044921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03875,
    "avg_bits_err_output": 0.023939600283902615,
    "avg_bits_err_improve": 0.014810399716097385,
    "time": 11542.89599609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (+ (- (* ux maxCos) (* (fma ux maxCos (- 1.0 ux)) (- ux (* ux maxCos)))) (- ux)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.497687227091795,
    "avg_bits_err_output": 0.5337754244865569,
    "avg_bits_err_improve": 12.963911802605239,
    "time": 26294.68017578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (if (!= (* uy (* 2.0 PI)) 0.0) (/ 1.0 (/ 1.0 (* uy (expm1 (log1p (* 2.0 PI)))))) (* uy (* 2.0 PI)))) (sqrt (+ (- (- ux (* ux ux)) (- ux)) (- (* (* ux maxCos) (+ (fma ux maxCos (- 1.0 ux)) (- 1.0 ux)))))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.540722880457121,
    "avg_bits_err_output": 0.3637217772716179,
    "avg_bits_err_improve": 13.177001103185503,
    "time": 26052.32177734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3376173847165654,
    "avg_bits_err_output": 0.32821573129172055,
    "avg_bits_err_improve": 0.009401653424844836,
    "time": 42398.32470703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.20115376181596006,
    "avg_bits_err_output": 0.20135188212855018,
    "avg_bits_err_improve": -0.00019812031259011653,
    "time": 26334.930419921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (* (/ 1.0 (* (- 1.0 u1) (- 1.0 u1))) (- 1.0 u1)) u1)) (sin (* 6.28318530718 u2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5381628816039323,
    "avg_bits_err_output": 0.5445031605661189,
    "avg_bits_err_improve": -0.006340278962186585,
    "time": 19707.07958984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (+ (/ (/ u1 (- 1.0 u1)) 8.0) (- (+ (/ u1 (- (- 2.0 u1) u1)) (/ u1 (- 16.0 (* 16.0 u1)))) (/ (/ u1 (- 1.0 u1)) -16.0))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 24,
    "avg_bits_err_input": 0.3323814637931077,
    "avg_bits_err_output": 0.3693244509740323,
    "avg_bits_err_improve": -0.03694298718092465,
    "time": 21562.735595703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.3375540656001496,
    "avg_bits_err_output": 0.3377309452875594,
    "avg_bits_err_improve": -0.0001768796874098144,
    "time": 48118.753662109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (- (exp (log1p (exp (/ (- x) s)))) 0.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07039997381152756,
    "avg_bits_err_output": 0.07581029686333854,
    "avg_bits_err_improve": -0.005410323051810981,
    "time": 14598.462158203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.16534426588581133,
    "avg_bits_err_output": 0.14723428954236828,
    "avg_bits_err_improve": 0.01810997634344305,
    "time": 14313.1484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641135874740226,
    "avg_bits_err_output": 0.6727942602193283,
    "avg_bits_err_improve": -0.008680672745305706,
    "time": 19999.61083984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.15567642670288123,
    "avg_bits_err_output": 0.15168587417774718,
    "avg_bits_err_improve": 0.003990552525134056,
    "time": 24576.064453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (fma (/ (- sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) sinTheta_O (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 2.5574870978969493,
    "avg_bits_err_output": 2.5542983760214084,
    "avg_bits_err_improve": 0.0031887218755408675,
    "time": 34787.843017578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (/ cosTheta_i (* v (sinh (/ 1.0 v)))) (* cosTheta_O (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) (+ v v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.44788030619839286,
    "avg_bits_err_output": 0.3814461890634853,
    "avg_bits_err_improve": 0.06643411713490754,
    "time": 24534.821044921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (- (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931) (log (/ 0.5 v))) 0.0) (/ (- (* (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931)) (* (log (/ 0.5 v)) (log (/ 0.5 v)))) (- (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931) (log (/ 0.5 v)))) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.11342486894409184,
    "avg_bits_err_output": 0.15152485100517493,
    "avg_bits_err_improve": -0.03809998206108309,
    "time": 15843.435302734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (fma alpha alpha -1.0) (+ (* (fma alpha alpha -1.0) (* (* cosTheta cosTheta) (log (* alpha alpha)))) (log (* alpha alpha)))) PI)",
    "output_parens": 12,
    "avg_bits_err_input": 0.4767753941579562,
    "avg_bits_err_output": 0.49922572272717636,
    "avg_bits_err_improve": -0.022450328569220135,
    "time": 24238.8671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333)))) s)",
    "output_parens": 5,
    "avg_bits_err_input": 1.3345746971356445,
    "avg_bits_err_output": 1.2420187206462003,
    "avg_bits_err_improve": 0.09255597648944414,
    "time": 23441.776123046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (if (!= (* (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 2.0) s) 0.0) (* (* (log (/ 1.0 (fma u -4.0 1.0))) (* 2.0 s)) (* (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 2.0) (/ s (* s (- 2.0 (* 2.0 (- (log (/ 1.0 (fma u -4.0 1.0)))))))))) (* (log (/ 1.0 (fma u -4.0 1.0))) (* 2.0 s))) 2.0)",
    "output_parens": 32,
    "avg_bits_err_input": 12.339410347436003,
    "avg_bits_err_output": 12.349204443763007,
    "avg_bits_err_improve": -0.009794096327004453,
    "time": 22855.880126953125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (* s (* 2.0 PI)))) (* 0.75 (/ (exp (/ (/ r -3.0) s)) (* s (* PI 6.0))))) r)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1434555200460597,
    "avg_bits_err_output": 0.14598449184579948,
    "avg_bits_err_improve": -0.002528971799739793,
    "time": 21657.787109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9247303301421024,
    "avg_bits_err_output": 0.7336448312354265,
    "avg_bits_err_improve": 0.19108549890667592,
    "time": 24650.17529296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (* (exp (* cosTheta (- cosTheta))) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* cosTheta (sqrt PI)))) (- -1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6900439519084594,
    "avg_bits_err_output": 0.4788930070746041,
    "avg_bits_err_improve": 0.21115094483385527,
    "time": 18493.3271484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(if (!= (sin (* 2.0 (* PI u2))) 0.0) (/ (* (sqrt (- (log (- 1.0 u1)))) (* (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2))))) (sin (* 2.0 (* PI u2)))) (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2)))))",
    "output_parens": 29,
    "avg_bits_err_input": 13.513070364833133,
    "avg_bits_err_output": 13.519716446561665,
    "avg_bits_err_improve": -0.006646081728531428,
    "time": 24397.20068359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* u2 (expm1 (log1p (* 2.0 PI))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.566173037343615,
    "avg_bits_err_output": 13.570131748185746,
    "avg_bits_err_improve": -0.0039587108421308415,
    "time": 22505.93603515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma alpha (- alpha (* alpha (log (- 1.0 u0)))) (* alpha (- (* alpha (log (- 1.0 u0))) alpha))) (if (!= (* (log (- 1.0 u0)) (- (* alpha alpha))) 0.0) (/ (* (log (- 1.0 u0)) (* (- (* alpha alpha)) (* (log (- 1.0 u0)) (- (* alpha alpha))))) (* (log (- 1.0 u0)) (- (* alpha alpha)))) (* (log (- 1.0 u0)) (- (* alpha alpha)))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.967857744198856,
    "avg_bits_err_output": 13.961101454880037,
    "avg_bits_err_improve": 0.006756289318818887,
    "time": 17829.808349609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (if (!= (log (- 1.0 u0)) 0.0) (/ 1.0 (/ 1.0 (log (- 1.0 u0)))) (log (- 1.0 u0)))) (+ (if (!= (/ cos2phi (* alphax alphax)) 0.0) (* (/ cos2phi alphax) (- (exp (log1p (/ (/ cos2phi alphax) cos2phi))) 1.0)) (/ cos2phi (* alphax alphax))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 28,
    "avg_bits_err_input": 12.735171715335717,
    "avg_bits_err_output": 12.752311416121659,
    "avg_bits_err_improve": -0.017139700785941514,
    "time": 20375.39892578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ 2.0 (* F (/ 2.0 (/ (tan (* PI l)) F)))))",
    "output_parens": 8,
    "avg_bits_err_input": 16.49249338287027,
    "avg_bits_err_output": 12.248486997446845,
    "avg_bits_err_improve": 4.244006385423424,
    "time": 19936.491943359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2236497379540208,
    "avg_bits_err_output": 0.15527229420293912,
    "avg_bits_err_improve": 0.06837744375108168,
    "time": 18330.298583984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.457914018303216,
    "avg_bits_err_output": 10.439313136889016,
    "avg_bits_err_improve": 3.0186008814141996,
    "time": 23780.7880859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (fma (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))))) (/ PI -4.0))",
    "output_parens": 58,
    "avg_bits_err_input": 61.43982144920934,
    "avg_bits_err_output": 61.449427105953696,
    "avg_bits_err_improve": -0.009605656744355429,
    "time": 49341.142333984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.329198102684785,
    "avg_bits_err_output": 33.97133585222982,
    "avg_bits_err_improve": 9.357862250454964,
    "time": 24319.868408203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin th) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin ky))",
    "output_parens": 10,
    "avg_bits_err_input": 3.853514213811086,
    "avg_bits_err_output": 3.904720384228569,
    "avg_bits_err_improve": -0.05120617041748332,
    "time": 26858.94482421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0863747861547797,
    "avg_bits_err_output": 1.0863747861547797,
    "avg_bits_err_improve": 0,
    "time": 10393.3232421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (+ (pow (/ Om Omc) 2.0) (+ (pow (/ Om Omc) 2.0) -2.0)) (+ -2.0 (* (pow (/ t l) 2.0) -4.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 9.733049036902761,
    "avg_bits_err_improve": -0.008565908970394887,
    "time": 30897.878173828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e-149) (sqrt (* U (* (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om))))) (* 2.0 n)))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) INFINITY) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (* 2.0 n) (if (!= (- (* U (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* U (* (/ l Om) (* l -2.0)))) 0.0) (* (- t (+ (* l (* (/ l Om) -2.0)) (* (pow (/ l Om) 2.0) (* n (- U U*))))) (* U (* (- t (fma (pow (/ l Om) 2.0) (* n (- U U*)) (* l (* (/ l Om) 2.0)))) (/ U (* U (- t (+ (* l (* (/ l Om) -2.0)) (* (pow (/ l Om) 2.0) (* n (- U U*)))))))))) (* U (- t (fma (pow (/ l Om) 2.0) (* n (- U U*)) (* 2.0 (/ (* l l) Om))))))))))",
    "output_parens": 121,
    "avg_bits_err_input": 34.46157878550961,
    "avg_bits_err_output": 28.786716671433215,
    "avg_bits_err_improve": 5.674862114076394,
    "time": 37937.513671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (pow (/ k t) 2.0) (/ (* (sin k) (* (tan k) (pow t 3.0))) l)) l))",
    "output_parens": 11,
    "avg_bits_err_input": 47.83210195031423,
    "avg_bits_err_output": 37.331119578733805,
    "avg_bits_err_improve": 10.500982371580427,
    "time": 40740.514892578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (pow t 3.0) (/ (sin k) (fabs l))) (/ (* (+ 2.0 (pow (/ k t) 2.0)) (tan k)) (fabs l))))",
    "output_parens": 14,
    "avg_bits_err_input": 32.43845866339954,
    "avg_bits_err_output": 26.90194456297542,
    "avg_bits_err_improve": 5.536514100424117,
    "time": 19060.19091796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (/ (* (cos th) (* a2 a2)) (sqrt 2.0)) (* (/ a1 (sqrt 2.0)) (* a1 (cos th))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5028838375223573,
    "avg_bits_err_output": 0.44906522814465255,
    "avg_bits_err_improve": 0.053818609377704774,
    "time": 22933.6982421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.472565155812468,
    "avg_bits_err_output": 0.42840188031952664,
    "avg_bits_err_improve": 0.044163275492941356,
    "time": 16957.292724609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (fma (exp l) (cos (/ K 2.0)) (* (cos (/ K 2.0)) (- (exp (- l)))))) U)",
    "output_parens": 12,
    "avg_bits_err_input": 17.272637600033196,
    "avg_bits_err_output": 17.275066570647045,
    "avg_bits_err_improve": -0.0024289706138489464,
    "time": 25243.35107421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (fabs (- m n)) (+ (pow (- (/ (+ m n) 2.0) M) 2.0) l)))) (* (cos (- (/ (if (!= (* K n) 0.0) (fma K (* (* K n) (- (exp (log1p (/ m (* K n)))) 1.0)) (/ 1.0 (/ 1.0 (* K n)))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))))",
    "output_parens": 63,
    "avg_bits_err_input": 15.458969763343148,
    "avg_bits_err_output": 14.19455452233129,
    "avg_bits_err_improve": 1.264415241011859,
    "time": 13493.642333984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.28489624062518,
    "avg_bits_err_output": 18.28489624062518,
    "avg_bits_err_improve": 0,
    "time": 33519.893798828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(* w0 (sqrt (- 1.0 (/ (* (pow (* M (/ D (+ d d))) 2.0) h) l))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.059530863966984,
    "avg_bits_err_output": 10.845604926011376,
    "avg_bits_err_improve": 3.213925937955608,
    "time": 14399.872802734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 0.0) (* c0 (sqrt (/ (/ A V) l))) (if (<= (/ A (* V l)) 1e+304) (* c0 (sqrt (/ A (* V l)))) (if (!= (* (sqrt (/ (/ A l) V)) c0) 0.0) (/ 1.0 (/ 1.0 (* (sqrt (/ (/ A l) V)) c0))) (* (sqrt (/ (/ A l) V)) c0))))",
    "output_parens": 32,
    "avg_bits_err_input": 18.9747755837963,
    "avg_bits_err_output": 14.33182468734799,
    "avg_bits_err_improve": 4.642950896448312,
    "time": 16963.544677734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* D D) 3e-189) (* (/ c0 (* w 2.0)) (+ (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) (sqrt (* (fma d (/ (* (/ (/ (/ c0 h) w) D) d) D) M) (- (* d (/ (* (/ (/ (/ c0 h) w) D) d) D)) M))))) (if (<= (* D D) 5e+150) (* (/ c0 (* 2.0 w)) (+ (* c0 (* d (/ (/ (/ d w) h) (* D D)))) (sqrt (* (fma c0 (* d (/ (/ (/ d w) h) (* D D))) M) (fma c0 (* d (/ (/ (/ d w) h) (* D D))) (- M)))))) (* (/ c0 (* 2.0 w)) (fma (/ (* (* (/ d D) (/ d D)) (/ c0 w)) h) 1.0 (sqrt (* (fma (/ c0 (* w h)) (* (/ d D) (/ d D)) M) (- (/ (* (* (/ d D) (/ d D)) (/ c0 w)) h) M)))))))",
    "output_parens": 81,
    "avg_bits_err_input": 59.67273215480821,
    "avg_bits_err_output": 53.50417967466593,
    "avg_bits_err_improve": 6.1685524801422815,
    "time": 44986.90625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (pow (/ (* M D) (+ d d)) 2.0) (* (* (pow (/ d l) 0.5) (pow (/ d h) 0.5)) h)) (+ l l)))",
    "output_parens": 19,
    "avg_bits_err_input": 26.44617227584965,
    "avg_bits_err_output": 25.97347651702202,
    "avg_bits_err_improve": 0.47269575882762993,
    "time": 42017.6904296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log1p (expm1 (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0))) (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 29,
    "avg_bits_err_input": 14.971667081376712,
    "avg_bits_err_output": 14.49781979385866,
    "avg_bits_err_improve": 0.4738472875180513,
    "time": 13611.852783203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9823868421881311,
    "avg_bits_err_output": 0.012823120312590145,
    "avg_bits_err_improve": 0.969563721875541,
    "time": 4446.1640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- (/ 1.0 (- t (* v (* v t)))) (* v (/ (* v 5.0) (* t (- 1.0 (* v v)))))) (* (sqrt (- 2.0 (* v (* v 6.0)))) PI))",
    "output_parens": 17,
    "avg_bits_err_input": 0.4803071376397249,
    "avg_bits_err_output": 0.3244619659603883,
    "avg_bits_err_improve": 0.1558451716793366,
    "time": 20120.272216796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014917481250360578,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.002667481250360577,
    "time": 6061.32080078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- -1.0 (+ (* (* v v) -5.0) -1.0))) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.534914697257525,
    "avg_bits_err_output": 0.5535178879287848,
    "avg_bits_err_improve": -0.018603190671259706,
    "time": 10257.46142578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (/ (+ (* k (+ k 10.0)) (+ (* k (+ k 10.0)) 2.0)) 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 1.9187119986384435,
    "avg_bits_err_output": 1.8793927956756629,
    "avg_bits_err_improve": 0.039319202962780686,
    "time": 14670.31103515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (expm1 (log1p (exp (/ (+ mu (- Vef (- Ec EDonor))) KbT)))))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.01902135833709117,
    "avg_bits_err_output": 0.01971947864968131,
    "avg_bits_err_improve": -0.0006981203125901413,
    "time": 10961.185546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18189417344137612,
    "avg_bits_err_output": 0.18102857187842541,
    "avg_bits_err_improve": 0.0008656015629507074,
    "time": 19075.27734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (- (* a (+ (* a a) (/ a 2.0))) (/ (* a a) -2.0)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.1894956925776963,
    "avg_bits_err_output": 0.18916013030591228,
    "avg_bits_err_improve": 0.0003355622717840234,
    "time": 22396.343017578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(+ (pow (fma b b (* a a)) 2.0) (+ (* 4.0 (+ (* b (* b (+ a 3.0))) (* a (- a (* a a))))) -1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.18585903185262348,
    "avg_bits_err_output": 0.18843143126234102,
    "avg_bits_err_improve": -0.0025723994097175407,
    "time": 20304.64306640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (/ (+ x (+ x x)) (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.501493261825829,
    "avg_bits_err_output": 13.577589592606365,
    "avg_bits_err_improve": -0.0760963307805369,
    "time": 18256.11669921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.83161298072334,
    "avg_bits_err_output": 0.0475,
    "avg_bits_err_improve": 40.78411298072334,
    "time": 8229.992919921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (/ x (- (tan x) x)))",
    "output_parens": 8,
    "avg_bits_err_input": 30.978015531159368,
    "avg_bits_err_output": 30.92763469600267,
    "avg_bits_err_improve": 0.05038083515669811,
    "time": 20417.744384765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.729145063819495,
    "avg_bits_err_output": 34.729145063819495,
    "avg_bits_err_improve": 0,
    "time": 14985.508544921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (- (* b_2 b_2) (* c (+ a a))) (* a c)))) a)",
    "output_parens": 10,
    "avg_bits_err_input": 34.436573743810996,
    "avg_bits_err_output": 34.48778622180357,
    "avg_bits_err_improve": -0.05121247799257134,
    "time": 15957.008544921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.216202271379384,
    "avg_bits_err_output": 30.453889728565898,
    "avg_bits_err_improve": 0.7623125428134863,
    "time": 15757.483642578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 33.38967272288387,
    "avg_bits_err_output": 33.38967272288387,
    "avg_bits_err_improve": 0,
    "time": 15723.595458984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (- (exp (- (log1p N) (log N))) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.44133110348553,
    "avg_bits_err_output": 29.44051563727335,
    "avg_bits_err_improve": 0.0008154662121810929,
    "time": 11048.646240234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (- (/ (/ x x) (+ x (+ x 2.0))) (+ (/ 1.0 x) (/ (/ -0.5 x) (/ (+ 1.0 x) x)))) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 14.751710394678788,
    "avg_bits_err_output": 14.758258279969603,
    "avg_bits_err_improve": -0.006547885290814293,
    "time": 15204.824951171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (if (!= (+ (cos x) -1.0) 0.0) (/ (- (* (cos (+ x eps)) (/ (+ (cos x) (+ (cos x) -2.0)) 2.0)) (* (+ (cos x) -1.0) (+ (cos x) -1.0))) (+ (cos x) -1.0)) (+ (- (cos (+ x eps)) (cos x)) 1.0)) 1.0)",
    "output_parens": 27,
    "avg_bits_err_input": 39.33306555243677,
    "avg_bits_err_output": 39.35512957309317,
    "avg_bits_err_improve": -0.02206402065640134,
    "time": 16593.112548828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.742797241848077,
    "avg_bits_err_output": 29.742797241848077,
    "avg_bits_err_improve": 0,
    "time": 10996.97607421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.43307979460694,
    "avg_bits_err_output": 30.43307979460694,
    "avg_bits_err_improve": 0,
    "time": 25221.27392578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.490826374729586,
    "avg_bits_err_output": 34.490826374729586,
    "avg_bits_err_improve": 0,
    "time": 23346.987548828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (- (- (- b) (* (sqrt (+ (* b b) (* a (* c -4.0)))) 2.0)) b) 2.0) (* a 2.0))",
    "output_parens": 12,
    "avg_bits_err_input": 34.731654172625774,
    "avg_bits_err_output": 34.72992561749963,
    "avg_bits_err_improve": 0.0017285551261423393,
    "time": 21533.33837890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.25592938520995,
    "avg_bits_err_output": 0.9699295711141972,
    "avg_bits_err_improve": 60.28599981409575,
    "time": 23370.7666015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (- (* n (log1p n)) (+ 1.0 (* n (log n)))) (- (log1p n)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.0043646566278,
    "avg_bits_err_output": 0.5837067265978517,
    "avg_bits_err_improve": 62.42065793002995,
    "time": 12097.131103515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.71929061624231,
    "avg_bits_err_output": 58.67689434246819,
    "avg_bits_err_improve": 0.04239627377412347,
    "time": 17775.0322265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (/ (- (/ (/ x x) (tan x)) (* (/ (/ x x) (tan x)) (/ x (tan x)))) (/ (/ x x) (tan x))) x)",
    "output_parens": 15,
    "avg_bits_err_input": 59.86949778009672,
    "avg_bits_err_output": 59.863020025697594,
    "avg_bits_err_improve": 0.006477754399128344,
    "time": 27688.031005859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (if (!= (/ eps (expm1 (* eps b))) 0.0) (/ 1.0 (/ 1.0 (/ eps (expm1 (* eps b))))) (/ eps (expm1 (* eps b))))) (expm1 (* eps a)))",
    "output_parens": 20,
    "avg_bits_err_input": 60.4660750040529,
    "avg_bits_err_output": 29.195243722435702,
    "avg_bits_err_improve": 31.270831281617195,
    "time": 25965.233154296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.16859861326628,
    "avg_bits_err_output": 0.4348656015629507,
    "avg_bits_err_improve": 40.733733011703336,
    "time": 8012.80029296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.76375708417609,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 58.763382084176094,
    "time": 3815.816162109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.016698955664374,
    "avg_bits_err_output": 0.021512548747768777,
    "avg_bits_err_improve": 28.995186406916606,
    "time": 4378.9873046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (exp x) (if (!= (- (exp (- x)) 2.0) 0.0) (/ 1.0 (/ 1.0 (- 2.0 (exp (- x))))) (- 2.0 (exp (- x)))))",
    "output_parens": 15,
    "avg_bits_err_input": 29.54982648154794,
    "avg_bits_err_output": 29.55304555657028,
    "avg_bits_err_improve": -0.003219075022339979,
    "time": 19664.380615234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ (- 1.0 (/ 2.0 (/ x (+ 1.0 x)))) (+ 1.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 10.06042986287164,
    "avg_bits_err_output": 10.082196560823213,
    "avg_bits_err_improve": -0.021766697951573377,
    "time": 24470.809814453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.80678994756066,
    "avg_bits_err_output": 36.80678994756066,
    "avg_bits_err_improve": 0,
    "time": 17839.936767578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (log1p (expm1 (+ (sqrt (+ x 1.0)) (- -1.0 (sqrt x))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.92762824474874,
    "avg_bits_err_output": 29.2434298015146,
    "avg_bits_err_improve": 0.6841984432341377,
    "time": 13994.199462890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (if (!= (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps))) 0.0) (/ (* (sin (+ x eps)) (- (/ (* (sin (+ x eps)) (sin (+ x eps))) (sin (+ x eps))) (* (sin (+ x eps)) (* (/ (sin x) (sin (+ x eps))) (/ (sin x) (sin (+ x eps))))))) (if (!= (- (sin x) (sin (+ x eps))) 0.0) (/ (- (* (sin x) (sin x)) (* (sin (+ x eps)) (sin (+ x eps)))) (- (sin x) (sin (+ x eps)))) (+ (sin (+ x eps)) (sin x)))) (* (sin (+ x eps)) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 79,
    "avg_bits_err_input": 36.96172508371131,
    "avg_bits_err_output": 36.97695597440625,
    "avg_bits_err_improve": -0.015230890694944321,
    "time": 16693.824462890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) 0.0) (/ (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) (* (sqrt (+ 1.0 x)) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))))) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 24,
    "avg_bits_err_input": 19.97093036205265,
    "avg_bits_err_output": 19.958018932189056,
    "avg_bits_err_improve": 0.012911429863592616,
    "time": 12318.309326171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.0705599578238,
    "avg_bits_err_output": 15.0705599578238,
    "avg_bits_err_improve": 0,
    "time": 2933.05859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.806541770153874,
    "avg_bits_err_output": 29.806541770153874,
    "avg_bits_err_improve": 0,
    "time": 37188.230712890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0707195644503525,
    "avg_bits_err_output": 0.0707195644503525,
    "avg_bits_err_improve": 0,
    "time": 8849.8310546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.10308491871449,
    "avg_bits_err_output": 0.30514661719245784,
    "avg_bits_err_improve": 15.797938301522032,
    "time": 10772.433837890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ PI 180.0) angle))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.247295279560415,
    "avg_bits_err_output": 20.221640172278363,
    "avg_bits_err_improve": 0.025655107282052114,
    "time": 25134.680419921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.860737409601708,
    "avg_bits_err_output": 31.860737409601708,
    "avg_bits_err_improve": 0,
    "time": 29841.190673828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ PI 180.0) angle))) 2.0) (pow (* b (cos (if (!= (* PI (/ angle 360.0)) 0.0) (* (/ angle (* PI (* 360.0 (/ angle 360.0)))) (* PI (* angle (/ PI 180.0)))) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 20.41262782178542,
    "avg_bits_err_output": 20.38685238422604,
    "avg_bits_err_improve": 0.025775437559381942,
    "time": 30399.63916015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17216748125036058,
    "avg_bits_err_output": 0.17216748125036058,
    "avg_bits_err_improve": 0,
    "time": 14326.68603515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(expm1 (log1p (/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.31242730941468716,
    "avg_bits_err_output": 0.34438154646571084,
    "avg_bits_err_improve": -0.03195423705102368,
    "time": 17571.195556640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13759436093777044,
    "avg_bits_err_output": 0.13759436093777044,
    "avg_bits_err_improve": 0,
    "time": 16988.938720703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos phi1) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.86179442777483,
    "avg_bits_err_output": 16.853804983264435,
    "avg_bits_err_improve": 0.007989444510393184,
    "time": 32914.348876953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (/ (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) 0.0) (/ (fma (/ (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) (/ (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0)) (/ (* (fma (- b (sqrt (fma b b (* -4.0 (* a c))))) -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (/ (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0))) (* a 8.0))) (/ (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (* a 8.0))) (/ (+ (fma b -2.0 (sqrt (fma -4.0 (* a c) (* b b)))) (fma (- b (sqrt (fma -4.0 (* a c) (* b b)))) -2.0 (sqrt (fma -4.0 (* a c) (* b b))))) (* a 8.0)))",
    "output_parens": 70,
    "avg_bits_err_input": 52.54893871942147,
    "avg_bits_err_output": 51.45208620431302,
    "avg_bits_err_improve": 1.096852515108452,
    "time": 32584.28759765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma b b (* c (* a -4.0))) (fma b b (* c (* a -4.0)))))) 0.0) (+ (/ (fma (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b)))) (- (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b))))) (* (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b)))) (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b)))))) (- (- b) (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b)))))) (* (- (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b)))) b) (/ (+ b (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b))))) (+ b (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma c (* a -4.0) (* b b)) (fma c (* a -4.0) (* b b)))))))) (- (sqrt (if (!= (* c (* a 4.0)) 0.0) (fma b b (* c (* a -4.0))) (fma b b (* c (* a -4.0))))) b)) (* a 2.0))",
    "output_parens": 129,
    "avg_bits_err_input": 28.93968600050526,
    "avg_bits_err_output": 28.437094890893484,
    "avg_bits_err_improve": 0.5025911096117781,
    "time": 34706.11328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(fma b (/ -0.25 a) (/ (+ (sqrt (if (!= (* a (* c -4.0)) 0.0) (+ (/ 1.0 (/ -0.25 (* a c))) (* (* c (* -4.0 (* b b))) (/ a (* a (* c -4.0))))) (fma a (* c -4.0) (* b b)))) (fma (- (sqrt (fma b b (* a (* c -4.0)))) b) 2.0 (sqrt (fma c (* a -4.0) (* b b))))) (* a 8.0)))",
    "output_parens": 34,
    "avg_bits_err_input": 43.79672286925443,
    "avg_bits_err_output": 42.785380973558716,
    "avg_bits_err_improve": 1.0113418956957148,
    "time": 24588.26708984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.50892151664608,
    "avg_bits_err_output": 34.50892151664608,
    "avg_bits_err_improve": 0,
    "time": 19515.0078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (- (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2))) 0.0) (/ (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (fma (cos (- lambda1 lambda2)) (cos phi2) (- (cos phi1)))) (fma (cos (- lambda1 lambda2)) (cos phi2) (- (cos phi1)))) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.8488395665463114,
    "avg_bits_err_output": 0.8551569953038581,
    "avg_bits_err_improve": -0.006317428757546706,
    "time": 26433.548583984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) 0.0) (/ (- 1.0 (/ (/ (/ 16.0 (+ 1.0 (exp (* -2.0 x)))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))) (+ 1.0 (exp (* -2.0 x))))) (+ 1.0 (/ 4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 65,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.370627723243082,
    "avg_bits_err_improve": 0.004117585047634265,
    "time": 24826.027587890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (/ (/ (exp (- x)) (+ (exp x) (exp (- x)))) 4.0) 0.0) (/ (/ (- (* (+ (exp x) (+ (/ (exp (- x)) -2.0) (/ (exp (- x)) -4.0))) (/ (/ (exp (- x)) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x)))) (* (/ (exp (- x)) (+ (exp (- x)) (exp x))) (/ (exp (- x)) (* (+ (exp (- x)) (exp x)) 4.0)))) 4.0) (/ (/ (exp (- x)) (+ (exp x) (exp (- x)))) 4.0)) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 68,
    "avg_bits_err_input": 58.278366926252225,
    "avg_bits_err_output": 58.283136149384745,
    "avg_bits_err_improve": -0.00476922313252004,
    "time": 17049.700439453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.27560170097852,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 58.26860170097852,
    "time": 11687.682861328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007823120312590146,
    "avg_bits_err_output": 0.007823120312590146,
    "avg_bits_err_improve": 0,
    "time": 4494.951416015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.705625,
    "avg_bits_err_output": 31.705625,
    "avg_bits_err_improve": 0,
    "time": 3951.75244140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.70600775417713,
    "avg_bits_err_output": 0.016625,
    "avg_bits_err_improve": 58.68938275417713,
    "time": 14469.683349609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.04294812031259015,
    "avg_bits_err_output": 0.04289624062518029,
    "avg_bits_err_improve": 5.1879687409855935e-05,
    "time": 2302.733642578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12507312031259016,
    "avg_bits_err_output": 0.12507312031259016,
    "avg_bits_err_improve": 0,
    "time": 21221.399658203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (sin t) (* eh (sin (atan (* (tan t) (/ (- eh) ew)))))) (* ew (* (cos t) (cos (atan (* (tan t) (/ (- eh) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.129125,
    "avg_bits_err_output": 0.13458712475256826,
    "avg_bits_err_improve": -0.00546212475256827,
    "time": 22583.56689453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 38.75888818465462,
    "avg_bits_err_output": 3.833443564715602,
    "avg_bits_err_improve": 34.92544461993902,
    "time": 25741.66162109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.35516522605636,
    "avg_bits_err_output": 0.01164624062518029,
    "avg_bits_err_improve": 14.34351898543118,
    "time": 6829.556396484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (+ (fma (cos phi1) (sin delta) 1.0) -1.0) (cos theta)))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.16115112925084202,
    "avg_bits_err_output": 0.16356459524602143,
    "avg_bits_err_improve": -0.0024134659951794146,
    "time": 34530.9541015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (+ (- (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))) (* b b)) (* b b))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 41,
    "avg_bits_err_input": 52.56052898958039,
    "avg_bits_err_output": 51.52297670187543,
    "avg_bits_err_improve": 1.0375522877049619,
    "time": 32808.177001953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (if (!= (* b (- b)) 0.0) (/ (fma (sqrt (fma b b (* c (* a -3.0)))) (* (* b b) (- (sqrt (fma b b (* c (* a -3.0)))))) (* b (* b (* b b)))) (* b (- b))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 55,
    "avg_bits_err_input": 29.074130093987623,
    "avg_bits_err_output": 28.723527620228722,
    "avg_bits_err_improve": 0.35060247375890086,
    "time": 36462.713134765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) (* a 6.0)) 0.0) (/ 1.0 (/ 1.0 (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333))) (fma (/ (sqrt (fma -3.0 (* c a) (* b b))) a) 0.3333333333333333 (* (/ b a) -0.3333333333333333)))",
    "output_parens": 26,
    "avg_bits_err_input": 43.86880553911625,
    "avg_bits_err_output": 42.67242162851777,
    "avg_bits_err_improve": 1.1963839105984846,
    "time": 26766.65869140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.5228111051199,
    "avg_bits_err_output": 34.5228111051199,
    "avg_bits_err_improve": 0,
    "time": 20023.54443359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.159819173272345,
    "avg_bits_err_output": 13.159819173272345,
    "avg_bits_err_improve": 0,
    "time": 30903.322509765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.148772293790792,
    "avg_bits_err_output": 0.5115680320225462,
    "avg_bits_err_improve": 28.637204261768247,
    "time": 23365.60302734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(/ (+ (/ 1.0 (+ x -1.0)) (+ (/ x (+ 1.0 x)) (+ (/ 1.0 (+ x -1.0)) (/ x (+ 1.0 x))))) 2.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.013948120312590144,
    "avg_bits_err_improve": -0.0026981203125901448,
    "time": 5592.71630859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -1.25e+146) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (if (<= x 1.32e+154) (- (- (+ (/ -1.0 (+ x 1.0)) (/ x (fma x x -1.0))) (/ -1.0 (fma x x -1.0)))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 14.52866119350035,
    "avg_bits_err_output": 13.17658373280438,
    "avg_bits_err_improve": 1.3520774606959698,
    "time": 21614.67822265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (fma (fma 2.0 (pow B 2.0) (* A (* C -8.0))) (* (if (!= (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) 0.0) (/ 1.0 (/ 1.0 (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (- F)) (* (fma 2.0 (pow B 2.0) (* A (* C -8.0))) (* F (+ A C))))) (- (* A (* 4.0 C)) (pow B 2.0)))",
    "output_parens": 39,
    "avg_bits_err_input": 52.332486803990264,
    "avg_bits_err_output": 52.3531972108281,
    "avg_bits_err_improve": -0.02071040683783565,
    "time": 38868.942138671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.94791697115608,
    "avg_bits_err_output": 29.94791697115608,
    "avg_bits_err_improve": 0,
    "time": 26851.32568359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(- (/ (sqrt (* (* (+ (pow B 2.0) (* (* A C) -4.0)) F) (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (+ (pow B 2.0) (* (* A C) -4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 52.377085075342315,
    "avg_bits_err_output": 52.083176488113466,
    "avg_bits_err_improve": 0.2939085872288487,
    "time": 38325.158935546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.04371613288221,
    "avg_bits_err_output": 15.04371613288221,
    "avg_bits_err_improve": 0,
    "time": 2450.317138671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (* (/ -1.0 g) (* g (- g (sqrt (fma g g (* h (- h))))))) (- (sqrt (fma g g (- (* h h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 29,
    "avg_bits_err_input": 36.91913143472072,
    "avg_bits_err_output": 36.847862853340665,
    "avg_bits_err_improve": 0.07126858138005332,
    "time": 12655.90087890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9918708656323929,
    "avg_bits_err_output": 0.9794105265643932,
    "avg_bits_err_improve": 0.012460339067999704,
    "time": 4926.58642578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6469693609377705,
    "avg_bits_err_output": 0.6469693609377705,
    "avg_bits_err_improve": 0,
    "time": 2033.788330078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-314) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e-295) (* a1 (/ (/ a2 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+301) (/ (* a1 a2) (* b1 b2)) (/ (* a2 (/ a1 b1)) b2)))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.986655253484908,
    "avg_bits_err_output": 3.4976649441973144,
    "avg_bits_err_improve": 8.488990309287594,
    "time": 7332.974365234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5623637626021017,
    "avg_bits_err_output": 0.513625,
    "avg_bits_err_improve": 0.04873876260210175,
    "time": 10705.486328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -5.4e-8) (log (if (!= (- 2.0 (+ x (hypot 1.0 x))) 0.0) (/ (- 1.0 (* (+ x (+ (hypot 1.0 x) -1.0)) (+ x (+ (hypot 1.0 x) -1.0)))) (- 2.0 (+ x (hypot 1.0 x)))) (+ x (hypot 1.0 x)))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 26,
    "avg_bits_err_input": 52.79582136742435,
    "avg_bits_err_output": 13.464885075905164,
    "avg_bits_err_improve": 39.33093629151919,
    "time": 16424.226806640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (if (!= (+ (log a) (log b)) 0.0) (fma (+ (log a) (log b)) (/ (log a) (+ (log a) (log b))) (log b)) (+ (log a) (log b))))",
    "output_parens": 19,
    "avg_bits_err_input": 5.71919993055985,
    "avg_bits_err_output": 5.847806416889197,
    "avg_bits_err_improve": -0.12860648632934701,
    "time": 12531.53662109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 3271.44921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1247.6875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 5e-8) (- (- (+ 3.0 (/ 2.0 (* r r))) (* (- 0.375 (* v 0.25)) (/ (* r (* w (* w r))) (- 1.0 v)))) 4.5) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* r w) (* (* r (/ w (- 1.0 v))) (- 0.375 (* v 0.25)))) 4.5)))",
    "output_parens": 29,
    "avg_bits_err_input": 13.24002046550635,
    "avg_bits_err_output": 0.2894840234442607,
    "avg_bits_err_improve": 12.950536442062088,
    "time": 22018.341552734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) x1) (* (* x1 -6.0) x1)) (* (* x1 (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -2.0)) (- (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5127421811457701,
    "avg_bits_err_output": 0.2814490053848688,
    "avg_bits_err_improve": 0.2312931757609013,
    "time": 64962.241943359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.29623075170551,
    "avg_bits_err_output": 1.3886787140474544,
    "avg_bits_err_improve": 17.907552037658057,
    "time": 4346.9697265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2240614816370412,
    "avg_bits_err_output": 0.17868892538812292,
    "avg_bits_err_improve": 0.04537255624891828,
    "time": 8859.00439453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003919694000577261,
    "avg_bits_err_output": 0.003919694000577261,
    "avg_bits_err_improve": 0,
    "time": 2972.432861328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI (- b a)) (- (/ (/ 0.5 (+ b a)) a) (/ (/ 0.5 b) (+ b a))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.938247422578925,
    "avg_bits_err_output": 0.29028176876406225,
    "avg_bits_err_improve": 13.647965653814863,
    "time": 16024.1103515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.087406643723906,
    "avg_bits_err_output": 24.446791521288127,
    "avg_bits_err_improve": 4.640615122435779,
    "time": 13208.681640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.017125,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0,
    "time": 4175.021484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.024125,
    "avg_bits_err_output": 0.030125,
    "avg_bits_err_improve": -0.005999999999999998,
    "time": 15404.7841796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* t (* (/ t (+ t 1.0)) (/ 4.0 (+ t 1.0))))) (+ 2.0 (* t (* (/ t (+ t 1.0)) (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.023125,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 0.01575,
    "time": 14033.70849609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2657.8447265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2761.51708984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2615.59716796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.818228497284723,
    "avg_bits_err_output": 0.240375,
    "avg_bits_err_improve": 7.577853497284723,
    "time": 19181.068359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.771673768895418,
    "avg_bits_err_output": 7.771673768895418,
    "avg_bits_err_improve": 0,
    "time": 3326.49560546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.29147747013905,
    "avg_bits_err_output": 16.29147747013905,
    "avg_bits_err_improve": 0,
    "time": 8223.11328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (- (exp (log1p (cos x))) 1.0) (exp (* 10.0 (* x x))))",
    "output_parens": 8,
    "avg_bits_err_input": 3.5597346939920094,
    "avg_bits_err_output": 3.556325138179433,
    "avg_bits_err_improve": 0.0034095558125764036,
    "time": 17398.5185546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (<= x -20000000.0) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0))) (if (<= x 2e-5) (/ x (+ (* x x) 1.0)) (if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (if (!= (/ (/ x (+ x (/ 1.0 x))) 2.0) 0.0) (/ x (+ x (/ 1.0 x))) (/ x (+ x (/ 1.0 x)))) x) 0.0) (/ x (fma x x 1.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 0.01,
    "avg_bits_err_improve": 14.85296115197118,
    "time": 6728.561279296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.58276838073367,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.58276838073367,
    "time": 4260.711669921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14358561573015,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.14308561573015,
    "time": 4063.64599609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.306625,
    "avg_bits_err_improve": 63.693375,
    "time": 24621.534912109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.843253347501275,
    "avg_bits_err_output": 0.401125,
    "avg_bits_err_improve": 61.442128347501274,
    "time": 7719.99951171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (- (- (- b) (* (sqrt (+ (* b b) (* a (* c -4.0)))) 2.0)) b) 2.0) (* a 2.0))",
    "output_parens": 12,
    "avg_bits_err_input": 34.731654172625774,
    "avg_bits_err_output": 34.72992561749963,
    "avg_bits_err_improve": 0.0017285551261423393,
    "time": 22361.14013671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.50892151664608,
    "avg_bits_err_output": 34.50892151664608,
    "avg_bits_err_improve": 0,
    "time": 21849.129150390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2519.869873046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.411440673098795,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 39.401565673098794,
    "time": 4963.935302734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(* (/ (- x y) (fma x x (* y y))) (+ x y))",
    "output_parens": 6,
    "avg_bits_err_input": 19.68575504741409,
    "avg_bits_err_output": 19.970558808132104,
    "avg_bits_err_improve": -0.28480376071801317,
    "time": 5588.27783203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6721265540007746,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6721265540007746,
    "time": 7784.864501953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03875,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.037625,
    "time": 6999.89794921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01856372187554087,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 0.01018872187554087,
    "time": 6774.800537109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012875,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.012499999999999999,
    "time": 3458.525146484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1560.60791015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ b (+ d a)) (+ c e))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4000428578176385,
    "avg_bits_err_output": 0.246125,
    "avg_bits_err_improve": 0.15391785781763848,
    "time": 5044.109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.01115789529748,
    "avg_bits_err_output": 30.01115789529748,
    "avg_bits_err_improve": 0,
    "time": 7091.189453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (if (!= (/ (* eps eps) eps) 0.0) (/ (- (* eps (* x (* (/ x eps) eps))) (* eps (/ (* eps eps) eps))) (/ (* eps eps) eps)) (* (- (* x x) eps) (/ eps eps))) (- (* x x) eps))))",
    "output_parens": 25,
    "avg_bits_err_input": 24.556461837877784,
    "avg_bits_err_output": 24.569778543466548,
    "avg_bits_err_improve": -0.013316705588763966,
    "time": 11737.998046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(* (- x (sin x)) (/ 1.0 (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 29.68532795172709,
    "avg_bits_err_output": 29.693178420102342,
    "avg_bits_err_improve": -0.007850468375252717,
    "time": 30040.234619140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.004875,
    "time": 2645.655517578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -1.05e-7) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 2.9e+60) (/ (/ (+ 10000.0 (/ (pow (+ 1.0 (/ i n)) n) -0.0001)) -100.0) (/ i n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 62,
    "avg_bits_err_input": 47.3425093859414,
    "avg_bits_err_output": 42.36102346230828,
    "avg_bits_err_improve": 4.981485923633116,
    "time": 25741.21875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(fma b (/ d (fma c c (* d d))) (* a (/ c (fma c c (* d d)))))",
    "output_parens": 8,
    "avg_bits_err_input": 25.980188192230877,
    "avg_bits_err_output": 22.951571307389234,
    "avg_bits_err_improve": 3.028616884841643,
    "time": 12739.057373046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.083827027080257,
    "avg_bits_err_output": 23.35857945751212,
    "avg_bits_err_improve": 2.725247569568136,
    "time": 15668.807861328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035625,
    "avg_bits_err_output": 0.02065776945635998,
    "avg_bits_err_improve": 0.014967230543640016,
    "time": 5135.257568359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(if (!= (* (sin (* uy (* 2.0 PI))) (sqrt (- ux (fma ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) ux))))) 0.0) (/ (* (sin (* uy (* 2.0 PI))) (* (sqrt (- ux (fma ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) ux)))) (* (sin (* uy (* 2.0 PI))) (sqrt (- ux (fma ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) ux))))))) (* (sin (* uy (* 2.0 PI))) (sqrt (- ux (fma ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) ux)))))) (* (sin (* uy (* 2.0 PI))) (sqrt (- ux (fma ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) (- (* ux ux) ux))))))",
    "output_parens": 74,
    "avg_bits_err_input": 13.44394324418557,
    "avg_bits_err_output": 0.6236483407317518,
    "avg_bits_err_improve": 12.820294903453819,
    "time": 26196.85546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- ux (* ux (+ (- ux 1.0) (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.495645621433516,
    "avg_bits_err_output": 0.33124876989148794,
    "avg_bits_err_improve": 13.164396851542028,
    "time": 24439.91845703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) xi) (fma (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* (sin (* uy (* 2.0 PI))) yi) (* (* (- 1.0 ux) maxCos) (* ux zi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.32794533011683163,
    "avg_bits_err_output": 0.3192631001757534,
    "avg_bits_err_improve": 0.008682229941078257,
    "time": 37913.27587890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19663710765478196,
    "avg_bits_err_output": 0.1968352279673721,
    "avg_bits_err_improve": -0.0001981203125901443,
    "time": 24395.31298828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ (/ u1 (- 1.0 u1)) 2.0) 0.0) (/ (+ (/ (* u1 u1) (* (- 2.0 (+ u1 u1)) (- 2.0 (+ u1 u1)))) (* (/ (/ u1 (- 1.0 u1)) 2.0) (/ (/ u1 (- 1.0 u1)) 2.0))) (/ (/ u1 (- 1.0 u1)) 2.0)) (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 30,
    "avg_bits_err_input": 0.5584054131264333,
    "avg_bits_err_output": 0.5682955758052319,
    "avg_bits_err_improve": -0.009890162678798609,
    "time": 22208.495849609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (log1p (expm1 (/ u1 (- 1.0 u1))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3288798706505123,
    "avg_bits_err_output": 0.34642305772143345,
    "avg_bits_err_improve": -0.017543187070921173,
    "time": 22105.4296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (/ (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s))))))) (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 70,
    "avg_bits_err_input": 0.34622139490544057,
    "avg_bits_err_output": 0.3156888209452481,
    "avg_bits_err_improve": 0.03053257396019249,
    "time": 54444.611328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0604678217642843,
    "avg_bits_err_output": 0.0604678217642843,
    "avg_bits_err_improve": 0,
    "time": 12643.508056640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 1.0)) (+ (* s (exp (/ (fabs x) (- s)))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14691469672015062,
    "avg_bits_err_output": 0.13421576235723232,
    "avg_bits_err_improve": 0.012698934362918302,
    "time": 11601.442626953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6377393741706877,
    "avg_bits_err_output": 0.6403502679299644,
    "avg_bits_err_improve": -0.0026108937592767,
    "time": 19626.755126953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.16001236850351017,
    "avg_bits_err_output": 0.15965373301264021,
    "avg_bits_err_improve": 0.00035863549086995183,
    "time": 19949.810791015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5661096639661056,
    "avg_bits_err_output": 2.5661096639661056,
    "avg_bits_err_improve": 0,
    "time": 32186.5634765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* cosTheta_i (/ (* (/ (exp (* (/ sinTheta_i v) (- sinTheta_O))) (+ v v)) (/ cosTheta_O (sinh (/ 1.0 v)))) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.45987599673795104,
    "avg_bits_err_output": 0.38949530858020504,
    "avg_bits_err_improve": 0.07038068815774601,
    "time": 24140.48046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= 0.6931 0.0) (/ (+ 0.48038761 (* 0.6931 (+ (log (/ 0.5 v)) (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v)))) 0.6931) (+ (log (/ 0.5 v)) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) 0.6931))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.11523247469693938,
    "avg_bits_err_output": 0.12156762818966665,
    "avg_bits_err_improve": -0.006335153492727272,
    "time": 10934.277587890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (+ (- 2.0 (* alpha (+ alpha alpha))) (- 2.0 (* alpha (+ alpha alpha)))) (- (* (* 4.0 (log (* alpha alpha))) (* PI (fma cosTheta (- (* alpha (* alpha cosTheta)) cosTheta) 1.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.4714917115735817,
    "avg_bits_err_output": 0.4707861235005302,
    "avg_bits_err_improve": 0.000705588073051544,
    "time": 26222.674560546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(+ (fma (- (- 3.0 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333)))))) s (* s (- 3.0 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))) (* s (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))",
    "output_parens": 19,
    "avg_bits_err_input": 1.3181925752395882,
    "avg_bits_err_output": 1.2946060984236385,
    "avg_bits_err_improve": 0.02358647681594972,
    "time": 27820.178955078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (+ s (- (* (log (/ 1.0 (fma u -4.0 1.0))) (+ s s)) s)) 2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 12.398654350062245,
    "avg_bits_err_output": 12.413411935245158,
    "avg_bits_err_improve": -0.014757585182913147,
    "time": 22883.98681640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(/ (+ (* 0.25 (/ (exp (/ (- r) s)) (- (* (exp (log1p (* 2.0 PI))) s) s))) (* 0.75 (/ (exp (/ (/ r -3.0) s)) (* s (* PI 6.0))))) r)",
    "output_parens": 19,
    "avg_bits_err_input": 0.14816826612545544,
    "avg_bits_err_output": 0.1520710592811115,
    "avg_bits_err_improve": -0.003902793155656059,
    "time": 24158.050537109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8504139139318614,
    "avg_bits_err_output": 0.6707863880381181,
    "avg_bits_err_improve": 0.1796275258937433,
    "time": 23544.259033203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (+ c (* (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta))))) -1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6964411828804143,
    "avg_bits_err_output": 0.4927241620292572,
    "avg_bits_err_improve": 0.20371702085115717,
    "time": 22718.338134765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (if (!= (* 2.0 (* PI u2)) 0.0) (/ 4.0 (* (/ 2.0 u2) (/ 1.0 PI))) (* 2.0 (* PI u2)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.626070382870543,
    "avg_bits_err_output": 13.639374113121319,
    "avg_bits_err_improve": -0.013303730250775914,
    "time": 25738.80908203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (<= u1 3.000000106112566e-7) (log (+ 1.0 (expm1 (* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (- (log (+ 1.0 (expm1 (* (exp (log1p (log (- 1.0 u1)))) (exp (log1p (log (- 1.0 u1)))))))) 1.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (cos (* PI (* u2 2.0))))))) (if (!= (* (cos (* 2.0 (* PI u2))) (+ 1.0 (+ 1.0 (sqrt (- (log (- 1.0 u1))))))) 0.0) (* 2.0 (/ (* (sqrt (- (log (- 1.0 u1)))) (/ (+ (sqrt (- (log (- 1.0 u1)))) 2.0) (/ 1.0 (cos (* 2.0 (* PI u2)))))) (+ 4.0 (* (sqrt (- (log (- 1.0 u1)))) 2.0)))) (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2))))))",
    "output_parens": 82,
    "avg_bits_err_input": 13.667632846796424,
    "avg_bits_err_output": 12.263013619631616,
    "avg_bits_err_improve": 1.4046192271648081,
    "time": 29960.868896484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma alpha alpha (* alpha (- alpha))) (* (log (- 1.0 u0)) (* alpha (- alpha))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.226162936136163,
    "avg_bits_err_output": 14.135186633773914,
    "avg_bits_err_improve": 0.09097630236224852,
    "time": 19599.021484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ -1.0 (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay)))) (log (- 1.0 u0)))",
    "output_parens": 9,
    "avg_bits_err_input": 12.584607537057988,
    "avg_bits_err_output": 12.585684231421919,
    "avg_bits_err_improve": -0.0010766943639310966,
    "time": 18255.8916015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (* PI l)) F) F))",
    "output_parens": 6,
    "avg_bits_err_input": 16.646005884411142,
    "avg_bits_err_output": 12.566528436821766,
    "avg_bits_err_improve": 4.079477447589376,
    "time": 18532.510498046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2149387218755409,
    "avg_bits_err_output": 0.15225,
    "avg_bits_err_improve": 0.06268872187554089,
    "time": 23464.663818359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.858444100164588,
    "avg_bits_err_output": 10.771293920432264,
    "avg_bits_err_improve": 3.0871501797323244,
    "time": 21969.676513671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (fma (- (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (/ PI -4.0))",
    "output_parens": 66,
    "avg_bits_err_input": 61.69862389366804,
    "avg_bits_err_output": 61.69520816724129,
    "avg_bits_err_improve": 0.0034157264267520304,
    "time": 110557.9482421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.0165951562062,
    "avg_bits_err_output": 34.268147166991135,
    "avg_bits_err_improve": 8.748447989215066,
    "time": 30718.5888671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.802986425580912,
    "avg_bits_err_output": 3.802986425580912,
    "avg_bits_err_improve": 0,
    "time": 28153.72802734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (- (sqrt (- (* (pow (* 2.0 (/ l Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)) -1.0) 1.0)) 0.5)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9689041181878356,
    "avg_bits_err_output": 0.9706541181878356,
    "avg_bits_err_improve": -0.0017500000000000293,
    "time": 12676.863037109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 10.004405037257653,
    "avg_bits_err_improve": 0,
    "time": 19215.34765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-289) (sqrt (* U (* (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om))))) (* 2.0 n)))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e+307) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (if (!= (* n (pow (/ l Om) 2.0)) 0.0) (/ 1.0 (/ 1.0 (* n (pow (/ l Om) 2.0)))) (* n (pow (/ l Om) 2.0))) (- U U*))))) (sqrt (* U (* (- t (fma n (* (pow (/ l Om) 2.0) (- U U*)) (* 2.0 (* l (/ l Om))))) (* 2.0 n))))))",
    "output_parens": 81,
    "avg_bits_err_input": 34.3563435188631,
    "avg_bits_err_output": 28.419593131678887,
    "avg_bits_err_improve": 5.936750387184212,
    "time": 39212.975341796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (/ (sin k) l) (tan k))) (* (/ (pow t 3.0) l) (pow (/ k t) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.70244897910644,
    "avg_bits_err_output": 36.49879467927511,
    "avg_bits_err_improve": 11.203654299831335,
    "time": 43632.7763671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (/ (tan k) l)) (* (+ 2.0 (pow (/ k t) 2.0)) (* (pow t 3.0) (/ (sin k) l))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.00405801311554,
    "avg_bits_err_output": 26.492813627255902,
    "avg_bits_err_improve": 5.511244385859637,
    "time": 28891.8466796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (/ (* (cos th) a1) (sqrt 2.0)) a1 (* a2 (* (/ a2 (sqrt 2.0)) (cos th))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.530235153146095,
    "avg_bits_err_output": 0.4334141000173088,
    "avg_bits_err_improve": 0.09682105312878625,
    "time": 23043.788818359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(fma (/ 0.75 (sqrt k)) (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (* (/ 0.25 (sqrt k)) (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4558140234749733,
    "avg_bits_err_output": 0.4373934549939973,
    "avg_bits_err_improve": 0.018420568480976007,
    "time": 19472.8603515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma J (exp (- l)) (fma (exp (- l)) (- J) (* J (- (exp l) (exp (- l)))))) (cos (/ K 2.0))) U)",
    "output_parens": 16,
    "avg_bits_err_input": 17.295902563258757,
    "avg_bits_err_output": 17.30356318912009,
    "avg_bits_err_improve": -0.00766062586133387,
    "time": 23528.95458984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.259977517909437,
    "avg_bits_err_output": 15.259977517909437,
    "avg_bits_err_improve": 0,
    "time": 15130.780029296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.33732312031259,
    "avg_bits_err_output": 18.33732312031259,
    "avg_bits_err_improve": 0,
    "time": 26813.492919921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+280) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (/ (pow (* M (/ (/ D 2.0) d)) 2.0) l) h)))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.991339047435492,
    "avg_bits_err_output": 9.942345534585478,
    "avg_bits_err_improve": 4.048993512850014,
    "time": 26007.957275390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -1e+135) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (* V l) -5e-127) (* c0 (if (!= (sqrt (/ A (* l V))) 0.0) (/ 1.0 (/ 1.0 (sqrt (/ A (* l V))))) (sqrt (/ A (* l V))))) (if (<= (* V l) 1e-133) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) 1e+179) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (/ A l) V)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 19.489491733666977,
    "avg_bits_err_output": 15.756974192066714,
    "avg_bits_err_improve": 3.732517541600263,
    "time": 18952.3310546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* M M) 5e-314) (* (/ c0 (* w 2.0)) (+ (* d (/ (* d c0) (* D (* h (* w D))))) (sqrt (* (fma d (/ (* d c0) (* D (* h (* w D)))) M) (- (* d (/ (* d c0) (* D (* h (* w D))))) M))))) (* (+ (* c0 (/ (/ (* d (/ d w)) D) (* h D))) (sqrt (* (- (* c0 (/ (/ (* d (/ d w)) D) (* h D))) M) (fma c0 (/ (/ (* d (/ d w)) D) (* h D)) M)))) (/ c0 (+ w w))))",
    "output_parens": 53,
    "avg_bits_err_input": 59.53181243466636,
    "avg_bits_err_output": 55.058781801611765,
    "avg_bits_err_improve": 4.4730306330545915,
    "time": 43099.3701171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= h -100000.0) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (/ (* h (pow (* D (/ M (+ d d))) 2.0)) (+ l l)))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h (+ l l))))))",
    "output_parens": 30,
    "avg_bits_err_input": 26.41690728909107,
    "avg_bits_err_output": 26.174165465317746,
    "avg_bits_err_improve": 0.24274182377332565,
    "time": 42297.248291015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))",
    "output_parens": 5,
    "avg_bits_err_input": 15.39205824064325,
    "avg_bits_err_output": 15.39205824064325,
    "avg_bits_err_improve": 0,
    "time": 3483.5341796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (fma v (* v -6.0) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9870637218755409,
    "avg_bits_err_output": 0.01129248125036058,
    "avg_bits_err_improve": 0.9757712406251804,
    "time": 3885.10498046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (+ (/ (- 1.0 (* v (* v 5.0))) PI) 0.0) (- t (* v (* v t)))) (sqrt (- 2.0 (* v (* v 6.0))))) 0.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.45553459325646145,
    "avg_bits_err_output": 0.2690664311308981,
    "avg_bits_err_improve": 0.18646816212556333,
    "time": 18580.14404296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (if (!= (* 3.0 (* v v)) 0.0) (/ (* (* v v) (- 3.0 (* (* v v) 9.0))) (* 3.0 (* v v))) (+ 1.0 (* (* v v) -3.0)))) (- 1.0 (* v v))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.011167481250360578,
    "avg_bits_err_output": 0.010792481250360579,
    "avg_bits_err_improve": 0.0003749999999999986,
    "time": 11146.655517578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5285635298177244,
    "avg_bits_err_output": 0.5285635298177244,
    "avg_bits_err_improve": 0,
    "time": 9944.320556640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0529347922808627,
    "avg_bits_err_output": 2.026913551655683,
    "avg_bits_err_improve": 0.026021240625179853,
    "time": 19372.7900390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ mu (+ Vef EDonor)) Ec) KbT)))) (/ NaChar (+ 1.0 (expm1 (log1p (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.024823660533951273,
    "avg_bits_err_output": 0.02475054022136113,
    "avg_bits_err_improve": 7.312031259014418e-05,
    "time": 11090.341552734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18200977500432683,
    "avg_bits_err_output": 0.18200977500432683,
    "avg_bits_err_improve": 0,
    "time": 13889.762939453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18484082587449863,
    "avg_bits_err_output": 0.18484082587449863,
    "avg_bits_err_improve": 0,
    "time": 3784.326171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18622876449628095,
    "avg_bits_err_output": 0.18622876449628095,
    "avg_bits_err_improve": 0,
    "time": 3526.133056640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.036152592432723,
    "avg_bits_err_output": 13.036152592432723,
    "avg_bits_err_improve": 0,
    "time": 14636.0244140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.89204784365195,
    "avg_bits_err_output": 0.064875,
    "avg_bits_err_improve": 40.82717284365195,
    "time": 6354.030029296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.55902957880205,
    "avg_bits_err_output": 31.55902957880205,
    "avg_bits_err_improve": 0,
    "time": 17407.497314453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= (/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) (- INFINITY)) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a) (if (<= (/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) 4e+293) (/ (/ (+ (sqrt (- (* b_2 b_2) (* a c))) (+ (sqrt (- (* b_2 b_2) (* a c))) (* b_2 -2.0))) 2.0) a) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a)))",
    "output_parens": 50,
    "avg_bits_err_input": 33.250716627551554,
    "avg_bits_err_output": 28.63850895068999,
    "avg_bits_err_improve": 4.612207676861566,
    "time": 17154.17431640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.11813922100866,
    "avg_bits_err_output": 34.11813922100866,
    "avg_bits_err_improve": 0,
    "time": 15847.551513671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.86615493825549,
    "avg_bits_err_output": 31.104519833951805,
    "avg_bits_err_improve": 0.7616351043036858,
    "time": 16991.443359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))) 0.0) (/ 1.0 (/ 1.0 (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 22,
    "avg_bits_err_input": 32.852489982194086,
    "avg_bits_err_output": 32.85320400057796,
    "avg_bits_err_improve": -0.0007140183838743042,
    "time": 15649.298828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (if (!= (+ (+ (log1p N) 1.0) 1.0) 0.0) (/ (* (log1p N) (- (log1p N) -2.0)) (+ (log1p N) 2.0)) (log1p N)) (log N))",
    "output_parens": 15,
    "avg_bits_err_input": 29.80565365569737,
    "avg_bits_err_output": 29.816158410320025,
    "avg_bits_err_improve": -0.0105047546226551,
    "time": 12481.98193359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (/ (- -0.5 (/ 0.5 (/ x (- -1.0 x)))) (- -1.0 x)) (+ (/ 0.5 (* (/ x (- -1.0 x)) (+ 1.0 x))) (/ 1.0 (+ x (+ x 2.0)))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.266997377295024,
    "avg_bits_err_output": 14.293314852413388,
    "avg_bits_err_improve": -0.026317475118364797,
    "time": 18954.343994140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (if (!= (+ (cos x) -1.0) 0.0) (/ (* (if (!= (- 1.0 (cos x)) 0.0) (/ (* (+ (cos x) -1.0) (+ (cos x) -1.0)) (- 1.0 (cos x))) (- 1.0 (cos x))) (- (cos x) (+ (cos (+ x eps)) 1.0))) (+ (cos x) -1.0)) (+ (cos (+ x eps)) (- 1.0 (cos x)))) -1.0)",
    "output_parens": 33,
    "avg_bits_err_input": 40.063134977209515,
    "avg_bits_err_output": 40.058108144689776,
    "avg_bits_err_improve": 0.005026832519739344,
    "time": 17536.6318359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (if (!= (+ (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0)) 0.0) (/ (- (* (+ (cbrt (+ 1.0 x)) -1.0) (+ (cbrt (+ 1.0 x)) -1.0)) (* (cbrt x) (cbrt x))) (+ (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0))) (+ (- (cbrt (+ 1.0 x)) (cbrt x)) -1.0)) 1.0)",
    "output_parens": 30,
    "avg_bits_err_input": 30.287079827296214,
    "avg_bits_err_output": 29.86388068273647,
    "avg_bits_err_improve": 0.42319914455974583,
    "time": 15795.31884765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ -1.0 (* (sin x) -2.0)) (- (* (- (* -2.0 (cos x)) -1.0) (/ 0.5 (sin x))) 0.0))",
    "output_parens": 11,
    "avg_bits_err_input": 29.820413235775288,
    "avg_bits_err_output": 29.861608396915663,
    "avg_bits_err_improve": -0.0411951611403758,
    "time": 22904.56982421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (* a 2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 33.497212251970524,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0047428209283779665,
    "time": 22320.441162109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.777319510496454,
    "avg_bits_err_output": 33.777319510496454,
    "avg_bits_err_improve": 0,
    "time": 22719.43408203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (- (/ (+ 1.0 (log (- 1.0 x))) (log1p x)) (- -1.0 (/ -1.0 (log1p x)))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.249397783302264,
    "avg_bits_err_output": 0.862326645723658,
    "avg_bits_err_improve": 60.38707113757861,
    "time": 24551.375732421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))))) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.0038189906172,
    "avg_bits_err_output": 44.226674620399905,
    "avg_bits_err_improve": 18.777144370217293,
    "time": 15663.364013671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.505118567529436,
    "avg_bits_err_output": 58.46225117975003,
    "avg_bits_err_improve": 0.04286738777940968,
    "time": 18528.49560546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(log (exp (/ (- 1.0 (/ x (tan x))) x)))",
    "output_parens": 6,
    "avg_bits_err_input": 59.799133600510245,
    "avg_bits_err_output": 59.78401688097928,
    "avg_bits_err_improve": 0.015116719530965383,
    "time": 29270.30078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (/ eps (expm1 (* eps a))) (expm1 (* eps (+ a b)))) (expm1 (* eps b)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.26191170306846,
    "avg_bits_err_output": 29.067845303928998,
    "avg_bits_err_improve": 31.194066399139466,
    "time": 25352.347900390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (- (/ -1.0 (expm1 x)) (+ (/ 1.0 (expm1 x)) 2.0)) -2.0)",
    "output_parens": 7,
    "avg_bits_err_input": 41.198204675298605,
    "avg_bits_err_output": 0.09370102870278448,
    "avg_bits_err_improve": 41.10450364659582,
    "time": 8276.81201171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.61771282688367,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.61746282688367,
    "time": 2740.1123046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.76068083760891,
    "avg_bits_err_output": 0.014410952987381808,
    "avg_bits_err_improve": 29.746269884621526,
    "time": 13432.788818359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (exp (- x)) 0.0) (+ (- 2.0 (+ (exp (- x)) (exp x))) (/ (fma (- (/ 2.0 (/ 2.0 (exp (- x))))) (/ 2.0 (/ 2.0 (exp (- x)))) (/ 2.0 (* (/ 2.0 (exp (- x))) (/ 1.0 (exp (- x)))))) (/ 2.0 (/ 2.0 (exp (- x)))))) (- 2.0 (+ (exp (- x)) (exp x)))))",
    "output_parens": 39,
    "avg_bits_err_input": 30.009672811185897,
    "avg_bits_err_output": 29.46289138343164,
    "avg_bits_err_improve": 0.546781427754258,
    "time": 20288.770263671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (/ (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))) (+ x -1.0)) (/ 1.0 (+ x -1.0))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 9.253645595574053,
    "avg_bits_err_output": 9.25759276870547,
    "avg_bits_err_improve": -0.003947173131416903,
    "time": 35521.225341796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (log (exp (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps)))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 20,
    "avg_bits_err_input": 37.19322870327347,
    "avg_bits_err_output": 37.212026009819375,
    "avg_bits_err_improve": -0.018797306545906167,
    "time": 16742.504638671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (exp (log (+ (- (sqrt (+ 1.0 x)) (sqrt x)) 3.0))) 1.0) 2.0)",
    "output_parens": 9,
    "avg_bits_err_input": 30.267771417149046,
    "avg_bits_err_output": 29.215184616369342,
    "avg_bits_err_improve": 1.0525868007797037,
    "time": 14412.1689453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (if (!= (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps))) 0.0) (/ (* (sin (+ x eps)) (- (/ (* (sin (+ x eps)) (sin (+ x eps))) (sin (+ x eps))) (* (sin (+ x eps)) (* (/ (sin x) (sin (+ x eps))) (/ (sin x) (sin (+ x eps))))))) (/ (* (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (sin (+ x eps)))) (* (sin (+ x eps)) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 65,
    "avg_bits_err_input": 37.32740431185747,
    "avg_bits_err_output": 37.348030786594705,
    "avg_bits_err_improve": -0.020626474737234446,
    "time": 20090.03369140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (* (/ (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ 1.0 x)))) (/ 1.0 (sqrt (+ 1.0 x)))) (/ 1.0 (sqrt (+ x 1.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 19.91670907442092,
    "avg_bits_err_output": 19.919427484568534,
    "avg_bits_err_improve": -0.0027184101476152023,
    "time": 13738.779296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (atan N) 0.0) (- (/ 1.0 (/ -1.0 (atan N))) (+ (- (atan (+ N 1.0))) 0.0)) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 15,
    "avg_bits_err_input": 14.767982564178892,
    "avg_bits_err_output": 14.76778749107768,
    "avg_bits_err_improve": 0.0001950731012119178,
    "time": 11733.357177734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.397892207208027,
    "avg_bits_err_output": 29.397892207208027,
    "avg_bits_err_improve": 0,
    "time": 36156.841064453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07326204570071307,
    "avg_bits_err_output": 0.07326204570071307,
    "avg_bits_err_improve": 0,
    "time": 18302.873779296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.437323458131658,
    "avg_bits_err_output": 0.31009718125612984,
    "avg_bits_err_improve": 16.12722627687553,
    "time": 9008.575927734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (/ 0.005555555555555556 (* (/ 1.0 PI) (/ 1.0 angle))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.821060747476913,
    "avg_bits_err_output": 20.838467051500192,
    "avg_bits_err_improve": -0.017406304023278807,
    "time": 28181.39794921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow b 2.0) (pow a 2.0)) (log1p (expm1 (* 2.0 (sin (* PI (/ angle 180.0))))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.81752120710567,
    "avg_bits_err_output": 30.790165997881235,
    "avg_bits_err_improve": 0.02735520922443513,
    "time": 32666.291748046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* PI (* angle -0.005555555555555556)) 0.0) (/ 1.0 (/ (/ 180.0 angle) PI)) (* angle (* PI 0.005555555555555556))))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.12189732157665,
    "avg_bits_err_output": 20.13749791679531,
    "avg_bits_err_improve": -0.015600595218661084,
    "time": 28413.030517578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17863684218813097,
    "avg_bits_err_output": 0.17853375534275098,
    "avg_bits_err_improve": 0.00010308684537999047,
    "time": 12913.867919921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3155272590284995,
    "avg_bits_err_output": 0.3158602412056423,
    "avg_bits_err_improve": -0.0003329821771428376,
    "time": 17397.33935546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ e (fma e (cos v) 1.0)) (sin v))",
    "output_parens": 5,
    "avg_bits_err_input": 0.13592403967784733,
    "avg_bits_err_output": 0.13619812031259015,
    "avg_bits_err_improve": -0.00027408063474282374,
    "time": 15858.677001953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.456186758291835,
    "avg_bits_err_output": 16.45524393850912,
    "avg_bits_err_improve": 0.000942819782714821,
    "time": 32761.814208984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.65e+16) (+ (* (if (!= (/ b a) 0.0) (/ (fma (/ b a) (/ (sqrt (fma c (* a -4.0) (* b b))) a) (* (/ b (- a)) (/ b a))) (/ b a)) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a)) 0.25) (/ (/ (- (sqrt (fma b b (* a (* c -4.0)))) b) a) 4.0)) (/ (- (- (- (sqrt (fma c (* a -4.0) (* b b))) -1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 42,
    "avg_bits_err_input": 52.120791713719925,
    "avg_bits_err_output": 49.97965112478997,
    "avg_bits_err_improve": 2.1411405889299573,
    "time": 28551.470703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (+ (* (- (sqrt (fma a (* -4.0 c) (* b b))) b) (* (/ (+ b (sqrt (fma a (* -4.0 c) (* b b)))) (+ b (sqrt (fma a (* -4.0 c) (* b b))))) 0.5)) (/ (fma (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))) (- (* b b))) (+ b (+ (sqrt (fma a (* -4.0 c) (* b b))) (+ b (sqrt (fma a (* -4.0 c) (* b b)))))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 56,
    "avg_bits_err_input": 28.605496859858842,
    "avg_bits_err_output": 28.03216053973223,
    "avg_bits_err_improve": 0.5733363201266108,
    "time": 30633.182861328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma -4.0 (* a c) (* b b)))) 0.0) (+ (/ (fma (- (sqrt (fma a (* -4.0 c) (* b b)))) (sqrt (fma a (* -4.0 c) (* b b))) (* (sqrt (fma a (* -4.0 c) (* b b))) (sqrt (fma a (* -4.0 c) (* b b))))) (- (+ b (sqrt (fma a (* -4.0 c) (* b b)))))) (* (- (sqrt (fma a (* -4.0 c) (* b b))) b) (/ (+ b (sqrt (fma a (* -4.0 c) (* b b)))) (+ b (sqrt (fma a (* -4.0 c) (* b b))))))) (- (sqrt (fma -4.0 (* a c) (* b b))) b)) (* a 2.0))",
    "output_parens": 58,
    "avg_bits_err_input": 43.99124497118306,
    "avg_bits_err_output": 42.84175635877838,
    "avg_bits_err_improve": 1.1494886124046744,
    "time": 28014.934814453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (* a 2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 33.50072855114043,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0012265217584683796,
    "time": 22730.914306640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (log1p (expm1 (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8208514187129492,
    "avg_bits_err_output": 0.858202933617087,
    "avg_bits_err_improve": -0.037351514904137795,
    "time": 24420.65771484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (log (exp (+ 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 29,
    "avg_bits_err_input": 29.025259517857783,
    "avg_bits_err_output": 29.019135255843306,
    "avg_bits_err_improve": 0.006124262014477466,
    "time": 22390.56982421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(+ (fma (/ (exp (- x)) (- (- (exp x)) (exp (- x)))) (/ (exp (- x)) (+ (exp x) (exp (- x)))) (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) (/ (exp (- x)) (+ (exp x) (exp (- x)))))) (- (/ (* (exp x) (exp x)) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x))))) (/ (* (exp (- x)) (exp (- x))) (* (+ (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))))",
    "output_parens": 61,
    "avg_bits_err_input": 58.14127252826874,
    "avg_bits_err_output": 58.176410172547016,
    "avg_bits_err_improve": -0.03513764427827226,
    "time": 15916.691650390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.0175177741536,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 58.010892774153604,
    "time": 10569.49951171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(expm1 (log1p (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.008563721875540865,
    "avg_bits_err_output": 0.00867932343849159,
    "avg_bits_err_improve": -0.00011560156295072413,
    "time": 2033.720703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.345625,
    "avg_bits_err_output": 32.345625,
    "avg_bits_err_improve": 0,
    "time": 4579.257568359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (+ x -1.0) -2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.49709355993969,
    "avg_bits_err_output": 0.01814624062518029,
    "avg_bits_err_improve": 58.478947319314514,
    "time": 15170.550048828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06044812031259014,
    "avg_bits_err_output": 0.06044812031259014,
    "avg_bits_err_improve": 0,
    "time": 3125.039306640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ eh (* ew (tan t)))))) (* eh (* (cos t) (sin (atan (/ eh (* ew (tan t)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12719812031259015,
    "avg_bits_err_output": 0.1265212406251803,
    "avg_bits_err_improve": 0.0006768796874098426,
    "time": 25701.240478515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12925,
    "avg_bits_err_output": 0.12925,
    "avg_bits_err_improve": 0,
    "time": 24735.294677734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.41878921237882,
    "avg_bits_err_output": 3.776400656937925,
    "avg_bits_err_improve": 34.642388555440895,
    "time": 24866.681396484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.75590394101239,
    "avg_bits_err_output": 0.011280990939180448,
    "avg_bits_err_improve": 14.744622950073209,
    "time": 7365.816162109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (if (!= (+ (cos delta) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))))) 0.0) (fma (- (cos delta) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))))) (/ (fma (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (cos delta)) (fma (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (cos delta))) (* (fma (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (* (sin phi1) (sin phi1)) (* (sin phi1) (* (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (- (sin phi1))))) (/ (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (fma (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (cos delta))))) (fma (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (- (sin phi1)) (cos delta)))))",
    "output_parens": 133,
    "avg_bits_err_input": 0.15402250659705077,
    "avg_bits_err_output": 0.15656277740248734,
    "avg_bits_err_improve": -0.002540270805436562,
    "time": 39062.61376953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (if (!= (* b b) 0.0) (/ (/ (* (* b b) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b)))) b) b) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b (- b))))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 55,
    "avg_bits_err_input": 52.16219721394157,
    "avg_bits_err_output": 51.12539476227081,
    "avg_bits_err_improve": 1.0368024516707592,
    "time": 57677.6875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) 0.0) (/ (* (fma b (- b) (* (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 75,
    "avg_bits_err_input": 28.741924115096033,
    "avg_bits_err_output": 28.321122202241703,
    "avg_bits_err_improve": 0.4208019128543299,
    "time": 41717.92626953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (/ b (* a -6.0)) 0.0) (/ (fma (/ b (* a -6.0)) (/ b (* a -6.0)) (* (fma (sqrt (fma a (* c -3.0) (* b b))) 0.3333333333333333 (/ b -6.0)) (/ (/ b (* a -6.0)) a))) (/ b (* a -6.0))) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) 0.3333333333333333 (* (+ b b) -0.16666666666666666)) a))",
    "output_parens": 30,
    "avg_bits_err_input": 44.026525042560394,
    "avg_bits_err_output": 42.17683526055515,
    "avg_bits_err_improve": 1.8496897820052425,
    "time": 30001.552978515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b -1.0 (sqrt (fma b b (* c (* a -3.0))))) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.5403086642602,
    "avg_bits_err_output": 33.54010069029393,
    "avg_bits_err_improve": 0.0002079739662690372,
    "time": 21366.968017578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.392803135743739,
    "avg_bits_err_output": 13.392803135743739,
    "avg_bits_err_improve": 0,
    "time": 31348.9296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (+ (/ (- (+ x -1.0) (* x (/ x (+ x 1.0)))) (- 1.0 x)) (/ (/ x (+ x 1.0)) (- 1.0 x))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 29.25925549259497,
    "avg_bits_err_output": 0.4431942437171937,
    "avg_bits_err_improve": 28.816061248877777,
    "time": 20881.01904296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ x -1.0)) (/ x (+ 2.0 (+ x x)))) (/ x (+ 2.0 (+ x x))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.06474896725995868,
    "avg_bits_err_improve": -0.05349896725995869,
    "time": 6532.23193359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (+ (/ -1.0 (+ x 1.0)) (+ -1.0 (/ x (+ x 1.0)))) (+ x -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 14.255973601060752,
    "avg_bits_err_output": 12.398575538971741,
    "avg_bits_err_improve": 1.8573980620890111,
    "time": 18822.052490234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (!= (/ (sqrt (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))))) (- (- (pow B 2.0)) (- (pow B 2.0) (* 8.0 (* A C))))) 0.0) (+ (/ 1.0 (/ 1.0 (/ (sqrt (* (- A (- (if (!= (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) 0.0) (/ 1.0 (/ 1.0 (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) C)) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))))) (- (- (pow B 2.0)) (- (pow B 2.0) (* 8.0 (* A C))))))) (/ 1.0 (/ 1.0 (/ (sqrt (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))))) (- (- (pow B 2.0)) (- (pow B 2.0) (* 8.0 (* A C)))))))) (/ (sqrt (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* F (fma 2.0 (pow B 2.0) (* A (* C -8.0)))))) (- (* C (* A 4.0)) (pow B 2.0))))",
    "output_parens": 106,
    "avg_bits_err_input": 52.337215148945475,
    "avg_bits_err_output": 52.06672976820086,
    "avg_bits_err_improve": 0.27048538074461703,
    "time": 41058.877685546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.861659304921883,
    "avg_bits_err_output": 29.861659304921883,
    "avg_bits_err_improve": 0,
    "time": 21225.29931640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+152) (- (/ (sqrt (* (* (+ (pow B 2.0) (* (* A C) -4.0)) F) (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (+ (pow B 2.0) (* (* A C) -4.0)))) 0.0)",
    "output_parens": 44,
    "avg_bits_err_input": 52.21040211276203,
    "avg_bits_err_output": 51.096260435580014,
    "avg_bits_err_improve": 1.114141677182019,
    "time": 37431.6328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.428865641902025,
    "avg_bits_err_output": 15.428865641902025,
    "avg_bits_err_improve": 0,
    "time": 1953.19873046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (if (!= (/ (* g (- (- (sqrt (fma g g (* h (- h))))) (+ g (- g (sqrt (fma g g (* h (- h)))))))) (* g -2.0)) 0.0) (/ (* (/ (* (- g (sqrt (fma g g (* h (- h))))) (+ g g)) (* g -2.0)) (/ (* g (- (- (sqrt (fma g g (* h (- h))))) (+ g (- g (sqrt (fma g g (* h (- h)))))))) (* g -2.0))) (/ (* g (- (- (sqrt (fma g g (* h (- h))))) (+ g (- g (sqrt (fma g g (* h (- h)))))))) (* g -2.0))) (/ (* (- g (sqrt (fma g g (* h (- h))))) (+ g g)) (* g -2.0))) (- (sqrt (fma g g (* h (- h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 88,
    "avg_bits_err_input": 35.81181306384064,
    "avg_bits_err_output": 35.795493231517185,
    "avg_bits_err_improve": 0.01631983232345391,
    "time": 17744.47314453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9892646625064913,
    "avg_bits_err_output": 0.9770968046888523,
    "avg_bits_err_improve": 0.01216785781763896,
    "time": 5806.864990234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7293776763925557,
    "avg_bits_err_output": 0.7293776763925557,
    "avg_bits_err_improve": 0,
    "time": 4659.1298828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (/ (* a1 (/ a2 b2)) b1) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-289) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 5e-244) (* (/ (/ a2 b1) b2) a1) (if (<= (/ (* a1 a2) (* b1 b2)) 1e+308) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 11.259932373714525,
    "avg_bits_err_output": 3.1389305225528874,
    "avg_bits_err_improve": 8.121001851161637,
    "time": 11603.1640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5141795882180192,
    "avg_bits_err_output": 0.4405,
    "avg_bits_err_improve": 0.07367958821801923,
    "time": 19927.146484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- (hypot 1.0 x) x) 0.0) (/ (+ (* (hypot 1.0 x) (- x (hypot 1.0 x))) (* x (- x (hypot 1.0 x)))) (- x (hypot 1.0 x))) (+ x (hypot 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 53.072991959607606,
    "avg_bits_err_output": 44.54585888125473,
    "avg_bits_err_improve": 8.527133078352875,
    "time": 17536.79150390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (+ (log a) (log b)))",
    "output_parens": 4,
    "avg_bits_err_input": 5.737987692005759,
    "avg_bits_err_output": 5.737987692005759,
    "avg_bits_err_improve": 0,
    "time": 16479.355224609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (+ (* (- 1.0 x) (/ 2.0 (+ 1.0 x))) (/ (- 1.0 x) (- -1.0 x))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.014698120312590145,
    "avg_bits_err_improve": -0.0031981203125901452,
    "time": 5498.56005859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1281.353759765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* r w) (* (/ (* r w) (- 1.0 v)) (- 0.375 (* v 0.25)))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.927482184284866,
    "avg_bits_err_output": 0.3194695250679462,
    "avg_bits_err_improve": 12.60801265921692,
    "time": 18436.277099609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (+ 1.0 (+ (* x1 (* x1 3.0)) -1.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (* x1 x1) (fma (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))))) (+ x1 x1)))",
    "output_parens": 49,
    "avg_bits_err_input": 0.5116336805139391,
    "avg_bits_err_output": 0.2924716132754891,
    "avg_bits_err_improve": 0.21916206723845,
    "time": 62620.525634765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.88612866222424,
    "avg_bits_err_output": 1.3600987478036544,
    "avg_bits_err_improve": 16.526029914420587,
    "time": 6989.167724609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.22938228322697118,
    "avg_bits_err_output": 0.22938228322697118,
    "avg_bits_err_improve": 0,
    "time": 5979.674072265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2654.508544921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.76977070297973,
    "avg_bits_err_output": 0.2549578953169168,
    "avg_bits_err_improve": 14.514812807662814,
    "time": 16749.960205078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(expm1 (log1p (+ (+ (* (exp (- (fma eps x x))) (- 0.5 (/ 0.5 eps))) (* (exp (* x (+ eps -1.0))) (/ 0.5 eps))) (* (exp (* x (+ eps -1.0))) 0.5))))",
    "output_parens": 19,
    "avg_bits_err_input": 29.50826244526362,
    "avg_bits_err_output": 24.819544430435123,
    "avg_bits_err_improve": 4.688718014828499,
    "time": 15480.13623046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.027875,
    "avg_bits_err_output": 0.027875,
    "avg_bits_err_improve": 0,
    "time": 5354.561767578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (/ (+ 2.0 (+ 2.0 (* (- 2.0 (/ (/ 4.0 t) (+ (/ 2.0 t) 2.0))) (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0)))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 0.03175,
    "avg_bits_err_output": 0.0934985897404688,
    "avg_bits_err_improve": -0.061748589740468804,
    "time": 12951.378173828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (+ 1.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0)))) (+ 4.0 (- (+ (* (* 8.0 (/ t (+ 1.0 t))) (/ t (+ 1.0 t))) -1.0) -1.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 0.033625,
    "avg_bits_err_output": 0.08513684218813103,
    "avg_bits_err_improve": -0.05151184218813103,
    "time": 15057.11572265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3258.423583984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2887.18115234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2110.0146484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.869208202763694,
    "avg_bits_err_output": 0.258875,
    "avg_bits_err_improve": 7.6103332027636945,
    "time": 18878.4189453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.704921750259623,
    "avg_bits_err_output": 7.704921750259623,
    "avg_bits_err_improve": 0,
    "time": 3575.0400390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.39349772541454,
    "avg_bits_err_output": 16.39349772541454,
    "avg_bits_err_improve": 0,
    "time": 3377.739013671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (if (!= (exp (* x (* x 10.0))) 0.0) (/ 1.0 (* (/ 1.0 (exp (* 10.0 (* x x)))) (- 0.0 (* (expm1 (log1p (exp (* 10.0 (* x x))))) (/ -1.0 (exp (* 10.0 (* x x)))))))) (exp (* x (* x 10.0)))))",
    "output_parens": 27,
    "avg_bits_err_input": 3.549624384460356,
    "avg_bits_err_output": 3.5483116589903814,
    "avg_bits_err_improve": 0.0013127254699747404,
    "time": 23143.197021484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (- -2.0 (* x (+ x x))) (* (fma x x 1.0) -2.0)) (/ x (fma x x 1.0))) 0.0) (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 15.440684010593156,
    "avg_bits_err_output": 0.10012658748691901,
    "avg_bits_err_improve": 15.340557423106237,
    "time": 6874.564453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.83574125539821,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.83574125539821,
    "time": 3901.17431640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.76474219334192,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 38.76349219334192,
    "time": 4742.2119140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(if (!= (* 1.7e+308 t) 0.0) (* t (/ (* 1.7e+308 (+ -1.0 t)) t)) (/ (/ (* -1.7e+308 (- 1.7e+308 (* 1.7e+308 t))) -1.7e+308) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.30168872187554086,
    "avg_bits_err_improve": 63.69831127812446,
    "time": 28442.252197265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 4e-32 (* t t))",
    "output_parens": 2,
    "avg_bits_err_input": 61.843245613873904,
    "avg_bits_err_output": 0.4106253765672779,
    "avg_bits_err_improve": 61.43262023730663,
    "time": 7352.9130859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.777319510496454,
    "avg_bits_err_output": 33.777319510496454,
    "avg_bits_err_improve": 0,
    "time": 24491.15625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (* a 2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 33.50072855114043,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0012265217584683796,
    "time": 25154.5390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2084.420166015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.21935763276731,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 40.209107632767314,
    "time": 5209.904052734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.589307546808183,
    "avg_bits_err_output": 20.589307546808183,
    "avg_bits_err_improve": 0,
    "time": 3344.728515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (if (!= b 0.0) (+ (+ (+ b c) (+ d a)) (/ 0.0 b)) (+ a (+ b (+ c d)))) 2.0)",
    "output_parens": 11,
    "avg_bits_err_input": 3.6405157901204688,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6405157901204688,
    "time": 12980.355712890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(+ (* a (+ b d)) (* a c))",
    "output_parens": 4,
    "avg_bits_err_input": 0.034625,
    "avg_bits_err_output": 0.0405,
    "avg_bits_err_improve": -0.005874999999999998,
    "time": 6516.09716796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.024188721875540872,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0.012688721875540872,
    "time": 2713.56591796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 2837.718017578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1429.19091796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39340601562950744,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 0.14465601562950745,
    "time": 4052.998779296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- 0.5 (/ (cos x) 2.0)) 0.0) (/ (+ (* (- 0.5 (/ (cos x) 2.0)) (- 0.5 (/ (cos x) 2.0))) (* (- 0.5 (/ (cos x) 2.0)) (if (!= (+ (* (* (cos x) 0.25) (* 0.5 (cos x))) (* (fma (cos x) 0.25 -0.5) (/ (fma (cos x) 0.25 -0.5) 0.5))) 0.0) (/ (+ (* (* (fma (cos x) 0.25 -0.5) (fma (cos x) 0.25 -0.5)) (* (+ (* 0.5 (cos x)) -1.0) (+ (* 0.5 (cos x)) -1.0))) (* (* (cos x) (* (cos x) 0.125)) (* (* (cos x) 0.125) (- (cos x))))) (+ (* (* (cos x) 0.25) (* 0.5 (cos x))) (* (fma (cos x) 0.25 -0.5) (/ (fma (cos x) 0.25 -0.5) 0.5)))) (- 0.5 (* 0.5 (cos x)))))) (- 0.5 (/ (cos x) 2.0))) (- 1.0 (cos x)))",
    "output_parens": 77,
    "avg_bits_err_input": 29.811700122557763,
    "avg_bits_err_output": 29.812694669736963,
    "avg_bits_err_improve": -0.0009945471792001115,
    "time": 46002.74658203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (- (* eps (* x (/ x eps))) eps) (- (* x x) eps))))",
    "output_parens": 10,
    "avg_bits_err_input": 24.456523389874434,
    "avg_bits_err_output": 24.491986392858742,
    "avg_bits_err_improve": -0.035463002984307934,
    "time": 10224.729736328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ (if (!= (/ (sin x) (* (+ (tan x) (tan x)) 2.0)) 0.0) (fma (/ (sin x) (* (+ (tan x) (tan x)) 2.0)) (/ x (sin x)) (- (/ 2.0 (/ 4.0 (/ (sin x) (+ (tan x) (tan x))))))) (/ (/ (- x (sin x)) (+ (tan x) (tan x))) 2.0)) (/ (+ (- x (sin x)) (* (- x (sin x)) 2.0)) (+ (tan x) (+ (tan x) (+ (tan x) (tan x))))))",
    "output_parens": 47,
    "avg_bits_err_input": 29.421632279398324,
    "avg_bits_err_output": 29.423320191503706,
    "avg_bits_err_improve": -0.0016879121053818835,
    "time": 32006.6455078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005375,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.00475,
    "time": 2325.482177734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -3e+143) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 2.3e-7) (/ (* (+ (pow (+ 1.0 (/ i n)) n) -1.0) 400.0) (/ (+ i (+ i (+ i i))) n)) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 64,
    "avg_bits_err_input": 47.941282953079444,
    "avg_bits_err_output": 43.81275104469258,
    "avg_bits_err_improve": 4.1285319083868615,
    "time": 28367.43408203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* (/ d (fma d d (* c c))) b) (* a (/ c (fma c c (* d d)))))",
    "output_parens": 9,
    "avg_bits_err_input": 25.80754034068526,
    "avg_bits_err_output": 22.846996379618343,
    "avg_bits_err_improve": 2.960543961066918,
    "time": 11605.57275390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= b -3.2e+173) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (+ (* d d) (* c c))))) (if (<= b 1.8e+126) (- (/ (* b c) (+ (* d d) (* c c))) (* a (/ d (+ (* d d) (* c c))))) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (+ (* d d) (* c c)))))))",
    "output_parens": 35,
    "avg_bits_err_input": 25.95044423935469,
    "avg_bits_err_output": 24.04686950960474,
    "avg_bits_err_improve": 1.903574729749952,
    "time": 13395.009521484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035125,
    "avg_bits_err_output": 0.023856203125901452,
    "avg_bits_err_improve": 0.011268796874098552,
    "time": 7221.722900390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (log (+ 1.0 (expm1 (* (fma ux maxCos (- 1.0 ux)) (fma ux maxCos (- 1.0 ux)))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.579489360709896,
    "avg_bits_err_output": 12.408031237173681,
    "avg_bits_err_improve": 1.1714581235362154,
    "time": 25778.0390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (+ (- (* ux maxCos)) (fma ux (fma ux maxCos (- 1.0 ux)) ux)) (- (* (* ux maxCos) (fma ux maxCos (- 1.0 ux)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.63019050459329,
    "avg_bits_err_output": 0.3298262783214743,
    "avg_bits_err_improve": 13.300364226271816,
    "time": 26867.4013671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33401348843591894,
    "avg_bits_err_output": 0.32110276179757996,
    "avg_bits_err_improve": 0.012910726638338976,
    "time": 40964.13427734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.19987260553560118,
    "avg_bits_err_output": 0.19987260553560118,
    "avg_bits_err_improve": 0,
    "time": 25020.579833984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (* (- 1.0 u1) 2.0) 2.0)) (if (!= (/ u1 (- (- 4.0 (* u1 4.0)))) 0.0) (- (/ (/ (* (fma u1 0.5 u1) (- u1)) (- 2.0 (+ u1 u1))) (- u1)) 0.0) (/ (fma u1 0.5 u1) (- 2.0 (+ u1 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 28,
    "avg_bits_err_input": 0.5308800480580345,
    "avg_bits_err_output": 0.5468536155149262,
    "avg_bits_err_improve": -0.015973567456891713,
    "time": 20863.463623046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ (/ u1 4.0) (- 1.0 u1)) (/ (+ (* u1 0.5) (+ u1 (* u1 1.5))) (* (- 1.0 u1) 4.0)))) (cos (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.3397218907425026,
    "avg_bits_err_output": 0.3661263252839456,
    "avg_bits_err_improve": -0.026404434541443034,
    "time": 20728.45166015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (if (!= (/ PI s) 0.0) (/ 1.0 (/ 1.0 (/ PI s))) (/ PI s))))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.3406485254221038,
    "avg_bits_err_output": 0.34282336838359606,
    "avg_bits_err_improve": -0.002174842961492285,
    "time": 69224.66650390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (exp (log1p (exp (/ x (- s))))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05871110042782082,
    "avg_bits_err_output": 0.06816593864754583,
    "avg_bits_err_improve": -0.00945483821972501,
    "time": 17277.914306640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ s (* s (exp (/ (fabs x) (- s)))))) (+ 1.0 (exp (/ (fabs x) (- s)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16424616026081912,
    "avg_bits_err_output": 0.15109619045103134,
    "avg_bits_err_improve": 0.013149969809787776,
    "time": 21419.68701171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6632781777917213,
    "avg_bits_err_output": 0.6632781777917213,
    "avg_bits_err_improve": 0,
    "time": 20866.168701171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (- (exp (/ -2.0 v)) (* u (exp (/ -2.0 v)))) u)) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.1462528737561116,
    "avg_bits_err_output": 0.14597998184198763,
    "avg_bits_err_improve": 0.0002728919141239683,
    "time": 19075.485595703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma sinTheta_O (/ sinTheta_O (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) (fma eta eta (* sinTheta_O (/ sinTheta_O (/ (sqrt (- 1.0 (* sinTheta_O sinTheta_O))) -2.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 2.2895482299233305,
    "avg_bits_err_output": 2.2921873138502686,
    "avg_bits_err_improve": -0.002639083926938124,
    "time": 26929.556640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (/ (* (- (/ cosTheta_O v)) (* (/ (exp (* sinTheta_i (/ (- sinTheta_O) v))) v) cosTheta_i)) -1.0) (* 2.0 (sinh (/ 1.0 v))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46097934380132244,
    "avg_bits_err_output": 0.4003309301676658,
    "avg_bits_err_improve": 0.06064841363365664,
    "time": 25346.53515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (- (if (!= (/ -1.0 v) 0.0) (/ (/ (- (/ 1.0 v) (+ (log (/ 0.5 v)) 1.6931)) v) (/ -1.0 v)) (+ (log (/ 0.5 v)) (+ 1.6931 (/ -1.0 v)))) (- 1.0 (/ (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) v))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.10302601290249022,
    "avg_bits_err_output": 0.12489590273374412,
    "avg_bits_err_improve": -0.021869889831253903,
    "time": 19094.457275390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (+ (* alpha alpha) -1.0) (log (* alpha alpha))) PI) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4681064950266719,
    "avg_bits_err_output": 0.4623838616495719,
    "avg_bits_err_improve": 0.005722633377099995,
    "time": 22342.52978515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333)))) s)",
    "output_parens": 5,
    "avg_bits_err_input": 1.3060568408883189,
    "avg_bits_err_output": 1.2329778216398903,
    "avg_bits_err_improve": 0.07307901924842852,
    "time": 24739.370361328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (/ s -4.0) (- (+ (* s (* (fma (log (/ 1.0 (fma -4.0 u 1.0))) 2.0 1.0) -0.5)) (/ s 8.0)) (- (/ s 8.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 12.538021244643698,
    "avg_bits_err_output": 12.52406655140685,
    "avg_bits_err_improve": 0.013954693236847504,
    "time": 20079.072998046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (/ (/ (/ (* (exp (* r (/ -0.3333333333333333 s))) 0.75) PI) (* r s)) 6.0))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14880376278430135,
    "avg_bits_err_output": 0.16689388735264976,
    "avg_bits_err_improve": -0.01809012456834841,
    "time": 23004.119384765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8751437394991366,
    "avg_bits_err_output": 0.6872763453143915,
    "avg_bits_err_improve": 0.18786739418474507,
    "time": 23707.001220703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (* (sqrt (- 1.0 (+ cosTheta cosTheta))) (/ (exp (* cosTheta (- cosTheta))) (* cosTheta (sqrt PI)))) (- -1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7016228866725667,
    "avg_bits_err_output": 0.4931449042690519,
    "avg_bits_err_improve": 0.20847798240351478,
    "time": 21786.984130859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (- (log (+ 1.0 (expm1 (log (exp (* (exp (log1p (log (- 1.0 u1)))) (exp (log1p (log (- 1.0 u1)))))))))) 1.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 36,
    "avg_bits_err_input": 13.571038820056883,
    "avg_bits_err_output": 13.165986399089217,
    "avg_bits_err_improve": 0.4050524209676656,
    "time": 31684.550537109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(+ (fma (cos (* 2.0 (* PI u2))) (sqrt (- (log (- 1.0 u1)))) 1.0) -1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 13.618980245072857,
    "avg_bits_err_output": 13.66475501388581,
    "avg_bits_err_improve": -0.045774768812952615,
    "time": 25693.06982421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (* alpha (- alpha)) (fma alpha alpha (* alpha (- alpha))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.342785358530046,
    "avg_bits_err_output": 14.231495771713181,
    "avg_bits_err_improve": 0.11128958681686463,
    "time": 19574.572509765625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (if (!= (log (- 1.0 u0)) 0.0) (/ 1.0 (/ 1.0 (log (- 1.0 u0)))) (log (- 1.0 u0)))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.85168414432041,
    "avg_bits_err_output": 12.853209641523602,
    "avg_bits_err_improve": -0.001525497203191506,
    "time": 19293.126220703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (* (/ l (log1p (expm1 (* PI l)))) (* PI (* PI l))) (* PI l))) F) F))",
    "output_parens": 16,
    "avg_bits_err_input": 16.58024427079044,
    "avg_bits_err_output": 0.780078042527966,
    "avg_bits_err_improve": 15.800166228262475,
    "time": 20865.62646484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.20717164837040855,
    "avg_bits_err_output": 0.14606544524450715,
    "avg_bits_err_improve": 0.0611062031259014,
    "time": 15477.250732421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 14.041987773608499,
    "avg_bits_err_output": 10.668516014394317,
    "avg_bits_err_improve": 3.3734717592141816,
    "time": 23980.1064453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (fma (exp (* PI (/ f 4.0))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (* (exp (* PI (/ f -4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ PI -4.0))",
    "output_parens": 41,
    "avg_bits_err_input": 61.52293558095672,
    "avg_bits_err_output": 61.523731656705685,
    "avg_bits_err_improve": -0.0007960757489655634,
    "time": 83608.177734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* (* l l) (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.9698256132607,
    "avg_bits_err_output": 34.878204563279844,
    "avg_bits_err_improve": 8.091621049980859,
    "time": 26324.286376953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.155389877793806,
    "avg_bits_err_output": 4.155389877793806,
    "avg_bits_err_improve": 0,
    "time": 24760.24169921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (exp (log1p (sqrt (- (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0))) -1.0)))) 1.0)) 0.5)))",
    "output_parens": 18,
    "avg_bits_err_input": 1.0022106035144864,
    "avg_bits_err_output": 1.0042106035144864,
    "avg_bits_err_improve": -0.0020000000000000018,
    "time": 11501.990966796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (if (!= (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)) 0.0) (- (/ (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)) (* (fma 2.0 (pow (/ t l) 2.0) 1.0) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))) (/ 1.0 (/ 1.0 (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0))))) (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 43,
    "avg_bits_err_input": 10.401775337236556,
    "avg_bits_err_output": 10.420180268533608,
    "avg_bits_err_improve": -0.01840493129705223,
    "time": 27164.864990234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (fma U (* 2.0 (* n (- t (fma 2.0 (* l (/ l Om)) (* (pow (/ l Om) 2.0) (* (- U U*) n)))))) (fma (* U (- (* (* l (/ l Om)) -2.0) (* (pow (/ l Om) 2.0) (* (- U U*) n)))) (* 2.0 n) (* U (* (fma 2.0 (* l (/ l Om)) (* (pow (/ l Om) 2.0) (* (- U U*) n))) (* 2.0 n)))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+290) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (* (/ l Om) l))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (+ (* (* n (* 2.0 U)) (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))) (* U (* l (* (* n (/ l Om)) -4.0)))))))",
    "output_parens": 96,
    "avg_bits_err_input": 34.784326591242504,
    "avg_bits_err_output": 28.892981907381145,
    "avg_bits_err_improve": 5.891344683861359,
    "time": 34147.6396484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= l 2e-130) (/ 2.0 (* (tan k) (* (* (sin k) (/ (pow t 3.0) l)) (/ (pow (/ k t) 2.0) l)))) (if (<= l 3.2e+75) (/ 2.0 (* (* (sin k) (tan k)) (/ (* (pow (/ k t) 2.0) (pow t 3.0)) (* l l)))) (/ 2.0 (* (tan k) (* (* (sin k) (/ (pow t 3.0) l)) (/ (pow (/ k t) 2.0) l))))))",
    "output_parens": 37,
    "avg_bits_err_input": 47.17592741129102,
    "avg_bits_err_output": 36.69501492948992,
    "avg_bits_err_improve": 10.480912481801099,
    "time": 43613.8916015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (* (pow t 3.0) (/ (sin k) l)) (* (+ 2.0 (pow (/ k t) 2.0)) (tan k))) l))",
    "output_parens": 12,
    "avg_bits_err_input": 32.06283414055706,
    "avg_bits_err_output": 27.319263837122723,
    "avg_bits_err_improve": 4.7435703034343355,
    "time": 30221.93994140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (* (cos th) (+ (* a2 a2) (* a1 a1))) (sqrt 2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5179001906453743,
    "avg_bits_err_output": 0.4705815812676698,
    "avg_bits_err_improve": 0.04731860937770449,
    "time": 23680.180419921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5012922630313916,
    "avg_bits_err_output": 0.4541466945007884,
    "avg_bits_err_improve": 0.047145568530603255,
    "time": 19115.53076171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (log (+ 1.0 (expm1 (- (exp l) (exp (- l))))))) (cos (/ K 2.0))) U)",
    "output_parens": 12,
    "avg_bits_err_input": 17.579718509402472,
    "avg_bits_err_output": 17.954342130487124,
    "avg_bits_err_improve": -0.37462362108465186,
    "time": 21916.080078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K m) 0.0) 0.0 (* K (+ m n))) 2.0) M)) (exp (- (fabs (- m n)) (+ (pow (- (/ (+ m n) 2.0) M) 2.0) l))))",
    "output_parens": 18,
    "avg_bits_err_input": 14.906355391942377,
    "avg_bits_err_output": 1.2698267971651025,
    "avg_bits_err_improve": 13.636528594777275,
    "time": 14536.285400390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.52152124062518,
    "avg_bits_err_output": 17.52152124062518,
    "avg_bits_err_improve": 0,
    "time": 27935.927978515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 4e+213) (* w0 (sqrt (- 1.0 (/ (* (pow (/ (* D M) (* 2.0 d)) 2.0) h) l)))) (* w0 (sqrt (- 1.0 (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ h l))))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.68144798762942,
    "avg_bits_err_output": 10.552982082082094,
    "avg_bits_err_improve": 4.128465905547326,
    "time": 13472.547119140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* c0 (sqrt (/ A (* V l)))) -4e+294) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* c0 (sqrt (/ A (* V l)))) -4e-175) (* c0 (sqrt (/ A (* V l)))) (if (<= (* c0 (sqrt (/ A (* V l)))) 0.0) (* c0 (sqrt (/ (/ A V) l))) (if (<= (* c0 (sqrt (/ A (* V l)))) 2e+261) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (/ (* A (/ 2.0 V)) (+ l l))))))))",
    "output_parens": 46,
    "avg_bits_err_input": 19.267624367244505,
    "avg_bits_err_output": 15.013002000445393,
    "avg_bits_err_improve": 4.254622366799111,
    "time": 16633.216552734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) 4e+252) (* (/ c0 (* 2.0 w)) (fma (* c0 (* d (/ d (* h (* D (* w D)))))) 1.0 (sqrt (* (- (* c0 (* d (/ d (* h (* D (* w D)))))) M) (fma c0 (* d (/ d (* h (* D (* w D))))) M))))) (* (/ c0 (* 2.0 w)) (if (!= (sqrt (fma d (* d (* (* (/ (/ d h) D) (/ d (* w D))) (/ (* c0 (/ c0 (* w h))) (* D D)))) (- (* M M)))) 0.0) 0.0 (fma d (/ (* d (/ (/ c0 (* w h)) D)) D) (sqrt (fma d (* d (* (* (/ (/ d h) D) (/ d (* w D))) (/ (* c0 (/ c0 (* w h))) (* D D)))) (- (* M M))))))))",
    "output_parens": 96,
    "avg_bits_err_input": 59.816706543722134,
    "avg_bits_err_output": 34.724010402198154,
    "avg_bits_err_improve": 25.09269614152398,
    "time": 45988.054931640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= l -2e-37) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (* h (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) (/ (pow (* M (/ D (+ d d))) 2.0) (+ l l)))))) (if (<= l 2.8e-98) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (* (pow (/ d h) 0.5) (* (pow (/ d l) 0.5) h)) (pow (/ (* D M) (+ d d)) 2.0)) (+ l l))) (fma (pow (/ d l) 0.5) (* (pow (/ d h) 0.5) (- 1.0 (* h (/ (pow (/ (* D M) (+ d d)) 2.0) (+ l l))))) 0.0)))",
    "output_parens": 56,
    "avg_bits_err_input": 26.594621883612902,
    "avg_bits_err_output": 25.45422679137315,
    "avg_bits_err_improve": 1.1403950922397534,
    "time": 39716.5361328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) 0.0) (+ (/ (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -2.0) (- 1.0 (/ 1.0 (/ 2.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 24,
    "avg_bits_err_input": 15.363753683668655,
    "avg_bits_err_output": 14.906379840612505,
    "avg_bits_err_improve": 0.4573738430561498,
    "time": 24904.55810546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9814481203125902,
    "avg_bits_err_output": 0.01339624062518029,
    "avg_bits_err_improve": 0.9680518796874099,
    "time": 4180.857421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (- (fma 5.0 (* v v) -1.0)) PI) (* (- t (* v (* v t))) (sqrt (- 2.0 (* v (* v 6.0)))))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.4544076372987831,
    "avg_bits_err_output": 0.28258647819427085,
    "avg_bits_err_improve": 0.17182115910451223,
    "time": 19998.97998046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* 3.0 (* v v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012719360937770435,
    "avg_bits_err_output": 0.01127124062518029,
    "avg_bits_err_improve": 0.0014481203125901454,
    "time": 5355.3447265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5944290227989761,
    "avg_bits_err_output": 0.5944290227989761,
    "avg_bits_err_improve": 0,
    "time": 9631.253662109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* a (log1p (expm1 (/ (pow k m) (fma k (+ k 10.0) 1.0)))))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9715034027665266,
    "avg_bits_err_output": 2.0170016390112373,
    "avg_bits_err_improve": -0.04549823624471072,
    "time": 10610.031005859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (- (exp (/ (- Vef (- Ec (+ mu EDonor))) KbT)) -1.0)) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.015878218412193564,
    "avg_bits_err_output": 0.015878218412193564,
    "avg_bits_err_improve": 0,
    "time": 6612.46337890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18413233125324513,
    "avg_bits_err_output": 0.18341297031547465,
    "avg_bits_err_improve": 0.0007193609377704746,
    "time": 14327.0068359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (+ (* b (- b (* a (* b 3.0)))) (* a (* a a))) (* a a)))) -1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.19084249726654834,
    "avg_bits_err_output": 0.1895500160161878,
    "avg_bits_err_improve": 0.0012924812503605498,
    "time": 5363.3154296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(+ (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (+ (* (* b b) (+ a 3.0)) (* a (- a (* a a)))))) -1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.19892162183657477,
    "avg_bits_err_output": 0.19738234528119952,
    "avg_bits_err_improve": 0.0015392765553752519,
    "time": 26592.78662109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (- (- -0.5 (* x (/ 0.5 (sqrt (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.28311631048599,
    "avg_bits_err_output": 13.482384113099544,
    "avg_bits_err_improve": -0.19926780261355326,
    "time": 14728.828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (/ (/ (expm1 (* 2.0 x)) (expm1 x)) (expm1 x)) (/ 1.0 (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 41.871881448441904,
    "avg_bits_err_output": 0.083375,
    "avg_bits_err_improve": 41.78850644844191,
    "time": 7878.576171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- (if (!= (/ (- (+ x x) (sin x)) (- x (tan x))) 0.0) (/ 1.0 (/ 1.0 (/ (- (+ x x) (sin x)) (- x (tan x))))) (/ (- (+ x x) (sin x)) (- x (tan x)))) (/ (sin x) (- x (tan x)))) 2.0)",
    "output_parens": 28,
    "avg_bits_err_input": 31.219757239076408,
    "avg_bits_err_output": 31.271548230515826,
    "avg_bits_err_improve": -0.05179099143941812,
    "time": 24177.201416015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 -1.35e+154) (/ (if (!= (- b_2) 0.0) (- (/ 2.0 (/ -2.0 b_2)) 0.0) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a) (if (<= b_2 4.5e+66) (/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a) (/ (if (!= (- b_2) 0.0) 0.0 (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a)))",
    "output_parens": 31,
    "avg_bits_err_input": 33.3946016815262,
    "avg_bits_err_output": 27.94793348808181,
    "avg_bits_err_improve": 5.446668193444388,
    "time": 12857.47607421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.82572493381178,
    "avg_bits_err_output": 33.82572493381178,
    "avg_bits_err_improve": 0,
    "time": 15793.516357421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.760817682830556,
    "avg_bits_err_output": 31.019329524309633,
    "avg_bits_err_improve": 0.741488158520923,
    "time": 17543.380859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (!= (+ (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))) 0.0) (/ (fma (pow x (/ 1.0 n)) (pow x (/ 1.0 n)) (+ (* (pow x (/ 1.0 n)) (- (pow x (/ 1.0 n)))) (fma (pow (+ 1.0 x) (/ 1.0 n)) (pow (+ 1.0 x) (/ 1.0 n)) (* (pow x (/ 1.0 n)) (- (pow x (/ 1.0 n))))))) (+ (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n)))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 46,
    "avg_bits_err_input": 32.572839008559924,
    "avg_bits_err_output": 32.62012326889073,
    "avg_bits_err_improve": -0.04728426033080524,
    "time": 20905.2109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (if (!= (log1p N) 0.0) (/ 1.0 (/ 1.0 (log1p N))) (log1p N)) (log N))",
    "output_parens": 9,
    "avg_bits_err_input": 29.759153922008,
    "avg_bits_err_output": 29.78867205766488,
    "avg_bits_err_improve": -0.029518135656878997,
    "time": 12874.065673828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (- (/ -1.0 x) (+ -1.0 (/ x x))) (/ x (/ x (+ 1.0 x))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.891865061230554,
    "avg_bits_err_output": 0.0772712406251803,
    "avg_bits_err_improve": 14.814593820605374,
    "time": 13004.559326171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (+ (+ (cos (+ x eps)) -1.0) 1.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 39.967193054080916,
    "avg_bits_err_output": 39.98453859924631,
    "avg_bits_err_improve": -0.017345545165390774,
    "time": 17363.42431640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (+ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (fma (cbrt x) (cbrt x) 1.0)) 1.0) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 30.00037727883092,
    "avg_bits_err_output": 29.868738708928102,
    "avg_bits_err_improve": 0.13163856990281886,
    "time": 12138.053955078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (+ 0.5 (+ (- (cos x)) 0.5)) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.610853563576264,
    "avg_bits_err_output": 29.615353563576264,
    "avg_bits_err_improve": -0.0045000000000001705,
    "time": 22704.682373046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* c (* a 4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.953378994917635,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": -0.012162980866513351,
    "time": 22512.554443359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.98620127500834,
    "avg_bits_err_output": 33.98253561504416,
    "avg_bits_err_improve": 0.003665659964177337,
    "time": 19700.81982421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (!= (/ (+ 1.0 (log (- 1.0 x))) (log1p x)) 0.0) (/ (/ (- (* (+ 1.0 (log (- 1.0 x))) (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (log1p x)) (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ (log (- 1.0 x)) (log1p x)))",
    "output_parens": 34,
    "avg_bits_err_input": 61.454338070962,
    "avg_bits_err_output": 59.1871455333316,
    "avg_bits_err_improve": 2.2671925376304003,
    "time": 25480.14892578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (- (exp (log1p (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 1.0)) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.00612660175783,
    "avg_bits_err_output": 44.237533950949995,
    "avg_bits_err_improve": 18.768592650807832,
    "time": 11646.316650390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.77575192202896,
    "avg_bits_err_output": 58.74422023549107,
    "avg_bits_err_improve": 0.03153168653788896,
    "time": 18547.263427734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ (/ (- 1.0 (/ x (tan x))) x) 2.0) (+ (/ (- 1.0 (/ 1.0 (/ x (tan x)))) (* (/ x (/ x (tan x))) 4.0)) (log (+ 1.0 (expm1 (+ (/ 2.0 (/ x (/ (/ x (tan x)) 8.0))) (/ -0.5 (+ x x))))))))",
    "output_parens": 27,
    "avg_bits_err_input": 59.955196340111364,
    "avg_bits_err_output": 59.93883415086298,
    "avg_bits_err_improve": 0.016362189248383174,
    "time": 29289.611328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) (expm1 (* eps a)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.40087358858221,
    "avg_bits_err_output": 29.070420279058844,
    "avg_bits_err_improve": 31.330453309523364,
    "time": 25848.83984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(if (!= (/ (exp x) (expm1 x)) 0.0) (/ 1.0 (/ (expm1 x) (exp x))) (/ (exp x) (expm1 x)))",
    "output_parens": 12,
    "avg_bits_err_input": 42.19630522812508,
    "avg_bits_err_output": 0.4027075791158582,
    "avg_bits_err_improve": 41.79359764900922,
    "time": 5670.688232421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.820127470369236,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.819252470369236,
    "time": 3292.36962890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.66894960581914,
    "avg_bits_err_output": 0.018188651651654526,
    "avg_bits_err_improve": 29.650760954167485,
    "time": 5729.080810546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (if (!= (/ 1.0 (/ -1.0 (exp x))) 0.0) (/ (fma (/ 1.0 (/ -1.0 (exp x))) (/ 1.0 (/ -1.0 (exp x))) (* (/ 1.0 (/ -1.0 (exp x))) (* (- 1.0 (expm1 (- x))) (/ (exp x) (exp x))))) (/ 1.0 (/ -1.0 (exp x)))) (* (+ (exp x) (- (exp (- x)) 2.0)) (/ (exp x) (- (exp x))))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 47,
    "avg_bits_err_input": 30.426038065991328,
    "avg_bits_err_output": 29.811795888911497,
    "avg_bits_err_improve": 0.6142421770798308,
    "time": 17969.782958984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ (- (/ 4.0 (/ (- 4.0 (* x -4.0)) x)) 2.0) x) (/ 1.0 (- x 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 10.026637176608501,
    "avg_bits_err_output": 10.0566642441494,
    "avg_bits_err_improve": -0.030027067540899566,
    "time": 22697.59326171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.16310756923978,
    "avg_bits_err_output": 37.16310756923978,
    "avg_bits_err_improve": 0,
    "time": 16024.021240234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (- (sqrt (+ x 1.0)) (+ 1.0 (sqrt x))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.11088690925882,
    "avg_bits_err_output": 29.42575364174692,
    "avg_bits_err_improve": 0.6851332675119011,
    "time": 19947.565185546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps)))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 18,
    "avg_bits_err_input": 37.574983091242494,
    "avg_bits_err_output": 37.577815461611905,
    "avg_bits_err_improve": -0.002832370369411308,
    "time": 16408.567138671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (/ (+ 1.0 (/ (+ 0.5 (/ (/ 4.0 (sqrt (+ x 1.0))) (/ -4.0 (sqrt x)))) 0.5)) 2.0) (sqrt x))",
    "output_parens": 12,
    "avg_bits_err_input": 19.36414428848915,
    "avg_bits_err_output": 19.368103674247635,
    "avg_bits_err_improve": -0.003959385758484757,
    "time": 15673.4765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (fma (atan (- N -1.0)) (if (!= (/ (atan (+ N 1.0)) (+ (atan (+ N 1.0)) (atan N))) 0.0) (/ 1.0 (/ 1.0 (/ (atan (+ N 1.0)) (+ (atan (+ N 1.0)) (atan N))))) (/ (atan (+ N 1.0)) (+ (atan (+ N 1.0)) (atan N)))) (/ (* (atan N) (atan N)) (- (- (atan N)) (atan (- N -1.0))))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 47,
    "avg_bits_err_input": 14.865302624446377,
    "avg_bits_err_output": 14.869989483942412,
    "avg_bits_err_improve": -0.0046868594960347565,
    "time": 13194.97998046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.399025438664076,
    "avg_bits_err_output": 29.399025438664076,
    "avg_bits_err_improve": 0,
    "time": 37780.069091796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (* m (* (- 1.0 m) (- 1.0 m))) v) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07928328632589335,
    "avg_bits_err_output": 0.07571956445035248,
    "avg_bits_err_improve": 0.003563721875540868,
    "time": 16140.87841796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.35089717574628,
    "avg_bits_err_output": 0.3145334593805891,
    "avg_bits_err_improve": 16.036363716365692,
    "time": 10465.24169921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (if (!= (* PI (/ angle 180.0)) 0.0) (if (!= (/ 0.011111111111111112 (/ (/ 2.0 angle) PI)) 0.0) (/ (/ 6.17283950617284e-5 (/ (/ 2.0 angle) PI)) 0.005555555555555556) (/ 0.011111111111111112 (/ (/ 2.0 angle) PI))) (* PI (/ angle 180.0))))) 2.0) (pow (* b (sin (/ (* PI angle) 180.0))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 20.189043207596974,
    "avg_bits_err_output": 20.195381912522905,
    "avg_bits_err_improve": -0.006338704925930472,
    "time": 28412.90576171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (sin (* PI (/ angle 180.0))) (- (pow a 2.0) (pow b 2.0))) (* -2.0 (cos (* PI (/ angle 180.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.20189951601392,
    "avg_bits_err_output": 31.18941828122393,
    "avg_bits_err_improve": 0.012481234789991191,
    "time": 31165.173828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (expm1 (log1p (log1p (expm1 (sin (* angle (/ PI 180.0)))))))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 19.956372670681894,
    "avg_bits_err_output": 19.92002225360436,
    "avg_bits_err_improve": 0.036350417077535724,
    "time": 28181.6962890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (* (/ (- 1.0 m) v) m) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17507928248159613,
    "avg_bits_err_output": 0.23068324536899787,
    "avg_bits_err_improve": -0.05560396288740174,
    "time": 14906.175048828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3109950042093892,
    "avg_bits_err_output": 0.3078494231235754,
    "avg_bits_err_improve": 0.003145581085813809,
    "time": 16794.86962890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(* (/ e (fma e (cos v) 1.0)) (sin v))",
    "output_parens": 5,
    "avg_bits_err_input": 0.1321887218755409,
    "avg_bits_err_output": 0.130136842188131,
    "avg_bits_err_improve": 0.0020518796874098855,
    "time": 16256.054931640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.180040983176863,
    "avg_bits_err_output": 17.173622824649676,
    "avg_bits_err_improve": 0.00641815852718608,
    "time": 31405.150390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (fma b b (* (sqrt (fma b b (* c (* a -4.0)))) (- b))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (/ (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 4.0))",
    "output_parens": 27,
    "avg_bits_err_input": 52.74936595178498,
    "avg_bits_err_output": 51.620844992561004,
    "avg_bits_err_improve": 1.1285209592239767,
    "time": 33344.381591796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (- (* b (/ -0.25 a)) (/ (+ (sqrt (fma b b (* a (* -4.0 c)))) (fma (- (sqrt (fma b b (* a (* -4.0 c)))) b) 2.0 (sqrt (fma b b (* a (* -4.0 c)))))) (* a 8.0))) 0.0) (* (- (* b (/ -0.25 a)) (/ (+ (sqrt (fma b b (* a (* -4.0 c)))) (fma (- (sqrt (fma b b (* a (* -4.0 c)))) b) 2.0 (sqrt (fma b b (* a (* -4.0 c)))))) (* a 8.0))) (/ (fma b (/ -0.25 a) (/ (+ (sqrt (fma b b (* a (* -4.0 c)))) (fma (- (sqrt (fma -4.0 (* a c) (* b b))) b) 2.0 (sqrt (fma b b (* a (* -4.0 c)))))) (* a 8.0))) (- (* b (/ -0.25 a)) (/ (+ (sqrt (fma b b (* a (* -4.0 c)))) (fma (- (sqrt (fma b b (* a (* -4.0 c)))) b) 2.0 (sqrt (fma b b (* a (* -4.0 c)))))) (* a 8.0))))) (/ (+ (sqrt (fma b b (* a (* -4.0 c)))) (fma (- (sqrt (fma b b (* a (* -4.0 c)))) b) 2.0 (fma b -2.0 (sqrt (fma b b (* a (* -4.0 c))))))) (* a 8.0)))",
    "output_parens": 101,
    "avg_bits_err_input": 28.589142920712227,
    "avg_bits_err_output": 28.044839719870204,
    "avg_bits_err_improve": 0.5443032008420232,
    "time": 34738.39990234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) a) 0.25) (if (!= (/ (* b -0.25) a) 0.0) (/ (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (* b (/ -0.25 a)) (- (* b (* b (/ -0.25 a))))) (* a 4.0)) (/ (* b -0.25) a)) (* (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a) 0.25)))",
    "output_parens": 35,
    "avg_bits_err_input": 44.01897761971098,
    "avg_bits_err_output": 43.014666332669684,
    "avg_bits_err_improve": 1.004311287041297,
    "time": 26672.95849609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96554197578415,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": 0,
    "time": 20676.62646484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (log1p (expm1 (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8053622766329612,
    "avg_bits_err_output": 0.8047002363542739,
    "avg_bits_err_improve": 0.0006620402786873258,
    "time": 23666.728759765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (<= (* -2.0 x) 0.002) (/ (expm1 (* -2.0 x)) (- -1.0 (exp (* -2.0 x)))) (- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 28.53750820755532,
    "avg_bits_err_output": 0.017310617467826656,
    "avg_bits_err_improve": 28.52019759008749,
    "time": 15692.879638671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(if (!= (+ (/ (exp (- x)) (- (- (exp (- x))) (exp x))) (/ (exp x) (- (- (exp (- x))) (exp x)))) 0.0) (/ (+ (fma (/ (exp x) (- (- (exp x)) (exp (- x)))) (/ (exp x) (+ (exp (- x)) (exp x))) (* (/ (exp x) (+ (exp (- x)) (exp x))) (/ (exp x) (+ (exp (- x)) (exp x))))) (/ (- (exp (- x)) (exp x)) (+ (exp (- x)) (exp x)))) (+ (/ (exp (- x)) (- (- (exp (- x))) (exp x))) (/ (exp x) (- (- (exp (- x))) (exp x))))) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))",
    "output_parens": 81,
    "avg_bits_err_input": 58.14652874571676,
    "avg_bits_err_output": 58.14684285081796,
    "avg_bits_err_improve": -0.0003141051012036655,
    "time": 17299.8525390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (if (!= (- (exp x) (- (exp (- x)))) 0.0) (/ (- (* (exp x) (exp x)) (log (exp (* (exp (- x)) (exp (- x)))))) (- (exp x) (- (exp (- x))))) (- (exp x) (exp (- x)))) 2.0)",
    "output_parens": 29,
    "avg_bits_err_input": 58.07901046630942,
    "avg_bits_err_output": 58.272265948843774,
    "avg_bits_err_improve": -0.19325548253435443,
    "time": 14475.828369140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009823120312590146,
    "avg_bits_err_output": 0.009823120312590146,
    "avg_bits_err_improve": 0,
    "time": 2252.841796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.753875,
    "avg_bits_err_output": 31.753875,
    "avg_bits_err_improve": 0,
    "time": 5200.9736328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (expm1 (log (if (!= (/ (/ (* x x) (+ -1.0 x)) (+ -1.0 x)) 0.0) (/ (* (/ (- (/ (* x x) (- 1.0 x)) (/ 1.0 (- 1.0 x))) (+ -1.0 x)) (/ 2.0 (/ 2.0 (/ x (+ -1.0 x))))) (/ x (+ -1.0 x))) (/ (- -1.0 x) (+ -1.0 x)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 58.76182474844535,
    "avg_bits_err_output": 58.78151401087319,
    "avg_bits_err_improve": -0.019689262427839083,
    "time": 16867.721923828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.03475,
    "avg_bits_err_output": 0.0345,
    "avg_bits_err_improve": 0.0002500000000000002,
    "time": 2520.22998046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12694812031259015,
    "avg_bits_err_output": 0.12694812031259015,
    "avg_bits_err_improve": 0,
    "time": 22849.1513671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (fma (cos t) (* ew (cos (atan (* eh (/ (tan t) (- ew)))))) 0.0) (* eh (* (sin t) (sin (atan (* (- eh) (/ (tan t) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.126,
    "avg_bits_err_output": 0.1245,
    "avg_bits_err_improve": 0.0015000000000000013,
    "time": 29460.6787109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.209571044582276,
    "avg_bits_err_output": 3.913578454997839,
    "avg_bits_err_improve": 35.295992589584436,
    "time": 23029.067138671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.451062335672834,
    "avg_bits_err_output": 0.011030990939180448,
    "avg_bits_err_improve": 14.440031344733653,
    "time": 6009.520263671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (fma (sin phi1) (- (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))) (cos delta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15682207471488516,
    "avg_bits_err_output": 0.15305546417578572,
    "avg_bits_err_improve": 0.0037666105390994353,
    "time": 31766.747314453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ (/ b a) -3.0)) 0.0) (/ (fma (/ 0.3333333333333333 a) (/ (* 0.3333333333333333 (* (sqrt (fma a (* -3.0 c) (* b b))) (sqrt (fma a (* -3.0 c) (* b b))))) a) (- (/ (/ (/ (* b b) a) a) 9.0))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ (/ b a) -3.0))) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333))",
    "output_parens": 46,
    "avg_bits_err_input": 52.787022170868994,
    "avg_bits_err_output": 50.73863257317397,
    "avg_bits_err_improve": 2.048389597695021,
    "time": 30805.77880859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ 0.16666666666666666 a)) 0.0) (/ 1.0 (/ 3.0 (/ (if (!= (+ b (sqrt (fma a (* c -3.0) (* b b)))) 0.0) (/ (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b))) (+ b (sqrt (fma a (* c -3.0) (* b b))))) (- (sqrt (fma a (* c -3.0) (* b b))) b)) a))) (if (!= (/ (- (* b -0.3333333333333333) (* (sqrt (fma c (* a -3.0) (* b b))) 0.3333333333333333)) a) 0.0) (* (/ (fma (sqrt (fma c (* a -3.0) (* b b))) 0.3333333333333333 (- (* b -0.3333333333333333))) a) (- (/ (fma b -0.3333333333333333 (* (sqrt (fma c (* a -3.0) (* b b))) 0.3333333333333333)) (fma (sqrt (fma c (* a -3.0) (* b b))) 0.3333333333333333 (- (* b -0.3333333333333333)))) (/ 0.0 a))) (/ (fma b -0.3333333333333333 (* (sqrt (fma c (* a -3.0) (* b b))) 0.3333333333333333)) a)))",
    "output_parens": 83,
    "avg_bits_err_input": 28.74547855708578,
    "avg_bits_err_output": 28.239404123494186,
    "avg_bits_err_improve": 0.5060744335915928,
    "time": 28959.790771484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (fma (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* (* b (- b)) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))))) (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 85,
    "avg_bits_err_input": 44.08677076960128,
    "avg_bits_err_output": 43.0973346055678,
    "avg_bits_err_improve": 0.9894361640334779,
    "time": 34626.221923828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b -0.3333333333333333) (* (sqrt (+ (* b b) (* a (* c -3.0)))) 0.3333333333333333)) a)",
    "output_parens": 9,
    "avg_bits_err_input": 34.00292884734385,
    "avg_bits_err_output": 34.049292194984396,
    "avg_bits_err_improve": -0.046363347640543395,
    "time": 21078.452392578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (if (!= (* (cos (- lambda1 lambda2)) (sin phi1)) 0.0) (/ 1.0 (/ 1.0 (* (cos (- lambda1 lambda2)) (sin phi1)))) (* (cos (- lambda1 lambda2)) (sin phi1))))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.311878993256501,
    "avg_bits_err_output": 13.319800150503582,
    "avg_bits_err_improve": -0.007921157247080757,
    "time": 30955.619873046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (+ (/ (- (+ x -1.0) (* x (/ x (+ x 1.0)))) (- 1.0 x)) (/ (/ x (+ x 1.0)) (- 1.0 x))) (/ 2.0 (+ x -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 29.710162012746203,
    "avg_bits_err_output": 0.44546961469513185,
    "avg_bits_err_improve": 29.26469239805107,
    "time": 21119.3427734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ x -1.0)) (/ x (+ x (+ x 2.0)))) (- (/ x (+ x (+ x 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.009375,
    "avg_bits_err_output": 0.026718900368805136,
    "avg_bits_err_improve": -0.017343900368805135,
    "time": 4111.828369140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- (/ (- (- -2.0 x) x) (+ x -1.0)) -2.0) (+ x (+ x 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.884995437822148,
    "avg_bits_err_output": 14.92272458621435,
    "avg_bits_err_improve": -0.037729148392202205,
    "time": 17868.447509765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 4e+165) (/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C) (- A)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C))))) 0.0)",
    "output_parens": 45,
    "avg_bits_err_input": 52.0230816104221,
    "avg_bits_err_output": 50.8100443384284,
    "avg_bits_err_improve": 1.2130372719937057,
    "time": 38161.228759765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 29.12373037427018,
    "avg_bits_err_output": 29.123605421787,
    "avg_bits_err_improve": 0.0001249524831798965,
    "time": 26252.664306640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(- (/ (sqrt (* (* (+ (pow B 2.0) (* (* A C) -4.0)) F) (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (+ (pow B 2.0) (* (* A C) -4.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 51.50106194647084,
    "avg_bits_err_output": 51.2069757787437,
    "avg_bits_err_improve": 0.29408616772714424,
    "time": 35516.484619140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.469744216549094,
    "avg_bits_err_output": 15.469744216549094,
    "avg_bits_err_improve": 0,
    "time": 1956.650146484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (fma g -1.0 (sqrt (* (+ g h) (- g h)))))) (cbrt (* (/ -0.5 a) (if (!= g 0.0) (+ (/ (* g (sqrt (* (+ g h) (- g h)))) (+ g g)) (/ (* g (+ g (+ g (sqrt (* (+ g h) (- g h)))))) (+ g g))) (+ g (sqrt (- (* g g) (* h h))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 35.493450781234436,
    "avg_bits_err_output": 35.41307682447952,
    "avg_bits_err_improve": 0.08037395675491865,
    "time": 13409.71044921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9897246250072126,
    "avg_bits_err_output": 0.9769718046888524,
    "avg_bits_err_improve": 0.012752820318360225,
    "time": 5808.409423828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7338443609377705,
    "avg_bits_err_output": 0.7338443609377705,
    "avg_bits_err_improve": 0,
    "time": 3098.953857421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-296) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+307) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 36,
    "avg_bits_err_input": 10.946943699076499,
    "avg_bits_err_output": 2.119424527693833,
    "avg_bits_err_improve": 8.827519171382665,
    "time": 8403.11279296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(+ (* x y) (+ (log1p (exp x)) (* (- x) (+ y y))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.45766730763229724,
    "avg_bits_err_output": 0.45382312031259014,
    "avg_bits_err_improve": 0.003844187319707093,
    "time": 11202.11572265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -2e-7) (log (if (!= (- 2.0 (+ x (hypot 1.0 x))) 0.0) (/ (fma (+ x (+ (hypot 1.0 x) -1.0)) (+ x (+ (hypot 1.0 x) -1.0)) -1.0) (+ (+ x (hypot 1.0 x)) -2.0)) (+ x (hypot 1.0 x)))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 53.15309295628262,
    "avg_bits_err_output": 13.942000534011642,
    "avg_bits_err_improve": 39.21109242227098,
    "time": 14667.042724609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(exp (- -1.0 (- (- -1.0 (log a)) (log b))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.671864244806499,
    "avg_bits_err_output": 5.6730199652428865,
    "avg_bits_err_improve": -0.001155720436387675,
    "time": 12173.002685546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01525,
    "avg_bits_err_output": 0.01525,
    "avg_bits_err_improve": 0,
    "time": 2853.5859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1274.413818359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(/ (- 20.25 (* (- (+ 3.0 (/ 2.0 (* r r))) (* (* (- 3.0 (+ v v)) (/ (* w r) (- 1.0 v))) (* w (* r 0.125)))) 4.5)) -4.5)",
    "output_parens": 16,
    "avg_bits_err_input": 12.854716806468947,
    "avg_bits_err_output": 0.46355161473487927,
    "avg_bits_err_improve": 12.391165191734068,
    "time": 23149.111328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (+ (* (* x1 x1) (* (/ (- x1 (fma x1 (* x1 3.0) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) (* (* (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (/ (* x1 2.0) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))))) (+ x1 x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5202355044794914,
    "avg_bits_err_output": 0.2530171728176239,
    "avg_bits_err_improve": 0.2672183316618675,
    "time": 66953.42309570312,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* -2.0 (* v (/ t1 (+ t1 (+ t1 (+ u u)))))) (+ t1 u))",
    "output_parens": 8,
    "avg_bits_err_input": 18.55169286973226,
    "avg_bits_err_output": 1.2665605447565922,
    "avg_bits_err_improve": 17.285132324975667,
    "time": 6550.7294921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.23429268476294263,
    "avg_bits_err_output": 0.1932312031259014,
    "avg_bits_err_improve": 0.041061481637041236,
    "time": 7924.941162109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00325,
    "avg_bits_err_output": 0.00325,
    "avg_bits_err_improve": 0,
    "time": 2826.5234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))) (+ b a)) (- b a))",
    "output_parens": 9,
    "avg_bits_err_input": 14.10479569368505,
    "avg_bits_err_output": 0.2871588359478664,
    "avg_bits_err_improve": 13.817636857737183,
    "time": 16167.146240234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.01462423991279,
    "avg_bits_err_output": 24.387018711539447,
    "avg_bits_err_improve": 4.627605528373344,
    "time": 24454.481201171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (- 2.0 (/ (/ 2.0 t) (+ 2.0 (/ 2.0 t)))) (- (/ (/ 2.0 t) (+ 2.0 (/ 2.0 t)))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.02,
    "avg_bits_err_output": 0.020875,
    "avg_bits_err_improve": -0.0008750000000000008,
    "time": 6718.6279296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (+ (/ (- 4.0 (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))) (* t (+ 1.0 (/ 1.0 t)))) (/ (/ 8.0 t) (+ (/ 2.0 t) 2.0))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (- 2.0 (/ (/ 2.0 t) (+ (/ 2.0 t) 2.0))) (- (/ (/ 2.0 t) (+ (/ 2.0 t) 2.0)))))))",
    "output_parens": 35,
    "avg_bits_err_input": 0.0245,
    "avg_bits_err_output": 0.06860620312590145,
    "avg_bits_err_improve": -0.044106203125901446,
    "time": 20893.00732421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (/ (* t 4.0) (+ t 1.0)))) (+ 2.0 (* (/ t (+ t 1.0)) (/ (* t 4.0) (+ t 1.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.022375,
    "avg_bits_err_output": 0.078375,
    "avg_bits_err_improve": -0.056,
    "time": 10331.79443359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3469.24365234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2678.2802734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2227.338134765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.807484438451687,
    "avg_bits_err_output": 0.24925,
    "avg_bits_err_improve": 7.558234438451687,
    "time": 21230.850341796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.429971816061293,
    "avg_bits_err_output": 7.429971816061293,
    "avg_bits_err_improve": 0,
    "time": 3628.762939453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(if (!= (pow (+ x eps) 2.0) 0.0) (- (* (pow (+ x eps) 2.0) (log (+ 1.0 (expm1 (+ (/ (pow x 2.0) (pow (+ x eps) 2.0)) -1.0)))))) (- (pow (+ x eps) 2.0) (pow x 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 16.15167030008723,
    "avg_bits_err_output": 16.157080571249505,
    "avg_bits_err_improve": -0.0054102711622761035,
    "time": 18930.22900390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (log1p (log (+ 1.0 (expm1 (expm1 (cos x)))))) (if (!= (exp (* 10.0 (* x x))) 0.0) (/ 1.0 (/ 1.0 (exp (* 10.0 (* x x))))) (exp (* 10.0 (* x x)))))",
    "output_parens": 20,
    "avg_bits_err_input": 3.509632368915222,
    "avg_bits_err_output": 3.5132595218816975,
    "avg_bits_err_improve": -0.003627152966475755,
    "time": 15984.630615234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 0.09725621061868284,
    "avg_bits_err_improve": 14.577557877493811,
    "time": 5108.985595703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.04050213454488,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.04050213454488,
    "time": 3666.582275390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.0585255882019,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.0580255882019,
    "time": 3501.560302734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(if (!= (* 1.7e+308 t) 0.0) (* t (/ (* 1.7e+308 (+ -1.0 t)) t)) (/ (/ (* -1.7e+308 (- 1.7e+308 (* 1.7e+308 t))) -1.7e+308) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.3025212406251803,
    "avg_bits_err_improve": 63.69747875937482,
    "time": 18198.952392578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* t 4e-32))",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325366599201,
    "avg_bits_err_output": 0.40269812031259017,
    "avg_bits_err_improve": 61.440555545679416,
    "time": 7330.253173828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a)",
    "output_parens": 8,
    "avg_bits_err_input": 33.98620127500834,
    "avg_bits_err_output": 33.98253561504416,
    "avg_bits_err_improve": 0.003665659964177337,
    "time": 21666.3427734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96554197578415,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": 0,
    "time": 24866.074951171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2843.479736328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.34420391507517,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": 40.33345391507517,
    "time": 3298.948974609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (+ x y) (+ (- x y) (- x y))) (- (* y (+ y y)) (- (* x (+ x x)))))",
    "output_parens": 12,
    "avg_bits_err_input": 19.965563736638746,
    "avg_bits_err_output": 19.9528084697099,
    "avg_bits_err_improve": 0.012755266928845543,
    "time": 14462.077392578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.687790786378916,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.687790786378916,
    "time": 8732.794189453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.037,
    "avg_bits_err_improve": 0,
    "time": 4784.690185546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019969360937770436,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.009594360937770436,
    "time": 3643.533203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.014374999999999999,
    "time": 4056.18310546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.00075,
    "time": 1696.111083984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40486109062806497,
    "avg_bits_err_output": 0.242875,
    "avg_bits_err_improve": 0.16198609062806496,
    "time": 5788.740478515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (if (!= (/ 2.0 (fma (cos x) -4.0 -4.0)) 0.0) (/ (fma (/ 2.0 (fma (cos x) -4.0 -4.0)) (* (fma (cos x) (* (cos x) 2.0) -1.0) (/ 2.0 (fma (cos x) -4.0 -4.0))) (- (/ 4.0 (* (fma (cos x) -4.0 -4.0) (fma (cos x) -4.0 -4.0))))) (/ 2.0 (fma (cos x) -4.0 -4.0))) (/ (fma 2.0 (fma (cos x) (* (cos x) 2.0) -1.0) -2.0) (fma (cos x) -4.0 -4.0))) (- 1.0 (cos x)))",
    "output_parens": 42,
    "avg_bits_err_input": 29.606384526306954,
    "avg_bits_err_output": 29.611956940641832,
    "avg_bits_err_improve": -0.005572414334878317,
    "time": 20076.564453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (* (/ (- (* x x) eps) eps) eps) (- (* x x) eps))))",
    "output_parens": 10,
    "avg_bits_err_input": 24.73343322037492,
    "avg_bits_err_output": 24.75851478654146,
    "avg_bits_err_improve": -0.025081566166541336,
    "time": 12667.618408203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (/ (log (+ 1.0 (expm1 (/ (- (sin x) x) (tan x))))) (tan x)) (/ -1.0 (tan x)))",
    "output_parens": 12,
    "avg_bits_err_input": 30.39446080742367,
    "avg_bits_err_output": 30.403264841571207,
    "avg_bits_err_improve": -0.00880403414753772,
    "time": 31079.70751953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007698120312590144,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.0071981203125901436,
    "time": 3146.188720703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -1.72e-123) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 1.9e+70) (+ (- (* (pow (+ 1.0 (/ i n)) n) (/ 100.0 (/ i n))) (+ 1.0 (/ 100.0 (/ i n)))) 1.0) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i i)))) n)) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 69,
    "avg_bits_err_input": 48.210164515605314,
    "avg_bits_err_output": 43.68914448926799,
    "avg_bits_err_improve": 4.521020026337325,
    "time": 28067.721435546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (- INFINITY)) (+ (* b (/ d (fma d d (* c c)))) (* c (/ a (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 5e+82) (/ (fma c a (* b d)) (+ (* c c) (* d d))) (+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 25.946804357537932,
    "avg_bits_err_output": 22.232023650433824,
    "avg_bits_err_improve": 3.714780707104108,
    "time": 12323.15478515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 4e+278) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 25.666643687069257,
    "avg_bits_err_output": 22.5628985407046,
    "avg_bits_err_improve": 3.1037451463646555,
    "time": 15450.985595703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.035875,
    "avg_bits_err_output": 0.035875,
    "avg_bits_err_improve": 0,
    "time": 12490.52685546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (if (!= (* ux ux) 0.0) (/ (* (* ux ux) (- (+ ux (- ux (* ux (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))) (* ux ux))) (* ux ux)) (+ ux (- ux (* ux (+ (* maxCos (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux)))) ux)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 13.634844888315962,
    "avg_bits_err_output": 0.5526432890182286,
    "avg_bits_err_improve": 13.082201599297735,
    "time": 25147.32421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- (if (!= (* ux (- ux)) 0.0) (/ (* (- (* ux ux) (+ ux ux)) (* ux ux)) (* ux (- ux))) (- ux (- (* ux ux) ux))) (* (* ux maxCos) (+ (* ux maxCos) (- 1.0 ux)))) (* maxCos (- (* ux ux) ux)))))",
    "output_parens": 30,
    "avg_bits_err_input": 13.671874358429502,
    "avg_bits_err_output": 0.33704633805482953,
    "avg_bits_err_improve": 13.334828020374673,
    "time": 32018.583984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (fma (sin (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) yi) (* (- 1.0 ux) (* maxCos (* ux zi)))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3319351082645813,
    "avg_bits_err_output": 0.3184340058095143,
    "avg_bits_err_improve": 0.013501102455066971,
    "time": 62197.368408203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20653324229295936,
    "avg_bits_err_output": 0.20653324229295936,
    "avg_bits_err_improve": 0,
    "time": 19182.696044921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ u1 (- 1.0 u1)) 0.0) (- (/ (* u1 (/ u1 (- 1.0 u1))) u1) 0.0) (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5450989847503924,
    "avg_bits_err_output": 0.5560479786179866,
    "avg_bits_err_improve": -0.010948993867594181,
    "time": 18433.172607421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (+ 1.0 (expm1 (* 6.28318530718 u2))))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3222715960245229,
    "avg_bits_err_output": 0.3266117059940464,
    "avg_bits_err_improve": -0.004340109969523498,
    "time": 22948.57958984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output_parens": 21,
    "avg_bits_err_input": 0.3322475408065705,
    "avg_bits_err_output": 0.3322475408065705,
    "avg_bits_err_improve": 0,
    "time": 54016.4384765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05262998408642589,
    "avg_bits_err_output": 0.05262998408642589,
    "avg_bits_err_improve": 0,
    "time": 9506.45556640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(* (/ (/ 1.0 (fma s (exp (/ (fabs x) (- s))) s)) (+ (exp (/ (fabs x) (- s))) 1.0)) (exp (/ (fabs x) (- s))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1491181812836496,
    "avg_bits_err_output": 0.1830247736151553,
    "avg_bits_err_improve": -0.0339065923315057,
    "time": 21824.1650390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6652467142518929,
    "avg_bits_err_output": 0.667276720285483,
    "avg_bits_err_improve": -0.0020300060335901593,
    "time": 20085.003173828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (if (!= (exp (/ -2.0 v)) 0.0) (/ 1.0 (/ 1.0 (exp (/ -2.0 v)))) (exp (/ -2.0 v))) u)) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18097698960340125,
    "avg_bits_err_output": 0.19587308321178407,
    "avg_bits_err_improve": -0.014896093608382815,
    "time": 22065.683837890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (log1p (expm1 (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))))",
    "output_parens": 12,
    "avg_bits_err_input": 2.7722461908401734,
    "avg_bits_err_output": 2.771350283692616,
    "avg_bits_err_improve": 0.0008959071475573843,
    "time": 29976.02783203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (/ (/ cosTheta_O v) (* 2.0 (sinh (/ 1.0 v)))) (* (/ (exp (/ (* sinTheta_i (- sinTheta_O)) v)) v) cosTheta_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4536425977964531,
    "avg_bits_err_output": 0.38936043404580245,
    "avg_bits_err_improve": 0.06428216375065066,
    "time": 24405.476806640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(/ (exp (+ 0.6931 (+ (log (/ 0.5 v)) (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v)))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.0918517741805179,
    "avg_bits_err_output": 0.09271050810629013,
    "avg_bits_err_improve": -0.0008587339257722232,
    "time": 17754.635986328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (* cosTheta (* (* alpha alpha) cosTheta)) (* cosTheta cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4546062307488622,
    "avg_bits_err_output": 0.4547321400818369,
    "avg_bits_err_improve": -0.00012590933297468299,
    "time": 23275.315185546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))",
    "output_parens": 5,
    "avg_bits_err_input": 1.3239806661406583,
    "avg_bits_err_output": 1.2285790659802716,
    "avg_bits_err_improve": 0.09540160016038679,
    "time": 27149.3779296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* 4.0 (/ (fma (* (log (* (/ 1.0 (* (fma u -4.0 1.0) (fma u -4.0 1.0))) (/ 1.0 (/ 1.0 (fma u -4.0 1.0))))) (/ s 8.0)) 4.0 (* (* (log (/ 1.0 (fma u -4.0 1.0))) s) 0.5)) 4.0))",
    "output_parens": 19,
    "avg_bits_err_input": 12.377611995813469,
    "avg_bits_err_output": 11.806737993340523,
    "avg_bits_err_improve": 0.5708740024729462,
    "time": 26083.50341796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (/ r s) -3.0))) (* PI (* (* s 6.0) r))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12956170487676072,
    "avg_bits_err_output": 0.1358770980711333,
    "avg_bits_err_improve": -0.006315393194372576,
    "time": 21254.889404296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (/ (sin (* normAngle u)) (sin normAngle)) n1_i (* (/ (sin (- normAngle (* normAngle u))) (sin normAngle)) n0_i))",
    "output_parens": 11,
    "avg_bits_err_input": 0.926627020375334,
    "avg_bits_err_output": 0.76062136943165,
    "avg_bits_err_improve": 0.1660056509436839,
    "time": 24495.915283203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (fma (/ (log1p (expm1 (sqrt (- 1.0 (+ cosTheta cosTheta))))) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta))) (+ 1.0 c)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.6796139703323612,
    "avg_bits_err_output": 0.4863318713944676,
    "avg_bits_err_improve": 0.19328209893789355,
    "time": 20466.18212890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(- (- (* (sin (* 2.0 (* PI u2))) (- (+ 2.0 (sqrt (- (log (- 1.0 u1))))) -1.0)) (* 2.0 (sin (* 2.0 (* PI u2))))) (* (sin (* 2.0 (* PI u2))) 1.0))",
    "output_parens": 20,
    "avg_bits_err_input": 13.595958155964459,
    "avg_bits_err_output": 13.588646857795933,
    "avg_bits_err_improve": 0.007311298168525937,
    "time": 24630.209716796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(if (!= (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (cos (* 2.0 (* PI u2)))) 0.0) (/ (+ (log (+ 1.0 (expm1 (* (cos (* 2.0 (* PI u2))) (* (cos (* 2.0 (* PI u2))) (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (+ (sqrt (- (log (- 1.0 u1)))) -1.0))))))) (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (* (cos (* 2.0 (* PI u2))) (cos (* 2.0 (* PI u2)))))) (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (cos (* 2.0 (* PI u2))))) (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2)))))",
    "output_parens": 65,
    "avg_bits_err_input": 13.650115896474576,
    "avg_bits_err_output": 13.365815734236541,
    "avg_bits_err_improve": 0.28430016223803456,
    "time": 31564.54150390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (fma (- alpha) alpha (* alpha alpha)) (* (- alpha) (* alpha (log (- 1.0 u0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.194763032863586,
    "avg_bits_err_output": 14.145408276546421,
    "avg_bits_err_improve": 0.04935475631716457,
    "time": 24893.845947265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(* (/ -1.0 (+ (if (!= (/ cos2phi (* alphax alphax)) 0.0) (/ cos2phi (* alphax alphax)) (/ cos2phi (* alphax alphax))) (+ (if (!= (/ cos2phi (* alphax alphax)) 0.0) (/ cos2phi (* alphax alphax)) (/ cos2phi (* alphax alphax))) (+ (/ sin2phi (* alphay alphay)) (/ sin2phi (* alphay alphay)))))) (+ (log (- 1.0 u0)) (log (- 1.0 u0))))",
    "output_parens": 30,
    "avg_bits_err_input": 12.722424199082445,
    "avg_bits_err_output": 12.750824129156262,
    "avg_bits_err_improve": -0.02839993007381736,
    "time": 17341.3505859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+161) (- (* PI l) (/ (tan (* PI l)) (* F F))) (if (<= (* PI l) -1.45e+24) (- (* PI l) (/ (tan (- (* (* PI (* l (fma PI l 1.0))) (exp (log1p (/ 1.0 (fma PI l 1.0))))) (* PI (* l (fma PI l 1.0))))) (* F F))) (- (* PI l) (/ (* (/ 1.0 F) (tan (* PI l))) F))))",
    "output_parens": 36,
    "avg_bits_err_input": 16.24167241562882,
    "avg_bits_err_output": 11.225531497080809,
    "avg_bits_err_improve": 5.016140918548011,
    "time": 20049.515380859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.20531372187554084,
    "avg_bits_err_output": 0.1505,
    "avg_bits_err_improve": 0.054813721875540844,
    "time": 17044.0166015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (expm1 (log1p (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.279575600895308,
    "avg_bits_err_output": 10.473706121009585,
    "avg_bits_err_improve": 2.8058694798857235,
    "time": 23343.993408203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (+ (fma (- (fabs (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))))) (fabs (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (/ (* (exp (* PI (/ f -4.0))) (exp (* PI (/ f -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0)))) (log (+ 1.0 (expm1 (- (exp (* f (/ PI 4.0))) (exp (* PI (/ f -4.0)))))))))) (/ PI -4.0))",
    "output_parens": 71,
    "avg_bits_err_input": 61.35206920019215,
    "avg_bits_err_output": 61.52298796362783,
    "avg_bits_err_improve": -0.17091876343567947,
    "time": 94888.33447265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.8761941606873,
    "avg_bits_err_output": 33.559417395212485,
    "avg_bits_err_improve": 9.316776765474813,
    "time": 24396.5615234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9029741489722687,
    "avg_bits_err_output": 3.9029741489722687,
    "avg_bits_err_improve": 0,
    "time": 25819.965087890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 1.0585228084366862,
    "avg_bits_err_output": 1.0585228084366862,
    "avg_bits_err_improve": 0,
    "time": 10093.8486328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 10.237872863317612,
    "avg_bits_err_improve": -0.0017683859856347794,
    "time": 30815.04443359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-146) (sqrt (* (* 2.0 n) (* U (- t (+ (* (pow (/ l Om) 2.0) (* n (- U U*))) (* 2.0 (* l (/ l Om)))))))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+295) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 72,
    "avg_bits_err_input": 34.36355138032334,
    "avg_bits_err_output": 29.121728703688312,
    "avg_bits_err_improve": 5.241822676635024,
    "time": 40801.110595703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (tan k) l) (* (pow (/ k t) 2.0) (* (sin k) (/ (pow t 3.0) l)))))",
    "output_parens": 11,
    "avg_bits_err_input": 47.61774772707072,
    "avg_bits_err_output": 36.93845808557316,
    "avg_bits_err_improve": 10.679289641497562,
    "time": 39788.705322265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (/ (* (/ (* (pow t 3.0) (sin k)) (fabs l)) (* (+ 2.0 (pow (/ k t) 2.0)) (tan k))) (fabs l)))",
    "output_parens": 14,
    "avg_bits_err_input": 32.54339100056812,
    "avg_bits_err_output": 27.78638387580088,
    "avg_bits_err_improve": 4.757007124767242,
    "time": 26754.33251953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* a1 (/ a1 (sqrt 2.0))) (cos th) (* (* a2 (cos th)) (/ a2 (sqrt 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5459639125209151,
    "avg_bits_err_output": 0.47688346095507894,
    "avg_bits_err_improve": 0.0690804515658362,
    "time": 19082.7744140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (if (!= (* PI n) 0.0) (/ (* PI n) (* (- (/ (/ n PI) n)) (- PI))) (* PI n))) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 17,
    "avg_bits_err_input": 0.5113231719727442,
    "avg_bits_err_output": 0.4818832791030767,
    "avg_bits_err_improve": 0.029439892869667528,
    "time": 19985.078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.876537267042494,
    "avg_bits_err_output": 17.876537267042494,
    "avg_bits_err_improve": 0,
    "time": 23211.041015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 16,
    "avg_bits_err_input": 15.541636401465324,
    "avg_bits_err_output": 15.541636401465324,
    "avg_bits_err_improve": 0,
    "time": 7007.202392578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.158271240625183,
    "avg_bits_err_output": 18.158271240625183,
    "avg_bits_err_improve": 0,
    "time": 27555.4130859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) -2e-37) (* w0 (sqrt (- 1.0 (/ (* (pow (/ (* D (+ M M)) (* d 4.0)) 2.0) h) l)))) (if (<= (/ h l) 1e-77) (* w0 (sqrt (- 1.0 (* (pow (* M (/ D (* 2.0 d))) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (/ (* (pow (* D (/ (/ M d) 2.0)) 2.0) h) l))))))",
    "output_parens": 34,
    "avg_bits_err_input": 14.204097075735564,
    "avg_bits_err_output": 10.656122020892898,
    "avg_bits_err_improve": 3.5479750548426665,
    "time": 18012.77978515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -4e+234) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) -1e-52) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 0.0) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (* V l) 4e+40) (* c0 (sqrt (* (/ (/ 2.0 V) (+ l l)) A))) (* c0 (sqrt (* (/ A V) (/ 1.0 l))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 18.97941775789509,
    "avg_bits_err_output": 15.732229261803102,
    "avg_bits_err_improve": 3.2471884960919866,
    "time": 18276.0546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) INFINITY) (* (/ c0 (* 2.0 w)) (fma (* d (/ (* (/ d D) c0) (* (* w D) h))) 1.0 (sqrt (* (fma d (/ (* (/ d D) c0) (* (* w D) h)) M) (fma d (/ (* (/ d D) c0) (* (* w D) h)) (- M)))))) (* (/ c0 (* 2.0 w)) (if (!= (sqrt (fma d (* d (* d (* (/ c0 w) (* (/ (/ d h) (* D D)) (/ (/ (/ c0 w) h) (* D D)))))) (* M (- M)))) 0.0) 0.0 (+ (/ (* d (/ (* d (/ (/ c0 h) w)) D)) D) (sqrt (+ (* d (* (/ (/ d D) D) (* (/ (* (/ c0 h) (/ d D)) w) (/ (* (/ c0 h) (/ d D)) w)))) (- (* M M))))))))",
    "output_parens": 98,
    "avg_bits_err_input": 59.5038495139375,
    "avg_bits_err_output": 33.97088063820477,
    "avg_bits_err_improve": 25.532968875732735,
    "time": 53307.729248046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= h -2e+82) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* M (/ D (+ d d))) 2.0) (+ l l))))) (if (<= h 3.2e+144) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (+ (* (/ h l) (/ (pow (/ (* M (/ D 2.0)) d) 2.0) -2.0)) 1.0)) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* D (/ M (+ d d))) 2.0) (+ l l)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 26.64818285572742,
    "avg_bits_err_output": 25.23013827482431,
    "avg_bits_err_improve": 1.4180445809031106,
    "time": 38371.4287109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(/ (+ (- (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) (- 2.0 (sqrt (+ 0.5 (log (+ 1.0 (expm1 (/ 0.5 (hypot 1.0 x))))))))) 2.0)",
    "output_parens": 15,
    "avg_bits_err_input": 15.291291794951803,
    "avg_bits_err_output": 14.835847694528042,
    "avg_bits_err_improve": 0.4554441004237617,
    "time": 17762.595458984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9862383613244511,
    "avg_bits_err_output": 0.008573120312590145,
    "avg_bits_err_improve": 0.9776652410118609,
    "time": 3818.904296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (/ (- (* v (* v 5.0)) (- 2.0 (* v (* v 5.0)))) (* PI -2.0)) (* (- 1.0 (* v v)) t)) (sqrt (- 2.0 (* v (* v 6.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.4528530939519554,
    "avg_bits_err_output": 0.2740825295163228,
    "avg_bits_err_improve": 0.1787705644356326,
    "time": 19983.379638671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt 2.0) (/ (- 1.0 (* v v)) (/ 4.0 (sqrt (fma v (* v -3.0) 1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.011292481250360578,
    "avg_bits_err_output": 0.011448120312590146,
    "avg_bits_err_improve": -0.0001556390622295678,
    "time": 9867.49658203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.524612494388833,
    "avg_bits_err_output": 0.524612494388833,
    "avg_bits_err_improve": 0,
    "time": 9408.871826171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(* a (+ (/ (pow k m) (* (fma k (+ k 10.0) 1.0) 4.0)) (/ (+ (/ (pow k m) 4.0) (/ (pow k m) 2.0)) (fma k (+ k 10.0) 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 2.17998571354413,
    "avg_bits_err_output": 2.1491810012324795,
    "avg_bits_err_improve": 0.030804712311650384,
    "time": 20903.421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- (+ mu (+ Vef EDonor)) Ec) KbT)))) (/ NaChar (+ 1.0 (- (exp (log1p (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))) 1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.018873997935444798,
    "avg_bits_err_output": 0.018873997935444798,
    "avg_bits_err_improve": 0,
    "time": 8738.77734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (if (!= (* (* b b) 4.0) 0.0) (/ (fma b (* b 4.0) (pow (fma b b (* a a)) 2.0)) (/ (/ (* b (* b 4.0)) b) (* b 4.0))) (fma b (* b 4.0) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.17492481250360573,
    "avg_bits_err_output": 0.2292935735352909,
    "avg_bits_err_improve": -0.05436876103168517,
    "time": 13804.90087890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (+ (* a (* a a)) (* a a)))) (* (- (* (* b b) (* a 3.0)) (* b b)) -4.0)) 1.0)",
    "output_parens": 17,
    "avg_bits_err_input": 0.1863240526179966,
    "avg_bits_err_output": 0.18559754658999753,
    "avg_bits_err_improve": 0.0007265060279990632,
    "time": 19314.131591796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1862157017554753,
    "avg_bits_err_output": 0.1862157017554753,
    "avg_bits_err_improve": 0,
    "time": 3320.097412109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.55708596115098,
    "avg_bits_err_output": 13.55708596115098,
    "avg_bits_err_improve": 0,
    "time": 14614.521240234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (* 2.0 x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.036489005031974,
    "avg_bits_err_output": 0.049,
    "avg_bits_err_improve": 40.987489005031975,
    "time": 5294.666259765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(- (/ (sin x) (- (tan x) x)) (if (!= (/ (/ x (- (tan x) x)) 2.0) 0.0) (/ (+ (* (/ (/ x (- (tan x) x)) 2.0) (/ (/ x (- (tan x) x)) 2.0)) (* (/ (/ x (- (tan x) x)) 2.0) (/ (/ x (- (tan x) x)) 2.0))) (/ (/ x (- (tan x) x)) 2.0)) (/ x (- (tan x) x))))",
    "output_parens": 38,
    "avg_bits_err_input": 31.3597885931389,
    "avg_bits_err_output": 31.33444825429926,
    "avg_bits_err_improve": 0.025340338839640708,
    "time": 22468.465087890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (- b_2) (sqrt (+ (/ (- (* b_2 b_2) (* a c)) 2.0) (/ (- (* b_2 b_2) (* a c)) 2.0)))) a)",
    "output_parens": 13,
    "avg_bits_err_input": 33.896260775808834,
    "avg_bits_err_output": 33.89935902004489,
    "avg_bits_err_improve": -0.0030982442360567575,
    "time": 14172.892578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) (- INFINITY)) (/ (if (!= (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) 0.0) 0.0 (- (- b_2) (sqrt (- (* b_2 b_2) (* a c))))) a) (if (<= (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) 5e+301) (/ (- (- b_2) (sqrt (fma b_2 b_2 (* c (- a))))) a) (/ (if (!= (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) 0.0) 0.0 (- (- b_2) (sqrt (- (* b_2 b_2) (* a c))))) a)))",
    "output_parens": 54,
    "avg_bits_err_input": 34.34583601879705,
    "avg_bits_err_output": 29.233493459000073,
    "avg_bits_err_improve": 5.1123425597969785,
    "time": 18230.498046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 32.197380032654614,
    "avg_bits_err_output": 31.397379051118996,
    "avg_bits_err_improve": 0.8000009815356179,
    "time": 17135.11474609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.265012022629655,
    "avg_bits_err_output": 32.265012022629655,
    "avg_bits_err_improve": 0,
    "time": 15848.214111328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(- (- (if (!= (- 1.0 (log1p N)) 0.0) (/ (- 1.0 (* (log1p N) (log1p N))) (- 1.0 (log1p N))) (+ (log1p N) 1.0)) (log N)) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 29.181923357574714,
    "avg_bits_err_output": 29.21031374022812,
    "avg_bits_err_improve": -0.028390382653405766,
    "time": 12532.454345703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (* (/ 1.0 x) (+ (/ x (+ 1.0 x)) 0.0)) (/ 1.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 14.227152949135515,
    "avg_bits_err_output": 14.230654120898105,
    "avg_bits_err_improve": -0.0035011717625899053,
    "time": 15043.98046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (cos (+ x eps)) 0.0) (fma (/ (cos (+ x eps)) (cos (+ x eps))) (cos (+ x eps)) (* (/ (cos x) (- (cos (+ x eps)))) (/ 1.0 (/ 1.0 (cos (+ x eps)))))) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 26,
    "avg_bits_err_input": 39.48883795789857,
    "avg_bits_err_output": 39.52397186962163,
    "avg_bits_err_improve": -0.035133911723065125,
    "time": 19077.610595703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ x 1.0)) -1.0) 0.0) (/ (- (* (cbrt (+ x 1.0)) (+ (cbrt (+ x 1.0)) -1.0)) (* (+ (cbrt (+ x 1.0)) -1.0) (cbrt x))) (+ (cbrt (+ x 1.0)) -1.0)) (- (cbrt (+ x 1.0)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 29.434190690407554,
    "avg_bits_err_output": 29.441497762972972,
    "avg_bits_err_improve": -0.007307072565417627,
    "time": 11516.0078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(fma (cos x) (/ -1.0 (sin x)) (/ 1.0 (sin x)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.684109682184822,
    "avg_bits_err_output": 29.70199484353673,
    "avg_bits_err_improve": -0.017885161351909318,
    "time": 22909.781494140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (+ (+ (* (fma a (* c -4.0) (* b b)) 0.5) (* b (/ b 2.0))) (* a (* c -2.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 33.82758938682075,
    "avg_bits_err_output": 33.84082486889822,
    "avg_bits_err_improve": -0.013235482077469385,
    "time": 20356.902587890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- INFINITY)) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) 2e+305) (/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0)))))",
    "output_parens": 53,
    "avg_bits_err_input": 33.980636546105906,
    "avg_bits_err_output": 29.093610572797047,
    "avg_bits_err_improve": 4.887025973308859,
    "time": 24937.3505859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(+ (+ (+ 1.0 (/ (+ 1.0 (log (- 1.0 x))) (log1p x))) (/ -1.0 (log1p x))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 61.26344024916715,
    "avg_bits_err_output": 0.9183235815938932,
    "avg_bits_err_improve": 60.34511666757325,
    "time": 22010.502197265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (- (exp (log1p (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 1.0)) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.00405331366263,
    "avg_bits_err_output": 44.25319710498286,
    "avg_bits_err_improve": 18.75085620867977,
    "time": 12025.14501953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(if (!= (log (/ (- 1.0 eps) (+ 1.0 eps))) 0.0) (* (* (log (/ (- 1.0 eps) (- eps -1.0))) (log (/ (- 1.0 eps) (- eps -1.0)))) (/ 1.0 (if (!= (- -1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps))))) 0.0) (/ (- 1.0 (* (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) (- -1.0 (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) (log (/ (- 1.0 eps) (+ 1.0 eps)))))) (log (/ (- 1.0 eps) (+ 1.0 eps))))",
    "output_parens": 52,
    "avg_bits_err_input": 58.70969124861712,
    "avg_bits_err_output": 58.71930123971546,
    "avg_bits_err_improve": -0.00960999109834404,
    "time": 15814.109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (/ (/ (- 1.0 (/ x (tan x))) x) (/ 1.0 x)) x)",
    "output_parens": 7,
    "avg_bits_err_input": 59.914072478982206,
    "avg_bits_err_output": 59.89847645980532,
    "avg_bits_err_improve": 0.015596019176882692,
    "time": 26640.88427734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (/ eps (expm1 (* eps a))) (expm1 (* eps (+ a b)))) (expm1 (* eps b)))",
    "output_parens": 10,
    "avg_bits_err_input": 60.20264697536054,
    "avg_bits_err_output": 29.29564722061063,
    "avg_bits_err_improve": 30.906999754749908,
    "time": 23705.46630859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(* (/ 1.0 (expm1 x)) (exp x))",
    "output_parens": 4,
    "avg_bits_err_input": 41.35365944160877,
    "avg_bits_err_output": 0.45263684218813105,
    "avg_bits_err_improve": 40.901022599420635,
    "time": 6563.017822265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.60070967651047,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.60045967651047,
    "time": 2519.88916015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.59846497119116,
    "avg_bits_err_output": 0.015469822378330845,
    "avg_bits_err_improve": 29.582995148812827,
    "time": 3013.20263671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (* (exp x) (- (exp (- x)) 2.0))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 21,
    "avg_bits_err_input": 30.00743125467056,
    "avg_bits_err_output": 29.443681837577465,
    "avg_bits_err_improve": 0.5637494170930957,
    "time": 17371.61572265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.152640581308404,
    "avg_bits_err_output": 9.152640581308404,
    "avg_bits_err_improve": 0,
    "time": 24659.25830078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (if (!= (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps))) 0.0) (/ (* (tan (+ x eps)) (- (/ (* (tan (+ x eps)) (tan (+ x eps))) (tan (+ x eps))) (* (tan (+ x eps)) (* (/ (tan x) (tan (+ x eps))) (/ (tan x) (tan (+ x eps))))))) (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps)))) (* (tan (+ x eps)) (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 65,
    "avg_bits_err_input": 36.78331177612614,
    "avg_bits_err_output": 36.80402352234034,
    "avg_bits_err_improve": -0.02071174621419658,
    "time": 16482.979736328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (expm1 (- (exp (log1p (log (- (- (sqrt x) (sqrt (+ 1.0 x))) -2.0)))) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 29.579155592790897,
    "avg_bits_err_output": 28.483853433697796,
    "avg_bits_err_improve": 1.0953021590931016,
    "time": 11510.476318359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (sin (+ x eps)) 0.0) (* (sin (+ x eps)) (if (!= (/ (+ (sin (+ x eps)) (sin x)) (sin (+ x eps))) 0.0) (/ (/ (- (sin (+ x eps)) (if (!= (* (sin x) (/ (sin x) (sin (+ x eps)))) 0.0) (/ 1.0 (/ 1.0 (* (sin x) (/ (sin x) (sin (+ x eps)))))) (* (sin x) (/ (sin x) (sin (+ x eps)))))) (sin (+ x eps))) (/ (+ (sin (+ x eps)) (sin x)) (sin (+ x eps)))) (/ (- (sin (+ x eps)) (sin x)) (sin (+ x eps))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 63,
    "avg_bits_err_input": 36.933256363557675,
    "avg_bits_err_output": 36.97406676368574,
    "avg_bits_err_improve": -0.04081040012806625,
    "time": 17720.831787109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (/ 1.0 (- (- (sqrt (+ 1.0 x)) -1.0) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 19.311396114594427,
    "avg_bits_err_output": 19.31006393977897,
    "avg_bits_err_improve": 0.0013321748154559998,
    "time": 13499.160888671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (if (!= (+ -1.0 (atan N)) 0.0) (- (/ (* (atan (+ N 1.0)) (+ -1.0 (atan N))) (+ -1.0 (atan N))) (/ 1.0 (/ 1.0 (+ -1.0 (atan N))))) (+ 1.0 (- (atan (+ N 1.0)) (atan N)))) -1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 15.176901341954409,
    "avg_bits_err_output": 15.191140085372504,
    "avg_bits_err_improve": -0.014238743418095723,
    "time": 11709.46875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log (+ (exp a) (exp b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.6802993283027,
    "avg_bits_err_output": 29.6802993283027,
    "avg_bits_err_improve": 0,
    "time": 38342.82373046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (/ m v) (* (- 1.0 m) (- 1.0 m))) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07752953698335613,
    "avg_bits_err_output": 0.07341380440922632,
    "avg_bits_err_improve": 0.00411573257412981,
    "time": 11282.820556640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.036826129186863,
    "avg_bits_err_output": 0.3162103390679988,
    "avg_bits_err_improve": 15.720615790118865,
    "time": 10591.342529296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (fma angle (/ PI 180.0) 0.0))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.55777104414763,
    "avg_bits_err_output": 20.518167307116336,
    "avg_bits_err_improve": 0.039603737031292496,
    "time": 25794.153076171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* (- (pow a 2.0) (pow b 2.0)) -2.0) (log1p (expm1 (sin (* PI (/ angle 180.0)))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.946381846740348,
    "avg_bits_err_output": 30.94625190415402,
    "avg_bits_err_improve": 0.0001299425863265924,
    "time": 28752.197021484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (/ (* angle PI) 180.0))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 21.097963081477836,
    "avg_bits_err_output": 21.120668215843626,
    "avg_bits_err_improve": -0.022705134365789803,
    "time": 27660.15380859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1742127584773497,
    "avg_bits_err_output": 0.16981367784260687,
    "avg_bits_err_improve": 0.004399080634742841,
    "time": 13217.416748046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (- (tan x)) 1.0) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31606680393017456,
    "avg_bits_err_output": 0.3080552804084554,
    "avg_bits_err_improve": 0.008011523521719133,
    "time": 15381.62939453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1368962406251803,
    "avg_bits_err_output": 0.1368962406251803,
    "avg_bits_err_improve": 0,
    "time": 15830.494873046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.16051448746713,
    "avg_bits_err_output": 17.155645552419358,
    "avg_bits_err_improve": 0.0048689350477708615,
    "time": 30794.130615234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (+ b (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (if (!= (- (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (+ (* b b) (* b (+ b b)))) 0.0) (/ (fma (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))) (- (* b (+ b b)))) (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))) (- (* b (+ b b)))) (- (* b (* b (* b b))))) (- (* (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b)))) (+ (* b b) (* b (+ b b))))) (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma a (* c -4.0) (* b b))) (- (* b b)))) (+ b (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 91,
    "avg_bits_err_input": 52.55899760197495,
    "avg_bits_err_output": 51.54087304195625,
    "avg_bits_err_improve": 1.0181245600186983,
    "time": 30641.12841796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (+ (fma (sqrt (fma c (* a -4.0) (* b b))) (- (sqrt (fma c (* a -4.0) (* b b)))) (* b b)) 0.0) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 34,
    "avg_bits_err_input": 28.791949948158187,
    "avg_bits_err_output": 28.189712819105885,
    "avg_bits_err_improve": 0.6022371290523019,
    "time": 28352.644775390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (+ b (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (fma b b (fma b (- b) (fma (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))) (- (* b b))))) (+ b (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (if (!= (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 4.0)) 0.0) (/ (* (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 4.0)) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 4.0))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 4.0))) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (* a 4.0))))",
    "output_parens": 74,
    "avg_bits_err_input": 43.909366179606586,
    "avg_bits_err_output": 42.683619854859494,
    "avg_bits_err_improve": 1.2257463247470923,
    "time": 27406.308349609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (+ (+ (* (fma a (* c -4.0) (* b b)) 0.5) (* b (/ b 2.0))) (* a (* c -2.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 33.83231652137298,
    "avg_bits_err_output": 33.84082486889822,
    "avg_bits_err_improve": -0.008508347525236104,
    "time": 20693.142333984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (fma (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1) (* (cos phi1) (cos phi1))) (cos phi1)) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.8195144067283671,
    "avg_bits_err_output": 0.8350394713618581,
    "avg_bits_err_improve": -0.015525064633491015,
    "time": 23024.98583984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (- -1.0 (/ 2.0 (if (!= (exp (* -2.0 x)) 0.0) (+ 1.0 (/ -4.0 (/ -4.0 (exp (* -2.0 x))))) (+ (exp (* -2.0 x)) 1.0)))) 0.0) (/ (- 1.0 (/ 4.0 (* (if (!= (exp (* -2.0 x)) 0.0) (+ 1.0 (/ -4.0 (/ -4.0 (exp (* -2.0 x))))) (+ (exp (* -2.0 x)) 1.0)) (if (!= (exp (* -2.0 x)) 0.0) (+ 1.0 (/ -4.0 (/ -4.0 (exp (* -2.0 x))))) (+ (exp (* -2.0 x)) 1.0))))) (- -1.0 (/ 2.0 (if (!= (exp (* -2.0 x)) 0.0) (+ 1.0 (/ -4.0 (/ -4.0 (exp (* -2.0 x))))) (+ (exp (* -2.0 x)) 1.0))))) (+ (/ 2.0 (if (!= (exp (* -2.0 x)) 0.0) (+ 1.0 (/ -4.0 (/ -4.0 (exp (* -2.0 x))))) (+ (exp (* -2.0 x)) 1.0))) -1.0))",
    "output_parens": 72,
    "avg_bits_err_input": 29.38406440195118,
    "avg_bits_err_output": 29.378126772048834,
    "avg_bits_err_improve": 0.00593762990234481,
    "time": 20355.752197265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp (- x)) (exp x)))",
    "output_parens": 9,
    "avg_bits_err_input": 58.214160224743246,
    "avg_bits_err_output": 1.2650118421881311,
    "avg_bits_err_improve": 56.949148382555116,
    "time": 16533.514892578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.073115069838195,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.06574006983819,
    "time": 15704.648681640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008865601562950725,
    "avg_bits_err_output": 0.008865601562950725,
    "avg_bits_err_improve": 0,
    "time": 4750.444580078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.777,
    "avg_bits_err_output": 31.777,
    "avg_bits_err_improve": 0,
    "time": 4428.1796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (if (!= (log (/ (- -1.0 x) (+ x -1.0))) 0.0) (* (* (log (/ (- -1.0 x) (- x 1.0))) (log (/ (- -1.0 x) (- x 1.0)))) (/ 1.0 (log (- (/ -1.0 (* (- 1.0 x) (+ x -1.0))) (* x (/ x (* (- 1.0 x) (- 1.0 x)))))))) (log (/ (- -1.0 x) (+ x -1.0)))))",
    "output_parens": 33,
    "avg_bits_err_input": 58.70562520356331,
    "avg_bits_err_output": 58.7324206318178,
    "avg_bits_err_improve": -0.02679542825449488,
    "time": 23617.971435546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (/ (+ 1.0 (sqrt (- 1.0 (* x x)))) x))",
    "output_parens": 6,
    "avg_bits_err_input": 0.04394812031259015,
    "avg_bits_err_output": 0.043875,
    "avg_bits_err_improve": 7.312031259015112e-05,
    "time": 3454.843994140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.127375,
    "avg_bits_err_output": 0.127375,
    "avg_bits_err_improve": 0,
    "time": 28814.540283203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13125,
    "avg_bits_err_output": 0.13125,
    "avg_bits_err_improve": 0,
    "time": 23713.498046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.1486844613934,
    "avg_bits_err_output": 3.7822560962169676,
    "avg_bits_err_improve": 34.36642836517643,
    "time": 26842.3544921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.65675921527103,
    "avg_bits_err_output": 14.65675921527103,
    "avg_bits_err_improve": 0,
    "time": 4694.368408203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (if (!= (+ 1.0 (- (fma (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))) 1.0) (cos delta))) 0.0) (/ (- 1.0 (* (- (fma (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))) 1.0) (cos delta)) (+ (- (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos phi1) (cos theta))))))) (cos delta)) 1.0))) (+ 1.0 (+ (- (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos phi1) (cos theta))))))) (cos delta)) 1.0))) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))))))",
    "output_parens": 86,
    "avg_bits_err_input": 0.15562405006909605,
    "avg_bits_err_output": 0.18019892752735947,
    "avg_bits_err_improve": -0.024574877458263422,
    "time": 35510.523193359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) 0.0) (/ (- (* (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b)))) (* (fma (- b) b (* b b)) (fma (- b) b (* b b)))) (if (!= (fma b b (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))))) 0.0) (/ (* (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (* b b))) (fma b b (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 134,
    "avg_bits_err_input": 52.56642732981351,
    "avg_bits_err_output": 51.50761299393531,
    "avg_bits_err_improve": 1.0588143358781963,
    "time": 42520.277099609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma b b (* c (* a -3.0)))) (- b)) 0.0) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma b b (* c (* a -3.0)))) (- (* b b))) (+ b (sqrt (+ (* b b) (* a (* c -3.0)))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 33,
    "avg_bits_err_input": 28.92385788802242,
    "avg_bits_err_output": 28.146786943618995,
    "avg_bits_err_improve": 0.7770709444034267,
    "time": 31241.829833984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (+ (fma (- b) b (* b b)) (if (!= (- (* b b) (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) 0.0) (/ (+ (* (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (- (* b b))) (fma b b (- (* b (+ b b)) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))))))) (fma (- (fabs (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b (+ b b))))) (fabs (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b (+ b b)))) (* (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b (+ b b))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* b (+ b b)))))) (- (* b b) (fma b (- b) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b))))) (- (* (sqrt (fma b b (* c (* a -3.0)))) (sqrt (fma b b (* c (* a -3.0))))) (* b b)))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 149,
    "avg_bits_err_input": 43.97902241094706,
    "avg_bits_err_output": 42.90020539000731,
    "avg_bits_err_improve": 1.078817020939752,
    "time": 44993.555419921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.856203313246255,
    "avg_bits_err_output": 33.856203313246255,
    "avg_bits_err_improve": 0,
    "time": 18640.893310546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.010364323226927,
    "avg_bits_err_output": 13.010364323226927,
    "avg_bits_err_improve": 0,
    "time": 30068.42919921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.967350305388614,
    "avg_bits_err_output": 0.5399511557680089,
    "avg_bits_err_improve": 29.427399149620605,
    "time": 12945.23095703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(log1p (expm1 (+ (/ 1.0 (+ x -1.0)) (/ x (+ 1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010625,
    "avg_bits_err_output": 0.012542481250360577,
    "avg_bits_err_improve": -0.0019174812503605764,
    "time": 4562.61083984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- (/ 1.0 (- 1.0 x)) (- -1.0 (/ x (- 1.0 x)))) (+ 1.0 x))",
    "output_parens": 8,
    "avg_bits_err_input": 14.035714261268229,
    "avg_bits_err_output": 12.215358843081075,
    "avg_bits_err_improve": 1.8203554181871535,
    "time": 19086.184326171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) A) (- C)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C)))))",
    "output_parens": 22,
    "avg_bits_err_input": 51.828736731426396,
    "avg_bits_err_output": 51.552212155823455,
    "avg_bits_err_improve": 0.2765245756029415,
    "time": 39377.643798828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) (/ 180.0 PI))",
    "output_parens": 11,
    "avg_bits_err_input": 29.104482211257125,
    "avg_bits_err_output": 29.10310727505038,
    "avg_bits_err_improve": 0.0013749362067443371,
    "time": 20120.628662109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (* (* 2.0 F) (if (!= C 0.0) (/ (* C (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) C) (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (* 4.0 (* A C)) (pow B 2.0)))",
    "output_parens": 31,
    "avg_bits_err_input": 52.28626989007919,
    "avg_bits_err_output": 52.337104633769805,
    "avg_bits_err_improve": -0.050834743690614914,
    "time": 33854.85595703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.23335130055074,
    "avg_bits_err_output": 15.23335130055074,
    "avg_bits_err_improve": 0,
    "time": 2197.22119140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (* (- g) (- (sqrt (fma g g (- (* h h)))) g)) (- g)) (- (sqrt (fma g g (- (* h h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 35.849081053277125,
    "avg_bits_err_output": 35.79152452737825,
    "avg_bits_err_improve": 0.05755652589887461,
    "time": 15488.15283203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9904133468827534,
    "avg_bits_err_output": 0.9772124062518031,
    "avg_bits_err_improve": 0.013200940630950342,
    "time": 5585.7666015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (- (+ (exp a) (+ (exp b) 1.0)) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5334749102026902,
    "avg_bits_err_output": 0.5767836551277554,
    "avg_bits_err_improve": -0.0433087449250652,
    "time": 5038.7490234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -5e+288) (* a1 (/ (/ a2 b2) b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -1e-312) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+303) (/ (* a1 a2) (* b1 b2)) (* (/ a1 b2) (/ a2 b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 11.45150533875889,
    "avg_bits_err_output": 2.415170196462478,
    "avg_bits_err_improve": 9.036335142296412,
    "time": 8212.4775390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4214587964875865,
    "avg_bits_err_output": 0.361125,
    "avg_bits_err_improve": 0.06033379648758652,
    "time": 8312.2109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -0.075) (log (log (- (+ 1.0 (- (exp (log (+ (exp (+ x (hypot 1.0 x))) 2.0))) 2.0)) 1.0))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 52.89417892955714,
    "avg_bits_err_output": 13.76524353993708,
    "avg_bits_err_improve": 39.12893538962006,
    "time": 12427.0625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(expm1 (log1p (exp (+ (log a) (log b)))))",
    "output_parens": 6,
    "avg_bits_err_input": 5.721221891303513,
    "avg_bits_err_output": 5.722201753975825,
    "avg_bits_err_improve": -0.000979862672312315,
    "time": 10514.063720703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.013875,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0,
    "time": 4156.72802734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1252.140869140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= w -4.1e+108) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* r w) (* (* r (/ w (- 1.0 v))) (- 0.375 (* v 0.25)))) 4.5)) (if (<= w 1e+94) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* r (* w (* (/ (* r w) (- 1.0 v)) (- 0.375 (* v 0.25))))) 4.5)) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* (* r w) (* (* r (/ w (- 1.0 v))) (- 0.375 (* v 0.25)))) 4.5))))",
    "output_parens": 43,
    "avg_bits_err_input": 12.709489423258463,
    "avg_bits_err_output": 0.28394572387567096,
    "avg_bits_err_improve": 12.425543699382791,
    "time": 21048.85986328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (if (!= (- (* (* (* x1 (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0))) (+ (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) -3.0)) 2.0) (* (* x1 x1) (- (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0) 6.0))) 0.0) (/ 1.0 (/ 1.0 (fma x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)) (* -2.0 (* (* x1 (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0))) (+ (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) -3.0)))))) (fma x1 (* x1 (fma (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)) (* -2.0 (* (* x1 (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0))) (+ (/ (- (fma 3.0 (* x1 x1) (* 2.0 x2)) x1) (fma x1 x1 1.0)) -3.0)))))))))))",
    "output_parens": 104,
    "avg_bits_err_input": 0.5159012060702414,
    "avg_bits_err_output": 0.2928421674452395,
    "avg_bits_err_improve": 0.22305903862500187,
    "time": 70394.59375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ t1 (+ t1 u)) (- v)) (+ t1 u))",
    "output_parens": 6,
    "avg_bits_err_input": 18.295043589852305,
    "avg_bits_err_output": 1.1278528990175076,
    "avg_bits_err_improve": 17.167190690834797,
    "time": 7849.81201171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.23467251746548876,
    "avg_bits_err_output": 0.23467251746548876,
    "avg_bits_err_improve": 0,
    "time": 6106.8603515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 1952.69189453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (* PI (- (/ 0.5 a) (/ 0.5 b))) (+ b a)) (- b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.138060384022722,
    "avg_bits_err_output": 0.29905507657304675,
    "avg_bits_err_improve": 13.839005307449675,
    "time": 15341.37890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) (* (exp (* x (- -1.0 eps))) (- 1.0 (/ 1.0 eps))))) 2.0)",
    "output_parens": 17,
    "avg_bits_err_input": 29.543531437114826,
    "avg_bits_err_output": 24.833220605778546,
    "avg_bits_err_improve": 4.71031083133628,
    "time": 17413.1630859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- (- 4.0 (/ 4.0 (+ t (/ t t)))) (/ (/ (- 4.0 (/ 4.0 (+ t (/ t t)))) t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.029,
    "avg_bits_err_output": 0.004875,
    "avg_bits_err_improve": 0.024125,
    "time": 7839.27783203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (+ 1.0 (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))))) (+ (* (- 2.0 (/ (/ 4.0 t) (+ 2.0 (/ 2.0 t)))) (- 4.0 (/ 8.0 (* t (+ 2.0 (/ 2.0 t)))))) 4.0))",
    "output_parens": 26,
    "avg_bits_err_input": 0.032875,
    "avg_bits_err_output": 0.03025,
    "avg_bits_err_improve": 0.0026250000000000023,
    "time": 19695.318603515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))) (+ 2.0 (* (/ t (+ t 1.0)) (* t (/ 4.0 (+ t 1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.048,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 0.039875,
    "time": 9588.48974609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3359.479248046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2572.678955078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2455.189208984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.840824799560117,
    "avg_bits_err_output": 0.255375,
    "avg_bits_err_improve": 7.585449799560117,
    "time": 17634.33984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3247496513254875,
    "avg_bits_err_output": 7.3247496513254875,
    "avg_bits_err_improve": 0,
    "time": 3744.9404296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 15.708367810745404,
    "avg_bits_err_output": 15.708367810745404,
    "avg_bits_err_improve": 0,
    "time": 3292.9140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (if (!= (+ 1.0 (exp (log1p (log (exp (cos x)))))) 0.0) (/ (+ (* (exp (log1p (log (exp (cos x))))) (exp (log1p (log (exp (cos x)))))) -1.0) (+ 1.0 (exp (log1p (log (exp (cos x))))))) (log (exp (cos x)))) (exp (* 10.0 (* x x))))",
    "output_parens": 34,
    "avg_bits_err_input": 3.541094055679177,
    "avg_bits_err_output": 3.5436652594085456,
    "avg_bits_err_improve": -0.0025712037293685874,
    "time": 19405.98583984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(log1p (expm1 (/ x (fma x x 1.0))))",
    "output_parens": 4,
    "avg_bits_err_input": 14.28559916519377,
    "avg_bits_err_output": 14.28559916519377,
    "avg_bits_err_improve": 0,
    "time": 13945.447509765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.92305890107985,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.92305890107985,
    "time": 4471.52001953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.353893905130626,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 39.35376890513063,
    "time": 3893.62646484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.259625,
    "avg_bits_err_improve": 63.740375,
    "time": 27572.077392578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 4e-32 (* t t))",
    "output_parens": 2,
    "avg_bits_err_input": 61.843250060791135,
    "avg_bits_err_output": 0.40952161719245816,
    "avg_bits_err_improve": 61.433728443598675,
    "time": 7101.231689453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) (- INFINITY)) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0))) (if (<= (/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)) 2e+305) (/ (/ (+ b (sqrt (+ (* c (* a -4.0)) (* b b)))) -2.0) a) (if (!= (/ b (* a 2.0)) 0.0) 0.0 (/ (+ b (sqrt (fma b b (* a (* c -4.0))))) (* a -2.0)))))",
    "output_parens": 53,
    "avg_bits_err_input": 33.980636546105906,
    "avg_bits_err_output": 29.093610572797047,
    "avg_bits_err_improve": 4.887025973308859,
    "time": 27056.392822265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (+ (+ (* (fma a (* c -4.0) (* b b)) 0.5) (* b (/ b 2.0))) (* a (* c -2.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 33.83231652137298,
    "avg_bits_err_output": 33.84082486889822,
    "avg_bits_err_improve": -0.008508347525236104,
    "time": 24652.34716796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2401.501953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.83810762505364,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 39.824982625053636,
    "time": 6678.457275390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(- (/ (* x x) (fma y y (* x x))) (* y (/ y (fma y y (* x x)))))",
    "output_parens": 9,
    "avg_bits_err_input": 20.041416061583668,
    "avg_bits_err_output": 20.03834796581127,
    "avg_bits_err_improve": 0.003068095772398749,
    "time": 11497.994873046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.661189081637689,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.661189081637689,
    "time": 7794.56494140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.039375,
    "time": 7494.900390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.022490601562950727,
    "avg_bits_err_output": 0.022490601562950727,
    "avg_bits_err_improve": 0,
    "time": 3120.8583984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.0135,
    "avg_bits_err_improve": 0,
    "time": 2959.647216796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0,
    "time": 2203.51806640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ d c) (+ b a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39465601562950725,
    "avg_bits_err_output": 0.24425,
    "avg_bits_err_improve": 0.15040601562950726,
    "time": 5336.498046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (exp (log1p (- 1.0 (cos x)))) 0.0) (/ (- (- 2.0 (* (cos x) (- 2.0 (cos x)))) (cos x)) (exp (log1p (- 1.0 (cos x))))) (- 1.0 (cos x)))",
    "output_parens": 20,
    "avg_bits_err_input": 30.292060223209155,
    "avg_bits_err_output": 30.298223736627115,
    "avg_bits_err_improve": -0.006163513417959621,
    "time": 28140.470947265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= (- (* x x) (- eps)) 0.0) (- (* (* x x) (log (+ 1.0 (expm1 (* x (/ x (fma x x eps))))))) (* eps (/ eps (fma x x eps)))) (- (* x x) eps))))",
    "output_parens": 21,
    "avg_bits_err_input": 25.038366505204042,
    "avg_bits_err_output": 25.08629272080847,
    "avg_bits_err_improve": -0.047926215604427114,
    "time": 12832.9326171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (if (!= (/ x (tan x)) 0.0) (/ 1.0 (/ 1.0 (/ x (tan x)))) (/ x (tan x))) (/ (sin x) (tan x)))",
    "output_parens": 14,
    "avg_bits_err_input": 30.486938587298585,
    "avg_bits_err_output": 30.511948199138395,
    "avg_bits_err_improve": -0.025009611839809764,
    "time": 26134.034423828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0065,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.005124999999999999,
    "time": 2407.29296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -7.5e+98) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i n)))) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))))",
    "output_parens": 37,
    "avg_bits_err_input": 47.609822427305765,
    "avg_bits_err_output": 46.625220846046645,
    "avg_bits_err_improve": 0.9846015812591205,
    "time": 27510.388427734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (* a (/ c (fma d d (* c c)))))",
    "output_parens": 9,
    "avg_bits_err_input": 26.369552687193668,
    "avg_bits_err_output": 23.31085388268028,
    "avg_bits_err_improve": 3.058698804513387,
    "time": 13570.763671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) (- INFINITY)) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d))))) (if (<= (/ (- (* b c) (* a d)) (+ (* c c) (* d d))) 1e+286) (/ (fma d (- a) (* c b)) (fma c c (* d d))) (- (* (/ b (fma d d (* c c))) c) (* a (/ d (fma c c (* d d)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 26.351501031704768,
    "avg_bits_err_output": 22.967902052317903,
    "avg_bits_err_improve": 3.383598979386864,
    "time": 12033.224365234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03275,
    "avg_bits_err_output": 0.019990697420484902,
    "avg_bits_err_improve": 0.0127593025795151,
    "time": 6212.75537109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (fma ux maxCos (- (+ (+ (* (fma ux maxCos (- 1.0 ux)) (- ux (* ux maxCos))) ux) 0.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.64969994492842,
    "avg_bits_err_output": 0.5430442126579048,
    "avg_bits_err_improve": 13.106655732270514,
    "time": 23121.409912109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (- (- ux (- (* ux maxCos) ux)) (* ux (- ux (* ux maxCos)))) (- (* (* ux maxCos) (fma ux maxCos (- 1.0 ux)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.686038579350132,
    "avg_bits_err_output": 0.3172742016254041,
    "avg_bits_err_improve": 13.368764377724728,
    "time": 22382.07373046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (log1p (expm1 (* uy (* 2.0 PI))))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 36,
    "avg_bits_err_input": 0.34590803930447744,
    "avg_bits_err_output": 0.34637334755753635,
    "avg_bits_err_improve": -0.0004653082530589048,
    "time": 45632.098876953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20441147540404264,
    "avg_bits_err_output": 0.20441147540404264,
    "avg_bits_err_improve": 0,
    "time": 18654.19677734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.543769143854134,
    "avg_bits_err_output": 0.543769143854134,
    "avg_bits_err_improve": 0,
    "time": 19548.125732421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.32032849407495295,
    "avg_bits_err_output": 0.32032849407495295,
    "avg_bits_err_improve": 0,
    "time": 19351.235107421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ (- PI) s)))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.33984281472053063,
    "avg_bits_err_output": 0.34011767772908236,
    "avg_bits_err_improve": -0.00027486300855172896,
    "time": 103518.2177734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(expm1 (log1p (/ 1.0 (+ 1.0 (exp (/ (- x) s))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.05787217015750099,
    "avg_bits_err_output": 0.061895854533762985,
    "avg_bits_err_improve": -0.004023684376261993,
    "time": 12715.3671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (expm1 (/ (fabs x) (- s))) 2.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13712960107210362,
    "avg_bits_err_output": 0.11674379613808605,
    "avg_bits_err_improve": 0.020385804934017565,
    "time": 18403.222412109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6680207908937882,
    "avg_bits_err_output": 0.6680207908937882,
    "avg_bits_err_improve": 0,
    "time": 19534.281982421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (if (!= (- v) 0.0) (if (!= (/ 1.0 (/ -1.0 v)) 0.0) (/ (fma (/ 1.0 (/ -1.0 v)) (/ 1.0 (/ -1.0 v)) (* (/ 1.0 (/ -1.0 v)) (/ (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))) (/ -1.0 v)))) (/ 1.0 (/ -1.0 v))) (* (+ v (* v (- -1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u))))) (/ v (- v)))) (* v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))))",
    "output_parens": 44,
    "avg_bits_err_input": 0.16185322714897074,
    "avg_bits_err_output": 0.1924407528400732,
    "avg_bits_err_improve": -0.030587525691102457,
    "time": 16803.577880859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.583018703851672,
    "avg_bits_err_output": 2.580663262784846,
    "avg_bits_err_improve": 0.0023554410668262804,
    "time": 32866.87646484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* cosTheta_O (/ (* cosTheta_i (/ (/ 0.5 v) (sinh (/ 1.0 v)))) v)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4653512624968681,
    "avg_bits_err_output": 0.3986652748062174,
    "avg_bits_err_improve": 0.0666859876906507,
    "time": 25092.33447265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (/ (- (* cosTheta_i cosTheta_O) (* sinTheta_i sinTheta_O)) v) (/ 1.0 v)) 0.6931) (log (/ 0.5 v))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.10650240332098712,
    "avg_bits_err_output": 0.10650240332098712,
    "avg_bits_err_improve": 0,
    "time": 11313.765380859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha (+ alpha alpha)) 2.0) (* (fma cosTheta (- (* alpha (* alpha cosTheta)) cosTheta) 1.0) (* PI (* (log (* alpha alpha)) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4558456497706566,
    "avg_bits_err_output": 0.45412492779336844,
    "avg_bits_err_improve": 0.0017207219772881754,
    "time": 24626.444580078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) 3.0) s)",
    "output_parens": 5,
    "avg_bits_err_input": 1.3065097947354827,
    "avg_bits_err_output": 1.2165364566661667,
    "avg_bits_err_improve": 0.08997333806931596,
    "time": 26442.45654296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(+ (/ (* (log (/ 1.0 (+ 1.0 (* u -4.0)))) s) 2.0) (/ (* (log (/ (/ 1.0 (log (+ 1.0 (expm1 (* (fma u -4.0 1.0) (fma u -4.0 1.0)))))) (/ 1.0 (fma u -4.0 1.0)))) s) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 12.348574563720144,
    "avg_bits_err_output": 11.577025058581818,
    "avg_bits_err_improve": 0.7715495051383261,
    "time": 23006.870849609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (/ (* (* r 4.0) (* PI (- s))) -0.6666666666666666)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13655677100410343,
    "avg_bits_err_output": 0.14391905734795327,
    "avg_bits_err_improve": -0.007362286343849833,
    "time": 24407.619873046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i) (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.905243938932086,
    "avg_bits_err_output": 0.7220450937510114,
    "avg_bits_err_improve": 0.18319884518107454,
    "time": 23547.342529296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (- (* (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* cosTheta (- cosTheta)))) (- -1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6794786001993081,
    "avg_bits_err_output": 0.4733925597293043,
    "avg_bits_err_improve": 0.20608604047000378,
    "time": 21222.577880859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* u2 (expm1 (log1p (* 2.0 PI))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.343898601823916,
    "avg_bits_err_output": 13.360869441890369,
    "avg_bits_err_improve": -0.016970840066452553,
    "time": 21079.670654296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(+ (if (!= (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (cos (* 2.0 (* PI u2)))) 0.0) (/ 1.0 (/ 1.0 (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (cos (* 2.0 (* PI u2)))))) (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (cos (* 2.0 (* PI u2))))) (cos (* 2.0 (* PI u2))))",
    "output_parens": 35,
    "avg_bits_err_input": 13.384857568120973,
    "avg_bits_err_output": 13.308843760388267,
    "avg_bits_err_improve": 0.07601380773270527,
    "time": 24882.08154296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (log (- 1.0 u0)) (* alpha (- alpha)) (fma alpha alpha (* alpha (- alpha))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.05757635386599,
    "avg_bits_err_output": 14.051252662877756,
    "avg_bits_err_improve": 0.006323690988233821,
    "time": 18993.21826171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (if (!= (/ sin2phi (* alphay alphay)) 0.0) (/ 1.0 (/ 1.0 (/ sin2phi (* alphay alphay)))) (/ sin2phi (* alphay alphay)))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.58468902222884,
    "avg_bits_err_output": 12.586657011526581,
    "avg_bits_err_improve": -0.001967989297741113,
    "time": 18943.718017578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1e+155) (- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (/ (* PI l) (/ (/ (* l l) l) l)) (* PI l))) F) F)) (if (<= (* PI l) -5e-6) (- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (* (/ PI (log1p (expm1 (* PI l)))) (* PI (* l l))) (* PI l))) F) F)) (if (<= (* PI l) 10000000000000.0) (- (* PI l) (/ (/ 1.0 F) (* F (- (/ 1.0 (tan (* PI l))) (/ 0.0 F))))) (if (<= (* PI l) 2e+150) (- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (* (/ PI (log1p (expm1 (* PI l)))) (* PI (* l l))) (* PI l))) F) F)) (- (* PI l) (/ (/ (tan (if (!= (* PI l) 0.0) (/ (* PI l) (/ (/ (* l l) l) l)) (* PI l))) F) F))))))",
    "output_parens": 82,
    "avg_bits_err_input": 16.52083657805504,
    "avg_bits_err_output": 0.6025406370263507,
    "avg_bits_err_improve": 15.918295941028688,
    "time": 23876.575439453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.21641748125036056,
    "avg_bits_err_output": 0.21641748125036056,
    "avg_bits_err_improve": 0,
    "time": 19164.131103515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)) (sin B)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.764258446437987,
    "avg_bits_err_output": 10.70998454077833,
    "avg_bits_err_improve": 3.0542739056596577,
    "time": 25638.0634765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (if (!= (* (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))) 0.0) (/ (- (* (* (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))) (* (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))))) (* (* (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))) (* (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))))))) (* (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))) (/ (exp (* f (/ PI -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))))) (/ (+ (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0)))) (- (exp (* PI (/ f 4.0))) (exp (* f (/ PI -4.0))))))) (/ PI -4.0))",
    "output_parens": 162,
    "avg_bits_err_input": 61.37742317936748,
    "avg_bits_err_output": 61.388394647598126,
    "avg_bits_err_improve": -0.010971468230643211,
    "time": 94858.89282226562,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 43.053375779353544,
    "avg_bits_err_output": 33.92545607317904,
    "avg_bits_err_improve": 9.127919706174502,
    "time": 23914.497802734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.650189929377229,
    "avg_bits_err_output": 3.650189929377229,
    "avg_bits_err_improve": 0,
    "time": 28078.4873046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (sqrt (+ 1.0 (* (pow (* l (/ 2.0 Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) 0.5)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.918375,
    "avg_bits_err_output": 0.918375,
    "avg_bits_err_improve": 0,
    "time": 11262.39892578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 10.159428568136615,
    "avg_bits_err_improve": 0,
    "time": 11203.085205078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (/ (sqrt (* U (* (* n 2.0) (- t (+ (* l (* (/ l Om) 2.0)) (* (pow (/ l Om) 2.0) (* n (- U U*)))))))) 1.0) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+300) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (- (* 2.0 (* (* n U) (- t (* 2.0 (* l (/ l Om)))))) (* (* (pow (/ l Om) 2.0) (* (- U U*) (* n (* n U)))) 2.0)))))",
    "output_parens": 76,
    "avg_bits_err_input": 34.64485074348534,
    "avg_bits_err_output": 28.756934719750408,
    "avg_bits_err_improve": 5.887916023734935,
    "time": 33242.035400390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ 2.0 (* (tan k) (* (/ (pow t 3.0) l) (pow (/ k t) 2.0)))) (/ (sin k) l))",
    "output_parens": 11,
    "avg_bits_err_input": 47.67671050232394,
    "avg_bits_err_output": 36.22337278761774,
    "avg_bits_err_improve": 11.453337714706201,
    "time": 43279.035888671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (pow t 3.0) (/ (sin k) (fabs l))) (/ (* (+ 2.0 (pow (/ k t) 2.0)) (tan k)) (fabs l))))",
    "output_parens": 14,
    "avg_bits_err_input": 32.03275996639717,
    "avg_bits_err_output": 26.336305397586287,
    "avg_bits_err_improve": 5.696454568810886,
    "time": 23653.380126953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ a2 (sqrt 2.0)) (* a2 (cos th))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5189406047119312,
    "avg_bits_err_output": 0.4874475593978983,
    "avg_bits_err_improve": 0.03149304531403285,
    "time": 23976.417236328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (if (!= (* PI n) 0.0) (/ 1.0 (/ 1.0 (* PI n))) (* PI n))) (+ 0.5 (* k -0.5))) (sqrt k))",
    "output_parens": 13,
    "avg_bits_err_input": 0.49293429273022,
    "avg_bits_err_output": 0.47490456316478713,
    "avg_bits_err_improve": 0.01802972956543286,
    "time": 17642.6376953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (* (- (expm1 (log1p (exp l))) (exp (- l))) (* J (cos (/ K 2.0)))) (* (cos (/ K 2.0)) (fma (- (exp (- l))) J (* (exp (- l)) J)))) U)",
    "output_parens": 22,
    "avg_bits_err_input": 16.864990563002465,
    "avg_bits_err_output": 16.87453541735383,
    "avg_bits_err_improve": -0.009544854351364762,
    "time": 21393.9951171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (if (!= M 0.0) (if (!= 0.0 0.0) (- (/ 0.0 (/ -1.0 M))) 0.0) (- (* K (/ (+ m n) 2.0)) M))) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 15.698836307057327,
    "avg_bits_err_output": 1.2260621054462548,
    "avg_bits_err_improve": 14.472774201611072,
    "time": 15559.06396484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.95346936093777,
    "avg_bits_err_output": 17.95346936093777,
    "avg_bits_err_improve": 0,
    "time": 33852.2822265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) -2e+260) (* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h)))) (if (<= (/ h l) -5e-42) (* w0 (sqrt (- 1.0 (* (pow (* M (/ D (* 2.0 d))) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (* (/ (pow (/ (* D M) (+ d d)) 2.0) l) h))))))",
    "output_parens": 33,
    "avg_bits_err_input": 14.633980344312715,
    "avg_bits_err_output": 10.935390400204058,
    "avg_bits_err_improve": 3.6985899441086563,
    "time": 20746.6240234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (/ A (* V l)) 0.0) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (/ A (* V l)) 1e+249) (* c0 (sqrt (/ A (* V l)))) (* c0 (sqrt (* (/ A l) (/ 1.0 V))))))",
    "output_parens": 22,
    "avg_bits_err_input": 19.03711654221674,
    "avg_bits_err_output": 15.117725270037944,
    "avg_bits_err_improve": 3.919391272178796,
    "time": 16997.91650390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= w -4e-221) (* (/ c0 (* 2.0 w)) (+ (* d (/ (/ (* c0 (/ d D)) D) (* w h))) (sqrt (- (* (* d (/ (/ (* c0 (/ d D)) D) (* w h))) (* d (/ (/ (* c0 (/ d D)) D) (* w h)))) (* M M))))) (if (<= w 1.75e+142) (* (/ c0 (* 2.0 w)) (if (!= (* (/ (/ (/ d w) D) (* h D)) (* c0 d)) 0.0) (fma (sqrt (* (fma c0 (* d (/ (/ (/ d w) D) (* h D))) M) (fma (/ (/ (/ d w) D) (* h D)) (* c0 d) (- M)))) (* c0 (/ (* d (/ (/ (/ d w) D) (* h D))) (* (/ (/ (/ d w) D) (* h D)) (* c0 d)))) (/ 1.0 (/ 1.0 (* (/ (/ (/ d w) D) (* h D)) (* c0 d))))) (fma c0 (* d (/ (/ (/ d w) D) (* h D))) (sqrt (* (fma c0 (* d (/ (/ (/ d w) D) (* h D))) M) (fma (/ (/ (/ d w) D) (* h D)) (* c0 d) (- M))))))) (/ (/ (* (fma d (* (/ c0 D) (/ d (* h (* D w)))) (sqrt (* (fma d (* (/ c0 D) (/ d (* h (* D w)))) M) (fma d (* (/ c0 D) (/ d (* h (* D w)))) (- M))))) (+ c0 c0)) w) 4.0)))",
    "output_parens": 124,
    "avg_bits_err_input": 59.78790956957688,
    "avg_bits_err_output": 55.16449062487892,
    "avg_bits_err_improve": 4.62341894469796,
    "time": 49163.621826171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= M -2.5e+86) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (/ (pow (* M (/ D (* 2.0 d))) 2.0) (+ l l))))) (- (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (/ (* (* (pow (* D (* (/ M d) 0.5)) 2.0) (pow (/ d l) 0.5)) (* h (pow (/ d h) 0.5))) (+ l l))))",
    "output_parens": 35,
    "avg_bits_err_input": 26.30444984918681,
    "avg_bits_err_output": 24.52977438553001,
    "avg_bits_err_improve": 1.7746754636567985,
    "time": 40166.71826171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (- (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0))))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 31,
    "avg_bits_err_input": 15.46220520852375,
    "avg_bits_err_output": 14.990190598897835,
    "avg_bits_err_improve": 0.4720146096259157,
    "time": 20987.076416015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9868443609377705,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0.9750943609377705,
    "time": 3423.82568359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (- 1.0 (* v (* v 5.0))) PI) (* (sqrt (- 2.0 (* v (* v 6.0)))) (* (- 1.0 (* v v)) t))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.4341304608686311,
    "avg_bits_err_output": 0.2901486543690839,
    "avg_bits_err_improve": 0.14398180649954723,
    "time": 20873.727783203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (+ (* (* v v) -3.0) 1.0)) (* (sqrt 2.0) (- (* v (/ v -4.0)) -0.25)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011323120312590145,
    "avg_bits_err_output": 0.010823120312590145,
    "avg_bits_err_improve": 0.0005000000000000004,
    "time": 6092.182861328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5474621861276876,
    "avg_bits_err_output": 0.5474621861276876,
    "avg_bits_err_improve": 0,
    "time": 8696.39306640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9828245666930557,
    "avg_bits_err_output": 1.9828245666930557,
    "avg_bits_err_improve": 0,
    "time": 8818.31494140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- Ec (+ Vef EDonor))) KbT)))) (/ NaChar (- (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.016935321751558364,
    "avg_bits_err_output": 0.016935321751558364,
    "avg_bits_err_improve": 0,
    "time": 8534.06884765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (if (!= (pow (fma a a (* b b)) 2.0) 0.0) (/ 1.0 (/ 1.0 (pow (fma a a (* b b)) 2.0))) (pow (fma a a (* b b)) 2.0)) (* 4.0 (* b b))) 1.0)",
    "output_parens": 17,
    "avg_bits_err_input": 0.1862998125036057,
    "avg_bits_err_output": 0.20289943751081715,
    "avg_bits_err_improve": -0.01659962500721146,
    "time": 14367.1796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19424740211637467,
    "avg_bits_err_output": 0.19390304117860424,
    "avg_bits_err_improve": 0.00034436093777043264,
    "time": 22879.642578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (if (!= (pow (fma b b (* a a)) 2.0) 0.0) (* (pow (fma b b (* a a)) 2.0) (+ (/ (pow (fma b b (* a a)) 2.0) (pow (fma b b (* a a)) 2.0)) (* 4.0 (/ (fma b (* b (+ a 3.0)) (* a (- a (* a a)))) (pow (fma b b (* a a)) 2.0))))) (fma 4.0 (fma b (* b (+ 3.0 a)) (* a (- a (* a a)))) (pow (fma b b (* a a)) 2.0))) 1.0)",
    "output_parens": 39,
    "avg_bits_err_input": 0.18480271804288967,
    "avg_bits_err_output": 0.18939533502867856,
    "avg_bits_err_improve": -0.004592616985788889,
    "time": 18814.275146484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.23647577207128,
    "avg_bits_err_output": 13.23647577207128,
    "avg_bits_err_improve": 0,
    "time": 14445.84130859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (if (!= (+ 1.0 (- (/ (expm1 (* 2.0 x)) (expm1 x)) -1.0)) 0.0) (/ (- (* (+ (/ (expm1 (* 2.0 x)) (expm1 x)) 1.0) (+ (/ (expm1 (* 2.0 x)) (expm1 x)) 1.0)) 1.0) (+ 1.0 (- (/ (expm1 (* 2.0 x)) (expm1 x)) -1.0))) (/ (expm1 (* 2.0 x)) (expm1 x))))",
    "output_parens": 32,
    "avg_bits_err_input": 40.901760617157315,
    "avg_bits_err_output": 0.0625,
    "avg_bits_err_improve": 40.839260617157315,
    "time": 8790.885986328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (tan x)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.902755490590717,
    "avg_bits_err_output": 31.902755490590717,
    "avg_bits_err_improve": 0,
    "time": 16397.90673828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.40584995319248,
    "avg_bits_err_output": 34.40584995319248,
    "avg_bits_err_improve": 0,
    "time": 13733.87646484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.3828390476411,
    "avg_bits_err_output": 34.3828390476411,
    "avg_bits_err_improve": 0,
    "time": 16132.116943359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.402821974584036,
    "avg_bits_err_output": 30.657584335047456,
    "avg_bits_err_improve": 0.7452376395365796,
    "time": 15753.14013671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.65858272605914,
    "avg_bits_err_output": 32.65858272605914,
    "avg_bits_err_improve": 0,
    "time": 19048.597900390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log (+ 1.0 (expm1 (- (log1p N) (log N)))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.889323456536772,
    "avg_bits_err_output": 29.889477201656973,
    "avg_bits_err_improve": -0.00015374512020116526,
    "time": 12698.673583984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(/ (/ (+ (/ x (- -1.0 x)) (- 2.0 (* (/ 1.0 (+ x 1.0)) x))) -2.0) x)",
    "output_parens": 9,
    "avg_bits_err_input": 14.376828836079588,
    "avg_bits_err_output": 14.378720454207658,
    "avg_bits_err_improve": -0.0018916181280701494,
    "time": 14407.953369140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(if (!= (cos (+ x eps)) 0.0) (fma (/ (cos (+ x eps)) (cos (+ x eps))) (cos (+ x eps)) (/ (* (cos (+ x eps)) (cos x)) (- (cos (+ x eps))))) (- (cos (+ x eps)) (cos x)))",
    "output_parens": 24,
    "avg_bits_err_input": 39.32695016404619,
    "avg_bits_err_output": 39.323070608646006,
    "avg_bits_err_improve": 0.003879555400182255,
    "time": 17212.04345703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(if (!= (+ (cbrt (+ 1.0 x)) (cbrt x)) 0.0) (/ (+ (- (* (cbrt (+ 1.0 x)) (cbrt (+ 1.0 x))) (fma (cbrt x) (cbrt x) 1.0)) 1.0) (+ (cbrt (+ 1.0 x)) (cbrt x))) (- (cbrt (+ 1.0 x)) (cbrt x)))",
    "output_parens": 25,
    "avg_bits_err_input": 30.409551823361127,
    "avg_bits_err_output": 30.25431632902451,
    "avg_bits_err_improve": 0.15523549433661898,
    "time": 11342.955810546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(+ (/ 0.5 (sin x)) (/ (- 0.5 (cos x)) (sin x)))",
    "output_parens": 7,
    "avg_bits_err_input": 30.43412667195782,
    "avg_bits_err_output": 30.475567169375655,
    "avg_bits_err_improve": -0.04144049741783462,
    "time": 21906.812255859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (+ (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ b b)) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.45820643720567,
    "avg_bits_err_output": 34.47669951633576,
    "avg_bits_err_improve": -0.01849307913009568,
    "time": 24030.6865234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (- (- (- b) (* (sqrt (if (!= (* a (* c -4.0)) 0.0) (fma a (* (* c 16.0) (* c (/ a (* a (* c -4.0))))) (- (* (* -4.0 (* b b)) (/ c (* c -4.0))) (/ 0.0 a))) (fma a (* c -4.0) (* b b)))) 2.0)) b) 2.0) (* a 2.0))",
    "output_parens": 29,
    "avg_bits_err_input": 34.47193849760178,
    "avg_bits_err_output": 34.38043199925144,
    "avg_bits_err_improve": 0.0915064983503413,
    "time": 23851.334716796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (/ (exp (log1p (log (- 1.0 x)))) (log1p x)) (/ 1.0 (log1p x)))",
    "output_parens": 9,
    "avg_bits_err_input": 61.34023281158273,
    "avg_bits_err_output": 59.60835884359693,
    "avg_bits_err_improve": 1.7318739679857984,
    "time": 23940.187255859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(if (!= (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))) 0.0) (if (!= (* (fma n (- (log1p n) (log n)) (log1p n)) (/ (fma n (- (log1p n) (log n)) (log1p n)) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 0.0) (- (/ 1.0 (log (+ 1.0 (expm1 (/ 1.0 (/ (* (fma n (- (log1p n) (log n)) (log1p n)) (fma n (- (log1p n) (log n)) (log1p n))) (- -1.0 (fma n (- (log1p n) (log n)) (log1p n)))))))))) 0.0) (+ (fma n (- (log1p n) (log n)) (log1p n)) -1.0))",
    "output_parens": 58,
    "avg_bits_err_input": 63.005504915345526,
    "avg_bits_err_output": 44.220414960177045,
    "avg_bits_err_improve": 18.78508995516848,
    "time": 19027.686767578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (- (/ (- eps -1.0) (- eps -1.0)) (+ (/ eps (- eps -1.0)) (/ eps (- eps -1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.6068582932264,
    "avg_bits_err_output": 58.56480205031034,
    "avg_bits_err_improve": 0.04205624291606114,
    "time": 19795.349853515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 (+ x x)) (/ (+ (/ -1.0 (/ x (tan x))) 2.0) (/ (+ x x) (/ x (tan x)))))",
    "output_parens": 12,
    "avg_bits_err_input": 59.946070332992555,
    "avg_bits_err_output": 59.93495678721105,
    "avg_bits_err_improve": 0.011113545781505252,
    "time": 27409.843017578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (if (!= (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))) 0.0) (/ 1.0 (/ 1.0 (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b)))))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps b))))) (expm1 (* eps a)))",
    "output_parens": 28,
    "avg_bits_err_input": 60.25634483926499,
    "avg_bits_err_output": 29.35545602870815,
    "avg_bits_err_improve": 30.90088881055684,
    "time": 25409.708984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(if (!= (/ (exp x) (expm1 x)) 0.0) (/ (/ 1.0 (expm1 x)) (/ 1.0 (exp x))) (/ (exp x) (expm1 x)))",
    "output_parens": 13,
    "avg_bits_err_input": 41.33060170075053,
    "avg_bits_err_output": 0.48088684218813105,
    "avg_bits_err_improve": 40.84971485856239,
    "time": 4621.250732421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64451325328932,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.64426325328932,
    "time": 6133.9013671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.473618010929215,
    "avg_bits_err_output": 0.02225475254202879,
    "avg_bits_err_improve": 29.451363258387186,
    "time": 3823.237548828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- (exp x)) 0.0) (/ (fma (exp x) (exp x) (- (* (exp x) (exp (- x))) (* (exp x) 2.0))) (- (exp x))) (- (- 2.0 (exp x)) (exp (- x)))))",
    "output_parens": 23,
    "avg_bits_err_input": 29.784773665693805,
    "avg_bits_err_output": 29.035841766181182,
    "avg_bits_err_improve": 0.7489318995126233,
    "time": 19036.05078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (/ (if (!= (/ 1.0 (+ x -1.0)) 0.0) (/ (/ (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))) (+ x -1.0)) (/ 1.0 (+ x -1.0))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0)))) (+ x -1.0)) (/ 1.0 (+ x -1.0))) (+ (- (/ 1.0 (+ 1.0 x)) (/ 2.0 x)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 39,
    "avg_bits_err_input": 9.6849076618687,
    "avg_bits_err_output": 9.691240516442859,
    "avg_bits_err_improve": -0.006332854574159441,
    "time": 25969.964111328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (* (tan (+ x eps)) (if (!= (/ (+ (tan (+ x eps)) (tan x)) (tan (+ x eps))) 0.0) (/ (/ (fma (tan x) (/ (tan x) (- (tan (+ x eps)))) (tan (+ x eps))) (tan (+ x eps))) (/ (+ (tan (+ x eps)) (tan x)) (tan (+ x eps)))) (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 47,
    "avg_bits_err_input": 37.45831012305874,
    "avg_bits_err_output": 37.46097500257284,
    "avg_bits_err_improve": -0.0026648795140999937,
    "time": 17011.65478515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(if (!= (+ 1.0 (- (sqrt (+ x 1.0)) (sqrt x))) 0.0) (/ (+ (* (+ 1.0 (- (sqrt (+ x 1.0)) (sqrt x))) (+ 1.0 (- (sqrt (+ x 1.0)) (sqrt x)))) (if (!= (sqrt (+ x 1.0)) 0.0) (/ (- (* (sqrt (+ x 1.0)) (+ (sqrt x) -1.0)) (* (sqrt (+ x 1.0)) (sqrt (+ x 1.0)))) (sqrt (+ x 1.0))) (+ -1.0 (- (sqrt x) (sqrt (+ x 1.0)))))) (+ 1.0 (- (sqrt (+ x 1.0)) (sqrt x)))) (- (sqrt (+ x 1.0)) (sqrt x)))",
    "output_parens": 52,
    "avg_bits_err_input": 30.451153362379326,
    "avg_bits_err_output": 29.709192593891643,
    "avg_bits_err_improve": 0.741960768487683,
    "time": 13878.60546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (+ (sin (+ x eps)) (sin x)) 0.0) (fma (sin (+ x eps)) (/ (sin (+ x eps)) (+ (sin (+ x eps)) (sin x))) (if (!= (* (sin x) (/ (sin x) (- (- (sin x)) (sin (+ x eps))))) 0.0) (/ 1.0 (/ 1.0 (* (sin x) (/ (sin x) (- (- (sin x)) (sin (+ x eps))))))) (* (sin x) (/ (sin x) (- (- (sin x)) (sin (+ x eps))))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 51,
    "avg_bits_err_input": 36.814638662066,
    "avg_bits_err_output": 36.852459822643915,
    "avg_bits_err_improve": -0.03782116057791285,
    "time": 19120.2666015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (/ 1.0 (sqrt x)) (if (!= (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) 0.0) (/ (/ (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x)))) (sqrt (+ 1.0 x))) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 x))))) (/ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 24,
    "avg_bits_err_input": 20.194070471701124,
    "avg_bits_err_output": 20.188146855303366,
    "avg_bits_err_improve": 0.005923616397758735,
    "time": 16414.896240234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(if (!= (+ (atan (+ 1.0 N)) (atan N)) 0.0) (+ (fma (- (/ (atan N) (+ (atan (+ 1.0 N)) (atan N)))) (atan N) (* (atan N) (/ (atan N) (+ (atan (+ 1.0 N)) (atan N))))) (* (+ (atan (+ 1.0 N)) (atan N)) (/ (- (atan (+ 1.0 N)) (atan N)) (+ (atan (+ 1.0 N)) (atan N))))) (- (atan (+ 1.0 N)) (atan N)))",
    "output_parens": 42,
    "avg_bits_err_input": 14.985983612324597,
    "avg_bits_err_output": 14.994385226551083,
    "avg_bits_err_improve": -0.008401614226485776,
    "time": 11993.807861328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (- (log (+ (exp a) (exp b))) -1.0) 0.0) (/ (log (+ 1.0 (expm1 (* (log (+ (exp a) (exp b))) (+ (log (+ (exp a) (exp b))) 1.0))))) (- (log (+ (exp a) (exp b))) -1.0)) (log (+ (exp a) (exp b))))",
    "output_parens": 30,
    "avg_bits_err_input": 29.800148016001764,
    "avg_bits_err_output": 30.13441196262053,
    "avg_bits_err_improve": -0.3342639466187656,
    "time": 38091.856201171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (* m (* (- 1.0 m) (- 1.0 m))) v) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07936580507553277,
    "avg_bits_err_output": 0.07614644413776236,
    "avg_bits_err_improve": 0.0032193609377704074,
    "time": 13119.07666015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(/ (* a (- b)) (/ (/ 1.0 b) a))",
    "output_parens": 5,
    "avg_bits_err_input": 16.681680381599026,
    "avg_bits_err_output": 0.26738966250649016,
    "avg_bits_err_improve": 16.414290719092538,
    "time": 12031.125732421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ PI 180.0) angle))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.634345486172702,
    "avg_bits_err_output": 20.61455246454336,
    "avg_bits_err_improve": 0.019793021629340046,
    "time": 22184.4365234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (sin (* PI (/ angle 180.0))) (* (pow a 2.0) -2.0)) (* (sin (* PI (/ angle 180.0))) (* (pow b 2.0) -2.0))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 31.456268841423093,
    "avg_bits_err_output": 31.456492141498472,
    "avg_bits_err_improve": -0.00022330007537973984,
    "time": 34795.3662109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (if (!= (* (/ angle 180.0) PI) 0.0) (/ 1.0 (- (* (/ (/ 1.0 (/ angle 180.0)) PI) (* (/ angle 180.0) (/ (/ PI PI) (/ angle 180.0)))) 0.0)) (* (/ angle 180.0) PI)))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 21.348467854042926,
    "avg_bits_err_output": 21.359819596335175,
    "avg_bits_err_improve": -0.011351742292248446,
    "time": 30679.92919921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1812550362151282,
    "avg_bits_err_output": 0.1812550362151282,
    "avg_bits_err_improve": 0,
    "time": 15764.128173828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (tan x) -1.0) (- -1.0 (* (tan x) (tan x))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32299789178787647,
    "avg_bits_err_output": 0.31375567096001583,
    "avg_bits_err_improve": 0.009242220827860637,
    "time": 17344.4365234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(if (!= e 0.0) (* (* e (sin v)) (/ e (* e (fma e (cos v) 1.0)))) (* e (/ (sin v) (fma e (cos v) 1.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.13271936093777043,
    "avg_bits_err_output": 0.1372524437510817,
    "avg_bits_err_improve": -0.004533082813311273,
    "time": 15453.063232421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos phi1) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.845404614420108,
    "avg_bits_err_output": 16.845690967958888,
    "avg_bits_err_improve": -0.00028635353877959346,
    "time": 33600.52294921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0)))))) 0.0) (/ (fma (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 16.0 (/ 16.0 (fma c (* a -4.0) (* b b)))) (fma b b (* c (* a -4.0))))) (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0))))) (* b (- b))) (- b (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (expm1 (log1p (/ 8.0 (/ 8.0 (fma c (* a -4.0) (* b b)))))) (fma b b (* c (* a -4.0)))))))) (- (sqrt (if (!= (- (* c (* a 4.0)) (* b b)) 0.0) (/ 4.0 (/ 4.0 (fma b b (* c (* a -4.0))))) (fma b b (* c (* a -4.0))))) b)) (* a 2.0))",
    "output_parens": 90,
    "avg_bits_err_input": 52.64142193928883,
    "avg_bits_err_output": 51.537940061935686,
    "avg_bits_err_improve": 1.103481877353147,
    "time": 36785.75341796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(+ (* (/ (if (!= (- b) 0.0) (/ (fma b b (* (sqrt (fma c (* a -4.0) (* b b))) (- b))) (- b)) (- (sqrt (fma c (* a -4.0) (* b b))) b)) a) 0.25) (if (!= (/ (sqrt (fma a (* c -4.0) (* b b))) (* a 4.0)) 0.0) (- (/ (* (if (!= (- (- b) (sqrt (fma c (* a -4.0) (* b b)))) 0.0) (/ (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b))))) (- (- b) (sqrt (fma c (* a -4.0) (* b b))))) (- (sqrt (fma c (* a -4.0) (* b b))) b)) (/ (sqrt (fma a (* c -4.0) (* b b))) (* a 4.0))) (sqrt (fma a (* c -4.0) (* b b)))) 0.0) (* (/ (- (sqrt (fma a (* c -4.0) (* b b))) b) a) 0.25)))",
    "output_parens": 79,
    "avg_bits_err_input": 28.61555811155753,
    "avg_bits_err_output": 28.164016478775455,
    "avg_bits_err_improve": 0.4515416327820745,
    "time": 34495.16650390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- b) 0.0) (/ (fma b b (* b (- (sqrt (fma b b (* c (* a -4.0))))))) (- b)) (fma b -1.0 (sqrt (fma b b (* c (* a -4.0)))))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 43.974908201120016,
    "avg_bits_err_output": 42.985805956106084,
    "avg_bits_err_improve": 0.9891022450139317,
    "time": 24441.931884765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b -1.35e+154) (/ (fma b -1.0 (sqrt (if (!= (- (* b b) (* a (* c -4.0))) 0.0) 0.0 (fma a (* c -4.0) (* b b))))) (* a 2.0)) (/ (- (+ (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ b b)) (* a 2.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 34.46880819558325,
    "avg_bits_err_output": 33.174885775819114,
    "avg_bits_err_improve": 1.2939224197641366,
    "time": 18608.95556640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (+ (* (cos phi1) (cos phi1)) (* (cos (- lambda1 lambda2)) (* (cos phi2) (cos phi1)))) (cos phi1)) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.9314431385492803,
    "avg_bits_err_output": 0.9489876068940121,
    "avg_bits_err_improve": -0.01754446834473178,
    "time": 22626.3447265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(if (!= (+ 1.0 (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) 0.0) (/ (if (!= (- 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) 0.0) (/ (- 1.0 (/ (/ (/ 16.0 (+ 1.0 (exp (* -2.0 x)))) (+ 1.0 (exp (* -2.0 x)))) (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x)))))) (- 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ 1.0 (/ -4.0 (* (+ 1.0 (exp (* -2.0 x))) (+ 1.0 (exp (* -2.0 x))))))) (+ -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))) (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0))",
    "output_parens": 65,
    "avg_bits_err_input": 29.52380263861097,
    "avg_bits_err_output": 29.518587788580376,
    "avg_bits_err_improve": 0.005214850030593965,
    "time": 25267.268310546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(fma (exp x) (/ 1.0 (+ (exp x) (exp (- x)))) (- (exp (log1p (/ (exp (- x)) (- (- (exp x)) (exp (- x)))))) 1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 58.12213032889227,
    "avg_bits_err_output": 58.14210769534221,
    "avg_bits_err_improve": -0.01997736644994319,
    "time": 16958.692138671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.996967362018786,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 57.987717362018785,
    "time": 13267.43310546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(if (!= (- -4.0 (/ 2.0 (+ (exp x) (exp (- x))))) 0.0) (/ (/ (+ 8.0 (/ 4.0 (+ (exp x) (exp (- x))))) (+ (exp x) (exp (- x)))) (+ 4.0 (/ 2.0 (+ (exp x) (exp (- x)))))) (/ 2.0 (+ (exp x) (exp (- x)))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.008323120312590145,
    "avg_bits_err_output": 0.01027124062518029,
    "avg_bits_err_improve": -0.0019481203125901458,
    "time": 4658.940673828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.07419812031259,
    "avg_bits_err_output": 32.07419812031259,
    "avg_bits_err_improve": 0,
    "time": 4484.027587890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (* (/ 2.0 (- 1.0 x)) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 58.596442739326356,
    "avg_bits_err_output": 0.024740601562950725,
    "avg_bits_err_improve": 58.5717021377634,
    "time": 16426.240478515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.020049039677847345,
    "avg_bits_err_output": 0.020049039677847345,
    "avg_bits_err_improve": 0,
    "time": 3204.484619140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12707312031259016,
    "avg_bits_err_output": 0.12707312031259016,
    "avg_bits_err_improve": 0,
    "time": 20940.595947265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos t) (cos (atan (* (- eh) (/ (tan t) ew)))))) (* eh (* (sin t) (sin (atan (* (- eh) (/ (tan t) ew))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1242712406251803,
    "avg_bits_err_output": 0.12471936093777043,
    "avg_bits_err_improve": -0.00044812031259013063,
    "time": 27948.898193359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.40633293832862,
    "avg_bits_err_output": 3.608744908494849,
    "avg_bits_err_improve": 34.79758802983377,
    "time": 28026.36767578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (/ a a) (* (/ b a) (/ b a)))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.024248602497597,
    "avg_bits_err_output": 0.010180367936981093,
    "avg_bits_err_improve": 15.014068234560616,
    "time": 6423.0947265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin delta) (* (cos phi1) (sin theta))) (expm1 (log1p (fma (sin phi1) (- (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))) (cos delta))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1503200559205525,
    "avg_bits_err_output": 0.15684981574973506,
    "avg_bits_err_improve": -0.006529759829182552,
    "time": 33951.982177734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ (/ b a) -3.0)) 0.0) (/ (fma (sqrt (fma -3.0 (* c a) (* b b))) (* (sqrt (fma -3.0 (* c a) (* b b))) (* (/ 0.3333333333333333 a) (/ 0.3333333333333333 a))) (- (* (/ b (* a a)) (/ b 9.0)))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (/ 0.3333333333333333 a)) (/ (/ b a) -3.0))) (* (/ (- (sqrt (fma c (* a -3.0) (* b b))) b) a) 0.3333333333333333))",
    "output_parens": 46,
    "avg_bits_err_input": 52.66005239941638,
    "avg_bits_err_output": 50.86762351061341,
    "avg_bits_err_improve": 1.7924288888029665,
    "time": 30260.7607421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) 0.0) (/ (fma (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (* (* b b) (* (sqrt (fma c (* a -3.0) (* b b))) (- (sqrt (fma c (* a -3.0) (* b b))))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (* (sqrt (fma c (* a -3.0) (* b b))) 2.0) (* (sqrt (fma c (* a -3.0) (* b b))) (- (sqrt (fma c (* a -3.0) (* b b))))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b)))) (- (sqrt (fma b b (* c (* a -3.0)))) (- b))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 96,
    "avg_bits_err_input": 28.78284198433713,
    "avg_bits_err_output": 28.371687212645234,
    "avg_bits_err_improve": 0.4111547716918942,
    "time": 38333.752197265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(+ (/ (- b) (* a 6.0)) (fma (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a) (/ (/ b a) -6.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 44.025899448391854,
    "avg_bits_err_output": 42.88342869634043,
    "avg_bits_err_improve": 1.1424707520514232,
    "time": 26978.9951171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma -3.0 (* a c) (* b b))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.50402994997815,
    "avg_bits_err_output": 34.53059766964378,
    "avg_bits_err_improve": -0.026567719665635536,
    "time": 20375.35009765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos (- lambda1 lambda2)) (expm1 (log1p (* (sin phi1) (cos phi2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.948513061722045,
    "avg_bits_err_output": 12.954120052143288,
    "avg_bits_err_improve": -0.005606990421243907,
    "time": 30883.548828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- (+ x -1.0) (* x (/ x (- x -1.0))))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.37113755413338,
    "avg_bits_err_output": 0.4836707457368143,
    "avg_bits_err_improve": 28.887466808396567,
    "time": 23909.94775390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ x -1.0)) (/ x (+ 2.0 (+ x x)))) (/ x (+ 2.0 (+ x x))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011125,
    "avg_bits_err_output": 0.052197071662396045,
    "avg_bits_err_improve": -0.04107207166239604,
    "time": 4904.25830078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (- 0.0 (/ 2.0 (+ x -1.0))) (+ 1.0 x))",
    "output_parens": 5,
    "avg_bits_err_input": 14.321671084054008,
    "avg_bits_err_output": 0.074625,
    "avg_bits_err_improve": 14.24704608405401,
    "time": 16267.03857421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 5e+93) (/ (sqrt (* (+ (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C) (- A)) (* (* (- (pow B 2.0) (* A (* 4.0 C))) F) -2.0))) (- (- (pow B 2.0) (* A (* 4.0 C))))) 0.0)",
    "output_parens": 45,
    "avg_bits_err_input": 52.16865161148619,
    "avg_bits_err_output": 51.368486977768846,
    "avg_bits_err_improve": 0.800164633717344,
    "time": 36884.09423828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI))",
    "output_parens": 11,
    "avg_bits_err_input": 30.0025210089891,
    "avg_bits_err_output": 30.00309412930023,
    "avg_bits_err_improve": -0.0005731203111309924,
    "time": 23805.31396484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 5e+229) (/ (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (pow B 2.0) (* A (* C 4.0))) (* F 2.0)))) (- (* 4.0 (* A C)) (pow B 2.0))) 0.0)",
    "output_parens": 43,
    "avg_bits_err_input": 52.36921926210302,
    "avg_bits_err_output": 50.80431429409479,
    "avg_bits_err_improve": 1.5649049680082356,
    "time": 36651.60009765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.690131836924849,
    "avg_bits_err_output": 15.690131836924849,
    "avg_bits_err_improve": 0,
    "time": 2048.910400390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (* (- g) (- (sqrt (fma g g (- (* h h)))) g)) (- g)) (- (sqrt (fma g g (- (* h h)))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 35.53274624010303,
    "avg_bits_err_output": 35.44406861018506,
    "avg_bits_err_improve": 0.08867762991796724,
    "time": 9067.34326171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9904251890708848,
    "avg_bits_err_output": 0.9761605265643933,
    "avg_bits_err_improve": 0.014264662506491499,
    "time": 5161.929931640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(expm1 (log1p (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.7035212406251803,
    "avg_bits_err_output": 0.709389285939213,
    "avg_bits_err_improve": -0.005868045314032733,
    "time": 4337.626953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) (- INFINITY)) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -2e-265) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a1 b2) (/ a2 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 2e+304) (/ (* a1 a2) (* b1 b2)) (* (/ 1.0 b1) (* a1 (/ a2 b2)))))))",
    "output_parens": 37,
    "avg_bits_err_input": 11.326408975029926,
    "avg_bits_err_output": 3.0058520370989057,
    "avg_bits_err_improve": 8.32055693793102,
    "time": 9222.772216796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3967590118918804,
    "avg_bits_err_output": 0.35021599005682036,
    "avg_bits_err_improve": 0.04654302183506004,
    "time": 8392.327392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log (if (!= (- x (hypot 1.0 x)) 0.0) (/ (+ (* (hypot 1.0 x) (- (hypot 1.0 x) x)) (* x (- (hypot 1.0 x) x))) (- (hypot 1.0 x) x)) (+ x (hypot 1.0 x))))",
    "output_parens": 18,
    "avg_bits_err_input": 52.82564529594612,
    "avg_bits_err_output": 44.668534965374185,
    "avg_bits_err_improve": 8.157110330571932,
    "time": 21988.239013671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(- (* (exp (+ (log a) (log b))) 1.25) (* (exp (if (!= (+ (log a) (log b)) 0.0) (/ 1.0 (/ 1.0 (+ (log a) (log b)))) (+ (log a) (log b)))) 0.25))",
    "output_parens": 21,
    "avg_bits_err_input": 5.740093080754705,
    "avg_bits_err_output": 5.746488815861177,
    "avg_bits_err_improve": -0.006395735106472067,
    "time": 12259.06005859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- (/ -1.0 (- -1.0 x)) (/ (* x x) (+ 1.0 x))) (+ 1.0 x)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.01475,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 0.0011249999999999993,
    "time": 10803.75732421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1381.791259765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= w -1.4e-38) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* w (* (* r r) (* (/ w (- 1.0 v)) (- 0.375 (* v 0.25))))) 4.5)) (if (<= w 5e-28) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* r (* w (* (* w (/ r (- 1.0 v))) (- 0.375 (* v 0.25))))) 4.5)) (- (+ 3.0 (/ 2.0 (* r r))) (+ (* w (* (* r r) (* (/ w (- 1.0 v)) (- 0.375 (* v 0.25))))) 4.5))))",
    "output_parens": 43,
    "avg_bits_err_input": 12.980985044843623,
    "avg_bits_err_output": 0.4658492408313421,
    "avg_bits_err_improve": 12.51513580401228,
    "time": 29709.553955078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (+ (* (* x1 x1) (* (/ (- x1 (fma 3.0 (* x1 x1) (* 2.0 x2))) (fma x1 x1 1.0)) -4.0)) (* -6.0 (* x1 x1))))))))))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5128586979480503,
    "avg_bits_err_output": 0.28108619381872013,
    "avg_bits_err_improve": 0.23177250412933015,
    "time": 65170.692626953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (/ v (+ t1 (+ t1 (+ u u)))) (* t1 -2.0)) (+ t1 u))",
    "output_parens": 8,
    "avg_bits_err_input": 18.39720575079531,
    "avg_bits_err_output": 1.4225096001985036,
    "avg_bits_err_improve": 16.97469615059681,
    "time": 6980.718994140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.23615584257481162,
    "avg_bits_err_output": 0.18730432343849157,
    "avg_bits_err_improve": 0.04885151913632005,
    "time": 6097.668701171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003625,
    "avg_bits_err_output": 0.003625,
    "avg_bits_err_improve": 0,
    "time": 2389.441162109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (* (/ (- (/ 1.0 b) (/ 1.0 a)) (- b a)) (/ PI -2.0)) (+ b a))",
    "output_parens": 9,
    "avg_bits_err_input": 14.242238088516295,
    "avg_bits_err_output": 0.3022862796989484,
    "avg_bits_err_improve": 13.939951808817346,
    "time": 17674.217041015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (- (* eps x) x)) (- (exp (- (fma eps x x))) (- (/ (exp (- (fma eps x x))) eps) (/ (exp (- (* eps x) x)) eps)))) 2.0)",
    "output_parens": 18,
    "avg_bits_err_input": 30.23530296898333,
    "avg_bits_err_output": 0.931517369959687,
    "avg_bits_err_improve": 29.303785599023644,
    "time": 16635.924560546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (fma (+ 2.0 (/ -2.0 (+ t (/ t t)))) (+ 2.0 (/ -2.0 (+ t (/ t t)))) 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.019,
    "avg_bits_err_output": 0.004375,
    "avg_bits_err_improve": 0.014624999999999999,
    "time": 7249.874267578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (- (* (+ 2.0 (/ -2.0 (+ t (/ t t)))) (+ 2.0 (/ -2.0 (+ t (/ t t))))) (- -2.0 (* (+ 2.0 (/ -2.0 (+ t (/ t t)))) (+ 2.0 (/ -2.0 (+ t (/ t t))))))) (+ 2.0 (+ 2.0 (* (+ 2.0 (/ -2.0 (+ t (/ t t)))) (+ 4.0 (/ -4.0 (+ t (/ t t))))))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.022625,
    "avg_bits_err_output": 0.005865601562950723,
    "avg_bits_err_improve": 0.016759398437049277,
    "time": 20486.18212890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (+ 1.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0)))) (+ 4.0 (/ (* (/ (* 2.0 t) (+ t 1.0)) (* t 4.0)) (+ t 1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.04875,
    "avg_bits_err_output": 0.109875,
    "avg_bits_err_improve": -0.061125,
    "time": 15891.92236328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3857.011474609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2775.33203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 3136.46337890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.847342034684209,
    "avg_bits_err_output": 0.2395,
    "avg_bits_err_improve": 7.607842034684209,
    "time": 15499.205322265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.638903356860634,
    "avg_bits_err_output": 7.638903356860634,
    "avg_bits_err_improve": 0,
    "time": 3724.24853515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.03787629900214,
    "avg_bits_err_output": 16.03787629900214,
    "avg_bits_err_improve": 0,
    "time": 17327.96728515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(if (!= (cos x) 0.0) (/ (* (exp (* x (* x 10.0))) (if (!= (+ 1.0 (exp (log1p (* (cos x) (cos x))))) 0.0) (/ (- (* (exp (log1p (* (cos x) (cos x)))) (exp (log1p (* (cos x) (cos x))))) 1.0) (+ 1.0 (exp (log1p (* (cos x) (cos x)))))) (* (cos x) (cos x)))) (cos x)) (* (exp (* x (* x 10.0))) (cos x)))",
    "output_parens": 44,
    "avg_bits_err_input": 3.5614595501176867,
    "avg_bits_err_output": 3.629177997561685,
    "avg_bits_err_improve": -0.06771844744399846,
    "time": 36485.7978515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(if (!= (* (/ (* (fma x x 1.0) 2.0) (* (fma x x 1.0) 2.0)) (/ x (fma x x 1.0))) 0.0) (- (/ (/ (- x 0.0) x) (+ x (/ 1.0 x))) 0.0) (/ x (fma x x 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 0.09119812031259014,
    "avg_bits_err_improve": 15.02006072587372,
    "time": 9616.72021484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.42939066357538,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.42939066357538,
    "time": 5282.77392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.73041824971003,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.729918249710025,
    "time": 4075.153564453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.245875,
    "avg_bits_err_improve": 63.754125,
    "time": 19506.075439453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(/ (* t t) 2.5e+31)",
    "output_parens": 2,
    "avg_bits_err_input": 61.8432546466958,
    "avg_bits_err_output": 0.4151842109406551,
    "avg_bits_err_improve": 61.428070435755146,
    "time": 7686.009033203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (- (- (- b) (* (sqrt (if (!= (* a (* c -4.0)) 0.0) (fma a (* (* c 16.0) (* c (/ a (* a (* c -4.0))))) (- (* (* -4.0 (* b b)) (/ c (* c -4.0))) (/ 0.0 a))) (fma a (* c -4.0) (* b b)))) 2.0)) b) 2.0) (* a 2.0))",
    "output_parens": 29,
    "avg_bits_err_input": 34.47193849760178,
    "avg_bits_err_output": 34.38043199925144,
    "avg_bits_err_improve": 0.0915064983503413,
    "time": 23985.3017578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b -1.35e+154) (/ (fma b -1.0 (sqrt (if (!= (- (* b b) (* a (* c -4.0))) 0.0) 0.0 (fma a (* c -4.0) (* b b))))) (* a 2.0)) (/ (- (+ (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ b b)) (* a 2.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 34.46880819558325,
    "avg_bits_err_output": 33.174885775819114,
    "avg_bits_err_improve": 1.2939224197641366,
    "time": 20937.551025390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2215.7216796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.95170034462739,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 39.94070034462739,
    "time": 6892.9404296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.466781533013744,
    "avg_bits_err_output": 20.466781533013744,
    "avg_bits_err_improve": 0,
    "time": 6017.367919921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ d a))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6390114363130643,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6390114363130643,
    "time": 9324.4443359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03625,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.035124999999999997,
    "time": 4902.311279296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.020969360937770437,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 0.010844360937770437,
    "time": 2681.175048828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.015,
    "avg_bits_err_output": 0.015,
    "avg_bits_err_improve": 0,
    "time": 3432.3603515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00125,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0,
    "time": 1938.515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40246729375396656,
    "avg_bits_err_output": 0.235,
    "avg_bits_err_improve": 0.16746729375396657,
    "time": 5117.19482421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(if (!= (- -1.0 (cos x)) 0.0) (- (/ (* (cos x) (cos x)) (- (* (cos x) -2.0) 2.0)) (/ (- 2.0 (* (cos x) (cos x))) (- (* (cos x) -2.0) 2.0))) (- 1.0 (cos x)))",
    "output_parens": 22,
    "avg_bits_err_input": 29.91012317378537,
    "avg_bits_err_output": 29.910610848462316,
    "avg_bits_err_improve": -0.00048767467694688094,
    "time": 19750.89453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (if (!= eps 0.0) (* (if (!= (/ (- eps (* x x)) eps) 0.0) (/ 1.0 (/ 1.0 (/ (- eps (* x x)) eps))) (/ (- eps (* x x)) eps)) (- eps)) (- (* x x) eps))))",
    "output_parens": 21,
    "avg_bits_err_input": 24.34135249968183,
    "avg_bits_err_output": 24.39014305279768,
    "avg_bits_err_improve": -0.048790553115850344,
    "time": 11860.506591796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (/ x (tan x)) (log (exp (/ (sin x) (tan x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.08428995822381,
    "avg_bits_err_output": 30.09767581430579,
    "avg_bits_err_improve": -0.013385856081981728,
    "time": 29886.26806640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007792481250360578,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.0071674812503605785,
    "time": 2298.8212890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= n -1.35e-73) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (if (<= n 7.2e+24) 0.0 (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (pow (+ 1.0 (/ i n)) n) (/ (log1p (expm1 (* i (/ i (* (fabs n) (/ i n)))))) (fabs n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n))))))",
    "output_parens": 62,
    "avg_bits_err_input": 47.80853741260593,
    "avg_bits_err_output": 40.59118084610522,
    "avg_bits_err_improve": 7.217356566500712,
    "time": 30265.827880859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(+ (* b (/ d (fma d d (* c c)))) (* a (if (!= (/ c (fma d d (* c c))) 0.0) (/ 1.0 (/ 1.0 (/ c (fma d d (* c c))))) (/ c (fma d d (* c c))))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.722039910265075,
    "avg_bits_err_output": 23.903838068110215,
    "avg_bits_err_improve": 2.81820184215486,
    "time": 11818.472900390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* b (/ c (fma c c (* d d)))) (* a (if (!= (/ d (fma c c (* d d))) 0.0) (/ 1.0 (/ 1.0 (/ d (fma c c (* d d))))) (/ d (fma c c (* d d))))))",
    "output_parens": 19,
    "avg_bits_err_input": 26.48712388619866,
    "avg_bits_err_output": 23.591381246115105,
    "avg_bits_err_improve": 2.8957426400835544,
    "time": 15584.400146484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- (* ux maxCos) ux) 1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.032125,
    "avg_bits_err_output": 0.020222849187341674,
    "avg_bits_err_improve": 0.011902150812658326,
    "time": 6250.21337890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (+ (if (!= (- ux) 0.0) (* ux (/ (+ ux (- ux (* ux ux))) ux)) (+ ux (- ux (* ux ux)))) (* (* ux maxCos) (- (+ (* ux maxCos) (* (- 1.0 ux) 2.0)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 13.636810760200278,
    "avg_bits_err_output": 0.5488370615449668,
    "avg_bits_err_improve": 13.087973698655311,
    "time": 23289.86083984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- ux (- ux)) (+ (* ux ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.665775788780483,
    "avg_bits_err_output": 0.31523738931469,
    "avg_bits_err_improve": 13.350538399465792,
    "time": 28652.82763671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* 2.0 PI))) (sqrt (- 1.0 (* ux (* ux (* (* (- 1.0 ux) maxCos) (* (- 1.0 ux) maxCos))))))) xi (* (sqrt (- 1.0 (* ux (* ux (* (* (- 1.0 ux) maxCos) (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3375869690582136,
    "avg_bits_err_output": 0.32715297555378403,
    "avg_bits_err_improve": 0.010433993504429584,
    "time": 44479.27978515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.19545630303031034,
    "avg_bits_err_output": 0.19545630303031034,
    "avg_bits_err_improve": 0,
    "time": 19313.907958984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5380415291800155,
    "avg_bits_err_output": 0.5380415291800155,
    "avg_bits_err_improve": 0,
    "time": 21117.177978515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ (/ u1 4.0) (- 1.0 u1)) (/ (+ (/ u1 4.0) (* u1 0.5)) (- 1.0 u1)))) (cos (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.3137584999820968,
    "avg_bits_err_output": 0.32588025058103015,
    "avg_bits_err_improve": -0.012121750598933334,
    "time": 19329.3642578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (* (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s)))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 71,
    "avg_bits_err_input": 0.3369293245419511,
    "avg_bits_err_output": 0.32046211580191614,
    "avg_bits_err_improve": 0.01646720874003499,
    "time": 53120.341064453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(expm1 (log1p (/ 1.0 (+ (expm1 (/ x (- s))) 2.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06315855607968592,
    "avg_bits_err_output": 0.07055312577954288,
    "avg_bits_err_improve": -0.007394569699856968,
    "time": 17821.654052734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (exp (/ (fabs x) (- s))) 1.0)) (fma s (exp (/ (fabs x) (- s))) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.1565690076009342,
    "avg_bits_err_output": 0.13935683531959997,
    "avg_bits_err_improve": 0.01721217228133423,
    "time": 20405.948486328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (expm1 (log1p (* x PI))) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6513452135954878,
    "avg_bits_err_output": 0.6835950235245164,
    "avg_bits_err_improve": -0.032249809929028594,
    "time": 20104.0361328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (+ (- (exp (/ -2.0 v)) (* u (exp (/ -2.0 v)))) u)) 1.0)",
    "output_parens": 9,
    "avg_bits_err_input": 0.16747158469483756,
    "avg_bits_err_output": 0.17007177287105102,
    "avg_bits_err_improve": -0.0026001881762134638,
    "time": 21170.7724609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.612310869104001,
    "avg_bits_err_output": 2.6111192718829748,
    "avg_bits_err_improve": 0.0011915972210263526,
    "time": 27428.799560546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(fma cosTheta_i (/ (* (/ cosTheta_O v) (/ (exp (* sinTheta_O (/ sinTheta_i (- v)))) v)) (* (sinh (/ 1.0 v)) 2.0)) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.4526825504145021,
    "avg_bits_err_output": 0.38686673696945373,
    "avg_bits_err_improve": 0.06581581344504839,
    "time": 25465.616455078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (+ 0.6931 (log (/ 0.5 v))) 0.0) (/ (* (+ 0.6931 (log (/ 0.5 v))) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))) (+ 0.6931 (log (/ 0.5 v)))) (+ (/ (- (* cosTheta_i cosTheta_O) (fma sinTheta_i sinTheta_O 1.0)) v) (+ 0.6931 (log (/ 0.5 v))))))",
    "output_parens": 30,
    "avg_bits_err_input": 0.10742929765524199,
    "avg_bits_err_output": 0.11032515456466421,
    "avg_bits_err_improve": -0.0028958569094222203,
    "time": 12028.038818359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (/ (/ (+ (* alpha alpha) -1.0) PI) (log (* alpha alpha))) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.46684033353438215,
    "avg_bits_err_output": 0.4866986038963877,
    "avg_bits_err_improve": -0.019858270362005548,
    "time": 22031.00439453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(if (!= (* 3.0 s) 0.0) (* -9.0 (/ (* (- (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333)))) (* s -0.3333333333333333)) -1.0)) (* (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))) (* 3.0 s)))",
    "output_parens": 16,
    "avg_bits_err_input": 1.311871300643012,
    "avg_bits_err_output": 1.2060920155122943,
    "avg_bits_err_improve": 0.10577928513071777,
    "time": 28986.867431640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (if (!= (log (/ 1.0 (+ 1.0 (* u -4.0)))) 0.0) (* (- (/ 2.0 (/ 2.0 (log (/ 1.0 (fma u -4.0 1.0))))) (- (log (/ 1.0 (fma u -4.0 1.0))) (* (log (/ 1.0 (fma u -4.0 1.0))) (log (/ 1.0 (fma u -4.0 1.0)))))) (/ 1.0 (log (/ 1.0 (fma u -4.0 1.0))))) (log (/ 1.0 (+ 1.0 (* u -4.0))))))",
    "output_parens": 33,
    "avg_bits_err_input": 12.31327778622974,
    "avg_bits_err_output": 12.497441752652477,
    "avg_bits_err_improve": -0.18416396642273725,
    "time": 43373.480224609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (* (/ r s) -0.3333333333333333))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1346384577372028,
    "avg_bits_err_output": 0.14146748861915096,
    "avg_bits_err_improve": -0.006829030881948167,
    "time": 26071.682861328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (/ (sin (* u normAngle)) (sin normAngle)) (* (sin (- normAngle (* u normAngle))) (/ n0_i (sin normAngle))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9343527535727689,
    "avg_bits_err_output": 0.7890206378674076,
    "avg_bits_err_improve": 0.1453321157053613,
    "time": 24801.057373046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- 1.0 (+ cosTheta cosTheta))) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7028325369087378,
    "avg_bits_err_output": 0.4751081446810973,
    "avg_bits_err_improve": 0.22772439222764052,
    "time": 20795.451171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(if (<= u1 1.0000000116860974e-7) (* (sqrt (- (if (!= (+ 1.0 (exp (log1p (log (- 1.0 u1))))) 0.0) (/ (- (log (+ 1.0 (expm1 (* (+ 1.0 (log (- 1.0 u1))) (+ 1.0 (log (- 1.0 u1))))))) 1.0) (+ 1.0 (exp (log1p (log (- 1.0 u1)))))) (log (- 1.0 u1))))) (sin (* (* 2.0 PI) u2))) (if (!= (sin (* 2.0 (* PI u2))) 0.0) (+ (/ 1.0 (/ 1.0 (sin (* 2.0 (* PI u2))))) (/ (* (+ (sqrt (- (log (- 1.0 u1)))) -1.0) (* (sin (* 2.0 (* PI u2))) (sin (* 2.0 (* PI u2))))) (sin (* 2.0 (* PI u2))))) (* (sqrt (- (log (- 1.0 u1)))) (sin (* 2.0 (* PI u2))))))",
    "output_parens": 70,
    "avg_bits_err_input": 13.395732373251557,
    "avg_bits_err_output": 12.058708177836307,
    "avg_bits_err_improve": 1.3370241954152497,
    "time": 34342.693359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(log (+ 1.0 (- (+ (expm1 (* (sqrt (- (log (- 1.0 u1)))) (cos (* 2.0 (* PI u2))))) -1.0) -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.434744053587542,
    "avg_bits_err_output": 13.475762509923788,
    "avg_bits_err_improve": -0.041018456336246345,
    "time": 21457.071533203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (- alpha) (fma alpha alpha (* (log (- 1.0 u0)) (* alpha (- alpha)))))",
    "output_parens": 8,
    "avg_bits_err_input": 14.340866284373869,
    "avg_bits_err_output": 14.28681059917236,
    "avg_bits_err_improve": 0.05405568520150794,
    "time": 21919.7783203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log (- 1.0 u0))) (+ (/ (/ cos2phi alphax) alphax) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.601033155138609,
    "avg_bits_err_output": 12.601633556684176,
    "avg_bits_err_improve": -0.0006004015455669531,
    "time": 20136.060791015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (+ (/ (+ (tan (* PI l)) (+ (tan (if (!= (* PI l) 0.0) (/ 1.0 (/ 1.0 (* PI l))) (* PI l))) (tan (* PI l)))) (+ (+ F F) (+ F F))) (/ (tan (* PI l)) (+ (+ F F) (+ F F)))) F))",
    "output_parens": 28,
    "avg_bits_err_input": 16.22565607336345,
    "avg_bits_err_output": 11.929974733343975,
    "avg_bits_err_improve": 4.295681340019474,
    "time": 20987.624267578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (/ x (tan B)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.21874060156295072,
    "avg_bits_err_output": 0.15557312031259016,
    "avg_bits_err_improve": 0.06316748125036056,
    "time": 20111.550537109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (* F (/ (pow (fma 2.0 x (fma F F 2.0)) -0.5) (sin B))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.570001173261042,
    "avg_bits_err_output": 10.523636011689776,
    "avg_bits_err_improve": 3.0463651615712664,
    "time": 22076.771484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (fma (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0))))) (fma (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f 4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (* (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (+ (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f 4.0))) (exp (* PI (/ f -4.0))))) (/ (exp (* PI (/ f -4.0))) (- (exp (* PI (/ f -4.0))) (exp (* PI (/ f 4.0)))))))))) (/ PI -4.0))",
    "output_parens": 84,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 61.57899305769849,
    "avg_bits_err_improve": -0.00595991975779242,
    "time": 72377.19970703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.57509323770458,
    "avg_bits_err_output": 33.96093557159104,
    "avg_bits_err_improve": 8.614157666113542,
    "time": 28947.56103515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (log1p (expm1 (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 4.150766573662981,
    "avg_bits_err_output": 4.152934054913342,
    "avg_bits_err_improve": -0.0021674812503613694,
    "time": 26359.569091796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (/ 0.5 (sqrt (fma (pow (* 2.0 (/ l Om)) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9363905959419778,
    "avg_bits_err_output": 0.9363905959419778,
    "avg_bits_err_improve": 0,
    "time": 11659.595947265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- -1.0 (- -1.0 (pow (/ Om Omc) 2.0)))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.298768464718043,
    "avg_bits_err_output": 10.298822566165446,
    "avg_bits_err_improve": -5.410144740380929e-05,
    "time": 14635.43896484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -7.8e+28) (sqrt (* (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (* l (/ l Om))))) (* n (* U -2.0)))) (if (<= n -1.65e-226) (sqrt (- (* 2.0 (* U (* n (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))))) (* (/ l Om) (* l (* n (* U 4.0)))))) (if (<= n 1.7e-276) (sqrt (- (* (* 2.0 (* n U)) (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))) (* (/ l Om) (* l (* n (* U 4.0)))))) (if (<= n 2.1e-195) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om)))))))) (if (<= n 5.2e-139) (sqrt (- (* 2.0 (* U (* n (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))))) (* (/ l Om) (* l (* n (* U 4.0)))))) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om)))))))))))))",
    "output_parens": 100,
    "avg_bits_err_input": 35.01707994436509,
    "avg_bits_err_output": 31.6298650919403,
    "avg_bits_err_improve": 3.387214852424794,
    "time": 34190.094482421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (* (sin k) (/ (tan k) l)))",
    "output_parens": 11,
    "avg_bits_err_input": 47.900483413567684,
    "avg_bits_err_output": 36.70709256072248,
    "avg_bits_err_improve": 11.193390852845205,
    "time": 47022.275390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ (/ (/ 2.0 (* (pow t 3.0) (/ (sin k) l))) (+ 2.0 (pow (/ k t) 2.0))) (/ (tan k) l))",
    "output_parens": 12,
    "avg_bits_err_input": 32.95536768404197,
    "avg_bits_err_output": 26.74781723444791,
    "avg_bits_err_improve": 6.207550449594056,
    "time": 23297.95263671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (* (cos th) (fma a2 a2 (* a1 a1))) (sqrt 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5071832734586856,
    "avg_bits_err_output": 0.46900601720399765,
    "avg_bits_err_improve": 0.038177256254687986,
    "time": 23225.01416015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5371243047279676,
    "avg_bits_err_output": 0.4953134101422531,
    "avg_bits_err_improve": 0.041810894585714464,
    "time": 16546.71875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma (exp l) J (* (exp (- l)) (- J))) (cos (/ K 2.0))) U)",
    "output_parens": 10,
    "avg_bits_err_input": 17.263152104342474,
    "avg_bits_err_output": 17.268883698724466,
    "avg_bits_err_improve": -0.005731594381991556,
    "time": 23394.420654296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (if (!= (* K (/ (+ m n) 2.0)) 0.0) (* (+ m n) (* (* K (/ (+ m n) (* (+ m n) (/ K 2.0)))) (/ K 2.0))) (* K (+ m n))) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output_parens": 31,
    "avg_bits_err_input": 14.61046555967511,
    "avg_bits_err_output": 1.352158894937119,
    "avg_bits_err_improve": 13.25830666473799,
    "time": 16145.18115234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.37494812031259,
    "avg_bits_err_output": 18.37494812031259,
    "avg_bits_err_improve": 0,
    "time": 26559.9267578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 2e+286) (* w0 (sqrt (- 1.0 (/ (* (pow (if (!= (/ (* M D) (* d 4.0)) 0.0) (/ 0.5 (/ d (* M D))) (* M (/ D (* d 2.0)))) 2.0) h) l)))) (* w0 (sqrt (- 1.0 (* (pow (if (!= (* M (/ D (* d 4.0))) 0.0) (* M (* (- (exp (log1p (/ (/ D D) M))) 1.0) (* D (/ (/ M d) 2.0)))) (* D (/ (/ M 2.0) d))) 2.0) (/ h l))))))",
    "output_parens": 47,
    "avg_bits_err_input": 14.388696426827504,
    "avg_bits_err_output": 10.15610211552557,
    "avg_bits_err_improve": 4.232594311301934,
    "time": 22081.736328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (* (/ A (* l (+ V V))) 2.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.034376758014886,
    "avg_bits_err_output": 19.06201059760531,
    "avg_bits_err_improve": -0.02763383959042187,
    "time": 13893.899169921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(+ (* (* (/ (/ (/ d D) w) h) (* (/ d D) c0)) (/ c0 (* w 2.0))) (* (sqrt (* (fma (/ (/ (/ d D) w) h) (* (/ d D) c0) M) (fma (/ (/ (/ d D) w) h) (* (/ d D) c0) (- M)))) (/ c0 (* w 2.0))))",
    "output_parens": 28,
    "avg_bits_err_input": 59.680442275452414,
    "avg_bits_err_output": 52.38009849542091,
    "avg_bits_err_improve": 7.300343780031504,
    "time": 41859.65869140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (* (pow (/ d l) 0.5) (- (pow (/ d h) 0.5) (* (* (pow (/ d h) 0.5) (/ (pow (* M (/ D (+ d d))) 2.0) (+ l l))) h))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+263) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (/ (* (pow (/ (* D M) (+ d d)) 2.0) (/ h l)) 2.0))) (* (pow (/ d l) 0.5) (- (pow (/ d h) 0.5) (* h (* (pow (* M (/ D (+ d d))) 2.0) (/ (pow (/ d h) 0.5) (+ l l))))))))",
    "output_parens": 79,
    "avg_bits_err_input": 26.930657258275332,
    "avg_bits_err_output": 24.767969602766133,
    "avg_bits_err_improve": 2.162687655509199,
    "time": 42279.1943359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0) (log1p (expm1 (- -1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 29,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 15.037533555914509,
    "avg_bits_err_improve": 0.4642987898344284,
    "time": 22277,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ (/ 1.3333333333333333 PI) (- 1.0 (* v v))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9846981203125902,
    "avg_bits_err_output": 0.011021240625180291,
    "avg_bits_err_improve": 0.9736768796874099,
    "time": 3625.374267578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (/ (fma v (* v 5.0) -1.0) (* (- PI) (sqrt (- 2.0 (* v (* v 6.0)))))) (- t (* v (* v t))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4177905635405,
    "avg_bits_err_output": 0.11285620312590146,
    "avg_bits_err_improve": 0.30493436041459854,
    "time": 19481.310546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011594360937770434,
    "avg_bits_err_output": 0.011594360937770434,
    "avg_bits_err_improve": 0,
    "time": 5983.321533203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5259832657021648,
    "avg_bits_err_output": 0.5259832657021648,
    "avg_bits_err_improve": 0,
    "time": 8169.476806640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.32511591314059,
    "avg_bits_err_output": 2.32511591314059,
    "avg_bits_err_improve": 0,
    "time": 11295.31640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- Ec (+ Vef EDonor))) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Ev Vef) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.0160842797537534,
    "avg_bits_err_output": 0.0160842797537534,
    "avg_bits_err_improve": 0,
    "time": 7506.166748046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18960905390214727,
    "avg_bits_err_output": 0.18960905390214727,
    "avg_bits_err_improve": 0,
    "time": 16721.968017578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (+ (* a (* a a)) (* a a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1865633717196659,
    "avg_bits_err_output": 0.18679513692473326,
    "avg_bits_err_improve": -0.00023176520506737464,
    "time": 4564.40673828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (if (!= (* a (* a a)) 0.0) (* (/ 1.0 (* (/ 1.0 (* a a)) a)) (- a (* a a))) (* a (- a (* a a)))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 25,
    "avg_bits_err_input": 0.1860512990690369,
    "avg_bits_err_output": 0.18481000170047054,
    "avg_bits_err_improve": 0.0012412973685663464,
    "time": 25702.946533203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (/ x (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0)) (/ (+ x (+ x x)) (* (* (sqrt (fma x x (* 4.0 (* p p)))) 2.0) 2.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.049863174189971,
    "avg_bits_err_output": 13.203378540289675,
    "avg_bits_err_improve": -0.15351536609970395,
    "time": 15552.409912109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (/ (/ (expm1 (* 2.0 x)) (expm1 x)) (expm1 x)) (/ 1.0 (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 41.581795527543186,
    "avg_bits_err_output": 0.04325,
    "avg_bits_err_improve": 41.538545527543185,
    "time": 19103.6201171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (- x (+ -1.0 (+ 1.0 (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 31.616592616403562,
    "avg_bits_err_output": 30.770947244184867,
    "avg_bits_err_improve": 0.8456453722186943,
    "time": 24363.37890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (if (!= (sqrt (- (* b_2 b_2) (* a c))) 0.0) (fma -1.0 (fma b_2 (/ (sqrt (- (* b_2 b_2) (* a c))) (sqrt (- (* b_2 b_2) (* a c)))) (/ -8.0 (/ 8.0 (sqrt (- (* b_2 b_2) (* a c)))))) (fma (/ b_2 (- (sqrt (- (* b_2 b_2) (* a c))))) (sqrt (- (* b_2 b_2) (* a c))) (/ (* b_2 (sqrt (- (* b_2 b_2) (* a c)))) (sqrt (- (* b_2 b_2) (* a c)))))) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) a)",
    "output_parens": 50,
    "avg_bits_err_input": 34.45107456429824,
    "avg_bits_err_output": 34.799340124212016,
    "avg_bits_err_improve": -0.34826555991377717,
    "time": 17195.4384765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) (- INFINITY)) (if (!= (/ b_2 a) 0.0) 0.0 (/ (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (- a))) (if (<= (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) 2e+301) (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a) (if (!= (/ b_2 a) 0.0) 0.0 (/ (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) (- a)))))",
    "output_parens": 46,
    "avg_bits_err_input": 34.62861518651838,
    "avg_bits_err_output": 29.599784502881743,
    "avg_bits_err_improve": 5.028830683636638,
    "time": 15086.47314453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (/ (- 1.0 (cos x)) x) x)",
    "output_parens": 4,
    "avg_bits_err_input": 31.382620110201913,
    "avg_bits_err_output": 30.633209235375077,
    "avg_bits_err_improve": 0.749410874826836,
    "time": 16970.72265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output_parens": 6,
    "avg_bits_err_input": 32.97007266637754,
    "avg_bits_err_output": 32.97007266637754,
    "avg_bits_err_improve": 0,
    "time": 17574.169189453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(if (!= (- (log1p N) (- (log N))) 0.0) (fma (log1p N) (/ (log1p N) (+ (log N) (log1p N))) (/ (* (log N) (log N)) (- (- (log N)) (log1p N)))) (- (log1p N) (log N)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.545799160346263,
    "avg_bits_err_output": 29.5872986574802,
    "avg_bits_err_improve": -0.041499497133937524,
    "time": 13161.1572265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ (if (!= (+ 1.0 (/ 1.0 (/ (+ 1.0 x) x))) 0.0) (/ (+ -1.0 (/ 1.0 (/ (+ (/ 1.0 x) (+ x 2.0)) x))) (+ 1.0 (/ 1.0 (/ (+ 1.0 x) x)))) (+ -1.0 (/ 1.0 (/ (+ 1.0 x) x)))) (* x (/ x x))) 0.0)",
    "output_parens": 25,
    "avg_bits_err_input": 14.45404023870485,
    "avg_bits_err_output": 14.440918495324928,
    "avg_bits_err_improve": 0.01312174337992289,
    "time": 18348.990478515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(+ (- (cos x)) (+ (+ (cos (+ x eps)) -1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 40.45591082540549,
    "avg_bits_err_output": 40.47023020434002,
    "avg_bits_err_improve": -0.014319378934530391,
    "time": 15940.272216796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (if (!= (cbrt x) 0.0) (/ (- (* (cbrt x) (+ (cbrt (+ 1.0 x)) -1.0)) (* (cbrt x) (cbrt x))) (cbrt x)) (+ (- (cbrt (+ 1.0 x)) (cbrt x)) -1.0)) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.832082985190723,
    "avg_bits_err_output": 29.420816154329316,
    "avg_bits_err_improve": 0.4112668308614076,
    "time": 9443.75439453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.87957046301514,
    "avg_bits_err_output": 30.87957046301514,
    "avg_bits_err_improve": 0,
    "time": 22002.008544921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (if (!= (- b) 0.0) (if (!= (/ (* b b) b) 0.0) (/ (- (* (/ b b) (* (sqrt (fma a (* c -4.0) (* b b))) (/ (* b b) b))) (* (/ (* b b) b) (* (* b b) (/ b (* b b))))) (/ (* b b) b)) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (- (sqrt (fma b b (* (* a c) -4.0))) b)) (* a 2.0))",
    "output_parens": 39,
    "avg_bits_err_input": 34.453524917576104,
    "avg_bits_err_output": 34.74511375468827,
    "avg_bits_err_improve": -0.2915888371121653,
    "time": 31364.48974609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma c (/ (* a (* 16.0 (* c (/ a (fma -4.0 (* a c) (* b (- b))))))) 1.0) (* (* b b) (/ (* b b) (- (* b b) (* a (* c -4.0)))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 31,
    "avg_bits_err_input": 35.01359457323689,
    "avg_bits_err_output": 34.894757977854425,
    "avg_bits_err_improve": 0.1188365953824615,
    "time": 22662.69677734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(if (<= (/ (log (- 1.0 x)) (log (+ 1.0 x))) -0.5) (/ (log (- 1.0 x)) (+ 1.0 (+ (log1p x) -1.0))) (/ (log (- 1.0 x)) (log1p x)))",
    "output_parens": 17,
    "avg_bits_err_input": 61.617755739700655,
    "avg_bits_err_output": 59.62946501007579,
    "avg_bits_err_improve": 1.9882907296248646,
    "time": 23210.1357421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (if (!= (fma n (- (log1p n) (log n)) (log1p n)) 0.0) (/ 1.0 (- (exp (log1p (/ 1.0 (fma n (- (log1p n) (log n)) (log1p n))))) 1.0)) (fma n (- (log1p n) (log n)) (log1p n))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 63.00704683582842,
    "avg_bits_err_output": 44.205324785667585,
    "avg_bits_err_improve": 18.801722050160834,
    "time": 12839.572509765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (if (!= (* (/ eps (+ 1.0 eps)) (/ eps (+ 1.0 eps))) 0.0) (/ (/ (- (* (/ eps eps) (+ eps -1.0)) (/ 0.0 (- eps -1.0))) (- -1.0 eps)) (* eps (/ 1.0 eps))) (/ (- 1.0 eps) (+ 1.0 eps))))",
    "output_parens": 22,
    "avg_bits_err_input": 58.510085398497004,
    "avg_bits_err_output": 58.49660326938788,
    "avg_bits_err_improve": 0.013482129109121388,
    "time": 16805.798828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(/ (if (!= (+ 1.0 (/ 1.0 (/ x (tan x)))) 0.0) (/ (- 1.0 (/ 1.0 (* (/ x (tan x)) (/ x (tan x))))) (+ -1.0 (/ -1.0 (/ x (tan x))))) (+ -1.0 (/ 1.0 (/ x (tan x))))) (* x (- (+ 1.0 (/ 1.0 (/ x (tan x)))) 1.0)))",
    "output_parens": 29,
    "avg_bits_err_input": 59.818693213327315,
    "avg_bits_err_output": 59.79871272346375,
    "avg_bits_err_improve": 0.019980489863563378,
    "time": 27231.546142578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(* (/ (expm1 (* eps (+ b a))) (expm1 (* eps a))) (if (!= (/ eps (expm1 (* eps b))) 0.0) (/ 1.0 (/ 1.0 (/ eps (expm1 (* eps b))))) (/ eps (expm1 (* eps b)))))",
    "output_parens": 20,
    "avg_bits_err_input": 60.298200043857314,
    "avg_bits_err_output": 28.78125464331211,
    "avg_bits_err_improve": 31.516945400545204,
    "time": 24624.816162109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(if (!= (/ (exp x) (expm1 x)) 0.0) (/ (/ 1.0 (expm1 x)) (/ 1.0 (exp x))) (/ (exp x) (expm1 x)))",
    "output_parens": 13,
    "avg_bits_err_input": 41.96361656350097,
    "avg_bits_err_output": 0.44191052656439317,
    "avg_bits_err_improve": 41.52170603693658,
    "time": 8857.360595703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.6588772568554,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.6580022568554,
    "time": 5171.91357421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.42017257535626,
    "avg_bits_err_output": 0.016070789202753646,
    "avg_bits_err_improve": 29.404101786153507,
    "time": 4442.2373046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (if (!= (- 2.0 (exp x)) 0.0) (/ (fma (- (exp x) 2.0) (exp (- x)) (- (- 4.0 (* (exp x) (- 2.0 (exp x)))) (* 2.0 (exp x)))) (- 2.0 (exp x))) (- 2.0 (+ (exp (- x)) (exp x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 29.97926091000864,
    "avg_bits_err_output": 29.62651374137819,
    "avg_bits_err_improve": 0.35274716863045086,
    "time": 18972.367919921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.523050693013245,
    "avg_bits_err_output": 9.523050693013245,
    "avg_bits_err_improve": 0,
    "time": 30277.249267578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(if (!= (tan (+ x eps)) 0.0) (if (!= (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps))) 0.0) (/ (* (tan (+ x eps)) (- (/ (* (tan (+ x eps)) (tan (+ x eps))) (tan (+ x eps))) (* (tan (+ x eps)) (* (/ (tan x) (tan (+ x eps))) (/ (tan x) (tan (+ x eps))))))) (/ (* (tan (+ x eps)) (+ (tan (+ x eps)) (tan x))) (tan (+ x eps)))) (* (tan (+ x eps)) (/ (- (tan (+ x eps)) (tan x)) (tan (+ x eps))))) (- (tan (+ x eps)) (tan x)))",
    "output_parens": 65,
    "avg_bits_err_input": 36.559457049524056,
    "avg_bits_err_output": 36.59666752078413,
    "avg_bits_err_improve": -0.037210471260074485,
    "time": 18917.9306640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (- (sqrt (+ x 1.0)) (+ (sqrt x) 1.0)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 30.066230535009122,
    "avg_bits_err_output": 29.37685283318975,
    "avg_bits_err_improve": 0.689377701819371,
    "time": 13734.37353515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(if (!= (+ (sin (+ x eps)) (sin x)) 0.0) (+ (fma (- (/ (sin x) (+ (sin (+ x eps)) (sin x)))) (sin x) (* (sin x) (/ (sin x) (+ (sin (+ x eps)) (sin x))))) (* (- (sin (+ x eps)) (sin x)) (/ (+ (sin (+ x eps)) (sin x)) (+ (sin (+ x eps)) (sin x))))) (- (sin (+ x eps)) (sin x)))",
    "output_parens": 42,
    "avg_bits_err_input": 37.50143438815844,
    "avg_bits_err_output": 37.500618909697906,
    "avg_bits_err_improve": 0.0008154784605309828,
    "time": 18787.706298828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(/ (- 1.0 (/ (sqrt x) (sqrt (+ x 1.0)))) (sqrt x))",
    "output_parens": 7,
    "avg_bits_err_input": 19.546716205344698,
    "avg_bits_err_output": 19.530525882125097,
    "avg_bits_err_improve": 0.016190323219600344,
    "time": 15177.62158203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- 1.0 (- (atan N) (+ (atan (+ N 1.0)) -1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 14.54986387644225,
    "avg_bits_err_output": 14.552192317365746,
    "avg_bits_err_improve": -0.0023284409234953785,
    "time": 11355.37841796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(if (!= (log (+ (exp a) (exp b))) 0.0) (/ 1.0 (/ 1.0 (log (+ (exp a) (exp b))))) (log (+ (exp a) (exp b))))",
    "output_parens": 16,
    "avg_bits_err_input": 29.5427609228867,
    "avg_bits_err_output": 29.543896363963462,
    "avg_bits_err_improve": -0.0011354410767623335,
    "time": 36514.281005859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (* (- 1.0 m) (/ m v)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07596240625180288,
    "avg_bits_err_output": 0.07862988750216346,
    "avg_bits_err_improve": -0.002667481250360579,
    "time": 17174.20751953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(* (* b a) (* (- b) a))",
    "output_parens": 4,
    "avg_bits_err_input": 16.31332318650586,
    "avg_bits_err_output": 0.30214661719245783,
    "avg_bits_err_improve": 16.0111765693134,
    "time": 12178.333740234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (/ PI 180.0) angle))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.741136635939192,
    "avg_bits_err_output": 20.701424264739632,
    "avg_bits_err_improve": 0.039712371199559726,
    "time": 27890.630615234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.095909298799665,
    "avg_bits_err_output": 31.095909298799665,
    "avg_bits_err_improve": 0,
    "time": 36681.289306640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* angle (/ PI 180.0)))) 2.0) (pow (* b (cos (* angle (/ PI 180.0)))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.55448105433022,
    "avg_bits_err_output": 20.528625678219655,
    "avg_bits_err_improve": 0.025855376110566652,
    "time": 28902.2392578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (- 1.0 m) (* m (/ m v))) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17812744375108172,
    "avg_bits_err_output": 0.17349736350301956,
    "avg_bits_err_improve": 0.004630080248062163,
    "time": 16128.5888671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3237485555484409,
    "avg_bits_err_output": 0.3218775334255321,
    "avg_bits_err_improve": 0.0018710221229087942,
    "time": 16921.33349609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13684436093777044,
    "avg_bits_err_output": 0.13684436093777044,
    "avg_bits_err_improve": 0,
    "time": 15452.070556640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos (- lambda1 lambda2))) (cos phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.749913700046047,
    "avg_bits_err_output": 16.741738043275998,
    "avg_bits_err_improve": 0.0081756567700495,
    "time": 32170.399169921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 3500000000000.0) (+ (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) (+ (fma (- b) (/ 0.25 a) (* b (/ 0.25 a))) (* (- b (sqrt (fma c (* a -4.0) (* b b)))) (/ -0.25 a)))) (+ (/ -1.0 (* a 2.0)) (+ (/ (+ (sqrt (fma b b (* (* a c) -4.0))) 1.0) (* a 2.0)) (/ b (* a -2.0)))))",
    "output_parens": 36,
    "avg_bits_err_input": 52.24080678802017,
    "avg_bits_err_output": 50.105603402833125,
    "avg_bits_err_improve": 2.1352033851870473,
    "time": 26135.0927734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- (sqrt (fma a (* c -4.0) (* b b))) (- b)) 0.0) (/ (expm1 (log1p (+ (fma (- (sqrt (fma c (* a -4.0) (* b b)))) b (* b (sqrt (fma c (* a -4.0) (* b b))))) (- (* b b) (* (sqrt (fma c (* a -4.0) (* b b))) (sqrt (fma c (* a -4.0) (* b b)))))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (* a 2.0))",
    "output_parens": 47,
    "avg_bits_err_input": 28.163699049436563,
    "avg_bits_err_output": 27.80835921817022,
    "avg_bits_err_improve": 0.35533983126634183,
    "time": 34451.021728515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (!= (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a) 0.25) 0.0) (/ 2.0 (/ 4.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) a))) (* 0.5 (if (!= (/ b a) 0.0) (/ (/ (fma b (* (/ b a) -0.5) (fma b (* (/ b a) -0.5) (* (/ b a) (sqrt (fma a (* c -4.0) (* b b)))))) a) (/ b a)) (/ (- (sqrt (fma c (* a -4.0) (* b b))) b) a))))",
    "output_parens": 42,
    "avg_bits_err_input": 43.55315757788315,
    "avg_bits_err_output": 42.46395804429811,
    "avg_bits_err_improve": 1.0891995335850382,
    "time": 31569.55419921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- b) 0.0) (if (!= (/ (* b b) b) 0.0) (/ (- (* (/ b b) (* (sqrt (fma a (* c -4.0) (* b b))) (/ (* b b) b))) (* (/ (* b b) b) (/ (* (/ (/ (+ b b) b) b) (* b b)) 2.0))) (/ (* b b) b)) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (- (sqrt (fma b b (* (* a c) -4.0))) b)) (* a 2.0))",
    "output_parens": 41,
    "avg_bits_err_input": 34.47102289653146,
    "avg_bits_err_output": 34.94375528838575,
    "avg_bits_err_improve": -0.4727323918542936,
    "time": 29991.695556640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (if (!= (cos phi1) 0.0) (/ (fma (cos phi1) (cos phi1) (* (cos phi1) (* (cos (- lambda1 lambda2)) (cos phi2)))) (cos phi1)) (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.8806065906188587,
    "avg_bits_err_output": 0.892160073102991,
    "avg_bits_err_improve": -0.011553482484132238,
    "time": 23080.1826171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (- -1.0 (/ 2.0 (- -1.0 (exp (* -2.0 x)))))))",
    "output_parens": 7,
    "avg_bits_err_input": 28.599473414399565,
    "avg_bits_err_output": 28.60177693333861,
    "avg_bits_err_improve": -0.0023035189390441246,
    "time": 23123.64599609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(- (/ (- (exp x) (/ (exp (- x)) 2.0)) (+ (exp x) (exp (- x)))) (- -0.5 (+ -0.5 (* (/ (exp (- x)) (+ (exp x) (exp (- x)))) -0.5))))",
    "output_parens": 21,
    "avg_bits_err_input": 57.93453049033198,
    "avg_bits_err_output": 57.967504423604574,
    "avg_bits_err_improve": -0.03297393327259357,
    "time": 16348.14111328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.90369207397151,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 57.89406707397151,
    "time": 10209.991455078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(log (exp (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.005948120312590145,
    "avg_bits_err_output": 0.1474378473087649,
    "avg_bits_err_improve": -0.14148972699617476,
    "time": 4939.82177734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.68993242895233,
    "avg_bits_err_output": 31.68993242895233,
    "avg_bits_err_improve": 0,
    "time": 4807.027587890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log1p (/ x (/ (- 1.0 x) 2.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.502049688533155,
    "avg_bits_err_output": 0.01834436093777043,
    "avg_bits_err_improve": 58.48370532759539,
    "time": 16101.30126953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.003625,
    "avg_bits_err_output": 0.003625,
    "avg_bits_err_improve": 0,
    "time": 2997.468994140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (cos (atan (/ eh (* ew (tan t)))))) (sin t)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.131875,
    "avg_bits_err_output": 0.132,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 26228.635986328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12189624062518029,
    "avg_bits_err_output": 0.12189624062518029,
    "avg_bits_err_improve": 0,
    "time": 26097.5947265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.14955991869289,
    "avg_bits_err_output": 3.616427319314048,
    "avg_bits_err_improve": 35.53313259937884,
    "time": 26137.999267578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (+ a b) (/ (- a b) a)) a)))",
    "output_parens": 7,
    "avg_bits_err_input": 15.030912421810992,
    "avg_bits_err_output": 0.017375,
    "avg_bits_err_improve": 15.013537421810993,
    "time": 5286.95556640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (log (exp (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1634541690030238,
    "avg_bits_err_output": 0.19629667213847862,
    "avg_bits_err_improve": -0.03284250313545481,
    "time": 35147.566650390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-32) (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (if (!= (/ 0.3333333333333333 a) 0.0) (/ 1.0 (/ 1.0 (/ 0.3333333333333333 a))) (/ 0.3333333333333333 a))) (* (- (sqrt (if (!= (* b b) 0.0) (if (!= (- (* c (* (* a -3.0) (- (/ b b) 0.0))) (* b (/ (* b b) b))) 0.0) (/ 0.0 (- (* c (* (* a -3.0) (- (/ b b) 0.0))) (* b (/ (* b b) b)))) 0.0) (fma a (* c -3.0) (* b b)))) b) (/ 0.3333333333333333 a)))",
    "output_parens": 55,
    "avg_bits_err_input": 52.281141624971596,
    "avg_bits_err_output": 50.25270454048767,
    "avg_bits_err_improve": 2.028437084483926,
    "time": 30333.00390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (if (!= (- (- b) (sqrt (fma b b (* c (* a -3.0))))) 0.0) (/ (if (!= (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ (* b b) (* b (+ (- b) b)))) 0.0) (* (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ (* b b) (* b (+ (- b) b)))) (/ (+ (if (!= (* b b) 0.0) (/ (* (* b b) (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b)))) (* b b)) (fma (sqrt (fma a (* c -3.0) (* b b))) (sqrt (fma a (* c -3.0) (* b b))) (* b (- b)))) (* b (+ (- b) b))) (- (* (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b)))) (+ (* b b) (* b (+ (- b) b)))))) (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma c (* a -3.0) (* b b))) (* b (- b)))) (- b (- (sqrt (fma b b (* c (* a -3.0))))))) (- (sqrt (fma b b (* c (* a -3.0)))) b)) (* 3.0 a))",
    "output_parens": 115,
    "avg_bits_err_input": 28.35602565152832,
    "avg_bits_err_output": 27.78575147670876,
    "avg_bits_err_improve": 0.5702741748195592,
    "time": 41571.6416015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(fma (sqrt (fma b b (* a (* c -3.0)))) (/ 0.3333333333333333 a) (* b (if (!= (/ -0.3333333333333333 a) 0.0) (- (/ (/ 0.2222222222222222 a) -0.6666666666666666) 0.0) (/ -0.3333333333333333 a))))",
    "output_parens": 14,
    "avg_bits_err_input": 43.60290176876151,
    "avg_bits_err_output": 42.52887905217908,
    "avg_bits_err_improve": 1.0740227165824336,
    "time": 26303.837158203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b -0.3333333333333333) (* (sqrt (+ (* b b) (* a (* c -3.0)))) 0.3333333333333333)) a)",
    "output_parens": 9,
    "avg_bits_err_input": 34.48780767584708,
    "avg_bits_err_output": 34.53140310312906,
    "avg_bits_err_improve": -0.043595427281978516,
    "time": 18853.283203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (if (!= (fma (cos phi1) (sin phi2) 1.0) 0.0) (* (/ (sin phi2) (fma (cos phi1) (sin phi2) 1.0)) (* (cos phi1) (fma (cos phi1) (sin phi2) 1.0))) (* (cos phi1) (sin phi2))) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 31,
    "avg_bits_err_input": 13.212609150528868,
    "avg_bits_err_output": 13.218906929951963,
    "avg_bits_err_improve": -0.006297779423094951,
    "time": 30893.523193359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ (+ (/ x (- x -1.0)) (- x (+ (* x (/ x (- x -1.0))) 1.0))) (- 1.0 x)) (/ 2.0 (+ x -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 29.079432701395508,
    "avg_bits_err_output": 0.4835627002237604,
    "avg_bits_err_improve": 28.595870001171747,
    "time": 16902.5703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(if (!= (/ x (+ x 1.0)) 0.0) (/ (+ (/ x (* (+ x -1.0) (/ x (+ x 1.0)))) (* x (/ x x))) (+ x 1.0)) (+ (/ x (+ x 1.0)) (/ 1.0 (+ x -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.018575564063671886,
    "avg_bits_err_improve": -0.007075564063671887,
    "time": 4947.94775390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(/ (/ -2.0 (+ x -1.0)) (+ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 0.073,
    "avg_bits_err_improve": 14.310260165823431,
    "time": 18455.228271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 1e+229) (/ (sqrt (* F (fma (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))) (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (fma (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* A (* C 8.0)) (* (- A (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* (* A C) -8.0)))))) (- (* A (* 4.0 C)) (pow B 2.0))) 0.0)",
    "output_parens": 63,
    "avg_bits_err_input": 52.48032292019452,
    "avg_bits_err_output": 52.57563388894695,
    "avg_bits_err_improve": -0.09531096875243605,
    "time": 42403.30029296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(if (<= C 2.9e+165) (* 180.0 (log1p (expm1 (/ (atan (/ (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) B)) PI)))) (* 180.0 (/ (atan (if (!= (fma (/ -1.0 B) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (/ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) B)) 0.0) 0.0 (/ (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- C (+ A (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) B))) PI)))",
    "output_parens": 53,
    "avg_bits_err_input": 29.428998426865522,
    "avg_bits_err_output": 27.189554310639213,
    "avg_bits_err_improve": 2.2394441162263092,
    "time": 23949.51904296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(/ (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) (* (* 2.0 F) (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (* A (* C 4.0)) (pow B 2.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.40359133940805,
    "avg_bits_err_output": 52.09736099792978,
    "avg_bits_err_improve": 0.306230341478269,
    "time": 37870.369140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.752350087011,
    "avg_bits_err_output": 15.752350087011,
    "avg_bits_err_improve": 0,
    "time": 2006.109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(+ (cbrt (* (/ 0.5 a) (if (!= (- g) 0.0) (/ (* (- g) (- (sqrt (- (* g g) (* h h))) g)) (- g)) (- (sqrt (- (* g g) (* h h))) g)))) (cbrt (* (/ 0.5 a) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 35.99520121547135,
    "avg_bits_err_output": 35.930060439436346,
    "avg_bits_err_improve": 0.06514077603500112,
    "time": 13805.041015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (/ (+ (* 2.0 PI) (acos (/ (- g) h))) 3.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.9882127828190815,
    "avg_bits_err_output": 0.976075564063672,
    "avg_bits_err_improve": 0.012137218755409518,
    "time": 5851.890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6085433791303934,
    "avg_bits_err_output": 0.6085433791303934,
    "avg_bits_err_improve": 0,
    "time": 2147.89697265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(if (<= (/ (* a1 a2) (* b1 b2)) -5e+273) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) -5e-311) (/ (* a1 a2) (* b1 b2)) (if (<= (/ (* a1 a2) (* b1 b2)) 0.0) (* (/ a2 b2) (/ a1 b1)) (if (<= (/ (* a1 a2) (* b1 b2)) 5e+280) (/ (* a1 a2) (* b1 b2)) (* (/ a2 b2) (/ a1 b1))))))",
    "output_parens": 35,
    "avg_bits_err_input": 11.32111551295781,
    "avg_bits_err_output": 2.6581401044363213,
    "avg_bits_err_improve": 8.66297540852149,
    "time": 10236.008544921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4924154457670652,
    "avg_bits_err_output": 0.459125,
    "avg_bits_err_improve": 0.03329044576706519,
    "time": 9086.71337890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(- (- (log (+ x (hypot 1.0 x))) -1.0) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 53.03431540410139,
    "avg_bits_err_output": 44.85970317483789,
    "avg_bits_err_improve": 8.174612229263502,
    "time": 24677.271728515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(+ (/ (exp (+ (log a) (log b))) 2.0) (expm1 (log1p (* (exp (+ (log a) (log b))) 0.5))))",
    "output_parens": 13,
    "avg_bits_err_input": 5.650665790699693,
    "avg_bits_err_output": 5.671605280449437,
    "avg_bits_err_improve": -0.020939489749743245,
    "time": 18190.395751953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (expm1 (log1p (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.018125,
    "avg_bits_err_improve": -0.003624999999999998,
    "time": 3160.40087890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1330.169677734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ 3.0 (/ 2.0 (* r r))) (+ (* (- 0.375 (* v 0.25)) (* (* w r) (* w (/ r (- 1.0 v))))) 4.5))",
    "output_parens": 13,
    "avg_bits_err_input": 12.898187306960708,
    "avg_bits_err_output": 0.6136209155037722,
    "avg_bits_err_improve": 12.284566391456936,
    "time": 22966.18994140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(fma 3.0 (/ (- (fma x1 (* x1 3.0) (* x2 -2.0)) x1) (fma x1 x1 1.0)) (+ (fma x1 (* x1 x1) (fma (* x1 (* x1 3.0)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (fma (* (* x1 2.0) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0))) (- (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0) (* (* x1 x1) (fma (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 4.0 -6.0)))))) (+ x1 x1)))",
    "output_parens": 47,
    "avg_bits_err_input": 0.5135698396923305,
    "avg_bits_err_output": 0.2927155833682913,
    "avg_bits_err_improve": 0.2208542563240392,
    "time": 64314.546630859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(* (/ v (+ t1 u)) (/ (- t1) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.915628747042692,
    "avg_bits_err_output": 1.2893388056900368,
    "avg_bits_err_improve": 16.626289941352656,
    "time": 9407.004150390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.25346936093777045,
    "avg_bits_err_output": 0.18920996250072117,
    "avg_bits_err_improve": 0.06425939843704928,
    "time": 5044.801513671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 2685.82763671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(/ (/ (/ (- (/ PI a) (/ PI b)) (- b a)) 2.0) (+ b a))",
    "output_parens": 8,
    "avg_bits_err_input": 14.770976513200347,
    "avg_bits_err_output": 0.26456409844281836,
    "avg_bits_err_improve": 14.506412414757529,
    "time": 15453.245849609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(expm1 (log1p (+ (+ (* (exp (- (fma eps x x))) (- 0.5 (/ 0.5 eps))) (* (exp (* x (+ eps -1.0))) (/ 0.5 eps))) (* (exp (* x (+ eps -1.0))) 0.5))))",
    "output_parens": 19,
    "avg_bits_err_input": 29.453644125620823,
    "avg_bits_err_output": 24.741964031938767,
    "avg_bits_err_improve": 4.711680093682055,
    "time": 13108.089599609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 5716.43408203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.01625,
    "avg_bits_err_output": 0.01625,
    "avg_bits_err_improve": 0,
    "time": 18100.84765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ (/ (* t (* (/ t (+ t 1.0)) 8.0)) (+ t 1.0)) 2.0) (+ 4.0 (/ (* t (* (/ t (+ t 1.0)) 8.0)) (+ t 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.03925,
    "avg_bits_err_output": 0.094625,
    "avg_bits_err_improve": -0.055375,
    "time": 7626.9228515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3479.867919921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(- (* y (* y 2.0)) (fma y (* y (* y y)) (* (pow x 4.0) -9.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2502.20458984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 52,
    "avg_bits_err_improve": 0,
    "time": 2740.18994140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ -10.0 (fma x x -1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 7.801530994643082,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 7.558530994643082,
    "time": 21614.925048828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.8289289514031815,
    "avg_bits_err_output": 7.8289289514031815,
    "avg_bits_err_improve": 0,
    "time": 3464.53466796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output_parens": 4,
    "avg_bits_err_input": 16.614361036599533,
    "avg_bits_err_output": 16.614361036599533,
    "avg_bits_err_improve": 0,
    "time": 5822.6904296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (if (!= (exp (* x (* x 10.0))) 0.0) (/ 1.0 (/ (/ (- (/ (exp (* 10.0 (* x x))) (* (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x)))))) (* (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x))))) (/ -1.0 (expm1 (log1p (* (exp (* 10.0 (* x x))) (exp (* 10.0 (* x x))))))))) (exp (* x (* x 10.0)))))",
    "output_parens": 42,
    "avg_bits_err_input": 3.564018320784271,
    "avg_bits_err_output": 3.5646078067356406,
    "avg_bits_err_improve": -0.0005894859513695394,
    "time": 29344.750244140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 14.876132882244992,
    "avg_bits_err_improve": 0,
    "time": 13307.821533203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.65687027405402,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.65687027405402,
    "time": 4362.5791015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.03638582326905,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.03588582326905,
    "time": 4673.729248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(+ (if (!= (* t 8.5e+307) 0.0) (* (* t -8.5e+307) (* -8.5e+307 (/ t (* t 8.5e+307)))) (* t 8.5e+307)) (+ (/ t 1.176470588235294e-308) -1.7e+308))",
    "output_parens": 12,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.258125,
    "avg_bits_err_improve": 63.741875,
    "time": 28075.858154296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(/ (* t t) 2.5e+31)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325519148306,
    "avg_bits_err_output": 0.409061654691737,
    "avg_bits_err_improve": 61.43419353679132,
    "time": 7604.99755859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (/ (+ b (sqrt (if (!= (- (* c (* a -4.0)) (* b b)) 0.0) (fma c (/ (* a (* 16.0 (* c (/ a (fma -4.0 (* a c) (* b (- b))))))) 1.0) (* (* b b) (/ (* b b) (- (* b b) (* a (* c -4.0)))))) (fma c (* a -4.0) (* b b))))) -2.0) a)",
    "output_parens": 31,
    "avg_bits_err_input": 35.01359457323689,
    "avg_bits_err_output": 34.894757977854425,
    "avg_bits_err_improve": 0.1188365953824615,
    "time": 23211.281982421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (if (!= (- b) 0.0) (if (!= (/ (* b b) b) 0.0) (/ (- (* (/ b b) (* (sqrt (fma a (* c -4.0) (* b b))) (/ (* b b) b))) (* (/ (* b b) b) (/ (* (/ (/ (+ b b) b) b) (* b b)) 2.0))) (/ (* b b) b)) (- (sqrt (fma a (* c -4.0) (* b b))) b)) (- (sqrt (fma b b (* (* a c) -4.0))) b)) (* a 2.0))",
    "output_parens": 41,
    "avg_bits_err_input": 34.47102289653146,
    "avg_bits_err_output": 34.94375528838575,
    "avg_bits_err_improve": -0.4727323918542936,
    "time": 30530.291748046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1901.249267578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.386030501860056,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 40.37503050186005,
    "time": 5925.072509765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.900819241230433,
    "avg_bits_err_output": 19.901463197678645,
    "avg_bits_err_improve": -0.000643956448211469,
    "time": 7044.5107421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ (+ d a) c)) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6717340797998848,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6717340797998848,
    "time": 7944.828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04275,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.04225,
    "time": 8083.00537109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ b (+ a b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02177124062518029,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.01152124062518029,
    "time": 3252.157958984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* (* x x) (+ x 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.02254248125036058,
    "avg_bits_err_improve": -0.00916748125036058,
    "time": 2314.383056640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1363.495361328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4040216171924582,
    "avg_bits_err_output": 0.230875,
    "avg_bits_err_improve": 0.17314661719245822,
    "time": 5109.073486328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.880607605573434,
    "avg_bits_err_output": 29.880607605573434,
    "avg_bits_err_improve": 0,
    "time": 53960.096923828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.61180531814241,
    "avg_bits_err_output": 24.612546099180864,
    "avg_bits_err_improve": -0.0007407810384556512,
    "time": 11767.619140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ (* (expm1 (log1p (/ x (tan x)))) 0.5) (/ (- (/ x 2.0) (sin x)) (tan x)))",
    "output_parens": 11,
    "avg_bits_err_input": 30.371839472538547,
    "avg_bits_err_output": 30.421775977527943,
    "avg_bits_err_improve": -0.049936504989396724,
    "time": 32564.655029296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006600919365257201,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.005725919365257201,
    "time": 2980.050537109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= i -4.4e+153) (* 100.0 (if (!= (/ 1.0 (/ i n)) 0.0) (- (/ (/ (pow (+ 1.0 (/ i n)) n) (/ (/ (* i i) n) n)) (/ 1.0 (/ i n))) (/ 1.0 (/ 1.0 (/ 1.0 (/ i n))))) (/ (+ (pow (+ 1.0 (/ i n)) n) -1.0) (/ i n)))) (* 100.0 (- (/ (pow (+ 1.0 (/ i n)) n) (/ i n)) (if (!= (+ 1.0 (/ 1.0 (/ i n))) 0.0) (/ (+ 1.0 (/ 1.0 (/ i n))) (if (!= (/ (+ i (/ i (/ i n))) n) 0.0) (/ 1.0 (/ 1.0 (/ (+ i (/ i (/ i n))) n))) (/ (+ i (/ i (/ i n))) n))) (/ 1.0 (/ i n))))))",
    "output_parens": 62,
    "avg_bits_err_input": 47.40229719414461,
    "avg_bits_err_output": 46.74129081911366,
    "avg_bits_err_improve": 0.6610063750309507,
    "time": 29091.00732421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (- INFINITY)) (+ (* d (/ b (fma d d (* c c)))) (* c (/ a (fma d d (* c c))))) (if (<= (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) 5e+281) (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))) (+ (* d (/ b (fma d d (* c c)))) (* c (/ a (fma d d (* c c)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 26.114874810140503,
    "avg_bits_err_output": 23.07836728264831,
    "avg_bits_err_improve": 3.036507527492194,
    "time": 13578.284423828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(- (* (if (!= (/ c (fma c c (* d d))) 0.0) (* c (/ (/ c c) (fma c c (* d d)))) (/ (* (- (/ c c)) (- (/ c c))) (+ c (* d (/ d c))))) b) (* a (/ d (fma c c (* d d)))))",
    "output_parens": 25,
    "avg_bits_err_input": 26.210439665110023,
    "avg_bits_err_output": 14.335533304219256,
    "avg_bits_err_improve": 11.874906360890767,
    "time": 15618.276123046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ 1.0 (- (* ux maxCos) ux))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.022853257067009147,
    "avg_bits_err_improve": 0.014146742932990852,
    "time": 9554.656005859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* uy (* 2.0 PI))) (sqrt (- (- 0.0 (+ ux (fma (fma ux maxCos (- 1.0 ux)) (- ux (* ux maxCos)) (* ux (- maxCos))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.701491355935918,
    "avg_bits_err_output": 0.5466356797209753,
    "avg_bits_err_improve": 13.154855676214943,
    "time": 25922.023681640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (- ux (- ux)) (+ (* ux ux) (* (* ux maxCos) (+ (- 1.0 ux) (fma ux maxCos (- 1.0 ux))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.736653736431963,
    "avg_bits_err_output": 0.32808150132555164,
    "avg_bits_err_improve": 13.408572235106412,
    "time": 27423.427978515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (if (!= uy 0.0) (/ (* PI (* uy (* 2.0 uy))) uy) (* PI (* 2.0 uy)))) (* (sqrt (- 1.0 (* ux (* ux (* (- 1.0 ux) (* (- 1.0 ux) (* maxCos maxCos))))))) xi) (+ (* (sqrt (- 1.0 (* (* (* maxCos maxCos) (* (- 1.0 ux) (- 1.0 ux))) (* ux ux)))) (* (sin (* 2.0 (* uy PI))) yi)) (* ux (* zi (- maxCos (* ux maxCos))))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.34700233475199505,
    "avg_bits_err_output": 0.3492578930487586,
    "avg_bits_err_improve": -0.002255558296763549,
    "time": 47828.324951171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax)))) (cos (atan (* alphay (/ (tan (* PI (+ 0.5 (* 2.0 u1)))) alphax))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.1992409899958042,
    "avg_bits_err_output": 0.19904286968321405,
    "avg_bits_err_improve": 0.0001981203125901443,
    "time": 25808.274658203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (if (!= (/ u1 (- 1.0 u1)) 0.0) (* (if (!= (/ (* u1 u1) (* (+ u1 -1.0) (+ u1 -1.0))) 0.0) (/ 1.0 (/ 1.0 (/ (* u1 u1) (* (+ u1 -1.0) (+ u1 -1.0))))) (/ (* u1 u1) (* (+ u1 -1.0) (+ u1 -1.0)))) (/ 1.0 (/ u1 (- 1.0 u1)))) (/ u1 (- 1.0 u1)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 33,
    "avg_bits_err_input": 0.5327953589052737,
    "avg_bits_err_output": 0.5837312298466156,
    "avg_bits_err_improve": -0.05093587094134189,
    "time": 21016.4638671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (+ (/ u1 (* (- 1.0 u1) 4.0)) (* u1 (/ 1.5 (- 2.0 (+ u1 u1)))))) (cos (* 6.28318530718 u2)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.3269974191468956,
    "avg_bits_err_output": 0.3381843285762246,
    "avg_bits_err_improve": -0.011186909429328984,
    "time": 23359.579345703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (if (!= (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) 0.0) (* (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) (+ (- 1.0 (/ 1.0 (+ 1.0 (exp (/ PI s))))) (- (/ u (+ 1.0 (exp (/ PI s)))) (/ u (+ 1.0 (exp (/ PI (- s)))))))) (+ (/ 1.0 (+ (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- (/ u (+ 1.0 (exp (/ PI (- s))))) (/ u (+ 1.0 (exp (/ PI s))))))) -1.0))))",
    "output_parens": 71,
    "avg_bits_err_input": 0.33157011017982335,
    "avg_bits_err_output": 0.3122419004187247,
    "avg_bits_err_improve": 0.01932820976109867,
    "time": 73505.6845703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ (expm1 (/ x (- s))) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05277137048278721,
    "avg_bits_err_output": 0.05337288961910728,
    "avg_bits_err_improve": -0.0006015191363200681,
    "time": 8667.684326171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (/ (exp (/ (fabs x) (- s))) (+ (expm1 (/ (fabs x) (- s))) 2.0)) (* s (+ (exp (/ (- (fabs x)) s)) 1.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14704880041152202,
    "avg_bits_err_output": 0.13147975355076705,
    "avg_bits_err_improve": 0.01556904686075497,
    "time": 20208.81298828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6610546146344237,
    "avg_bits_err_output": 0.6610546146344237,
    "avg_bits_err_improve": 0,
    "time": 20227.108154296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (+ (* v (+ 1.0 (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))) (- v)) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.1607340264575818,
    "avg_bits_err_output": 0.18128563942748677,
    "avg_bits_err_improve": -0.02055161296990496,
    "time": 21436.487548828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (fma (/ (- sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))) sinTheta_O (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (fma eta eta (/ (- (* sinTheta_O sinTheta_O)) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 2.4787252456347293,
    "avg_bits_err_output": 2.4748634065226365,
    "avg_bits_err_improve": 0.003861839112092813,
    "time": 28646.27001953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(* (exp (* sinTheta_i (/ sinTheta_O (- v)))) (* (+ cosTheta_O cosTheta_O) (* (/ cosTheta_i (sinh (/ 1.0 v))) (/ (/ 0.25 v) v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44697668449907874,
    "avg_bits_err_output": 0.3779301862602239,
    "avg_bits_err_improve": 0.06904649823885484,
    "time": 23547.868408203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (if (!= (- (+ (/ (- (* sinTheta_i sinTheta_O) (fma cosTheta_i cosTheta_O -1.0)) v) -0.6931) (log (/ 0.5 v))) 0.0) (/ 1.0 (/ 1.0 (+ (log (/ 0.5 v)) (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) 0.6931)))) (+ (log (/ 0.5 v)) (+ (/ (- (fma cosTheta_i cosTheta_O -1.0) (* sinTheta_i sinTheta_O)) v) 0.6931))))",
    "output_parens": 29,
    "avg_bits_err_input": 0.1127232469302494,
    "avg_bits_err_output": 0.11332999871542873,
    "avg_bits_err_improve": -0.0006067517851793269,
    "time": 17977.347412109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(- (/ (- 1.0 (* alpha alpha)) (* PI (* (log (* alpha alpha)) (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.46684617393572764,
    "avg_bits_err_output": 0.4630677023536208,
    "avg_bits_err_improve": 0.0037784715821068127,
    "time": 20739.31103515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log (+ 1.0 (expm1 (* 3.0 (log (/ 1.0 (fma u -1.3333333333333333 1.3333333333333333))))))) s)",
    "output_parens": 8,
    "avg_bits_err_input": 1.3155586273297748,
    "avg_bits_err_output": 1.2476231458388096,
    "avg_bits_err_improve": 0.06793548149096518,
    "time": 22039.8955078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(/ (* s (+ (fma (log (/ 1.0 (fma u -4.0 1.0))) 2.0 1.0) -1.0)) 2.0)",
    "output_parens": 7,
    "avg_bits_err_input": 12.177074462391777,
    "avg_bits_err_output": 12.190344654574135,
    "avg_bits_err_improve": -0.013270192182357476,
    "time": 17714.399658203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (/ (/ (* (exp (* r (/ -0.3333333333333333 s))) 0.75) s) (* r (* PI 6.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14136866499793704,
    "avg_bits_err_output": 0.14626640489822926,
    "avg_bits_err_improve": -0.004897739900292214,
    "time": 22814.08447265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (/ (sin (* u normAngle)) (sin normAngle)) n1_i) (* (/ (sin (- normAngle (* u normAngle))) (sin normAngle)) n0_i))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9211949337940752,
    "avg_bits_err_output": 0.7629933994880606,
    "avg_bits_err_improve": 0.1582015343060147,
    "time": 24275.39208984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) (* (sqrt PI) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6968330656105688,
    "avg_bits_err_output": 0.48532582889908166,
    "avg_bits_err_improve": 0.21150723671148713,
    "time": 20724.12353515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (sin (if (!= (* 2.0 (* PI u2)) 0.0) (/ 1.0 (if (!= (/ 0.5 (* PI u2)) 0.0) (/ 2.0 (/ 4.0 (/ (/ 1.0 u2) PI))) (/ 0.5 (* PI u2)))) (* 2.0 (* PI u2)))))",
    "output_parens": 23,
    "avg_bits_err_input": 13.602537837612301,
    "avg_bits_err_output": 13.61355760684706,
    "avg_bits_err_improve": -0.01101976923475867,
    "time": 24211.38623046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log (- 1.0 u1)))) (cos (- (* (exp (log1p (* 2.0 PI))) u2) (* u2 1.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.650906166182418,
    "avg_bits_err_output": 13.658286239381908,
    "avg_bits_err_improve": -0.007380073199490411,
    "time": 19923.804931640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma alpha (if (!= (* alpha (log (- 1.0 u0))) 0.0) (/ 1.0 (/ (/ 1.0 (- alpha)) (log (- 1.0 u0)))) (* (- alpha) (log (- 1.0 u0)))) (* (log (- 1.0 u0)) (fma (- alpha) alpha (* alpha alpha))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.142857218853672,
    "avg_bits_err_output": 14.150108051989138,
    "avg_bits_err_improve": -0.007250833135465484,
    "time": 18761.024169921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(if (!= (/ (log (- 1.0 u0)) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay)))) 0.0) (* (/ (log (- 1.0 u0)) (* (log (- 1.0 u0)) (- (/ (/ cos2phi alphax) (- alphax)) (/ sin2phi (* alphay alphay))))) (log (- 1.0 u0))) (/ (log (- 1.0 u0)) (- (/ cos2phi (- (* alphax alphax))) (/ sin2phi (* alphay alphay)))))",
    "output_parens": 34,
    "avg_bits_err_input": 12.704742806965966,
    "avg_bits_err_output": 12.709448674426739,
    "avg_bits_err_improve": -0.00470586746077295,
    "time": 20222.86669921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (+ (/ (/ (tan (* PI l)) F) (+ (+ F F) (+ F F))) (/ (* (tan (* PI l)) (+ (/ 1.0 F) (/ 2.0 F))) (+ (+ F F) (+ F F)))))",
    "output_parens": 20,
    "avg_bits_err_input": 16.27470222508504,
    "avg_bits_err_output": 12.236151354262171,
    "avg_bits_err_improve": 4.038550870822869,
    "time": 20217.283447265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (- (/ 1.0 (sin B)) (/ (/ x (tan B)) 2.0)) (/ (/ x (tan B)) 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.21018872187554086,
    "avg_bits_err_output": 0.15811560156295076,
    "avg_bits_err_improve": 0.05207312031259009,
    "time": 17588.49951171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (/ x (tan B))) (/ (log1p (expm1 (* F (pow (fma 2.0 x (fma F F 2.0)) -0.5)))) (sin B)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.931669761833206,
    "avg_bits_err_output": 10.812988359802189,
    "avg_bits_err_improve": 3.118681402031017,
    "time": 23925.10302734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(/ (log (/ (+ (exp (/ (* PI f) 4.0)) (exp (* PI (/ f -4.0)))) (- (expm1 (* PI (/ f 4.0))) (expm1 (* PI (/ f -4.0)))))) (/ PI -4.0))",
    "output_parens": 18,
    "avg_bits_err_input": 61.35569690165737,
    "avg_bits_err_output": 1.9250699002641307,
    "avg_bits_err_improve": 59.43062700139323,
    "time": 54916.714599609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(* (sqrt 2.0) (/ t (sqrt (+ (* (/ (+ x 1.0) (+ x -1.0)) (* 2.0 (* t t))) (* l (* l (- (+ -1.0 (/ x (+ x -1.0))) (/ -1.0 (+ x -1.0)))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 42.76990330589846,
    "avg_bits_err_output": 33.784273708704426,
    "avg_bits_err_improve": 8.985629597194034,
    "time": 26558.718994140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (sin th) (expm1 (log1p (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 3.964076345249619,
    "avg_bits_err_output": 4.017939360910243,
    "avg_bits_err_improve": -0.053863015660624125,
    "time": 25367.30908203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (+ 0.5 (* (/ 1.0 (- (exp (log1p (sqrt (fma (pow (/ (* l 2.0) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)) 1.0)))) 1.0)) 0.5)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.941,
    "avg_bits_err_output": 0.943375,
    "avg_bits_err_improve": -0.002375000000000016,
    "time": 20693.495849609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (- (/ 1.0 (fma 2.0 (pow (/ t l) 2.0) 1.0)) (/ (pow (/ Om Omc) 2.0) (fma 2.0 (pow (/ t l) 2.0) 1.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 10.512441713756571,
    "avg_bits_err_improve": 0.0007500000000000284,
    "time": 16534.3271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 0.0) (sqrt (- (* n (* U (* -2.0 (* (pow (/ l Om) 2.0) (* n (- U U*)))))) (* 2.0 (* U (* n (- (* l (* (/ l Om) 2.0)) t)))))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e+152) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (sqrt (* (* 2.0 n) (* U (- t (+ (* n (* (pow (/ l Om) 2.0) (- U U*))) (* 2.0 (* l (/ l Om))))))))))",
    "output_parens": 77,
    "avg_bits_err_input": 34.81510642911647,
    "avg_bits_err_output": 28.74704819552216,
    "avg_bits_err_improve": 6.068058233594307,
    "time": 32174.08544921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(* (/ (/ (/ 2.0 (/ (pow t 3.0) l)) (pow (/ k t) 2.0)) (/ (sin k) l)) (/ 1.0 (tan k)))",
    "output_parens": 12,
    "avg_bits_err_input": 47.393965477818895,
    "avg_bits_err_output": 36.115290558987546,
    "avg_bits_err_improve": 11.27867491883135,
    "time": 39020.89794921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* l l) 5e+76) (/ 2.0 (* (/ (sin k) l) (* (* (+ 2.0 (pow (/ k t) 2.0)) (pow t 3.0)) (/ (tan k) l)))) (/ 2.0 (* (tan k) (* (/ (+ 2.0 (pow (/ k t) 2.0)) l) (* (/ (pow t 3.0) l) (sin k))))))",
    "output_parens": 27,
    "avg_bits_err_input": 32.28531013236232,
    "avg_bits_err_output": 26.561388700638467,
    "avg_bits_err_improve": 5.723921431723852,
    "time": 24330.80615234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(/ (+ (* a1 (* (cos th) a1)) (* a2 (* (cos th) a2))) (sqrt 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5056808297076038,
    "avg_bits_err_output": 0.4530484984543579,
    "avg_bits_err_improve": 0.052632331253245845,
    "time": 22773.780517578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(/ (pow (* 2.0 (* PI n)) (- 0.5 (* k 0.5))) (sqrt k))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5319846978978081,
    "avg_bits_err_output": 0.47949248633932523,
    "avg_bits_err_improve": 0.05249221155848288,
    "time": 19370.1611328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (fma (- (exp (- l))) (* (cos (/ K 2.0)) J) (* (exp (- l)) (* (cos (/ K 2.0)) J))) (* (- (exp l) (exp (- l))) (* (cos (/ K 2.0)) J))) U)",
    "output_parens": 23,
    "avg_bits_err_input": 17.644283046851097,
    "avg_bits_err_output": 17.649004657682102,
    "avg_bits_err_improve": -0.004721610831005307,
    "time": 23373.5400390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(log1p (expm1 (* (cos (fma (+ m n) (/ K 2.0) (- M))) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.451455712274758,
    "avg_bits_err_output": 15.451705712274757,
    "avg_bits_err_improve": -0.00024999999999941735,
    "time": 17424.16259765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.888448120312592,
    "avg_bits_err_output": 17.888448120312592,
    "avg_bits_err_improve": 0,
    "time": 28442.04150390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (/ (* (pow (/ (* D M) (* 2.0 d)) 2.0) h) l)))) (if (<= (/ h l) 0.0) (* w0 (sqrt (- 1.0 (* (pow (* D (/ (/ M 2.0) d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (/ (* (pow (/ (* D M) (* 2.0 d)) 2.0) h) l))))))",
    "output_parens": 34,
    "avg_bits_err_input": 13.773766496309056,
    "avg_bits_err_output": 9.909069752696848,
    "avg_bits_err_improve": 3.8646967436122086,
    "time": 8818.40087890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(if (<= (* V l) -2e+296) (* c0 (sqrt (* (/ A l) (/ 1.0 V)))) (if (<= (* V l) -1e-200) (* c0 (sqrt (/ A (* V l)))) (if (<= (* V l) 2e-299) (* c0 (sqrt (/ (/ A l) V))) (if (<= (* V l) 5e+65) (* c0 (sqrt (* A (/ 1.0 (* l V))))) (* c0 (sqrt (/ (/ A V) l)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 19.38393505942606,
    "avg_bits_err_output": 15.36232322349124,
    "avg_bits_err_improve": 4.021611835934822,
    "time": 14417.506103515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) 2e+268) (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) (* (/ c0 (* 2.0 w)) (if (!= (sqrt (* (fma d (/ (/ (* c0 d) (* w h)) (* D D)) M) (- (* (/ d (* D D)) (/ (* c0 d) (* w h))) M))) 0.0) 0.0 (fma d (/ (/ (* c0 d) (* w h)) (* D D)) (sqrt (* (fma d (/ (/ (* c0 d) (* w h)) (* D D)) M) (- (* (/ d (* D D)) (/ (* c0 d) (* w h))) M)))))))",
    "output_parens": 95,
    "avg_bits_err_input": 59.63760002667698,
    "avg_bits_err_output": 34.19845141237173,
    "avg_bits_err_improve": 25.439148614305246,
    "time": 51062.099365234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* h (* (pow (/ (* M (/ D 2.0)) d) 2.0) (/ 0.5 l)))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.269140892190727,
    "avg_bits_err_output": 25.295269611794506,
    "avg_bits_err_improve": 0.9738712803962208,
    "time": 35826.3359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(if (!= (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))) 0.0) (/ (log (+ 1.0 (expm1 (- (fma (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))) -1.0))))) (+ 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x)))))) (- 1.0 (sqrt (+ 0.5 (/ 0.5 (hypot 1.0 x))))))",
    "output_parens": 31,
    "avg_bits_err_input": 15.558024646213862,
    "avg_bits_err_output": 15.091105138932127,
    "avg_bits_err_improve": 0.4669195072817356,
    "time": 6022.2880859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ (/ 1.3333333333333333 (* PI (- 1.0 (* v v)))) (sqrt (- (* (* v v) -6.0) -2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9827924812503607,
    "avg_bits_err_output": 0.01214624062518029,
    "avg_bits_err_improve": 0.9706462406251803,
    "time": 4042.212646484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(- (/ (/ (/ (- (fma v (* v 5.0) -1.0)) PI) (- t (* v (* v t)))) (sqrt (- 2.0 (* v (* v 6.0))))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.41964857393116367,
    "avg_bits_err_output": 0.2615024437510817,
    "avg_bits_err_improve": 0.15814613018008195,
    "time": 17258.314453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.013146240625180288,
    "avg_bits_err_output": 0.013146240625180288,
    "avg_bits_err_improve": 0,
    "time": 4655.605712890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5191202699468207,
    "avg_bits_err_output": 0.5191202699468207,
    "avg_bits_err_improve": 0,
    "time": 9367.832763671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.96427427963445,
    "avg_bits_err_output": 1.92377427963445,
    "avg_bits_err_improve": 0.04049999999999998,
    "time": 15750.9052734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec EDonor) Vef)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ EAccept (- (+ Vef Ev) mu)) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017326569372752045,
    "avg_bits_err_output": 0.017326569372752045,
    "avg_bits_err_improve": 0,
    "time": 9771.1552734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17891093358955718,
    "avg_bits_err_output": 0.17891093358955718,
    "avg_bits_err_improve": 0,
    "time": 17159.49365234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (if (!= (pow (fma a a (* b b)) 2.0) 0.0) (* (pow (fma a a (* b b)) 2.0) (+ (/ (pow (fma a a (* b b)) 2.0) (pow (fma a a (* b b)) 2.0)) (* 4.0 (/ (fma a (fma a a a) (* (* b b) (+ 1.0 (* a -3.0)))) (pow (fma a a (* b b)) 2.0))))) (fma 4.0 (fma a (fma a a a) (* b (* b (- 1.0 (* 3.0 a))))) (pow (fma a a (* b b)) 2.0))) 1.0)",
    "output_parens": 39,
    "avg_bits_err_input": 0.1845460060198135,
    "avg_bits_err_output": 0.18889887660600366,
    "avg_bits_err_improve": -0.004352870586190161,
    "time": 20683.8603515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (fma a a (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.1884003703942341,
    "avg_bits_err_output": 0.18735788914387355,
    "avg_bits_err_improve": 0.0010424812503605496,
    "time": 8933.41455078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (+ 1.0 (expm1 (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.537728423626795,
    "avg_bits_err_output": 13.544433394768314,
    "avg_bits_err_improve": -0.006704971141518357,
    "time": 14641.58251953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-rat"
  }
]
