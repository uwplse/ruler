[
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.87488418017552,
    "avg_bits_err_output": 0.04775,
    "avg_bits_err_improve": 40.82713418017552,
    "time": 7429.184326171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (- x (tan x)) (fma (pow (tan x) 2.0) (/ 1.0 (tan x)) (* (- (tan x)) (pow (* (/ 1.0 (tan x)) (tan x)) 2.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 31.180782228138554,
    "avg_bits_err_output": 30.31403091890781,
    "avg_bits_err_improve": 0.8667513092307431,
    "time": 57787.33251953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma a (* c (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) (+ (- b_2) (* b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))))) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.41134914409666,
    "avg_bits_err_output": 32.44663529579007,
    "avg_bits_err_improve": 1.9647138483065945,
    "time": 20007.235107421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (+ (* (* a c) (/ 1.0 (sqrt (fma b_2 b_2 (* a (- c)))))) (+ (* (sqrt (- (* b_2 b_2) (* a c))) (* (sqrt (- (* b_2 b_2) (* a c))) (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) (* b_2 (* (/ 1.0 (sqrt (fma b_2 b_2 (* a (- c))))) (- b_2))))) (- (- b_2) (sqrt (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 40,
    "avg_bits_err_input": 34.25264941759655,
    "avg_bits_err_output": 33.40632474175844,
    "avg_bits_err_improve": 0.8463246758381118,
    "time": 30639.05908203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.575020739923517,
    "avg_bits_err_output": 31.27180740287829,
    "avg_bits_err_improve": 0.303213337045225,
    "time": 46107.7724609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 7.5e+27) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 21,
    "avg_bits_err_input": 32.65983579670954,
    "avg_bits_err_output": 30.689428268751275,
    "avg_bits_err_improve": 1.9704075279582618,
    "time": 58544.777099609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.89630016366425,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 29.88830016366425,
    "time": 21850.603515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.026953453822443,
    "avg_bits_err_output": 14.026953453822443,
    "avg_bits_err_improve": 0,
    "time": 74337.25390625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.995185282530144,
    "avg_bits_err_output": 6.194122709762651,
    "avg_bits_err_improve": 33.80106257276749,
    "time": 31279.71240234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.020420158353453,
    "avg_bits_err_output": 29.721112131143286,
    "avg_bits_err_improve": 0.29930802721016647,
    "time": 29427.223876953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.4562400601662,
    "avg_bits_err_output": 30.460632890079896,
    "avg_bits_err_improve": -0.004392829913697938,
    "time": 30845.510498046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (* (* c (* a -4.0)) (* (/ 1.0 (fma b b (* c (* a -4.0)))) (sqrt (fma b b (* c (* a -4.0)))))) (- (* (sqrt (fma b b (* c (* a -4.0)))) (* (/ 1.0 (fma b b (* c (* a -4.0)))) (* b b))) b)) (* a 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 34.46033237308252,
    "avg_bits_err_output": 34.190884712625966,
    "avg_bits_err_improve": 0.26944766045655655,
    "time": 23628.104248046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (fma a (* c -4.0) (* b b)) (* a (* c (- 4.0 (* a (/ 4.0 a)))))))) (+ a a))",
    "output_parens": 14,
    "avg_bits_err_input": 34.472549351833045,
    "avg_bits_err_output": 34.50472301738478,
    "avg_bits_err_improve": -0.03217366555173129,
    "time": 43882.826171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.453730727635474,
    "avg_bits_err_output": 0.02374304531403246,
    "avg_bits_err_improve": 61.42998768232144,
    "time": 33212.021484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.008218201337286,
    "avg_bits_err_output": 0.06721456040084128,
    "avg_bits_err_improve": 62.941003640936444,
    "time": 33576.772705078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (* (+ 1.0 (exp -1.0)) (- (+ 1.0 (* (log (/ (- 1.0 eps) (+ 1.0 eps))) (exp 1.0))) 1.0)) (* (log (/ (- 1.0 eps) (- eps -1.0))) (exp 1.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 58.64187700601443,
    "avg_bits_err_output": 58.65522739168428,
    "avg_bits_err_improve": -0.013350385669845366,
    "time": 122719.41723632812,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.87792033337887,
    "avg_bits_err_output": 59.8779319098842,
    "avg_bits_err_improve": -1.1576505329458087e-05,
    "time": 60338.867919921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps 8e-304) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps b))) (expm1 (* eps a)))) (if (<= eps 7.7e-208) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (* (expm1 (* eps b)) (+ (pow (exp a) eps) -1.0))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps b)) (* (expm1 (* eps a)) (* (expm1 (* eps a)) (/ 1.0 (expm1 (* eps a)))))))))",
    "output_parens": 48,
    "avg_bits_err_input": 60.1572632360821,
    "avg_bits_err_output": 42.014565226161146,
    "avg_bits_err_improve": 18.142698009920956,
    "time": 48340.6279296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.31012038960202,
    "avg_bits_err_output": 0.12570809018383797,
    "avg_bits_err_improve": 41.184412299418184,
    "time": 27494.82861328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.60569648221609,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.60544648221609,
    "time": 3723.646484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.540685457791106,
    "avg_bits_err_output": 0.01914441780414224,
    "avg_bits_err_improve": 29.521541039986964,
    "time": 6253.173828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.637424647862787,
    "avg_bits_err_output": 28.681089569467048,
    "avg_bits_err_improve": 0.956335078395739,
    "time": 33595.621826171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.14813584865345,
    "avg_bits_err_output": 9.16133441170391,
    "avg_bits_err_improve": -0.013198563050460521,
    "time": 49635.611328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.94670660178132,
    "avg_bits_err_output": 36.976006711183516,
    "avg_bits_err_improve": -0.029300109402193186,
    "time": 50675.127685546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(exp (log (+ (/ 1.0 (sqrt (+ 1.0 x))) (- (fma x (+ 1.0 (/ 1.0 (sqrt (+ x 1.0)))) (- (sqrt x))) x))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.292353743518234,
    "avg_bits_err_output": 25.994838442165435,
    "avg_bits_err_improve": 4.297515301352799,
    "time": 81488.57446289062,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.60663541607277,
    "avg_bits_err_output": 0.3619248466278583,
    "avg_bits_err_improve": 37.24471056944491,
    "time": 25929.47314453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.151960140066578,
    "avg_bits_err_output": 20.016473633493714,
    "avg_bits_err_improve": 0.13548650657286387,
    "time": 35180.903564453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (/ 1.0 (atan (+ 1.0 N))) (pow (atan (+ 1.0 N)) 2.0)) (atan N))",
    "output_parens": 9,
    "avg_bits_err_input": 14.787589356586064,
    "avg_bits_err_output": 14.793370874509769,
    "avg_bits_err_improve": -0.005781517923704627,
    "time": 41402.216552734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.99235110276065,
    "avg_bits_err_output": 1.143966587777828,
    "avg_bits_err_improve": 28.848384514982822,
    "time": 38596.990966796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- (* m (+ m -1.0))) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.07563928593921272,
    "avg_bits_err_output": 0.0808284903243261,
    "avg_bits_err_improve": -0.0051892043851133746,
    "time": 23240.189453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.83773893043793,
    "avg_bits_err_output": 0.3138140984428186,
    "avg_bits_err_improve": 15.52392483199511,
    "time": 22600.06787109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (/ PI (/ angle 180.0)) (* (/ angle 180.0) (* (/ PI (/ angle 180.0)) (/ 1.0 (/ PI (/ angle 180.0)))))) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.320657935588994,
    "avg_bits_err_output": 20.64719542850115,
    "avg_bits_err_improve": -0.3265374929121556,
    "time": 58099.2265625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (- 0.0 (fma (sin (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (- (pow a 2.0) (pow b 2.0))) (fma (- (* (pow b 2.0) (/ (sin (* PI (* (/ angle 180.0) 2.0))) (sin (* PI (* (/ angle 180.0) 2.0)))))) (* (sin (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))) (* (sin (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (pow b 2.0)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 31.220150071696498,
    "avg_bits_err_output": 31.221450186880002,
    "avg_bits_err_improve": -0.001300115183504147,
    "time": 52461.238037109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (fma PI (* PI (/ (/ angle 180.0) PI)) 0.0))) 2.0) (pow (* b (cos (fma (/ angle 180.0) (* (- (/ angle 180.0)) (+ (- -1.0 (/ PI (/ angle 180.0))) 1.0)) 0.0))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.517435164799974,
    "avg_bits_err_output": 20.5601749207268,
    "avg_bits_err_improve": -0.04273975592682788,
    "time": 77819.25854492188,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17476184218813104,
    "avg_bits_err_output": 0.17476184218813104,
    "avg_bits_err_improve": 0,
    "time": 41578.3115234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (+ 1.0 (pow (tan x) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.30518865959940467,
    "avg_bits_err_output": 0.30531365959940465,
    "avg_bits_err_improve": -0.00012499999999998623,
    "time": 48129.969482421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13169812031259015,
    "avg_bits_err_output": 0.13169812031259015,
    "avg_bits_err_improve": 0,
    "time": 23681.3642578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.171775623305866,
    "avg_bits_err_output": 17.166654644343684,
    "avg_bits_err_improve": 0.005120978962182221,
    "time": 44703.95556640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.83969044350404,
    "avg_bits_err_output": 46.365861057299526,
    "avg_bits_err_improve": 6.473829386204514,
    "time": 28970.62890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.219180534707085,
    "avg_bits_err_output": 28.151947809796052,
    "avg_bits_err_improve": 0.06723272491103316,
    "time": 31681.83544921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.685511367535874,
    "avg_bits_err_output": 39.32451029683869,
    "avg_bits_err_improve": 4.361001070697185,
    "time": 28757.8388671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.46212258103005,
    "avg_bits_err_output": 34.46212258103005,
    "avg_bits_err_improve": 0,
    "time": 41073.990234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (* (sin (- lambda1 lambda2)) (* (sin (- lambda1 lambda2)) (/ 1.0 (sin (- lambda1 lambda2)))))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.9203810234809323,
    "avg_bits_err_output": 0.9386685974533493,
    "avg_bits_err_improve": -0.01828757397241698,
    "time": 39130.205810546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.064811471220583,
    "avg_bits_err_output": 29.064889095076726,
    "avg_bits_err_improve": -7.762385614284995e-05,
    "time": 35641.530517578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.213622374202764,
    "avg_bits_err_output": 1.3133562031259016,
    "avg_bits_err_improve": 56.900266171076865,
    "time": 19985.244140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.93285336758055,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 57.92535336758055,
    "time": 8960.259521484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009912798070799487,
    "avg_bits_err_output": 0.009912798070799487,
    "avg_bits_err_improve": 0,
    "time": 2452.69873046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.60125,
    "avg_bits_err_output": 31.60125,
    "avg_bits_err_improve": 0,
    "time": 4364.382080078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (/ (+ x 1.0) (- 1.0 x))) 0.5)",
    "output_parens": 5,
    "avg_bits_err_input": 58.630511978163696,
    "avg_bits_err_output": 58.630511978163696,
    "avg_bits_err_improve": 0,
    "time": 108520.50732421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.027448120312590144,
    "avg_bits_err_output": 0.027448120312590144,
    "avg_bits_err_improve": 0,
    "time": 2990.218017578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1272712406251803,
    "avg_bits_err_output": 0.1272712406251803,
    "avg_bits_err_improve": 0,
    "time": 33879.825927734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.123625,
    "avg_bits_err_output": 0.123625,
    "avg_bits_err_improve": 0,
    "time": 17296.824462890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.35118233120891,
    "avg_bits_err_output": 3.829233784805921,
    "avg_bits_err_improve": 35.52194854640299,
    "time": 66027.6953125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.805285926075854,
    "avg_bits_err_output": 14.805285926075854,
    "avg_bits_err_improve": 0,
    "time": 4913.731689453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin delta) (* (/ (sin theta) (cos phi1)) (* (cos phi1) (cos phi1)))) (+ (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1)))))))) (fma (sin (- (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1))))))) (sin phi1) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1)))))))))))",
    "output_parens": 51,
    "avg_bits_err_input": 0.16210147755514773,
    "avg_bits_err_output": 0.16255410722112767,
    "avg_bits_err_improve": -0.0004526296659799478,
    "time": 44706.71240234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (+ -1.0 (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) (* a (* (/ (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* c -3.0)) (* -3.0 (* (* c -3.0) c))))) (* 3.0 a))",
    "output_parens": 22,
    "avg_bits_err_input": 52.82050532703905,
    "avg_bits_err_output": 46.3379979071504,
    "avg_bits_err_improve": 6.482507419888648,
    "time": 33682.214599609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.36819594953342,
    "avg_bits_err_output": 28.313529548869763,
    "avg_bits_err_improve": 0.054666400663656134,
    "time": 34334.771484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.77758319506283,
    "avg_bits_err_output": 39.48370714903976,
    "avg_bits_err_improve": 4.2938760460230725,
    "time": 34475.030029296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.51819949511365,
    "avg_bits_err_output": 34.51819949511365,
    "avg_bits_err_improve": 0,
    "time": 27991.203369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.447363567738538,
    "avg_bits_err_output": 13.447363567738538,
    "avg_bits_err_improve": 0,
    "time": 58865.781494140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (log (exp (/ x (+ 1.0 x)))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 28.907142100152114,
    "avg_bits_err_output": 28.911821083951473,
    "avg_bits_err_improve": -0.004678983799358605,
    "time": 38715.060791015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ -1.0 x)) (+ (/ x (+ 1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.013823120312590146,
    "avg_bits_err_improve": -0.002073120312590146,
    "time": 3702.652587890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(* -1.0 (+ (- (pow (/ 1.0 (+ x -1.0)) 2.0) (* (/ 1.0 (+ -1.0 x)) (log (pow (exp (- (/ 1.0 (+ -1.0 x)))) (- (/ (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x)))))))) (- (/ 1.0 (+ x -1.0)) (/ 1.0 (+ 1.0 x)))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.187970758462768,
    "avg_bits_err_output": 12.349709800770242,
    "avg_bits_err_improve": 1.8382609576925262,
    "time": 142702.7783203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.5e-291) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* 2.0 (* F (+ C (- A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (* (sqrt F) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.76292766261422,
    "avg_bits_err_output": 49.0193154208909,
    "avg_bits_err_improve": 3.7436122417233193,
    "time": 52687.852783203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.043603710209847,
    "avg_bits_err_output": 29.043603710209847,
    "avg_bits_err_improve": 0,
    "time": 40557.76171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (* (sqrt (- F)) (sqrt (- (* A (* C 4.0)) (pow B 2.0)))) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.606007567516684,
    "avg_bits_err_output": 47.28618854331491,
    "avg_bits_err_improve": 5.319819024201777,
    "time": 47524.494384765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.171756941918344,
    "avg_bits_err_output": 15.171756941918344,
    "avg_bits_err_improve": 0,
    "time": 53683.7763671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g -1.18e-154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (if (<= g -2e-262) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (- (exp (log1p (cbrt (* (- (/ 1.0 (+ a a))) (+ g (sqrt (- (* g g) (* h h)))))))) 1.0)) (if (<= g 5e+151) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))))",
    "output_parens": 116,
    "avg_bits_err_input": 35.67640701467552,
    "avg_bits_err_output": 14.511890465361427,
    "avg_bits_err_improve": 21.164516549314094,
    "time": 66700.85034179688,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (fma (sin (expm1 (log1p (/ (* 2.0 PI) 3.0)))) (- (sin (/ (acos (/ (- g) h)) 3.0))) (* (cos (/ (* 2.0 PI) 3.0)) (cos (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.9912883468827537,
    "avg_bits_err_output": 0.018042481250360582,
    "avg_bits_err_improve": 0.9732458656323931,
    "time": 12329.3681640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6610943609377705,
    "avg_bits_err_output": 0.6630118421881311,
    "avg_bits_err_improve": -0.0019174812503606198,
    "time": 6114.716064453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.294396107797018,
    "avg_bits_err_output": 11.294396107797018,
    "avg_bits_err_improve": 0,
    "time": 16795.1787109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40895293827427864,
    "avg_bits_err_output": 0.36,
    "avg_bits_err_improve": 0.04895293827427866,
    "time": 17105.054931640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.22922637428044,
    "avg_bits_err_output": 15.9870241326552,
    "avg_bits_err_improve": 37.242202241625236,
    "time": 52595.138427734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.679809565668414,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.679809565668414,
    "time": 1971.490478515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 15231.601806640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1320.857177734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) (- INFINITY)) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (- (* (+ (* r (* r w)) 1.0) w) w)) (- 1.0 v)))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 42,
    "avg_bits_err_input": 12.992930689537006,
    "avg_bits_err_output": 6.092561654691733,
    "avg_bits_err_improve": 6.900369034845274,
    "time": 34077.605712890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.524059527574896,
    "avg_bits_err_output": 0.2747603399090418,
    "avg_bits_err_improve": 0.24929918766585424,
    "time": 72345.04028320312,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.045396829725135,
    "avg_bits_err_output": 18.045396829725135,
    "avg_bits_err_improve": 0,
    "time": 39656.4462890625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.28223776155338814,
    "avg_bits_err_output": 0.1903043234384916,
    "avg_bits_err_improve": 0.09193343811489654,
    "time": 22182.96923828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow y 4.0) (- (* (pow y 4.0) 2.0) (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.003125,
    "avg_bits_err_output": 0.021,
    "avg_bits_err_improve": -0.017875000000000002,
    "time": 7162.59814453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.1091207942105,
    "avg_bits_err_output": 9.304517034835646,
    "avg_bits_err_improve": 4.804603759374855,
    "time": 38376.85009765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ 1.0 (expm1 (log1p (exp (- (* eps x) x))))) (+ (* (exp (- (fma eps x x))) (- 1.0 (/ 1.0 eps))) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) -1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.78789341309523,
    "avg_bits_err_output": 0.9867727294047112,
    "avg_bits_err_improve": 28.801120683690517,
    "time": 24749.741943359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.0055,
    "avg_bits_err_output": 0.0055,
    "avg_bits_err_improve": 0,
    "time": 8321.538330078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.008625,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 0,
    "time": 21112.399169921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (+ 2.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.048625,
    "avg_bits_err_output": 0.044125,
    "avg_bits_err_improve": 0.004500000000000004,
    "time": 67507.55493164062,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3078.295654296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2762.544189453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3521.01806640625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.822912304428905,
    "avg_bits_err_output": 0.248875,
    "avg_bits_err_improve": 7.574037304428905,
    "time": 60513.15380859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3143548054901855,
    "avg_bits_err_output": 7.3143548054901855,
    "avg_bits_err_improve": 0,
    "time": 34800.2880859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 15.835406440542085,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 15.821781440542086,
    "time": 13189.94384765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (/ (pow (exp (* x x)) 10.0) (cos x)) (cos x)) (* (* (* (cos x) (/ (/ (pow (pow (exp x) x) 10.0) 1.0) (cos x))) (/ (cos x) (* (cos x) (/ (pow (exp (* x x)) 10.0) (cos x))))) (log (pow (exp (cos x)) (cos x)))))",
    "output_parens": 32,
    "avg_bits_err_input": 3.5487659458009073,
    "avg_bits_err_output": 2.1927634344826172,
    "avg_bits_err_improve": 1.35600251131829,
    "time": 74417.18408203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.020530630351313,
    "avg_bits_err_output": 15.020530630351313,
    "avg_bits_err_improve": 0,
    "time": 29512.741943359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.53511209548896,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.53511209548896,
    "time": 4006.781005859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.803248968089605,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 38.802373968089604,
    "time": 5307.088623046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.295625,
    "avg_bits_err_improve": 63.704375,
    "time": 4977.592041015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325147286218,
    "avg_bits_err_output": 0.38932800781475363,
    "avg_bits_err_improve": 61.453923465047424,
    "time": 19650.849365234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (fma a (* c -4.0) (* b b)) (* a (* c (- 4.0 (* a (/ 4.0 a)))))))) (+ a a))",
    "output_parens": 14,
    "avg_bits_err_input": 34.472549351833045,
    "avg_bits_err_output": 34.50472301738478,
    "avg_bits_err_improve": -0.03217366555173129,
    "time": 42836.513916015625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.46212258103005,
    "avg_bits_err_output": 34.46212258103005,
    "avg_bits_err_improve": 0,
    "time": 39582.953369140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1771.039794921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.76818272521393,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 39.759057725213935,
    "time": 9334.34814453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.798566548015334,
    "avg_bits_err_output": 19.800843052744526,
    "avg_bits_err_improve": -0.0022765047291919416,
    "time": 13967.132080078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6701016891069065,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6701016891069065,
    "time": 6231.625732421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.036,
    "time": 10447.96142578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019073120312590144,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0.008198120312590144,
    "time": 3776.492919921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.015375,
    "avg_bits_err_output": 0.015375,
    "avg_bits_err_improve": 0,
    "time": 4379.37109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 1994.728759765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.38880225625468784,
    "avg_bits_err_output": 0.243125,
    "avg_bits_err_improve": 0.14567725625468783,
    "time": 8902.66845703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.488135785344156,
    "avg_bits_err_output": 29.488135785344156,
    "avg_bits_err_improve": 0,
    "time": 18784.348388671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (- (* x x) eps) (- (* x (* (/ 1.0 (- (* x x) eps)) x)) (log1p (expm1 (* eps (/ 1.0 (- (* x x) eps)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 24.17771523680861,
    "avg_bits_err_output": 24.24204100733235,
    "avg_bits_err_improve": -0.064325770523741,
    "time": 21076.835693359375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (fma (sin x) (/ -1.0 (sin x)) 1.0) (- (+ 1.0 (sin x)) 1.0))) (tan x))",
    "output_parens": 13,
    "avg_bits_err_input": 29.920272973259017,
    "avg_bits_err_output": 29.884228185955948,
    "avg_bits_err_improve": 0.03604478730306937,
    "time": 49463.636474609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007681401388979041,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006556401388979041,
    "time": 4019.464111328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 50000.0) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.58844782478861,
    "avg_bits_err_output": 10.502029888480138,
    "avg_bits_err_improve": 37.08641793630847,
    "time": 44717.93798828125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.675386994784667,
    "avg_bits_err_output": 26.675313874472074,
    "avg_bits_err_improve": 7.312031259232299e-05,
    "time": 28407.38232421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.20477483441839,
    "avg_bits_err_output": 26.20477483441839,
    "avg_bits_err_improve": 0,
    "time": 22380.47802734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.031375,
    "avg_bits_err_output": 0.018207016441828858,
    "avg_bits_err_improve": 0.013167983558171142,
    "time": 9924.823974609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (fma PI (* (+ uy uy) (exp (log1p (/ PI PI)))) (* PI (- (+ uy uy))))) (sqrt (- 1.0 (log (+ 1.0 (expm1 (pow (fma ux maxCos (- 1.0 ux)) 2.0)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.647832149166652,
    "avg_bits_err_output": 12.477234391483433,
    "avg_bits_err_improve": 1.1705977576832183,
    "time": 48107.75634765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (fma (fma ux maxCos (- 1.0 ux)) ux (- (- (- (pow (fma ux maxCos 1.0) 2.0) 1.0) (* ux (fma ux maxCos 1.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.676623533641141,
    "avg_bits_err_output": 1.6628864964881234,
    "avg_bits_err_improve": 12.013737037153017,
    "time": 82021.27026367188,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (- 1.0 ux) (* ux maxCos)) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33887085912373005,
    "avg_bits_err_output": 0.33962242446645,
    "avg_bits_err_improve": -0.0007515653427199731,
    "time": 66601.15380859375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.2029600952810437,
    "avg_bits_err_output": 0.2029600952810437,
    "avg_bits_err_improve": 0,
    "time": 34383.5625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (exp (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5324980702766468,
    "avg_bits_err_output": 0.496346407928139,
    "avg_bits_err_improve": 0.03615166234850775,
    "time": 37735.42578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (+ (* (sin (/ u2 u2)) (sin (+ (/ u2 u2) (* u2 6.28318530718)))) (+ (cos (* u2 -6.28318530718)) (* (sin (/ u2 u2)) (sin (- (* u2 -6.28318530718) (/ u2 u2)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.33138921929424436,
    "avg_bits_err_output": 0.3314370291484201,
    "avg_bits_err_improve": -4.780985417573991e-05,
    "time": 60822.173583984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma s (log (log1p (expm1 (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))))) 0.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.33393869296766343,
    "avg_bits_err_output": 0.35229553814410325,
    "avg_bits_err_improve": -0.018356845176439818,
    "time": 37661.944580078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05662766810866245,
    "avg_bits_err_output": 0.0381802422170575,
    "avg_bits_err_improve": 0.018447425891604953,
    "time": 16719.0927734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (- s (* s (- -1.0 (exp (/ (- (fabs x)) s))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.17231890009084724,
    "avg_bits_err_output": 0.15360973010708764,
    "avg_bits_err_improve": 0.0187091699837596,
    "time": 28103.1357421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (log1p (expm1 (sin (* PI (* x tau))))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6627989233643427,
    "avg_bits_err_output": 0.675891490059497,
    "avg_bits_err_improve": -0.01309256669515435,
    "time": 42733.532470703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15328271046875777,
    "avg_bits_err_output": 0.1537164668795955,
    "avg_bits_err_improve": -0.0004337564108377323,
    "time": 22702.55029296875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.599083711564975,
    "avg_bits_err_output": 2.595183742036864,
    "avg_bits_err_improve": 0.0038999695281112245,
    "time": 52159.2509765625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* v (* (sinh (/ 1.0 v)) (* v (* (sinh (/ 1.0 v)) (/ (/ 2.0 (sinh (/ 1.0 v))) v))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.4628038478056186,
    "avg_bits_err_output": 0.4874836036848041,
    "avg_bits_err_improve": -0.024679755879185472,
    "time": 55178.57080078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (- 0.6931 (/ (* sinTheta_i sinTheta_O) v)))) (fma (* (/ 1.0 (+ v v)) (+ 1.0 (+ v v))) (+ v v) -1.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.11301117382757771,
    "avg_bits_err_output": 0.11167361645752104,
    "avg_bits_err_improve": 0.001337557370056669,
    "time": 34315.51513671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4757510659776972,
    "avg_bits_err_output": 0.4328604280362725,
    "avg_bits_err_improve": 0.04289063794142467,
    "time": 26514.959228515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log1p (- (/ (- u 0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.328498093227955,
    "avg_bits_err_output": 0.5495876366627998,
    "avg_bits_err_improve": 0.7789104565651553,
    "time": 78004.83227539062,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(+ (fma (- (log1p (* u -4.0))) s (* (log1p (* u -4.0)) s)) (* (log1p (* u -4.0)) (- s)))",
    "output_parens": 12,
    "avg_bits_err_input": 12.502287367634787,
    "avg_bits_err_output": 0.210875,
    "avg_bits_err_improve": 12.291412367634788,
    "time": 48346.93017578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* s (* s (/ (* 6.0 (* PI r)) s)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12988456576125287,
    "avg_bits_err_output": 0.1391520552438708,
    "avg_bits_err_improve": -0.009267489482617935,
    "time": 86231.86840820312,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) (* n0_i (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9211871839963994,
    "avg_bits_err_output": 0.9007742985001508,
    "avg_bits_err_improve": 0.020412885496248645,
    "time": 46063.259521484375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (- (* (+ 1.0 (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (/ 1.0 (sqrt PI))) (/ 1.0 (sqrt PI))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.6828617256700389,
    "avg_bits_err_output": 0.6905953725470222,
    "avg_bits_err_improve": -0.007733646876983302,
    "time": 72128.43872070312,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (sin (fma PI (* (/ u2 (* 2.0 PI)) -2.0) (* (/ u2 (* 2.0 PI)) (* PI (+ 2.0 (* PI 4.0)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.349306948014679,
    "avg_bits_err_output": 0.5707525610704265,
    "avg_bits_err_improve": 12.778554386944252,
    "time": 31304.740966796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.394814497583212,
    "avg_bits_err_output": 0.32164759624975336,
    "avg_bits_err_improve": 13.073166901333458,
    "time": 46994.4833984375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.280362091942722,
    "avg_bits_err_output": 0.21,
    "avg_bits_err_improve": 14.070362091942721,
    "time": 39104.0966796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.65511148338157,
    "avg_bits_err_output": 0.5126648348380313,
    "avg_bits_err_improve": 12.142446648543539,
    "time": 24849.49951171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (- (* (/ 1.0 F) (- (* (tan (* PI l)) (/ 1.0 F))))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.493597986284563,
    "avg_bits_err_output": 12.672096277837769,
    "avg_bits_err_improve": 3.821501708446794,
    "time": 38683.51171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2138327222622215,
    "avg_bits_err_output": 0.21093872187554083,
    "avg_bits_err_improve": 0.0028940003866806674,
    "time": 38059.45703125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+289) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.859468280720668,
    "avg_bits_err_output": 12.063373881820144,
    "avg_bits_err_improve": 1.7960943989005234,
    "time": 62355.447998046875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.53501356036294,
    "avg_bits_err_output": 1.952137660782723,
    "avg_bits_err_improve": 59.582875899580216,
    "time": 72917.45971679688,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= l -6.5e+175) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (if (<= l 2.15e+198) (/ (* (/ t (sqrt 2.0)) 2.0) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l))))))))",
    "output_parens": 50,
    "avg_bits_err_input": 42.87654474662172,
    "avg_bits_err_output": 35.49630100024923,
    "avg_bits_err_improve": 7.380243746372486,
    "time": 38230.238037109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (fma (sin kx) (sin kx) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.8751220386912992,
    "avg_bits_err_output": 3.8749333168157576,
    "avg_bits_err_improve": 0.000188721875541642,
    "time": 38562.050537109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (exp (* (log1p (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))) -0.5)))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0164762837965524,
    "avg_bits_err_output": 0.0065,
    "avg_bits_err_improve": 1.0099762837965525,
    "time": 14173.449951171875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.501658317288966,
    "avg_bits_err_output": 10.501658317288966,
    "avg_bits_err_improve": 0,
    "time": 10759.7177734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -7.2e-302) (* (sqrt (- (+ n n))) (sqrt (* U (fma 2.0 (/ (* l l) Om) (fma n (* (- U U*) (pow (/ l Om) 2.0)) (- t)))))) (* (sqrt (+ n n)) (sqrt (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))))))",
    "output_parens": 32,
    "avg_bits_err_input": 34.563245528192134,
    "avg_bits_err_output": 28.575421932634935,
    "avg_bits_err_improve": 5.987823595557199,
    "time": 40852.693115234375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.57916968591727,
    "avg_bits_err_output": 38.34073265631033,
    "avg_bits_err_improve": 9.238437029606942,
    "time": 60926.687744140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 4e+56) (/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k))) (/ 2.0 (* (- (+ 2.0 (pow (/ k t) 2.0))) (fma (sin k) (tan k) (- (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 33.21556720405132,
    "avg_bits_err_output": 31.265746483742006,
    "avg_bits_err_improve": 1.9498207203093116,
    "time": 41267.500732421875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (- (fma a1 a1 (* a2 a2))) (log1p (expm1 (- (/ (cos th) (sqrt 2.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5316951156468169,
    "avg_bits_err_output": 0.5082071613475297,
    "avg_bits_err_improve": 0.023487954299287184,
    "time": 36516.9619140625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* PI n) (/ (- 1.0 k) 2.0)) (* (pow k -0.5) (pow 2.0 (/ (- 1.0 k) 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5182383812897454,
    "avg_bits_err_output": 0.5509823386191358,
    "avg_bits_err_improve": -0.032743957329390394,
    "time": 67094.0185546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (+ (fma (- (exp (- l))) (* J (cos (/ K 2.0))) (* (exp (- l)) (* J (cos (/ K 2.0))))) (* J (* (- (exp l) (exp (- l))) (cos (/ K 2.0))))) (* (- (cos (/ K 2.0))) (fma (- (exp l)) J (* (exp l) J)))) U)",
    "output_parens": 33,
    "avg_bits_err_input": 16.86010227587373,
    "avg_bits_err_output": 16.86890246976592,
    "avg_bits_err_improve": -0.008800193892191999,
    "time": 37822.38671875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 2.0) (* (/ (+ (cos (- (/ (* K (+ n m)) 2.0) M)) (cos (- (- (/ (* K (+ n m)) 2.0) M) (* 2.0 PI)))) 2.0) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ n m)) K))) K) 1.0)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 63,
    "avg_bits_err_input": 15.470931656540774,
    "avg_bits_err_output": 9.894787413127615,
    "avg_bits_err_improve": 5.576144243413159,
    "time": 36248.933349609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.14964624062518,
    "avg_bits_err_output": 18.14964624062518,
    "avg_bits_err_improve": 0,
    "time": 44174.169921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)) 1e-6) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ h l) 2.0)) (/ (pow (/ (* M D) (+ d d)) 2.0) (/ h l))))))))",
    "output_parens": 34,
    "avg_bits_err_input": 13.928901350771833,
    "avg_bits_err_output": 8.70886751595353,
    "avg_bits_err_improve": 5.220033834818302,
    "time": 52213.981689453125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.465906873322314,
    "avg_bits_err_output": 19.465906873322314,
    "avg_bits_err_improve": 0,
    "time": 31097.21435546875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= M -4.5e-180) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))) (if (<= M 1.65e-119) (* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (* (- (/ (* d (* d c0)) (* D (* D (* w h)))) M) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) M))))) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h))))))))",
    "output_parens": 82,
    "avg_bits_err_input": 59.429657685104644,
    "avg_bits_err_output": 56.06540746469329,
    "avg_bits_err_improve": 3.364250220411357,
    "time": 42365.29736328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (fma (expm1 (log1p (sqrt (/ d h)))) (* (- 1.0 (exp (+ (* 2.0 (log (/ (* M D) (+ d d)))) (log (* (/ h l) 0.5))))) (sqrt (/ d l))) 0.0) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e-36) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))) (sqrt (/ d l))) 0.0)))",
    "output_parens": 84,
    "avg_bits_err_input": 26.602134880330688,
    "avg_bits_err_output": 24.712367078827892,
    "avg_bits_err_improve": 1.8897678015027957,
    "time": 43605.571044921875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.733236059195152,
    "avg_bits_err_output": 15.733236059195152,
    "avg_bits_err_improve": 0,
    "time": 11417.5986328125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9845731203125901,
    "avg_bits_err_output": 0.013709962500721158,
    "avg_bits_err_improve": 0.9708631578118689,
    "time": 20529.734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* t (* (* (sqrt (- 2.0 (* 6.0 (* v v)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4586993025406222,
    "avg_bits_err_output": 0.3957226103496063,
    "avg_bits_err_improve": 0.06297669219101587,
    "time": 28322.9853515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012146240625180289,
    "avg_bits_err_output": 0.012198120312590145,
    "avg_bits_err_improve": -5.1879687409855935e-05,
    "time": 8647.569091796875,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- (+ 1.0 (* 5.0 (* v v))) 1.0)) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5546123587068369,
    "avg_bits_err_output": 0.570264785915101,
    "avg_bits_err_improve": -0.015652427208264097,
    "time": 12502.725830078125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8381491208740295,
    "avg_bits_err_output": 1.8205241208740297,
    "avg_bits_err_improve": 0.01762499999999978,
    "time": 26389.474853515625,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018230344508855918,
    "avg_bits_err_output": 0.018230344508855918,
    "avg_bits_err_improve": 0,
    "time": 7812.738037109375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (fma b (* b (fma a a (* b b))) (fma b (* a (* a b)) (pow a 4.0))) (* 4.0 (* b b))) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.1817998125036057,
    "avg_bits_err_output": 0.06454248125036056,
    "avg_bits_err_improve": 0.11725733125324513,
    "time": 19437.071533203125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (fma a (* a (* b b)) (fma a (* a (fma a a (* b b))) (pow b 4.0))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.18492463672813633,
    "avg_bits_err_output": 0.07928290703784194,
    "avg_bits_err_improve": 0.1056417296902944,
    "time": 36262.83642578125,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (fma b (* b (* a a)) (pow b 4.0)) (* a (* (fma b b (* a a)) a))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18631897236993444,
    "avg_bits_err_output": 0.08067464785961918,
    "avg_bits_err_improve": 0.10564432451031526,
    "time": 29140.292724609375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.374506953137011,
    "avg_bits_err_output": 13.374506953137011,
    "avg_bits_err_improve": 0,
    "time": 18538.19677734375,
    "seed": 1,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (* (/ 1.0 (/ (expm1 (+ x x)) (expm1 x))) (pow (/ (expm1 (+ x x)) (expm1 x)) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 40.79512143001579,
    "avg_bits_err_output": 0.04925,
    "avg_bits_err_improve": 40.74587143001579,
    "time": 8428.544921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.17525936815557,
    "avg_bits_err_output": 29.567612347013693,
    "avg_bits_err_improve": 1.6076470211418759,
    "time": 33185.21923828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.22785241872434,
    "avg_bits_err_output": 34.22785241872434,
    "avg_bits_err_improve": 0,
    "time": 21993.332275390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.23761159853698,
    "avg_bits_err_output": 34.23761159853698,
    "avg_bits_err_improve": 0,
    "time": 34111.594482421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.549309820278808,
    "avg_bits_err_output": 31.549309820278808,
    "avg_bits_err_improve": 0,
    "time": 32244.570068359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (exp 1.0) (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.9093314416616,
    "avg_bits_err_output": 32.61479851200299,
    "avg_bits_err_improve": 0.2945329296586081,
    "time": 64535.5068359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.543885853594208,
    "avg_bits_err_output": 0.017625,
    "avg_bits_err_improve": 29.52626085359421,
    "time": 13882.13427734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.112249711393671,
    "avg_bits_err_output": 14.112249711393671,
    "avg_bits_err_improve": 0,
    "time": 70596.80297851562,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.98961918396757,
    "avg_bits_err_output": 6.558373513549458,
    "avg_bits_err_improve": 33.431245670418114,
    "time": 27786.564453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.10594522353427,
    "avg_bits_err_output": 29.80219313237363,
    "avg_bits_err_improve": 0.3037520911606393,
    "time": 34157.941650390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.031646316473925,
    "avg_bits_err_output": 30.03390502029305,
    "avg_bits_err_improve": -0.0022587038191268505,
    "time": 34374.063232421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.14834767390882,
    "avg_bits_err_output": 34.16063724321136,
    "avg_bits_err_improve": -0.012289569302538439,
    "time": 22589.17822265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* a (* c -4.0))))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.83041998751424,
    "avg_bits_err_output": 33.869505250503664,
    "avg_bits_err_improve": -0.03908526298942405,
    "time": 21250.59521484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.348962375838774,
    "avg_bits_err_output": 0.022115601562950726,
    "avg_bits_err_improve": 61.32684677427582,
    "time": 22924.9580078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.0047477116072,
    "avg_bits_err_output": 0.08122857803964431,
    "avg_bits_err_improve": 62.92351913356756,
    "time": 47422.487060546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.64668196380714,
    "avg_bits_err_output": 58.65135448039308,
    "avg_bits_err_improve": -0.004672516585941366,
    "time": 120813.03442382812,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -9.8e-155) (- (- (/ -1.0 (/ 1.0 x))) (- (- (- (/ 1.0 (tan x)) (* (/ -1.0 (/ 1.0 x)) (pow (/ 1.0 x) 2.0))) (+ -1.0 (+ (/ -1.0 (/ 1.0 x)) (/ 1.0 x)))) (+ 1.0 (/ 1.0 x)))) (if (<= x 7.5e-155) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (- (/ -1.0 (/ 1.0 x))) (- (- (- (/ 1.0 (tan x)) (* (/ -1.0 (/ 1.0 x)) (pow (/ 1.0 x) 2.0))) (+ -1.0 (+ (/ -1.0 (/ 1.0 x)) (/ 1.0 x)))) (+ 1.0 (/ 1.0 x))))))",
    "output_parens": 50,
    "avg_bits_err_input": 59.82052690918915,
    "avg_bits_err_output": 56.17181032880458,
    "avg_bits_err_improve": 3.6487165803845656,
    "time": 66700.51416015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.14925138088946,
    "avg_bits_err_output": 41.399247525897906,
    "avg_bits_err_improve": 18.750003854991554,
    "time": 47958.64599609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.10146429990704,
    "avg_bits_err_output": 0.12619589932296754,
    "avg_bits_err_improve": 40.97526840058408,
    "time": 13085.160400390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.63475144687459,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 58.63362644687459,
    "time": 3245.73193359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.611401246432838,
    "avg_bits_err_output": 0.019765210880563468,
    "avg_bits_err_improve": 29.591636035552273,
    "time": 4584.754150390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(- (pow (expm1 (- x)) 2.0) (- (- (expm1 (- x))) (+ (expm1 x) (- (pow (expm1 (- x)) 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 29.516741666768688,
    "avg_bits_err_output": 1.040893991038561,
    "avg_bits_err_improve": 28.475847675730126,
    "time": 36927.4482421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.27282688135644,
    "avg_bits_err_output": 9.27282688135644,
    "avg_bits_err_improve": 0,
    "time": 43034.116455078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (- (tan (+ x eps)) (tan x)) (fma (- (- (* (tan x) (- (+ -1.0 (/ 1.0 (tan x))) -2.0)) (tan x))) (tan x) (tan x)))",
    "output_parens": 17,
    "avg_bits_err_input": 36.824550139501774,
    "avg_bits_err_output": 36.88522778750099,
    "avg_bits_err_improve": -0.06067764799921349,
    "time": 66134.83715820312,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (pow (+ 1.0 x) -0.5) (- (* (pow (+ 1.0 x) -0.5) x) (sqrt x)))",
    "output_parens": 8,
    "avg_bits_err_input": 30.3118285325049,
    "avg_bits_err_output": 27.072120238840366,
    "avg_bits_err_improve": 3.2397082936645347,
    "time": 25878.584716796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (fma (sin x) (cos eps) (- (sin x))))",
    "output_parens": 8,
    "avg_bits_err_input": 37.076640996947305,
    "avg_bits_err_output": 0.34366172718532495,
    "avg_bits_err_improve": 36.73297926976198,
    "time": 24852.279541015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.160534528008185,
    "avg_bits_err_output": 20.016519105069815,
    "avg_bits_err_improve": 0.1440154229383701,
    "time": 22080.589111328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (/ 1.0 (atan (+ N 1.0))) (pow (atan (+ N 1.0)) 2.0)) (atan N))",
    "output_parens": 9,
    "avg_bits_err_input": 14.638241763027859,
    "avg_bits_err_output": 14.642438150506504,
    "avg_bits_err_improve": -0.004196387478645036,
    "time": 16687.965087890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.50977604596259,
    "avg_bits_err_output": 1.410675545594294,
    "avg_bits_err_improve": 28.099100500368294,
    "time": 28102.736328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (+ (/ (- m (* m m)) v) -1.0) (+ (- 2.0 m) -1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07411804531403245,
    "avg_bits_err_output": 0.07936658741171713,
    "avg_bits_err_improve": -0.005248542097684689,
    "time": 28017.075927734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.090487036499425,
    "avg_bits_err_output": 0.30696973750504797,
    "avg_bits_err_improve": 15.783517298994377,
    "time": 25406.991455078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (fma (sin (* PI (/ angle 180.0))) (cos (fma (- (* (/ angle 180.0) (/ PI PI))) PI (fma (* PI (/ (/ angle 180.0) PI)) PI 0.0))) (* (- (cos (* PI (/ angle 180.0)))) (sin (fma (- (* (/ angle 180.0) (/ PI PI))) PI (* PI (/ angle 180.0))))))) 2.0))",
    "output_parens": 35,
    "avg_bits_err_input": 20.331947925664565,
    "avg_bits_err_output": 20.353983124452682,
    "avg_bits_err_improve": -0.022035198788117327,
    "time": 64396.670166015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) (fma (- (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0) (* (sin (* PI (/ angle 180.0))) (* (pow b 2.0) -2.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 31.72152342700583,
    "avg_bits_err_output": 31.733810235936936,
    "avg_bits_err_improve": -0.012286808931104787,
    "time": 55065.951171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (log1p (expm1 (sin (* (/ angle 180.0) PI))))) 2.0) (pow (* b (cos (fma (/ angle 180.0) (- (* (/ angle 180.0) (+ (/ PI (/ angle 180.0)) 1.0)) (/ angle 180.0)) 0.0))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.567626989963102,
    "avg_bits_err_output": 20.68643982579942,
    "avg_bits_err_improve": -0.11881283583631941,
    "time": 83986.23608398438,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18167932343849155,
    "avg_bits_err_output": 0.18143500030065657,
    "avg_bits_err_improve": 0.00024432313783498416,
    "time": 21528.7763671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3253321527932952,
    "avg_bits_err_output": 0.3141717054206411,
    "avg_bits_err_improve": 0.011160447372654092,
    "time": 44878.902587890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13404248125036058,
    "avg_bits_err_output": 0.13404248125036058,
    "avg_bits_err_improve": 0,
    "time": 34587.34619140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (- (exp (log1p (sin phi2))) 1.0)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 15,
    "avg_bits_err_input": 16.773023324629563,
    "avg_bits_err_output": 16.784306014252355,
    "avg_bits_err_improve": -0.011282689622792219,
    "time": 44705.459716796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.41577278449764,
    "avg_bits_err_output": 45.95392826137018,
    "avg_bits_err_improve": 6.461844523127461,
    "time": 28948.692626953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma b (* b (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))) (- b)) (* a (* c (* -4.0 (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.773278837012505,
    "avg_bits_err_output": 27.959767492380806,
    "avg_bits_err_improve": 0.8135113446316993,
    "time": 29366.034423828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.91716270595241,
    "avg_bits_err_output": 39.64492346791643,
    "avg_bits_err_improve": 4.272239238035979,
    "time": 30588.756103515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (* a 2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 34.1542325955339,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": 0,
    "time": 33358.029541015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (/ 1.0 (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.9275932301321357,
    "avg_bits_err_output": 0.9406144429063709,
    "avg_bits_err_improve": -0.01302121277423518,
    "time": 45474.26611328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (exp (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 29.428468357254232,
    "avg_bits_err_output": 29.429544944078934,
    "avg_bits_err_improve": -0.0010765868247020194,
    "time": 44852.732421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.248533931562456,
    "avg_bits_err_output": 1.1933656015629508,
    "avg_bits_err_improve": 57.0551683299995,
    "time": 14720.85986328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18737650829796,
    "avg_bits_err_output": 0.007125,
    "avg_bits_err_improve": 58.18025150829796,
    "time": 6680.667724609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(+ (+ (/ 2.0 (+ (exp x) (exp (- x)))) 2.0) -2.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.009026789890100096,
    "avg_bits_err_output": 0.16548222301892276,
    "avg_bits_err_improve": -0.15645543312882268,
    "time": 3443.583251953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.761290241011864,
    "avg_bits_err_output": 32.761290241011864,
    "avg_bits_err_improve": 0,
    "time": 5366.443115234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.62976193228778,
    "avg_bits_err_output": 58.635631445172905,
    "avg_bits_err_improve": -0.005869512885126937,
    "time": 60997.7353515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.05073836132445107,
    "avg_bits_err_output": 0.05181148163704121,
    "avg_bits_err_improve": -0.0010731203125901381,
    "time": 3923.48193359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (fma (cos t) (* (cos t) (/ eh (cos t))) 0.0) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12277124062518029,
    "avg_bits_err_output": 0.17113928593921274,
    "avg_bits_err_improve": -0.04836804531403245,
    "time": 50721.397216796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12832312031259013,
    "avg_bits_err_output": 0.12832312031259013,
    "avg_bits_err_improve": 0,
    "time": 30261.99609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda1) (- (cos (/ (+ phi1 phi2) 2.0))) (* (- (cos (/ (+ phi1 phi2) 2.0))) lambda1))) (- phi1 phi2)))",
    "output_parens": 19,
    "avg_bits_err_input": 39.425490359356836,
    "avg_bits_err_output": 3.7054942909840873,
    "avg_bits_err_improve": 35.71999606837275,
    "time": 49736.208984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.467379223809136,
    "avg_bits_err_output": 14.467379223809136,
    "avg_bits_err_improve": 0,
    "time": 6103.40576171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (* (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (+ (- (sin phi1)) (sin phi1))) (fma (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (- (cos delta))))))",
    "output_parens": 37,
    "avg_bits_err_input": 0.15031926026065223,
    "avg_bits_err_output": 0.14698334443421399,
    "avg_bits_err_improve": 0.003335915826438246,
    "time": 46387.875732421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.432124763581655,
    "avg_bits_err_output": 45.97303085634127,
    "avg_bits_err_improve": 6.459093907240387,
    "time": 33331.0166015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (/ (fma a (* c -3.0) (* b b)) 1.0)) (sqrt (* (fma c (* a -3.0) (* b b)) (/ 1.0 (pow (sqrt (fma a (* c -3.0) (* b b))) 2.0)))) (- b)) (* 3.0 a))",
    "output_parens": 20,
    "avg_bits_err_input": 28.98665986906457,
    "avg_bits_err_output": 28.84584260585677,
    "avg_bits_err_improve": 0.14081726320780064,
    "time": 39147.584228515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (+ -1.0 (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 43.988148458846915,
    "avg_bits_err_output": 39.64435979441336,
    "avg_bits_err_improve": 4.3437886644335535,
    "time": 29965.616943359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.200232836986736,
    "avg_bits_err_output": 34.200232836986736,
    "avg_bits_err_improve": 0,
    "time": 21829.911376953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (log (exp (cos (- lambda1 lambda2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.309146663637202,
    "avg_bits_err_output": 13.319010284931155,
    "avg_bits_err_improve": -0.009863621293952463,
    "time": 68824.85791015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (fma (- (pow (/ (+ x 1.0) (+ x -1.0)) 2.0)) (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (* (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (- (+ 1.0 (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0)) 1.0))) (fma (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (- (pow (/ (+ x 1.0) (+ x -1.0)) 2.0)) (/ x (+ x 1.0))))",
    "output_parens": 34,
    "avg_bits_err_input": 29.22226749814124,
    "avg_bits_err_output": 29.247127423085864,
    "avg_bits_err_improve": -0.024859924944625078,
    "time": 62953.36181640625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.013125,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 0,
    "time": 4595.44580078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (fma (- (/ (/ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))) (/ 1.0 (+ 1.0 x)))) (- (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ 1.0 x)))) (fma (/ 1.0 (/ 1.0 (+ x -1.0))) (- (pow (/ 1.0 (+ x -1.0)) 2.0)) (/ 1.0 (+ 1.0 x))))",
    "output_parens": 28,
    "avg_bits_err_input": 14.034993816559629,
    "avg_bits_err_output": 14.055393772746099,
    "avg_bits_err_improve": -0.020399956186469836,
    "time": 56517.759521484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.25e-303) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* 2.0 (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (pow B 2.0) (* A (* C 4.0)))))) (sqrt F))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 48,
    "avg_bits_err_input": 51.961170785148546,
    "avg_bits_err_output": 47.41113361648254,
    "avg_bits_err_improve": 4.550037168666009,
    "time": 47297.357177734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (- (- 1.0 (* (/ 1.0 B) (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- A C)))) 1.0)) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 29.392346234756975,
    "avg_bits_err_output": 29.396092879194356,
    "avg_bits_err_improve": -0.0037466444373812635,
    "time": 51839.3251953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -4.9e-173) (/ (- (* (sqrt (- F)) (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (* 2.0 F)) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (- (pow B 2.0) (* A (* C 4.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.00291471876566,
    "avg_bits_err_output": 48.023218571425744,
    "avg_bits_err_improve": 3.979696147339915,
    "time": 48127.072021484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.184989911331883,
    "avg_bits_err_output": 15.184989911331883,
    "avg_bits_err_improve": 0,
    "time": 49426.9365234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g -1e-242) (+ (* (* (cbrt (/ 1.0 (+ a a))) (/ (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)) (cbrt (/ 1.0 (+ a a))))) (cbrt (/ 1.0 (+ a a)))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 2.1e-166) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))) (if (<= g 1.32e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a)))))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) (- g)))))))))",
    "output_parens": 127,
    "avg_bits_err_input": 36.10907955477037,
    "avg_bits_err_output": 19.037776269976753,
    "avg_bits_err_improve": 17.071303284793615,
    "time": 85010.08422851562,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9885077078205238,
    "avg_bits_err_output": 0.029698120312590146,
    "avg_bits_err_improve": 0.9588095875079337,
    "time": 19058.177734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6606981203125901,
    "avg_bits_err_output": 0.6606981203125901,
    "avg_bits_err_improve": 0,
    "time": 10966.6875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.550700597999379,
    "avg_bits_err_output": 11.550700597999379,
    "avg_bits_err_improve": 0,
    "time": 15185.4140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5152431164648773,
    "avg_bits_err_output": 0.43469812031259014,
    "avg_bits_err_improve": 0.08054499615228716,
    "time": 8712.206787109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (- (+ (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) -1.0) -1.0) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.0) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (- (+ (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) -1.0) -1.0)))",
    "output_parens": 44,
    "avg_bits_err_input": 53.11708979415488,
    "avg_bits_err_output": 10.977171230301499,
    "avg_bits_err_improve": 42.13991856385338,
    "time": 52511.5810546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.6611866482956055,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.6611866482956055,
    "time": 2154.98876953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.0155,
    "avg_bits_err_output": 0.014988361324451065,
    "avg_bits_err_improve": 0.0005116386755489345,
    "time": 9648.49365234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1239.2822265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 1e-111) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* r (* w (- 0.375 (* v 0.25)))))) (- 1.0 v))) (if (<= (* w w) 2e+287) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* (* r r) (* w w))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (* r w) (* r (* w (- 0.375 (* v 0.25))))) (- 1.0 v)))))",
    "output_parens": 42,
    "avg_bits_err_input": 12.560425494193913,
    "avg_bits_err_output": 6.799929848718727,
    "avg_bits_err_improve": 5.760495645475186,
    "time": 33698.360107421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (fma 3.0 (* x1 x1) (fma 2.0 x2 (- x1))) (fma x1 x1 1.0)) -3.0) (+ (- (* x1 (* 2.0 (/ (fma 2.0 x2 (fma 3.0 (* x1 x1) (- x1))) (fma x1 x1 1.0)))) x1) x1)) (* (* x1 x1) -6.0)) (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0)))))))))",
    "output_parens": 54,
    "avg_bits_err_input": 0.5183431564370132,
    "avg_bits_err_output": 0.2770260280834569,
    "avg_bits_err_improve": 0.24131712835355634,
    "time": 85155.58081054688,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.08953280509871,
    "avg_bits_err_output": 18.08953280509871,
    "avg_bits_err_improve": 0,
    "time": 29978.77490234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x x) (* 0.12900613773279798 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2636062031259014,
    "avg_bits_err_output": 0.18745056406367183,
    "avg_bits_err_improve": 0.07615563906222955,
    "time": 29386.50439453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026981203125901448,
    "avg_bits_err_output": 0.0026981203125901448,
    "avg_bits_err_improve": 0,
    "time": 3847.974609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(fma (/ PI 2.0) (* (/ 1.0 (* (+ b a) (* (- b a) (/ (+ b a) (+ b a))))) (- (/ 1.0 a) (/ 1.0 b))) (fma (- (/ 1.0 b)) (* (/ PI 2.0) (/ 1.0 (* (+ b a) (* (- b a) (/ (+ b a) (+ b a)))))) (* (/ 1.0 (* (+ b a) (* (- b a) (/ (+ b a) (+ b a))))) (* (/ PI 2.0) (/ 1.0 b)))))",
    "output_parens": 39,
    "avg_bits_err_input": 14.646059466340832,
    "avg_bits_err_output": 9.701067174161341,
    "avg_bits_err_improve": 4.94499229217949,
    "time": 40548.036376953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (- (fma eps x x)))) (exp (- (* eps x) x)))) (- (pow (exp 1.0) (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.306274922815316,
    "avg_bits_err_output": 1.0044095701254208,
    "avg_bits_err_improve": 28.301865352689894,
    "time": 25510.60693359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.018875,
    "avg_bits_err_output": 0.018875,
    "avg_bits_err_improve": 0,
    "time": 9384.03759765625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.023,
    "avg_bits_err_output": 0.023,
    "avg_bits_err_improve": 0,
    "time": 14054.76318359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (* (- -1.0 (/ (+ t t) (+ t 1.0))) (+ (/ (+ t t) (+ t 1.0)) -1.0)))) (+ 2.0 (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) (/ (+ t t) (+ t 1.0)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.04675,
    "avg_bits_err_output": 0.05015808281331129,
    "avg_bits_err_improve": -0.003408082813311293,
    "time": 41795.964599609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2757.057861328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3096.211669921875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4167.748046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8139700812676445,
    "avg_bits_err_output": 0.24525,
    "avg_bits_err_improve": 7.568720081267644,
    "time": 45288.949951171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.418636990969528,
    "avg_bits_err_output": 7.418636990969528,
    "avg_bits_err_improve": 0,
    "time": 36942.9873046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 15.505556957623671,
    "avg_bits_err_output": 0.015073120312590145,
    "avg_bits_err_improve": 15.490483837311082,
    "time": 11923.734375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (exp (* x x)) 10.0) (+ (/ (cos x) (cos x)) (- (cos x) (/ (cos x) (cos x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 3.5236648542646294,
    "avg_bits_err_output": 3.0324359796204945,
    "avg_bits_err_improve": 0.4912288746441349,
    "time": 37344.73974609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.070886192041119,
    "avg_bits_err_output": 15.070886192041119,
    "avg_bits_err_improve": 0,
    "time": 34637.7578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.51272108009075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.51272108009075,
    "time": 4841.46142578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.840564387060496,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.840064387060494,
    "time": 5396.103271484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.296375,
    "avg_bits_err_improve": 63.703625,
    "time": 4567.080810546875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84324597984583,
    "avg_bits_err_output": 0.39858533906799903,
    "avg_bits_err_improve": 61.44466064077783,
    "time": 18575.141845703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* a (* c -4.0))))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.83041998751424,
    "avg_bits_err_output": 33.869505250503664,
    "avg_bits_err_improve": -0.03908526298942405,
    "time": 21097.24609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -4.0)) (* b b))) b) (* a 2.0))",
    "output_parens": 8,
    "avg_bits_err_input": 34.1542325955339,
    "avg_bits_err_output": 34.1542325955339,
    "avg_bits_err_improve": 0,
    "time": 36819.09716796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2602.5205078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.153440145217154,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 40.14206514521715,
    "time": 5967.4453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma y y (* x x)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.24408881976937,
    "avg_bits_err_output": 20.24289069945678,
    "avg_bits_err_improve": 0.0011981203125905893,
    "time": 5333.298828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6807592107043496,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6807592107043496,
    "time": 5131.61962890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(* a (+ (+ b c) d))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03975,
    "avg_bits_err_output": 0.03975,
    "avg_bits_err_improve": 0,
    "time": 5140.429443359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019896240625180292,
    "avg_bits_err_output": 0.010625,
    "avg_bits_err_improve": 0.009271240625180291,
    "time": 4102.97607421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.013125,
    "time": 5675.311767578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 2030.091064453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ a c) (+ d b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40911597813022865,
    "avg_bits_err_output": 0.22975,
    "avg_bits_err_improve": 0.17936597813022864,
    "time": 9510.132080078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- (* (exp -1.0) (+ 1.0 (* (- 1.0 (cos x)) (exp 1.0)))) (exp -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 29.737439948755863,
    "avg_bits_err_output": 29.743612107650048,
    "avg_bits_err_improve": -0.006172158894184321,
    "time": 31073.783203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (- (* x x) eps) (* (- (* x x) eps) (/ 1.0 (* (- (* x x) eps) (* (/ (* (- (* x x) eps) (/ 1.0 (- (* x x) eps))) (- (* x x) eps)) (* (- (* x x) eps) (* (- (* x x) eps) (/ 1.0 (- (* x x) eps)))))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 24.378553841773787,
    "avg_bits_err_output": 24.472880356024213,
    "avg_bits_err_improve": -0.09432651425042593,
    "time": 24303.99755859375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (sin x) (* (fma (/ -1.0 (sin x)) (sin x) 1.0) (- (* (/ 1.0 (sin x)) (+ (sin x) 1.0)) (/ 1.0 (sin x)))))) (tan x))",
    "output_parens": 20,
    "avg_bits_err_input": 30.13032666123096,
    "avg_bits_err_output": 30.087338412023442,
    "avg_bits_err_improve": 0.04298824920751798,
    "time": 47434.092041015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590145,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.006073120312590144,
    "time": 3681.7890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-5) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.562523908102385,
    "avg_bits_err_output": 10.680264545091104,
    "avg_bits_err_improve": 36.88225936301128,
    "time": 58230.95849609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.13673888214304,
    "avg_bits_err_output": 26.135948641131176,
    "avg_bits_err_improve": 0.000790241011863202,
    "time": 25536.11572265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.721552241386195,
    "avg_bits_err_output": 25.721552241386195,
    "avg_bits_err_improve": 0,
    "time": 19231.478515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033875,
    "avg_bits_err_output": 0.021859921543825708,
    "avg_bits_err_improve": 0.012015078456174295,
    "time": 4636.236572265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (+ (- (* (exp (log1p (- (fma ux maxCos 1.0) ux))) ux) (* ux 1.0)) (- (+ (* ux (* (- (fma ux maxCos 1.0) ux) maxCos)) (fma ux maxCos (- ux)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 13.52321638343316,
    "avg_bits_err_output": 0.518067199911613,
    "avg_bits_err_improve": 13.005149183521548,
    "time": 37149.3583984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ (- (* ux (+ (- (* ux maxCos) ux) 2.0)) ux) (- (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.563306556753554,
    "avg_bits_err_output": 0.33458247169505273,
    "avg_bits_err_improve": 13.228724085058502,
    "time": 42888.346923828125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* (/ 2.0 uy) (* PI (* uy uy)))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* uy (* PI 2.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.3314456029260001,
    "avg_bits_err_output": 0.33664816205831427,
    "avg_bits_err_improve": -0.005202559132314155,
    "time": 101066.6826171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.19989265691970173,
    "avg_bits_err_output": 0.2002560182441528,
    "avg_bits_err_improve": -0.00036336132445105584,
    "time": 36274.481689453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5388518745975742,
    "avg_bits_err_output": 0.4882500754176976,
    "avg_bits_err_improve": 0.050601799179876616,
    "time": 35521.141845703125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (+ (fma u2 -6.28318530718 1.0) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3193740149427155,
    "avg_bits_err_output": 0.3247857598759335,
    "avg_bits_err_improve": -0.005411744933217999,
    "time": 48071.703369140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33106943524805477,
    "avg_bits_err_output": 0.331340266481731,
    "avg_bits_err_improve": -0.0002708312336762164,
    "time": 41447.759033203125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0566284130638754,
    "avg_bits_err_output": 0.04561798219844883,
    "avg_bits_err_improve": 0.011010430865426572,
    "time": 22176.061767578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (- s (* s (- -1.0 (exp (/ (- (fabs x)) s))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.16613285452224863,
    "avg_bits_err_output": 0.1524466407558229,
    "avg_bits_err_improve": 0.013686213766425731,
    "time": 33883.38623046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6683661899137501,
    "avg_bits_err_output": 0.6683661899137501,
    "avg_bits_err_improve": 0,
    "time": 23649.876708984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1596515861568558,
    "avg_bits_err_output": 0.15646355769904188,
    "avg_bits_err_improve": 0.0031880284578139073,
    "time": 25948.214111328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5288712353957905,
    "avg_bits_err_output": 2.5288712353957905,
    "avg_bits_err_improve": 0,
    "time": 17891.409912109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (- (+ 1.0 (/ (* sinTheta_i sinTheta_O) v)) 1.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46140259357247504,
    "avg_bits_err_output": 0.4619734736465656,
    "avg_bits_err_improve": -0.0005708800740905629,
    "time": 50012.64599609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.13207255135387566,
    "avg_bits_err_output": 0.13207255135387566,
    "avg_bits_err_improve": 0,
    "time": 12516.7626953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* cosTheta (+ (* alpha (* cosTheta alpha)) (- cosTheta))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4592061850091888,
    "avg_bits_err_output": 0.4357241445673561,
    "avg_bits_err_improve": 0.02348204044183272,
    "time": 29025.979736328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (- (- (log1p (- (/ (+ u -0.25) 0.75)))) (+ (/ s s) -1.0)) s))",
    "output_parens": 10,
    "avg_bits_err_input": 1.3308150195375212,
    "avg_bits_err_output": 0.561460982776336,
    "avg_bits_err_improve": 0.7693540367611852,
    "time": 45769.4775390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (exp (log (- (log1p (* u -4.0))))))",
    "output_parens": 6,
    "avg_bits_err_input": 12.472208825576596,
    "avg_bits_err_output": 1.3743590654616387,
    "avg_bits_err_improve": 11.097849760114958,
    "time": 93782.138671875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (- (* r (* s (exp (log1p (* PI 6.0))))) (* s r))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.13923235097205922,
    "avg_bits_err_output": 0.14232853939358858,
    "avg_bits_err_improve": -0.0030961884215293667,
    "time": 52800.9541015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8455285600998349,
    "avg_bits_err_output": 0.8346323311083123,
    "avg_bits_err_improve": 0.01089622899152265,
    "time": 46696.32080078125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (fma (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* cosTheta (- cosTheta))) (+ 1.0 c)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.7076747669225678,
    "avg_bits_err_output": 0.7064341653596169,
    "avg_bits_err_improve": 0.001240601562950916,
    "time": 38592.16162109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (* (pow (log1p (- u1)) 2.0) (log (+ 1.0 (expm1 (exp 0.0))))) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.505166915409903,
    "avg_bits_err_output": 0.4716969466743172,
    "avg_bits_err_improve": 13.033469968735586,
    "time": 31299.375732421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (log (pow (exp (* 2.0 PI)) u2))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.554990548217358,
    "avg_bits_err_output": 0.31660115997940225,
    "avg_bits_err_improve": 13.238389388237955,
    "time": 53647.259521484375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.06827126295669,
    "avg_bits_err_output": 0.21375,
    "avg_bits_err_improve": 13.854521262956691,
    "time": 36481.95751953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.607422848736979,
    "avg_bits_err_output": 0.5222548835855563,
    "avg_bits_err_improve": 12.085167965151422,
    "time": 18135.0693359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) -2e+218) (- (* PI l) (log (pow (exp (pow (/ 1.0 (* F F)) 3.0)) (/ (/ (tan (* PI l)) (/ 1.0 (* F F))) (/ 1.0 (* F F)))))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 2e+175) (- (* (pow PI 2.0) (/ l PI)) (* (/ 1.0 (* F F)) (tan (* PI l)))) (- (* PI l) (log (pow (exp (pow (/ 1.0 (* F F)) 3.0)) (/ (/ (tan (* PI l)) (/ 1.0 (* F F))) (/ 1.0 (* F F))))))))",
    "output_parens": 59,
    "avg_bits_err_input": 16.648886789168525,
    "avg_bits_err_output": 8.455853529171272,
    "avg_bits_err_improve": 8.193033259997254,
    "time": 49489.42626953125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (pow (tan B) -1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20313176194006882,
    "avg_bits_err_output": 0.20313176194006882,
    "avg_bits_err_improve": 0,
    "time": 32261.1611328125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+245) (+ (- (* x (/ 1.0 (tan B)))) (fma (pow (fma F F (fma 2.0 x 2.0)) -0.5) (/ F (sin B)) (fma (- (/ F (sin B))) (- (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (* (pow (fma F F (fma 2.0 x 2.0)) -0.5) (- (/ F (sin B))))))) (+ (- (* (* (/ 1.0 (tan B)) x) (* (* (/ 1.0 (tan B)) x) (/ 1.0 (* (/ 1.0 (tan B)) x))))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 63,
    "avg_bits_err_input": 13.674082945768122,
    "avg_bits_err_output": 12.342398912223343,
    "avg_bits_err_improve": 1.3316840335447786,
    "time": 92687.12133789062,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (fma (exp 2.0) (exp (fma (/ PI 4.0) f -2.0)) (- (exp (* (/ PI 4.0) (- f)))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.512769494777324,
    "avg_bits_err_output": 51.789013775679884,
    "avg_bits_err_improve": 9.72375571909744,
    "time": 96953.46459960938,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.05e-147) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 2.069e-83) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma 2.0 (* t t) (* l l)) (* l (fma l -1.0 l)))))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 51,
    "avg_bits_err_input": 42.729269903665504,
    "avg_bits_err_output": 35.88827231271969,
    "avg_bits_err_improve": 6.840997590945811,
    "time": 41642.78857421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.613972633566915,
    "avg_bits_err_output": 3.613972633566915,
    "avg_bits_err_improve": 0,
    "time": 39353.288818359375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0567992787880738,
    "avg_bits_err_output": 0.00675,
    "avg_bits_err_improve": 1.0500492787880737,
    "time": 10976.7744140625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -3.6e+161) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0))) (if (<= n -6.5e-118) (sqrt (* (- (* n (* U (* (- U* U) (pow (/ l Om) 2.0)))) (* U (- (* 2.0 (/ (* l l) Om)) t))) (* n 2.0))) (if (<= n 6.8e-295) (sqrt (* 2.0 (* U (- (* (pow (/ l Om) 2.0) (* n (* n (- U* U)))) (* n (- (* 2.0 (/ (* l l) Om)) t)))))) (if (<= n 1.15e-105) (* (sqrt n) (sqrt (* U (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0))))))))) (if (<= n 1.05e+171) (sqrt (* 2.0 (- (* n (* (- U* U) (* U (* n (pow (/ l Om) 2.0))))) (* U (* n (- (* 2.0 (/ (* l l) Om)) t)))))) (if (<= n 8.8e+195) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))) (* (sqrt n) (sqrt (* U (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0)))))))))))))))",
    "output_parens": 117,
    "avg_bits_err_input": 34.62495036196397,
    "avg_bits_err_output": 32.651807140683175,
    "avg_bits_err_improve": 1.9731432212807931,
    "time": 43685.057373046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 50000000000000.0) (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (pow (/ k t) 2.0) 0.0))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)) (sin k) (* (sin k) (- (tan k)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 47.150159029512665,
    "avg_bits_err_output": 37.43725618609992,
    "avg_bits_err_improve": 9.712902843412742,
    "time": 71072.76171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (sin k) (/ (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k))) (sin k)))",
    "output_parens": 16,
    "avg_bits_err_input": 32.954967263930065,
    "avg_bits_err_output": 32.945574614438115,
    "avg_bits_err_improve": 0.009392649491950067,
    "time": 42332.96240234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma a1 (* (/ (cos th) (sqrt 2.0)) a1) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5652188000230793,
    "avg_bits_err_output": 0.5239169203356692,
    "avg_bits_err_improve": 0.04130187968741017,
    "time": 35205.607421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* PI (* 2.0 n)) (/ (- 1.0 k) 2.0)) (- (+ (pow k -0.5) 1.0) 1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.506403650579543,
    "avg_bits_err_output": 0.4641812748584909,
    "avg_bits_err_improve": 0.04222237572105203,
    "time": 54353.672607421875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp l)) (- J) (+ (* J (- -1.0 (exp l))) J)) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 18,
    "avg_bits_err_input": 17.422381916765367,
    "avg_bits_err_output": 17.46392702067982,
    "avg_bits_err_improve": -0.04154510391445143,
    "time": 36412.41064453125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (* (+ n m) (- (* K (- (/ 1.0 K) -1.0)) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 15.138600875798987,
    "avg_bits_err_output": 1.333720464773387,
    "avg_bits_err_improve": 13.8048804110256,
    "time": 35700.847900390625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.39296936093777,
    "avg_bits_err_output": 18.39296936093777,
    "avg_bits_err_improve": 0,
    "time": 41196.589599609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) INFINITY) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 35,
    "avg_bits_err_input": 14.148568107581532,
    "avg_bits_err_output": 9.189405467198036,
    "avg_bits_err_improve": 4.9591626403834965,
    "time": 37411.513916015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.35037798114036,
    "avg_bits_err_output": 19.35037798114036,
    "avg_bits_err_improve": 0,
    "time": 28239.08837890625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) (- INFINITY)) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* (* D h) (* D w))) M)) (sqrt (+ (/ (* d (* c0 d)) (* (* D h) (* D w))) M)) (/ (* d (* c0 d)) (* (* D h) (* D w))))) (if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) 0.0) (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) (if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) INFINITY) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* (* D h) (* D w))) M)) (sqrt (+ (/ (* d (* c0 d)) (* (* D h) (* D w))) M)) (/ (* d (* c0 d)) (* (* D h) (* D w))))) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* c0 d)) (* (* D h) (* D w))) (sqrt (- (pow (/ (* d (* c0 d)) (* (* D h) (* D w))) 2.0) (* M M))))))))",
    "output_parens": 183,
    "avg_bits_err_input": 60.05213465042429,
    "avg_bits_err_output": 55.85486096454572,
    "avg_bits_err_improve": 4.197273685878571,
    "time": 41760.624267578125,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (sqrt (* (/ d l) (/ d h))) (* 0.5 (exp (+ (* 2.0 (log (/ (* M D) (+ d d)))) (log (* (exp (+ (log (sqrt (/ d l))) (log (sqrt (/ d h))))) (/ h l))))))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+258) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0)))",
    "output_parens": 87,
    "avg_bits_err_input": 26.719306999155272,
    "avg_bits_err_output": 24.275870516312036,
    "avg_bits_err_improve": 2.443436482843236,
    "time": 46424.897216796875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (exp -2.0) (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 15.169975748055608,
    "avg_bits_err_output": 14.70946375009472,
    "avg_bits_err_improve": 0.4605119979608876,
    "time": 44622.809326171875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (- 3.0 (* 3.0 (* v v))) (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9848962406251803,
    "avg_bits_err_output": 0.01152124062518029,
    "avg_bits_err_improve": 0.973375,
    "time": 12571.339599609375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* t (* (* (sqrt (- 2.0 (* 6.0 (* v v)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4319795188744793,
    "avg_bits_err_output": 0.366403578243529,
    "avg_bits_err_improve": 0.06557594063095029,
    "time": 36907.755615234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* 3.0 v)))) (- (/ (sqrt 2.0) 4.0) (* v (* v (/ (sqrt 2.0) 4.0)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.010146240625180289,
    "avg_bits_err_improve": 0.0003537593748197121,
    "time": 10200.385498046875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5230027583132026,
    "avg_bits_err_output": 0.5230027583132026,
    "avg_bits_err_improve": 0,
    "time": 10877.896240234375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0467293448454136,
    "avg_bits_err_output": 2.0298543448454134,
    "avg_bits_err_improve": 0.016875000000000195,
    "time": 24272.533447265625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01732905741540336,
    "avg_bits_err_output": 0.01732905741540336,
    "avg_bits_err_improve": 0,
    "time": 9574.920654296875,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (fma a (* a (* b b)) (fma b (* b (fma a a (* b b))) (pow a 4.0))) (* 4.0 (* b b))) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.18503757405699392,
    "avg_bits_err_output": 0.06784152092820792,
    "avg_bits_err_improve": 0.117196053128786,
    "time": 24652.6708984375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (- (+ (pow b 4.0) (fma (* b b) (fma a a 1.0) (fma a (* a (fma b b 1.0)) (pow a 4.0)))) (fma a a (* b b))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 0.1950031027577738,
    "avg_bits_err_output": 0.022127484975651607,
    "avg_bits_err_improve": 0.17287561778212218,
    "time": 36943.052978515625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (- a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19198460929168018,
    "avg_bits_err_output": 0.19273004355717704,
    "avg_bits_err_improve": -0.0007454342654968638,
    "time": 30977.51416015625,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (exp (log1p (/ x (sqrt (fma x x (* p (* p 4.0)))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.4454905073507,
    "avg_bits_err_output": 13.444794856772617,
    "avg_bits_err_improve": 0.0006956505780824074,
    "time": 24034.13037109375,
    "seed": 2,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (* (+ (expm1 x) 2.0) (expm1 x)) (expm1 x)))",
    "output_parens": 7,
    "avg_bits_err_input": 41.514317950428634,
    "avg_bits_err_output": 0.054875,
    "avg_bits_err_improve": 41.45944295042863,
    "time": 14327.5322265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(if (<= x -50000000000000.0) (/ (- x (sin x)) (- x (tan x))) (if (<= x 0.35) (/ (- x (* (/ 1.0 (sin x)) (pow (sin x) 2.0))) (fma (/ 1.0 x) (* x x) (- (tan x)))) (/ (- x (sin x)) (+ (- 1.0 (tan x)) (+ x -1.0)))))",
    "output_parens": 28,
    "avg_bits_err_input": 31.622030420974493,
    "avg_bits_err_output": 27.60024514655041,
    "avg_bits_err_improve": 4.021785274424083,
    "time": 34626.63671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma b_2 b_2 (* a (- c)))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.66020273230366,
    "avg_bits_err_output": 33.65657752721689,
    "avg_bits_err_improve": 0.0036252050867702224,
    "time": 20339.251220703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* a (- c))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.19653135953239,
    "avg_bits_err_output": 34.19628557627696,
    "avg_bits_err_improve": 0.00024578325542989887,
    "time": 22635.981201171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (fma (- (exp 1.0)) (exp -1.0) 1.0) (- 1.0 (cos x))) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 30.767338452662628,
    "avg_bits_err_output": 30.402028640340042,
    "avg_bits_err_improve": 0.36530981232258597,
    "time": 22645.787109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 2.9e+23) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (log (exp (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))))",
    "output_parens": 23,
    "avg_bits_err_input": 33.01816708714132,
    "avg_bits_err_output": 31.055570912942414,
    "avg_bits_err_improve": 1.9625961741989073,
    "time": 45772.260986328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.59902153910503,
    "avg_bits_err_output": 0.017375,
    "avg_bits_err_improve": 29.58164653910503,
    "time": 8050.037109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -7.5e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 2.7e+151) (- (- (* (pow (+ x 1.0) -2.0) (+ x 2.0)) (/ 1.0 x)) (pow (+ x 1.0) -2.0)) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.712999100824304,
    "avg_bits_err_output": 4.125867361080322,
    "avg_bits_err_improve": 10.587131739743981,
    "time": 77456.66186523438,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.53647609230894,
    "avg_bits_err_output": 6.203629086135075,
    "avg_bits_err_improve": 33.332847006173864,
    "time": 32060.655029296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.844376805081026,
    "avg_bits_err_output": 29.53493671831749,
    "avg_bits_err_improve": 0.3094400867635372,
    "time": 39442.895751953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.862912215081383,
    "avg_bits_err_output": 29.862912215081383,
    "avg_bits_err_improve": 0,
    "time": 42849.864013671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.558811642659755,
    "avg_bits_err_output": 33.57867531572315,
    "avg_bits_err_improve": -0.01986367306339787,
    "time": 21521.916015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* b b) (* a (* c -4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.80157756696032,
    "avg_bits_err_output": 34.126776137484654,
    "avg_bits_err_improve": -0.32519857052433565,
    "time": 24590.42138671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.472647159634384,
    "avg_bits_err_output": 0.020386842188131013,
    "avg_bits_err_improve": 61.45226031744625,
    "time": 19084.564453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00484071284103,
    "avg_bits_err_output": 0.059977117938307026,
    "avg_bits_err_improve": 62.94486359490272,
    "time": 51511.31396484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.49530586794207,
    "avg_bits_err_output": 58.49530586794207,
    "avg_bits_err_improve": 0,
    "time": 69714.34790039062,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -7.4e-155) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (exp (log (/ -1.0 (/ 1.0 x))))) (if (<= x 1.35e-154) (- 1.0 (* (/ 1.0 (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x)))) (log (pow (exp (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x)))) (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x))))))) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (* (/ 1.0 x) (/ 1.0 x)))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x)))))",
    "output_parens": 52,
    "avg_bits_err_input": 59.992713143387256,
    "avg_bits_err_output": 56.707261108765415,
    "avg_bits_err_improve": 3.2854520346218408,
    "time": 62723.468505859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= b -1.4e-27) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps a))) (expm1 (* eps b)))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))))",
    "output_parens": 27,
    "avg_bits_err_input": 60.24891967224722,
    "avg_bits_err_output": 41.431871465234465,
    "avg_bits_err_improve": 18.817048207012753,
    "time": 46155.9677734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.9159850089408,
    "avg_bits_err_output": 0.14443390000926062,
    "avg_bits_err_improve": 41.77155110893154,
    "time": 12381.5126953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.66431510498684,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.66381510498684,
    "time": 7599.140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.68898603451497,
    "avg_bits_err_output": 0.018374784063608936,
    "avg_bits_err_improve": 29.67061125045136,
    "time": 4240.677978515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.529493374551613,
    "avg_bits_err_output": 28.59011585125559,
    "avg_bits_err_improve": 0.9393775232960238,
    "time": 43057.9169921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.719244606835552,
    "avg_bits_err_output": 9.719244606835552,
    "avg_bits_err_improve": 0,
    "time": 65547.56176757812,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (- (tan (+ x eps)) (tan x)) (fma (pow (+ 1.0 (tan x)) 2.0) (/ 1.0 (+ 1.0 (tan x))) (- -1.0 (tan x))))",
    "output_parens": 14,
    "avg_bits_err_input": 36.767742998630105,
    "avg_bits_err_output": 36.78777691107546,
    "avg_bits_err_improve": -0.02003391244535635,
    "time": 45648.84326171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (- (- (+ (* x (/ 1.0 (sqrt (+ x 1.0)))) x) (sqrt x)) x))",
    "output_parens": 12,
    "avg_bits_err_input": 29.875174423587065,
    "avg_bits_err_output": 25.601488496817538,
    "avg_bits_err_improve": 4.273685926769527,
    "time": 37543.370361328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (* (sin x) (log (exp (+ (cos eps) -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 37.066784457637866,
    "avg_bits_err_output": 0.4072668803847983,
    "avg_bits_err_improve": 36.65951757725307,
    "time": 24463.800048828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.157797650223724,
    "avg_bits_err_output": 19.014439352463405,
    "avg_bits_err_improve": 0.14335829776031872,
    "time": 25806.964599609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (atan N) (* (atan N) (/ -1.0 (atan N))) (atan (- N -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 14.900590385858418,
    "avg_bits_err_output": 14.896382098691383,
    "avg_bits_err_improve": 0.004208287167035252,
    "time": 64403.80615234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.69295475452943,
    "avg_bits_err_output": 1.187781173875969,
    "avg_bits_err_improve": 28.505173580653462,
    "time": 28229.133544921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (* (- 1.0 m) (/ (+ (/ (- m (* m m)) v) -1.0) (- 1.0 m))) (* (- 1.0 m) (* m (/ (+ (/ (- m (* m m)) v) -1.0) (- 1.0 m)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.07188136568158808,
    "avg_bits_err_output": 0.08435688642202456,
    "avg_bits_err_improve": -0.01247552074043648,
    "time": 25383.894775390625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.03771741889342,
    "avg_bits_err_output": 0.30754041406655636,
    "avg_bits_err_improve": 15.730177004826862,
    "time": 17299.228759765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (/ angle 180.0) (- (+ (/ PI (/ angle 180.0)) 1.0) 1.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 19.8618769896957,
    "avg_bits_err_output": 19.902871901116864,
    "avg_bits_err_improve": -0.040994911421165625,
    "time": 58501.32080078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.801951198756488,
    "avg_bits_err_output": 30.801951198756488,
    "avg_bits_err_improve": 0,
    "time": 54337.126708984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) (* (- (- (/ angle 180.0))) (* PI (/ 1.0 (/ angle 180.0))))))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.388018091198553,
    "avg_bits_err_output": 20.65444308920302,
    "avg_bits_err_improve": -0.2664249980044673,
    "time": 68022.16845703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(+ (fma m (/ (- m (* m m)) v) m) (- (- m) m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.17553303878037732,
    "avg_bits_err_output": 0.1762152022284314,
    "avg_bits_err_improve": -0.0006821634480540795,
    "time": 31828.882080078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (fma (- (tan x)) (- (- 1.0 (tan x)) 1.0) 1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3283543319995591,
    "avg_bits_err_output": 0.32480651619222045,
    "avg_bits_err_improve": 0.00354781580733865,
    "time": 49540.759765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.14111560156295072,
    "avg_bits_err_output": 0.14111560156295072,
    "avg_bits_err_improve": 0,
    "time": 25270.527587890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.785056858727277,
    "avg_bits_err_output": 16.781479311218582,
    "avg_bits_err_improve": 0.003577547508694323,
    "time": 50237.659912109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (* c (* a -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.5625467302506,
    "avg_bits_err_output": 46.096789167978336,
    "avg_bits_err_improve": 6.465757562272266,
    "time": 31554.13232421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.566420960658263,
    "avg_bits_err_output": 27.811848893147488,
    "avg_bits_err_improve": 0.7545720675107752,
    "time": 28375.2822265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.77825332635467,
    "avg_bits_err_output": 39.43623327175064,
    "avg_bits_err_improve": 4.342020054604035,
    "time": 23047.0419921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.555181521123515,
    "avg_bits_err_output": 33.555181521123515,
    "avg_bits_err_improve": 0,
    "time": 21829.09326171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8698663842409012,
    "avg_bits_err_output": 0.8698663842409012,
    "avg_bits_err_improve": 0,
    "time": 31684.612548828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.29529444909919,
    "avg_bits_err_output": 29.29529444909919,
    "avg_bits_err_improve": 0,
    "time": 6458.40576171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.179648862205234,
    "avg_bits_err_output": 1.2232312031259016,
    "avg_bits_err_improve": 56.956417659079335,
    "time": 8792.5205078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.116196462917856,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 58.108696462917855,
    "time": 7670.3994140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007375,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 0,
    "time": 2334.7783203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.35483755496477,
    "avg_bits_err_output": 32.35483755496477,
    "avg_bits_err_improve": 0,
    "time": 5821.580322265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.48491139901325,
    "avg_bits_err_output": 58.4861250356024,
    "avg_bits_err_improve": -0.0012136365891493028,
    "time": 61668.31591796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026698120312590144,
    "avg_bits_err_output": 0.026698120312590144,
    "avg_bits_err_improve": 0,
    "time": 3669.259033203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (- (+ (cos (atan (/ (/ eh ew) (tan t)))) 1.0) 1.0)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1285,
    "avg_bits_err_output": 0.12931372187554085,
    "avg_bits_err_improve": -0.0008137218755408515,
    "time": 46900.5810546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12584436093777043,
    "avg_bits_err_output": 0.12584436093777043,
    "avg_bits_err_improve": 0,
    "time": 38134.60302734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.12957355708429,
    "avg_bits_err_output": 3.7656009136641506,
    "avg_bits_err_improve": 35.36397264342014,
    "time": 53935.803955078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.485065143779895,
    "avg_bits_err_output": 14.485065143779895,
    "avg_bits_err_improve": 0,
    "time": 4739.44921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (log (+ 1.0 (expm1 (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.14518239233819433,
    "avg_bits_err_output": 0.17147585290148892,
    "avg_bits_err_improve": -0.026293460563294596,
    "time": 47511.439697265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.63803521654936,
    "avg_bits_err_output": 46.13001385089663,
    "avg_bits_err_improve": 6.508021365652731,
    "time": 25923.73291015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-14) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) (- (* b (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) b)) (* 3.0 a)))",
    "output_parens": 37,
    "avg_bits_err_input": 28.75543818824443,
    "avg_bits_err_output": 27.176017369624336,
    "avg_bits_err_improve": 1.5794208186200933,
    "time": 32047.347412109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.79604538061518,
    "avg_bits_err_output": 39.43417423486445,
    "avg_bits_err_improve": 4.361871145750733,
    "time": 35070.142333984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.60464308425093,
    "avg_bits_err_output": 33.60464308425093,
    "avg_bits_err_improve": 0,
    "time": 25191.2919921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(if (<= lambda2 1.3e+57) (atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2))))) (atan2 (* (log (+ 1.0 (expm1 (- (* (cos (- lambda1 (/ PI 2.0))) (cos (- lambda2))) (* (sin (- lambda1 (/ PI 2.0))) (sin (- lambda2))))))) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2))))))",
    "output_parens": 46,
    "avg_bits_err_input": 13.115325253846082,
    "avg_bits_err_output": 12.9614348213481,
    "avg_bits_err_improve": 0.15389043249798284,
    "time": 61420.908935546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.524752988330512,
    "avg_bits_err_output": 29.530929802254484,
    "avg_bits_err_improve": -0.006176813923971736,
    "time": 8954.88330078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 0,
    "time": 4427.661376953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.755221738489459,
    "avg_bits_err_output": 14.755221738489459,
    "avg_bits_err_improve": 0,
    "time": 117180.58520507812,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 0.0) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (* A (* C 4.0)) (pow B 2.0))) (sqrt (* (* 2.0 F) (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 69,
    "avg_bits_err_input": 52.45772386407188,
    "avg_bits_err_output": 47.97542197669657,
    "avg_bits_err_improve": 4.482301887375307,
    "time": 48593.53076171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- C (+ A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.894744119429234,
    "avg_bits_err_output": 30.461526874151197,
    "avg_bits_err_improve": -0.566782754721963,
    "time": 40133.65771484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2e-310) (/ (- (* (sqrt (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* (sqrt (- (* A (* C 4.0)) (pow B 2.0))) (sqrt (* -2.0 F))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.169770239385244,
    "avg_bits_err_output": 46.75685031214116,
    "avg_bits_err_improve": 5.412919927244083,
    "time": 51664.455810546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.270554961776552,
    "avg_bits_err_output": 15.270554961776552,
    "avg_bits_err_improve": 0,
    "time": 43105.617431640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1e-246) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (log (exp (- (- g) (sqrt (- (* g g) (* h h))))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (if (<= g 2.8e+142) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (* (* (cbrt (/ 1.0 (+ a a))) (* (* (cbrt (/ 1.0 (+ a a))) (/ 1.0 (cbrt (/ 1.0 (+ a a))))) (* (cbrt (/ 1.0 (+ a a))) (/ (/ (cbrt (/ 1.0 (+ a a))) (cbrt (/ 1.0 (+ a a)))) (cbrt (/ 1.0 (+ a a))))))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))",
    "output_parens": 90,
    "avg_bits_err_input": 35.99589430439149,
    "avg_bits_err_output": 21.757727717328123,
    "avg_bits_err_improve": 14.238166587063368,
    "time": 75279.09399414062,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9910808281331139,
    "avg_bits_err_output": 0.02743648163704121,
    "avg_bits_err_improve": 0.9636443464960727,
    "time": 15556.27783203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.678375,
    "avg_bits_err_output": 0.678375,
    "avg_bits_err_improve": 0,
    "time": 6900.138671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.196144545501134,
    "avg_bits_err_output": 11.196144545501134,
    "avg_bits_err_improve": 0,
    "time": 27284.437744140625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49046350769904495,
    "avg_bits_err_output": 0.461875,
    "avg_bits_err_improve": 0.028588507699044974,
    "time": 6559.671142578125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.89821046338433,
    "avg_bits_err_output": 15.270308930588868,
    "avg_bits_err_improve": 37.62790153279546,
    "time": 14724.42333984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.727833059046273,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.727833059046273,
    "time": 2062.302734375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (* (/ (- 1.0 x) (+ 1.0 x)) (* (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))) (/ 1.0 (/ (- 1.0 x) (+ 1.0 x))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.017511842188131014,
    "avg_bits_err_improve": -0.0035118421881310136,
    "time": 42377.85791015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1205.26318359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* (* r (* 0.375 w)) (* r w)) (* (* r w) (* (* v 0.25) (* r w)))) (- 1.0 v)))",
    "output_parens": 16,
    "avg_bits_err_input": 12.55342337153112,
    "avg_bits_err_output": 6.545908266634678,
    "avg_bits_err_improve": 6.0075151048964415,
    "time": 34113.123291015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0) (* x1 (* 2.0 (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0))))) (* (* x1 x1) -6.0)) (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5125415513252507,
    "avg_bits_err_output": 0.2727956625833715,
    "avg_bits_err_improve": 0.2397458887418792,
    "time": 78638.31323242188,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.393029181735724,
    "avg_bits_err_output": 18.393029181735724,
    "avg_bits_err_improve": 0,
    "time": 14516.713134765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x 0.12900613773279798) (* x (* x (* 0.12900613773279798 (* x (/ (/ x x) (* x 0.12900613773279798))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.21761336132445105,
    "avg_bits_err_output": 0.30219136913920464,
    "avg_bits_err_improve": -0.08457800781475358,
    "time": 23809.2158203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00275,
    "avg_bits_err_output": 0.00275,
    "avg_bits_err_improve": 0,
    "time": 3616.39453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.087345127366637,
    "avg_bits_err_output": 9.19837576642884,
    "avg_bits_err_improve": 4.888969360937796,
    "time": 46311.519287109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (log (pow (exp (/ 1.0 eps)) (- (exp (- (* eps x) x)) (exp (- (fma eps x x)))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.018270759143785,
    "avg_bits_err_output": 0.9148680320818701,
    "avg_bits_err_improve": 28.103402727061916,
    "time": 38367.4189453125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.012,
    "avg_bits_err_output": 0.01275,
    "avg_bits_err_improve": -0.0007499999999999989,
    "time": 17175.056884765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017375,
    "avg_bits_err_output": 0.017375,
    "avg_bits_err_improve": 0,
    "time": 27494.175537109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.03925,
    "avg_bits_err_output": 0.03925,
    "avg_bits_err_improve": 0,
    "time": 6995.925537109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3719.21435546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2827.800537109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3777.108154296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.824873496755416,
    "avg_bits_err_output": 0.25625,
    "avg_bits_err_improve": 7.568623496755416,
    "time": 48481.565673828125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.275850852148199,
    "avg_bits_err_output": 7.275850852148199,
    "avg_bits_err_improve": 0,
    "time": 32971.802490234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 15.95633635648257,
    "avg_bits_err_output": 0.0155,
    "avg_bits_err_improve": 15.94083635648257,
    "time": 14004.922607421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (* (pow (pow (exp x) -10.0) (/ x x)) (pow (pow (exp x) 10.0) 2.0)) x) (- (+ 1.0 (cos x)) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 3.5403741726438858,
    "avg_bits_err_output": 2.1091233547363215,
    "avg_bits_err_improve": 1.4312508179075643,
    "time": 40904.25732421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.454857748212941,
    "avg_bits_err_output": 14.454857748212941,
    "avg_bits_err_improve": 0,
    "time": 12360.6123046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.876912008031375,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.876912008031375,
    "time": 4869.4365234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.914283630750894,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 38.913408630750894,
    "time": 3692.234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.294,
    "avg_bits_err_improve": 63.706,
    "time": 4668.49560546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325851722857,
    "avg_bits_err_output": 0.407625,
    "avg_bits_err_improve": 61.43563351722857,
    "time": 20428.3623046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* b b) (* a (* c -4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.80157756696032,
    "avg_bits_err_output": 34.126776137484654,
    "avg_bits_err_improve": -0.32519857052433565,
    "time": 24527.64111328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.555181521123515,
    "avg_bits_err_output": 33.555181521123515,
    "avg_bits_err_improve": 0,
    "time": 24051.8515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2296.592529296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.656383154794554,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 39.64725815479456,
    "time": 4178.210205078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.89337487829978,
    "avg_bits_err_output": 19.89337487829978,
    "avg_bits_err_improve": 0,
    "time": 4973.3212890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.656178838185139,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.656178838185139,
    "time": 6458.163330078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.041,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.040375,
    "time": 11129.759521484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01929248125036058,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": 0.00604248125036058,
    "time": 3866.6240234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.018625,
    "avg_bits_err_improve": -0.00375,
    "time": 4465.76513671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00125,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0,
    "time": 2210.877197265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ c (+ b a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39664661719245803,
    "avg_bits_err_output": 0.231375,
    "avg_bits_err_improve": 0.16527161719245803,
    "time": 8354.742919921875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log1p (- (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.434841256513014,
    "avg_bits_err_output": 30.434841097750834,
    "avg_bits_err_improve": 1.5876218029120537e-07,
    "time": 10529.77880859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- (* (/ 1.0 (sqrt (- (* x x) eps))) eps) (* x (+ (* x (/ 1.0 (sqrt (- (* x x) eps)))) -1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 24.636226017078148,
    "avg_bits_err_output": 22.119479319622886,
    "avg_bits_err_improve": 2.516746697455261,
    "time": 22249.087890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (fma (sin x) (/ -1.0 (sin x)) 1.0) (- (+ 1.0 (cos (- (/ PI 2.0) x))) 1.0))) (tan x))",
    "output_parens": 15,
    "avg_bits_err_input": 30.51449603473977,
    "avg_bits_err_output": 30.46212878454316,
    "avg_bits_err_improve": 0.05236725019661037,
    "time": 44643.123291015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005875,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.00475,
    "time": 3606.624755859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-15) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.42998750322962,
    "avg_bits_err_output": 10.680508003236175,
    "avg_bits_err_improve": 36.74947949999344,
    "time": 55454.2529296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.68809225727731,
    "avg_bits_err_output": 25.68809225727731,
    "avg_bits_err_improve": 0,
    "time": 22963.423583984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.93468028107988,
    "avg_bits_err_output": 25.93500340139247,
    "avg_bits_err_improve": -0.000323120312589964,
    "time": 28288.026611328125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03275,
    "avg_bits_err_output": 0.02091875355086315,
    "avg_bits_err_improve": 0.011831246449136853,
    "time": 10934.447998046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (/ PI (+ uy uy)) (* (+ uy uy) (* 2.0 uy)))) (sqrt (- 1.0 (log (+ 1.0 (expm1 (pow (fma ux maxCos (- 1.0 ux)) 2.0)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.47745675145116,
    "avg_bits_err_output": 12.330272500067254,
    "avg_bits_err_improve": 1.147184251383905,
    "time": 34878.101806640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- ux (- (* ux (* maxCos (- ux))) (- (* ux (- ux)) (* ux (+ maxCos (* (fma ux maxCos 1.0) (+ maxCos -1.0)))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.509575650849145,
    "avg_bits_err_output": 0.3339184091959922,
    "avg_bits_err_improve": 13.175657241653154,
    "time": 62881.1845703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* zi (* maxCos (- 1.0 ux))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3379176676902881,
    "avg_bits_err_output": 0.32119553806058326,
    "avg_bits_err_improve": 0.01672212962970482,
    "time": 93056.12377929688,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (tan (* PI (+ 0.5 (* 2.0 u1)))) (/ alphay alphax)))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.20632376014563122,
    "avg_bits_err_output": 0.20672000077081149,
    "avg_bits_err_improve": -0.0003962406251802608,
    "time": 31224.2041015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5389125018159427,
    "avg_bits_err_output": 0.5000023595440429,
    "avg_bits_err_improve": 0.03891014227189982,
    "time": 43998.799560546875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.32966220470572555,
    "avg_bits_err_output": 0.32966220470572555,
    "avg_bits_err_improve": 0,
    "time": 46669.0576171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (log (/ 1.0 (+ -1.0 (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))))))))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.3328383993812466,
    "avg_bits_err_output": 0.3445091033475248,
    "avg_bits_err_improve": -0.011670703966278229,
    "time": 44929.111572265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0629791461110475,
    "avg_bits_err_output": 0.044465333529752085,
    "avg_bits_err_improve": 0.01851381258129542,
    "time": 33567.587158203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* s (exp (/ (- (fabs x)) s))) (* s (fma (exp (/ (- (fabs x)) s)) (+ (exp (/ (- (fabs x)) s)) 1.0) 1.0))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1524771533391353,
    "avg_bits_err_output": 0.13239298335537575,
    "avg_bits_err_improve": 0.02008416998375956,
    "time": 39721.1953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (+ 1.0 (- (/ (sin (* x PI)) (* x PI)) 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6763791529307713,
    "avg_bits_err_output": 0.6798209751247718,
    "avg_bits_err_improve": -0.0034418221940004656,
    "time": 23718.969482421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.16121027039678423,
    "avg_bits_err_output": 0.16244700337331874,
    "avg_bits_err_improve": -0.0012367329765345103,
    "time": 24228.661865234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.601394269178739,
    "avg_bits_err_output": 2.598342389491329,
    "avg_bits_err_improve": 0.00305187968740972,
    "time": 63850.35205078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ (+ (/ (* sinTheta_i sinTheta_O) v) 2.0) -2.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46020301216139614,
    "avg_bits_err_output": 0.4607973730991666,
    "avg_bits_err_improve": -0.0005943609377704329,
    "time": 39289.423095703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (+ v (- 1.0 (- 1.0 v))) (* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (- 0.6931 (/ (* sinTheta_i sinTheta_O) v)))) 1.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.11850146213482501,
    "avg_bits_err_output": 0.11571115781983382,
    "avg_bits_err_improve": 0.0027903043149911932,
    "time": 41552.96826171875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47145509358540966,
    "avg_bits_err_output": 0.47145509358540966,
    "avg_bits_err_improve": 0,
    "time": 24742.082763671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* -3.0 (* s (log1p (- (/ (+ u -0.25) 0.75)))))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3250281364382597,
    "avg_bits_err_output": 0.5480763024828578,
    "avg_bits_err_improve": 0.7769518339554019,
    "time": 126667.30102539062,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (+ 1.0 (- (log (/ 1.0 (- 1.0 (* 4.0 u)))) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 12.524832499128747,
    "avg_bits_err_output": 12.556537568414385,
    "avg_bits_err_improve": -0.03170506928563732,
    "time": 38181.468505859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (+ (* s (* PI (* r 2.0))) (* (* s (* 2.0 (/ r r))) 0.0))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.13214706366884663,
    "avg_bits_err_output": 0.13164706366884663,
    "avg_bits_err_improve": 0.0005000000000000004,
    "time": 98851.76831054688,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (- (* (+ 1.0 (/ 1.0 (sin normAngle))) (sin (- normAngle (* normAngle u)))) (sin (- normAngle (* normAngle u)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 19,
    "avg_bits_err_input": 0.9054577894286165,
    "avg_bits_err_output": 0.9224751833541223,
    "avg_bits_err_improve": -0.01701739392550572,
    "time": 46354.515380859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(expm1 (log1p (/ 1.0 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ 1.0 (sqrt PI)) (exp (- (* cosTheta cosTheta)))) (+ 1.0 c)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.6895539068954744,
    "avg_bits_err_output": 0.6891813506465563,
    "avg_bits_err_improve": 0.0003725562489180767,
    "time": 45222.138916015625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.516249132322612,
    "avg_bits_err_output": 0.5282192337323585,
    "avg_bits_err_improve": 12.988029898590254,
    "time": 25677.1396484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.568327845070785,
    "avg_bits_err_output": 0.30576565250612336,
    "avg_bits_err_improve": 13.262562192564662,
    "time": 49698.634521484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.133087496674943,
    "avg_bits_err_output": 0.21075,
    "avg_bits_err_improve": 13.922337496674942,
    "time": 28867.142822265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.67058122986409,
    "avg_bits_err_output": 0.5290273680727827,
    "avg_bits_err_improve": 12.141553861791309,
    "time": 18720.442626953125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (* (/ 1.0 (* F F)) (tan (* l (- (* l (+ (/ PI l) 1.0)) l)))) 1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 16.816575316829883,
    "avg_bits_err_output": 12.960908044475202,
    "avg_bits_err_improve": 3.8556672723546814,
    "time": 32462.234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(+ (- (/ 1.0 (tan B)) (+ (* (/ 1.0 (tan B)) x) (* (/ 1.0 (tan B)) 1.0))) (/ 1.0 (sin B)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.21608496250072115,
    "avg_bits_err_output": 0.21670996250072116,
    "avg_bits_err_improve": -0.0006250000000000144,
    "time": 42471.09228515625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+299) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (* (/ 1.0 (tan B)) (* (/ 1.0 (tan B)) (/ 1.0 (/ 1.0 (tan B))))))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.629165918357492,
    "avg_bits_err_output": 11.978481934540362,
    "avg_bits_err_improve": 1.6506839838171299,
    "time": 47072.91259765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (fma (/ PI 4.0) (exp (+ (log (/ PI 4.0)) (log (/ f (/ PI 4.0))))) 0.0)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 29,
    "avg_bits_err_input": 61.49983771544291,
    "avg_bits_err_output": 2.008561031134477,
    "avg_bits_err_improve": 59.49127668430843,
    "time": 57128.969482421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -5e-156) (/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ 1.0 x) (+ x -1.0)) (* t (+ t t))) (* l (- l (* (/ (+ 1.0 x) (+ x -1.0)) l)))))) (if (<= t 3e-162) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* l l) (* t (+ t t))))))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 51,
    "avg_bits_err_input": 42.95922449358038,
    "avg_bits_err_output": 35.49904286436874,
    "avg_bits_err_improve": 7.46018162921164,
    "time": 36850.070068359375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.050222550256112,
    "avg_bits_err_output": 4.050222550256112,
    "avg_bits_err_improve": 0,
    "time": 39425.58447265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9870666069875106,
    "avg_bits_err_output": 0.004875,
    "avg_bits_err_improve": 0.9821916069875106,
    "time": 15964.65966796875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.191200829976648,
    "avg_bits_err_output": 10.191075829976647,
    "avg_bits_err_improve": 0.00012500000000059686,
    "time": 15939.56005859375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -2e-310) (* (sqrt (- n)) (sqrt (* U (fma 2.0 (- (* n (* (pow (/ l Om) 2.0) (- U U*))) t) (- (* (/ (* l l) Om) -4.0)))))) (if (<= n 2.9e-195) (* (sqrt n) (sqrt (* U (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0))))))))) (if (<= n 1.5e-144) (* (* (sqrt (+ (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U* U))))) (sqrt U)) (sqrt (* 2.0 n))) (if (<= n 5.1e-120) (* (sqrt (- (* n U))) (sqrt (* 2.0 (fma 2.0 (/ (* l l) Om) (- (* (pow (/ l Om) 2.0) (* n (- U U*))) t))))) (if (<= n 5.2e+129) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))) (* (sqrt (fma (- t (* 2.0 (/ (* l l) Om))) (* U (/ (- (* 2.0 (/ (* l l) Om)) t) (- (* 2.0 (/ (* l l) Om)) t))) (* n (* (pow (/ l Om) 2.0) (* U (- U* U)))))) (sqrt (* 2.0 n))))))))",
    "output_parens": 111,
    "avg_bits_err_input": 34.24242992177961,
    "avg_bits_err_output": 29.28917502938023,
    "avg_bits_err_improve": 4.953254892399379,
    "time": 43986.1259765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.55e-72) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (* (tan k) (+ (- (* (sin k) (pow (/ k t) 2.0)) (* (tan k) (/ (sin k) (tan k)))) (sin (+ (- PI k) 0.0)))))) (if (<= t 3.1e-43) (/ 2.0 (- (* (sin k) (* (tan k) (log1p (expm1 (* (+ (/ (pow t 3.0) (* l l)) 1.0) (pow (/ k t) 2.0)))))) (* (* (pow (/ k t) 2.0) (tan k)) (sin (+ (- PI k) 0.0))))) (/ 2.0 (* (pow (/ k t) 2.0) (* (tan k) (* (/ (pow t 3.0) (* l l)) (sin k)))))))",
    "output_parens": 59,
    "avg_bits_err_input": 47.54258284319369,
    "avg_bits_err_output": 37.79415160693229,
    "avg_bits_err_improve": 9.748431236261403,
    "time": 56082.595458984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 32.46389821472174,
    "avg_bits_err_output": 32.46389821472174,
    "avg_bits_err_improve": 0,
    "time": 17425.105224609375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5391338375223579,
    "avg_bits_err_output": 0.5391338375223579,
    "avg_bits_err_improve": 0,
    "time": 55443.103271484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.4908464607940856,
    "avg_bits_err_output": 0.4908464607940856,
    "avg_bits_err_improve": 0,
    "time": 40488.0595703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (cos (/ K 2.0)) (* J (- (expm1 l) (expm1 (- l))))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.094553649194772,
    "avg_bits_err_output": 0.09986560156295071,
    "avg_bits_err_improve": 16.994688047631822,
    "time": 39442.049072265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -4e+39) (* (cos (- (/ (* K (+ (* n (* K (* n (/ 1.0 (* K n))))) m)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 1e-57) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 8e+161) (* (cos (- (/ (* K (+ (* n (* K (* n (/ 1.0 (* K n))))) m)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ n m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))))",
    "output_parens": 82,
    "avg_bits_err_input": 15.597584544532033,
    "avg_bits_err_output": 8.93762453027577,
    "avg_bits_err_improve": 6.659960014256264,
    "time": 34917.064697265625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.834719360937772,
    "avg_bits_err_output": 17.834719360937772,
    "avg_bits_err_improve": 0,
    "time": 34021.17333984375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ (* M D) (* 2.0 d)) -5e-37) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (if (<= (/ (* M D) (* 2.0 d)) 2e-51) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))) (if (<= (/ (* M D) (* 2.0 d)) 1e+275) (* w0 (sqrt (- 1.0 (* (pow (* (/ (* M D) (+ d d)) (- (* (- (* 0.0 (/ 0.0 (/ (* M D) (+ d d)))) 0.0) (* (/ (* M D) (+ d d)) (/ (/ 1.0 (/ (* M D) (+ d d))) (/ (* M D) (+ d d))))) (* (* (/ (* M D) (+ d d)) (/ (/ 1.0 (/ (* M D) (+ d d))) (/ (* M D) (+ d d)))) (* (/ (/ (* M D) (+ d d)) (/ (* M D) (+ d d))) (- (/ (* M D) (+ d d))))))) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0)))))))))",
    "output_parens": 106,
    "avg_bits_err_input": 14.150926840649017,
    "avg_bits_err_output": 10.294856034146331,
    "avg_bits_err_improve": 3.856070806502686,
    "time": 25438.165283203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.987251701785507,
    "avg_bits_err_output": 18.987251701785507,
    "avg_bits_err_improve": 0,
    "time": 24386.368408203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* d d) 5e-6) (* (+ (/ (* d (* d c0)) (* D (* h (* D w)))) (sqrt (- (pow (/ (* d (* d c0)) (* D (* h (* D w)))) 2.0) (* M M)))) (/ c0 (+ w w))) (if (<= (* d d) 2e+288) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (pow (/ (* d (* d c0)) (* D (* D (* w h)))) 2.0) (* M M)))))))",
    "output_parens": 72,
    "avg_bits_err_input": 59.61431169794126,
    "avg_bits_err_output": 57.141323087947136,
    "avg_bits_err_improve": 2.4729886099941254,
    "time": 48029.842529296875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 5e+289) (fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* 1.0 (* 0.5 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 26.885601663223525,
    "avg_bits_err_output": 25.613506976851816,
    "avg_bits_err_improve": 1.2720946863717089,
    "time": 53412.422607421875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.011050498090572,
    "avg_bits_err_output": 15.011050498090572,
    "avg_bits_err_improve": 0,
    "time": 57083.449462890625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9837712406251803,
    "avg_bits_err_output": 0.013948120312590144,
    "avg_bits_err_improve": 0.9698231203125901,
    "time": 11714.353271484375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* (* v v) 5.0)) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42716751275219256,
    "avg_bits_err_output": 0.3575300904842014,
    "avg_bits_err_improve": 0.06963742226799113,
    "time": 31317.59033203125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011667481250360576,
    "avg_bits_err_output": 0.011667481250360576,
    "avg_bits_err_improve": 0,
    "time": 10868.07763671875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5145300913881009,
    "avg_bits_err_output": 0.5145300913881009,
    "avg_bits_err_improve": 0,
    "time": 13345.58056640625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1490949785499773,
    "avg_bits_err_output": 2.1067506176122066,
    "avg_bits_err_improve": 0.04234436093777072,
    "time": 15075.29345703125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.014188321399553346,
    "avg_bits_err_output": 0.014188321399553346,
    "avg_bits_err_improve": 0,
    "time": 9224.963134765625,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (fma b (* b (fma a a (fma b b 1.0))) (- (- (fma a (* a (* b b)) (pow a 4.0)) (- (* a a))) (fma a a (* b b)))) 1.0))",
    "output_parens": 18,
    "avg_bits_err_input": 0.18094172101615547,
    "avg_bits_err_output": 0.07075995382658223,
    "avg_bits_err_improve": 0.11018176718957323,
    "time": 28400.613037109375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (- (+ (pow b 4.0) (fma (* b b) (fma a a 1.0) (fma a (* a (fma b b 1.0)) (pow a 4.0)))) (fma a a (* b b))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 23,
    "avg_bits_err_input": 0.18970316694580563,
    "avg_bits_err_output": 0.024568391941478862,
    "avg_bits_err_improve": 0.16513477500432677,
    "time": 29633.97705078125,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (- (* a a) (* a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18203309357999456,
    "avg_bits_err_output": 0.18234377193339082,
    "avg_bits_err_improve": -0.00031067835339626537,
    "time": 8740.1123046875,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.932476742341763,
    "avg_bits_err_output": 12.932476742341763,
    "avg_bits_err_improve": 0,
    "time": 19445.39990234375,
    "seed": 3,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.15322183461517,
    "avg_bits_err_output": 0.056,
    "avg_bits_err_improve": 41.09722183461517,
    "time": 7949.393310546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (sin x) (* (/ 1.0 (* (sin x) 2.0)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (* (sin x) 2.0))))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 22,
    "avg_bits_err_input": 31.533065694187442,
    "avg_bits_err_output": 29.97645313636473,
    "avg_bits_err_improve": 1.5566125578227137,
    "time": 34481.269775390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- (* c (* a (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) b_2)) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.389283387442845,
    "avg_bits_err_output": 33.33247456244715,
    "avg_bits_err_improve": 1.0568088249956915,
    "time": 23489.098388671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.129451249660974,
    "avg_bits_err_output": 34.129451249660974,
    "avg_bits_err_improve": 0,
    "time": 28765.494140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (fma (- (exp 1.0)) (exp -1.0) (- 2.0 (cos x))) (* x x))",
    "output_parens": 8,
    "avg_bits_err_input": 31.134044478686224,
    "avg_bits_err_output": 30.892203366747033,
    "avg_bits_err_improve": 0.24184111193919122,
    "time": 30541.353515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 3.4e+60) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (+ 1.0 (- (/ 1.0 n) 1.0))))) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (+ 1.0 (- (* (/ 1.0 n) (log1p x)) 1.0)))))",
    "output_parens": 25,
    "avg_bits_err_input": 32.23633584885353,
    "avg_bits_err_output": 30.615792738651997,
    "avg_bits_err_improve": 1.620543110201531,
    "time": 77346.43920898438,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.669629428432366,
    "avg_bits_err_output": 0.015125,
    "avg_bits_err_improve": 29.654504428432364,
    "time": 4624.24462890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.698462470854961,
    "avg_bits_err_output": 14.698462470854961,
    "avg_bits_err_improve": 0,
    "time": 47609.58447265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (cos x) (log (exp (+ -1.0 (cos eps))))))",
    "output_parens": 10,
    "avg_bits_err_input": 39.75990502859051,
    "avg_bits_err_output": 6.410841864970917,
    "avg_bits_err_improve": 33.34906316361959,
    "time": 30550.351318359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (- (- (cbrt (+ x 1.0)) 1.0) (cbrt x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.6509733651925,
    "avg_bits_err_output": 29.317082213927222,
    "avg_bits_err_improve": 0.33389115126527713,
    "time": 30637.587890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.378223525986172,
    "avg_bits_err_output": 30.378223525986172,
    "avg_bits_err_improve": 0,
    "time": 39674.93896484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.51695654767653,
    "avg_bits_err_output": 34.51695654767653,
    "avg_bits_err_improve": 0,
    "time": 47094.669189453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.04895770910524,
    "avg_bits_err_output": 34.04895770910524,
    "avg_bits_err_improve": 0,
    "time": 22708.8046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(* (/ 1.0 (/ (log1p (- x)) (log1p x))) (- (+ (pow (/ (log1p (- x)) (log1p x)) 2.0) 1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 61.285247213091395,
    "avg_bits_err_output": 0.036848852181453125,
    "avg_bits_err_improve": 61.248398360909945,
    "time": 21634.027099609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00828121079103,
    "avg_bits_err_output": 0.05734240179402697,
    "avg_bits_err_improve": 62.95093880899701,
    "time": 47748.673583984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -7.6e-155) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x))) (if (<= x 1.28e-154) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x)))))",
    "output_parens": 32,
    "avg_bits_err_input": 60.00642841108273,
    "avg_bits_err_output": 56.74110969453108,
    "avg_bits_err_improve": 3.265318716551647,
    "time": 59353.33544921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.17191290402927,
    "avg_bits_err_output": 41.40619993703662,
    "avg_bits_err_improve": 18.765712966992652,
    "time": 47037.61279296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.5112415262548,
    "avg_bits_err_output": 0.12514792218822265,
    "avg_bits_err_improve": 41.38609360406658,
    "time": 14010.41259765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.77728461579644,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.77678461579644,
    "time": 3827.458740234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.252303740510047,
    "avg_bits_err_output": 0.016165233569958675,
    "avg_bits_err_improve": 29.23613850694009,
    "time": 4844.57568359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.845495044499835,
    "avg_bits_err_output": 28.969913975962328,
    "avg_bits_err_improve": 0.8755810685375067,
    "time": 31435.2431640625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.041605755021347,
    "avg_bits_err_output": 10.051069566116407,
    "avg_bits_err_improve": -0.009463811095059782,
    "time": 43099.5986328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (- (tan (+ x eps)) (tan x)) (* (/ 1.0 (tan x)) (* (- (pow (tan x) 2.0)) (fma (tan x) (/ 1.0 (tan x)) -1.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 36.556955566873185,
    "avg_bits_err_output": 36.645999244017226,
    "avg_bits_err_improve": -0.0890436771440406,
    "time": 81603.86938476562,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (- (+ (sqrt x) 1.0) (sqrt (+ 1.0 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.69974681681252,
    "avg_bits_err_output": 29.011334850335558,
    "avg_bits_err_improve": 0.6884119664769628,
    "time": 26020.646240234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.88128012781721,
    "avg_bits_err_output": 0.37607351440663755,
    "avg_bits_err_improve": 36.50520661341058,
    "time": 29427.667236328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.94802338498216,
    "avg_bits_err_output": 19.81904333497369,
    "avg_bits_err_improve": 0.12898005000847235,
    "time": 28253.670166015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (log1p (expm1 (atan (+ N 1.0)))) (atan N))",
    "output_parens": 6,
    "avg_bits_err_input": 15.245350639810278,
    "avg_bits_err_output": 15.252622612545817,
    "avg_bits_err_improve": -0.007271972735539478,
    "time": 43380.774658203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.844951854568617,
    "avg_bits_err_output": 1.2177357040041645,
    "avg_bits_err_improve": 28.62721615056445,
    "time": 34194.509033203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07497180468885216,
    "avg_bits_err_output": 0.07743688866220536,
    "avg_bits_err_improve": -0.0024650839733531965,
    "time": 37738.822509765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.083028519494206,
    "avg_bits_err_output": 0.3061866546917368,
    "avg_bits_err_improve": 15.776841864802469,
    "time": 24076.03466796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (/ angle 180.0) (- (+ (/ PI (/ angle 180.0)) 1.0) 1.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.33803249018788,
    "avg_bits_err_output": 20.43245059993209,
    "avg_bits_err_improve": -0.09441810974420761,
    "time": 47745.70458984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log1p (expm1 (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.145442296575986,
    "avg_bits_err_output": 31.113730809418108,
    "avg_bits_err_improve": 0.03171148715787808,
    "time": 47811.798828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (+ (* (sin (/ angle 180.0)) (cos (- PI (+ (/ angle 180.0) (* (/ angle 180.0) PI))))) (* (cos (/ angle 180.0)) (sin (+ (/ angle 180.0) (* (/ angle 180.0) PI)))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 20.316869005994228,
    "avg_bits_err_output": 20.34203426937241,
    "avg_bits_err_improve": -0.025165263378180924,
    "time": 52880.63671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18225020351258203,
    "avg_bits_err_output": 0.1824634750397233,
    "avg_bits_err_improve": -0.00021327152714126218,
    "time": 33536.459716796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (+ 1.0 (pow (tan x) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3316504019803842,
    "avg_bits_err_output": 0.3316504019803842,
    "avg_bits_err_improve": 0,
    "time": 58944.53466796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (- (- (* (cos v) e) 1.0) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13414624062518027,
    "avg_bits_err_output": 0.13987744375108171,
    "avg_bits_err_improve": -0.005731203125901446,
    "time": 29248.558349609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (log1p (expm1 (* (sin phi1) (sin phi2)))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 16.799114515947352,
    "avg_bits_err_output": 16.806069590471164,
    "avg_bits_err_improve": -0.006955074523812499,
    "time": 41248.074462890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.903880467862585,
    "avg_bits_err_output": 46.37312118669683,
    "avg_bits_err_improve": 6.530759281165757,
    "time": 38704.86328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(* (/ (fma (fma a (* c -4.0) (* b b)) (sqrt (/ 1.0 (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)) (* (/ (fma (fma a (* c -4.0) (* b b)) (sqrt (/ 1.0 (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)) (/ 1.0 (/ (fma (fma a (* c -4.0) (* b b)) (sqrt (/ 1.0 (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)))))",
    "output_parens": 39,
    "avg_bits_err_input": 28.549210173889637,
    "avg_bits_err_output": 28.220847581880335,
    "avg_bits_err_improve": 0.3283625920093023,
    "time": 58585.563720703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.800863444631155,
    "avg_bits_err_output": 39.492243112095615,
    "avg_bits_err_improve": 4.30862033253554,
    "time": 42838.800537109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b -1.32e+154) (/ (- (log (pow (exp (/ 1.0 (fma a (* c -4.0) (* b b)))) (pow (fma a (* c -4.0) (* b b)) 1.5))) b) (* a 2.0)) (if (<= b 2.6e+146) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (- (+ (/ (- (log (pow (exp (pow (fma a (* c -4.0) (* b b)) 0.75)) (sqrt (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))))) b) (+ a a)) 1.0) 1.0)))",
    "output_parens": 45,
    "avg_bits_err_input": 34.52001636568025,
    "avg_bits_err_output": 32.918345833344844,
    "avg_bits_err_improve": 1.6016705323354046,
    "time": 45504.14794921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (/ (sin (- lambda1 lambda2)) (cos phi2)) (log1p (expm1 (pow (cos phi2) 2.0)))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.8023021374663263,
    "avg_bits_err_output": 0.8133910364676115,
    "avg_bits_err_improve": -0.01108889900128518,
    "time": 40950.9873046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (- (/ 2.0 (exp (log1p (pow (exp x) -2.0)))) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.07521441751625,
    "avg_bits_err_output": 29.077358550495493,
    "avg_bits_err_improve": -0.0021441329792430963,
    "time": 16457.1123046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.215840184959255,
    "avg_bits_err_output": 1.2481486843762621,
    "avg_bits_err_improve": 56.967691500582994,
    "time": 7634.434814453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18402014172814,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.17664514172814,
    "time": 5671.01708984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010635515405487158,
    "avg_bits_err_output": 0.010635515405487158,
    "avg_bits_err_improve": 0,
    "time": 5524.214599609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (sqrt (fma x x -1.0)) -1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.90577124062518,
    "avg_bits_err_output": 31.906,
    "avg_bits_err_improve": -0.0002287593748171446,
    "time": 6962.66357421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (/ 0.5 (log (* (/ (+ x 1.0) (- 1.0 x)) (exp 1.0)))) (pow (log (* (/ (+ x 1.0) (- 1.0 x)) (exp 1.0))) 2.0) -0.5)",
    "output_parens": 15,
    "avg_bits_err_input": 58.7038449870256,
    "avg_bits_err_output": 58.73728884690224,
    "avg_bits_err_improve": -0.03344385987664111,
    "time": 59011.083984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (* (exp (+ 1.0 (log (+ (/ (sqrt (- 1.0 (* x x))) x) (/ 1.0 x))))) (exp -1.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.10514624062518028,
    "avg_bits_err_improve": -0.09327124062518029,
    "time": 12038.11328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (cos (atan (/ (/ eh ew) (tan t))))) (sin t)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12425,
    "avg_bits_err_output": 0.12494812031259014,
    "avg_bits_err_improve": -0.0006981203125901447,
    "time": 48086.4716796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1296674812503606,
    "avg_bits_err_output": 0.1296674812503606,
    "avg_bits_err_improve": 0,
    "time": 40853.4208984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda1) (- (cos (/ (+ phi1 phi2) 2.0))) (* (- (cos (/ (+ phi1 phi2) 2.0))) lambda1))) (- phi1 phi2)))",
    "output_parens": 19,
    "avg_bits_err_input": 39.39515394909506,
    "avg_bits_err_output": 3.8286091216665024,
    "avg_bits_err_improve": 35.56654482742856,
    "time": 45172.597900390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 13.995094089426662,
    "avg_bits_err_output": 13.998068251320325,
    "avg_bits_err_improve": -0.002974161893662952,
    "time": 6129.578369140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (/ (* (sin delta) (* (cos phi1) (sin theta))) 1.0) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (- (+ (* (sin delta) (* (cos theta) (cos phi1))) 1.0) 1.0))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.15595999319001144,
    "avg_bits_err_output": 0.15829197487800578,
    "avg_bits_err_improve": -0.002331981687994339,
    "time": 46419.374755859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 2.05e+16) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (+ (* (/ 1.0 (fma a (* c -3.0) (* b b))) (* c (* a -3.0))) (* b (* b (/ 1.0 (fma a (* c -3.0) (* b b))))))) (- b)) (* 3.0 a)) (/ (- (- (+ (sqrt (fma b b (* c (* a -3.0)))) 1.0) b) 1.0) (* 3.0 a)))",
    "output_parens": 34,
    "avg_bits_err_input": 52.908560327204256,
    "avg_bits_err_output": 50.98555095475725,
    "avg_bits_err_improve": 1.9230093724470052,
    "time": 33985.13818359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.717548485991898,
    "avg_bits_err_output": 28.66746201112643,
    "avg_bits_err_improve": 0.05008647486546636,
    "time": 27323.870849609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (- (* b (/ 1.0 (sqrt (fma b b (* c (* a -3.0)))))) (/ b b)) b (* (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) (* c (* a -3.0)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.82823094140982,
    "avg_bits_err_output": 39.497076775505136,
    "avg_bits_err_improve": 4.331154165904685,
    "time": 43564.331298828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.55748047305467,
    "avg_bits_err_output": 34.55748047305467,
    "avg_bits_err_improve": 0,
    "time": 19439.71875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.819481171290647,
    "avg_bits_err_output": 12.819858029054178,
    "avg_bits_err_improve": -0.0003768577635305803,
    "time": 69127.96508789062,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (+ (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))) 2.0) -2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 29.702365385298744,
    "avg_bits_err_output": 29.72591888689272,
    "avg_bits_err_improve": -0.023553501593976733,
    "time": 153468.38061523438,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ x (+ 1.0 x)) (+ (/ 1.0 (+ -1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.010125,
    "avg_bits_err_output": 0.013379887502163474,
    "avg_bits_err_improve": -0.0032548875021634737,
    "time": 4377.923095703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (- (- (+ (* (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ -1.0 (/ 1.0 (+ -1.0 x))))) 2.0) 1.0) (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.72004917919412,
    "avg_bits_err_output": 12.819305910943234,
    "avg_bits_err_improve": 1.9007432682508867,
    "time": 50403.693603515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -6.7e-308) (/ (- (* (sqrt (* -1.0 (+ A (- C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* F -2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (* C (* A 4.0)) (pow B 2.0))) (sqrt (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F -2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.124822280773145,
    "avg_bits_err_output": 46.91272774723325,
    "avg_bits_err_improve": 5.212094533539897,
    "time": 50390.353759765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.321259719347697,
    "avg_bits_err_output": 30.321259719347697,
    "avg_bits_err_improve": 0,
    "time": 60524.17578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- F)) (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.34563997338811,
    "avg_bits_err_output": 47.37063238571189,
    "avg_bits_err_improve": 4.975007587676217,
    "time": 45035.31005859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.356114480563749,
    "avg_bits_err_output": 15.356114480563749,
    "avg_bits_err_improve": 0,
    "time": 61812.66748046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g 2e+137) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (* (- g h) (+ g h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a))))))))",
    "output_parens": 68,
    "avg_bits_err_input": 35.675476118018906,
    "avg_bits_err_output": 17.523543837046024,
    "avg_bits_err_improve": 18.151932280972883,
    "time": 73115.06591796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9892528203183604,
    "avg_bits_err_output": 0.024344360937770433,
    "avg_bits_err_improve": 0.9649084593805899,
    "time": 18201.38525390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (- (+ (exp a) (expm1 b)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.6456981203125902,
    "avg_bits_err_output": 0.6654620171608353,
    "avg_bits_err_improve": -0.01976389684824509,
    "time": 12903.6875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.785799122496455,
    "avg_bits_err_output": 11.785799122496455,
    "avg_bits_err_improve": 0,
    "time": 24452.903076171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4428257887595321,
    "avg_bits_err_output": 0.396125,
    "avg_bits_err_improve": 0.0467007887595321,
    "time": 9574.02783203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.11726904540219,
    "avg_bits_err_output": 15.877288218645386,
    "avg_bits_err_improve": 37.239980826756806,
    "time": 18355.250244140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.7380536978855154,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.7380536978855154,
    "time": 2540.391357421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0.002125,
    "time": 38361.13134765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1214.04345703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+32) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 1e+120) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (- (* (+ (* r (* r w)) 1.0) w) w)) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (- (* (* 0.375 (* r w)) w) (* w (* v (* (* r w) 0.25))))) (- 1.0 v)))))",
    "output_parens": 45,
    "avg_bits_err_input": 12.970045637983286,
    "avg_bits_err_output": 6.23852161719245,
    "avg_bits_err_improve": 6.731524020790837,
    "time": 32099.48974609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (* x1 4.0) (+ -6.0 (* 2.0 (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)))))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5116868640749087,
    "avg_bits_err_output": 0.26554619789293965,
    "avg_bits_err_improve": 0.24614066618196906,
    "time": 76619.26123046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.28419832474688,
    "avg_bits_err_output": 18.28419832474688,
    "avg_bits_err_improve": 0,
    "time": 22398.971435546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x x) (* 0.12900613773279798 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.22184436093777044,
    "avg_bits_err_output": 0.1892099625007211,
    "avg_bits_err_improve": 0.03263439843704932,
    "time": 19966.86083984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0021981203125901443,
    "avg_bits_err_output": 0.0021981203125901443,
    "avg_bits_err_improve": 0,
    "time": 3162.76171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.084617614909417,
    "avg_bits_err_output": 9.343907395352737,
    "avg_bits_err_improve": 4.74071021955668,
    "time": 40868.389404296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (exp (* x (- -1.0 eps))) (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (* x (- -1.0 eps)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 18,
    "avg_bits_err_input": 30.466625857289806,
    "avg_bits_err_output": 0.9537513229732522,
    "avg_bits_err_improve": 29.512874534316552,
    "time": 38422.4482421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.013125,
    "avg_bits_err_output": 0.015125,
    "avg_bits_err_improve": -0.002,
    "time": 14586.222900390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017125,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0,
    "time": 42124.665283203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) -1.0) (/ (+ t t) (+ t 1.0))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.0075,
    "avg_bits_err_output": 0.013084962500721158,
    "avg_bits_err_improve": -0.005584962500721158,
    "time": 16580.883544921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2515.6357421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2857.9375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4057.006591796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.808299539132032,
    "avg_bits_err_output": 0.252125,
    "avg_bits_err_improve": 7.556174539132032,
    "time": 46993.019287109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.307054420725671,
    "avg_bits_err_output": 7.307054420725671,
    "avg_bits_err_improve": 0,
    "time": 31288.3876953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 15.95912717625473,
    "avg_bits_err_output": 0.015790241011860922,
    "avg_bits_err_improve": 15.94333693524287,
    "time": 11782.432373046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (cos x) (* (pow (exp 10.0) (* x x)) (/ 1.0 (cos x)))))",
    "output_parens": 10,
    "avg_bits_err_input": 3.540502444771896,
    "avg_bits_err_output": 3.072581969258465,
    "avg_bits_err_improve": 0.46792047551343074,
    "time": 41312.550048828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.68810725363533,
    "avg_bits_err_output": 14.68810725363533,
    "avg_bits_err_improve": 0,
    "time": 37547.202392578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.506265881854695,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.506265881854695,
    "time": 4455.088623046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.6191748059602,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.6189248059602,
    "time": 4059.57666015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.3005,
    "avg_bits_err_improve": 63.6995,
    "time": 6575.802978515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325373223181,
    "avg_bits_err_output": 0.41032312031259016,
    "avg_bits_err_improve": 61.43293061191922,
    "time": 24933.113037109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.04895770910524,
    "avg_bits_err_output": 34.04895770910524,
    "avg_bits_err_improve": 0,
    "time": 21525.359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b -1.32e+154) (/ (- (log (pow (exp (/ 1.0 (fma a (* c -4.0) (* b b)))) (pow (fma a (* c -4.0) (* b b)) 1.5))) b) (* a 2.0)) (if (<= b 2.6e+146) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (- (+ (/ (- (log (pow (exp (pow (fma a (* c -4.0) (* b b)) 0.75)) (sqrt (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))))) b) (+ a a)) 1.0) 1.0)))",
    "output_parens": 45,
    "avg_bits_err_input": 34.52001636568025,
    "avg_bits_err_output": 32.918345833344844,
    "avg_bits_err_improve": 1.6016705323354046,
    "time": 47905.330322265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2481.184814453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.70703321656496,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 39.69715821656496,
    "time": 12316.831298828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.166642772734377,
    "avg_bits_err_output": 20.166642772734377,
    "avg_bits_err_improve": 0,
    "time": 4454.678466796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6594213341394606,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6594213341394606,
    "time": 6194.904296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.041125,
    "avg_bits_err_output": 0.0035,
    "avg_bits_err_improve": 0.037625,
    "time": 11084.7529296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.019896240625180292,
    "avg_bits_err_output": 0.019896240625180292,
    "avg_bits_err_improve": 0,
    "time": 4268.9619140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.01225,
    "time": 7779.550048828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.00075,
    "time": 2457.141845703125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ c b) (+ d a)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4036797000057695,
    "avg_bits_err_output": 0.240625,
    "avg_bits_err_improve": 0.16305470000576952,
    "time": 10802.291748046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(log (exp (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.16991500837944,
    "avg_bits_err_output": 30.19831628877744,
    "avg_bits_err_improve": -0.028401280398000495,
    "time": 57460.8671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(+ (- x (sqrt (- (* x x) eps))) (* (* (- (* x x) eps) (sqrt (- (* x x) eps))) (* (- (- (log1p (expm1 (* x (* x (/ -1.0 (- (* x x) eps)))))) -1.0) (* (/ -1.0 (- (* x x) eps)) eps)) (/ 1.0 (- (* x x) eps)))))",
    "output_parens": 29,
    "avg_bits_err_input": 24.579067066851806,
    "avg_bits_err_output": 21.83951551205063,
    "avg_bits_err_improve": 2.7395515548011744,
    "time": 29226.3544921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (+ 1.0 (- (/ (- x (sin x)) (tan x)) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.935148109685397,
    "avg_bits_err_output": 29.93595256847045,
    "avg_bits_err_improve": -0.0008044587850548623,
    "time": 39376.59619140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006625,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 0,
    "time": 2307.032958984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0002) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.94170988204123,
    "avg_bits_err_output": 10.388738709877805,
    "avg_bits_err_improve": 37.552971172163424,
    "time": 53638.452392578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.3920867006932,
    "avg_bits_err_output": 26.3920867006932,
    "avg_bits_err_improve": 0,
    "time": 27364.599609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.16791257004547,
    "avg_bits_err_output": 26.16791257004547,
    "avg_bits_err_improve": 0,
    "time": 15577.830322265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03425,
    "avg_bits_err_output": 0.020240425366668893,
    "avg_bits_err_improve": 0.01400957463333111,
    "time": 4590.22265625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (+ (- ux (* ux maxCos)) (- (- ux (* ux maxCos)) (* (- (* ux maxCos) ux) (- (* ux maxCos) ux))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.265780636450266,
    "avg_bits_err_output": 0.5605666468088935,
    "avg_bits_err_improve": 12.705213989641372,
    "time": 41137.382080078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* (/ maxCos ux) (* ux ux)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.30430100271784,
    "avg_bits_err_output": 0.3196730845207355,
    "avg_bits_err_improve": 12.984627918197106,
    "time": 46372.295166015625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (fma (* (cos (* uy (fma PI 2.0 -1.0))) (sin uy)) yi (* (sin (* uy (fma PI 2.0 -1.0))) (* yi (cos uy)))))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.3331290051909574,
    "avg_bits_err_output": 0.33913607122862827,
    "avg_bits_err_improve": -0.006007066037670872,
    "time": 83826.4033203125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (log (exp (cos (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.20630759366319829,
    "avg_bits_err_output": 0.2066379086730966,
    "avg_bits_err_improve": -0.0003303150098983021,
    "time": 55130.51513671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5398968997108202,
    "avg_bits_err_output": 0.5288769337524822,
    "avg_bits_err_improve": 0.011019965958337985,
    "time": 44724.7421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (- (+ (cos (* u2 6.28318530718)) -1.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3178456279750203,
    "avg_bits_err_output": 0.3233862328708158,
    "avg_bits_err_improve": -0.005540604895795498,
    "time": 60149.736083984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma s (+ 1.0 (log (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0)))) (- s))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33478257062772354,
    "avg_bits_err_output": 0.3412125982052318,
    "avg_bits_err_improve": -0.006430027577508268,
    "time": 44603.134765625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05820654601193664,
    "avg_bits_err_output": 0.042984626865391985,
    "avg_bits_err_improve": 0.015221919146544652,
    "time": 16165.2587890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (* s (- (exp (/ (- (fabs x)) s)) -2.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1562500466966886,
    "avg_bits_err_output": 0.1405666729398255,
    "avg_bits_err_improve": 0.0156833737568631,
    "time": 34339.47314453125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6876513735889636,
    "avg_bits_err_output": 0.6843174074377069,
    "avg_bits_err_improve": 0.0033339661512566954,
    "time": 20084.921142578125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1753757084092386,
    "avg_bits_err_output": 0.1698505593086121,
    "avg_bits_err_improve": 0.005525149100626514,
    "time": 24491.522216796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5257487598013366,
    "avg_bits_err_output": 2.5257487598013366,
    "avg_bits_err_improve": 0,
    "time": 17832.980712890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (+ 1.0 (* (sinh (/ 1.0 v)) (* v 2.0))) 1.0))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46658294560228564,
    "avg_bits_err_output": 0.4721139916896795,
    "avg_bits_err_improve": -0.005531046087393854,
    "time": 61672.135498046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10410405243715923,
    "avg_bits_err_output": 0.10410405243715923,
    "avg_bits_err_improve": 0,
    "time": 10493.37548828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4685091442512029,
    "avg_bits_err_output": 0.4207302594763764,
    "avg_bits_err_improve": 0.0477788847748265,
    "time": 30549.364990234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (* (log (- 1.0 (/ (+ u -0.25) 0.75))) 3.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3159584407674125,
    "avg_bits_err_output": 1.049883329552006,
    "avg_bits_err_improve": 0.2660751112154065,
    "time": 57771.94775390625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.56426601420522,
    "avg_bits_err_output": 0.2115,
    "avg_bits_err_improve": 12.352766014205221,
    "time": 49272.760498046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI 6.0) (* r s))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13847928776050428,
    "avg_bits_err_output": 0.14307994905245738,
    "avg_bits_err_improve": -0.0046006612919531065,
    "time": 84304.5078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8646385385723694,
    "avg_bits_err_output": 0.844581559136661,
    "avg_bits_err_improve": 0.02005697943570839,
    "time": 46219.267333984375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (/ 1.0 PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.6857721731942664,
    "avg_bits_err_output": 0.5548451459444051,
    "avg_bits_err_improve": 0.13092702724986127,
    "time": 43807.45751953125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- u1)) (* (log1p (- u1)) (/ 1.0 (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 13.653590131905819,
    "avg_bits_err_output": 0.5122617684435917,
    "avg_bits_err_improve": 13.141328363462227,
    "time": 27231.498046875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (- (+ (cos (* 2.0 (* PI u2))) -1.0) -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 13.691179165085,
    "avg_bits_err_output": 0.30306841118387906,
    "avg_bits_err_improve": 13.38811075390112,
    "time": 48932.45068359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(+ (* (* alpha (- alpha)) (log1p (- u0))) (* (log1p (- u0)) (fma (- alpha) alpha (* alpha alpha))))",
    "output_parens": 12,
    "avg_bits_err_input": 14.174956408182862,
    "avg_bits_err_output": 0.3049906015629507,
    "avg_bits_err_improve": 13.869965806619911,
    "time": 31879.775146484375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.57253538117605,
    "avg_bits_err_output": 0.52233782451673,
    "avg_bits_err_improve": 12.050197556659318,
    "time": 22371.241943359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) 5e+126) (- (* PI l) (* (pow F -1.0) (* (tan (* PI l)) (pow F -1.0)))) (if (<= (* PI l) 5e+189) (- (* PI l) (fma (/ 1.0 (* F F)) (* (/ 1.0 (* F F)) (- (+ 1.0 (/ (tan (* PI l)) (/ 1.0 (* F F)))) 1.0)) 0.0)) (- (* PI l) (* (/ 1.0 (* F F)) (tan (expm1 (log1p (* PI l))))))))",
    "output_parens": 38,
    "avg_bits_err_input": 16.723557015822454,
    "avg_bits_err_output": 13.021411588934644,
    "avg_bits_err_improve": 3.7021454268878102,
    "time": 45885.35546875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2184387218755409,
    "avg_bits_err_output": 0.2184387218755409,
    "avg_bits_err_improve": 0,
    "time": 31616.4013671875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= x -5.6e+20) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))) (if (<= x 2.3e+15) (+ (- (- (+ (* 1.0 x) (* x (/ 1.0 (tan B)))) x)) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 14.13654311864041,
    "avg_bits_err_output": 12.810596862107078,
    "avg_bits_err_improve": 1.3259462565333315,
    "time": 59711.925048828125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (- (fma (/ 1.0 (/ PI 4.0)) (log (/ (+ (pow (exp f) (/ PI 4.0)) (pow (exp (- f)) (/ PI 4.0))) (- (expm1 (* f (/ PI 4.0))) (expm1 (* f (- (/ PI 4.0))))))) 1.0) 1.0))",
    "output_parens": 23,
    "avg_bits_err_input": 61.477159954499704,
    "avg_bits_err_output": 2.0280931588739266,
    "avg_bits_err_improve": 59.449066795625775,
    "time": 90742.96337890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.95e-162) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 1e-120) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 52,
    "avg_bits_err_input": 43.13593552709568,
    "avg_bits_err_output": 36.00810116128492,
    "avg_bits_err_improve": 7.127834365810763,
    "time": 33731.46337890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.142166604141708,
    "avg_bits_err_output": 4.142166604141708,
    "avg_bits_err_improve": 0,
    "time": 31127.6787109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0028867854942232,
    "avg_bits_err_output": 0.004875,
    "avg_bits_err_improve": 0.9980117854942232,
    "time": 11696.506103515625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (* (sqrt (* 2.0 (/ (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*))))) (+ n n)))) (hypot n n)) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+307) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (+ n n)) (sqrt (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))))))",
    "output_parens": 76,
    "avg_bits_err_input": 35.07639001983728,
    "avg_bits_err_output": 27.605493810267106,
    "avg_bits_err_improve": 7.470896209570171,
    "time": 50963.046630859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 1e+222) (/ 2.0 (* (sin k) (* (* (/ (pow t 3.0) (* l l)) (tan k)) (pow (/ k t) 2.0)))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 47.59580084174757,
    "avg_bits_err_output": 36.502079099911874,
    "avg_bits_err_improve": 11.093721741835694,
    "time": 57515.48974609375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (tan k) (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (sin k)))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.955668116995383,
    "avg_bits_err_output": 31.925411550648377,
    "avg_bits_err_improve": 0.030256566347006242,
    "time": 31789.55078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5340962437741605,
    "avg_bits_err_output": 0.5213580859622916,
    "avg_bits_err_improve": 0.012738157811868933,
    "time": 47841.76611328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow k -0.5) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5244609778208092,
    "avg_bits_err_output": 0.48615817029221464,
    "avg_bits_err_improve": 0.03830280752859461,
    "time": 51827.481201171875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (* (cos (/ K 2.0)) (- (expm1 l) (expm1 (- l))))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.133124816344267,
    "avg_bits_err_output": 0.064136842188131,
    "avg_bits_err_improve": 17.068987974156137,
    "time": 52567.538330078125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.002) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (- (+ (pow (- (/ (+ m n) 2.0) M) 2.0) 1.0) 1.0)))) (* (cos (- (/ (* (+ m n) (* K (- (* (+ m n) (exp (log1p (/ 1.0 (+ m n))))) (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.5280737184317,
    "avg_bits_err_output": 1.3929488769853533,
    "avg_bits_err_improve": 14.135124841446348,
    "time": 29055.21875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.995917481250363,
    "avg_bits_err_output": 17.995917481250363,
    "avg_bits_err_improve": 0,
    "time": 43097.406982421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 2e+127) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.067381665166643,
    "avg_bits_err_output": 9.872888250433755,
    "avg_bits_err_improve": 4.194493414732888,
    "time": 22869.878662109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.173273755806512,
    "avg_bits_err_output": 19.173273755806512,
    "avg_bits_err_improve": 0,
    "time": 27867.477294921875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* (* h D) (* D w))) (sqrt (- (pow (/ (* d (* d c0)) (* (* h D) (* D w))) 2.0) (* M M)))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.477399904622935,
    "avg_bits_err_output": 56.117908331031664,
    "avg_bits_err_improve": 3.3594915735912707,
    "time": 40183.4091796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+220) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (expm1 (log1p (* 0.5 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0)))))))))",
    "output_parens": 48,
    "avg_bits_err_input": 26.979217564542626,
    "avg_bits_err_output": 25.664797091878903,
    "avg_bits_err_improve": 1.3144204726637234,
    "time": 55257.593505859375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (exp -2.0) (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 15.441218408153023,
    "avg_bits_err_output": 14.973812440976644,
    "avg_bits_err_improve": 0.4674059671763793,
    "time": 102521.98193359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9848962406251803,
    "avg_bits_err_output": 0.011948120312590144,
    "avg_bits_err_improve": 0.9729481203125901,
    "time": 9123.90966796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4508996903074717,
    "avg_bits_err_output": 0.38140871217724287,
    "avg_bits_err_improve": 0.06949097813022881,
    "time": 18078.23193359375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01164624062518029,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.0002712406251802902,
    "time": 9829.765869140625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- (+ 1.0 (* 5.0 (* v v))) 1.0)) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5352647360209091,
    "avg_bits_err_output": 0.5542075845738269,
    "avg_bits_err_improve": -0.018942848552917835,
    "time": 12742.45654296875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.771707114896289,
    "avg_bits_err_output": 1.7632071148962891,
    "avg_bits_err_improve": 0.008499999999999952,
    "time": 24122.203857421875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (- (+ (expm1 (- (+ (/ (+ (+ EDonor Vef) (- mu Ec)) KbT) 1.0) 1.0)) 2.0) 1.0))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.03188787450397706,
    "avg_bits_err_output": 0.031077605542084885,
    "avg_bits_err_improve": 0.000810268961892173,
    "time": 22701.50341796875,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (* (* (fma a a (* b b)) (+ (+ (fma a a (* b b)) 1.0) -1.0)) 1.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.18579697249404314,
    "avg_bits_err_output": 0.18577573186886287,
    "avg_bits_err_improve": 2.1240625180274364e-05,
    "time": 21761.083740234375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (+ (fma b (* b (* a a)) (pow b 4.0)) (* (fma a a (* b b)) (* a a))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18888333395870788,
    "avg_bits_err_output": 0.10466537844198527,
    "avg_bits_err_improve": 0.0842179555167226,
    "time": 32014.8212890625,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18917557175431662,
    "avg_bits_err_output": 0.18917557175431662,
    "avg_bits_err_improve": 0,
    "time": 4843.12109375,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.556949941172181,
    "avg_bits_err_output": 13.556949941172181,
    "avg_bits_err_improve": 0,
    "time": 24079.07861328125,
    "seed": 4,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.4978094337969,
    "avg_bits_err_output": 0.032375,
    "avg_bits_err_improve": 40.4654344337969,
    "time": 5582.086669921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ x (- -1.0 (+ (sin x) -1.0))) (- (- (+ x -1.0) -1.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.936707880230397,
    "avg_bits_err_output": 26.15139212494374,
    "avg_bits_err_improve": 5.785315755286657,
    "time": 37685.390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.3296966223253,
    "avg_bits_err_output": 34.3296966223253,
    "avg_bits_err_improve": 0,
    "time": 29152.333251953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* a (- c))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.0714052041139,
    "avg_bits_err_output": 34.070546478510856,
    "avg_bits_err_improve": 0.0008587256030452295,
    "time": 20190.17333984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.100323104351038,
    "avg_bits_err_output": 30.808827168486904,
    "avg_bits_err_improve": 0.291495935864134,
    "time": 24825.09765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 3.4e+19) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 21,
    "avg_bits_err_input": 33.17957847590282,
    "avg_bits_err_output": 31.202824423290924,
    "avg_bits_err_improve": 1.9767540526118985,
    "time": 64506.295166015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.32475496090731,
    "avg_bits_err_output": 0.0165,
    "avg_bits_err_improve": 29.30825496090731,
    "time": 12424.4013671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (fma (/ 1.0 (+ 1.0 x)) (- (* (/ 1.0 (+ 1.0 x)) (- (+ 1.0 (* (/ 1.0 (+ 1.0 x)) (/ -1.0 (/ 1.0 (+ 1.0 x))))))) (- 1.0 (+ 1.0 (/ 1.0 (+ 1.0 x))))) (- (pow (/ 1.0 (+ 1.0 x)) 2.0))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x)))",
    "output_parens": 28,
    "avg_bits_err_input": 14.248885183343658,
    "avg_bits_err_output": 0.8138815254312373,
    "avg_bits_err_improve": 13.435003657912421,
    "time": 85274.69140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (* (+ (cos eps) -1.0) (cos x)) (* (sin x) (sin eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.46031141867641,
    "avg_bits_err_output": 6.2609274235168835,
    "avg_bits_err_improve": 33.19938399515953,
    "time": 30902.02392578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(fma (- -1.0 (cbrt (+ x 1.0))) (/ 1.0 (- -1.0 (cbrt (+ x 1.0)))) (- (fma (cbrt (+ x 1.0)) (* (- -1.0 (cbrt (+ x 1.0))) (/ 1.0 (- -1.0 (cbrt (+ x 1.0))))) -1.0) (cbrt x)))",
    "output_parens": 21,
    "avg_bits_err_input": 29.84055146491137,
    "avg_bits_err_output": 29.448073957750566,
    "avg_bits_err_improve": 0.3924775071608053,
    "time": 32294.44482421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (* (exp 1.0) (- (* (- (cos x)) (exp -1.0)) (- (exp -1.0)))) (sin x))",
    "output_parens": 11,
    "avg_bits_err_input": 30.386027519795867,
    "avg_bits_err_output": 30.485876331576836,
    "avg_bits_err_improve": -0.09984881178096927,
    "time": 40518.46435546875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* -4.0 a)) (* b b))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.196290081002864,
    "avg_bits_err_output": 34.19223999182593,
    "avg_bits_err_improve": 0.004050089176935501,
    "time": 22496.755126953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* b b) (* a (* c -4.0))))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.39471082197148,
    "avg_bits_err_output": 34.40488017063047,
    "avg_bits_err_improve": -0.010169348658990884,
    "time": 23200.56103515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (+ (/ (log1p (- x)) (log1p x)) -1.0) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 61.22634751687551,
    "avg_bits_err_output": 0.03963477500432692,
    "avg_bits_err_improve": 61.186712741871176,
    "time": 14563.18115234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00267498396311,
    "avg_bits_err_output": 0.06387772483613803,
    "avg_bits_err_improve": 62.93879725912697,
    "time": 53299.109130859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (* (/ 1.0 (/ (- 1.0 eps) (- eps -1.0))) (pow (/ (- 1.0 eps) (- eps -1.0)) 2.0)))) 1.0)",
    "output_parens": 12,
    "avg_bits_err_input": 58.54819709755006,
    "avg_bits_err_output": 58.575430992214976,
    "avg_bits_err_improve": -0.027233894664917102,
    "time": 70717.04956054688,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (/ (/ (/ 1.0 x) (/ 1.0 x)) (+ 1.0 (/ 1.0 x))) (+ (- (fma (+ 1.0 (/ 1.0 x)) (* (/ (/ 1.0 x) (/ 1.0 x)) (/ (/ 1.0 x) (+ 1.0 (/ 1.0 x)))) (- (/ 1.0 (tan x)))) (/ (/ 1.0 x) (/ 1.0 x))) (* (/ 1.0 x) (/ (/ (/ 1.0 x) (/ 1.0 x)) (+ 1.0 (/ 1.0 x))))))",
    "output_parens": 34,
    "avg_bits_err_input": 59.84548669582391,
    "avg_bits_err_output": 53.15136199629771,
    "avg_bits_err_improve": 6.694124699526199,
    "time": 60638.044189453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -7e-298) (/ (* eps (expm1 (* eps (+ a b)))) (- 0.0 (* (- (* (expm1 (* eps b)) (* (expm1 (* eps a)) (/ 1.0 (expm1 (* eps b)))))) (expm1 (* eps b))))) (if (<= eps 2.8e-172) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (* (expm1 (* eps b)) (+ (pow (exp a) eps) -1.0))) (/ (* eps (* (expm1 (* eps (+ a b))) (- (* (exp (* eps (+ a b))) (- (* (expm1 (* eps (+ a b))) (/ 1.0 (expm1 (* eps (+ a b))))))) (- (- (* (expm1 (* eps (+ a b))) (/ 1.0 (expm1 (* eps (+ a b)))))) (* (expm1 (* eps (+ a b))) (+ 1.0 (/ 1.0 (expm1 (* eps (+ a b)))))))))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 79,
    "avg_bits_err_input": 60.232625251042634,
    "avg_bits_err_output": 40.84784280959813,
    "avg_bits_err_improve": 19.384782441444507,
    "time": 56953.557861328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 40.86640520061961,
    "avg_bits_err_output": 0.054813860096926126,
    "avg_bits_err_improve": 40.81159134052268,
    "time": 10606.40087890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.54124921015561,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.54074921015561,
    "time": 2731.12255859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.52050738731715,
    "avg_bits_err_output": 0.01785342332290452,
    "avg_bits_err_improve": 29.502653963994245,
    "time": 3699.406982421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.214461849268176,
    "avg_bits_err_output": 28.22764167854361,
    "avg_bits_err_improve": 0.9868201707245667,
    "time": 34045.37451171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.843690680938964,
    "avg_bits_err_output": 9.843690680938964,
    "avg_bits_err_improve": 0,
    "time": 43002.609619140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.7119505772127,
    "avg_bits_err_output": 36.7119505772127,
    "avg_bits_err_improve": 0,
    "time": 39670.60986328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 30.01322397282652,
    "avg_bits_err_output": 25.695244903139447,
    "avg_bits_err_improve": 4.317979069687073,
    "time": 40012.136962890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.02781205846847,
    "avg_bits_err_output": 0.4006053891622778,
    "avg_bits_err_improve": 36.62720666930619,
    "time": 25734.96240234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.67262804726614,
    "avg_bits_err_output": 19.531790478319074,
    "avg_bits_err_improve": 0.14083756894706667,
    "time": 35513.5419921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.925742312787628,
    "avg_bits_err_output": 14.925742312787628,
    "avg_bits_err_improve": 0,
    "time": 17328.8876953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.887854101821585,
    "avg_bits_err_output": 1.3005975755771406,
    "avg_bits_err_improve": 28.587256526244445,
    "time": 26263.044189453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07366484475338013,
    "avg_bits_err_output": 0.07286152811111554,
    "avg_bits_err_improve": 0.0008033166422645871,
    "time": 53731.3359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.52721110657995,
    "avg_bits_err_output": 0.3022479328161958,
    "avg_bits_err_improve": 16.224963173763754,
    "time": 14507.621826171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (* PI (* (/ angle 180.0) (log (pow (exp (/ PI PI)) (/ (/ PI PI) PI))))) PI 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 19.863074373178627,
    "avg_bits_err_output": 19.910461847265644,
    "avg_bits_err_improve": -0.04738747408701727,
    "time": 68205.5908203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (sin (* PI (/ angle 180.0))) (* (- (pow b 2.0) (pow a 2.0)) (expm1 (log1p (cos (* PI (/ angle 180.0))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.767193257253773,
    "avg_bits_err_output": 31.763610031684923,
    "avg_bits_err_improve": 0.0035832255688497128,
    "time": 45400.779296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (fma PI (* PI (/ (/ angle 180.0) PI)) 0.0))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 19.959423476632974,
    "avg_bits_err_output": 19.96168007956554,
    "avg_bits_err_improve": -0.0022566029325652437,
    "time": 66514.54125976562,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(fma m (/ (- m (* m m)) v) (- m))",
    "output_parens": 5,
    "avg_bits_err_input": 0.18050055538953297,
    "avg_bits_err_output": 0.1733972650315709,
    "avg_bits_err_improve": 0.007103290357962061,
    "time": 35429.796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (- (tan x)) 1.0) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32558722911195537,
    "avg_bits_err_output": 0.32218475922053535,
    "avg_bits_err_improve": 0.0034024698914200124,
    "time": 55773.98828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13684436093777044,
    "avg_bits_err_output": 0.13684436093777044,
    "avg_bits_err_improve": 0,
    "time": 43489.5791015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.198816294993406,
    "avg_bits_err_output": 17.193047204826886,
    "avg_bits_err_improve": 0.005769090166520385,
    "time": 42826.97265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.18668749439654,
    "avg_bits_err_output": 45.80454879079039,
    "avg_bits_err_improve": 6.382138703606145,
    "time": 42326.07763671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma a (* c -4.0) (* b b)) (/ 1.0 (pow (sqrt (fma c (* a -4.0) (* b b))) 2.0)))) (- b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.44517071933788,
    "avg_bits_err_output": 28.36292714040053,
    "avg_bits_err_improve": 0.08224357893735146,
    "time": 37608.5859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.67076178833966,
    "avg_bits_err_output": 39.28421147141355,
    "avg_bits_err_improve": 4.386550316926112,
    "time": 32524.109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b -1.35e+154) (/ (- (+ 1.0 (- (log (pow (exp (pow (fma -4.0 (* c a) (* b b)) 0.75)) (sqrt (/ 1.0 (sqrt (fma -4.0 (* c a) (* b b))))))) 1.0)) b) (+ a a)) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 34.19223999182593,
    "avg_bits_err_output": 33.030906688078545,
    "avg_bits_err_improve": 1.1613333037473836,
    "time": 36045.125732421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8229353861021843,
    "avg_bits_err_output": 0.8229353861021843,
    "avg_bits_err_improve": 0,
    "time": 34020.13330078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.257231818172045,
    "avg_bits_err_output": 29.25921340235293,
    "avg_bits_err_improve": -0.001981584180885676,
    "time": 5752.275146484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.08868462277677,
    "avg_bits_err_output": 1.457200564063672,
    "avg_bits_err_improve": 56.6314840587131,
    "time": 19748.029296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.7514954079555,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 57.742370407955505,
    "time": 8302.85205078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007344360937770433,
    "avg_bits_err_output": 0.007344360937770433,
    "avg_bits_err_improve": 0,
    "time": 2084.03857421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (- (+ x (* x (* x (/ 1.0 (sqrt (fma x x -1.0)))))) (/ 1.0 (sqrt (fma x x -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 32.241125,
    "avg_bits_err_output": 21.61837689540332,
    "avg_bits_err_improve": 10.622748104596678,
    "time": 8958.175537109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.54673702084727,
    "avg_bits_err_output": 58.54810159084428,
    "avg_bits_err_improve": -0.0013645699970155079,
    "time": 79006.17919921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (* (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)) (* (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)) (/ 1.0 (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.04369812031259015,
    "avg_bits_err_output": 0.04457312031259015,
    "avg_bits_err_improve": -0.0008750000000000008,
    "time": 8941.84326171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t)))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.125375,
    "avg_bits_err_output": 0.124625,
    "avg_bits_err_improve": 0.0007499999999999868,
    "time": 36493.525634765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12607312031259016,
    "avg_bits_err_output": 0.12607312031259016,
    "avg_bits_err_improve": 0,
    "time": 49812.185302734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.01120546324586,
    "avg_bits_err_output": 3.5470393481337132,
    "avg_bits_err_improve": 35.46416611511214,
    "time": 63785.5263671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a (+ a b)) (* b (+ a b))) (* a a))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.543707163975762,
    "avg_bits_err_output": 14.557253424142894,
    "avg_bits_err_improve": -0.013546260167132118,
    "time": 6422.05419921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (fma (sin (asin (fma (cos theta) (* (sin delta) (cos phi1)) (expm1 (log1p (* (cos delta) (sin phi1))))))) (- (sin phi1)) (cos delta))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.14608197728352681,
    "avg_bits_err_output": 0.15092610131970507,
    "avg_bits_err_improve": -0.00484412403617826,
    "time": 45838.301513671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* a (fma (* c -3.0) (* c (* (/ (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* c -3.0)) -3.0)) 0.0)) (- (* b (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) b)) (* 3.0 a))",
    "output_parens": 23,
    "avg_bits_err_input": 52.19193956543452,
    "avg_bits_err_output": 45.849837364897546,
    "avg_bits_err_improve": 6.342102200536971,
    "time": 50470.492431640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.628214395472614,
    "avg_bits_err_output": 28.57248817826433,
    "avg_bits_err_improve": 0.05572621720828508,
    "time": 29231.99267578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) -1.0))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.76212072528842,
    "avg_bits_err_output": 39.3754875429922,
    "avg_bits_err_improve": 4.386633182296222,
    "time": 31042.217041015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.24197516158707,
    "avg_bits_err_output": 34.24197516158707,
    "avg_bits_err_improve": 0,
    "time": 22922.44873046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (cos (- lambda1 lambda2)) (sin phi1)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.380679768160723,
    "avg_bits_err_output": 13.382218196726374,
    "avg_bits_err_improve": -0.0015384285656505625,
    "time": 49724.064208984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 28.462837068428296,
    "avg_bits_err_output": 28.470358205189886,
    "avg_bits_err_improve": -0.0075211367615892755,
    "time": 36471.92529296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 5857.806640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 13.97788253504498,
    "avg_bits_err_output": 13.97788253504498,
    "avg_bits_err_improve": 0,
    "time": 27326.837890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2e-310) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (* -1.0 (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (sqrt (* F -2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (* (sqrt F) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.02378954338342,
    "avg_bits_err_output": 46.84710131989561,
    "avg_bits_err_improve": 5.176688223487815,
    "time": 55033.56396484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.71015275926808,
    "avg_bits_err_output": 29.71015275926808,
    "avg_bits_err_improve": 0,
    "time": 58545.20361328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -6.6e-299) (/ (- (* (sqrt (- F)) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt F) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* (pow B 2.0) 2.0) (* (* A C) 8.0)))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.740710839481196,
    "avg_bits_err_output": 47.3789572371369,
    "avg_bits_err_improve": 5.361753602344294,
    "time": 49784.0791015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.789346630896121,
    "avg_bits_err_output": 15.789346630896121,
    "avg_bits_err_improve": 0,
    "time": 53051.553466796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.32e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-228) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 4e+139) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (- 1.0 g) (- (sqrt (- (* g g) (* h h))) 1.0))))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (- (* (sqrt (- g h)) (+ (sqrt (+ g h)) 1.0)) g) (sqrt (- g h)))))))))",
    "output_parens": 94,
    "avg_bits_err_input": 35.98163594674697,
    "avg_bits_err_output": 10.827372274220574,
    "avg_bits_err_improve": 25.154263672526397,
    "time": 70803.26098632812,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9887885503953355,
    "avg_bits_err_output": 0.029969360937770435,
    "avg_bits_err_improve": 0.9588191894575651,
    "time": 14700.6201171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.684625,
    "avg_bits_err_output": 0.684625,
    "avg_bits_err_improve": 0,
    "time": 7107.5576171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.217747438681487,
    "avg_bits_err_output": 11.217747438681487,
    "avg_bits_err_improve": 0,
    "time": 13697.1630859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.471054483806003,
    "avg_bits_err_output": 0.40075,
    "avg_bits_err_improve": 0.07030448380600302,
    "time": 11678.95703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 2.0) (log1p (+ (+ -1.0 (/ 1.0 (hypot 1.0 x))) (- x (* (/ 1.0 (hypot 1.0 x)) (- (* x x)))))) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 53.0760533601966,
    "avg_bits_err_output": 11.315333426768623,
    "avg_bits_err_improve": 41.76071993342798,
    "time": 24633.6953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.739294068766958,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.739294068766958,
    "time": 2177.3623046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ x 1.0)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ x 1.0)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.015448120312590146,
    "avg_bits_err_improve": -0.002073120312590146,
    "time": 9911.531005859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1536.797607421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -3e+133) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* r w)))) (- 1.0 v))) (if (<= r 6.4e-62) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (* (- 0.375 (* v 0.25)) (* r w)) r)) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* r (* w (- 0.375 (* v 0.25)))))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.425687634112146,
    "avg_bits_err_output": 6.693992022628708,
    "avg_bits_err_improve": 5.731695611483437,
    "time": 34844.078125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ -6.0 (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0)) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.51500260748199,
    "avg_bits_err_output": 0.2628777343100877,
    "avg_bits_err_improve": 0.2521248731719023,
    "time": 76913.76953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.304213894702073,
    "avg_bits_err_output": 18.304213894702073,
    "avg_bits_err_improve": 0,
    "time": 43448.21240234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.26071275847734965,
    "avg_bits_err_output": 0.18391484475338007,
    "avg_bits_err_improve": 0.07679791372396957,
    "time": 31883.49462890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0021009193652572005,
    "avg_bits_err_output": 0.0021009193652572005,
    "avg_bits_err_improve": 0,
    "time": 3077.563232421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.757174470309106,
    "avg_bits_err_output": 9.008280673434946,
    "avg_bits_err_improve": 4.74889379687416,
    "time": 63082.177490234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (exp (* x (- -1.0 eps))) (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (* x (- -1.0 eps)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 18,
    "avg_bits_err_input": 30.03112156650771,
    "avg_bits_err_output": 0.9045180916804294,
    "avg_bits_err_improve": 29.12660347482728,
    "time": 36389.68017578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0,
    "time": 9123.048583984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.015625,
    "avg_bits_err_improve": 0,
    "time": 29851.1552734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- 1.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.0095,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 0.002875,
    "time": 27071.99462890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3116.877197265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2905.266845703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4128.648681640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8371841634018695,
    "avg_bits_err_output": 0.247375,
    "avg_bits_err_improve": 7.58980916340187,
    "time": 70962.09399414062,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.484800959171523,
    "avg_bits_err_output": 7.484800959171523,
    "avg_bits_err_improve": 0,
    "time": 52517.37353515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 16.244735096869938,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 16.23086009686994,
    "time": 14246.726318359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (- (+ (cos x) 2.0) 1.0) (pow (exp 10.0) (* x x))) (pow (exp 10.0) (* x x)))",
    "output_parens": 11,
    "avg_bits_err_input": 3.5386042855481405,
    "avg_bits_err_output": 3.0530923055936516,
    "avg_bits_err_improve": 0.4855119799544889,
    "time": 47376.056640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.0717478663596,
    "avg_bits_err_output": 15.0717478663596,
    "avg_bits_err_improve": 0,
    "time": 28677.870849609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.06648705772956,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.06648705772956,
    "time": 4061.743896484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.12558211302138,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.124832113021384,
    "time": 5014.981689453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.287625,
    "avg_bits_err_improve": 63.712375,
    "time": 4900.425048828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325561318282,
    "avg_bits_err_output": 0.389712406251803,
    "avg_bits_err_improve": 61.453543206931016,
    "time": 22248.999267578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* b b) (* a (* c -4.0))))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.39471082197148,
    "avg_bits_err_output": 34.40488017063047,
    "avg_bits_err_improve": -0.010169348658990884,
    "time": 25368.913818359375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b -1.35e+154) (/ (- (+ 1.0 (- (log (pow (exp (pow (fma -4.0 (* c a) (* b b)) 0.75)) (sqrt (/ 1.0 (sqrt (fma -4.0 (* c a) (* b b))))))) 1.0)) b) (+ a a)) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 34.19223999182593,
    "avg_bits_err_output": 33.030906688078545,
    "avg_bits_err_improve": 1.1613333037473836,
    "time": 38572.005615234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1932.0419921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.9475805527553,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 39.9349555527553,
    "time": 11253.6220703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.49962911266229,
    "avg_bits_err_output": 20.501046593912648,
    "avg_bits_err_improve": -0.0014174812503569,
    "time": 7064.064208984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.672973892985605,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.672973892985605,
    "time": 5852.901123046875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.03725,
    "time": 7854.6875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.024594360937770437,
    "avg_bits_err_output": 0.012,
    "avg_bits_err_improve": 0.012594360937770437,
    "time": 4194.986083984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016875,
    "avg_bits_err_output": 0.015875,
    "avg_bits_err_improve": 0.0010000000000000009,
    "time": 6580.089599609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.001,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.001,
    "time": 2969.93896484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40579285781763874,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 0.16279285781763875,
    "time": 8093.0732421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.059580929313302,
    "avg_bits_err_output": 30.059588741307827,
    "avg_bits_err_improve": -7.81199452504211e-06,
    "time": 59387.837646484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 23.885156494912707,
    "avg_bits_err_output": 23.885156494912707,
    "avg_bits_err_improve": 0,
    "time": 25368.970703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (fma (sin x) (/ -1.0 (sin x)) 1.0) (- (+ 1.0 (+ 2.0 (- (+ (sin x) -1.0) 1.0))) 1.0))) (tan x))",
    "output_parens": 16,
    "avg_bits_err_input": 30.292814726161268,
    "avg_bits_err_output": 30.269211602978583,
    "avg_bits_err_improve": 0.023603123182684982,
    "time": 42044.79541015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006415241011860921,
    "avg_bits_err_output": 0.006415241011860921,
    "avg_bits_err_improve": 0,
    "time": 2403.3681640625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-291) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-12) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.69810470040508,
    "avg_bits_err_output": 11.029499185194211,
    "avg_bits_err_improve": 36.66860551521087,
    "time": 55298.0849609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.18973041289681,
    "avg_bits_err_output": 26.18973041289681,
    "avg_bits_err_improve": 0,
    "time": 32135.4384765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.389734815961095,
    "avg_bits_err_output": 26.388984815961095,
    "avg_bits_err_improve": 0.0007500000000000284,
    "time": 16756.985107421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03575,
    "avg_bits_err_output": 0.01993080161791619,
    "avg_bits_err_improve": 0.01581919838208381,
    "time": 7203.146728515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (+ (- ux (* ux maxCos)) (* ux (* (- ux (fma ux maxCos 1.0)) (+ maxCos -1.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 13.63824748318509,
    "avg_bits_err_output": 0.540128535806488,
    "avg_bits_err_improve": 13.098118947378602,
    "time": 35860.3095703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* PI (+ uy uy))) (sqrt (- (fma ux (- (* ux maxCos) ux) ux) (* ux (+ maxCos (* (fma ux maxCos 1.0) (+ -1.0 maxCos)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.67436470532853,
    "avg_bits_err_output": 0.3152874990739519,
    "avg_bits_err_improve": 13.359077206254579,
    "time": 39310.875732421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.34068761311264495,
    "avg_bits_err_output": 0.32787642761136493,
    "avg_bits_err_improve": 0.01281118550128002,
    "time": 86246.38647460938,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (/ (+ 1.0 (cos (* 2.0 (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))))) 2.0) (* alphax alphax)) (/ (pow (sin (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))) 2.0) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 30,
    "avg_bits_err_input": 0.1992922197419501,
    "avg_bits_err_output": 0.2409942975082497,
    "avg_bits_err_improve": -0.04170207776629958,
    "time": 33813.47900390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (- (* (- (* 0.0 (/ 0.0 (/ u1 (- 1.0 u1)))) 0.0) (* (/ u1 (- 1.0 u1)) (/ (/ 1.0 (/ u1 (- 1.0 u1))) (/ u1 (- 1.0 u1))))) (* (* (/ u1 (- 1.0 u1)) (/ (/ 1.0 (/ u1 (- 1.0 u1))) (/ u1 (- 1.0 u1)))) (* (/ (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1))) (- (/ u1 (- 1.0 u1)))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 42,
    "avg_bits_err_input": 0.543569304548471,
    "avg_bits_err_output": 0.5424345826362742,
    "avg_bits_err_improve": 0.0011347219121967678,
    "time": 35607.996337890625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(+ (* (sqrt (/ u1 (- 1.0 u1))) (- (cos (* u2 6.28318530718)) 1.0)) (sqrt (/ u1 (- 1.0 u1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3151450401005405,
    "avg_bits_err_output": 0.3288504305415999,
    "avg_bits_err_improve": -0.013705390441059395,
    "time": 47829.57763671875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- (log1p (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -2.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.32963404237189015,
    "avg_bits_err_output": 0.3311669216726194,
    "avg_bits_err_improve": -0.0015328793007292618,
    "time": 40689.977783203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06665255881401566,
    "avg_bits_err_output": 0.04779782351295715,
    "avg_bits_err_improve": 0.01885473530105851,
    "time": 16631.7333984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (* s (- (exp (/ (- (fabs x)) s)) -2.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.16605002735452667,
    "avg_bits_err_output": 0.15200482327376144,
    "avg_bits_err_improve": 0.014045204080765233,
    "time": 39960.1298828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (exp (log (/ (sin (* x PI)) (* x PI)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.659869554704408,
    "avg_bits_err_output": 0.6602775697691672,
    "avg_bits_err_improve": -0.0004080150647591818,
    "time": 28274.37109375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.16408674862765432,
    "avg_bits_err_output": 0.163958759033323,
    "avg_bits_err_improve": 0.00012798959433132917,
    "time": 30221.47802734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.51106599356844,
    "avg_bits_err_output": 2.51106599356844,
    "avg_bits_err_improve": 0,
    "time": 53205.006591796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v v)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4632674196993997,
    "avg_bits_err_output": 0.4791979642133846,
    "avg_bits_err_improve": -0.0159305445139849,
    "time": 48861.591552734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (- 0.6931 (/ (* sinTheta_i sinTheta_O) v)))) (* (/ 1.0 (+ v v)) (fma (/ 1.0 (/ 1.0 (+ v v))) (* (/ (/ (/ 1.0 (+ v v)) (/ 1.0 (+ v v))) (/ 1.0 (/ 1.0 (+ v v)))) (+ 1.0 (/ 1.0 (/ 1.0 (+ v v))))) -1.0))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.11598676697993002,
    "avg_bits_err_output": 0.11329607767262985,
    "avg_bits_err_improve": 0.0026906893073001675,
    "time": 60111.837158203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (+ (pow alpha (* PI 2.0)) 0.0)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4787302764106153,
    "avg_bits_err_output": 0.4346592054346496,
    "avg_bits_err_improve": 0.04407107097596569,
    "time": 23503.684814453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 (- (log1p (- (/ (+ u -0.25) 0.75))))) s)",
    "output_parens": 7,
    "avg_bits_err_input": 1.3375915294041014,
    "avg_bits_err_output": 0.556129128237917,
    "avg_bits_err_improve": 0.7814624011661844,
    "time": 46235.84814453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.364197765594707,
    "avg_bits_err_output": 0.202875,
    "avg_bits_err_improve": 12.161322765594706,
    "time": 41355.5732421875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (/ s r) (* (* PI 6.0) (* r r)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1322888898725968,
    "avg_bits_err_output": 0.13357895716118887,
    "avg_bits_err_improve": -0.0012900672885920728,
    "time": 105376.90844726562,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8834567869471265,
    "avg_bits_err_output": 0.8877487154007021,
    "avg_bits_err_improve": -0.004291928453575622,
    "time": 57910.665283203125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (exp (log1p (log1p (expm1 (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) -1.0))))) 0.0) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.6912347107001349,
    "avg_bits_err_output": 0.7189571500555699,
    "avg_bits_err_improve": -0.027722439355435058,
    "time": 63145.606689453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.64238750509035,
    "avg_bits_err_output": 0.5391015339916457,
    "avg_bits_err_improve": 13.103285971098703,
    "time": 29604.6025390625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (exp (log (* (* 2.0 PI) u2)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.697039825434446,
    "avg_bits_err_output": 0.31024361968983477,
    "avg_bits_err_improve": 13.386796205744611,
    "time": 49321.130615234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.002637804717528,
    "avg_bits_err_output": 0.211625,
    "avg_bits_err_improve": 13.791012804717528,
    "time": 31566.416259765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.555530842915715,
    "avg_bits_err_output": 0.5144960151265633,
    "avg_bits_err_improve": 12.041034827789153,
    "time": 21857.150634765625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (+ (- (* l (/ PI l)) l) l)))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.697940926346046,
    "avg_bits_err_output": 13.096839749542308,
    "avg_bits_err_improve": 3.6011011768037378,
    "time": 44372.727294921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21540127684030846,
    "avg_bits_err_output": 0.21540127684030846,
    "avg_bits_err_improve": 0,
    "time": 46353.482666015625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= x -42000.0) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))) (if (<= x 19000000.0) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 14.169776114473212,
    "avg_bits_err_output": 12.66623456406544,
    "avg_bits_err_improve": 1.5035415504077712,
    "time": 52213.414794921875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (+ (+ (log (/ (+ (pow (exp (/ PI 4.0)) f) (pow (exp f) (- (/ PI 4.0)))) (+ (- 0.0 (expm1 (* (/ PI 4.0) (- f)))) (expm1 (* (/ PI 4.0) f))))) -1.0) 1.0)))",
    "output_parens": 25,
    "avg_bits_err_input": 61.24436236411623,
    "avg_bits_err_output": 2.1135680122053317,
    "avg_bits_err_improve": 59.13079435191089,
    "time": 55838.427490234375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.7e-160) (/ (- (+ (fma (- (sqrt 2.0)) (- t) (* (sqrt 2.0) (- t))) (* (+ (sqrt 2.0) -1.0) t)) (- t)) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 2.2e-165) (/ (* (sqrt 2.0) t) (sqrt (+ (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x))))) (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (fma (- (fabs l)) (fabs l) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 70,
    "avg_bits_err_input": 43.24177929978166,
    "avg_bits_err_output": 36.3025170810754,
    "avg_bits_err_improve": 6.939262218706261,
    "time": 36010.506103515625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (* 1.0 (* (sin kx) (log1p (expm1 (sin kx))))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 14,
    "avg_bits_err_input": 3.953121431623882,
    "avg_bits_err_output": 3.9647513191260453,
    "avg_bits_err_improve": -0.011629887502163427,
    "time": 51755.7734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.1960248549434027,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 1.1893998549434026,
    "time": 11520.251708984375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.343448877249196,
    "avg_bits_err_output": 10.343573877249197,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 135471.65771484375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -6.8e-115) (sqrt (- (* (* 2.0 (* n U)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 (* (* 2.0 (* n U)) (/ (* l l) Om))))) (if (<= n -5e-310) (* (sqrt (- n)) (sqrt (* (- (* (pow (/ l Om) 2.0) (* n (- U U*))) (- t (* 2.0 (/ (* l l) Om)))) (* 2.0 U)))) (* (sqrt (+ n n)) (sqrt (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 34.87608845753049,
    "avg_bits_err_output": 29.616565007815527,
    "avg_bits_err_improve": 5.259523449714965,
    "time": 46011.390380859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.66e+75) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (if (<= t 1.5e-113) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 47.433712742115276,
    "avg_bits_err_output": 36.12216937544265,
    "avg_bits_err_improve": 11.311543366672623,
    "time": 59099.4140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (sin k))) (tan k)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.875653945299014,
    "avg_bits_err_output": 32.84559241541693,
    "avg_bits_err_improve": 0.030061529882082993,
    "time": 38782.29736328125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (fma a1 a1 (* a2 a2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5192069578349481,
    "avg_bits_err_output": 0.5172375968971776,
    "avg_bits_err_improve": 0.001969360937770448,
    "time": 40615.55859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)) (pow k -0.5))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5133391902296772,
    "avg_bits_err_output": 0.4710491844017779,
    "avg_bits_err_improve": 0.042290005827899324,
    "time": 49952.85595703125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma J (* J (/ (cos (/ K 2.0)) J)) 0.0) (+ (exp (- l)) (- (exp l) (* (exp (- l)) 2.0)))) U)",
    "output_parens": 15,
    "avg_bits_err_input": 17.536522096306445,
    "avg_bits_err_output": 17.57326984597092,
    "avg_bits_err_improve": -0.03674774966447458,
    "time": 37535.66064453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 0.412) (* (- (* (cos (/ (* K (+ m n)) 2.0)) (cos (- M))) (/ (+ (sin (- (- M) (- (+ (/ (* K (+ m n)) 2.0) (/ PI 2.0)) PI))) (- (* (cos (- PI (/ (* K (+ m n)) 2.0))) (cos M)) (* (sin (/ (* K (+ m n)) 2.0)) (sin M)))) 2.0)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (- (* K (+ (/ (+ m n) K) 1.0)) K) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 80,
    "avg_bits_err_input": 15.244949337409441,
    "avg_bits_err_output": 9.769363607713517,
    "avg_bits_err_improve": 5.475585729695924,
    "time": 39362.9814453125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.66936560156295,
    "avg_bits_err_output": 17.66936560156295,
    "avg_bits_err_improve": 0,
    "time": 42947.97216796875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)) 0.001) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 13.942765264523583,
    "avg_bits_err_output": 8.82840640806587,
    "avg_bits_err_improve": 5.114358856457713,
    "time": 33878.8974609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.754043750378862,
    "avg_bits_err_output": 19.754043750378862,
    "avg_bits_err_improve": 0,
    "time": 36401.05126953125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(/ (* (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* D h)))) 2.0) (* M M)))) (/ c0 (+ w w))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 59.414281227251884,
    "avg_bits_err_output": 56.18695043677531,
    "avg_bits_err_improve": 3.2273307904765716,
    "time": 44259.172119140625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) INFINITY) (fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (log (pow (exp (/ h l)) (* 0.5 (pow (/ (* M D) (+ d d)) 2.0)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 26.216037983146116,
    "avg_bits_err_output": 24.888482765938715,
    "avg_bits_err_improve": 1.3275552172074008,
    "time": 43096.73974609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(exp (log (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.391789417137355,
    "avg_bits_err_output": 15.393227576323463,
    "avg_bits_err_improve": -0.0014381591861081233,
    "time": 19916.685302734375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9828202803030276,
    "avg_bits_err_output": 0.012219360937770433,
    "avg_bits_err_improve": 0.9706009193652572,
    "time": 12983.580322265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* (* v v) 5.0)) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4362961123149945,
    "avg_bits_err_output": 0.36301943327525754,
    "avg_bits_err_improve": 0.07327667903973695,
    "time": 26177.326904296875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01322491020269024,
    "avg_bits_err_output": 0.01339624062518029,
    "avg_bits_err_improve": -0.00017133042249004894,
    "time": 10587.512451171875,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5586795959272463,
    "avg_bits_err_output": 0.5586795959272463,
    "avg_bits_err_improve": 0,
    "time": 10197.753173828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.8344327472608766,
    "avg_bits_err_output": 1.8258596269482863,
    "avg_bits_err_improve": 0.008573120312590277,
    "time": 74297.96362304688,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02622911122411479,
    "avg_bits_err_output": 0.02622911122411479,
    "avg_bits_err_improve": 0,
    "time": 8308.589599609375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(fma b (* b 4.0) (+ (pow (fma a a (* b b)) 2.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.17661109062806482,
    "avg_bits_err_output": 0.17646485000288456,
    "avg_bits_err_improve": 0.0001462406251802606,
    "time": 4676.55517578125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma a (* a (* b b)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1904976065326843,
    "avg_bits_err_output": 0.0818015534038984,
    "avg_bits_err_improve": 0.1086960531287859,
    "time": 28943.8505859375,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18888481622889675,
    "avg_bits_err_output": 0.18888481622889675,
    "avg_bits_err_improve": 0,
    "time": 5826.7548828125,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(log (exp (sqrt (fma (/ x (sqrt (+ (* x x) (* 4.0 (* p p))))) 0.5 0.5))))",
    "output_parens": 10,
    "avg_bits_err_input": 12.998031364856104,
    "avg_bits_err_output": 13.008341621815207,
    "avg_bits_err_improve": -0.01031025695910337,
    "time": 23717.799072265625,
    "seed": 5,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (* (* (expm1 x) (/ 1.0 (expm1 x))) (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 40.94225197430117,
    "avg_bits_err_output": 0.07212458722997718,
    "avg_bits_err_improve": 40.87012738707119,
    "time": 7323.393310546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (- x (tan x)) (fma (pow (tan x) 2.0) (/ 1.0 (tan x)) (* (- (tan x)) (pow (* (/ 1.0 (tan x)) (tan x)) 2.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 31.00025058020758,
    "avg_bits_err_output": 30.131764762859817,
    "avg_bits_err_improve": 0.8684858173477643,
    "time": 50558.819580078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (* -1.0 (- (* c (* a (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) (- (* b_2 (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) b_2)) b_2))) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.10190090268774,
    "avg_bits_err_output": 32.20728910700638,
    "avg_bits_err_improve": 1.8946117956813566,
    "time": 25055.400634765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* (* a c) (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))) (- 0.0 (- (* b_2 (* (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))) b_2)) (- b_2)))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 34.40190670582469,
    "avg_bits_err_output": 33.058051612104464,
    "avg_bits_err_improve": 1.3438550937202294,
    "time": 24255.511474609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (log1p (+ (+ (expm1 (cos x)) 3.0) -3.0))) (* x x))",
    "output_parens": 8,
    "avg_bits_err_input": 31.351370300103493,
    "avg_bits_err_output": 31.203142386062563,
    "avg_bits_err_improve": 0.1482279140409304,
    "time": 47908.396728515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 7.8e+27) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (+ 1.0 (log1p x)) (/ 1.0 n)) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (exp (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n))))",
    "output_parens": 22,
    "avg_bits_err_input": 33.09710080445001,
    "avg_bits_err_output": 31.173859828239667,
    "avg_bits_err_improve": 1.9232409762103408,
    "time": 61122.653076171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.461923562613176,
    "avg_bits_err_output": 0.007625,
    "avg_bits_err_improve": 29.454298562613175,
    "time": 9268.539794921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.989250107322736,
    "avg_bits_err_output": 14.989250107322736,
    "avg_bits_err_improve": 0,
    "time": 46965.49951171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (* (cos 0.0) (- (sin eps))) (sin x) (- (* (cos x) (* (cos eps) (cos 0.0))) (cos x)))",
    "output_parens": 13,
    "avg_bits_err_input": 39.667621311749734,
    "avg_bits_err_output": 6.501749439692495,
    "avg_bits_err_improve": 33.16587187205724,
    "time": 30278.5771484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (- (cbrt (+ 1.0 x)) (+ 1.0 (cbrt x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.80329868934751,
    "avg_bits_err_output": 29.50163538960708,
    "avg_bits_err_improve": 0.3016632997404294,
    "time": 35222.362060546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.524368888568375,
    "avg_bits_err_output": 30.529593087117284,
    "avg_bits_err_improve": -0.005224198548908987,
    "time": 30870.711181640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (+ (* b b) (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.99866586007448,
    "avg_bits_err_output": 34.13674367081144,
    "avg_bits_err_improve": -0.13807781073695935,
    "time": 20822.788330078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c -8.0) (+ (* b b) (* a (* c 4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.516884818183726,
    "avg_bits_err_output": 34.53352331153297,
    "avg_bits_err_improve": -0.016638493349240946,
    "time": 25624.947509765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.15650823780998,
    "avg_bits_err_output": 0.022304323438491595,
    "avg_bits_err_improve": 61.13420391437149,
    "time": 21422.5068359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00680280572232,
    "avg_bits_err_output": 0.05769652229276702,
    "avg_bits_err_improve": 62.94910628342956,
    "time": 55955.16943359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (exp (+ -1.0 (/ (- 1.0 eps) (- eps -1.0))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.77462370524597,
    "avg_bits_err_output": 58.77591290938108,
    "avg_bits_err_improve": -0.0012892041351051375,
    "time": 83030.56665039062,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- 1.0 (- (* (/ 1.0 (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x)))) (+ 1.0 (pow (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x))) 2.0))) (/ 1.0 (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x))))))",
    "output_parens": 22,
    "avg_bits_err_input": 59.95306982695454,
    "avg_bits_err_output": 59.95309077119995,
    "avg_bits_err_improve": -2.094424541354556e-05,
    "time": 100246.81030273438,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps 1.7e-293) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps 5e-241) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps a))) (expm1 (* eps b)))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 39,
    "avg_bits_err_input": 60.128964569987595,
    "avg_bits_err_output": 40.875453654633226,
    "avg_bits_err_improve": 19.25351091535437,
    "time": 46461.87548828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.33835830818711,
    "avg_bits_err_output": 0.12894561052484174,
    "avg_bits_err_improve": 41.209412697662266,
    "time": 21297.06005859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.77604677655998,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.77529677655998,
    "time": 3164.71484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.492312971654627,
    "avg_bits_err_output": 0.024869335871256167,
    "avg_bits_err_improve": 29.467443635783372,
    "time": 4073.518310546875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (+ (* (expm1 (- x)) (exp 1.0)) (* (expm1 x) (exp 1.0))) (exp -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 30.160152882582313,
    "avg_bits_err_output": 29.176832612214167,
    "avg_bits_err_improve": 0.9833202703681465,
    "time": 31405.890380859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.983138448054993,
    "avg_bits_err_output": 9.983138448054993,
    "avg_bits_err_improve": 0,
    "time": 53338.404296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (* (* (tan (+ x eps)) (/ 1.0 (tan (+ x eps)))) (tan (+ x eps))) (tan x))",
    "output_parens": 11,
    "avg_bits_err_input": 37.213770144703545,
    "avg_bits_err_output": 37.27436393542496,
    "avg_bits_err_improve": -0.06059379072141269,
    "time": 45870.921630859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (exp (- (* 0.5 (log1p x)))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.254410173334666,
    "avg_bits_err_output": 25.85514827678705,
    "avg_bits_err_improve": 4.399261896547614,
    "time": 44677.64599609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.9918538104059,
    "avg_bits_err_output": 0.3780621644810415,
    "avg_bits_err_improve": 36.613791645924856,
    "time": 38680.94482421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.508638628069466,
    "avg_bits_err_output": 19.370183040846303,
    "avg_bits_err_improve": 0.13845558722316298,
    "time": 24608.365234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (atan (+ 1.0 N)) (+ (- -3.0 (atan N)) 3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 14.915952475671583,
    "avg_bits_err_output": 14.935784284436394,
    "avg_bits_err_improve": -0.019831808764811498,
    "time": 38079.54443359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.2586342510356,
    "avg_bits_err_output": 1.1996047253163828,
    "avg_bits_err_improve": 29.059029525719215,
    "time": 27028.25634765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- -1.0 (- m 2.0))) v) 1.0) (- 1.0 m))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07949080507553279,
    "avg_bits_err_output": 0.08202199952729532,
    "avg_bits_err_improve": -0.0025311944517625307,
    "time": 45370.972900390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.385552720969105,
    "avg_bits_err_output": 0.3090003765672777,
    "avg_bits_err_improve": 16.07655234440183,
    "time": 23165.976806640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (/ angle 180.0) (- (+ (/ PI (/ angle 180.0)) 1.0) 1.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.039304238767144,
    "avg_bits_err_output": 20.080927733509508,
    "avg_bits_err_improve": -0.04162349474236393,
    "time": 54411.809326171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log1p (expm1 (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.154669206096404,
    "avg_bits_err_output": 31.131283940099898,
    "avg_bits_err_improve": 0.023385265996505922,
    "time": 44758.433837890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma PI (* PI (/ (/ angle 180.0) PI)) 0.0))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.483593051521456,
    "avg_bits_err_output": 20.48023094217313,
    "avg_bits_err_improve": 0.003362109348326925,
    "time": 79696.72216796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17922236042698106,
    "avg_bits_err_output": 0.1786016481333793,
    "avg_bits_err_improve": 0.0006207122936017495,
    "time": 32571.27880859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.30791094300227856,
    "avg_bits_err_output": 0.31005635205488197,
    "avg_bits_err_improve": -0.0021454090526034086,
    "time": 52061.776123046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13743872187554088,
    "avg_bits_err_output": 0.13743872187554088,
    "avg_bits_err_improve": 0,
    "time": 28950.603515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos (- lambda1 lambda2)) (cos phi2)) (- (exp (log1p (cos phi1))) 1.0)))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 17.21888736549553,
    "avg_bits_err_output": 17.24744117496573,
    "avg_bits_err_improve": -0.02855380947019981,
    "time": 40412.76171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.45237299224613,
    "avg_bits_err_output": 45.97570942368661,
    "avg_bits_err_improve": 6.476663568559523,
    "time": 32700.296630859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (* (fma b b (* a (* c -4.0))) (fma (fma a (* c -4.0) (* b b)) (* (fma a (* c -4.0) (* b b)) (/ (/ 1.0 (fma a (* c -4.0) (* b b))) (fma a (* c -4.0) (* b b)))) 0.0))) b) (+ a a))",
    "output_parens": 24,
    "avg_bits_err_input": 28.379383801467668,
    "avg_bits_err_output": 28.399157690541383,
    "avg_bits_err_improve": -0.019773889073714912,
    "time": 35002.080078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.97590902782919,
    "avg_bits_err_output": 39.617454639788576,
    "avg_bits_err_improve": 4.358454388040613,
    "time": 25387.772216796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.99914084391831,
    "avg_bits_err_output": 34.134854183982085,
    "avg_bits_err_improve": -0.13571334006377356,
    "time": 23364.618408203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (* (sin (- lambda1 lambda2)) (* (sin (- lambda1 lambda2)) (/ 1.0 (sin (- lambda1 lambda2)))))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.8633101713535926,
    "avg_bits_err_output": 0.8850085742854633,
    "avg_bits_err_improve": -0.021698402931870753,
    "time": 37625.41357421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.561451474339556,
    "avg_bits_err_output": 29.561451474339556,
    "avg_bits_err_improve": 0,
    "time": 8918.122314453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (- (+ (exp x) (expm1 (- x))) -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 58.20251103404985,
    "avg_bits_err_output": 1.1873986843762623,
    "avg_bits_err_improve": 57.015112349673586,
    "time": 19736.082275390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.131545867547196,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.12417086754719,
    "time": 6684.407958984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009271240625180288,
    "avg_bits_err_output": 0.009271240625180288,
    "avg_bits_err_improve": 0,
    "time": 3644.414794921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (sqrt (* -1.0 (- 1.0 (* x x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 31.51375,
    "avg_bits_err_output": 31.513625,
    "avg_bits_err_improve": 0.00012500000000059686,
    "time": 8592.69091796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log1p (fma (/ 1.0 (/ (+ 1.0 x) (- 1.0 x))) (pow (/ (+ 1.0 x) (- 1.0 x)) 2.0) -1.0)) 0.5)",
    "output_parens": 11,
    "avg_bits_err_input": 58.766096294650104,
    "avg_bits_err_output": 58.7777036840993,
    "avg_bits_err_improve": -0.011607389449196148,
    "time": 69260.59838867188,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.01075,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 5683.531982421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.129375,
    "avg_bits_err_output": 0.1297712406251803,
    "avg_bits_err_improve": -0.00039624062518031633,
    "time": 34549.72509765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos t) (cos (atan (/ (* (- eh) (tan t)) ew))))) (* eh (* (sin t) (sin (atan (/ (* (- eh) (tan t)) ew)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12587595881547559,
    "avg_bits_err_output": 0.1257509588154756,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 44024.468994140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.35066410203863,
    "avg_bits_err_output": 3.7905688609331434,
    "avg_bits_err_improve": 35.560095241105486,
    "time": 63112.769287109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.618058391079979,
    "avg_bits_err_output": 14.618058391079979,
    "avg_bits_err_improve": 0,
    "time": 4670.529052734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (+ (fma (- (sin (asin (fma (* (cos phi1) (sin delta)) (cos theta) (* (cos delta) (sin phi1)))))) (sin phi1) (* (sin phi1) (sin (asin (fma (* (cos phi1) (sin delta)) (cos theta) (* (cos delta) (sin phi1))))))) (- (cos delta) (* (sin phi1) (sin (asin (fma (* (cos phi1) (sin delta)) (cos theta) (* (cos delta) (sin phi1))))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.15662077084698975,
    "avg_bits_err_output": 0.1539559880822681,
    "avg_bits_err_improve": 0.0026647827647216515,
    "time": 52286.159423828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) -1.0))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.47411886526256,
    "avg_bits_err_output": 45.97547314210041,
    "avg_bits_err_improve": 6.498645723162149,
    "time": 33578.031494140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma b b (* -3.0 (* a c)))) (sqrt (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))) (- b)) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.58994764020808,
    "avg_bits_err_output": 28.598576856649007,
    "avg_bits_err_improve": -0.008629216440926513,
    "time": 24616.359130859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 44.01911326624868,
    "avg_bits_err_output": 39.68916126211837,
    "avg_bits_err_improve": 4.329952004130313,
    "time": 33773.07470703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (sqrt (fma b b (* c (* a -3.0)))) (* (- b) (* (- b) (/ 1.0 (- b))))) (* 3.0 a))",
    "output_parens": 13,
    "avg_bits_err_input": 34.031625337564016,
    "avg_bits_err_output": 34.176648449067336,
    "avg_bits_err_improve": -0.14502311150332048,
    "time": 21174.805908203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.194486882436959,
    "avg_bits_err_output": 13.194486882436959,
    "avg_bits_err_improve": 0,
    "time": 56739.2880859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (fma (- (pow (/ (+ x 1.0) (+ x -1.0)) 2.0)) (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (* (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (pow (/ (+ x 1.0) (+ x -1.0)) 2.0))) (fma (/ 1.0 (/ (+ x 1.0) (+ x -1.0))) (- (pow (/ (+ x 1.0) (+ x -1.0)) 2.0)) (/ x (+ x 1.0))))",
    "output_parens": 32,
    "avg_bits_err_input": 29.358130577874952,
    "avg_bits_err_output": 29.37432010899058,
    "avg_bits_err_improve": -0.016189531115628597,
    "time": 47495.425048828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 0,
    "time": 4590.271240234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (pow (/ 1.0 (+ -1.0 x)) 2.0)) (- (- (/ 1.0 (+ -1.0 x))) (- (- (/ 1.0 (+ 1.0 x))) (pow (/ 1.0 (+ -1.0 x)) 2.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 14.85230374844709,
    "avg_bits_err_output": 12.920812767645163,
    "avg_bits_err_improve": 1.931490980801927,
    "time": 90600.09008789062,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1e-310) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (* 2.0 F)) (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.566082583251784,
    "avg_bits_err_output": 47.774888336104574,
    "avg_bits_err_improve": 4.79119424714721,
    "time": 50850.975830078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.75221806948308,
    "avg_bits_err_output": 29.75221806948308,
    "avg_bits_err_improve": 0,
    "time": 44848.305908203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F 3.6e-157) (/ (- (* (sqrt (+ (fma (- (* A (* C 4.0))) F (* A (* C (* F 4.0)))) (* (- (pow B 2.0) (* A (* C 4.0))) F))) (sqrt (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (* 2.0 F)) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (- (pow B 2.0) (* A (* C 4.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 55,
    "avg_bits_err_input": 52.30050522129833,
    "avg_bits_err_output": 48.75321398109447,
    "avg_bits_err_improve": 3.5472912402038617,
    "time": 49740.9365234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.34486327965288,
    "avg_bits_err_output": 15.34486327965288,
    "avg_bits_err_improve": 0,
    "time": 44579.615966796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g 2e+147) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))",
    "output_parens": 66,
    "avg_bits_err_input": 35.23042539824691,
    "avg_bits_err_output": 15.563152431206772,
    "avg_bits_err_improve": 19.667272967040134,
    "time": 55485.974853515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (/ (+ (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))) (cos (- (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0)) (* 2.0 PI)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.9899345875079336,
    "avg_bits_err_output": 0.030941165626622608,
    "avg_bits_err_improve": 0.958993421881311,
    "time": 11627.05615234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (+ (expm1 a) (expm1 b)) 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.7018656015629509,
    "avg_bits_err_output": 0.820292378612163,
    "avg_bits_err_improve": -0.11842677704921212,
    "time": 6176.459228515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.147461439121788,
    "avg_bits_err_output": 11.147461439121788,
    "avg_bits_err_improve": 0,
    "time": 22244.220703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (* x y) (- (* y (+ x x)) (log1p (exp x))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.44698812628009865,
    "avg_bits_err_output": 0.4339364816370412,
    "avg_bits_err_improve": 0.01305164464305747,
    "time": 14803.167236328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.36214296657906,
    "avg_bits_err_output": 15.936120453197441,
    "avg_bits_err_improve": 37.42602251338162,
    "time": 35220.079833984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.716441266604496,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.716441266604496,
    "time": 2288.70751953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (+ (+ (/ (- 1.0 x) (+ 1.0 x)) 2.0) -2.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.010875,
    "avg_bits_err_output": 0.013182428952329663,
    "avg_bits_err_improve": -0.0023074289523296633,
    "time": 12802.0224609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1261.910400390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -1.6e-25) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 1.4e+67) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (* (- 0.375 (* v 0.25)) (* r w)) r)) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (* (- 0.375 (* v 0.25)) (* r w)) w)) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.010359042811723,
    "avg_bits_err_output": 6.647823496879858,
    "avg_bits_err_improve": 6.362535545931865,
    "time": 41282.55322265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) (* x1 (+ (+ -6.0 (* 2.0 (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)))) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5076809803471464,
    "avg_bits_err_output": 0.26332062481232144,
    "avg_bits_err_improve": 0.24436035553482494,
    "time": 81223.52563476562,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.241386591681053,
    "avg_bits_err_output": 18.241386591681053,
    "avg_bits_err_improve": 0,
    "time": 21604.489990234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2251156015629507,
    "avg_bits_err_output": 0.18457556406367184,
    "avg_bits_err_improve": 0.04054003749927887,
    "time": 31346.091552734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003948120312590144,
    "avg_bits_err_output": 0.003948120312590144,
    "avg_bits_err_improve": 0,
    "time": 5031.6748046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.104115558514566,
    "avg_bits_err_output": 9.164952761253751,
    "avg_bits_err_improve": 4.939162797260815,
    "time": 40306.39697265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (- 1.0 (- (+ 1.0 (* eps x)) (- x)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 23,
    "avg_bits_err_input": 29.48144291384505,
    "avg_bits_err_output": 0.9077063365651946,
    "avg_bits_err_improve": 28.573736577279856,
    "time": 43961.03125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01225,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0,
    "time": 9442.469970703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.0155,
    "avg_bits_err_output": 0.017073120312590145,
    "avg_bits_err_improve": -0.0015731203125901455,
    "time": 40351.605224609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (* (- -1.0 (/ (+ t t) (+ 1.0 t))) (+ (/ (+ t t) (+ 1.0 t)) -1.0)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.07075,
    "avg_bits_err_output": 0.07357556406367184,
    "avg_bits_err_improve": -0.002825564063671848,
    "time": 25541.31494140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3456.164794921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3527.432373046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3589.153564453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.814598372922784,
    "avg_bits_err_output": 0.25275,
    "avg_bits_err_improve": 7.5618483729227846,
    "time": 55314.867919921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.403162216803511,
    "avg_bits_err_output": 7.403162216803511,
    "avg_bits_err_improve": 0,
    "time": 30027.1220703125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.029201965016785,
    "avg_bits_err_output": 0.01275,
    "avg_bits_err_improve": 16.016451965016785,
    "time": 13628.353759765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (pow (exp (* x 10.0)) x) (* (pow (pow (exp x) 10.0) x) (/ 1.0 (pow (exp (* x 10.0)) x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 3.552710306718202,
    "avg_bits_err_output": 2.0819322125382125,
    "avg_bits_err_improve": 1.4707780941799897,
    "time": 55411.1796875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.791668553750958,
    "avg_bits_err_output": 14.791668553750958,
    "avg_bits_err_improve": 0,
    "time": 21665.7900390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.593630075264166,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.593630075264166,
    "time": 4703.292236328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.00222041175863,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 39.00134541175863,
    "time": 5203.491455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.290875,
    "avg_bits_err_improve": 63.709125,
    "time": 5037.892578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.8432554647147,
    "avg_bits_err_output": 0.3962548875021637,
    "avg_bits_err_improve": 61.447000577212535,
    "time": 21637.471923828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma a (* c -8.0) (+ (* b b) (* a (* c 4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.516884818183726,
    "avg_bits_err_output": 34.53352331153297,
    "avg_bits_err_improve": -0.016638493349240946,
    "time": 24634.28515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.99914084391831,
    "avg_bits_err_output": 34.134854183982085,
    "avg_bits_err_improve": -0.13571334006377356,
    "time": 24488.602783203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2582.2587890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.88220275472192,
    "avg_bits_err_output": 0.018375,
    "avg_bits_err_improve": 39.86382775472192,
    "time": 6376.638427734375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.660100310055522,
    "avg_bits_err_output": 20.660100310055522,
    "avg_bits_err_improve": 0,
    "time": 2746.831787109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.675222906064817,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.675222906064817,
    "time": 5025.2021484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.039625,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03875,
    "time": 7711.222900390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma (+ a b) b (* a (+ a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.022073120312590146,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0.011198120312590147,
    "time": 6319.80078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01275,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.012499999999999999,
    "time": 8273.09130859375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 1736.67724609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ a (+ d (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40046033906799905,
    "avg_bits_err_output": 0.2525,
    "avg_bits_err_improve": 0.14796033906799905,
    "time": 8748.630615234375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (exp (+ 1.0 (log1p (- (cos x))))) (exp -1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 29.882990703357898,
    "avg_bits_err_output": 29.882993267908805,
    "avg_bits_err_improve": -2.564550907635521e-06,
    "time": 41383.29541015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.225150136310525,
    "avg_bits_err_output": 24.222525229119885,
    "avg_bits_err_improve": 0.0026249071906399024,
    "time": 20813.16455078125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (sin x) (* (fma (/ -1.0 (sin x)) (sin x) 1.0) (- (* (/ 1.0 (sin x)) (+ (sin x) 1.0)) (/ 1.0 (sin x)))))) (tan x))",
    "output_parens": 20,
    "avg_bits_err_input": 30.003921320546326,
    "avg_bits_err_output": 29.96541191698899,
    "avg_bits_err_improve": 0.038509403557334565,
    "time": 40231.6494140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007573120312590144,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006448120312590144,
    "time": 3743.3203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-10) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.94633672975809,
    "avg_bits_err_output": 10.698045807738326,
    "avg_bits_err_improve": 37.24829092201976,
    "time": 58118.822509765625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* b d) (* a c)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.152970838189805,
    "avg_bits_err_output": 26.152272717877214,
    "avg_bits_err_improve": 0.0006981203125917546,
    "time": 26317.53369140625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* d (- a))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.438523611620948,
    "avg_bits_err_output": 26.43802361162095,
    "avg_bits_err_improve": 0.0004999999999988347,
    "time": 14371.723388671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.033125,
    "avg_bits_err_output": 0.020360521314888556,
    "avg_bits_err_improve": 0.012764478685111446,
    "time": 18706.98193359375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(if (<= (* uy 2.0) 0.004600000102072954) (* (sin (- (* (exp (log1p (* 2.0 PI))) uy) uy)) (sqrt (- 1.0 (log (+ 1.0 (expm1 (pow (fma ux maxCos (- 1.0 ux)) 2.0))))))) (+ (fma (sin (* 2.0 (* uy PI))) (sqrt (- (expm1 (* 2.0 (log1p (fma ux maxCos (- ux))))))) 1.0) -1.0))",
    "output_parens": 30,
    "avg_bits_err_input": 13.686185619014726,
    "avg_bits_err_output": 11.254049869113864,
    "avg_bits_err_improve": 2.432135749900862,
    "time": 45804.264404296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (* ux (* ux maxCos)) (/ (- ux (fma ux ux (- (* (* ux maxCos) (+ (* ux (+ maxCos -1.0)) 2.0)) ux))) 1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.724063613141345,
    "avg_bits_err_output": 0.3309896220252116,
    "avg_bits_err_improve": 13.393073991116133,
    "time": 43124.014892578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* zi (- maxCos (* maxCos ux))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.3372387253491264,
    "avg_bits_err_output": 0.32603334615071927,
    "avg_bits_err_improve": 0.01120537919840714,
    "time": 97449.00659179688,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.20894844765789308,
    "avg_bits_err_output": 0.2090215679704832,
    "avg_bits_err_improve": -7.31203125901303e-05,
    "time": 46920.3154296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5538096882505927,
    "avg_bits_err_output": 0.49422504650558363,
    "avg_bits_err_improve": 0.059584641745009104,
    "time": 35661.771484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(+ (* (sqrt (/ u1 (- 1.0 u1))) (- (cos (* u2 6.28318530718)) 1.0)) (sqrt (/ u1 (- 1.0 u1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3207886334593113,
    "avg_bits_err_output": 0.3340109373939564,
    "avg_bits_err_improve": -0.013222303934645074,
    "time": 74105.20922851562,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (- (log (+ -1.0 (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ (expm1 (/ (- PI) s)) 2.0)))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3318218683702057,
    "avg_bits_err_output": 0.3329863060984217,
    "avg_bits_err_improve": -0.0011644377282160057,
    "time": 39858.208251953125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(pow (exp 1.0) (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.05961664007037485,
    "avg_bits_err_output": 0.05462055457085585,
    "avg_bits_err_improve": 0.004996085499519,
    "time": 40732.168701171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (- s (* s (- -1.0 (exp (/ (- (fabs x)) s))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12713487757054245,
    "avg_bits_err_output": 0.11498262348932092,
    "avg_bits_err_improve": 0.01215225408122153,
    "time": 33957.511962890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (- (* (sin (* PI (* x tau))) (cos (fma (- (* x tau)) PI (* PI (* x tau))))) (* (sin (- (/ PI 2.0) (* PI (* x tau)))) (sin (fma (- (* x tau)) PI (* PI (* x tau)))))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 31,
    "avg_bits_err_input": 0.6635499846456265,
    "avg_bits_err_output": 0.6520461974168075,
    "avg_bits_err_improve": 0.011503787228819062,
    "time": 26770.568603515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.161460654199401,
    "avg_bits_err_output": 0.15414467802558782,
    "avg_bits_err_improve": 0.007315976173813188,
    "time": 32351.706787109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5778873774689015,
    "avg_bits_err_output": 2.5778873774689015,
    "avg_bits_err_improve": 0,
    "time": 39626.9697265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (fma v 1.0 (* (+ -1.0 (* v (/ (* (sinh (/ 1.0 v)) 2.0) v))) v)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.45413552700512566,
    "avg_bits_err_output": 0.4713461297312542,
    "avg_bits_err_improve": -0.017210602726128565,
    "time": 51130.291015625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(- (* (* (- 1.0 (+ v v)) (* (/ 1.0 (+ v v)) (exp (+ (/ (* cosTheta_i cosTheta_O) v) (- (- 0.6931 (/ 1.0 v)) (/ (* sinTheta_i sinTheta_O) v)))))) (- (/ 1.0 (+ v v)))) (* (- (/ 1.0 (+ v v))) (* (/ 1.0 (+ v v)) (exp (+ (/ (* cosTheta_i cosTheta_O) v) (- (- 0.6931 (/ 1.0 v)) (/ (* sinTheta_i sinTheta_O) v)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 0.11152254660054957,
    "avg_bits_err_output": 0.11376494353379987,
    "avg_bits_err_improve": -0.002242396933250304,
    "time": 45267.883544921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(expm1 (log1p (/ (fma alpha alpha -1.0) (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (log (pow (* alpha alpha) PI))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4718355008318359,
    "avg_bits_err_output": 0.46526237996556413,
    "avg_bits_err_improve": 0.006573120866271764,
    "time": 27837.227294921875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (+ (* (log1p (- (/ (+ u -0.25) 0.75))) -3.0) 0.0))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3317612159065804,
    "avg_bits_err_output": 0.55776070792253,
    "avg_bits_err_improve": 0.7740005079840504,
    "time": 98274.03247070312,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (expm1 (log1p (- (log1p (* u -4.0))))))",
    "output_parens": 6,
    "avg_bits_err_input": 12.37033347220054,
    "avg_bits_err_output": 0.22151672969029437,
    "avg_bits_err_improve": 12.148816742510245,
    "time": 48142.072998046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* s (* PI (* 6.0 r)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1504416214531113,
    "avg_bits_err_output": 0.15631486660404378,
    "avg_bits_err_improve": -0.005873245150932488,
    "time": 96059.27709960938,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9471200880812249,
    "avg_bits_err_output": 0.9349642969878601,
    "avg_bits_err_improve": 0.012155791093364843,
    "time": 49787.56982421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (/ 1.0 PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.7033159359408594,
    "avg_bits_err_output": 0.5703247557882392,
    "avg_bits_err_improve": 0.13299118015262024,
    "time": 55373.33203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- 0.0 u1)) (* (log1p (- u1)) (/ (* (/ 1.0 (log1p (- u1))) (/ 1.0 (/ 1.0 (log1p (- u1))))) (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 23,
    "avg_bits_err_input": 13.689376373062071,
    "avg_bits_err_output": 0.5095404953565906,
    "avg_bits_err_improve": 13.17983587770548,
    "time": 29297.92529296875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (- (* (cos u2) (cos (- (* 2.0 (* u2 PI)) u2))) (* (sin u2) (sin (- (* 2.0 (* u2 PI)) u2)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.735547786346128,
    "avg_bits_err_output": 0.3383619726696475,
    "avg_bits_err_improve": 13.397185813676481,
    "time": 52648.52978515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.959537248136943,
    "avg_bits_err_output": 0.2115,
    "avg_bits_err_improve": 13.748037248136944,
    "time": 37645.573974609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.729088581998798,
    "avg_bits_err_output": 0.513475940701848,
    "avg_bits_err_improve": 12.21561264129695,
    "time": 25973.284423828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+16) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (fma l (/ PI l) l) l) 0.0)))) (if (<= (* PI l) 4e-44) (- (* PI l) (* (pow F -1.0) (* (tan (* PI l)) (pow F -1.0)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (- (* l (+ (/ PI l) 1.0)) l)))))))",
    "output_parens": 35,
    "avg_bits_err_input": 16.981408703704858,
    "avg_bits_err_output": 8.64903711549731,
    "avg_bits_err_improve": 8.332371588207549,
    "time": 45096.6513671875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2161770831999919,
    "avg_bits_err_output": 0.2131156015629507,
    "avg_bits_err_improve": 0.0030614816370412024,
    "time": 41851.65576171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 4e+292) (fma (- (/ 1.0 (tan B))) x (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B)))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.600603606515639,
    "avg_bits_err_output": 11.705260864646116,
    "avg_bits_err_improve": 1.8953427418695235,
    "time": 43471.097900390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.35017041931623,
    "avg_bits_err_output": 2.018197154794353,
    "avg_bits_err_improve": 59.33197326452188,
    "time": 64415.184326171875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.8e-145) (- (+ 1.0 (/ (* t (sqrt 2.0)) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l))))) 1.0) (if (<= t 1.15e-57) (/ (- (* (sqrt 2.0) (* (/ t (sqrt 2.0)) (+ 1.0 (sqrt 2.0)))) (* (sqrt 2.0) (/ t (sqrt 2.0)))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (fma (- l) l (* (/ (+ 1.0 x) (+ -1.0 x)) (* l l)))))) (- (+ 1.0 (/ (* t (sqrt 2.0)) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l))))) 1.0)))",
    "output_parens": 69,
    "avg_bits_err_input": 43.45845029640257,
    "avg_bits_err_output": 36.626102721455084,
    "avg_bits_err_improve": 6.832347574947484,
    "time": 44715.001708984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (fma (sin kx) (sin kx) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.052084893928113,
    "avg_bits_err_output": 4.048563653302932,
    "avg_bits_err_improve": 0.003521240625180333,
    "time": 43623.832275390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0803795705210955,
    "avg_bits_err_output": 0.007125,
    "avg_bits_err_improve": 1.0732545705210954,
    "time": 11557.236328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.079392923555607,
    "avg_bits_err_output": 10.079392923555607,
    "avg_bits_err_improve": 0,
    "time": 287352.6701660156,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -4.1e+80) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))) (if (<= n -1e-309) (* (sqrt (- n)) (sqrt (* (+ (- (* (- U U*) (* (pow (/ l Om) 2.0) n)) t) (* 2.0 (/ (* l l) Om))) (* 2.0 U)))) (* (sqrt n) (sqrt (* U (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0)))))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 34.06067149106098,
    "avg_bits_err_output": 28.565745668783308,
    "avg_bits_err_improve": 5.494925822277672,
    "time": 45891.613525390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.95e-108) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0)) (* (tan k) (* (tan k) (/ (sin k) (tan k)))))) (if (<= t 7.2e-57) (/ 2.0 (fma (* (pow (/ k t) 2.0) (* (sin (+ (- PI k) 0.0)) (tan k))) (exp (log1p (/ (pow t 3.0) (* l l)))) (* (sin k) (* (tan k) (- (pow (/ k t) 2.0)))))) (/ 2.0 (* (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k)))))",
    "output_parens": 52,
    "avg_bits_err_input": 47.43296114968898,
    "avg_bits_err_output": 37.33974075561979,
    "avg_bits_err_improve": 10.093220394069185,
    "time": 58642.635498046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+212) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (* (tan k) (* (/ (pow t 3.0) (* l l)) (sin k))))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (fma (tan k) (* (sin k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (sin k) (tan (- k)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 32.220085978087475,
    "avg_bits_err_output": 30.232105795517473,
    "avg_bits_err_improve": 1.987980182570002,
    "time": 41979.63623046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5379875968971776,
    "avg_bits_err_output": 0.5254806422112102,
    "avg_bits_err_improve": 0.012506954685967409,
    "time": 47130.41748046875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow k -0.5) (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5094101744730215,
    "avg_bits_err_output": 0.46968088566283356,
    "avg_bits_err_improve": 0.039729288810187946,
    "time": 52315.73681640625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp l) (* (exp l) (* J (/ (cos (/ K 2.0)) (exp l)))) (* (exp (- l)) (* (- J) (cos (/ K 2.0))))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.457157721169843,
    "avg_bits_err_output": 17.46063013773193,
    "avg_bits_err_improve": -0.003472416562086522,
    "time": 38889.578857421875,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (- (* (cos (+ (/ (* K (+ m n)) 2.0) (- 1.0 M))) (cos 1.0)) (* (sin (+ (/ (* K (+ m n)) 2.0) (- 1.0 M))) (sin -1.0))) (exp (- (- (fabs (- n m)) l) (* (- (/ (+ m n) 2.0) M) (- (/ (+ m n) 2.0) M)))))",
    "output_parens": 30,
    "avg_bits_err_input": 15.580029875800928,
    "avg_bits_err_output": 15.589914987346724,
    "avg_bits_err_improve": -0.00988511154579541,
    "time": 47156.4814453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (- (+ 1.0 (sqrt (+ 1.0 (pow (/ U (* 2.0 (* J (cos (/ K 2.0))))) 2.0)))) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 18.476386842188134,
    "avg_bits_err_output": 18.483094168191872,
    "avg_bits_err_improve": -0.006707326003738245,
    "time": 41742.509521484375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 2e+141) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 13.652115268102541,
    "avg_bits_err_output": 9.775462864746899,
    "avg_bits_err_improve": 3.876652403355642,
    "time": 29450.972412109375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.48360003408157,
    "avg_bits_err_output": 19.48360003408157,
    "avg_bits_err_improve": 0,
    "time": 32507.477783203125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= d -1e+121) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* w (* D (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* w (* D (* D h)))) M)) (/ (* d (* c0 d)) (* w (* D (* D h)))))) (* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* h D)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* h D)))) 2.0) (* M M))))))",
    "output_parens": 48,
    "avg_bits_err_input": 59.29148434905495,
    "avg_bits_err_output": 56.26247920965821,
    "avg_bits_err_improve": 3.0290051393967374,
    "time": 40160.81103515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+219) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (* (sqrt (* (/ d h) (/ d l))) (- 1.0 (* 0.5 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 26.562177345692803,
    "avg_bits_err_output": 26.484623675682634,
    "avg_bits_err_improve": 0.07755367001016822,
    "time": 46879.245849609375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- (log (exp (+ (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0)))) (- (+ 1.0 (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0)) 1.0))",
    "output_parens": 23,
    "avg_bits_err_input": 15.733607877400226,
    "avg_bits_err_output": 15.297220096790701,
    "avg_bits_err_improve": 0.4363877806095253,
    "time": 201837.05712890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9838443609377705,
    "avg_bits_err_output": 0.011323120312590145,
    "avg_bits_err_improve": 0.9725212406251803,
    "time": 12640.849853515625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44108909742812363,
    "avg_bits_err_output": 0.3645417179089159,
    "avg_bits_err_improve": 0.07654737951920776,
    "time": 21976.449462890625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* v 3.0)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012344360937770431,
    "avg_bits_err_output": 0.011823120312590146,
    "avg_bits_err_improve": 0.0005212406251802852,
    "time": 12171.705322265625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6181967939153886,
    "avg_bits_err_output": 0.6181967939153886,
    "avg_bits_err_improve": 0,
    "time": 8823.5,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.015190885762199,
    "avg_bits_err_output": 1.9895234045118382,
    "avg_bits_err_improve": 0.025667481250361,
    "time": 9467.60986328125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017331650391671637,
    "avg_bits_err_output": 0.017331650391671637,
    "avg_bits_err_improve": 0,
    "time": 6565.93017578125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18633289531691705,
    "avg_bits_err_output": 0.18746729375396629,
    "avg_bits_err_improve": -0.0011343984370492388,
    "time": 23179.784423828125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (+ (fma b (* b (* a a)) (pow b 4.0)) (* (fma a a (* b b)) (* a a))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18874838106592987,
    "avg_bits_err_output": 0.09931204814185352,
    "avg_bits_err_improve": 0.08943633292407635,
    "time": 26930.07275390625,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (+ (* (* b b) (fma a a (* b b))) (fma a (* a (* b b)) (pow a 4.0))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.1823877602212981,
    "avg_bits_err_output": 0.101744873004068,
    "avg_bits_err_improve": 0.0806428872172301,
    "time": 22553.809814453125,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.219543623686569,
    "avg_bits_err_output": 13.219543623686569,
    "avg_bits_err_improve": 0,
    "time": 27786.9833984375,
    "seed": 6,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(exp (log (sqrt (/ (expm1 (+ x x)) (expm1 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.179015890162,
    "avg_bits_err_output": 0.05099796327408242,
    "avg_bits_err_improve": 41.128017926887914,
    "time": 18210.74072265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (+ (- (tan x)) (- -1.0 (- -1.0 x))))",
    "output_parens": 16,
    "avg_bits_err_input": 31.90397771703424,
    "avg_bits_err_output": 30.271462021812088,
    "avg_bits_err_improve": 1.6325156952221533,
    "time": 34517.805419921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma a (- c) (* b_2 b_2))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.14185691002886,
    "avg_bits_err_output": 34.141606910028855,
    "avg_bits_err_improve": 0.0002500000000011937,
    "time": 20619.253173828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.84744890084061,
    "avg_bits_err_output": 33.84744890084061,
    "avg_bits_err_improve": 0,
    "time": 17469.3759765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 32.20379012175142,
    "avg_bits_err_output": 31.902880767167947,
    "avg_bits_err_improve": 0.3009093545834709,
    "time": 33615.107177734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 3.5e+29) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 21,
    "avg_bits_err_input": 33.25467620735367,
    "avg_bits_err_output": 31.31006947283018,
    "avg_bits_err_improve": 1.9446067345234894,
    "time": 71657.37377929688,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.486007637322597,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 29.471757637322597,
    "time": 41165.84619140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (+ 1.0 (fma (/ (/ 1.0 (+ 1.0 x)) (+ 1.0 x)) (+ x 2.0) (- (/ 1.0 x)))) -1.0) (/ (/ 1.0 (+ x 1.0)) (+ x 1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 14.542454852721805,
    "avg_bits_err_output": 0.5465438664171726,
    "avg_bits_err_improve": 13.995910986304633,
    "time": 30803.33935546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.236232941011416,
    "avg_bits_err_output": 5.928806934553841,
    "avg_bits_err_improve": 33.307426006457575,
    "time": 28052.30322265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log (exp (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.8676301540041,
    "avg_bits_err_output": 29.576238976867174,
    "avg_bits_err_improve": 0.2913911771369264,
    "time": 33199.238037109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.61912989970838,
    "avg_bits_err_output": 30.61912989970838,
    "avg_bits_err_improve": 0,
    "time": 32567.430419921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (fma a (* c (* -4.0 (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))) (* b (* b (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 33.96605243463104,
    "avg_bits_err_output": 32.93107273195636,
    "avg_bits_err_improve": 1.0349797026746757,
    "time": 48278.93115234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.06103919246469,
    "avg_bits_err_output": 34.0702435120953,
    "avg_bits_err_improve": -0.00920431963061219,
    "time": 25481.757568359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (expm1 (log1p (log1p x))))",
    "output_parens": 6,
    "avg_bits_err_input": 61.468757477423495,
    "avg_bits_err_output": 0.04405432343849157,
    "avg_bits_err_improve": 61.424703153985,
    "time": 19635.41943359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.005613431672735,
    "avg_bits_err_output": 0.09322043860239718,
    "avg_bits_err_improve": 62.91239299307034,
    "time": 50379.42626953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.46515362392268,
    "avg_bits_err_output": 58.4871017522111,
    "avg_bits_err_improve": -0.021948128288421742,
    "time": 64294.9150390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (/ (/ (/ 1.0 x) (/ 1.0 x)) (+ 1.0 (/ 1.0 x))) (- (- (- (/ (/ 1.0 x) (/ 1.0 x)) (fma (/ (/ 1.0 x) (+ 1.0 (/ 1.0 x))) (+ (/ 1.0 x) (/ (/ 1.0 x) (/ 1.0 x))) (- (/ 1.0 (tan x))))) (* (/ 1.0 x) (/ (/ (/ 1.0 x) (/ 1.0 x)) (+ 1.0 (/ 1.0 x)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 59.88804697047933,
    "avg_bits_err_output": 53.17869491828774,
    "avg_bits_err_improve": 6.709352052191591,
    "time": 55796.052978515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.36918945083786,
    "avg_bits_err_output": 41.19794984789796,
    "avg_bits_err_improve": 19.1712396029399,
    "time": 46027.044677734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.51891809206283,
    "avg_bits_err_output": 0.12019875157544475,
    "avg_bits_err_improve": 41.39871934048739,
    "time": 12879.706298828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.58823761586692,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.58736261586692,
    "time": 4900.51123046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.314059832286034,
    "avg_bits_err_output": 0.020062931983547826,
    "avg_bits_err_improve": 29.293996900302485,
    "time": 5871.082763671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (pow (expm1 (- x)) 2.0) (- (expm1 x) (- (* (expm1 (- x)) (- 1.0 (expm1 (- x)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 29.562467002314683,
    "avg_bits_err_output": 1.1960574051036639,
    "avg_bits_err_improve": 28.36640959721102,
    "time": 38989.688232421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.608333295066489,
    "avg_bits_err_output": 9.608333295066489,
    "avg_bits_err_improve": 0,
    "time": 41965.054443359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.840457708542395,
    "avg_bits_err_output": 36.840457708542395,
    "avg_bits_err_improve": 0,
    "time": 43240.4130859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 30.04240395230425,
    "avg_bits_err_output": 25.6653828433729,
    "avg_bits_err_improve": 4.377021108931352,
    "time": 122365.5185546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.05896402966488,
    "avg_bits_err_output": 0.37416398116210425,
    "avg_bits_err_improve": 36.68480004850277,
    "time": 27495.3203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.026034465467962,
    "avg_bits_err_output": 19.888480579066282,
    "avg_bits_err_improve": 0.13755388640167965,
    "time": 29599.350341796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (atan (+ N 1.0)) (* (exp -1.0) (exp 1.0))) (* (exp -1.0) (* (atan N) (exp 1.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 14.991472377652421,
    "avg_bits_err_output": 14.98723872627338,
    "avg_bits_err_improve": 0.004233651379040637,
    "time": 49160.610595703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.174707168965995,
    "avg_bits_err_output": 1.2664966232126014,
    "avg_bits_err_improve": 28.908210545753395,
    "time": 28694.896240234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07847755746635404,
    "avg_bits_err_output": 0.08018303949007588,
    "avg_bits_err_improve": -0.0017054820237218382,
    "time": 17363.6787109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.852117248422408,
    "avg_bits_err_output": 0.29742481250360575,
    "avg_bits_err_improve": 15.554692435918803,
    "time": 35773.199462890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (+ (* (sin (* PI (/ angle 180.0))) (cos 0.0)) (* (sin (fma (- (* (/ angle 180.0) (/ PI PI))) PI (* PI (/ angle 180.0)))) (- (cos (* PI (/ angle 180.0))))))) 2.0))",
    "output_parens": 27,
    "avg_bits_err_input": 19.82264113287219,
    "avg_bits_err_output": 19.87354253647758,
    "avg_bits_err_improve": -0.05090140360539053,
    "time": 63204.600830078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log (+ 1.0 (expm1 (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 31.069179065568253,
    "avg_bits_err_output": 31.028958850961715,
    "avg_bits_err_improve": 0.04022021460653846,
    "time": 53420.3828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma PI (* (/ (/ (/ angle 180.0) PI) PI) (* PI PI)) 0.0))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.27522524694481,
    "avg_bits_err_output": 20.284280670692763,
    "avg_bits_err_improve": -0.009055423747952318,
    "time": 69727.03295898438,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17585416639998386,
    "avg_bits_err_output": 0.17267025517746534,
    "avg_bits_err_improve": 0.003183911222518515,
    "time": 29036.021240234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32912410109759316,
    "avg_bits_err_output": 0.3237888249507136,
    "avg_bits_err_improve": 0.005335276146879564,
    "time": 62049.155029296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (- (* e (+ (cos v) 1.0)) e)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.14231372187554087,
    "avg_bits_err_output": 0.14238684218813102,
    "avg_bits_err_improve": -7.312031259015805e-05,
    "time": 33319.431884765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos (- lambda1 lambda2)) (cos phi1)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.90002975143135,
    "avg_bits_err_output": 16.895645031662273,
    "avg_bits_err_improve": 0.00438471976907806,
    "time": 41208.036376953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.823534972120875,
    "avg_bits_err_output": 46.33241479667639,
    "avg_bits_err_improve": 6.491120175444486,
    "time": 39664.50048828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.784753414520114,
    "avg_bits_err_output": 28.78082977177577,
    "avg_bits_err_improve": 0.003923642744343425,
    "time": 22110.429931640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* -4.0 (* c (sqrt (/ 1.0 (fma a (* c -4.0) (* b b))))))) (- (* b (* b (sqrt (/ 1.0 (fma a (* c -4.0) (* b b)))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.354955677005634,
    "avg_bits_err_output": 40.21847003032324,
    "avg_bits_err_improve": 4.136485646682395,
    "time": 23197.777587890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9724835388945,
    "avg_bits_err_output": 33.9724835388945,
    "avg_bits_err_improve": 0,
    "time": 43691.326904296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (expm1 (log1p (cos (- lambda1 lambda2))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9316221955006693,
    "avg_bits_err_output": 0.9398363081706664,
    "avg_bits_err_improve": -0.008214112669997164,
    "time": 37991.420654296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (log1p (expm1 (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.48928923050382,
    "avg_bits_err_output": 29.494533575318286,
    "avg_bits_err_improve": -0.005244344814464341,
    "time": 13829.162841796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.10358578893647,
    "avg_bits_err_output": 1.3228043234384919,
    "avg_bits_err_improve": 56.78078146549798,
    "time": 14553.78271484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.02302317436167,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 58.014398174361666,
    "time": 6510.62890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008240601562950723,
    "avg_bits_err_output": 0.008240601562950723,
    "avg_bits_err_improve": 0,
    "time": 2768.6962890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (sqrt (* -1.0 (- 1.0 (* x x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 32.161125,
    "avg_bits_err_output": 32.1615,
    "avg_bits_err_improve": -0.00037499999999823785,
    "time": 9400.306396484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.456263283840364,
    "avg_bits_err_output": 58.45778525549785,
    "avg_bits_err_improve": -0.0015219716574890185,
    "time": 58867.8994140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04375,
    "avg_bits_err_output": 0.04375,
    "avg_bits_err_improve": 0,
    "time": 3000.182861328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1302712406251803,
    "avg_bits_err_output": 0.1302712406251803,
    "avg_bits_err_improve": 0,
    "time": 28571.134033203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos t) (cos (atan (/ (* (- eh) (tan t)) ew))))) (* eh (* (sin t) (sin (atan (/ (* (- eh) (tan t)) ew)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12832312031259016,
    "avg_bits_err_output": 0.128,
    "avg_bits_err_improve": 0.0003231203125901583,
    "time": 34799.364501953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.37138127544293,
    "avg_bits_err_output": 4.013014378076799,
    "avg_bits_err_improve": 35.35836689736613,
    "time": 52460.906494140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(* (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))) (* (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))) (/ 1.0 (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))))))",
    "output_parens": 24,
    "avg_bits_err_input": 14.283674373791138,
    "avg_bits_err_output": 14.285873829922599,
    "avg_bits_err_improve": -0.002199456131460664,
    "time": 5463.5966796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (expm1 (log1p (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.13904330086437403,
    "avg_bits_err_output": 0.14571220111082972,
    "avg_bits_err_improve": -0.006668900246455695,
    "time": 45863.890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.84631070773147,
    "avg_bits_err_output": 46.36035934246167,
    "avg_bits_err_improve": 6.485951365269798,
    "time": 33294.293212890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (- (* (* b b) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))) b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.85335407011293,
    "avg_bits_err_output": 28.089476815841916,
    "avg_bits_err_improve": 0.7638772542710122,
    "time": 33956.47216796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (fma b b (* c (* a -3.0))) (* (sqrt (fma b b (* c (* a -3.0)))) (/ 1.0 (fma b b (* c (* a -3.0))))) (- b)) (* 3.0 a))",
    "output_parens": 16,
    "avg_bits_err_input": 44.42040056330815,
    "avg_bits_err_output": 43.52670214419783,
    "avg_bits_err_improve": 0.8936984191103221,
    "time": 34496.669921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.013366455742556,
    "avg_bits_err_output": 34.013366455742556,
    "avg_bits_err_improve": 0,
    "time": 25868.726806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (cos (- lambda1 lambda2)) (sin phi1)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.70846327050992,
    "avg_bits_err_output": 13.708209721382998,
    "avg_bits_err_improve": 0.0002535491269224366,
    "time": 79458.578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.027332819947535,
    "avg_bits_err_output": 29.03483207532037,
    "avg_bits_err_improve": -0.007499255372835023,
    "time": 57696.8623046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (- (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) -1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.013344360937770434,
    "avg_bits_err_improve": -0.0014693609377704336,
    "time": 10416.943603515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (fma (/ 1.0 (+ x -1.0)) (/ -1.0 (/ 1.0 (+ x -1.0))) (/ (/ 1.0 (+ x -1.0)) (/ 1.0 (+ x -1.0)))) (* (/ 1.0 (* (/ 1.0 (+ -1.0 x)) 2.0)) (* (/ 1.0 (* (/ 1.0 (+ -1.0 x)) 2.0)) (* (* (/ 1.0 (+ -1.0 x)) 2.0) (* 2.0 (pow (/ 1.0 (+ -1.0 x)) 2.0)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.619113870524966,
    "avg_bits_err_output": 14.525119246250751,
    "avg_bits_err_improve": 0.0939946242742149,
    "time": 44758.325927734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -3.1e-308) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (sqrt (* F (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.557777024598984,
    "avg_bits_err_output": 47.76130119482811,
    "avg_bits_err_improve": 4.796475829770877,
    "time": 51689.26806640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.85365437021454,
    "avg_bits_err_output": 29.85365437021454,
    "avg_bits_err_improve": 0,
    "time": 44735.79052734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.35e-296) (/ (- (* (* (sqrt (- F)) (* (sqrt (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ C A))) (sqrt (- (* C (* A 4.0)) (pow B 2.0))))) (sqrt 2.0))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (* 2.0 F)) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (- (pow B 2.0) (* A (* C 4.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.76154166964942,
    "avg_bits_err_output": 47.58400048280074,
    "avg_bits_err_improve": 5.1775411868486785,
    "time": 51210.9677734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.391838770633505,
    "avg_bits_err_output": 15.391838770633505,
    "avg_bits_err_improve": 0,
    "time": 62836.4833984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -6.2e+155) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g -4e-291) (+ (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (/ (cbrt (/ 1.0 (+ a a))) (cbrt (- (sqrt (- (* g g) (* h h))) g))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 1e+152) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g)))))))",
    "output_parens": 106,
    "avg_bits_err_input": 35.81750611425101,
    "avg_bits_err_output": 15.29504217188901,
    "avg_bits_err_improve": 20.522463942362002,
    "time": 68681.62475585938,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9924015046946224,
    "avg_bits_err_output": 0.02214624062518029,
    "avg_bits_err_improve": 0.9702552640694421,
    "time": 13621.042236328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.931125,
    "avg_bits_err_output": 0.931125,
    "avg_bits_err_improve": 0,
    "time": 5441.16357421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.28370955146603,
    "avg_bits_err_output": 11.28370955146603,
    "avg_bits_err_improve": 0,
    "time": 16349.67333984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5119730148866263,
    "avg_bits_err_output": 0.479625,
    "avg_bits_err_improve": 0.03234801488662625,
    "time": 12421.802490234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.99372040857784,
    "avg_bits_err_output": 15.896674524973456,
    "avg_bits_err_improve": 37.09704588360439,
    "time": 21182.70654296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.684403591105956,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.684403591105956,
    "time": 2069.884521484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ x 1.0)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ x 1.0)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.01475,
    "avg_bits_err_improve": -0.0011249999999999993,
    "time": 9526.75,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1252.34375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- (* r w)) (* (* r w) (- (* v 0.25) 0.375))) (- 1.0 v)))",
    "output_parens": 13,
    "avg_bits_err_input": 12.565362110838905,
    "avg_bits_err_output": 6.59226975352122,
    "avg_bits_err_improve": 5.973092357317685,
    "time": 34248.3994140625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0) (* x1 (* 2.0 (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0))))) (* (* x1 x1) -6.0)) (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5180940075640867,
    "avg_bits_err_output": 0.2667451650904923,
    "avg_bits_err_improve": 0.25134884247359446,
    "time": 101471.71801757812,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (pow (+ t1 u) 2.0))",
    "output_parens": 5,
    "avg_bits_err_input": 18.25644350928271,
    "avg_bits_err_output": 18.25656850928271,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 45642.82666015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.22679248125036058,
    "avg_bits_err_output": 0.18691748125036056,
    "avg_bits_err_improve": 0.03987500000000002,
    "time": 23972.81982421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0,
    "time": 2480.95458984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.54698531867687,
    "avg_bits_err_output": 9.589977987423586,
    "avg_bits_err_improve": 4.957007331253283,
    "time": 46763.657470703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 28.848695455601533,
    "avg_bits_err_output": 0.9287780896524572,
    "avg_bits_err_improve": 27.919917365949075,
    "time": 37178.29833984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (- 6.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.004125,
    "avg_bits_err_output": 0.008323120312590145,
    "avg_bits_err_improve": -0.004198120312590144,
    "time": 13430.2373046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.0085,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 0,
    "time": 17330.21875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.046573120312590144,
    "avg_bits_err_output": 0.046573120312590144,
    "avg_bits_err_improve": 0,
    "time": 6288.848388671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3477.01953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3048.417724609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4363.525634765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.868468556723507,
    "avg_bits_err_output": 0.2465,
    "avg_bits_err_improve": 7.621968556723507,
    "time": 52909.912109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.2546251846211645,
    "avg_bits_err_output": 7.2546251846211645,
    "avg_bits_err_improve": 0,
    "time": 29519.503173828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.755211617548808,
    "avg_bits_err_output": 0.014875,
    "avg_bits_err_improve": 15.740336617548808,
    "time": 13165.78173828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (pow (exp (* x x)) 10.0) (cos x)) (* (cos x) (* (pow (cos x) 2.0) (/ 1.0 (cos x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 3.532546884364404,
    "avg_bits_err_output": 3.0538912707564787,
    "avg_bits_err_improve": 0.4786556136079252,
    "time": 41438.914794921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.344769544218986,
    "avg_bits_err_output": 15.344769544218986,
    "avg_bits_err_improve": 0,
    "time": 22880.27880859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.849550129934634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.849550129934634,
    "time": 5413.60986328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14092750219331,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.140427502193305,
    "time": 3941.678955078125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.291,
    "avg_bits_err_improve": 63.709,
    "time": 5323.008056640625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325466514815,
    "avg_bits_err_output": 0.3960567671895734,
    "avg_bits_err_improve": 61.44719789795858,
    "time": 18967.1630859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.06103919246469,
    "avg_bits_err_output": 34.0702435120953,
    "avg_bits_err_improve": -0.00920431963061219,
    "time": 26440.07373046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.9724835388945,
    "avg_bits_err_output": 33.9724835388945,
    "avg_bits_err_improve": 0,
    "time": 47954.846435546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3447.470458984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.804810527354064,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 39.79293552735406,
    "time": 4184.24365234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma y y (* x x)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.48084172065822,
    "avg_bits_err_output": 20.479372359720447,
    "avg_bits_err_improve": 0.0014693609377722794,
    "time": 5621.820068359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6571481356869886,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6571481356869886,
    "time": 6815.623291015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0395,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0.03825,
    "time": 6592.881103515625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02239624062518029,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.011021240625180291,
    "time": 4908.48095703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.01425,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 0,
    "time": 4467.380859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0,
    "time": 1907.23779296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.41169605312878627,
    "avg_bits_err_output": 0.24775,
    "avg_bits_err_improve": 0.16394605312878627,
    "time": 8273.628173828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (* (- (exp -1.0)) (* (exp 1.0) (log (pow (exp (* (exp 1.0) (- 1.0 (cos x)))) (- (/ (* (exp 1.0) (- 1.0 (cos x))) (* (exp 1.0) (- 1.0 (cos x))))))))) (exp -1.0))",
    "output_parens": 24,
    "avg_bits_err_input": 30.224150718920463,
    "avg_bits_err_output": 30.22894058223094,
    "avg_bits_err_improve": -0.0047898633104779265,
    "time": 33467.13134765625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.325377732130907,
    "avg_bits_err_output": 24.31888991565766,
    "avg_bits_err_improve": 0.006487816473246255,
    "time": 24219.630859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (fma (sin x) (/ -1.0 (sin x)) 1.0) (- (+ 1.0 (sin x)) 1.0))) (tan x))",
    "output_parens": 13,
    "avg_bits_err_input": 29.580091874103584,
    "avg_bits_err_output": 29.56446150055149,
    "avg_bits_err_improve": 0.01563037355209218,
    "time": 53472.19775390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590144,
    "avg_bits_err_output": 0.001625,
    "avg_bits_err_improve": 0.004948120312590144,
    "time": 3646.077880859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.002) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.72965976414739,
    "avg_bits_err_output": 10.821875676869393,
    "avg_bits_err_improve": 36.907784087278,
    "time": 51887.11962890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.436088356440877,
    "avg_bits_err_output": 25.436088356440877,
    "avg_bits_err_improve": 0,
    "time": 32845.38818359375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.623499127443804,
    "avg_bits_err_output": 25.623499127443804,
    "avg_bits_err_improve": 0,
    "time": 21844.544677734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(fma ux (+ maxCos -1.0) 1.0)",
    "output_parens": 2,
    "avg_bits_err_input": 0.035,
    "avg_bits_err_output": 0.01800317066803707,
    "avg_bits_err_improve": 0.016996829331962934,
    "time": 12215.324951171875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (fma ux (- (* ux maxCos) ux) (- ux (* ux (log1p (expm1 (fma (fma ux maxCos 1.0) (+ maxCos -1.0) maxCos))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.505415196103039,
    "avg_bits_err_output": 0.5532237398209391,
    "avg_bits_err_improve": 12.9521914562821,
    "time": 38999.52587890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (fma (fma ux maxCos (- 1.0 ux)) ux (- (- (expm1 (* 2.0 (log1p (* ux maxCos)))) (* ux (fma ux maxCos 1.0)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.548809366169355,
    "avg_bits_err_output": 0.32522549662403333,
    "avg_bits_err_improve": 13.22358386954532,
    "time": 40925.219970703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* uy (* PI (* uy (/ 2.0 uy)))))))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.34026445899576524,
    "avg_bits_err_output": 0.340260763352405,
    "avg_bits_err_improve": 3.69564336022421e-06,
    "time": 78384.74340820312,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.20140481469338017,
    "avg_bits_err_output": 0.20140481469338017,
    "avg_bits_err_improve": 0,
    "time": 32128.758544921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.542935509015052,
    "avg_bits_err_output": 0.49658282887399213,
    "avg_bits_err_improve": 0.04635268014105992,
    "time": 38685.088623046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (+ (cos (* u2 -6.28318530718)) (fma (sin -1.0) (sin (fma u2 -6.28318530718 -1.0)) (* (sin 1.0) (sin (fma u2 -6.28318530718 -1.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.32672121110921293,
    "avg_bits_err_output": 0.3287264274736804,
    "avg_bits_err_improve": -0.002005216364467488,
    "time": 54332.84716796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (log (/ 1.0 (+ -1.0 (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))))))))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.32466646930498516,
    "avg_bits_err_output": 0.3300450575849622,
    "avg_bits_err_improve": -0.005378588279977059,
    "time": 36066.38037109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.062307858716118235,
    "avg_bits_err_output": 0.04594906031780625,
    "avg_bits_err_improve": 0.01635879839831198,
    "time": 36135.947265625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* s (expm1 (* 2.0 (log1p (exp (/ (- (fabs x)) s)))))) s))",
    "output_parens": 14,
    "avg_bits_err_input": 0.13040594065941177,
    "avg_bits_err_output": 0.11950752178742534,
    "avg_bits_err_improve": 0.010898418871986434,
    "time": 28492.532470703125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6827529928988721,
    "avg_bits_err_output": 0.6889228779478774,
    "avg_bits_err_improve": -0.006169885049005286,
    "time": 31916.264404296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.15776153656422884,
    "avg_bits_err_output": 0.15776153656422884,
    "avg_bits_err_improve": 0,
    "time": 21730.990234375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (+ (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))) (* -1.0 (fma (- eta) eta (* eta eta)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 2.668334903845633,
    "avg_bits_err_output": 2.667438663220453,
    "avg_bits_err_improve": 0.0008962406251802335,
    "time": 40868.904296875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (* v (+ (* (sinh (/ 1.0 v)) 2.0) (* 1.0 v))) (* v v)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.45579228081252515,
    "avg_bits_err_output": 0.4846602494017459,
    "avg_bits_err_improve": -0.02886796858922075,
    "time": 57415.755126953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (/ 1.0 (+ v v)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.10260851389960937,
    "avg_bits_err_output": 0.10215044473880319,
    "avg_bits_err_improve": 0.0004580691608061793,
    "time": 8574.064453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (pow (* alpha alpha) PI)) (* (log (pow (* alpha alpha) PI)) (/ 1.0 (log (pow (* alpha alpha) PI))))) (+ 1.0 (* (- (* alpha (* cosTheta alpha)) cosTheta) cosTheta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.46990039415795626,
    "avg_bits_err_output": 0.44739000344117835,
    "avg_bits_err_improve": 0.022510390716777906,
    "time": 28672.854248046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (* (log (- 1.0 (/ (+ u -0.25) 0.75))) 3.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3279020321432367,
    "avg_bits_err_output": 1.0626268071310514,
    "avg_bits_err_improve": 0.26527522501218526,
    "time": 66311.31811523438,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(fma (* s (/ (- (log1p (- (* 4.0 u)))) s)) s 0.0)",
    "output_parens": 7,
    "avg_bits_err_input": 12.385976548948085,
    "avg_bits_err_output": 0.2715428578176801,
    "avg_bits_err_improve": 12.114433691130404,
    "time": 65529.748046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (- (* (+ (* PI 2.0) 1.0) (* r s)) (* r s))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* 6.0 PI) (* r s))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1447449350722043,
    "avg_bits_err_output": 0.15211346806691717,
    "avg_bits_err_improve": -0.007368532994712879,
    "time": 80865.27099609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (log1p (expm1 (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.9024449258931355,
    "avg_bits_err_output": 0.9137223573312708,
    "avg_bits_err_improve": -0.01127743143813531,
    "time": 64622.437255859375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6945803313842076,
    "avg_bits_err_output": 0.4818078968921633,
    "avg_bits_err_improve": 0.2127724344920443,
    "time": 61725.4609375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(log1p (expm1 (* (sqrt (- (log1p (- u1)))) (sin (* PI (* 2.0 u2))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.570361051648597,
    "avg_bits_err_output": 0.525841684982147,
    "avg_bits_err_improve": 13.04451936666645,
    "time": 27945.84423828125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.617788886988382,
    "avg_bits_err_output": 0.320013222162971,
    "avg_bits_err_improve": 13.297775664825412,
    "time": 47546.7021484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.988949961053551,
    "avg_bits_err_output": 0.212,
    "avg_bits_err_improve": 13.776949961053552,
    "time": 32452.502685546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.657846703115,
    "avg_bits_err_output": 0.5025565102496918,
    "avg_bits_err_improve": 12.155290192865309,
    "time": 37242.439453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) -5e+247) (- (* PI l) (log (pow (exp (/ (tan (* PI l)) (/ 1.0 (* F F)))) (pow (/ 1.0 (* F F)) 2.0)))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 1e+283) (- (* PI l) (* (pow F -2.0) (tan (* PI l)))) (- (* PI l) (log (pow (exp (/ (tan (* PI l)) (/ 1.0 (* F F)))) (pow (/ 1.0 (* F F)) 2.0))))))",
    "output_parens": 50,
    "avg_bits_err_input": 16.51630223095017,
    "avg_bits_err_output": 8.491159391893065,
    "avg_bits_err_improve": 8.025142839057105,
    "time": 35510.748046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.210761842188131,
    "avg_bits_err_output": 0.20961560156295073,
    "avg_bits_err_improve": 0.0011462406251802615,
    "time": 28967.30908203125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+278) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (- (+ (+ x 1.0) (- (* x (/ 1.0 (tan B))) 1.0)) x)) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.812547798383543,
    "avg_bits_err_output": 12.29489401210565,
    "avg_bits_err_improve": 1.5176537862778936,
    "time": 60120.586669921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (expm1 (log1p (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (pow (exp (/ PI 4.0)) f) (exp (* (/ PI 4.0) (- f)))) (+ (- (pow (exp (/ PI 4.0)) f) (pow (exp (/ PI 4.0)) (- f))) (fma (- (exp (- (/ PI 4.0)))) (pow (exp (/ PI 4.0)) (- 1.0 f)) (pow (exp (/ PI 4.0)) (- f))))))))))",
    "output_parens": 38,
    "avg_bits_err_input": 61.69592345952694,
    "avg_bits_err_output": 52.037267777146944,
    "avg_bits_err_improve": 9.658655682379994,
    "time": 134219.8310546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.6e-159) (- (+ 1.0 (/ (* t (sqrt 2.0)) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l))))) 1.0) (if (<= t 3.8e-116) (/ (* (sqrt 2.0) t) (sqrt (fma l l (fma l (* l -2.0) (* (/ (+ 1.0 x) (+ x -1.0)) (fma l l (* t (* t 2.0)))))))) (/ (* t (+ (+ 1.0 (sqrt 2.0)) -1.0)) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 42.855677604555986,
    "avg_bits_err_output": 35.923561579893374,
    "avg_bits_err_improve": 6.932116024662612,
    "time": 37496.60498046875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.8710282331018293,
    "avg_bits_err_output": 0.2092197375050479,
    "avg_bits_err_improve": 3.6618084955967816,
    "time": 40805.81396484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0442544754655605,
    "avg_bits_err_output": 0.00675,
    "avg_bits_err_improve": 1.0375044754655605,
    "time": 16626.28857421875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.231380863159591,
    "avg_bits_err_output": 10.231380863159591,
    "avg_bits_err_improve": 0,
    "time": 36805.388916015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -6.4e+65) (* (sqrt (- n)) (sqrt (* (- (fma (- U U*) (* (pow (/ l Om) 2.0) n) 0.0) (- t (* 2.0 (/ (* l l) Om)))) (* 2.0 U)))) (if (<= n -1.85e-205) (sqrt (* 2.0 (- (* (* (- U* U) (* n (* n (pow (/ l Om) 2.0)))) U) (* U (* n (- (* 2.0 (/ (* l l) Om)) t)))))) (if (<= n -2e-310) (* (sqrt (- n)) (sqrt (- (* (pow (/ l Om) 2.0) (* (* 2.0 U) (* n (- U U*)))) (* 2.0 (* U (- t (* 2.0 (/ (* l l) Om)))))))) (if (<= n 1.88e+84) (* (sqrt n) (sqrt (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))) (* 2.0 U)))) (* (sqrt (+ n n)) (sqrt (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))))))))",
    "output_parens": 88,
    "avg_bits_err_input": 34.9832577964157,
    "avg_bits_err_output": 28.85065661825262,
    "avg_bits_err_improve": 6.132601178163078,
    "time": 45728.946044921875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -9.2e-107) (/ 2.0 (* (sin k) (* (tan k) (* (pow (/ k t) 2.0) (/ (pow t 3.0) (* l l)))))) (if (<= t 6.5e-109) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))) (/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 47.14853979378786,
    "avg_bits_err_output": 36.9041453216702,
    "avg_bits_err_improve": 10.244394472117662,
    "time": 55227.03271484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+209) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k)))) (/ 2.0 (* (- (+ 2.0 (pow (/ k t) 2.0))) (fma (sin k) (tan k) (- (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 32.55534704050198,
    "avg_bits_err_output": 30.528212934522344,
    "avg_bits_err_improve": 2.027134105979634,
    "time": 37525.245361328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.4899924843993411,
    "avg_bits_err_output": 0.4899924843993411,
    "avg_bits_err_improve": 0,
    "time": 34286.237060546875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.48712105639185577,
    "avg_bits_err_output": 0.48712105639185577,
    "avg_bits_err_improve": 0,
    "time": 65061.888916015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (+ (fma (- (exp (- l))) (cos (/ K 2.0)) (* (exp (- l)) (cos (/ K 2.0)))) (+ (* (- (exp l) (exp (- l))) (cos (/ K 2.0))) (fma (- (exp l)) (- (cos (/ K 2.0))) (* (exp l) (- (cos (/ K 2.0))))))) U)",
    "output_parens": 32,
    "avg_bits_err_input": 16.93383418685015,
    "avg_bits_err_output": 16.938403284551622,
    "avg_bits_err_improve": -0.004569097701473623,
    "time": 45713.043212890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (* (/ 1.0 K) (* K (+ m n)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* (+ m n) (- (+ (/ K (+ m n)) 1.0) 1.0))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 14.87102626627843,
    "avg_bits_err_output": 8.04715142174882,
    "avg_bits_err_improve": 6.823874844529609,
    "time": 34791.668212890625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(- (* (+ 1.0 (sqrt (+ 1.0 (pow (/ U (* 2.0 (* J (cos (/ K 2.0))))) 2.0)))) (* (cos (/ K 2.0)) (* J -2.0))) (* (cos (/ K 2.0)) (* J -2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 17.872313721875543,
    "avg_bits_err_output": 17.89537988750217,
    "avg_bits_err_improve": -0.02306616562662711,
    "time": 38964.697021484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 5e+138) (* w0 (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (- (+ (pow (/ (* M D) (+ d d)) 2.0) 1.0) 1.0)))))))",
    "output_parens": 51,
    "avg_bits_err_input": 13.919590528764356,
    "avg_bits_err_output": 9.577322490623994,
    "avg_bits_err_improve": 4.342268038140363,
    "time": 30193.651611328125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.01020085077524,
    "avg_bits_err_output": 19.01020085077524,
    "avg_bits_err_improve": 0,
    "time": 30051.66064453125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* D D) 2e+179) (* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* c0 d)) (* D (* D (* w h)))) (/ (* d (* c0 d)) (* D (* D (* w h))))) (* M M))))) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 59.29488111332215,
    "avg_bits_err_output": 56.820082763644145,
    "avg_bits_err_improve": 2.4747983496780037,
    "time": 42416.53662109375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (fma (sqrt (/ d h)) (* (- 1.0 (exp (+ (* 2.0 (log (/ (* M D) (+ d d)))) (log (* (/ h l) 0.5))))) (sqrt (/ d l))) 0.0) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+193) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (log (pow (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) 0.25) (/ (/ h l) (* 0.5 (pow (/ (* M D) (+ d d)) 2.0)))))))))",
    "output_parens": 86,
    "avg_bits_err_input": 26.725104960433168,
    "avg_bits_err_output": 24.721101219276772,
    "avg_bits_err_improve": 2.004003741156396,
    "time": 52676.4716796875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (/ 1.0 (- (* (/ 1.0 (hypot 1.0 x)) (- -1.0 (* x x)))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 15.265705062211147,
    "avg_bits_err_output": 15.264692370569911,
    "avg_bits_err_improve": 0.0010126916412360742,
    "time": 27691.222900390625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9835490396778473,
    "avg_bits_err_output": 0.014030842574811644,
    "avg_bits_err_improve": 0.9695181971030357,
    "time": 10386.578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- 1.0 (* v v)) (* t (* (/ (sqrt (- 2.0 (* v (* v 6.0)))) (- 1.0 (* v v))) (* PI (- 1.0 (* v v)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.44247189432537193,
    "avg_bits_err_output": 0.3811986681992839,
    "avg_bits_err_improve": 0.06127322612608804,
    "time": 25738.888671875,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.013216520928207924,
    "avg_bits_err_output": 0.013216520928207924,
    "avg_bits_err_improve": 0,
    "time": 3778.015625,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5169218506131418,
    "avg_bits_err_output": 0.5169218506131418,
    "avg_bits_err_improve": 0,
    "time": 11426.50146484375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0931415881287134,
    "avg_bits_err_output": 2.075818467816123,
    "avg_bits_err_improve": 0.017323120312590312,
    "time": 46537.9677734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ (expm1 (/ (+ EAccept (+ Vef (- Ev mu))) KbT)) 2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.015361468716510129,
    "avg_bits_err_output": 0.014538348403919982,
    "avg_bits_err_improve": 0.0008231203125901466,
    "time": 15397.098876953125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma (* b b) (* a a) (pow a 4.0))) 1.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.17933914418249194,
    "avg_bits_err_output": 0.06661276155338822,
    "avg_bits_err_improve": 0.11272638262910373,
    "time": 25148.532958984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma a (* a (* b b)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.18458191605492125,
    "avg_bits_err_output": 0.07379079640139388,
    "avg_bits_err_improve": 0.11079111965352736,
    "time": 28018.749267578125,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (+ (* (* b b) (fma a a (* b b))) (fma b (* b (* a a)) (pow a 4.0))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.18646520187983545,
    "avg_bits_err_output": 0.10634715656580304,
    "avg_bits_err_improve": 0.08011804531403241,
    "time": 21548.466552734375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.173163709861829,
    "avg_bits_err_output": 13.173163709861829,
    "avg_bits_err_improve": 0,
    "time": 15750.314208984375,
    "seed": 7,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (- (+ (/ (expm1 (+ x x)) (expm1 x)) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 40.89116367628887,
    "avg_bits_err_output": 0.05,
    "avg_bits_err_improve": 40.84116367628887,
    "time": 9362.07177734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.729140590893675,
    "avg_bits_err_output": 30.097774366114646,
    "avg_bits_err_improve": 1.631366224779029,
    "time": 47317.893798828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.53619996649882,
    "avg_bits_err_output": 33.53619996649882,
    "avg_bits_err_improve": 0,
    "time": 21753.82421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.7289563848553,
    "avg_bits_err_output": 33.7289563848553,
    "avg_bits_err_improve": 0,
    "time": 24519.920654296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (exp (+ 1.0 (- (log1p (- (cos x))) 1.0))) (* x x))",
    "output_parens": 8,
    "avg_bits_err_input": 31.625737249144954,
    "avg_bits_err_output": 31.643180098004613,
    "avg_bits_err_improve": -0.017442848859658966,
    "time": 25157.23095703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (exp (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 7,
    "avg_bits_err_input": 32.77697784492157,
    "avg_bits_err_output": 32.46822499301056,
    "avg_bits_err_improve": 0.30875285191100943,
    "time": 57927.45947265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 30.06302376670628,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 30.05639876670628,
    "time": 21151.22998046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 13.664943789160496,
    "avg_bits_err_output": 13.664943789160496,
    "avg_bits_err_improve": 0,
    "time": 48626.1845703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.57246204492315,
    "avg_bits_err_output": 6.032140186867398,
    "avg_bits_err_improve": 33.54032185805575,
    "time": 31932.141845703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.527942284184142,
    "avg_bits_err_output": 30.222840666258705,
    "avg_bits_err_improve": 0.30510161792543755,
    "time": 36683.00634765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.226092642270725,
    "avg_bits_err_output": 30.230703990025983,
    "avg_bits_err_improve": -0.004611347755258066,
    "time": 65340.509765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (- (* b b) (* c (* a 4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.8680721684986,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": -0.02072783024534175,
    "time": 20057.37353515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* b b) (* a (* c -4.0))))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8941878028341,
    "avg_bits_err_output": 33.922129929473144,
    "avg_bits_err_improve": -0.02794212663904716,
    "time": 23212.283447265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.33709469106678,
    "avg_bits_err_output": 0.022240601562950726,
    "avg_bits_err_improve": 61.31485408950383,
    "time": 18593.1005859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.0022783914742,
    "avg_bits_err_output": 0.08605461689417873,
    "avg_bits_err_improve": 62.91622377458002,
    "time": 47655.529541015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.44410861979138,
    "avg_bits_err_output": 58.44410861979138,
    "avg_bits_err_improve": 0,
    "time": 19348.16357421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (* (/ 1.0 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x))))) (log (pow (exp (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x))))) (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 59.86598605168939,
    "avg_bits_err_output": 59.86602522460625,
    "avg_bits_err_improve": -3.917291685695545e-05,
    "time": 68028.28833007812,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.25932700563275,
    "avg_bits_err_output": 41.092679631117704,
    "avg_bits_err_improve": 19.166647374515044,
    "time": 47944.611572265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.29180283119123,
    "avg_bits_err_output": 0.16234467200504832,
    "avg_bits_err_improve": 41.12945815918618,
    "time": 11451.072265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.69584748524195,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.69584748524195,
    "time": 4470.0224609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.58006687886283,
    "avg_bits_err_output": 0.015464992043082168,
    "avg_bits_err_improve": 29.564601886819748,
    "time": 4486.7861328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.587006303554848,
    "avg_bits_err_output": 28.664171428616346,
    "avg_bits_err_improve": 0.922834874938502,
    "time": 35767.835205078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.74572717208754,
    "avg_bits_err_output": 9.74572717208754,
    "avg_bits_err_improve": 0,
    "time": 87057.79150390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.990941654153616,
    "avg_bits_err_output": 36.990941654153616,
    "avg_bits_err_improve": 0,
    "time": 44772.3544921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (exp (- (* 0.5 (log1p x)))) (- (- (* x (+ 1.0 (/ 1.0 (sqrt (+ x 1.0))))) (sqrt x)) x))",
    "output_parens": 13,
    "avg_bits_err_input": 30.42149008764258,
    "avg_bits_err_output": 26.183157877290945,
    "avg_bits_err_improve": 4.238332210351636,
    "time": 38333.858154296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.503821979855935,
    "avg_bits_err_output": 0.39215946097739857,
    "avg_bits_err_improve": 37.11166251887854,
    "time": 31904.322509765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.814181388769363,
    "avg_bits_err_output": 19.672859533366413,
    "avg_bits_err_improve": 0.14132185540294984,
    "time": 25417.97119140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- -1.0 (- (+ (atan N) -1.0) (atan (- N -1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 14.277424160347712,
    "avg_bits_err_output": 14.29006086692441,
    "avg_bits_err_improve": -0.012636706576698131,
    "time": 51369.618896484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 28.96638773513798,
    "avg_bits_err_output": 1.2500851671895141,
    "avg_bits_err_improve": 27.716302567948468,
    "time": 30783.360595703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 (/ (- m (* m m)) v)) (- 1.0 (- 2.0 m)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.08487256701560164,
    "avg_bits_err_output": 0.08751360858728911,
    "avg_bits_err_improve": -0.002641041571687472,
    "time": 32248.8212890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.087441263329783,
    "avg_bits_err_output": 0.31218665469173684,
    "avg_bits_err_improve": 15.775254608638047,
    "time": 19616.53857421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (* (* (/ -1.0 (log1p (expm1 (* PI (/ angle 180.0))))) (* (/ angle 180.0) (- PI))) (/ angle 180.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.348666461291202,
    "avg_bits_err_output": 20.34659459512482,
    "avg_bits_err_improve": 0.002071866166382108,
    "time": 59070.117919921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 31.37059061946111,
    "avg_bits_err_output": 31.37059061946111,
    "avg_bits_err_improve": 0,
    "time": 49442.477783203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (fma (cos (+ (/ angle 180.0) (* (/ angle 180.0) PI))) (cos (/ angle 180.0)) (- (* (sin (+ (/ angle 180.0) (* (/ angle 180.0) PI))) (- (sin (/ angle 180.0))))))) 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 20.541261682835103,
    "avg_bits_err_output": 20.54041680499112,
    "avg_bits_err_improve": 0.0008448778439813509,
    "time": 91701.11450195312,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18474279776851638,
    "avg_bits_err_output": 0.18260642424864698,
    "avg_bits_err_improve": 0.0021363735198693945,
    "time": 29968.894775390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (log (exp (tan x))))) (+ 1.0 (pow (tan x) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.3180175992242749,
    "avg_bits_err_output": 0.3411137239206888,
    "avg_bits_err_improve": -0.023096124696413867,
    "time": 60809.08984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13227124062518028,
    "avg_bits_err_output": 0.13227124062518028,
    "avg_bits_err_improve": 0,
    "time": 26804.32373046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.004589539228938,
    "avg_bits_err_output": 17.003400863830354,
    "avg_bits_err_improve": 0.001188675398584138,
    "time": 41614.709228515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.31160300809916,
    "avg_bits_err_output": 45.86787583109036,
    "avg_bits_err_improve": 6.443727177008803,
    "time": 24350.0810546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma b (* b (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))) (- b)) (* a (* c (* -4.0 (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.508292504147214,
    "avg_bits_err_output": 27.726252544334322,
    "avg_bits_err_improve": 0.7820399598128915,
    "time": 24731.06689453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.87748042462839,
    "avg_bits_err_output": 39.58160374982736,
    "avg_bits_err_improve": 4.295876674801029,
    "time": 35476.912353515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.88879999874394,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": 0,
    "time": 23007.68212890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (expm1 (log1p (cos (- lambda1 lambda2))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8908471282957333,
    "avg_bits_err_output": 0.9026760529839578,
    "avg_bits_err_improve": -0.011828924688224496,
    "time": 41324.391357421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.039778307518205,
    "avg_bits_err_output": 29.039778307518205,
    "avg_bits_err_improve": 0,
    "time": 6092.220458984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.189138759505,
    "avg_bits_err_output": 1.2014293234384918,
    "avg_bits_err_improve": 56.98770943606651,
    "time": 9284.530029296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.02941010114313,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 58.02191010114313,
    "time": 6969.699462890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008094360937770434,
    "avg_bits_err_output": 0.008094360937770434,
    "avg_bits_err_improve": 0,
    "time": 2781.156005859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ (sqrt (fma x x -1.0)) (+ x -1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 32.07325,
    "avg_bits_err_output": 32.073375,
    "avg_bits_err_improve": -0.00012499999999704414,
    "time": 5915.266357421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (* (/ (+ 1.0 x) (- 1.0 x)) (* (log (exp (/ (+ 1.0 x) (- 1.0 x)))) (/ (/ (+ 1.0 x) (- 1.0 x)) (/ (+ 1.0 x) (- 1.0 x)))))) 0.25)",
    "output_parens": 19,
    "avg_bits_err_input": 58.43124789208118,
    "avg_bits_err_output": 58.432993528438324,
    "avg_bits_err_improve": -0.0017456363571426436,
    "time": 61278.541015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04369812031259015,
    "avg_bits_err_output": 0.04369812031259015,
    "avg_bits_err_improve": 0,
    "time": 3433.550048828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (- (+ (cos (atan (/ (/ eh ew) (tan t)))) 1.0) 1.0)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13021936093777042,
    "avg_bits_err_output": 0.1321462406251803,
    "avg_bits_err_improve": -0.0019268796874098715,
    "time": 50904.99658203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (- (* (+ (cos (atan (/ (* eh (- (tan t))) ew))) 1.0) (* ew (cos t))) (* ew (cos t))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.122625,
    "avg_bits_err_output": 0.1568774437510817,
    "avg_bits_err_improve": -0.034252443751081704,
    "time": 21446.0185546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 38.849716132013,
    "avg_bits_err_output": 3.58124714271852,
    "avg_bits_err_improve": 35.26846898929448,
    "time": 48663.8818359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (log (exp (/ (- (* a a) (* b b)) (* a a))))))",
    "output_parens": 9,
    "avg_bits_err_input": 14.657914333518113,
    "avg_bits_err_output": 14.660261271391908,
    "avg_bits_err_improve": -0.002346937873795696,
    "time": 4661.056640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (+ (fma (- (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))) (sin phi1) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (- (cos delta) (* (- (sin phi1)) (expm1 (log1p (- (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1))))))))))))))",
    "output_parens": 51,
    "avg_bits_err_input": 0.16004668487053925,
    "avg_bits_err_output": 0.16515084302696187,
    "avg_bits_err_improve": -0.005104158156422622,
    "time": 43795.832763671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) -1.0))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.33944271674547,
    "avg_bits_err_output": 45.91300641529654,
    "avg_bits_err_improve": 6.426436301448923,
    "time": 37635.0712890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (+ (* (/ 1.0 (fma a (* c -3.0) (* b b))) (* c (* a -3.0))) (* b (* b (/ 1.0 (fma a (* c -3.0) (* b b))))))) (- b)) (* 3.0 a))",
    "output_parens": 23,
    "avg_bits_err_input": 28.646493578571594,
    "avg_bits_err_output": 28.65318241760692,
    "avg_bits_err_improve": -0.006688839035327021,
    "time": 27493.634033203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ b b)) (* -3.0 (* (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* c a)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.89042012060226,
    "avg_bits_err_output": 39.54079179936736,
    "avg_bits_err_improve": 4.349628321234896,
    "time": 38009.518798828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.93005751268642,
    "avg_bits_err_output": 33.93005751268642,
    "avg_bits_err_improve": 0,
    "time": 32349.587646484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.362692445980375,
    "avg_bits_err_output": 13.362692445980375,
    "avg_bits_err_improve": 0,
    "time": 58685.594482421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.32578772281659,
    "avg_bits_err_output": 29.33337611149923,
    "avg_bits_err_improve": -0.007588388682641778,
    "time": 27535.068603515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011125,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0,
    "time": 7819.662353515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.143255548844879,
    "avg_bits_err_output": 14.143255548844879,
    "avg_bits_err_improve": 0,
    "time": 36765.85546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -8.8e-299) (/ (- (* (sqrt 2.0) (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* F (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (/ (- (pow B 2.0) (* A (* C 4.0))) (- (pow B 2.0) (* A (* C 4.0)))))))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0)))) (* (sqrt F) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 58,
    "avg_bits_err_input": 52.36936568687435,
    "avg_bits_err_output": 48.52365095693325,
    "avg_bits_err_improve": 3.8457147299411005,
    "time": 47177.073486328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.552095268521562,
    "avg_bits_err_output": 29.552095268521562,
    "avg_bits_err_improve": 0,
    "time": 44894.337646484375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -3.8e-228) (/ (- (* (* (sqrt (- F)) (sqrt (- (* A (* C 4.0)) (pow B 2.0)))) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt F)) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.91519349146561,
    "avg_bits_err_output": 47.74394894488652,
    "avg_bits_err_improve": 5.171244546579089,
    "time": 54354.995361328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.01564985920578,
    "avg_bits_err_output": 16.01564985920578,
    "avg_bits_err_improve": 0,
    "time": 74444.66040039062,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.34e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g -5e-288) (+ (* (* (cbrt (/ 1.0 (+ a a))) (/ (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)) (cbrt (/ 1.0 (+ a a))))) (cbrt (/ 1.0 (+ a a)))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 5.5e-155) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g)))) (if (<= g 5e+152) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))))",
    "output_parens": 122,
    "avg_bits_err_input": 35.977806423664475,
    "avg_bits_err_output": 14.348316700684926,
    "avg_bits_err_improve": 21.62948972297955,
    "time": 66070.5859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (/ (+ (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))) (cos (- (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0)) (* 2.0 PI)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.9911727453198026,
    "avg_bits_err_output": 0.0287124062518029,
    "avg_bits_err_improve": 0.9624603390679997,
    "time": 11447.833251953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.9006462406251803,
    "avg_bits_err_output": 0.9006462406251803,
    "avg_bits_err_improve": 0,
    "time": 3443.159423828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.103851474437171,
    "avg_bits_err_output": 11.103851474437171,
    "avg_bits_err_improve": 0,
    "time": 21233.891357421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5259289385955593,
    "avg_bits_err_output": 0.434375,
    "avg_bits_err_improve": 0.09155393859555933,
    "time": 13897.06005859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -5e+16) (- (log1p (+ (+ -1.0 (* x (exp 1.0))) (* (hypot 1.0 x) (exp 1.0)))) 1.0) (log1p (+ x (exp (log (+ (hypot 1.0 x) -1.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 53.251528206832646,
    "avg_bits_err_output": 13.707087199941137,
    "avg_bits_err_improve": 39.54444100689151,
    "time": 27135.33642578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.740628981971858,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.740628981971858,
    "time": 2536.207763671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 0,
    "time": 9376.946044921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1272.7236328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -2e+182) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 1e-6) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.582187331450612,
    "avg_bits_err_output": 6.648644376953952,
    "avg_bits_err_improve": 5.9335429544966605,
    "time": 36978.255126953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (fma x1 (* x1 -6.0) (* (- (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0))) (+ (- -1.0 (fma (+ x1 x1) (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (* x1 (* x1 4.0)))) 1.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 46,
    "avg_bits_err_input": 0.5148986108851147,
    "avg_bits_err_output": 0.27426562887805206,
    "avg_bits_err_improve": 0.24063298200706262,
    "time": 71405.0986328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma u u (* t1 (+ (+ t1 u) u))))",
    "output_parens": 7,
    "avg_bits_err_input": 18.313158470463996,
    "avg_bits_err_output": 18.311061269516664,
    "avg_bits_err_improve": 0.002097200947332567,
    "time": 20263.836181640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2306079264948677,
    "avg_bits_err_output": 0.2306079264948677,
    "avg_bits_err_improve": 0,
    "time": 23205.388916015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2961.869140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.656241829431005,
    "avg_bits_err_output": 9.479470588805777,
    "avg_bits_err_improve": 5.176771240625229,
    "time": 39904.956298828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- 1.0 (- (+ (exp (- (fma eps x x))) 1.0) (exp (- (* eps x) x))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.178838880393464,
    "avg_bits_err_output": 1.3039285953665074,
    "avg_bits_err_improve": 27.874910285026957,
    "time": 32341.785400390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.0125,
    "avg_bits_err_output": 0.0125,
    "avg_bits_err_improve": 0,
    "time": 14426.342041015625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.01725,
    "avg_bits_err_output": 0.01725,
    "avg_bits_err_improve": 0,
    "time": 21327.966796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) -1.0) (/ (+ t t) (+ t 1.0))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.04275,
    "avg_bits_err_output": 0.04750244375108172,
    "avg_bits_err_improve": -0.00475244375108172,
    "time": 32777.1689453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3011.457275390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3035.830322265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3878.131103515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.843910449075863,
    "avg_bits_err_output": 0.249875,
    "avg_bits_err_improve": 7.594035449075863,
    "time": 63894.96142578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.7158885577526855,
    "avg_bits_err_output": 7.7158885577526855,
    "avg_bits_err_improve": 0,
    "time": 29426.343994140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(fma eps eps (* x (+ eps eps)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.11846614546361,
    "avg_bits_err_output": 0.006839280689708265,
    "avg_bits_err_improve": 16.111626864773903,
    "time": 12331.262939453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (pow (pow (exp x) 10.0) x) (cos x)) (log (pow (exp (cos x)) (cos x))))",
    "output_parens": 11,
    "avg_bits_err_input": 3.5323393279850985,
    "avg_bits_err_output": 2.114975731698914,
    "avg_bits_err_improve": 1.4173635962861844,
    "time": 50313.6259765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.29409370700576,
    "avg_bits_err_output": 15.29409370700576,
    "avg_bits_err_improve": 0,
    "time": 27459.92822265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.96791563568305,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.96791563568305,
    "time": 5754.8828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.30441054977922,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 38.30403554977922,
    "time": 4314.713134765625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2985,
    "avg_bits_err_improve": 63.7015,
    "time": 6163.48388671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843251042012014,
    "avg_bits_err_output": 0.3966605265643932,
    "avg_bits_err_improve": 61.44659051544762,
    "time": 23497.062255859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* b b) (* a (* c -4.0))))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8941878028341,
    "avg_bits_err_output": 33.922129929473144,
    "avg_bits_err_improve": -0.02794212663904716,
    "time": 24084.18505859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.88879999874394,
    "avg_bits_err_output": 33.88879999874394,
    "avg_bits_err_improve": 0,
    "time": 24293.598388671875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2351.605224609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.16383456716739,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 40.15370956716739,
    "time": 23862.413818359375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(log1p (expm1 (/ (- (* x x) (* y y)) (fma x x (* y y)))))",
    "output_parens": 8,
    "avg_bits_err_input": 20.353977514116686,
    "avg_bits_err_output": 20.35893382337495,
    "avg_bits_err_improve": -0.004956309258265179,
    "time": 8934.077392578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6186085787196505,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6186085787196505,
    "time": 6524.64794921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.036,
    "time": 7353.341064453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021969360937770434,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.010594360937770435,
    "time": 4512.250732421875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01275,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.0013749999999999995,
    "time": 2703.543212890625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 2326.40625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3988729328161961,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 0.15587293281619613,
    "time": 9673.010986328125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.483744802675492,
    "avg_bits_err_output": 29.483744802675492,
    "avg_bits_err_improve": 0,
    "time": 11488.613525390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.967283559370152,
    "avg_bits_err_output": 24.967283559370152,
    "avg_bits_err_improve": 0,
    "time": 24125.220458984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.077157344841027,
    "avg_bits_err_output": 30.08894748091618,
    "avg_bits_err_improve": -0.011790136075152446,
    "time": 42330.612060546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00764624062518029,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.00652124062518029,
    "time": 3481.58740234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-231) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1.0) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.686514191116316,
    "avg_bits_err_output": 10.49988144004015,
    "avg_bits_err_improve": 37.18663275107617,
    "time": 48590.256103515625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.1341579976068,
    "avg_bits_err_output": 26.1341579976068,
    "avg_bits_err_improve": 0,
    "time": 48283.507080078125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a d) (+ (* c b) (* a (* d -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 26.197595971955746,
    "avg_bits_err_output": 26.2066600076387,
    "avg_bits_err_improve": -0.009064035682953886,
    "time": 23026.93701171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03375,
    "avg_bits_err_output": 0.023450605288241753,
    "avg_bits_err_improve": 0.01029939471175825,
    "time": 7468.637939453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (fma (- (fma ux maxCos 1.0) ux) ux (- (fma ux (* ux (/ (- (+ maxCos -1.0) (* ux maxCos)) ux)) (* ux (- (* ux (* maxCos maxCos)) (- maxCos))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.703806796572488,
    "avg_bits_err_output": 0.5425720343742237,
    "avg_bits_err_improve": 13.161234762198264,
    "time": 52776.411376953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (- (+ (- ux) (* ux (+ (+ (* ux (* maxCos (+ maxCos -1.0))) maxCos) (* (- 1.0 ux) (+ maxCos -1.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.741929338666584,
    "avg_bits_err_output": 0.34078768691105815,
    "avg_bits_err_improve": 13.401141651755525,
    "time": 44719.378662109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (- (* uy (+ (* PI 2.0) 1.0)) uy))))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33763074281731875,
    "avg_bits_err_output": 0.35555088922279554,
    "avg_bits_err_improve": -0.01792014640547679,
    "time": 119956.8076171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.1906883504838014,
    "avg_bits_err_output": 0.1908133504838014,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 31857.124267578125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5439826908594201,
    "avg_bits_err_output": 0.5402320997541838,
    "avg_bits_err_improve": 0.003750591105236234,
    "time": 35519.35595703125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3170521316007832,
    "avg_bits_err_output": 0.3170521316007832,
    "avg_bits_err_improve": 0,
    "time": 72313.00024414062,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(+ (fma (- s) (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)) (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))) (* s (- (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 0.33130660728913075,
    "avg_bits_err_output": 0.3324924100556952,
    "avg_bits_err_improve": -0.0011858027665644366,
    "time": 40923.756591796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.061751992049796756,
    "avg_bits_err_output": 0.04154837748020238,
    "avg_bits_err_improve": 0.020203614569594373,
    "time": 14079.630859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (- (fabs x)) s))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.15397063354866408,
    "avg_bits_err_output": 0.13574957734383947,
    "avg_bits_err_improve": 0.018221056204824615,
    "time": 23959.4375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.648488859115783,
    "avg_bits_err_output": 0.648488859115783,
    "avg_bits_err_improve": 0,
    "time": 40658.539794921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1675748508106349,
    "avg_bits_err_output": 0.16345586061346765,
    "avg_bits_err_improve": 0.004118990197167244,
    "time": 22683.3505859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4634390628625606,
    "avg_bits_err_output": 2.461625047994461,
    "avg_bits_err_improve": 0.0018140148680996226,
    "time": 23989.113037109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (* v (fma (sinh (/ 1.0 v)) 2.0 -2.0)) (* v -2.0)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.47404769640329625,
    "avg_bits_err_output": 0.4780267876785636,
    "avg_bits_err_improve": -0.003979091275267355,
    "time": 46062.94140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(log (pow (exp (/ 1.0 (+ v v))) (exp (- (- 0.6931 (/ 1.0 v)) (- (/ (* sinTheta_i sinTheta_O) v) (/ (* cosTheta_i cosTheta_O) v))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.1179853212986712,
    "avg_bits_err_output": 0.6055286338972006,
    "avg_bits_err_improve": -0.48754331259852934,
    "time": 10807.5859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (log (+ (pow alpha (* (* PI (+ (- (* alpha (* (* cosTheta cosTheta) alpha)) (* cosTheta cosTheta)) 1.0)) 2.0)) 0.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.47274946954319436,
    "avg_bits_err_output": 0.4259098947353477,
    "avg_bits_err_improve": 0.04683957480784667,
    "time": 30852.622802734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log (- 1.0 (/ (- u 0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3164124899728602,
    "avg_bits_err_output": 1.0647556216906067,
    "avg_bits_err_improve": 0.25165686828225353,
    "time": 95490.02514648438,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.394417548115204,
    "avg_bits_err_output": 0.20457312031259015,
    "avg_bits_err_improve": 12.189844427802614,
    "time": 53773.26806640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1410571449845021,
    "avg_bits_err_output": 0.14016090435932183,
    "avg_bits_err_improve": 0.0008962406251802613,
    "time": 70397.50244140625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (+ (* (/ 1.0 (sin normAngle)) (* (sin (* normAngle (- u))) (cos normAngle))) (* (sin normAngle) (/ (cos (* normAngle u)) (sin normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 23,
    "avg_bits_err_input": 0.8889425159661124,
    "avg_bits_err_output": 0.8347014806649288,
    "avg_bits_err_improve": 0.05424103530118363,
    "time": 61035.02197265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6715434552179841,
    "avg_bits_err_output": 0.45597293439123227,
    "avg_bits_err_improve": 0.21557052082675182,
    "time": 56803.39453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(log1p (* (expm1 (* (sqrt (- (log1p (- u1)))) (sin (* 2.0 (* PI u2))))) (* (expm1 (* (sqrt (- (log1p (- u1)))) (sin (* 2.0 (* PI u2))))) (/ 1.0 (expm1 (* (sqrt (- (log1p (- u1)))) (sin (* 2.0 (* PI u2)))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 13.621784274776658,
    "avg_bits_err_output": 0.5638369495782392,
    "avg_bits_err_improve": 13.05794732519842,
    "time": 32479.785400390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (/ (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2))) (pow (cos (* (* 2.0 PI) u2)) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 13.665214078245482,
    "avg_bits_err_output": 0.3435338082837175,
    "avg_bits_err_improve": 13.321680269961764,
    "time": 52646.443115234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (* (- alpha) alpha) (log1p (- u0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.170012526780337,
    "avg_bits_err_output": 0.32003552656439316,
    "avg_bits_err_improve": 13.849977000215944,
    "time": 39298.97900390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.597309665124838,
    "avg_bits_err_output": 0.5122790760729932,
    "avg_bits_err_improve": 12.085030589051845,
    "time": 18779.80908203125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+166) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (if (<= (* PI l) -2e-62) (- (* PI l) (* (/ 1.0 (* F F)) (tan (- (* l (* l (+ (/ PI l) 1.0))) (* l l))))) (if (<= (* PI l) 20000000.0) (- (* PI l) (- (* (/ 1.0 F) (- (* (tan (* PI l)) (/ 1.0 F)))))) (if (<= (* PI l) 1e+144) (- (* PI l) (* (/ 1.0 (* F F)) (tan (- (* l (* l (+ (/ PI l) 1.0))) (* l l))))) (- (* PI l) (+ (/ 1.0 (* F F)) (* (/ 1.0 (* F F)) (+ (tan (expm1 (log1p (* PI l)))) -1.0))))))))",
    "output_parens": 66,
    "avg_bits_err_input": 16.6436605511083,
    "avg_bits_err_output": 10.053331406694937,
    "avg_bits_err_improve": 6.590329144413364,
    "time": 50824.91064453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20960112287783922,
    "avg_bits_err_output": 0.20853964124079802,
    "avg_bits_err_improve": 0.0010614816370412006,
    "time": 27597.48681640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+277) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.19585464388637,
    "avg_bits_err_output": 11.824450219315374,
    "avg_bits_err_improve": 1.371404424570997,
    "time": 53705.059814453125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.58779739507401,
    "avg_bits_err_output": 1.954953771090417,
    "avg_bits_err_improve": 59.6328436239836,
    "time": 76764.2216796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= l -1.18e+151) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (if (<= l 4.7e+116) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (* l l) (+ (/ (+ 1.0 x) (+ -1.0 x)) -1.0))))) (/ (- (* (* (sqrt 2.0) (+ (/ t (sqrt 2.0)) 1.0)) (sqrt 2.0)) 2.0) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma 2.0 (* t t) (* l l)) (* l (fma l -1.0 l))))))))",
    "output_parens": 56,
    "avg_bits_err_input": 42.70191322909703,
    "avg_bits_err_output": 36.13098051724202,
    "avg_bits_err_improve": 6.570932711855008,
    "time": 46519.95556640625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 4.202135922791699,
    "avg_bits_err_output": 0.21897669219101554,
    "avg_bits_err_improve": 3.9831592306006836,
    "time": 39984.18701171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ 1.0 (- (/ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 1.060151335454401,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 1.052276335454401,
    "time": 16613.12841796875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.389237730312896,
    "avg_bits_err_output": 10.389362730312898,
    "avg_bits_err_improve": -0.0001250000000023732,
    "time": 55253.990234375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -5e-310) (* (sqrt (- U)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 n)))) (* (sqrt (* n (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (sqrt (* 2.0 U))))",
    "output_parens": 33,
    "avg_bits_err_input": 34.559575328156924,
    "avg_bits_err_output": 29.18159063246145,
    "avg_bits_err_improve": 5.377984695695474,
    "time": 39152.796630859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -5e+110) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (if (<= t -2.6e-97) (/ 2.0 (* (pow (/ k t) 2.0) (* (sin k) (* (/ (pow t 3.0) (* l l)) (tan k))))) (if (<= t 1.5e-86) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))))))",
    "output_parens": 66,
    "avg_bits_err_input": 47.90102348639842,
    "avg_bits_err_output": 35.355962680647664,
    "avg_bits_err_improve": 12.545060805750758,
    "time": 58583.95751953125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+237) (/ 2.0 (* (sin k) (* (/ (pow t 3.0) (* l l)) (- (* (tan k) (+ 3.0 (pow (/ k t) 2.0))) (tan k))))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (+ (fma (sin k) (tan k) (* (tan k) (sin (- k)))) (* (sin k) (* (tan k) (/ (pow t 3.0) (* l l))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 32.68437030765328,
    "avg_bits_err_output": 30.89249812954408,
    "avg_bits_err_improve": 1.7918721781092017,
    "time": 43623.36083984375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5266481234615706,
    "avg_bits_err_output": 0.4964924843993408,
    "avg_bits_err_improve": 0.030155639062229844,
    "time": 40324.028076171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* PI (* (/ 2.0 PI) (* PI n))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5506039723449057,
    "avg_bits_err_output": 0.5531653295687787,
    "avg_bits_err_improve": -0.002561357223873073,
    "time": 52437.62060546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (fma (- (exp l) (exp (- l))) (cos (/ K 2.0)) (fma (- (exp (- l))) (cos (/ K 2.0)) (* (exp (- l)) (cos (/ K 2.0)))))) U)",
    "output_parens": 20,
    "avg_bits_err_input": 17.57793623564195,
    "avg_bits_err_output": 17.57793349674554,
    "avg_bits_err_improve": 2.7388964092267543e-06,
    "time": 41275.326171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 2.0) (* (+ (+ 2.0 (+ (cos (- (/ (* K (+ m n)) 2.0) M)) -4.0)) 2.0) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* (+ m n) (fma K (- (+ 1.0 (* K (/ (/ 1.0 (+ m n)) K))) 1.0) 0.0))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 60,
    "avg_bits_err_input": 15.525022680929563,
    "avg_bits_err_output": 1.3105131083924473,
    "avg_bits_err_improve": 14.214509572537116,
    "time": 36552.957275390625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.301167481250364,
    "avg_bits_err_output": 18.301167481250364,
    "avg_bits_err_improve": 0,
    "time": 38866.369873046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 1e+303) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (log1p (expm1 (/ (* M D) (+ d d)))) 2.0))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.097235306350637,
    "avg_bits_err_output": 9.628011783409937,
    "avg_bits_err_improve": 4.4692235229407,
    "time": 30142.534423828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.458718662940683,
    "avg_bits_err_output": 18.458718662940683,
    "avg_bits_err_improve": 0,
    "time": 26129.733154296875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= w -5e-58) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* c0 d)) (* D (* D (* h w)))) (sqrt (* (- (/ (* d (* c0 d)) (* D (* D (* h w)))) M) (+ (/ (* d (* c0 d)) (* D (* D (* h w)))) M))))) (* (/ c0 (+ w w)) (+ (/ (* c0 (* d d)) (* w (* D (* D h)))) (sqrt (- (* (/ (* c0 (* d d)) (* w (* D (* D h)))) (/ (* c0 (* d d)) (* w (* D (* D h))))) (* M M))))))",
    "output_parens": 54,
    "avg_bits_err_input": 59.269508356723485,
    "avg_bits_err_output": 57.684103463842185,
    "avg_bits_err_improve": 1.5854048928813,
    "time": 43750.034423828125,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+283) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* 1.0 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 26.68856513104088,
    "avg_bits_err_output": 25.354474885315476,
    "avg_bits_err_improve": 1.3340902457254025,
    "time": 75112.90185546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 16.00784359152053,
    "avg_bits_err_output": 16.00784359152053,
    "avg_bits_err_improve": 0,
    "time": 15800.886474609375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9842193609377705,
    "avg_bits_err_output": 0.013948120312590144,
    "avg_bits_err_improve": 0.9702712406251803,
    "time": 8847.66748046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* t (* v v))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4448520355945246,
    "avg_bits_err_output": 0.37511085395171373,
    "avg_bits_err_improve": 0.06974118164281085,
    "time": 29205.6201171875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014292481250360577,
    "avg_bits_err_output": 0.01214624062518029,
    "avg_bits_err_improve": 0.0021462406251802867,
    "time": 10003.89794921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (+ 1.0 (* v (* v -5.0))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.515697075733991,
    "avg_bits_err_output": 0.515572075733991,
    "avg_bits_err_improve": 0.00012500000000004174,
    "time": 13270.96435546875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (+ (* k (+ k 10.0)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 2.106638157000591,
    "avg_bits_err_output": 2.0802349616894436,
    "avg_bits_err_improve": 0.02640319531114743,
    "time": 16385.86572265625,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017997431866599887,
    "avg_bits_err_output": 0.017997431866599887,
    "avg_bits_err_improve": 0,
    "time": 7606.541748046875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (exp (log (* (* b b) 4.0)))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.1822479328161959,
    "avg_bits_err_output": 0.18237293281619588,
    "avg_bits_err_improve": -0.00012499999999998623,
    "time": 33056.54052734375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma a (* a (* b b)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1846298982688467,
    "avg_bits_err_output": 0.08075671790713489,
    "avg_bits_err_improve": 0.10387318036171182,
    "time": 31185.77880859375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (* b (+ (* b (* b b)) (* b (* a a)))) (* a (* (fma b b (* a a)) a))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 22,
    "avg_bits_err_input": 0.18933762053106826,
    "avg_bits_err_output": 0.13590036606826872,
    "avg_bits_err_improve": 0.05343725446279954,
    "time": 31031.227294921875,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.235230172694507,
    "avg_bits_err_output": 13.242528750700158,
    "avg_bits_err_improve": -0.007298578005650924,
    "time": 15604.59912109375,
    "seed": 8,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.279883517511536,
    "avg_bits_err_output": 0.050125,
    "avg_bits_err_improve": 40.229758517511534,
    "time": 5713.354248046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (fma (- (* (sin x) (/ 1.0 (sin x)))) (sin x) (sin x))) (+ (- x (tan x)) (fma (- (* (tan x) (* (- (+ 1.0 (* (tan x) (/ 1.0 (tan x)))) (log (pow (exp (* (/ 1.0 (tan x)) (- (tan x)))) -1.0))) (/ 1.0 (tan x))))) (tan x) (tan x))))",
    "output_parens": 38,
    "avg_bits_err_input": 31.887283812701988,
    "avg_bits_err_output": 29.068752424534374,
    "avg_bits_err_improve": 2.8185313881676137,
    "time": 43924.029052734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma b_2 b_2 (* a (- c)))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.25679418892966,
    "avg_bits_err_output": 34.25777769128104,
    "avg_bits_err_improve": -0.00098350235138156,
    "time": 19972.8564453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* a (- c))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.646977942311466,
    "avg_bits_err_output": 34.64637270027428,
    "avg_bits_err_improve": 0.0006052420371887024,
    "time": 17034.3583984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (fma (* (cos x) (- (exp 1.0))) (exp -1.0) (exp 0.0)) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 31.51567623839316,
    "avg_bits_err_output": 31.195331718712676,
    "avg_bits_err_improve": 0.32034451968048216,
    "time": 36469.88037109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (exp 1.0) (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.593478801695994,
    "avg_bits_err_output": 32.31713050927404,
    "avg_bits_err_improve": 0.27634829242195735,
    "time": 63643.115966796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.482993288620186,
    "avg_bits_err_output": 0.023125,
    "avg_bits_err_improve": 29.459868288620186,
    "time": 5265.22509765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -7e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 1.32e+154) (- (- (* (pow (+ x 1.0) -2.0) (+ x 2.0)) (/ 1.0 x)) (pow (+ x 1.0) -2.0)) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.84130662861528,
    "avg_bits_err_output": 4.413942127498694,
    "avg_bits_err_improve": 10.427364501116585,
    "time": 33123.1455078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.39427075411002,
    "avg_bits_err_output": 5.912346186473413,
    "avg_bits_err_improve": 33.481924567636604,
    "time": 34859.53076171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (- (- (cbrt (- x -1.0)) 1.0) (cbrt x)) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.94498734798447,
    "avg_bits_err_output": 29.633294928707027,
    "avg_bits_err_improve": 0.31169241927744196,
    "time": 34489.33349609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.263074593365097,
    "avg_bits_err_output": 30.26412117139751,
    "avg_bits_err_improve": -0.0010465780324118157,
    "time": 31552.166259765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* c (* a -8.0)))))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 34.195757106768276,
    "avg_bits_err_output": 34.19527662220264,
    "avg_bits_err_improve": 0.0004804845656352086,
    "time": 21490.779296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.44614432655109,
    "avg_bits_err_output": 34.44614432655109,
    "avg_bits_err_improve": 0,
    "time": 66428.36889648438,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.305152710857946,
    "avg_bits_err_output": 0.024575564063671885,
    "avg_bits_err_improve": 61.28057714679427,
    "time": 19529.276611328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 62.99370881589905,
    "avg_bits_err_output": 0.13384928244823782,
    "avg_bits_err_improve": 62.85985953345081,
    "time": 52110.03369140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (exp (+ -1.0 (/ (- 1.0 eps) (+ 1.0 eps))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.463043797532045,
    "avg_bits_err_output": 58.46518041142877,
    "avg_bits_err_improve": -0.0021366138967238157,
    "time": 46917.16796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (* (exp 1.0) (exp (+ (log1p (- (/ 1.0 x) (/ 1.0 (tan x)))) -1.0))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 59.90029006700842,
    "avg_bits_err_output": 59.90012023913703,
    "avg_bits_err_improve": 0.00016982787138886124,
    "time": 86170.89575195312,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -1.02e-181) (/ (* eps (expm1 (fma a (* a (/ eps a)) (* eps b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps -3.6e-306) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (* (expm1 (* eps a)) (- (pow (exp b) eps) 1.0))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 38,
    "avg_bits_err_input": 60.35248503890346,
    "avg_bits_err_output": 40.69247661320245,
    "avg_bits_err_improve": 19.660008425701008,
    "time": 37637.611083984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 40.71257744821935,
    "avg_bits_err_output": 0.1420847914171681,
    "avg_bits_err_improve": 40.57049265680218,
    "time": 12494.565673828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.639894128298145,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.63939412829814,
    "time": 3615.044677734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 28.49945657089388,
    "avg_bits_err_output": 0.01815499375684071,
    "avg_bits_err_improve": 28.48130157713704,
    "time": 3918.308837890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.14058623538579,
    "avg_bits_err_output": 28.224422021859144,
    "avg_bits_err_improve": 0.9161642135266455,
    "time": 28754.40673828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.00177022459701,
    "avg_bits_err_output": 10.00177022459701,
    "avg_bits_err_improve": 0,
    "time": 38886.96435546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.06446869702387,
    "avg_bits_err_output": 37.06446869702387,
    "avg_bits_err_improve": 0,
    "time": 46189.97314453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (- (fma x (+ 1.0 (/ 1.0 (sqrt (+ x 1.0)))) (- (sqrt x))) x))",
    "output_parens": 12,
    "avg_bits_err_input": 30.073167042723615,
    "avg_bits_err_output": 25.827315512037895,
    "avg_bits_err_improve": 4.245851530685719,
    "time": 41887.710693359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (fma (- 1.0 (cos eps)) (- (sin x)) (* (- 1.0 (cos eps)) (sin x))) (fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 37.03248519238114,
    "avg_bits_err_output": 0.401187576135921,
    "avg_bits_err_improve": 36.63129761624522,
    "time": 34897.040283203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.56944854718025,
    "avg_bits_err_output": 19.433042869462664,
    "avg_bits_err_improve": 0.13640567771758683,
    "time": 34825.01318359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (- (atan (+ N 1.0)) 1.0) -1.0) (atan N))",
    "output_parens": 6,
    "avg_bits_err_input": 14.825275473549802,
    "avg_bits_err_output": 14.826014469124623,
    "avg_bits_err_improve": -0.0007389955748209331,
    "time": 20926.279541015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.209372297151717,
    "avg_bits_err_output": 1.4312366936942307,
    "avg_bits_err_improve": 27.778135603457486,
    "time": 26660.26220703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07142932343849158,
    "avg_bits_err_output": 0.07551621282076107,
    "avg_bits_err_improve": -0.00408688938226949,
    "time": 63781.933349609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.494462756005221,
    "avg_bits_err_output": 0.31277161719245794,
    "avg_bits_err_improve": 15.181691138812763,
    "time": 24133.670166015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* PI (/ (/ angle 180.0) PI)) (* (* PI (/ (/ angle 180.0) PI)) (* (- (- PI)) (/ 1.0 (* PI (/ (/ angle 180.0) PI)))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 24,
    "avg_bits_err_input": 20.553976437900413,
    "avg_bits_err_output": 20.82822175166342,
    "avg_bits_err_improve": -0.2742453137630072,
    "time": 74263.994140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.68913021245405,
    "avg_bits_err_output": 31.638224907116392,
    "avg_bits_err_improve": 0.05090530533765758,
    "time": 49148.83056640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (* PI (/ angle 180.0)) (* (* PI (/ angle 180.0)) (/ 1.0 (log1p (expm1 (* PI (/ angle 180.0))))))))) 2.0))",
    "output_parens": 20,
    "avg_bits_err_input": 20.992348440806676,
    "avg_bits_err_output": 21.039643519738107,
    "avg_bits_err_improve": -0.04729507893143037,
    "time": 72602.671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18145772226222148,
    "avg_bits_err_output": 0.179590467732707,
    "avg_bits_err_improve": 0.0018672545295144727,
    "time": 27862.618408203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (fma (tan x) (- 1.0 (tan x)) (- 1.0 (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.32372057079218763,
    "avg_bits_err_output": 0.34452418125601797,
    "avg_bits_err_improve": -0.020803610463830335,
    "time": 44896.704833984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1403962406251803,
    "avg_bits_err_output": 0.1403962406251803,
    "avg_bits_err_improve": 0,
    "time": 36547.303955078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (/ (sin phi2) (sin phi1)) (pow (sin phi1) 2.0)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 15,
    "avg_bits_err_input": 16.526754732811064,
    "avg_bits_err_output": 16.534301497732166,
    "avg_bits_err_improve": -0.007546764921102067,
    "time": 48388.5,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.58784690087849,
    "avg_bits_err_output": 46.10735297333556,
    "avg_bits_err_improve": 6.4804939275429305,
    "time": 25815.528076171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma a (* c -4.0) (* b b)) (/ 1.0 (pow (sqrt (fma c (* a -4.0) (* b b))) 2.0)))) (- b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.054785036784796,
    "avg_bits_err_output": 27.960566332640095,
    "avg_bits_err_improve": 0.09421870414470135,
    "time": 36708.7998046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.88496704593725,
    "avg_bits_err_output": 39.54490381519816,
    "avg_bits_err_improve": 4.340063230739091,
    "time": 24965.5576171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* c (* a -8.0)))))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 34.194225814587526,
    "avg_bits_err_output": 34.19527662220264,
    "avg_bits_err_improve": -0.0010508076151154455,
    "time": 27099.34423828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (expm1 (log1p (cos (- lambda1 lambda2))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8901279830007941,
    "avg_bits_err_output": 0.9004377733456242,
    "avg_bits_err_improve": -0.01030979034483015,
    "time": 32385.5615234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.18561948043984,
    "avg_bits_err_output": 29.18561948043984,
    "avg_bits_err_improve": 0,
    "time": 6864.63623046875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.03829425603023,
    "avg_bits_err_output": 1.2016062031259016,
    "avg_bits_err_improve": 56.83668805290433,
    "time": 14131.0302734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.95333233912599,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 57.945457339125994,
    "time": 6640.649658203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01337461079306209,
    "avg_bits_err_output": 0.01337461079306209,
    "avg_bits_err_improve": 0,
    "time": 2310.951904296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.129375,
    "avg_bits_err_output": 32.129375,
    "avg_bits_err_improve": 0,
    "time": 6250.5625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (* (* (log (/ (+ 1.0 x) (- 1.0 x))) (exp 1.0)) (exp -1.0)) 0.5)",
    "output_parens": 9,
    "avg_bits_err_input": 58.44706635597823,
    "avg_bits_err_output": 58.44688834256435,
    "avg_bits_err_improve": 0.0001780134138797962,
    "time": 103103.4482421875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04344812031259015,
    "avg_bits_err_output": 0.04344812031259015,
    "avg_bits_err_improve": 0,
    "time": 4305.92236328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (fma (cos t) (* (cos t) (/ eh (cos t))) 0.0) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12591748125036056,
    "avg_bits_err_output": 0.14979492500144231,
    "avg_bits_err_improve": -0.02387744375108175,
    "time": 46973.38818359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (log (exp (cos (atan (/ (* eh (- (tan t))) ew))))) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12221936093777043,
    "avg_bits_err_output": 0.12252124062518029,
    "avg_bits_err_improve": -0.00030187968740985616,
    "time": 17180.46240234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (+ lambda1 (- lambda1 lambda2)) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) (- lambda1))) (- phi1 phi2)))",
    "output_parens": 14,
    "avg_bits_err_input": 38.550200061136444,
    "avg_bits_err_output": 4.125343524210474,
    "avg_bits_err_improve": 34.42485653692597,
    "time": 38103.481689453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (fma a a (* b (- b))) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.63862258158851,
    "avg_bits_err_output": 14.639424461275919,
    "avg_bits_err_improve": -0.0008018796874083023,
    "time": 6223.096435546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (log1p (expm1 (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1578551135373302,
    "avg_bits_err_output": 0.163541660097933,
    "avg_bits_err_improve": -0.005686546560602801,
    "time": 47322.848876953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) -1.0))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.604906270673375,
    "avg_bits_err_output": 46.144122115910726,
    "avg_bits_err_improve": 6.460784154762649,
    "time": 38894.095458984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (fma b (* b (/ 1.0 (fma a (* c -3.0) (* b b)))) (* (/ 1.0 (fma a (* c -3.0) (* b b))) (* c (* a -3.0))))) (- b)) (* 3.0 a))",
    "output_parens": 22,
    "avg_bits_err_input": 28.272329037636187,
    "avg_bits_err_output": 28.204522390457974,
    "avg_bits_err_improve": 0.06780664717821239,
    "time": 33979.827392578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.96643487876498,
    "avg_bits_err_output": 39.62734849699876,
    "avg_bits_err_improve": 4.339086381766215,
    "time": 31554.486083984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.196854534573504,
    "avg_bits_err_output": 34.196854534573504,
    "avg_bits_err_improve": 0,
    "time": 32451.26513671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (/ (cos (- lambda1 lambda2)) (sin phi1)) (pow (sin phi1) 2.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.156630702960724,
    "avg_bits_err_output": 13.206178913794684,
    "avg_bits_err_improve": -0.04954821083395977,
    "time": 83935.36303710938,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (+ (+ (/ x (+ 1.0 x)) 2.0) -2.0) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.514354193511846,
    "avg_bits_err_output": 29.540736337563068,
    "avg_bits_err_improve": -0.02638214405122241,
    "time": 40905.261474609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ -1.0 x)) (+ (/ x (+ 1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.013,
    "avg_bits_err_output": 0.011240601562950722,
    "avg_bits_err_improve": 0.0017593984370492775,
    "time": 5721.084716796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (/ 1.0 (+ -1.0 x))) (* (fma (/ 1.0 (+ -1.0 x)) (- (/ 1.0 (/ 1.0 (+ -1.0 x)))) 1.0) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (+ -1.0 x))))))",
    "output_parens": 23,
    "avg_bits_err_input": 14.359911804127425,
    "avg_bits_err_output": 14.42045858607407,
    "avg_bits_err_improve": -0.06054678194664476,
    "time": 48717.999755859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -8.5e-278) (/ (- (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (* (sqrt (- F)) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (+ A C))) (sqrt (* (* (- (pow B 2.0) (* A (* C 4.0))) F) -2.0)))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.764235445500084,
    "avg_bits_err_output": 48.57927208590987,
    "avg_bits_err_improve": 4.184963359590213,
    "time": 49374.462646484375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (- (- 1.0 (* (/ 1.0 B) (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- A C)))) 1.0)) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 29.396248183615747,
    "avg_bits_err_output": 29.399692295681678,
    "avg_bits_err_improve": -0.003444112065931648,
    "time": 34892.0966796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.05e-227) (/ (- (* (sqrt (- F)) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.38526105972533,
    "avg_bits_err_output": 47.358799016292195,
    "avg_bits_err_improve": 5.026462043433135,
    "time": 50683.762451171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.471001910125102,
    "avg_bits_err_output": 15.471001910125102,
    "avg_bits_err_improve": 0,
    "time": 43960.602294921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1e+16) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (/ (sqrt (- h g)) (sqrt (- (+ g h)))) (- (+ (sqrt (- (+ g h))) (pow (- (+ g h)) 1.0)) (sqrt (- (+ g h))))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -5e-302) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 5e+152) (+ (pow (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g)) 0.3333333333333333) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a)))))) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))) (* (* (cbrt (- (/ 1.0 (+ a a)))) (/ (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a)))))) (cbrt (- (/ 1.0 (+ a a)))))))))",
    "output_parens": 115,
    "avg_bits_err_input": 36.41911381376894,
    "avg_bits_err_output": 8.422963964913324,
    "avg_bits_err_improve": 27.996149848855616,
    "time": 76591.20971679688,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (/ (+ (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))) (cos (- (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0)) (* 2.0 PI)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.9922577078205239,
    "avg_bits_err_output": 0.029410526564393046,
    "avg_bits_err_improve": 0.9628471812561309,
    "time": 10610.94384765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7405,
    "avg_bits_err_output": 0.7405,
    "avg_bits_err_improve": 0,
    "time": 7450.498291015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.56122765733664,
    "avg_bits_err_output": 11.56122765733664,
    "avg_bits_err_improve": 0,
    "time": 25201.518798828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4620794223799711,
    "avg_bits_err_output": 0.4232259193652572,
    "avg_bits_err_improve": 0.03885350301471391,
    "time": 14464.5029296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.80995237557292,
    "avg_bits_err_output": 16.1562490759144,
    "avg_bits_err_improve": 36.65370329965852,
    "time": 13186.824951171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.6820655613684465,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.6820655613684465,
    "time": 3824.1796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.016125,
    "avg_bits_err_improve": -0.002125,
    "time": 9405.870849609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1212.56884765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -3.8e+168) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* w r)))) (- 1.0 v))) (if (<= r 1e-45) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.81312687351412,
    "avg_bits_err_output": 6.7053635343791385,
    "avg_bits_err_improve": 6.107763339134982,
    "time": 31633.663818359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (fma (* x1 x1) -6.0 (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (* (+ (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) 2.0)))) (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5178261617280987,
    "avg_bits_err_output": 0.27908295854563014,
    "avg_bits_err_improve": 0.23874320318246856,
    "time": 76883.18627929688,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.86576924066963,
    "avg_bits_err_output": 17.86576924066963,
    "avg_bits_err_improve": 0,
    "time": 70073.34912109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2370827222622215,
    "avg_bits_err_output": 0.1859052428037488,
    "avg_bits_err_improve": 0.0511774794584727,
    "time": 34301.54736328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0031981203125901443,
    "avg_bits_err_output": 0.0031981203125901443,
    "avg_bits_err_improve": 0,
    "time": 3381.692626953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.890576369762117,
    "avg_bits_err_output": 9.209588557102698,
    "avg_bits_err_improve": 4.680987812659419,
    "time": 55350.467041015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (- (fma eps x x)))) (exp (- (* eps x) x)))) (- (exp (- (fma eps x x))))) (- (+ (expm1 (- (* eps x) x)) 2.0) 1.0)) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.582559723460626,
    "avg_bits_err_output": 0.8823455555635322,
    "avg_bits_err_improve": 28.700214167897094,
    "time": 36870.862060546875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (+ 2.0 (pow (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.021875,
    "avg_bits_err_output": 0.022375,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 34553.76416015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025125,
    "avg_bits_err_output": 0.04040601562950719,
    "avg_bits_err_improve": -0.015281015629507191,
    "time": 31373.27978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (- (* (+ 1.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))) (/ (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (/ (+ t t) (+ t 1.0)))) (/ (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (/ (+ t t) (+ t 1.0)))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 46,
    "avg_bits_err_input": 0.033375,
    "avg_bits_err_output": 0.0474199250014423,
    "avg_bits_err_improve": -0.014044925001442297,
    "time": 16301.2001953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3016.47314453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3295.364013671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4000.217041015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.85217844556147,
    "avg_bits_err_output": 0.250625,
    "avg_bits_err_improve": 7.6015534455614695,
    "time": 87452.37670898438,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.356420441774422,
    "avg_bits_err_output": 7.356420441774422,
    "avg_bits_err_improve": 0,
    "time": 28890.208251953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.065916226199413,
    "avg_bits_err_output": 0.016625,
    "avg_bits_err_improve": 16.04929122619941,
    "time": 13615.419677734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (* (pow (pow (exp x) x) 10.0) (* (pow (pow (exp x) x) 10.0) (/ (/ (pow (pow (exp x) x) 10.0) (pow (pow (exp x) x) 10.0)) (pow (pow (exp x) x) 10.0)))) (cos x)) (pow (cos x) 2.0))",
    "output_parens": 24,
    "avg_bits_err_input": 3.545927065533903,
    "avg_bits_err_output": 2.1457953390784166,
    "avg_bits_err_improve": 1.4001317264554864,
    "time": 58307.05517578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.232342327066089,
    "avg_bits_err_output": 15.232342327066089,
    "avg_bits_err_improve": 0,
    "time": 24773.691162109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.28054089694213,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.28054089694213,
    "time": 4279.6279296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.16200663003109,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.16125663003109,
    "time": 8123.1630859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.297375,
    "avg_bits_err_improve": 63.702625,
    "time": 4483.81884765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84324714829695,
    "avg_bits_err_output": 0.40427161719245835,
    "avg_bits_err_improve": 61.4389755311045,
    "time": 21652.658447265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.44614432655109,
    "avg_bits_err_output": 34.44614432655109,
    "avg_bits_err_improve": 0,
    "time": 54328.413330078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (* 4.0 (* a c)) (fma b b (* c (* a -8.0)))))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 34.194225814587526,
    "avg_bits_err_output": 34.19527662220264,
    "avg_bits_err_improve": -0.0010508076151154455,
    "time": 26670.068359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1867.7919921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.02494290489038,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 40.01456790489038,
    "time": 3274.23486328125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(- (+ (/ (- (* x x) (* y y)) (fma x x (* y y))) 1.0) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 20.003784732652008,
    "avg_bits_err_output": 20.00709012924293,
    "avg_bits_err_improve": -0.003305396590921106,
    "time": 4601.508544921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.640094545805552,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.640094545805552,
    "time": 6569.018798828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03475,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.034375,
    "time": 7074.878662109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma (+ a b) b (* a (+ a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.02429248125036058,
    "avg_bits_err_output": 0.01625,
    "avg_bits_err_improve": 0.00804248125036058,
    "time": 5172.83837890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.013375,
    "time": 9289.290283203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 2205.270263671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e (+ c d)) (+ a b))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4062834593805893,
    "avg_bits_err_output": 0.309625,
    "avg_bits_err_improve": 0.09665845938058931,
    "time": 10832.89599609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (+ (exp (* 1.0 (log (* (exp 1.0) (- 1.0 (cos x)))))) (fma (- (cos x)) (exp 1.0) (* (cos x) (exp 1.0)))) (exp -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 29.794982550211905,
    "avg_bits_err_output": 29.81171539038796,
    "avg_bits_err_improve": -0.016732840176054253,
    "time": 28752.035888671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (- (* x x) eps) (* (- (* x (* (+ x 0.0) (* x (/ (/ x x) x)))) eps) (/ 1.0 (- (* x x) eps))))))",
    "output_parens": 16,
    "avg_bits_err_input": 24.974306063092257,
    "avg_bits_err_output": 25.058173362166986,
    "avg_bits_err_improve": -0.08386729907472912,
    "time": 25627.2978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.917198975434502,
    "avg_bits_err_output": 29.91738556334838,
    "avg_bits_err_improve": -0.0001865879138769344,
    "time": 44980.94580078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005448120312590145,
    "avg_bits_err_output": 0.005448120312590145,
    "avg_bits_err_improve": 0,
    "time": 1847.419677734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-9) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.42313709608519,
    "avg_bits_err_output": 11.191509052569666,
    "avg_bits_err_improve": 36.23162804351553,
    "time": 54890.71044921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.400683635839055,
    "avg_bits_err_output": 26.399735515526462,
    "avg_bits_err_improve": 0.0009481203125929483,
    "time": 28356.84130859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* d (- a))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.865055488060655,
    "avg_bits_err_output": 25.86440924743548,
    "avg_bits_err_improve": 0.0006462406251763753,
    "time": 26960.153564453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03575,
    "avg_bits_err_output": 0.03575,
    "avg_bits_err_improve": 0,
    "time": 25284.145751953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (fma ux (- (* (fma ux maxCos 1.0) (- maxCos)) (+ maxCos (- (- ux (fma ux maxCos 1.0)) (fma ux maxCos 1.0)))) (fma (- (- (- (+ maxCos -1.0) (* ux maxCos)) (* (- (fma ux maxCos 1.0) ux) (/ ux ux)))) ux (* ux (+ maxCos (- (- ux (fma ux maxCos 1.0)) (fma ux maxCos 1.0))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 13.53660620613949,
    "avg_bits_err_output": 0.5608333829208297,
    "avg_bits_err_improve": 12.97577282321866,
    "time": 37670.6015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (* ux (+ maxCos (* (fma ux maxCos 1.0) (+ maxCos -1.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.573655209608024,
    "avg_bits_err_output": 0.3263818318901652,
    "avg_bits_err_improve": 13.247273377717859,
    "time": 43103.985595703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* (- PI) (log (exp (- (+ uy uy)))))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 36,
    "avg_bits_err_input": 0.3487942396280732,
    "avg_bits_err_output": 0.35586920830778895,
    "avg_bits_err_improve": -0.007074968679715743,
    "time": 77277.26342773438,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (- (+ (cos (atan (* (tan (* PI (fma 2.0 u1 1.5))) (/ alphay alphax)))) 1.0) 1.0) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.19875731732960175,
    "avg_bits_err_output": 0.20026927665763955,
    "avg_bits_err_improve": -0.0015119593280377985,
    "time": 44670.033447265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5274287772379858,
    "avg_bits_err_output": 0.4887680263550164,
    "avg_bits_err_improve": 0.03866075088296933,
    "time": 35264.828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* u2 -6.28318530718) (* (* u2 -6.28318530718) (/ 1.0 (* u2 -6.28318530718))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3212644161665526,
    "avg_bits_err_output": 0.3267302830627267,
    "avg_bits_err_improve": -0.005465866896174121,
    "time": 52653.381103515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma s (log (expm1 (log1p (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))))) 0.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.3398029990847761,
    "avg_bits_err_output": 0.347988190842536,
    "avg_bits_err_improve": -0.008185191757759891,
    "time": 45965.883056640625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(pow (exp 1.0) (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.055718613676711756,
    "avg_bits_err_output": 0.04985691933473283,
    "avg_bits_err_improve": 0.005861694341978925,
    "time": 35267.911865234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (* s (log (exp (+ (exp (/ (- (fabs x)) s)) 1.0))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.16732094247556387,
    "avg_bits_err_output": 0.16743762294248785,
    "avg_bits_err_improve": -0.0001166804669239796,
    "time": 29652.27001953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6693614518190241,
    "avg_bits_err_output": 0.6693614518190241,
    "avg_bits_err_improve": 0,
    "time": 26914.43115234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (fma (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (* (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) (/ v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)))) 0.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.14976554748583387,
    "avg_bits_err_output": 0.15574330954832488,
    "avg_bits_err_improve": -0.00597776206249101,
    "time": 51629.77880859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5517181718552395,
    "avg_bits_err_output": 2.5497890519293303,
    "avg_bits_err_improve": 0.0019291199259092728,
    "time": 18101.770751953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ (+ (/ (* sinTheta_i sinTheta_O) v) 2.0) -2.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46066836139509765,
    "avg_bits_err_output": 0.4610062051299512,
    "avg_bits_err_improve": -0.0003378437348535712,
    "time": 39230.982666015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (* (/ 1.0 (+ v v)) (* (+ v v) (+ v v))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1147120518670971,
    "avg_bits_err_output": 0.12088324808068027,
    "avg_bits_err_improve": -0.006171196213583169,
    "time": 66494.81909179688,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.45996173427410836,
    "avg_bits_err_output": 0.41050650275509765,
    "avg_bits_err_improve": 0.04945523151901071,
    "time": 29379.14404296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log1p (- (/ (+ u -0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.317276311743076,
    "avg_bits_err_output": 0.5491986690463937,
    "avg_bits_err_improve": 0.7680776426966822,
    "time": 30070.8359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.682042951267007,
    "avg_bits_err_output": 12.268978186197625,
    "avg_bits_err_improve": 0.4130647650693824,
    "time": 95818.50366210938,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (- (* r (* s (exp (log1p (* PI 6.0))))) (* s r))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.13378643935956866,
    "avg_bits_err_output": 0.13809111447923594,
    "avg_bits_err_improve": -0.004304675119667284,
    "time": 77410.83911132812,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9084112578988484,
    "avg_bits_err_output": 0.8955916439379328,
    "avg_bits_err_improve": 0.012819613960915577,
    "time": 43337.561279296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 PI) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.678554291109187,
    "avg_bits_err_output": 0.5354325614060111,
    "avg_bits_err_improve": 0.14312172970317583,
    "time": 66280.38134765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (/ (log1p (- u1)) (log1p (- u1))) (fma (* (sin (* PI u2)) (cos (* PI u2))) (sqrt (- (log1p (- u1)))) (* (sin (* PI u2)) (* (sqrt (- (log1p (- u1)))) (cos (* PI u2))))))",
    "output_parens": 26,
    "avg_bits_err_input": 13.461463227361117,
    "avg_bits_err_output": 0.5472189383128463,
    "avg_bits_err_improve": 12.91424428904827,
    "time": 28945.011474609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (- (+ 1.0 (* (* 2.0 PI) u2)) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.50769491823571,
    "avg_bits_err_output": 0.3388167438675281,
    "avg_bits_err_improve": 13.168878174368182,
    "time": 49207.3291015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.041905495798238,
    "avg_bits_err_output": 0.22,
    "avg_bits_err_improve": 13.821905495798237,
    "time": 22557.85693359375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.349824006685278,
    "avg_bits_err_output": 0.5244435852028606,
    "avg_bits_err_improve": 11.825380421482418,
    "time": 22496.7158203125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+214) (- (fma l (* l (/ PI l)) 0.0) (* (/ 1.0 (* F F)) (tan (* PI l)))) (if (<= (* PI l) -5e+143) (- (* PI l) (* (* (/ 1.0 (* F F)) (* (/ 1.0 (* F F)) (/ 1.0 (log1p (expm1 (/ 1.0 (* F F))))))) (tan (* PI l)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma (* PI (/ l PI)) PI 0.0))))))",
    "output_parens": 40,
    "avg_bits_err_input": 17.053863350340244,
    "avg_bits_err_output": 17.73103018100545,
    "avg_bits_err_improve": -0.6771668306652074,
    "time": 35019.562255859375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.217504167120048,
    "avg_bits_err_output": 0.217504167120048,
    "avg_bits_err_improve": 0,
    "time": 32560.41015625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+284) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 41,
    "avg_bits_err_input": 14.088389699750529,
    "avg_bits_err_output": 12.393955926279157,
    "avg_bits_err_improve": 1.6944337734713724,
    "time": 60791.64697265625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (fma (exp 2.0) (exp (fma (/ PI 4.0) f -2.0)) (- (exp (- (- 1.0 (* (/ PI 4.0) f)) 1.0))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 61.656665015601824,
    "avg_bits_err_output": 51.95334107891014,
    "avg_bits_err_improve": 9.703323936691682,
    "time": 103172.19580078125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.2e-69) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l))))) (if (<= t 9.5e-158) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (fma (- l) l (* (/ (+ 1.0 x) (+ -1.0 x)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* l (- (* (/ (+ 1.0 x) (+ x -1.0)) l) l)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 43.0332305403977,
    "avg_bits_err_output": 36.32843848627722,
    "avg_bits_err_improve": 6.704792054120482,
    "time": 43082.59912109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.822046058506583,
    "avg_bits_err_output": 3.822046058506583,
    "avg_bits_err_improve": 0,
    "time": 37848.423828125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0909239778258346,
    "avg_bits_err_output": 0.0065,
    "avg_bits_err_improve": 1.0844239778258347,
    "time": 11358.895263671875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.250903229399619,
    "avg_bits_err_output": 10.251028229399619,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 27541.052734375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -5e-310) (* (sqrt (- n)) (* (sqrt 2.0) (sqrt (* U (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om)))))))) (if (<= n 4.2e-224) (* (sqrt n) (sqrt (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))) (* 2.0 U)))) (if (<= n 1.6e-188) (sqrt (- (* (pow (/ l Om) 2.0) (* (* (* n U) -2.0) (* n (- U U*)))) (* (* 2.0 (* n U)) (- (* 2.0 (/ (* l l) Om)) t)))) (if (<= n 2.05e+207) (* (sqrt (+ n n)) (sqrt (- (* (pow (/ l Om) 2.0) (* (- U* U) (* U n))) (* U (- (* 2.0 (/ (* l l) Om)) t))))) (* (sqrt n) (sqrt (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* 2.0 U))))))))",
    "output_parens": 88,
    "avg_bits_err_input": 34.73260626226498,
    "avg_bits_err_output": 29.605448747050424,
    "avg_bits_err_improve": 5.127157515214556,
    "time": 40457.525634765625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 47.42179906374774,
    "avg_bits_err_output": 38.81720317546796,
    "avg_bits_err_improve": 8.604595888279782,
    "time": 49633.966796875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (tan k)) (* (+ 2.0 (pow (/ k t) 2.0)) (sin k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.4004713729434,
    "avg_bits_err_output": 32.38474581777267,
    "avg_bits_err_improve": 0.015725555170732264,
    "time": 42257.525390625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a2) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5111644765845871,
    "avg_bits_err_output": 0.5022563937712758,
    "avg_bits_err_improve": 0.008908082813311236,
    "time": 57439.05419921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* PI (* n 2.0)) (/ (- 1.0 k) 2.0)) (sqrt (/ 1.0 k)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.4632588704756291,
    "avg_bits_err_output": 0.4368031395252912,
    "avg_bits_err_improve": 0.026455730950337875,
    "time": 48161.09814453125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (* (- (expm1 l) (expm1 (- l))) (cos (/ K 2.0)))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.31387788804528,
    "avg_bits_err_output": 0.085761842188131,
    "avg_bits_err_improve": 17.22811604585715,
    "time": 36776.336669921875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(log (pow (exp (cos (- (/ (* K (+ n m)) 2.0) M))) (exp (- (- (fabs (- m n)) l) (pow (- (/ (+ n m) 2.0) M) 2.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.628191190906573,
    "avg_bits_err_output": 1.3363253080186615,
    "avg_bits_err_improve": 14.291865882887912,
    "time": 52006.9951171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.778667481250363,
    "avg_bits_err_output": 17.778667481250363,
    "avg_bits_err_improve": 0,
    "time": 37547.14990234375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) INFINITY) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (* 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 2.0)) (/ h l))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 14.522832118794017,
    "avg_bits_err_output": 9.27801663914106,
    "avg_bits_err_improve": 5.244815479652958,
    "time": 46812.3369140625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.03724219765438,
    "avg_bits_err_output": 19.03724219765438,
    "avg_bits_err_improve": 0,
    "time": 28183.590576171875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) 0.0) (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) (if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) INFINITY) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* d c0)) (* D (* D (* w h)))) M)) (sqrt (+ (/ (* d (* d c0)) (* D (* D (* w h)))) M)) (/ (* d (* d c0)) (* D (* D (* w h)))))) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* w (* D (* D h)))) (sqrt (- (pow (/ (* d (* d c0)) (* w (* D (* D h)))) 2.0) (* M M)))))))",
    "output_parens": 128,
    "avg_bits_err_input": 59.62991978504072,
    "avg_bits_err_output": 56.612694928817405,
    "avg_bits_err_improve": 3.017224856223315,
    "time": 43269.49267578125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (sqrt (* (/ d l) (/ d h))) (* (* 0.5 (/ h l)) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (pow (/ (* M D) (+ d d)) 2.0)))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+237) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0)))",
    "output_parens": 81,
    "avg_bits_err_input": 26.625379458411643,
    "avg_bits_err_output": 24.703636985599182,
    "avg_bits_err_improve": 1.9217424728124612,
    "time": 44703.7958984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (- (* (exp 1.0) (- 2.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 1.0)) (exp -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 15.827180933665998,
    "avg_bits_err_output": 15.392469328109826,
    "avg_bits_err_improve": 0.4347116055561724,
    "time": 119516.38720703125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9823231203125902,
    "avg_bits_err_output": 0.012896240625180291,
    "avg_bits_err_improve": 0.9694268796874099,
    "time": 9737.3037109375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) t))",
    "output_parens": 13,
    "avg_bits_err_input": 0.46706241769983164,
    "avg_bits_err_output": 0.40630980089405394,
    "avg_bits_err_improve": 0.060752616805777704,
    "time": 31499.927978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012896240625180291,
    "avg_bits_err_output": 0.012896240625180291,
    "avg_bits_err_improve": 0,
    "time": 4363.576904296875,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5246140864383407,
    "avg_bits_err_output": 0.5246140864383407,
    "avg_bits_err_improve": 0,
    "time": 14621.668212890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (fma k (+ k 10.0) 1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 2.1306996052535694,
    "avg_bits_err_output": 2.096105244315799,
    "avg_bits_err_improve": 0.034594360937770574,
    "time": 24422.657958984375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02299749334274228,
    "avg_bits_err_output": 0.02299749334274228,
    "avg_bits_err_improve": 0,
    "time": 8343.323974609375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18560825061850234,
    "avg_bits_err_output": 0.18796200999332205,
    "avg_bits_err_improve": -0.002353759374819714,
    "time": 38418.427978515625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1839420758309814,
    "avg_bits_err_output": 0.1839420758309814,
    "avg_bits_err_improve": 0,
    "time": 33741.36962890625,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* b (+ (* b a) (* b 3.0)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1864564212650287,
    "avg_bits_err_output": 0.18652954157761886,
    "avg_bits_err_improve": -7.312031259015805e-05,
    "time": 36095.255126953125,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (exp (log1p (/ x (sqrt (fma 4.0 (* p p) (* x x))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.228236724088283,
    "avg_bits_err_output": 13.228188788511918,
    "avg_bits_err_improve": 4.793557636517676e-05,
    "time": 16943.59375,
    "seed": 9,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (+ (+ (/ (expm1 (+ x x)) (expm1 x)) 2.0) -2.0))",
    "output_parens": 7,
    "avg_bits_err_input": 41.60856231977707,
    "avg_bits_err_output": 0.06969812031259014,
    "avg_bits_err_improve": 41.538864199464484,
    "time": 11596.00927734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ x (- -1.0 (+ (sin x) -1.0))) (- (+ (+ x -2.0) 2.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.193350173374697,
    "avg_bits_err_output": 25.683364013045228,
    "avg_bits_err_improve": 5.509986160329468,
    "time": 23461.950439453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- (* c (* a (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) b_2)) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.538466372829376,
    "avg_bits_err_output": 33.55765601737625,
    "avg_bits_err_improve": 0.9808103554531229,
    "time": 27669.71337890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* a (- c))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.359671427520006,
    "avg_bits_err_output": 34.358684847038035,
    "avg_bits_err_improve": 0.0009865804819710888,
    "time": 19664.52587890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.863183204671362,
    "avg_bits_err_output": 31.534105566869854,
    "avg_bits_err_improve": 0.32907763780150745,
    "time": 24598.61865234375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (exp (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 7,
    "avg_bits_err_input": 32.715736835205774,
    "avg_bits_err_output": 32.44886510263033,
    "avg_bits_err_improve": 0.2668717325754457,
    "time": 52790.302001953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 28.931379202585735,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 28.922629202585735,
    "time": 16953.41552734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -1.2e+154) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 7.2e+153) (- (- (* (/ (/ 1.0 (+ x 1.0)) (+ x 1.0)) (+ x 2.0)) (/ 1.0 x)) (/ (/ 1.0 (+ x 1.0)) (+ x 1.0))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 25,
    "avg_bits_err_input": 14.697968263542883,
    "avg_bits_err_output": 1.6767914006028937,
    "avg_bits_err_improve": 13.021176862939988,
    "time": 36320.88525390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (* (sin x) (- (sin eps))) (- (cos x) (* (cos x) (cos eps))))",
    "output_parens": 10,
    "avg_bits_err_input": 39.53909484960069,
    "avg_bits_err_output": 6.2082578421509185,
    "avg_bits_err_improve": 33.330837007449766,
    "time": 35281.89501953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log (exp (+ (cbrt (+ 1.0 x)) (- -1.0 (cbrt x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.693757557383183,
    "avg_bits_err_output": 29.395245722978107,
    "avg_bits_err_improve": 0.2985118344050761,
    "time": 45321.970947265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.664429132167218,
    "avg_bits_err_output": 29.666761434639106,
    "avg_bits_err_improve": -0.0023323024718884255,
    "time": 35911.254150390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.96952294757647,
    "avg_bits_err_output": 33.97121458694352,
    "avg_bits_err_improve": -0.0016916393670456387,
    "time": 24231.77392578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.07549345058352,
    "avg_bits_err_output": 34.09444392921182,
    "avg_bits_err_improve": -0.01895047862829813,
    "time": 33170.50244140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.2319294488308,
    "avg_bits_err_output": 0.022511842188131015,
    "avg_bits_err_improve": 61.20941760664267,
    "time": 16830.376220703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log1p n) (+ (- -1.0 (* n (log n))) (* n (log1p n))))",
    "output_parens": 8,
    "avg_bits_err_input": 63.01122761611562,
    "avg_bits_err_output": 0.6470432163907172,
    "avg_bits_err_improve": 62.3641843997249,
    "time": 49269.610595703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (log (exp (/ (- 1.0 eps) (+ 1.0 eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 58.61476200552469,
    "avg_bits_err_output": 58.630792694114,
    "avg_bits_err_improve": -0.01603068858931067,
    "time": 57578.7373046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (- (/ 1.0 x) (/ 1.0 (tan x))) (+ (- (/ 1.0 (- -1.0 (/ 1.0 (tan x))))) (- (* (- -1.0 (/ 1.0 (tan x))) (/ 1.0 (+ 1.0 (/ 1.0 (tan x))))) (* (/ 1.0 (tan x)) (/ 1.0 (- -1.0 (/ 1.0 (tan x))))))))",
    "output_parens": 27,
    "avg_bits_err_input": 59.8891276216965,
    "avg_bits_err_output": 52.38497844717327,
    "avg_bits_err_improve": 7.504149174523235,
    "time": 107887.47216796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.466944364512365,
    "avg_bits_err_output": 41.327973334181664,
    "avg_bits_err_improve": 19.1389710303307,
    "time": 49882.281005859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.968656923695356,
    "avg_bits_err_output": 0.11203397772762014,
    "avg_bits_err_improve": 41.856622945967736,
    "time": 18812.03125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.45593533040235,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.455435330402345,
    "time": 2889.6728515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.140522535259453,
    "avg_bits_err_output": 0.014320968774394887,
    "avg_bits_err_improve": 29.126201566485058,
    "time": 4164.584716796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (+ (* (expm1 (- x)) (exp 1.0)) (* (expm1 x) (exp 1.0))) (exp -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 29.22318893748671,
    "avg_bits_err_output": 28.34480735333513,
    "avg_bits_err_improve": 0.8783815841515796,
    "time": 35836.125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.087273144814745,
    "avg_bits_err_output": 10.102709717984142,
    "avg_bits_err_improve": -0.015436573169397505,
    "time": 35379.335693359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.007013946764296,
    "avg_bits_err_output": 37.007013946764296,
    "avg_bits_err_improve": 0,
    "time": 57610.738525390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (expm1 (- (- (sqrt (- x -1.0)) 1.0) (sqrt x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.700997026746272,
    "avg_bits_err_output": 29.006412426055192,
    "avg_bits_err_improve": 0.6945846006910799,
    "time": 30303.499755859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.16570685385567,
    "avg_bits_err_output": 0.41302315381860194,
    "avg_bits_err_improve": 36.75268370003707,
    "time": 25225.156982421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.874430557313985,
    "avg_bits_err_output": 19.738578463793658,
    "avg_bits_err_improve": 0.13585209352032734,
    "time": 27011.79443359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(* (exp 1.0) (+ (* (exp -1.0) (- 1.0 (atan N))) (- (* (exp -1.0) (atan (+ N 1.0))) (exp -1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 15.409385879312945,
    "avg_bits_err_output": 15.406383210125025,
    "avg_bits_err_improve": 0.003002669187919693,
    "time": 37640.687744140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.50234736225663,
    "avg_bits_err_output": 1.4976939463424883,
    "avg_bits_err_improve": 28.00465341591414,
    "time": 40278.125732421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07098120312590143,
    "avg_bits_err_output": 0.07098120312590143,
    "avg_bits_err_improve": 0,
    "time": 32922.892578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.360975021658504,
    "avg_bits_err_output": 0.30055225625468746,
    "avg_bits_err_improve": 16.060422765403818,
    "time": 16994.58984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (expm1 (log1p (* (/ angle 180.0) (/ PI (/ angle 180.0))))) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.387664189979713,
    "avg_bits_err_output": 20.708847344430648,
    "avg_bits_err_improve": -0.32118315445093515,
    "time": 49225.252197265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (- (* (sin (* PI (/ angle 180.0))) (* (exp (log1p (cos (* PI (/ angle 180.0))))) (- (pow b 2.0) (pow a 2.0)))) (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 31.456932807889103,
    "avg_bits_err_output": 31.46142460003467,
    "avg_bits_err_improve": -0.0044917921455649434,
    "time": 51408.5625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* PI (* PI (/ (/ angle 180.0) PI))))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.077501069464418,
    "avg_bits_err_output": 20.08111371621794,
    "avg_bits_err_improve": -0.0036126467535204654,
    "time": 51243.6708984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17320996250072115,
    "avg_bits_err_output": 0.17320996250072115,
    "avg_bits_err_improve": 0,
    "time": 29713.634765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32397650950092693,
    "avg_bits_err_output": 0.31231061311414343,
    "avg_bits_err_improve": 0.011665896386783503,
    "time": 46286.393798828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (log (pow (exp (cos v)) e))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.13916748125036058,
    "avg_bits_err_output": 0.14241768476294264,
    "avg_bits_err_improve": -0.003250203512582067,
    "time": 32538.849853515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (expm1 (log1p (* (sin phi1) (sin phi2)))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 16.9079449299305,
    "avg_bits_err_output": 16.915599792994147,
    "avg_bits_err_improve": -0.007654863063645934,
    "time": 50590.547607421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 6e+15) (/ (fma (fma a (* c -4.0) (* b b)) (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (- b)) (+ a a)) (/ (- (+ (sqrt (fma c (* a -4.0) (* b b))) (- 1.0 b)) 1.0) (+ a a)))",
    "output_parens": 23,
    "avg_bits_err_input": 52.931795447052565,
    "avg_bits_err_output": 50.900239598454895,
    "avg_bits_err_improve": 2.0315558485976695,
    "time": 26829.7958984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma b (* b (/ 1.0 (fma c (* a -4.0) (* b b)))) (* c (* (/ 1.0 (fma c (* a -4.0) (* b b))) (* a -4.0))))) (- b)) (+ a a))",
    "output_parens": 22,
    "avg_bits_err_input": 28.60219856016556,
    "avg_bits_err_output": 28.53514275976169,
    "avg_bits_err_improve": 0.06705580040387105,
    "time": 31984.955078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-20) (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) (+ a a)) (* (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) (+ a a)) (/ 1.0 (/ (- (sqrt (fma b b (* c (* a -4.0)))) b) (+ a a))))) (/ (+ (- b) (sqrt (* (fma b b (* c (* a -4.0))) (* (fma b b (* c (* a -4.0))) (- (+ 1.0 (/ 1.0 (fma b b (* c (* a -4.0))))) 1.0))))) (* a 2.0)))",
    "output_parens": 54,
    "avg_bits_err_input": 44.26002592204503,
    "avg_bits_err_output": 42.850859793096504,
    "avg_bits_err_improve": 1.4091661289485273,
    "time": 26942.426025390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96409567475518,
    "avg_bits_err_output": 33.96409567475518,
    "avg_bits_err_improve": 0,
    "time": 21595.889892578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (fma (pow (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)) 2.0) (/ 1.0 (pow (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)) 2.0)) 0.0))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.8975531091494992,
    "avg_bits_err_output": 0.9113091127645011,
    "avg_bits_err_improve": -0.013756003615001955,
    "time": 53927.013427734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.275680607362645,
    "avg_bits_err_output": 29.26856040080364,
    "avg_bits_err_improve": 0.007120206559005027,
    "time": 9557.8154296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.096357746333474,
    "avg_bits_err_output": 1.1928656015629509,
    "avg_bits_err_improve": 56.903492144770524,
    "time": 7694.298583984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.96805335612618,
    "avg_bits_err_output": 0.0075,
    "avg_bits_err_improve": 57.96055335612618,
    "time": 7222.68505859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010417481250360577,
    "avg_bits_err_output": 0.010417481250360577,
    "avg_bits_err_improve": 0,
    "time": 18532.8408203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.698094360937773,
    "avg_bits_err_output": 31.698094360937773,
    "avg_bits_err_improve": 0,
    "time": 5653.38916015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (fma (/ (+ 1.0 x) (- 1.0 x)) (* (/ (exp 1.0) (/ (+ 1.0 x) (- 1.0 x))) (* (/ (+ 1.0 x) (- 1.0 x)) (exp -1.0))) 0.0)))",
    "output_parens": 17,
    "avg_bits_err_input": 58.610680513426786,
    "avg_bits_err_output": 58.630603597247585,
    "avg_bits_err_improve": -0.019923083820799548,
    "time": 71414.1435546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.0105,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": -0.0002499999999999985,
    "time": 3957.73095703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.124,
    "avg_bits_err_output": 0.124,
    "avg_bits_err_improve": 0,
    "time": 38410.937255859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1261462406251803,
    "avg_bits_err_improve": 0,
    "time": 27148.037841796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)) (fma (- lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2))) (- phi1 phi2)))",
    "output_parens": 17,
    "avg_bits_err_input": 39.29166150430416,
    "avg_bits_err_output": 3.74481463425747,
    "avg_bits_err_improve": 35.546846870046686,
    "time": 40457.700927734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.241415957400738,
    "avg_bits_err_output": 14.241415957400738,
    "avg_bits_err_improve": 0,
    "time": 4343.83203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (log1p (expm1 (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.15151540977261335,
    "avg_bits_err_output": 0.15607723787361444,
    "avg_bits_err_improve": -0.004561828101001086,
    "time": 51946.9453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 1.5e+15) (/ (fma (sqrt (fma c (* a -3.0) (* b b))) (sqrt (+ (* (/ 1.0 (fma a (* c -3.0) (* b b))) (* c (* a -3.0))) (* b (* b (/ 1.0 (fma a (* c -3.0) (* b b))))))) (- b)) (* 3.0 a)) (/ (- (+ (- 1.0 b) (sqrt (fma b b (* c (* a -3.0))))) 1.0) (* 3.0 a)))",
    "output_parens": 34,
    "avg_bits_err_input": 52.923375528437695,
    "avg_bits_err_output": 51.06647639593644,
    "avg_bits_err_improve": 1.8568991325012547,
    "time": 32858.1337890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.7157085658012,
    "avg_bits_err_output": 27.912640575116956,
    "avg_bits_err_improve": 0.8030679906842444,
    "time": 35316.25927734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -4e-20) (/ (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (* (- (sqrt (fma c (* a -3.0) (* b b))) b) (/ 1.0 (- (sqrt (fma c (* a -3.0) (* b b))) b)))) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (fma (fma a (* c -3.0) (* b b)) (exp (log1p (/ 1.0 (fma a (* c -3.0) (* b b))))) (- (fma a (* c -3.0) (* b b))))))) (* 3.0 a)))",
    "output_parens": 54,
    "avg_bits_err_input": 44.29182590516657,
    "avg_bits_err_output": 42.8963461954616,
    "avg_bits_err_improve": 1.395479709704972,
    "time": 35746.075927734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.013940608330714,
    "avg_bits_err_output": 34.013940608330714,
    "avg_bits_err_improve": 0,
    "time": 25903.666259765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.473314311980436,
    "avg_bits_err_output": 13.473314311980436,
    "avg_bits_err_improve": 0,
    "time": 54586.28515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 28.91820384602095,
    "avg_bits_err_output": 28.924829926769977,
    "avg_bits_err_improve": -0.006626080749025931,
    "time": 38788.047607421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- -1.0 (- -1.0 (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.011,
    "avg_bits_err_output": 0.01599060156295072,
    "avg_bits_err_improve": -0.0049906015629507215,
    "time": 5544.000732421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (* (- (- (* (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ -1.0 (/ 1.0 (+ -1.0 x))))) -1.0) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (/ 1.0 (+ -1.0 x))) (pow (/ 1.0 (+ -1.0 x)) 2.0))))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.696180249082623,
    "avg_bits_err_output": 12.990729925356707,
    "avg_bits_err_improve": 1.7054503237259162,
    "time": 42213.1943359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1e-310) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (* -1.0 (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (* 8.0 (* A C)) (* 2.0 (pow B 2.0)))) (sqrt (* F (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.2410603264072,
    "avg_bits_err_output": 47.16395800766352,
    "avg_bits_err_improve": 5.077102318743684,
    "time": 50434.153564453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.474804534991712,
    "avg_bits_err_output": 29.474804534991712,
    "avg_bits_err_improve": 0,
    "time": 35456.206298828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- F)) (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (* (sqrt F) (sqrt (- (* (pow B 2.0) 2.0) (* (* A C) 8.0)))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.72704333584218,
    "avg_bits_err_output": 47.81426325801434,
    "avg_bits_err_improve": 4.91278007782784,
    "time": 47560.843017578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.773959931546122,
    "avg_bits_err_output": 15.773959931546122,
    "avg_bits_err_improve": 0,
    "time": 71749.9384765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -2e+155) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (* (sqrt (- (+ g h))) (sqrt (- h g)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -5e-241) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 1.4e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (* (- g h) (+ g h))) g))) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a)))))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))))))",
    "output_parens": 93,
    "avg_bits_err_input": 35.86431059287852,
    "avg_bits_err_output": 15.161457616087393,
    "avg_bits_err_improve": 20.702852976791124,
    "time": 73647.99731445312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9894441894575653,
    "avg_bits_err_output": 0.028469360937770437,
    "avg_bits_err_improve": 0.9609748285197949,
    "time": 12300.843017578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (- (+ (exp a) (expm1 b)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.7002193609377705,
    "avg_bits_err_output": 0.7256982392205324,
    "avg_bits_err_improve": -0.025478878282761963,
    "time": 4499.77294921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.460099516228876,
    "avg_bits_err_output": 11.460099516228876,
    "avg_bits_err_improve": 0,
    "time": 35547.0537109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5379376695931969,
    "avg_bits_err_output": 0.46344812031259014,
    "avg_bits_err_improve": 0.07448954928060675,
    "time": 13188.961669921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -74000000.0) (log (+ (- x (* x (- (- 1.0 (* x (/ 1.0 (hypot 1.0 x)))) 1.0))) (- (/ 1.0 (hypot 1.0 x)) 0.0))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 53.05676708120647,
    "avg_bits_err_output": 11.231972880248659,
    "avg_bits_err_improve": 41.82479420095781,
    "time": 27966.368896484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.675553231529634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.675553231529634,
    "time": 2541.12255859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 0,
    "time": 6725.84716796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1191.802734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* (* r w) (* r w))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.006076314377172,
    "avg_bits_err_output": 6.813403948445684,
    "avg_bits_err_improve": 6.192672365931488,
    "time": 45695.3681640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (fma (+ x1 x1) (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (pow (+ x1 x1) 2.0))) (- (* (+ 1.0 (* x1 -6.0)) x1) x1)) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 46,
    "avg_bits_err_input": 0.5146300528268175,
    "avg_bits_err_output": 0.2705821502393643,
    "avg_bits_err_improve": 0.24404790258745318,
    "time": 72172.91577148438,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma u u (* t1 (+ t1 (+ u u)))))",
    "output_parens": 7,
    "avg_bits_err_input": 18.04225740340445,
    "avg_bits_err_output": 18.038754959653367,
    "avg_bits_err_improve": 0.00350244375108133,
    "time": 16795.576416015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.19424060156295073,
    "avg_bits_err_output": 0.19424060156295073,
    "avg_bits_err_improve": 0,
    "time": 35036.96728515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0035,
    "avg_bits_err_output": 0.0035,
    "avg_bits_err_improve": 0,
    "time": 4525.7998046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.080555225714622,
    "avg_bits_err_output": 9.118210508409625,
    "avg_bits_err_improve": 4.9623447173049975,
    "time": 37419.416748046875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (log (pow (exp (/ 1.0 eps)) (- (exp (- (* eps x) x)) (exp (- (fma eps x x)))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.945426673179135,
    "avg_bits_err_output": 0.9675998336356452,
    "avg_bits_err_improve": 28.97782683954349,
    "time": 34265.544189453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.020125,
    "avg_bits_err_output": 0.02254248125036058,
    "avg_bits_err_improve": -0.0024174812503605786,
    "time": 15707.441650390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.02475,
    "avg_bits_err_output": 0.02475,
    "avg_bits_err_improve": 0,
    "time": 17518.94775390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (- (* (+ 1.0 (pow (/ (+ t t) (+ t 1.0)) 2.0)) (/ (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (/ (+ t t) (+ t 1.0)))) (/ (/ (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0))) (/ (+ t t) (+ t 1.0)))))))",
    "output_parens": 43,
    "avg_bits_err_input": 0.0315,
    "avg_bits_err_output": 0.03611560156295073,
    "avg_bits_err_improve": -0.004615601562950732,
    "time": 27005.94970703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3509.753662109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2673.38427734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3711.337890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.860831900243411,
    "avg_bits_err_output": 0.248375,
    "avg_bits_err_improve": 7.61245690024341,
    "time": 42999.562255859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.365979288052949,
    "avg_bits_err_output": 7.365979288052949,
    "avg_bits_err_improve": 0,
    "time": 35483.988037109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.15603944471507,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 16.14578944471507,
    "time": 15574.381591796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (pow (exp x) x) 10.0) (- (+ 1.0 (cos x)) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 3.531589396523647,
    "avg_bits_err_output": 2.1315861850822753,
    "avg_bits_err_improve": 1.4000032114413719,
    "time": 31905.958251953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.335924263130591,
    "avg_bits_err_output": 15.335924263130591,
    "avg_bits_err_improve": 0,
    "time": 38820.333984375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.289253767540075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.289253767540075,
    "time": 4532.94091796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.72356555091175,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.72306555091175,
    "time": 6125.338134765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2945,
    "avg_bits_err_improve": 63.7055,
    "time": 5012.61181640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325825111469,
    "avg_bits_err_output": 0.40161804531403256,
    "avg_bits_err_improve": 61.44164020580066,
    "time": 23483.087646484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.07549345058352,
    "avg_bits_err_output": 34.09444392921182,
    "avg_bits_err_improve": -0.01895047862829813,
    "time": 32352.076904296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96409567475518,
    "avg_bits_err_output": 33.96409567475518,
    "avg_bits_err_improve": 0,
    "time": 26808.875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3227.268798828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.09852066573798,
    "avg_bits_err_output": 0.01125,
    "avg_bits_err_improve": 40.08727066573798,
    "time": 11110.42431640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.502515420042872,
    "avg_bits_err_output": 20.502515420042872,
    "avg_bits_err_improve": 0,
    "time": 3619.6923828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6591384579897333,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6591384579897333,
    "time": 5198.19384765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037375,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.0365,
    "time": 6978.314697265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ a b)) (* a (+ a b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021948120312590146,
    "avg_bits_err_output": 0.0175,
    "avg_bits_err_improve": 0.004448120312590145,
    "time": 3791.069091796875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.014625,
    "avg_bits_err_output": 0.014625,
    "avg_bits_err_improve": 0,
    "time": 5283.323974609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 2097.56884765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ a (+ d (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39961353437914676,
    "avg_bits_err_output": 0.24375,
    "avg_bits_err_improve": 0.15586353437914677,
    "time": 7669.304443359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.290450352934208,
    "avg_bits_err_output": 30.290450350435037,
    "avg_bits_err_improve": 2.4991706482069276e-09,
    "time": 82005.49194335938,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.796915210370255,
    "avg_bits_err_output": 24.796915210370255,
    "avg_bits_err_improve": 0,
    "time": 48892.853759765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) 1.0) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.532143519155557,
    "avg_bits_err_output": 29.543306388055353,
    "avg_bits_err_improve": -0.011162868899795342,
    "time": 46966.272705078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006198120312590144,
    "avg_bits_err_output": 0.006198120312590144,
    "avg_bits_err_improve": 0,
    "time": 2010.1318359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-251) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-38) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.44885723323919,
    "avg_bits_err_output": 11.825470554674334,
    "avg_bits_err_improve": 35.623386678564856,
    "time": 49587.931884765625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.07241525507372,
    "avg_bits_err_output": 26.07241525507372,
    "avg_bits_err_improve": 0,
    "time": 22701.449462890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.106454942368067,
    "avg_bits_err_output": 26.106454942368067,
    "avg_bits_err_improve": 0,
    "time": 24854.67724609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (* ux (+ maxCos (* (* ux (/ -1.0 (* ux ux))) ux))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.033625,
    "avg_bits_err_output": 0.05064242775439383,
    "avg_bits_err_improve": -0.017017427754393827,
    "time": 31756.050048828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (+ (- (* (- (* ux maxCos) ux) ux) (- ux)) (- (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.369883984414619,
    "avg_bits_err_output": 0.5597935348480291,
    "avg_bits_err_improve": 12.810090449566589,
    "time": 33281.169677734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (* ux (- (- ux) (* maxCos (- ux)))) (- (+ (* ux (- maxCos 1.0)) (+ (* ux maxCos) (* (* ux maxCos) (* ux (- maxCos 1.0))))) ux))))",
    "output_parens": 21,
    "avg_bits_err_input": 13.402046285481308,
    "avg_bits_err_output": 0.3243503592113852,
    "avg_bits_err_improve": 13.077695926269923,
    "time": 41091.89892578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* zi (- maxCos (* maxCos ux))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33738181104624615,
    "avg_bits_err_output": 0.3270645897667945,
    "avg_bits_err_improve": 0.010317221279451672,
    "time": 75402.75268554688,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (- (+ (cos (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))) 1.0) 1.0) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.20460615593600745,
    "avg_bits_err_output": 0.20725348523920598,
    "avg_bits_err_improve": -0.0026473293031985257,
    "time": 46687.2392578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5396182899107279,
    "avg_bits_err_output": 0.49794027713339056,
    "avg_bits_err_improve": 0.04167801277733735,
    "time": 44671.26025390625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (- (+ (* u2 -6.28318530718) 1.0) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3202862910193155,
    "avg_bits_err_output": 0.32089005039413526,
    "avg_bits_err_improve": -0.0006037593748197678,
    "time": 78749.44116210938,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (log (pow (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0) -1.0)) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.33423293891705724,
    "avg_bits_err_output": 0.34105288864036953,
    "avg_bits_err_improve": -0.006819949723312291,
    "time": 41189.9609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(* (pow (exp 1.0) (- 1.0 (log1p (exp (/ (- x) s))))) (exp -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.06337955531749875,
    "avg_bits_err_output": 0.06497541483062376,
    "avg_bits_err_improve": -0.0015958595131250058,
    "time": 70005.18481445312,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.16429215136219916,
    "avg_bits_err_output": 0.15031134449477856,
    "avg_bits_err_improve": 0.013980806867420592,
    "time": 25266.0888671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641084826074513,
    "avg_bits_err_output": 0.6641084826074513,
    "avg_bits_err_improve": 0,
    "time": 32199.123779296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.16916530269330018,
    "avg_bits_err_output": 0.16916530269330018,
    "avg_bits_err_improve": 0,
    "time": 29209.58935546875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.514782104455441,
    "avg_bits_err_output": 2.5111052247680314,
    "avg_bits_err_improve": 0.0036768796874095955,
    "time": 65221.800537109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (- (+ 1.0 (/ (* sinTheta_i sinTheta_O) v)) 1.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4633497118029939,
    "avg_bits_err_output": 0.4634745082904118,
    "avg_bits_err_improve": -0.00012479648741792193,
    "time": 36815.5029296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (* (/ 1.0 (+ v v)) (+ v (+ v (fma v (/ 1.0 v) -1.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12518526195804403,
    "avg_bits_err_output": 0.1410425584804835,
    "avg_bits_err_improve": -0.015857296522439474,
    "time": 37062.255859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (log (pow (* alpha alpha) (fma PI (* (fma alpha alpha -1.0) (* cosTheta cosTheta)) PI))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.46386933414691894,
    "avg_bits_err_output": 0.43801040586266776,
    "avg_bits_err_improve": 0.02585892828425118,
    "time": 30206.749755859375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (log (expm1 (log1p (pow (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))) -3.0))))))",
    "output_parens": 10,
    "avg_bits_err_input": 1.3216063405233007,
    "avg_bits_err_output": 1.3336645970155447,
    "avg_bits_err_improve": -0.012058256492244013,
    "time": 44901.759033203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.438894629017375,
    "avg_bits_err_output": 0.204,
    "avg_bits_err_improve": 12.234894629017374,
    "time": 46214.767822265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI 6.0) (* r s))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.14841609693991722,
    "avg_bits_err_output": 0.14632159629509073,
    "avg_bits_err_improve": 0.002094500644826497,
    "time": 39220.640869140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9172214596710796,
    "avg_bits_err_output": 0.9054097664321694,
    "avg_bits_err_improve": 0.011811693238910181,
    "time": 59571.342041015625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (+ (- (- 2.0 cosTheta) cosTheta) -1.0)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.7000439462243894,
    "avg_bits_err_output": 0.7050277966139549,
    "avg_bits_err_improve": -0.004983850389565503,
    "time": 51551.264404296875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- u1)) (fma (log1p (- u1)) (* (log1p (- u1)) (/ (/ 1.0 (log1p (- u1))) (log1p (- u1)))) 0.0)))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 21,
    "avg_bits_err_input": 13.726960596178067,
    "avg_bits_err_output": 0.5323008822185493,
    "avg_bits_err_improve": 13.194659713959517,
    "time": 30725.70849609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (pow (- (log1p (- u1))) 0.5) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.768073639905353,
    "avg_bits_err_output": 0.3062655690270495,
    "avg_bits_err_improve": 13.461808070878304,
    "time": 47333.687744140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.356825423854707,
    "avg_bits_err_output": 0.201625,
    "avg_bits_err_improve": 14.155200423854707,
    "time": 41497.20849609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.657366776701199,
    "avg_bits_err_output": 0.5444216610707154,
    "avg_bits_err_improve": 12.112945115630483,
    "time": 21472.491455078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 F) (* (/ 1.0 F) (tan (* PI l)))))",
    "output_parens": 8,
    "avg_bits_err_input": 16.61431987146278,
    "avg_bits_err_output": 12.455581534364141,
    "avg_bits_err_improve": 4.158738337098638,
    "time": 39811.93603515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21891901566846755,
    "avg_bits_err_output": 0.21891901566846755,
    "avg_bits_err_improve": 0,
    "time": 41787.720947265625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 5e+257) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.808494131170866,
    "avg_bits_err_output": 12.299543428925801,
    "avg_bits_err_improve": 1.5089507022450643,
    "time": 48333.20703125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.56136905097554,
    "avg_bits_err_output": 2.0607650813229488,
    "avg_bits_err_improve": 59.500603969652595,
    "time": 92639.02026367188,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.3e-161) (/ (+ t (* t (- (sqrt 2.0) 1.0))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 1.3e-158) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma 2.0 (* t t) (* l l)) (* l (fma l -1.0 l)))))) (/ (+ t (* t (- (sqrt 2.0) 1.0))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 42.539973515654495,
    "avg_bits_err_output": 35.82354315773159,
    "avg_bits_err_improve": 6.716430357922903,
    "time": 41579.302978515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.8189911087062542,
    "avg_bits_err_output": 0.2122409781302282,
    "avg_bits_err_improve": 3.606750130576026,
    "time": 36857.680419921875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.8909181020552495,
    "avg_bits_err_output": 0.007125,
    "avg_bits_err_improve": 0.8837931020552494,
    "time": 11731.17431640625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.300471547290924,
    "avg_bits_err_output": 10.300471547290924,
    "avg_bits_err_improve": 0,
    "time": 139390.72021484375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e-292) (* (sqrt (- n)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 U)))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+304) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (fma n (* (pow (/ l Om) 2.0) (* U (- U* U))) (* U (- t (* 2.0 (/ (* l l) Om)))))) (sqrt (* 2.0 n)))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.25266843955151,
    "avg_bits_err_output": 30.382581207557216,
    "avg_bits_err_improve": 3.8700872319942974,
    "time": 42371.7734375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -2e-104) (/ 2.0 (* (sin k) (* (tan k) (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.49037683069059,
    "avg_bits_err_output": 38.03028612671464,
    "avg_bits_err_improve": 9.46009070397595,
    "time": 76032.90625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e-143) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k)))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (fma (sin k) (- (tan k)) (* (tan k) (* (+ (/ (pow t 3.0) (* l l)) 1.0) (sin k)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 32.127143358607746,
    "avg_bits_err_output": 30.89847107928208,
    "avg_bits_err_improve": 1.228672279325668,
    "time": 39549.68359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (fma a1 a1 (* a2 a2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5379524469000625,
    "avg_bits_err_output": 0.5374312062748822,
    "avg_bits_err_improve": 0.0005212406251803303,
    "time": 40879.93994140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.4852067580956259,
    "avg_bits_err_output": 0.4852067580956259,
    "avg_bits_err_improve": 0,
    "time": 46530.21142578125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (fma J (- (exp (- l))) (fma J (- (exp l) (exp (- l))) (* J (exp (- l))))) (cos (/ K 2.0))) U)",
    "output_parens": 16,
    "avg_bits_err_input": 17.53553653168156,
    "avg_bits_err_output": 17.54301127852171,
    "avg_bits_err_improve": -0.007474746840149038,
    "time": 36344.16455078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (+ (+ (cos (- (/ (* K (+ m n)) 2.0) M)) -1.0) 1.0) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.58374602098597,
    "avg_bits_err_output": 15.583746020985968,
    "avg_bits_err_improve": 1.7763568394002505e-15,
    "time": 25360.023193359375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.186511842188136,
    "avg_bits_err_output": 18.186511842188136,
    "avg_bits_err_improve": 0,
    "time": 42677.602783203125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 5e+146) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (- (+ (pow (/ (* M D) (+ d d)) 2.0) 1.0) 1.0)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.013086210429998,
    "avg_bits_err_output": 9.663288715261887,
    "avg_bits_err_improve": 4.3497974951681115,
    "time": 17967.0830078125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.845743201392345,
    "avg_bits_err_output": 18.845743201392345,
    "avg_bits_err_improve": 0,
    "time": 26377.22607421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* M M) 1e-277) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* h w)))) (sqrt (* (- (/ (* d (* d c0)) (* D (* D (* h w)))) M) (+ (/ (* d (* d c0)) (* D (* D (* h w)))) M))))) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 59.545428212516434,
    "avg_bits_err_output": 56.242786094592084,
    "avg_bits_err_improve": 3.30264211792435,
    "time": 40848.771728515625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (fma (sqrt (/ d h)) (* (- 1.0 (exp (+ (* 2.0 (log (/ (* M D) (+ d d)))) (log (* (/ h l) 0.5))))) (sqrt (/ d l))) 0.0) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+195) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0)))",
    "output_parens": 80,
    "avg_bits_err_input": 26.92738928625457,
    "avg_bits_err_output": 25.117513794348394,
    "avg_bits_err_improve": 1.8098754919061761,
    "time": 52904.714599609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- (expm1 (- (log (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)) (* 0.5 (fma 0.5 (log (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)) (log (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 15.40199340572836,
    "avg_bits_err_output": 14.918537280364912,
    "avg_bits_err_improve": 0.48345612536344795,
    "time": 101953.53857421875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (sqrt (- 2.0 (* 6.0 (* v v)))) (+ (* v (* v -3.0)) 3.0)) PI))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9841981203125901,
    "avg_bits_err_output": 0.012240601562950724,
    "avg_bits_err_improve": 0.9719575187496394,
    "time": 14892.2109375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* t (* v v))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4565768815682678,
    "avg_bits_err_output": 0.3809797003121378,
    "avg_bits_err_improve": 0.07559718125613002,
    "time": 27677.9326171875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* v 3.0)))) (* (/ (sqrt 2.0) 4.0) (+ (- 2.0 (* v v)) -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.012323120312590145,
    "avg_bits_err_output": 0.015886842188131012,
    "avg_bits_err_improve": -0.003563721875540868,
    "time": 17578.3388671875,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.508847125251714,
    "avg_bits_err_output": 0.508847125251714,
    "avg_bits_err_improve": 0,
    "time": 16291.8369140625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9987596601181528,
    "avg_bits_err_output": 1.9652384194929726,
    "avg_bits_err_improve": 0.03352124062518014,
    "time": 12325.802001953125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.016281150418828574,
    "avg_bits_err_output": 0.016281150418828574,
    "avg_bits_err_improve": 0,
    "time": 35655.839599609375,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18960735349127605,
    "avg_bits_err_output": 0.18960735349127605,
    "avg_bits_err_improve": 0,
    "time": 26466.362548828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18656697967695074,
    "avg_bits_err_output": 0.18656697967695074,
    "avg_bits_err_improve": 0,
    "time": 34517.768798828125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (* b (+ (* b (* b b)) (* b (* a a)))) (* a (* (fma b b (* a a)) a))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 22,
    "avg_bits_err_input": 0.18854912789656242,
    "avg_bits_err_output": 0.13436351838627744,
    "avg_bits_err_improve": 0.05418560951028498,
    "time": 29428.2890625,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (- (+ (/ x (sqrt (+ (* x x) (* 4.0 (* p p))))) 2.0) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.75244049231281,
    "avg_bits_err_output": 13.762138326302283,
    "avg_bits_err_improve": -0.009697833989473992,
    "time": 17750.6689453125,
    "seed": 10,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.75957069438255,
    "avg_bits_err_output": 0.081375,
    "avg_bits_err_improve": 40.67819569438255,
    "time": 9165.157470703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.426259028215274,
    "avg_bits_err_output": 29.908144340168764,
    "avg_bits_err_improve": 1.5181146880465093,
    "time": 34550.525146484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- (* c (* a (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) b_2)) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.40629718842668,
    "avg_bits_err_output": 33.273093559583735,
    "avg_bits_err_improve": 1.1332036288429421,
    "time": 21069.017333984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* a (- c))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.97145927407366,
    "avg_bits_err_output": 33.970546510591504,
    "avg_bits_err_improve": 0.0009127634821552988,
    "time": 26842.14404296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.411070634483735,
    "avg_bits_err_output": 31.411070634483735,
    "avg_bits_err_improve": 0,
    "time": 25575.13623046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 5.5e+53) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 21,
    "avg_bits_err_input": 32.65270767685723,
    "avg_bits_err_output": 30.837570452725558,
    "avg_bits_err_improve": 1.815137224131675,
    "time": 54547.397216796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.968340199517087,
    "avg_bits_err_output": 0.01725,
    "avg_bits_err_improve": 29.951090199517086,
    "time": 30260.043212890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.957259567815925,
    "avg_bits_err_output": 14.957259567815925,
    "avg_bits_err_improve": 0,
    "time": 88271.107421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.8583013065861,
    "avg_bits_err_output": 6.291374340629157,
    "avg_bits_err_improve": 33.566926965956945,
    "time": 34124.816162109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.21417733891934,
    "avg_bits_err_output": 29.90437180363798,
    "avg_bits_err_improve": 0.3098055352813631,
    "time": 34744.841064453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.98425757669562,
    "avg_bits_err_output": 29.98425757669562,
    "avg_bits_err_improve": 0,
    "time": 46133.912353515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (fma a (* c (* -4.0 (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))) (* b (* b (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 34.02880879723151,
    "avg_bits_err_output": 33.06317038548591,
    "avg_bits_err_improve": 0.9656384117456014,
    "time": 48269.107421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma -1.0 (* -4.0 (* a (* c (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))))) (* b (+ -1.0 (* b (- (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))))))) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 34.31682482700995,
    "avg_bits_err_output": 32.06512313724804,
    "avg_bits_err_improve": 2.2517016897619158,
    "time": 34941.527099609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.506351104515716,
    "avg_bits_err_output": 0.02231372187554087,
    "avg_bits_err_improve": 61.484037382640174,
    "time": 12030.26611328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 62.99830314314377,
    "avg_bits_err_output": 0.08261969013467309,
    "avg_bits_err_improve": 62.9156834530091,
    "time": 49325.052734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(fma (- 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (* (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) (/ -1.0 (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))))) 1.0)",
    "output_parens": 18,
    "avg_bits_err_input": 58.69856530902926,
    "avg_bits_err_output": 58.72002310541372,
    "avg_bits_err_improve": -0.021457796384460437,
    "time": 98378.5439453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -2.1e-153) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x))) (if (<= x 1e-154) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x)))))",
    "output_parens": 32,
    "avg_bits_err_input": 60.03390797384855,
    "avg_bits_err_output": 56.79999365095304,
    "avg_bits_err_improve": 3.233914322895508,
    "time": 56624.6826171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.545498997463795,
    "avg_bits_err_output": 41.02165175001736,
    "avg_bits_err_improve": 19.523847247446433,
    "time": 48383.34228515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.14198855681147,
    "avg_bits_err_output": 0.1805802023279344,
    "avg_bits_err_improve": 40.96140835448354,
    "time": 10001.097900390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.72375050291582,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.72312550291582,
    "time": 3482.731201171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.752675469533614,
    "avg_bits_err_output": 0.019508678590172007,
    "avg_bits_err_improve": 29.733166790943443,
    "time": 15686.513916015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.97256274512492,
    "avg_bits_err_output": 29.142454888095347,
    "avg_bits_err_improve": 0.8301078570295743,
    "time": 34192.64404296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(fma (/ 1.0 (+ 1.0 x)) (+ (/ 1.0 (+ 1.0 x)) (- (+ 1.0 (* x (/ 1.0 (+ 1.0 x)))) 1.0)) (- (/ 1.0 (+ -1.0 x)) (/ 2.0 x)))",
    "output_parens": 15,
    "avg_bits_err_input": 9.883531490737864,
    "avg_bits_err_output": 9.891994324551229,
    "avg_bits_err_improve": -0.008462833813364767,
    "time": 38966.440185546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (* (* (tan (+ x eps)) (- (+ 1.0 (/ 1.0 (tan (+ x eps)))) 1.0)) (tan (+ x eps))) (tan x))",
    "output_parens": 13,
    "avg_bits_err_input": 36.82708596163752,
    "avg_bits_err_output": 36.99357842655164,
    "avg_bits_err_improve": -0.16649246491412129,
    "time": 43803.651611328125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (+ 1.0 (sqrt x))) (- (+ (sqrt (- x -1.0)) (fma (sqrt x) (/ 1.0 (+ 1.0 (sqrt x))) 1.0)) (* (+ 1.0 (sqrt x)) (/ (+ (sqrt x) 2.0) (+ 1.0 (sqrt x))))))",
    "output_parens": 21,
    "avg_bits_err_input": 30.46279392718438,
    "avg_bits_err_output": 25.9853613661367,
    "avg_bits_err_improve": 4.477432561047678,
    "time": 53107.6064453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(+ (fma (sin x) (+ (cos eps) -1.0) (* (- 1.0 (cos eps)) (sin x))) (fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 37.2820694714606,
    "avg_bits_err_output": 0.3558120459345366,
    "avg_bits_err_improve": 36.92625742552607,
    "time": 27386.410400390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.53816983068328,
    "avg_bits_err_output": 19.399780007531056,
    "avg_bits_err_improve": 0.1383898231522238,
    "time": 29542.318115234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0))))) (atan N))",
    "output_parens": 11,
    "avg_bits_err_input": 15.104404949952972,
    "avg_bits_err_output": 15.107377050500443,
    "avg_bits_err_improve": -0.0029721005474705464,
    "time": 17080.697265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.58275976293066,
    "avg_bits_err_output": 1.2541989507961064,
    "avg_bits_err_improve": 28.328560812134555,
    "time": 30081.961669921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (* (- 1.0 m) (/ (+ (/ (- m (* m m)) v) -1.0) (- 1.0 m))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07792999596793129,
    "avg_bits_err_output": 0.08650556003160319,
    "avg_bits_err_improve": -0.008575564063671895,
    "time": 43106.416748046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.641980543787984,
    "avg_bits_err_output": 0.31394849687986776,
    "avg_bits_err_improve": 16.328032046908117,
    "time": 21364.309326171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (* PI (/ angle 180.0)) (* (* PI (/ angle 180.0)) (/ 1.0 (fma (/ angle 180.0) (* (/ angle 180.0) (/ PI (/ angle 180.0))) 0.0)))))) 2.0))",
    "output_parens": 22,
    "avg_bits_err_input": 20.25536766350176,
    "avg_bits_err_output": 20.325555082083188,
    "avg_bits_err_improve": -0.07018741858142619,
    "time": 68748.505859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (- (- (* (pow a 2.0) (* (sin (* PI (/ angle 180.0))) (- -1.0 (cos (* PI (/ angle 180.0)))))) (* (pow b 2.0) (* (sin (* PI (/ angle 180.0))) (- -1.0 (cos (* PI (/ angle 180.0))))))) (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0)))))",
    "output_parens": 30,
    "avg_bits_err_input": 31.64041768746994,
    "avg_bits_err_output": 31.606559491091645,
    "avg_bits_err_improve": 0.03385819637829712,
    "time": 54706.9130859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.034816628433592,
    "avg_bits_err_output": 20.044953383321943,
    "avg_bits_err_improve": -0.010136754888350197,
    "time": 64846.297607421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(fma m (/ (- m (* m m)) v) (- m))",
    "output_parens": 5,
    "avg_bits_err_input": 0.17814300435713698,
    "avg_bits_err_output": 0.17126516434757447,
    "avg_bits_err_improve": 0.006877840009562514,
    "time": 32933.246826171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (+ 1.0 (pow (tan x) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.33644979461744556,
    "avg_bits_err_output": 0.33617199556477845,
    "avg_bits_err_improve": 0.0002777990526671159,
    "time": 51432.504638671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13521936093777043,
    "avg_bits_err_output": 0.13521936093777043,
    "avg_bits_err_improve": 0,
    "time": 24779.9287109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.959706606356065,
    "avg_bits_err_output": 16.955021869545124,
    "avg_bits_err_improve": 0.004684736810940393,
    "time": 40952.5595703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.39074677848369,
    "avg_bits_err_output": 45.97561547755157,
    "avg_bits_err_improve": 6.415131300932117,
    "time": 26284.406005859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* a (* c -4.0)) (- (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* b b)) b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.434346419993858,
    "avg_bits_err_output": 27.688834836078815,
    "avg_bits_err_improve": 0.745511583915043,
    "time": 32333.32958984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.21024841021872,
    "avg_bits_err_output": 38.99365201743348,
    "avg_bits_err_improve": 4.216596392785235,
    "time": 24442.06005859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* c (* (/ (sqrt (fma b b (* c (* a -4.0)))) (fma b b (* c (* a -4.0)))) (* a -4.0))) (+ (* (/ (sqrt (fma c (* a -4.0) (* b b))) (fma c (* a -4.0) (* b b))) (* b b)) (- b))) (* a 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 34.03373881434307,
    "avg_bits_err_output": 33.62266038536331,
    "avg_bits_err_improve": 0.41107842897975644,
    "time": 49175.54296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.9227916492343113,
    "avg_bits_err_output": 0.9227916492343113,
    "avg_bits_err_improve": 0,
    "time": 46209.51953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log1p (+ 1.0 (- (expm1 (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.48602237292531,
    "avg_bits_err_output": 29.48476707624293,
    "avg_bits_err_improve": 0.001255296682376894,
    "time": 23641.5634765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.31821049390211,
    "avg_bits_err_output": 1.1460236843762623,
    "avg_bits_err_improve": 57.17218680952585,
    "time": 8583.0078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.194048431410835,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 58.186173431410836,
    "time": 5756.887939453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007948120312590144,
    "avg_bits_err_output": 0.007948120312590144,
    "avg_bits_err_improve": 0,
    "time": 3506.720703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (sqrt (fma x x -1.0)) -1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 31.8415,
    "avg_bits_err_output": 31.841875,
    "avg_bits_err_improve": -0.00037500000000179057,
    "time": 6940.03759765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))))) -0.5)",
    "output_parens": 18,
    "avg_bits_err_input": 58.690047170071864,
    "avg_bits_err_output": 58.69642725313344,
    "avg_bits_err_improve": -0.0063800830615790005,
    "time": 74156.90991210938,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- 1.0 (* x x))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.04382312031259015,
    "avg_bits_err_output": 0.04382312031259015,
    "avg_bits_err_improve": 0,
    "time": 5928.8583984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12657312031259016,
    "avg_bits_err_output": 0.12657312031259016,
    "avg_bits_err_improve": 0,
    "time": 28355.6201171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13507312031259017,
    "avg_bits_err_output": 0.13507312031259017,
    "avg_bits_err_improve": 0,
    "time": 48298.345458984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.737575955172545,
    "avg_bits_err_output": 3.5274832360267308,
    "avg_bits_err_improve": 35.21009271914581,
    "time": 39384.21875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.581460396180367,
    "avg_bits_err_output": 14.583414548389031,
    "avg_bits_err_improve": -0.0019541522086647944,
    "time": 6074.062744140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (+ (fma (- (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))) (sin phi1) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.14823173516493837,
    "avg_bits_err_output": 0.14299151742663696,
    "avg_bits_err_improve": 0.0052402177383014115,
    "time": 48364.889404296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) -1.0)))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 20,
    "avg_bits_err_input": 52.348724220987485,
    "avg_bits_err_output": 45.97622224233173,
    "avg_bits_err_improve": 6.372501978655755,
    "time": 33338.60595703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 28.62054275743222,
    "avg_bits_err_output": 27.740528904745325,
    "avg_bits_err_improve": 0.8800138526868935,
    "time": 34591.548583984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ b b)) (* -3.0 (* (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* c a)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.33573691100468,
    "avg_bits_err_output": 39.067192680972234,
    "avg_bits_err_improve": 4.268544230032447,
    "time": 34292.658203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.085782308532885,
    "avg_bits_err_output": 34.085782308532885,
    "avg_bits_err_improve": 0,
    "time": 21473.64306640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (pow (cos phi2) 2.0) (/ (sin (- lambda1 lambda2)) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.54259765526681,
    "avg_bits_err_output": 13.558763509259075,
    "avg_bits_err_improve": -0.016165853992264445,
    "time": 60190.230224609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (* (/ 1.0 (/ (+ 1.0 x) (+ x -1.0))) (log (exp (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 29.278962175140784,
    "avg_bits_err_output": 29.30282277711321,
    "avg_bits_err_improve": -0.023860601972426565,
    "time": 18150.672119140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 3274.058837890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.511259199520136,
    "avg_bits_err_output": 14.511259199520136,
    "avg_bits_err_improve": 0,
    "time": 86454.36669921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2e-310) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt F) (sqrt (* 2.0 (- (* A (* C 4.0)) (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 51,
    "avg_bits_err_input": 52.38712920987268,
    "avg_bits_err_output": 47.460223201832186,
    "avg_bits_err_improve": 4.926906008040497,
    "time": 58350.071533203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (+ (+ (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) -1.0) 1.0)) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 30.086011349813948,
    "avg_bits_err_output": 30.0896062857315,
    "avg_bits_err_improve": -0.003594935917551112,
    "time": 58286.576171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (expm1 (log1p (* (sqrt (- (* A (* C 4.0)) (pow B 2.0))) (sqrt (* -2.0 F))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt F) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* (pow B 2.0) 2.0) (* (* A C) 8.0)))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.49758604289484,
    "avg_bits_err_output": 47.34699736549176,
    "avg_bits_err_improve": 5.1505886774030785,
    "time": 47088.968994140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.747999065916055,
    "avg_bits_err_output": 15.747999065916055,
    "avg_bits_err_improve": 0,
    "time": 57449.77001953125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g -5e-263) (+ (* (* (cbrt (/ 1.0 (+ a a))) (/ (cbrt (- (sqrt (- (* g g) (* h h))) g)) (cbrt (/ 1.0 (+ a a))))) (cbrt (/ 1.0 (+ a a)))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 1.5e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g)))))))",
    "output_parens": 100,
    "avg_bits_err_input": 36.39747149191954,
    "avg_bits_err_output": 15.607381238137922,
    "avg_bits_err_improve": 20.790090253781617,
    "time": 78071.1962890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (/ (+ (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))) (cos (- (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0)) (* 2.0 PI)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.9896372187554094,
    "avg_bits_err_output": 0.028358646876983185,
    "avg_bits_err_improve": 0.9612785718784262,
    "time": 16743.9384765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log1p (expm1 (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.8134481203125902,
    "avg_bits_err_output": 0.8173680453140325,
    "avg_bits_err_improve": -0.003919925001442337,
    "time": 6765.345947265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.2541952019844,
    "avg_bits_err_output": 11.2541952019844,
    "avg_bits_err_improve": 0,
    "time": 37122.626708984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5053160970876119,
    "avg_bits_err_output": 0.4398231203125902,
    "avg_bits_err_improve": 0.06549297677502175,
    "time": 9859.12841796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -6.6e-9) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 53.08757398226754,
    "avg_bits_err_output": 11.163541914515362,
    "avg_bits_err_improve": 41.92403206775218,
    "time": 27557.3134765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.738474669718629,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.738474669718629,
    "time": 3222.10498046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.011875,
    "avg_bits_err_output": 0.011875,
    "avg_bits_err_improve": 0,
    "time": 6705.721923828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1236.013916015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* (* w r) (* w r))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.043903285727616,
    "avg_bits_err_output": 6.876904151958265,
    "avg_bits_err_improve": 6.166999133769351,
    "time": 32844.662353515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.511444133549421,
    "avg_bits_err_output": 0.27145053682697506,
    "avg_bits_err_improve": 0.2399935967224459,
    "time": 72914.1142578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ u (* (+ t1 u) (/ t1 (+ t1 u))))))",
    "output_parens": 10,
    "avg_bits_err_input": 18.071336238946007,
    "avg_bits_err_output": 18.07205559988378,
    "avg_bits_err_improve": -0.000719360937772251,
    "time": 62696.35009765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2382406015629507,
    "avg_bits_err_output": 0.19248120312590142,
    "avg_bits_err_improve": 0.04575939843704929,
    "time": 17487.068115234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 2755.771728515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (* (- b a) (/ (+ b a) (- b a))))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 14,
    "avg_bits_err_input": 14.060157334164336,
    "avg_bits_err_output": 9.190853417750967,
    "avg_bits_err_improve": 4.869303916413369,
    "time": 42250.336669921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (+ (+ 1.0 (- (* eps x) x)) -1.0))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.404405551391168,
    "avg_bits_err_output": 0.8903299273679331,
    "avg_bits_err_improve": 28.514075624023235,
    "time": 37102.450439453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.034,
    "avg_bits_err_output": 0.03857312031259015,
    "avg_bits_err_improve": -0.004573120312590148,
    "time": 11491.9072265625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(- (/ (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -5.0) (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)) 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.04125,
    "avg_bits_err_output": 0.03969812031259015,
    "avg_bits_err_improve": 0.0015518796874098503,
    "time": 30870.171142578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.0395,
    "avg_bits_err_output": 0.04068872187554087,
    "avg_bits_err_improve": -0.0011887218755408727,
    "time": 13507.947998046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3551.50341796875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3570.09765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3717.87109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.83415294849226,
    "avg_bits_err_output": 0.242125,
    "avg_bits_err_improve": 7.592027948492261,
    "time": 49848.34423828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.251812304277228,
    "avg_bits_err_output": 7.251812304277228,
    "avg_bits_err_improve": 0,
    "time": 27835.7333984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.811674165106716,
    "avg_bits_err_output": 0.012125,
    "avg_bits_err_improve": 15.799549165106717,
    "time": 13534.994873046875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (cos x) (pow (exp 10.0) (* x x))) (* (pow (exp 10.0) (* x x)) (pow (exp 10.0) (* x x))))",
    "output_parens": 13,
    "avg_bits_err_input": 3.533808319946438,
    "avg_bits_err_output": 3.056160729037224,
    "avg_bits_err_improve": 0.4776475909092137,
    "time": 40198.121826171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.969313845086171,
    "avg_bits_err_output": 14.969313845086171,
    "avg_bits_err_improve": 0,
    "time": 46041.085205078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.13321700459055,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.13321700459055,
    "time": 6225.206298828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14235252904971,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.14160252904971,
    "time": 4279.122802734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.297375,
    "avg_bits_err_improve": 63.702625,
    "time": 4058.1923828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325748725749,
    "avg_bits_err_output": 0.40519812031259017,
    "avg_bits_err_improve": 61.4380593669449,
    "time": 21510.324951171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma -1.0 (* -4.0 (* a (* c (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))))) (* b (+ -1.0 (* b (- (/ 1.0 (sqrt (fma c (* a -4.0) (* b b))))))))) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 34.31682482700995,
    "avg_bits_err_output": 32.06512313724804,
    "avg_bits_err_improve": 2.2517016897619158,
    "time": 41174.906005859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* c (* (/ (sqrt (fma b b (* c (* a -4.0)))) (fma b b (* c (* a -4.0)))) (* a -4.0))) (+ (* (/ (sqrt (fma c (* a -4.0) (* b b))) (fma c (* a -4.0) (* b b))) (* b b)) (- b))) (* a 2.0))",
    "output_parens": 26,
    "avg_bits_err_input": 34.03373881434307,
    "avg_bits_err_output": 33.62266038536331,
    "avg_bits_err_improve": 0.41107842897975644,
    "time": 51410.18798828125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2963.833740234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.27328378007921,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 40.26315878007921,
    "time": 6713.576904296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.603900004970843,
    "avg_bits_err_output": 20.603900004970843,
    "avg_bits_err_improve": 0,
    "time": 4487.741455078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.675466294662739,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.675466294662739,
    "time": 5170.029541015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038125,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.037375,
    "time": 5772.738037109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02052124062518029,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0.00902124062518029,
    "time": 4620.68310546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 4531.19140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 1409.610107421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39513477500432725,
    "avg_bits_err_output": 0.24725,
    "avg_bits_err_improve": 0.14788477500432726,
    "time": 11716.693359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.82809672115579,
    "avg_bits_err_output": 29.82809672115579,
    "avg_bits_err_improve": 0,
    "time": 10895.7646484375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(+ (- x (sqrt (- (* x x) eps))) (* (sqrt (- (* x x) eps)) (* (/ (fma (- (* x x) eps) (/ -1.0 (- (* x x) eps)) 1.0) (fma (- (* x x) eps) (/ -1.0 (- (* x x) eps)) 1.0)) (fma (/ -1.0 (- (* x x) eps)) (- eps) (- (+ (* (* x x) (/ -1.0 (fma x x (- eps)))) 2.0) 1.0)))))",
    "output_parens": 35,
    "avg_bits_err_input": 25.156603882026246,
    "avg_bits_err_output": 21.81445881293143,
    "avg_bits_err_improve": 3.3421450690948156,
    "time": 20959.0732421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (fma (sin x) (/ -1.0 (sin x)) 1.0) (- (+ 1.0 (* (/ 1.0 (sin x)) (pow (sin x) 2.0))) 1.0))) (tan x))",
    "output_parens": 17,
    "avg_bits_err_input": 30.202534991187456,
    "avg_bits_err_output": 30.176697451401985,
    "avg_bits_err_improve": 0.025837539785470653,
    "time": 41035.203369140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00475,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.00375,
    "time": 4499.19287109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-270) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-58) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.793414774631046,
    "avg_bits_err_output": 11.27207932465809,
    "avg_bits_err_improve": 36.52133544997295,
    "time": 50081.904296875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma a c (* b d)) (fma c c (* d d)))",
    "output_parens": 5,
    "avg_bits_err_input": 26.54672000234614,
    "avg_bits_err_output": 26.545948761720965,
    "avg_bits_err_improve": 0.0007712406251769721,
    "time": 35210.2978515625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.919322503604423,
    "avg_bits_err_output": 26.919322503604423,
    "avg_bits_err_improve": 0,
    "time": 18656.110595703125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.034625,
    "avg_bits_err_output": 0.02209512018848141,
    "avg_bits_err_improve": 0.012529879811518593,
    "time": 5535.6318359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (- ux (* ux (- maxCos (* (* ux maxCos) (- 1.0 maxCos))))) (* ux (- maxCos (- (fma ux maxCos 1.0) ux))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.48019772248627,
    "avg_bits_err_output": 0.5399784245972139,
    "avg_bits_err_improve": 12.940219297889056,
    "time": 33074.886962890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (+ (* ux (* ux maxCos)) (- (- (+ ux ux) (* ux (* maxCos (- (fma ux maxCos 2.0) ux)))) (* ux ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.519301336611504,
    "avg_bits_err_output": 0.32659283045971166,
    "avg_bits_err_improve": 13.192708506151792,
    "time": 34927.8974609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* uy (expm1 (log1p (* (/ PI (+ uy uy)) (* uy 4.0)))))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 39,
    "avg_bits_err_input": 0.3487379499286087,
    "avg_bits_err_output": 0.36622036216373094,
    "avg_bits_err_improve": -0.017482412235122258,
    "time": 92487.25,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.20178646459810826,
    "avg_bits_err_output": 0.20310423915836068,
    "avg_bits_err_improve": -0.0013177745602524216,
    "time": 41593.98388671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (pow (/ u1 (- 1.0 u1)) 0.5) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5406407732888537,
    "avg_bits_err_output": 0.5407657732888538,
    "avg_bits_err_improve": -0.00012500000000004174,
    "time": 35114.172119140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (pow (* (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1))) 0.25) (cos (* u2 -6.28318530718)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.33783987387645614,
    "avg_bits_err_output": 0.3511057238799126,
    "avg_bits_err_improve": -0.01326585000345648,
    "time": 36685.58740234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma (log1p (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -2.0)) (- s) (fma (- (* s (/ -1.0 s))) s (- s)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.34373294970418733,
    "avg_bits_err_output": 0.4243184808198849,
    "avg_bits_err_improve": -0.08058553111569755,
    "time": 66154.0732421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.053398950078813255,
    "avg_bits_err_output": 0.03756563589897472,
    "avg_bits_err_improve": 0.015833314179838534,
    "time": 21151.73681640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.13206295199689416,
    "avg_bits_err_output": 0.11927498168141938,
    "avg_bits_err_improve": 0.012787970315474781,
    "time": 41798.649658203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641972797300889,
    "avg_bits_err_output": 0.6641972797300889,
    "avg_bits_err_improve": 0,
    "time": 22878.6259765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.16187538088854972,
    "avg_bits_err_output": 0.15675208363220644,
    "avg_bits_err_improve": 0.005123297256343279,
    "time": 29081.580078125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.549048912363797,
    "avg_bits_err_output": 2.549048912363797,
    "avg_bits_err_improve": 0,
    "time": 44360.633056640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (* (- 1.0 (* (sinh (/ 1.0 v)) 2.0)) (- v)) v))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4686063684886611,
    "avg_bits_err_output": 0.47549819871920207,
    "avg_bits_err_improve": -0.006891830230540963,
    "time": 60690.47802734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (* (/ 1.0 (+ v v)) (exp (- (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (/ (* sinTheta_i sinTheta_O) v)))) (exp 0.6931))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11032161080318517,
    "avg_bits_err_output": 0.11453570247100948,
    "avg_bits_err_improve": -0.004214091667824313,
    "time": 60636.0224609375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47728999914480447,
    "avg_bits_err_output": 0.4282490426343809,
    "avg_bits_err_improve": 0.04904095651042356,
    "time": 27904.43212890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log1p (- (/ (- u 0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.2990784434495346,
    "avg_bits_err_output": 0.5500173214120243,
    "avg_bits_err_improve": 0.7490611220375103,
    "time": 41620.83740234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.58015451999077,
    "avg_bits_err_output": 0.2065,
    "avg_bits_err_improve": 12.37365451999077,
    "time": 51322.61962890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1470153545370418,
    "avg_bits_err_output": 0.14676535453704176,
    "avg_bits_err_improve": 0.000250000000000028,
    "time": 95023.52319335938,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8823517852884531,
    "avg_bits_err_output": 0.882604432374699,
    "avg_bits_err_improve": -0.00025264708624583854,
    "time": 49786.47412109375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (- (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (log (pow (exp (/ 1.0 (sqrt PI))) (- (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.6824175854522285,
    "avg_bits_err_output": 0.5451971878625288,
    "avg_bits_err_improve": 0.13722039758969973,
    "time": 66838.18579101562,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (* (sin (* 2.0 (* PI u2))) (* (sin (* 2.0 (* PI u2))) (/ 1.0 (sin (* 2.0 (* PI u2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.323353505942526,
    "avg_bits_err_output": 0.5670562740943573,
    "avg_bits_err_improve": 12.756297231848169,
    "time": 30212.73291015625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* u2 (- (* u2 (/ (fma 2.0 PI 1.0) u2)) 1.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.368858134355358,
    "avg_bits_err_output": 0.32911286564613956,
    "avg_bits_err_improve": 13.039745268709218,
    "time": 64689.577880859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.121224912919445,
    "avg_bits_err_output": 0.211125,
    "avg_bits_err_improve": 13.910099912919446,
    "time": 25399.8681640625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.447327489928941,
    "avg_bits_err_output": 0.5147889071085578,
    "avg_bits_err_improve": 11.932538582820383,
    "time": 21259.4921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -5e-152) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (if (<= F 1.35e-164) (- (* PI l) (exp (+ (* -2.0 (log F)) (log (tan (* PI l)))))) (- (* PI l) (* (pow F -2.0) (tan (* PI l))))))",
    "output_parens": 26,
    "avg_bits_err_input": 16.601878004565418,
    "avg_bits_err_output": 15.8211201476251,
    "avg_bits_err_improve": 0.7807578569403173,
    "time": 34073.077880859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2144387218755409,
    "avg_bits_err_output": 0.2144387218755409,
    "avg_bits_err_improve": 0,
    "time": 34927.136962890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 4e+273) (+ (- (* x (/ 1.0 (tan B)))) (* (* (/ F (sin B)) (* (/ F (sin B)) (/ 1.0 (/ F (sin B))))) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 48,
    "avg_bits_err_input": 14.15189048950995,
    "avg_bits_err_output": 12.455531651894436,
    "avg_bits_err_improve": 1.6963588376155148,
    "time": 52409.02880859375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.46676337592357,
    "avg_bits_err_output": 1.9945312259035144,
    "avg_bits_err_improve": 59.472232150020055,
    "time": 108608.96118164062,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -2.5e-159) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 2.3e-102) (/ (* (sqrt 2.0) t) (sqrt (+ (fma (- l) l (* (/ (+ 1.0 x) (+ x -1.0)) (fma t (+ t t) (* l l)))) (fma (- (* l (/ (* l (/ l l)) l))) l (* l l))))) (/ (* (/ t (sqrt 2.0)) 2.0) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 59,
    "avg_bits_err_input": 43.27858462668803,
    "avg_bits_err_output": 36.094713067936745,
    "avg_bits_err_improve": 7.183871558751285,
    "time": 36212.6513671875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.821904746008287,
    "avg_bits_err_output": 3.821904746008287,
    "avg_bits_err_improve": 0,
    "time": 48242.01708984375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ (log1p (expm1 (+ (pow (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))) -0.5) -1.0))) 1.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.9649431985483787,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0.9540681985483788,
    "time": 20313.335693359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.122000677655011,
    "avg_bits_err_output": 10.123193612622979,
    "avg_bits_err_improve": -0.0011929349679675738,
    "time": 45927.426025390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -6.2e+63) (* (sqrt (- U)) (sqrt (* 2.0 (* n (- (* 2.0 (/ (* l l) Om)) (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))))))) (if (<= U -2.1e-194) (sqrt (* 2.0 (* (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) n))) (if (<= U -2e-310) (* (sqrt (- U)) (sqrt (* 2.0 (* n (- (* 2.0 (/ (* l l) Om)) (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))))))) (* (sqrt U) (sqrt (* n (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) 2.0)))))))",
    "output_parens": 67,
    "avg_bits_err_input": 33.972974253867456,
    "avg_bits_err_output": 30.17891743962776,
    "avg_bits_err_improve": 3.7940568142396955,
    "time": 40832.88818359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -8.8e-95) (/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (pow (/ k t) 2.0)))) (if (<= t 6.6e-86) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (* (sin k) (* (sin k) (* (pow (/ k t) 2.0) (/ (tan k) (sin k)))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 47.131482056898776,
    "avg_bits_err_output": 37.282505031420534,
    "avg_bits_err_improve": 9.848977025478241,
    "time": 55172.869140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 5000000000000.0) (/ 2.0 (* (sin k) (* (/ (pow t 3.0) (* l l)) (* (+ 2.0 (pow (/ k t) 2.0)) (tan k))))) (/ 2.0 (* (- (+ 2.0 (pow (/ k t) 2.0))) (fma (sin k) (tan k) (- (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))))",
    "output_parens": 44,
    "avg_bits_err_input": 32.47317359083393,
    "avg_bits_err_output": 30.643515215862962,
    "avg_bits_err_improve": 1.8296583749709683,
    "time": 43735.375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a1) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5343601531460959,
    "avg_bits_err_output": 0.5240394765845874,
    "avg_bits_err_improve": 0.01032067656150848,
    "time": 37627.599365234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(- (* (+ (pow k -0.5) 1.0) (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0))) (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.49964689433809917,
    "avg_bits_err_output": 0.46297210117306986,
    "avg_bits_err_improve": 0.03667479316502931,
    "time": 38184.07568359375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (+ (fma (- (exp (- l))) (* J (cos (/ K 2.0))) (* (cos (/ K 2.0)) (* (exp (- l)) J))) (* J (* (cos (/ K 2.0)) (- (exp l) (exp (- l)))))) (* (- (cos (/ K 2.0))) (fma (- (exp l)) J (* (exp l) J)))) U)",
    "output_parens": 33,
    "avg_bits_err_input": 17.01749178768661,
    "avg_bits_err_output": 17.02736969555338,
    "avg_bits_err_improve": -0.009877907866769675,
    "time": 45597.25439453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -2e+178) (* (cos (- (/ (* K (* (+ 1.0 (- -1.0 (/ (+ m n) K))) (- K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 4.2e+236) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* (+ 1.0 (- -1.0 (/ (+ m n) K))) (- K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.429412809716103,
    "avg_bits_err_output": 10.541408392346389,
    "avg_bits_err_improve": 4.888004417369714,
    "time": 35837.50244140625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.04782312031259,
    "avg_bits_err_output": 18.04782312031259,
    "avg_bits_err_improve": 0,
    "time": 56143.644775390625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+247) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (log1p (expm1 (/ (* M D) (+ d d)))) 2.0))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 13.978490889181716,
    "avg_bits_err_output": 9.975298273674403,
    "avg_bits_err_improve": 4.003192615507313,
    "time": 23494.793212890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.650584142982236,
    "avg_bits_err_output": 18.650584142982236,
    "avg_bits_err_improve": 0,
    "time": 27785.561767578125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* D h)))) 2.0) (* M M)))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.53759391199181,
    "avg_bits_err_output": 56.685851400647394,
    "avg_bits_err_improve": 2.851742511344419,
    "time": 41243.705810546875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (- (sqrt (/ d h)) (* (pow (/ (* M D) (+ d d)) 2.0) (* (sqrt (/ d h)) (* (/ h l) 0.5)))) (sqrt (/ d l)))",
    "output_parens": 16,
    "avg_bits_err_input": 25.561166891117207,
    "avg_bits_err_output": 24.97552984525404,
    "avg_bits_err_improve": 0.5856370458631659,
    "time": 55835.10107421875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (- (* (- 2.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) (exp 1.0)) (exp 1.0)) (exp -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 15.804121893032281,
    "avg_bits_err_output": 15.369936308932843,
    "avg_bits_err_improve": 0.4341855840994384,
    "time": 16703.977294921875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (- 3.0 (* 3.0 (* v v))) (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9842712406251803,
    "avg_bits_err_output": 0.011323120312590145,
    "avg_bits_err_improve": 0.9729481203125901,
    "time": 16836.814453125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.43664791206242864,
    "avg_bits_err_output": 0.3588595651796756,
    "avg_bits_err_improve": 0.07778834688275305,
    "time": 25598.97509765625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* v (* v 3.0))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01102124062518029,
    "avg_bits_err_output": 0.01102124062518029,
    "avg_bits_err_improve": 0,
    "time": 22281.3076171875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5026736243882015,
    "avg_bits_err_output": 0.5026736243882015,
    "avg_bits_err_improve": 0,
    "time": 13065.8740234375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1803358968477475,
    "avg_bits_err_output": 2.179085896847747,
    "avg_bits_err_improve": 0.0012500000000006395,
    "time": 15131.96875,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (- (+ (/ (+ mu (+ EDonor (- Vef Ec))) KbT) 1.0) 1.0)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.01842832603964897,
    "avg_bits_err_output": 0.018428326039648966,
    "avg_bits_err_improve": 3.469446951953614e-18,
    "time": 10045.529052734375,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18791059254041304,
    "avg_bits_err_output": 0.1881749541616579,
    "avg_bits_err_improve": -0.00026436162124485185,
    "time": 4444.55712890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1883576957532427,
    "avg_bits_err_output": 0.1883576957532427,
    "avg_bits_err_improve": 0,
    "time": 26965.308837890625,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18364499700213033,
    "avg_bits_err_output": 0.18364499700213033,
    "avg_bits_err_improve": 0,
    "time": 4871.33203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(exp (* 0.5 (+ (log1p (/ x (sqrt (fma 4.0 (* p p) (* x x))))) (log 0.5))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.064064303577362,
    "avg_bits_err_output": 13.063952545891906,
    "avg_bits_err_improve": 0.00011175768545612641,
    "time": 18109.30908203125,
    "seed": 11,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.81136276382824,
    "avg_bits_err_output": 0.048375,
    "avg_bits_err_improve": 40.76298776382824,
    "time": 6681.005615234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (- x (tan x)) (* (+ (* (* (tan x) (/ 1.0 (tan x))) (fma (tan x) (/ 1.0 (tan x)) -1.0)) (- 1.0 (* (tan x) (/ 1.0 (tan x))))) (tan x))))",
    "output_parens": 23,
    "avg_bits_err_input": 30.762234360860536,
    "avg_bits_err_output": 29.869476701701974,
    "avg_bits_err_improve": 0.892757659158562,
    "time": 45938.325927734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (* -1.0 (- (* c (* a (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) (- (* b_2 (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) b_2)) b_2))) a)",
    "output_parens": 18,
    "avg_bits_err_input": 33.928949676298444,
    "avg_bits_err_output": 31.936153996306878,
    "avg_bits_err_improve": 1.9927956799915663,
    "time": 26393.821044921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- (- (sqrt (- (* b_2 b_2) (* a c))) b_2) (sqrt (- (* b_2 b_2) (* a c)))) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 16,
    "avg_bits_err_input": 34.00131642707157,
    "avg_bits_err_output": 34.00646682750369,
    "avg_bits_err_improve": -0.005150400432114566,
    "time": 17800.371826171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.479503745857624,
    "avg_bits_err_output": 31.162545553111134,
    "avg_bits_err_improve": 0.3169581927464904,
    "time": 22292.09716796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 70000000000000.0) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- 1.0 (- (+ 1.0 (/ (/ 1.0 n) (/ 1.0 n))) (* (+ 1.0 (/ 1.0 n)) (/ (/ 1.0 n) (/ 1.0 n)))))))) (+ (+ (pow (+ 1.0 x) (/ 1.0 n)) (- -2.0 (pow x (/ 1.0 n)))) 2.0))",
    "output_parens": 32,
    "avg_bits_err_input": 32.72777396419889,
    "avg_bits_err_output": 30.831824926827657,
    "avg_bits_err_improve": 1.8959490373712313,
    "time": 71169.48828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.78660663386939,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 29.77873163386939,
    "time": 4906.9052734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (- (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ 1.0 x)) (- (/ 1.0 x) (pow (/ 1.0 (+ 1.0 x)) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 14.227968964086289,
    "avg_bits_err_output": 0.513480987723968,
    "avg_bits_err_improve": 13.71448797636232,
    "time": 54574.67333984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (- (* (cos eps) (cos x)) (cos x)))",
    "output_parens": 9,
    "avg_bits_err_input": 39.80847367086928,
    "avg_bits_err_output": 6.100524963552105,
    "avg_bits_err_improve": 33.70794870731718,
    "time": 34441.13134765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.97572181503202,
    "avg_bits_err_output": 29.672793035114093,
    "avg_bits_err_improve": 0.3029287799179272,
    "time": 33451.9755859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(log (exp (/ (- 1.0 (cos x)) (sin x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.441579290088793,
    "avg_bits_err_output": 30.500896650281355,
    "avg_bits_err_improve": -0.05931736019256206,
    "time": 48937.30126953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b))) b) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.157592644304245,
    "avg_bits_err_output": 34.18018748464834,
    "avg_bits_err_improve": -0.02259484034409809,
    "time": 25707.141845703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.35626756182946,
    "avg_bits_err_output": 34.36665660026841,
    "avg_bits_err_improve": -0.010389038438951559,
    "time": 22981.89404296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.43951174953297,
    "avg_bits_err_output": 0.021627443751081738,
    "avg_bits_err_improve": 61.41788430578189,
    "time": 16751.84521484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00671293506907,
    "avg_bits_err_output": 0.06346981154942682,
    "avg_bits_err_improve": 62.94324312351964,
    "time": 48602.1474609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.7625527710156,
    "avg_bits_err_output": 58.7625527710156,
    "avg_bits_err_improve": 0,
    "time": 78639.63403320312,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (- (/ (pow (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))) 2.0) (/ 1.0 (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))) (- (* (/ (pow (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))) 2.0) (/ 1.0 (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))) (+ 1.0 (/ 1.0 (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x))))))) (* (/ (pow (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))) 2.0) (/ 1.0 (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))) (* (/ 1.0 (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x))))) (+ 1.0 (/ 1.0 (+ 2.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))))) -2.0)",
    "output_parens": 65,
    "avg_bits_err_input": 59.934265574616184,
    "avg_bits_err_output": 59.93433843275504,
    "avg_bits_err_improve": -7.285813885715697e-05,
    "time": 126707.125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.224248678815805,
    "avg_bits_err_output": 40.68792366289566,
    "avg_bits_err_improve": 19.53632501592014,
    "time": 49340.755126953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.09620958617261,
    "avg_bits_err_output": 0.1112920606361901,
    "avg_bits_err_improve": 40.984917525536424,
    "time": 9775.896728515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.8305333361147,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.8299083361147,
    "time": 3723.817626953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.26460244412646,
    "avg_bits_err_output": 0.017303307870343385,
    "avg_bits_err_improve": 29.247299136256117,
    "time": 8703.913818359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (* (+ (expm1 (- x)) (expm1 x)) (exp 1.0)) (exp -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 29.557129343382474,
    "avg_bits_err_output": 28.73515130920327,
    "avg_bits_err_improve": 0.8219780341792031,
    "time": 35159.74560546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.862247228978633,
    "avg_bits_err_output": 9.862247228978633,
    "avg_bits_err_improve": 0,
    "time": 68069.12963867188,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.14351349314595,
    "avg_bits_err_output": 37.14351349314595,
    "avg_bits_err_improve": 0,
    "time": 38255.4423828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (- (- (* x (+ 1.0 (/ 1.0 (sqrt (+ x 1.0))))) (sqrt x)) x))",
    "output_parens": 12,
    "avg_bits_err_input": 30.103093410625217,
    "avg_bits_err_output": 25.854942824073014,
    "avg_bits_err_improve": 4.248150586552203,
    "time": 26295.448974609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (+ (* (+ (cos eps) -1.0) (sin x)) (fma (- (cos eps)) (- (sin x)) (* (cos eps) (- (sin x))))))",
    "output_parens": 17,
    "avg_bits_err_input": 37.06058064168207,
    "avg_bits_err_output": 0.3921660903187431,
    "avg_bits_err_improve": 36.66841455136333,
    "time": 24157.892578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.78679781097523,
    "avg_bits_err_output": 19.64646974092345,
    "avg_bits_err_improve": 0.14032807005177972,
    "time": 24726.405517578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (- (atan (+ N 1.0)) 1.0) -1.0) (atan N))",
    "output_parens": 6,
    "avg_bits_err_input": 15.702685266654953,
    "avg_bits_err_output": 15.698571056127417,
    "avg_bits_err_improve": 0.004114210527536244,
    "time": 12767.4111328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.68373776830271,
    "avg_bits_err_output": 1.1927035824343493,
    "avg_bits_err_improve": 28.49103418586836,
    "time": 26704.914306640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (+ m -1.0) (* (/ (- m (* m m)) v) (+ m -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07484680468885217,
    "avg_bits_err_output": 0.07791921918104967,
    "avg_bits_err_improve": -0.0030724144921975005,
    "time": 25825.582275390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.346636866611355,
    "avg_bits_err_output": 0.30461353437914657,
    "avg_bits_err_improve": 16.04202333223221,
    "time": 26094.12939453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* (pow PI 2.0) (* (/ angle 180.0) (/ 1.0 PI))))) 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 20.127718495623387,
    "avg_bits_err_output": 20.126735216581025,
    "avg_bits_err_improve": 0.000983279042362284,
    "time": 56434.565185546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (pow a 2.0) (* (sin (* PI (/ angle 180.0))) -2.0)) (* (sin (* PI (/ angle 180.0))) (* (pow b 2.0) -2.0))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 31.189253402311895,
    "avg_bits_err_output": 31.181951522624484,
    "avg_bits_err_improve": 0.007301879687410917,
    "time": 49180.796630859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 20.250990098620672,
    "avg_bits_err_output": 20.250990098620672,
    "avg_bits_err_improve": 0,
    "time": 54776.919677734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.174386842188131,
    "avg_bits_err_output": 0.174386842188131,
    "avg_bits_err_improve": 0,
    "time": 24638.172119140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.32787923409624165,
    "avg_bits_err_output": 0.32370753386473006,
    "avg_bits_err_improve": 0.004171700231511588,
    "time": 79319.95971679688,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13361560156295077,
    "avg_bits_err_output": 0.13361560156295077,
    "avg_bits_err_improve": 0,
    "time": 26479.267822265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi2) (* (cos phi1) (cos (- lambda2 lambda1)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.553132762127607,
    "avg_bits_err_output": 16.55328072036793,
    "avg_bits_err_improve": -0.00014795824032276528,
    "time": 44297.202392578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.54578696672873,
    "avg_bits_err_output": 46.062075785323124,
    "avg_bits_err_improve": 6.483711181405603,
    "time": 31676.798095703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma a (* c (* -4.0 (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))) (- (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* b b)) b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.703022829959906,
    "avg_bits_err_output": 27.926025036940732,
    "avg_bits_err_improve": 0.7769977930191736,
    "time": 25657.00732421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.95278290847692,
    "avg_bits_err_output": 39.684969252795014,
    "avg_bits_err_improve": 4.2678136556819055,
    "time": 28260.2578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.16796812371057,
    "avg_bits_err_output": 34.18018748464834,
    "avg_bits_err_improve": -0.012219360937770318,
    "time": 19688.72607421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8658996775858595,
    "avg_bits_err_output": 0.8642774159111252,
    "avg_bits_err_improve": 0.0016222616747343377,
    "time": 58803.171630859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.094274758241443,
    "avg_bits_err_output": 29.097363188290696,
    "avg_bits_err_improve": -0.003088430049253077,
    "time": 8375.526123046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.341430065011906,
    "avg_bits_err_output": 0.905075564063672,
    "avg_bits_err_improve": 57.436354500948234,
    "time": 8911.666259765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.420190970130484,
    "avg_bits_err_output": 0.0055,
    "avg_bits_err_improve": 58.414690970130486,
    "time": 11889.11474609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007823120312590144,
    "avg_bits_err_output": 0.007823120312590144,
    "avg_bits_err_improve": 0,
    "time": 27614.829833984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.969375,
    "avg_bits_err_output": 31.969375,
    "avg_bits_err_improve": 0,
    "time": 6140.010009765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (* (- (exp -1.0) (- (* (+ 1.0 (* (- (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0) -1.0) (exp 1.0))) (exp -1.0)) (* (+ 1.0 (exp 1.0)) (log (/ (+ 1.0 x) (- 1.0 x)))))) (exp -1.0)))",
    "output_parens": 24,
    "avg_bits_err_input": 58.75718426350197,
    "avg_bits_err_output": 58.75776837332164,
    "avg_bits_err_improve": -0.0005841098196697203,
    "time": 75652.982421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010875,
    "avg_bits_err_output": 0.010875,
    "avg_bits_err_improve": 0,
    "time": 3077.551513671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12107312031259015,
    "avg_bits_err_output": 0.12107312031259015,
    "avg_bits_err_improve": 0,
    "time": 26779.797119140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1320212406251803,
    "avg_bits_err_output": 0.1320212406251803,
    "avg_bits_err_improve": 0,
    "time": 46469.72216796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.16164565647196,
    "avg_bits_err_output": 3.7627702589663636,
    "avg_bits_err_improve": 35.3988753975056,
    "time": 84510.724609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.001870432482269,
    "avg_bits_err_output": 15.001870432482269,
    "avg_bits_err_improve": 0,
    "time": 6659.237060546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (+ (fma (- (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta))))))) (sin phi1) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (cos phi1) (* (sin delta) (cos theta)))))))) (fma (- (sin phi1)) (sin (asin (fma (sin phi1) (cos delta) (* (sin delta) (* (cos theta) (cos phi1)))))) (cos delta)))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.15074603719722948,
    "avg_bits_err_output": 0.14987808574347064,
    "avg_bits_err_improve": 0.0008679514537588418,
    "time": 44767.17041015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) -1.0)))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 20,
    "avg_bits_err_input": 52.54121187401281,
    "avg_bits_err_output": 46.06649024194048,
    "avg_bits_err_improve": 6.474721632072331,
    "time": 29484.126953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.833534575413424,
    "avg_bits_err_output": 28.03496033776822,
    "avg_bits_err_improve": 0.7985742376452052,
    "time": 26840.639892578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ b b)) b (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* c -3.0)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.071963725662876,
    "avg_bits_err_output": 39.74892484406098,
    "avg_bits_err_improve": 4.323038881601896,
    "time": 28433.334228515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.19149044542867,
    "avg_bits_err_output": 34.19149044542867,
    "avg_bits_err_improve": 0,
    "time": 24681.292236328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.244023484142858,
    "avg_bits_err_output": 13.245926280482081,
    "avg_bits_err_improve": -0.0019027963392233005,
    "time": 53093.6748046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.478830136119743,
    "avg_bits_err_output": 29.478830136119743,
    "avg_bits_err_improve": 0,
    "time": 14914.333740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 1406.737548828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -1.35e+151) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (if (<= x 1.15e+154) (- (- (* (pow (/ 1.0 (+ 1.0 x)) 2.0) (+ x 2.0)) (/ 1.0 (+ x -1.0))) (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.356729808407922,
    "avg_bits_err_output": 12.987919697721605,
    "avg_bits_err_improve": 1.3688101106863169,
    "time": 61746.69482421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (* A (* 4.0 C)) (pow B 2.0))) (sqrt (* (* 2.0 F) (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.68465213343055,
    "avg_bits_err_output": 47.65921291984328,
    "avg_bits_err_improve": 5.025439213587276,
    "time": 51847.064208984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (+ 1.0 (- (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))) 1.0))) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 28.799872016422874,
    "avg_bits_err_output": 28.803357019306663,
    "avg_bits_err_improve": -0.0034850028837887237,
    "time": 58066.100830078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.32e-268) (/ (- (sqrt (* 2.0 (* (+ A (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* (- (pow B 2.0) (* 4.0 (* C A))) F))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt F) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (- (* (pow B 2.0) 2.0) (* (* A C) 8.0)))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 46,
    "avg_bits_err_input": 52.626284500470604,
    "avg_bits_err_output": 47.821084333585844,
    "avg_bits_err_improve": 4.8052001668847595,
    "time": 47877.03662109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.048649245902647,
    "avg_bits_err_output": 15.048649245902647,
    "avg_bits_err_improve": 0,
    "time": 47877.020263671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1e-292) (+ (* (* (cbrt (/ 1.0 (+ a a))) (/ (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)) (cbrt (/ 1.0 (+ a a))))) (cbrt (/ 1.0 (+ a a)))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 4e+142) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))",
    "output_parens": 76,
    "avg_bits_err_input": 36.04933893785269,
    "avg_bits_err_output": 21.233189040250267,
    "avg_bits_err_improve": 14.816149897602422,
    "time": 69020.02807617188,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9915689859449832,
    "avg_bits_err_output": 0.026332722262221497,
    "avg_bits_err_improve": 0.9652362636827617,
    "time": 14319.172607421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(- (+ (/ (exp a) (+ (exp a) (exp b))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.6864481203125902,
    "avg_bits_err_output": 0.8021784659415379,
    "avg_bits_err_improve": -0.11573034562894768,
    "time": 7833.03662109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.087774609214982,
    "avg_bits_err_output": 11.087774609214982,
    "avg_bits_err_improve": 0,
    "time": 28613.0126953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5410586298238309,
    "avg_bits_err_output": 0.459,
    "avg_bits_err_improve": 0.08205862982383089,
    "time": 14198.986328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.053144343062264,
    "avg_bits_err_output": 15.459174688773198,
    "avg_bits_err_improve": 37.59396965428907,
    "time": 38580.09423828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.661814674667153,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.661814674667153,
    "time": 2726.6796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.014125,
    "avg_bits_err_output": 0.014125,
    "avg_bits_err_improve": 0,
    "time": 7382.530517578125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1254.778076171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e-56) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 100.0) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (- 0.375 (* v 0.25)) (* w (* r r)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.904227775203816,
    "avg_bits_err_output": 6.88451693320287,
    "avg_bits_err_improve": 6.019710842000946,
    "time": 37384.9072265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (/ (fma (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (fma (+ x1 x1) (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (* x1 (* x1 4.0))) (* x1 (* x1 -6.0))) 1.0) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5144545917423572,
    "avg_bits_err_output": 0.2872042594192187,
    "avg_bits_err_improve": 0.22725033232313852,
    "time": 74499.359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.37992929354394,
    "avg_bits_err_output": 18.37992929354394,
    "avg_bits_err_improve": 0,
    "time": 17880.608154296875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* (* x x) (* 0.12900613773279798 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2313942038992627,
    "avg_bits_err_output": 0.19552144413776232,
    "avg_bits_err_improve": 0.035872759761500395,
    "time": 26974.03759765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(+ (pow y 4.0) (+ (- (pow x 4.0) (pow y 4.0)) (- (pow y 4.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.02177124062518029,
    "avg_bits_err_improve": -0.01789624062518029,
    "time": 8207.90576171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.448593729422706,
    "avg_bits_err_output": 9.658499368484906,
    "avg_bits_err_improve": 4.7900943609378,
    "time": 43623.042236328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (exp (* x (- -1.0 eps))) (* (/ 1.0 eps) (- (exp (* x (+ eps -1.0))) (exp (* x (- -1.0 eps)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 18,
    "avg_bits_err_input": 29.068608974404512,
    "avg_bits_err_output": 0.9204248406466728,
    "avg_bits_err_improve": 28.148184133757837,
    "time": 26498.215087890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.00525,
    "avg_bits_err_output": 0.00525,
    "avg_bits_err_improve": 0,
    "time": 10255.784423828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0)) (* 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))) -4.0)) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 0.008625,
    "avg_bits_err_output": 0.01309680468885217,
    "avg_bits_err_improve": -0.004471804688852169,
    "time": 91207.5009765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.047125,
    "avg_bits_err_output": 0.04968872187554086,
    "avg_bits_err_improve": -0.00256372187554086,
    "time": 23075.6630859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3550.513427734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2875.456787109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4127.30224609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.822439552994903,
    "avg_bits_err_output": 0.2555,
    "avg_bits_err_improve": 7.566939552994904,
    "time": 78860.71533203125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.196932921991729,
    "avg_bits_err_output": 7.196932921991729,
    "avg_bits_err_improve": 0,
    "time": 31476.620361328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.775917841363928,
    "avg_bits_err_output": 0.012,
    "avg_bits_err_improve": 15.763917841363927,
    "time": 11772.89453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (- (/ (pow (exp (* x x)) 10.0) (cos x))) (- (* (- 1.0 (cos x)) (cos x)) (cos x)))",
    "output_parens": 13,
    "avg_bits_err_input": 3.5279987713504624,
    "avg_bits_err_output": 3.038918358148577,
    "avg_bits_err_improve": 0.48908041320188556,
    "time": 34591.421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.238760082455856,
    "avg_bits_err_output": 15.238760082455856,
    "avg_bits_err_improve": 0,
    "time": 31415.33740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.974329284874436,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.974329284874436,
    "time": 4938.650390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.31492535642638,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 39.31417535642638,
    "time": 5112.765380859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.294375,
    "avg_bits_err_improve": 63.705625,
    "time": 5029.403076171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843247791892665,
    "avg_bits_err_output": 0.39906860937770444,
    "avg_bits_err_improve": 61.44417918251496,
    "time": 23871.96826171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (+ a a))",
    "output_parens": 10,
    "avg_bits_err_input": 34.35626756182946,
    "avg_bits_err_output": 34.36665660026841,
    "avg_bits_err_improve": -0.010389038438951559,
    "time": 23915.487060546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 34.16796812371057,
    "avg_bits_err_output": 34.18018748464834,
    "avg_bits_err_improve": -0.012219360937770318,
    "time": 23462.0751953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1660.1640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.96699280021474,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 39.95649280021474,
    "time": 22772.68310546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.940154839816145,
    "avg_bits_err_output": 19.940154839816145,
    "avg_bits_err_improve": 0,
    "time": 3841.336669921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6135202606315286,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6135202606315286,
    "time": 5474.449951171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.032625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.031875,
    "time": 8290.478759765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021542481250360578,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.011167481250360578,
    "time": 4965.568359375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.01225,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.011375,
    "time": 6216.9697265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 2076.670166015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ a c))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4040592109406551,
    "avg_bits_err_output": 0.237875,
    "avg_bits_err_improve": 0.1661842109406551,
    "time": 11582.9052734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.534509587325942,
    "avg_bits_err_output": 30.534509587325942,
    "avg_bits_err_improve": 0,
    "time": 10831.328369140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.624325936858042,
    "avg_bits_err_output": 24.624325936858042,
    "avg_bits_err_improve": 0,
    "time": 26153.91796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (- 1.0 (- (+ (sin x) 1.0) (sin x)))) (tan x))",
    "output_parens": 10,
    "avg_bits_err_input": 29.735580462747357,
    "avg_bits_err_output": 29.76661808824877,
    "avg_bits_err_improve": -0.03103762550141198,
    "time": 40933.2275390625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0055,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.004625,
    "time": 3691.820556640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-239) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-17) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.906857548174784,
    "avg_bits_err_output": 11.73681153053046,
    "avg_bits_err_improve": 36.170046017644324,
    "time": 52700.593505859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.968229817912984,
    "avg_bits_err_output": 25.968229817912984,
    "avg_bits_err_improve": 0,
    "time": 17775.53564453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a d) (+ (* b c) (* a (* d -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 26.133310396043644,
    "avg_bits_err_output": 26.170119892945838,
    "avg_bits_err_improve": -0.03680949690219393,
    "time": 25500.890869140625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.02276184218813101,
    "avg_bits_err_improve": 0.014863157811868987,
    "time": 5447.70263671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (- (* ux (- ux)) (fma (fma ux maxCos 1.0) (- (* ux maxCos) ux) (* ux maxCos))) (* ux (- -1.0 (* ux maxCos))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.493586621741947,
    "avg_bits_err_output": 0.5505979482480167,
    "avg_bits_err_improve": 12.94298867349393,
    "time": 40603.114501953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (* ux (- (- ux) (* maxCos (- ux)))) (- (+ (* ux (- maxCos 1.0)) (+ (* ux maxCos) (* ux (* (* ux (- maxCos 1.0)) maxCos)))) ux))))",
    "output_parens": 21,
    "avg_bits_err_input": 13.529781691518084,
    "avg_bits_err_output": 0.33144301740032095,
    "avg_bits_err_improve": 13.198338674117762,
    "time": 54739.736083984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (fma (* 2.0 PI) (* (* 2.0 PI) (/ uy (* 2.0 PI))) 0.0)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 36,
    "avg_bits_err_input": 0.33362818424911234,
    "avg_bits_err_output": 0.330814669356431,
    "avg_bits_err_improve": 0.0028135148926813347,
    "time": 112703.11059570312,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.20030153685924734,
    "avg_bits_err_output": 0.20033441615997657,
    "avg_bits_err_improve": -3.287930072923273e-05,
    "time": 33219.930419921875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5431772925161444,
    "avg_bits_err_output": 0.5333118836990924,
    "avg_bits_err_improve": 0.009865408817052002,
    "time": 30891.84814453125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (- (+ (* u2 -6.28318530718) 1.0) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3217833431545981,
    "avg_bits_err_output": 0.3218352228420081,
    "avg_bits_err_improve": -5.187968740999471e-05,
    "time": 56219.47412109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (log (pow (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0) -1.0)) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.33924215969447646,
    "avg_bits_err_output": 0.344467257918318,
    "avg_bits_err_improve": -0.00522509822384154,
    "time": 40989.391845703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (+ (+ (/ (- x) s) 1.0) -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.06396203401129882,
    "avg_bits_err_output": 0.04967049315062794,
    "avg_bits_err_improve": 0.014291540860670887,
    "time": 146195.66918945312,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (exp (/ (- (fabs x)) s)) (+ (fma s (exp (/ (- (fabs x)) s)) s) s)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13358078798172698,
    "avg_bits_err_output": 0.1206092200717074,
    "avg_bits_err_improve": 0.01297156791001959,
    "time": 28325.329833984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641672695097591,
    "avg_bits_err_output": 0.6647208177201474,
    "avg_bits_err_improve": -0.0005535482103882217,
    "time": 25821.15185546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1575425624589511,
    "avg_bits_err_output": 0.15136695170411923,
    "avg_bits_err_improve": 0.006175610754831862,
    "time": 18442.206787109375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.537795758433255,
    "avg_bits_err_output": 2.5333745147320363,
    "avg_bits_err_improve": 0.004421243701218547,
    "time": 19025.4228515625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.45374477729140716,
    "avg_bits_err_output": 0.45374477729140716,
    "avg_bits_err_improve": 0,
    "time": 44229.67041015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (+ v (- (+ 1.0 v) 1.0)) (* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (- 0.6931 (/ (* sinTheta_i sinTheta_O) v)))) 1.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1066016481684797,
    "avg_bits_err_output": 0.10667512082384764,
    "avg_bits_err_improve": -7.347265536794545e-05,
    "time": 32583.87548828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (- (* (exp (log1p (* (fma alpha alpha -1.0) cosTheta))) cosTheta) cosTheta))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.47146334320773836,
    "avg_bits_err_output": 0.4304111061280963,
    "avg_bits_err_improve": 0.04105223707964206,
    "time": 26427.0712890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log1p (- (/ (+ u -0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3238551415534026,
    "avg_bits_err_output": 0.5627905080004953,
    "avg_bits_err_improve": 0.7610646335529072,
    "time": 34038.682373046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.310275082294115,
    "avg_bits_err_output": 0.20532312031259015,
    "avg_bits_err_improve": 12.104951961981525,
    "time": 53494.6640625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* s (* 2.0 PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* s (* (* PI (* 6.0 r)) (* s (/ (/ s s) s))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.15304794401725277,
    "avg_bits_err_output": 0.1576592766781482,
    "avg_bits_err_improve": -0.0046113326608954175,
    "time": 44085.327880859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8490767472671129,
    "avg_bits_err_output": 0.839579007344148,
    "avg_bits_err_improve": 0.009497739922964876,
    "time": 54196.4375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 PI) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.7068688293326224,
    "avg_bits_err_output": 0.5313936170314328,
    "avg_bits_err_improve": 0.17547521230118956,
    "time": 76185.95751953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (* (pow (log1p (- u1)) 2.0) (* (pow (log1p (- u1)) 2.0) (/ 1.0 (pow (log1p (- u1)) 2.0)))) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 17,
    "avg_bits_err_input": 13.520307270022995,
    "avg_bits_err_output": 0.5128134917539949,
    "avg_bits_err_improve": 13.007493778269,
    "time": 30244.911376953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (- (+ (cos (* 2.0 (* PI u2))) -1.0) -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 13.570601282770717,
    "avg_bits_err_output": 0.30753558341384385,
    "avg_bits_err_improve": 13.263065699356874,
    "time": 48278.173095703125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.978770255565019,
    "avg_bits_err_output": 0.210625,
    "avg_bits_err_improve": 13.768145255565019,
    "time": 34864.421630859375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.741572865133525,
    "avg_bits_err_output": 0.5040066155204992,
    "avg_bits_err_improve": 12.237566249613026,
    "time": 23306.156982421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1e+155) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (* (- (- l)) (* l (/ (/ PI l) l))))))) (if (<= (* PI l) 2e+147) (- (* PI l) (* (/ 1.0 (* F F)) (tan (+ (* l l) (- (* PI l) (* l l)))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (* (- (- l)) (* l (/ (/ PI l) l)))))))))",
    "output_parens": 43,
    "avg_bits_err_input": 16.591322162193293,
    "avg_bits_err_output": 13.08485320395987,
    "avg_bits_err_improve": 3.506468958233423,
    "time": 30742.71435546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2183977750432873,
    "avg_bits_err_output": 0.21633496250072112,
    "avg_bits_err_improve": 0.0020628125425661836,
    "time": 38175.92041015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= x 12000000.0) (* (- (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B))) (* x (/ 1.0 (tan B)))) (fma (fma (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B)) (* (/ 1.0 (tan B)) (- x))) (/ 1.0 (fma (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B)) (* (/ 1.0 (tan B)) (- x)))) (* (- (/ 1.0 (- (* (/ F (sin B)) (pow (fma F F (fma x 2.0 2.0)) -0.5)) (* x (/ 1.0 (tan B)))))) (fma (- (/ F (sin B))) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B))))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 74,
    "avg_bits_err_input": 13.678654866980793,
    "avg_bits_err_output": 13.225860816539367,
    "avg_bits_err_improve": 0.45279405044142607,
    "time": 51026.928466796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (- (+ (* (/ PI 4.0) f) 1.0) 1.0)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.54165585945417,
    "avg_bits_err_output": 1.8676889245992694,
    "avg_bits_err_improve": 59.673966934854896,
    "time": 55226.400634765625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= l -1e+148) (/ (- (+ 1.0 (* t (sqrt 2.0))) 1.0) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (- (* l (+ (- 1.0 l) (* (/ (+ 1.0 x) (+ -1.0 x)) l))) l)))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (- (* l (/ (+ 1.0 x) (+ x -1.0))) l))))))",
    "output_parens": 38,
    "avg_bits_err_input": 43.32659585248511,
    "avg_bits_err_output": 37.018006080095475,
    "avg_bits_err_improve": 6.308589772389638,
    "time": 35224.559326171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 4.231344212828495,
    "avg_bits_err_output": 0.2201560156295071,
    "avg_bits_err_improve": 4.0111881971989884,
    "time": 36879.854736328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.9556506569647484,
    "avg_bits_err_output": 0.00675,
    "avg_bits_err_improve": 0.9489006569647483,
    "time": 16047.063232421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 9.879134065163266,
    "avg_bits_err_output": 9.879481038585118,
    "avg_bits_err_improve": -0.00034697342185197044,
    "time": 43264.208740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= t -5.5e+50) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0))) (if (<= t -2e-190) (sqrt (* 2.0 (* (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) n))) (if (<= t 8.5e-308) (* (sqrt (- (* n U))) (* (sqrt 2.0) (sqrt (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (if (<= t 1.1e-287) (* (sqrt (- U)) (sqrt (* 2.0 (* n (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om)))))))) (if (<= t 5e-22) (* (sqrt (* n U)) (sqrt (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0)))))))) (if (<= t 9e+146) (sqrt (* 2.0 (* (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) n))) (* (sqrt (* n U)) (sqrt (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0))))))))))))))",
    "output_parens": 118,
    "avg_bits_err_input": 34.715856491886406,
    "avg_bits_err_output": 32.37545468387687,
    "avg_bits_err_improve": 2.3404018080095383,
    "time": 45247.50341796875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (if (<= t 1.9e-104) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k))))))))",
    "output_parens": 53,
    "avg_bits_err_input": 47.454367195334584,
    "avg_bits_err_output": 35.67659265862316,
    "avg_bits_err_improve": 11.777774536711426,
    "time": 59211.0146484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+244) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k)))) (/ 2.0 (* (fma (tan k) (/ (* (+ (/ (pow t 3.0) (* l l)) 1.0) (sin k)) (tan k)) (sin (- k))) (* (tan k) (+ 2.0 (pow (/ k t) 2.0))))))",
    "output_parens": 46,
    "avg_bits_err_input": 32.29597966000656,
    "avg_bits_err_output": 30.299081122499572,
    "avg_bits_err_improve": 1.9968985375069863,
    "time": 32409.50830078125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (fma a2 a2 (* a1 a1)) (/ (cos th) (sqrt 2.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5231174843993409,
    "avg_bits_err_output": 0.5225018828363902,
    "avg_bits_err_improve": 0.0006156015629507072,
    "time": 47871.734375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (sqrt (/ 1.0 k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.4621902415054958,
    "avg_bits_err_output": 0.4429088889410305,
    "avg_bits_err_improve": 0.019281352564465337,
    "time": 49924.7197265625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- (exp l) (exp (- l))) (* J (* J (/ (cos (/ K 2.0)) J)))) U)",
    "output_parens": 11,
    "avg_bits_err_input": 17.13823190441733,
    "avg_bits_err_output": 17.138989927061772,
    "avg_bits_err_improve": -0.0007580226444403593,
    "time": 40930.927001953125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 0.96) (* (- (+ (cos (- (/ (- (* K (+ (+ 2.0 (+ n m)) -1.0)) K) 2.0) M)) 1.0) 1.0) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ n m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 59,
    "avg_bits_err_input": 15.457810561855487,
    "avg_bits_err_output": 10.119777760975316,
    "avg_bits_err_improve": 5.338032800880171,
    "time": 25822.451416015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.109875,
    "avg_bits_err_output": 18.109875,
    "avg_bits_err_improve": 0,
    "time": 42042.004638671875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 1e-225) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))) (if (<= (pow (/ (* M D) (* 2.0 d)) 2.0) 2e+292) (* w0 (sqrt (- 1.0 (- (+ (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)) 1.0) 1.0)))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 14.03672484659555,
    "avg_bits_err_output": 10.063797828809879,
    "avg_bits_err_improve": 3.972927017785672,
    "time": 30135.70458984375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 20.075743097737565,
    "avg_bits_err_output": 20.075743097737565,
    "avg_bits_err_improve": 0,
    "time": 29581.096435546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(/ (* (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* D h)))) 2.0) (* M M)))) (/ c0 (+ w w))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 59.4890401168143,
    "avg_bits_err_output": 56.22910387750301,
    "avg_bits_err_improve": 3.259936239311294,
    "time": 43760.528076171875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) INFINITY) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0)))))))",
    "output_parens": 49,
    "avg_bits_err_input": 26.57517247183802,
    "avg_bits_err_output": 23.980767881507855,
    "avg_bits_err_improve": 2.5944045903301642,
    "time": 90085.94946289062,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- (+ (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0) (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (- (+ 1.0 (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0)) 1.0))",
    "output_parens": 21,
    "avg_bits_err_input": 15.268472142618139,
    "avg_bits_err_output": 14.808595339638133,
    "avg_bits_err_improve": 0.45987680298000555,
    "time": 88054.43798828125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9855212406251803,
    "avg_bits_err_output": 0.010323120312590145,
    "avg_bits_err_improve": 0.9751981203125901,
    "time": 11608.237060546875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* (* v v) 5.0)) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42904849037918835,
    "avg_bits_err_output": 0.3628900309985991,
    "avg_bits_err_improve": 0.06615845938058923,
    "time": 36104.154541015625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010948120312590145,
    "avg_bits_err_output": 0.010948120312590145,
    "avg_bits_err_improve": 0,
    "time": 7251.964111328125,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5439001819329498,
    "avg_bits_err_output": 0.5439001819329498,
    "avg_bits_err_improve": 0,
    "time": 12530.433349609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9259301046592883,
    "avg_bits_err_output": 1.9084819843466982,
    "avg_bits_err_improve": 0.01744812031259002,
    "time": 9200.010498046875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.018231961784336958,
    "avg_bits_err_output": 0.018231961784336958,
    "avg_bits_err_improve": 0,
    "time": 6208.53271484375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (+ (pow a 4.0) (fma b (* b (fma b b (* a a))) (* a (* a (* b b))))) (* 4.0 (* b b))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.19278029524739168,
    "avg_bits_err_output": 0.06265980618227755,
    "avg_bits_err_improve": 0.13012048906511414,
    "time": 18016.708740234375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* 4.0 (* a (* a a))) (+ (fma b (* b (- 4.0 (* a 12.0))) (pow (fma b b (* a a)) 2.0)) (* a (* a 4.0)))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1859979328161958,
    "avg_bits_err_output": 0.1864725635909671,
    "avg_bits_err_improve": -0.0004746307747712786,
    "time": 31130.55224609375,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (- a (* a a))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19748326282425066,
    "avg_bits_err_output": 0.19758218949652429,
    "avg_bits_err_improve": -9.892667227362484e-05,
    "time": 24674.652587890625,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(+ (+ (sqrt (+ (* (/ x (sqrt (fma 4.0 (* p p) (* x x)))) 0.5) 0.5)) -1.0) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 13.033998074617855,
    "avg_bits_err_output": 13.034376220529754,
    "avg_bits_err_improve": -0.00037814591189899716,
    "time": 16020.107421875,
    "seed": 12,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.25816847325312,
    "avg_bits_err_output": 0.04775,
    "avg_bits_err_improve": 41.21041847325312,
    "time": 5890.010986328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (fma x (* x (/ 1.0 x)) (sin (- x))) (+ (+ (- x (tan x)) (fma (- (* (tan x) (/ 1.0 (tan x)))) (tan x) (tan x))) (fma (- (* (tan x) (/ 1.0 (tan x)))) (tan x) (tan x))))",
    "output_parens": 26,
    "avg_bits_err_input": 31.461052173174245,
    "avg_bits_err_output": 26.944056388207763,
    "avg_bits_err_improve": 4.516995784966483,
    "time": 31810.389892578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.31137639132593,
    "avg_bits_err_output": 34.31137639132593,
    "avg_bits_err_improve": 0,
    "time": 23502.488525390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma c (- a) (fma b_2 b_2 (fma (- c) a (* a c)))))) a)",
    "output_parens": 10,
    "avg_bits_err_input": 33.67612592308911,
    "avg_bits_err_output": 33.68484528402688,
    "avg_bits_err_improve": -0.008719360937767817,
    "time": 26073.09912109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp 1.0))) (exp -1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.736452024498952,
    "avg_bits_err_output": 31.398972981102485,
    "avg_bits_err_improve": 0.33747904339646695,
    "time": 25950.5859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (exp (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 7,
    "avg_bits_err_input": 33.29715031191236,
    "avg_bits_err_output": 32.93585253400551,
    "avg_bits_err_improve": 0.3612977779068487,
    "time": 73005.62817382812,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 28.969261763196297,
    "avg_bits_err_output": 0.00775,
    "avg_bits_err_improve": 28.961511763196295,
    "time": 8920.606201171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (* (/ 1.0 x) (* (- (* -1.0 (- (- -1.0 (- (/ 1.0 x) (/ (/ 1.0 x) (/ 1.0 x)))) (/ 0.0 (/ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 x) (/ 1.0 (/ 1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x)))",
    "output_parens": 24,
    "avg_bits_err_input": 14.50278024762384,
    "avg_bits_err_output": 0.7381602119644953,
    "avg_bits_err_improve": 13.764620035659345,
    "time": 106017.8251953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.86815598606264,
    "avg_bits_err_output": 6.187146787708759,
    "avg_bits_err_improve": 33.68100919835388,
    "time": 32746.3056640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (fma (cbrt (+ x 1.0)) (* (cbrt (+ x 1.0)) (/ 1.0 (cbrt (+ x 1.0)))) (- -1.0 (cbrt x))))",
    "output_parens": 12,
    "avg_bits_err_input": 29.348605674942352,
    "avg_bits_err_output": 29.118929673060617,
    "avg_bits_err_improve": 0.2296760018817352,
    "time": 34372.23828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.28445121235955,
    "avg_bits_err_output": 30.28802647362611,
    "avg_bits_err_improve": -0.0035752612665618244,
    "time": 33707.145263671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(if (<= b -1.35e+154) (/ (- (+ (- 1.0 b) (log (pow (exp (pow (fma b b (* -4.0 (* a c))) 0.75)) (sqrt (/ 1.0 (sqrt (fma b b (* -4.0 (* a c))))))))) 1.0) (* a 2.0)) (/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a)))",
    "output_parens": 29,
    "avg_bits_err_input": 33.95559404567842,
    "avg_bits_err_output": 32.700363180827566,
    "avg_bits_err_improve": 1.2552308648508514,
    "time": 47336.8232421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (fma (- (sqrt (fma a (* c -4.0) (* b b)))) (* (/ 1.0 (fma a (* c -4.0) (* b b))) (* a (* c -4.0))) (+ (sqrt (fma a (* c -4.0) (* b b))) (* (sqrt (fma c (* a -4.0) (* b b))) (* (/ 1.0 (fma c (* a -4.0) (* b b))) (- (* b b)))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (+ a a))",
    "output_parens": 39,
    "avg_bits_err_input": 33.66758794091285,
    "avg_bits_err_output": 33.48087821828411,
    "avg_bits_err_improve": 0.1867097226287413,
    "time": 42932.954833984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(log1p (expm1 (/ (log1p (- x)) (log1p x))))",
    "output_parens": 6,
    "avg_bits_err_input": 61.270619768826684,
    "avg_bits_err_output": 0.03277857187842551,
    "avg_bits_err_improve": 61.23784119694826,
    "time": 19657.188720703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log (+ n 1.0)) (+ (- -1.0 (* n (log n))) (* n (log (+ n 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 62.99302958475544,
    "avg_bits_err_output": 0.608,
    "avg_bits_err_improve": 62.38502958475544,
    "time": 29185.64794921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (* (* (/ (- 1.0 eps) (- eps -1.0)) (exp -1.0)) (exp 1.0)))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 58.74642241238647,
    "avg_bits_err_output": 58.76050871625847,
    "avg_bits_err_improve": -0.014086303871998496,
    "time": 78305.8720703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- 1.0 (* (/ 1.0 (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x)))) (expm1 (log1p (pow (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x))) 2.0)))))",
    "output_parens": 16,
    "avg_bits_err_input": 59.8838557877573,
    "avg_bits_err_output": 59.883957185315296,
    "avg_bits_err_improve": -0.00010139755799798422,
    "time": 72674.73217773438,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps 2.9e-298) (/ (* (* eps (expm1 (* eps (+ a b)))) (* (/ (expm1 (* eps (+ a b))) eps) (/ 1.0 (/ (expm1 (* eps (+ a b))) eps)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps 6.5e-74) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps a))) (expm1 (* eps b)))) (/ (fma (* eps (/ (expm1 (* eps (+ a b))) eps)) eps 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 52,
    "avg_bits_err_input": 60.345378136483426,
    "avg_bits_err_output": 41.24797887511613,
    "avg_bits_err_improve": 19.097399261367293,
    "time": 48792.92822265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.57759652460927,
    "avg_bits_err_output": 0.1281135074337185,
    "avg_bits_err_improve": 41.44948301717555,
    "time": 30585.576416015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64956406296297,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.648939062962974,
    "time": 4118.80078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.190555501613225,
    "avg_bits_err_output": 0.021933307961146224,
    "avg_bits_err_improve": 29.16862219365208,
    "time": 25519.5283203125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (log1p (expm1 (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.97122092094942,
    "avg_bits_err_output": 29.229350150023993,
    "avg_bits_err_improve": 0.7418707709254271,
    "time": 40696.670166015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.863463027586418,
    "avg_bits_err_output": 9.863463027586418,
    "avg_bits_err_improve": 0,
    "time": 50855.370849609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.57062617300174,
    "avg_bits_err_output": 36.57062617300174,
    "avg_bits_err_improve": 0,
    "time": 41524.89892578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (fma (sqrt x) (* (sqrt x) (/ 1.0 (sqrt x))) (- 1.0 (sqrt (+ x 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 29.19445551519674,
    "avg_bits_err_output": 28.53871327917391,
    "avg_bits_err_improve": 0.6557422360228315,
    "time": 39012.19580078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.310897933782066,
    "avg_bits_err_output": 0.4079334717491159,
    "avg_bits_err_improve": 36.90296446203295,
    "time": 26490.538818359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.190462941858282,
    "avg_bits_err_output": 20.05089008409453,
    "avg_bits_err_improve": 0.13957285776375272,
    "time": 20707.634765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(* (- (atan (+ N 1.0)) (atan N)) (log (pow (exp (- (atan (+ N 1.0)) (atan N))) (expm1 (log1p (exp (- (log (- (atan (- N -1.0)) (atan N))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 15.352790914590928,
    "avg_bits_err_output": 15.36190756804705,
    "avg_bits_err_improve": -0.009116653456121782,
    "time": 67716.48120117188,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.13578993921866,
    "avg_bits_err_output": 1.2873016390653997,
    "avg_bits_err_improve": 27.84848830015326,
    "time": 33483.27197265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07544116562662259,
    "avg_bits_err_output": 0.07544116562662259,
    "avg_bits_err_improve": 0,
    "time": 41022.822509765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.44636450593131,
    "avg_bits_err_output": 0.30952161719245797,
    "avg_bits_err_improve": 16.13684288873885,
    "time": 21925.91552734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (* PI (/ (/ angle 180.0) PI)) PI 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.76230206679157,
    "avg_bits_err_output": 20.765633921817496,
    "avg_bits_err_improve": -0.0033318550259267,
    "time": 43990.369873046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log (+ 1.0 (expm1 (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 31.402692556196307,
    "avg_bits_err_output": 31.384882921009126,
    "avg_bits_err_improve": 0.017809635187180817,
    "time": 43488.662109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (- (* (cos (fma (/ angle 180.0) PI 1.0)) (cos 1.0)) (* (sin (fma (/ angle 180.0) PI 1.0)) (sin -1.0)))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 21.01613996667177,
    "avg_bits_err_output": 21.03430668510584,
    "avg_bits_err_improve": -0.01816671843407036,
    "time": 94892.22607421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1709080828133113,
    "avg_bits_err_output": 0.17239868437626202,
    "avg_bits_err_improve": -0.0014906015629507219,
    "time": 32826.00341796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3192409679578293,
    "avg_bits_err_output": 0.3159762357599503,
    "avg_bits_err_improve": 0.0032647321978789834,
    "time": 65356.427490234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13709436093777044,
    "avg_bits_err_output": 0.13709436093777044,
    "avg_bits_err_improve": 0,
    "time": 30747.806396484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (log1p (expm1 (* (sin phi1) (sin phi2)))) (* (* (cos (- lambda1 lambda2)) (cos phi1)) (cos phi2)))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 17.26532266119347,
    "avg_bits_err_output": 17.268764736466167,
    "avg_bits_err_improve": -0.0034420752726980197,
    "time": 39528.392578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.29929976882252,
    "avg_bits_err_output": 45.84517448337175,
    "avg_bits_err_improve": 6.454125285450772,
    "time": 25510.708984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.574083879377984,
    "avg_bits_err_output": 27.805833322049146,
    "avg_bits_err_improve": 0.7682505573288374,
    "time": 24621.971923828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.86897274401046,
    "avg_bits_err_output": 39.47259882754951,
    "avg_bits_err_improve": 4.396373916460952,
    "time": 24224.87060546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (fma a (* c (* -4.0 (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))) (* b (* b (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 33.9597819943698,
    "avg_bits_err_output": 33.028546183361605,
    "avg_bits_err_improve": 0.9312358110081931,
    "time": 44163.61572265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (* (cos phi2) (/ (cos (- lambda1 lambda2)) (cos phi2))) (cos phi2) (cos phi1))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9338465601211272,
    "avg_bits_err_output": 0.9418912005561548,
    "avg_bits_err_improve": -0.008044640435027617,
    "time": 38781.653076171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 28.86677195124757,
    "avg_bits_err_output": 28.864095658743757,
    "avg_bits_err_improve": 0.0026762925038141816,
    "time": 8445.489990234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.21967768377833,
    "avg_bits_err_output": 1.3600849625007212,
    "avg_bits_err_improve": 56.85959272127761,
    "time": 7102.72412109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.86675641053981,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 57.858756410539804,
    "time": 6627.319091796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010865601562950722,
    "avg_bits_err_output": 0.010865601562950722,
    "avg_bits_err_improve": 0,
    "time": 3087.380126953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.50683755496477,
    "avg_bits_err_output": 32.50683755496477,
    "avg_bits_err_improve": 0,
    "time": 7819.71484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (* (log (/ (+ 1.0 x) (- 1.0 x))) (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (fma (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (log1p (expm1 (/ 0.5 (+ 1.0 (log (/ (- x -1.0) (- 1.0 x))))))) -0.5))",
    "output_parens": 31,
    "avg_bits_err_input": 58.73486940753129,
    "avg_bits_err_output": 58.76118164108617,
    "avg_bits_err_improve": -0.026312233554875775,
    "time": 58408.339111328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.098125,
    "avg_bits_err_output": 0.098125,
    "avg_bits_err_improve": 0,
    "time": 4569.851806640625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (log (exp (cos (atan (/ (/ eh ew) (tan t)))))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.130375,
    "avg_bits_err_output": 0.13204248125036055,
    "avg_bits_err_improve": -0.001667481250360564,
    "time": 66857.53979492188,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (- (+ (cos (atan (/ (* eh (- (tan t))) ew))) 1.0) 1.0) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.12843872187554087,
    "avg_bits_err_improve": -0.0022924812503605785,
    "time": 31985,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.78113974327733,
    "avg_bits_err_output": 3.76039455618086,
    "avg_bits_err_improve": 35.020745187096466,
    "time": 72461.58276367188,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (+ (/ (- (* a a) (* b b)) (* a a)) 1.0) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.835913914949252,
    "avg_bits_err_output": 14.83784076029047,
    "avg_bits_err_improve": -0.0019268453412184527,
    "time": 5142.2255859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin delta) (sin theta)) (+ (+ (cos phi1) 1.0) -1.0)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.1495530779968154,
    "avg_bits_err_output": 0.1554808698880263,
    "avg_bits_err_improve": -0.005927791891210926,
    "time": 38764.231689453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.33902114744207,
    "avg_bits_err_output": 45.92612863625678,
    "avg_bits_err_improve": 6.412892511185291,
    "time": 32167.62939453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (- (* b (/ 1.0 (sqrt (fma b b (* c (* a -3.0)))))) (/ b b)) b (* (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) (* c (* a -3.0)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.737962075875984,
    "avg_bits_err_output": 27.884255115491158,
    "avg_bits_err_improve": 0.8537069603848266,
    "time": 31766.3427734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-20) (/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma b b (* c (* a -3.0))) (- (exp (log1p (/ 1.0 (fma c (* a -3.0) (* b b))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 38,
    "avg_bits_err_input": 43.860597649161285,
    "avg_bits_err_output": 42.44158329186121,
    "avg_bits_err_improve": 1.4190143573000782,
    "time": 23942.699462890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b -1.35e+154) (/ (- (expm1 (log1p (* 1.0 (log (pow (exp (fma c (* a -3.0) (* b b))) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b))))))))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)))",
    "output_parens": 28,
    "avg_bits_err_input": 34.005469977839034,
    "avg_bits_err_output": 32.65870859300463,
    "avg_bits_err_improve": 1.3467613848344016,
    "time": 44461.072509765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (/ (* (cos (- lambda1 lambda2)) (cos phi2)) (sin phi1))) (sin phi1))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.731879525442293,
    "avg_bits_err_output": 13.740340185655894,
    "avg_bits_err_improve": -0.00846066021360059,
    "time": 52974.910888671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (log (* (exp (/ x (+ 1.0 x))) (* (exp (/ x (+ 1.0 x))) (/ (/ (exp (/ x (+ 1.0 x))) (exp (/ x (+ 1.0 x)))) (exp (/ x (+ 1.0 x))))))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 24,
    "avg_bits_err_input": 29.29014617868307,
    "avg_bits_err_output": 29.29890889045511,
    "avg_bits_err_improve": -0.008762711772039466,
    "time": 33278.67138671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.010823120312590145,
    "avg_bits_err_output": 0.010823120312590145,
    "avg_bits_err_improve": 0,
    "time": 4540.17919921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.879906971499576,
    "avg_bits_err_output": 14.879906971499576,
    "avg_bits_err_improve": 0,
    "time": 51831.458984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt F) (sqrt (* (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))) -1.0))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 52,
    "avg_bits_err_input": 52.55267109565867,
    "avg_bits_err_output": 47.47955615855357,
    "avg_bits_err_improve": 5.073114937105096,
    "time": 53196.974365234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.518849631088848,
    "avg_bits_err_output": 29.518849631088848,
    "avg_bits_err_improve": 0,
    "time": 47454.388916015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- F)) (* (sqrt (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ C A))) (sqrt (- (* C (* A 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.65280475486105,
    "avg_bits_err_output": 47.54412607789522,
    "avg_bits_err_improve": 5.10867867696583,
    "time": 50648.062255859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.675261129035539,
    "avg_bits_err_output": 15.675261129035539,
    "avg_bits_err_improve": 0,
    "time": 47163.6162109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) INFINITY) (* (cbrt (* (/ 1.0 (+ a a)) (* (/ 1.0 (+ a a)) (/ 1.0 (/ 1.0 (+ a a)))))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (exp (+ (log (sqrt (- g h))) (log (sqrt (+ g h))))))) (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) (- g))))))",
    "output_parens": 71,
    "avg_bits_err_input": 36.258130008360105,
    "avg_bits_err_output": 25.915986958019683,
    "avg_bits_err_improve": 10.342143050340422,
    "time": 69560.70336914062,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (- (* (cos (/ (* 2.0 PI) 3.0)) (cos (/ (acos (/ (- g) h)) 3.0))) (* (sin (expm1 (log1p (/ (* 2.0 PI) 3.0)))) (sin (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.9892859031316716,
    "avg_bits_err_output": 0.019094360937770435,
    "avg_bits_err_improve": 0.9701915421939012,
    "time": 18366.475341796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7728231203125902,
    "avg_bits_err_output": 0.7728231203125902,
    "avg_bits_err_improve": 0,
    "time": 3358.42626953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.033263149210494,
    "avg_bits_err_output": 11.033263149210494,
    "avg_bits_err_improve": 0,
    "time": 32377.443115234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5711422606473945,
    "avg_bits_err_output": 0.488,
    "avg_bits_err_improve": 0.0831422606473945,
    "time": 9659.697265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.001803818880376,
    "avg_bits_err_output": 15.921113571121506,
    "avg_bits_err_improve": 37.08069024775887,
    "time": 28021.09130859375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.71631120409847,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.71631120409847,
    "time": 3055.125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.01425,
    "avg_bits_err_output": 0.01502124062518029,
    "avg_bits_err_improve": -0.0007712406251802889,
    "time": 18067.39794921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1236.861328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+72) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* w r)))) (- 1.0 v))) (if (<= r 1e-57) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (- 0.375 (* v 0.25)) (* r (* r w)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* w r)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.234242980792,
    "avg_bits_err_output": 7.029896617192449,
    "avg_bits_err_improve": 6.2043463635995515,
    "time": 42250.228271484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (* x1 x1) -6.0) (+ (* (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0) (* x1 (* 2.0 (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0))))) (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5027885008178629,
    "avg_bits_err_output": 0.2673377687198565,
    "avg_bits_err_improve": 0.23545073209800638,
    "time": 72730.89819335938,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.37980176535948,
    "avg_bits_err_output": 18.37980176535948,
    "avg_bits_err_improve": 0,
    "time": 15906.694580078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2082830828133113,
    "avg_bits_err_output": 0.196511842188131,
    "avg_bits_err_improve": 0.011771240625180285,
    "time": 20136.98046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2978.0888671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.499340347252387,
    "avg_bits_err_output": 9.762797866001991,
    "avg_bits_err_improve": 4.736542481250396,
    "time": 45937.536865234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (- (fma eps x x))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.538187497987234,
    "avg_bits_err_output": 0.9403223041411886,
    "avg_bits_err_improve": 28.597865193846047,
    "time": 33652.831298828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (expm1 (log1p (/ 1.0 (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.042,
    "avg_bits_err_output": 0.04671936093777043,
    "avg_bits_err_improve": -0.00471936093777043,
    "time": 19343.902099609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.05,
    "avg_bits_err_output": 0.05,
    "avg_bits_err_improve": 0,
    "time": 38006.879638671875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.025875,
    "avg_bits_err_output": 0.025875,
    "avg_bits_err_improve": 0,
    "time": 21555.7666015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3828.634033203125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3235.845458984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4031.2529296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.825802818610342,
    "avg_bits_err_output": 0.242625,
    "avg_bits_err_improve": 7.583177818610341,
    "time": 46513.049072265625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.313456544664289,
    "avg_bits_err_output": 7.313456544664289,
    "avg_bits_err_improve": 0,
    "time": 28456.63623046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.09118304571128,
    "avg_bits_err_output": 0.0125,
    "avg_bits_err_improve": 16.07868304571128,
    "time": 13351.77587890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (pow (exp x) 10.0) x) (- (+ 1.0 (cos x)) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 3.556954082220967,
    "avg_bits_err_output": 2.089379878887718,
    "avg_bits_err_improve": 1.4675742033332493,
    "time": 51239.39794921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.7099627821281,
    "avg_bits_err_output": 14.7099627821281,
    "avg_bits_err_improve": 0,
    "time": 36478.2236328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.3977754163026,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.3977754163026,
    "time": 5820.71240234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.535438043916855,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 39.534563043916854,
    "time": 3804.752685546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29775,
    "avg_bits_err_improve": 63.70225,
    "time": 3981.27978515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325919191947,
    "avg_bits_err_output": 0.39245789531691705,
    "avg_bits_err_improve": 61.450801296602556,
    "time": 22578.038818359375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (fma (- (sqrt (fma a (* c -4.0) (* b b)))) (* (/ 1.0 (fma a (* c -4.0) (* b b))) (* a (* c -4.0))) (+ (sqrt (fma a (* c -4.0) (* b b))) (* (sqrt (fma c (* a -4.0) (* b b))) (* (/ 1.0 (fma c (* a -4.0) (* b b))) (- (* b b)))))) (- (- b) (sqrt (fma a (* c -4.0) (* b b))))) (+ a a))",
    "output_parens": 39,
    "avg_bits_err_input": 33.66758794091285,
    "avg_bits_err_output": 33.48087821828411,
    "avg_bits_err_improve": 0.1867097226287413,
    "time": 47784.87158203125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (fma a (* c (* -4.0 (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))) (* b (* b (sqrt (/ 1.0 (fma b b (* -4.0 (* a c))))))))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 33.9597819943698,
    "avg_bits_err_output": 33.028546183361605,
    "avg_bits_err_improve": 0.9312358110081931,
    "time": 44016.70654296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3047.97607421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(expm1 (log1p (/ (expm1 x) x)))",
    "output_parens": 4,
    "avg_bits_err_input": 39.2457102326979,
    "avg_bits_err_output": 0.022166488038034567,
    "avg_bits_err_improve": 39.22354374465987,
    "time": 7286.1689453125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.59203578829052,
    "avg_bits_err_output": 20.59203578829052,
    "avg_bits_err_improve": 0,
    "time": 2678.256591796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.645317901549117,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.645317901549117,
    "time": 5070.673583984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03775,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.036375,
    "time": 5714.50341796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019969360937770436,
    "avg_bits_err_output": 0.00975,
    "avg_bits_err_improve": 0.010219360937770436,
    "time": 4455.827392578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.014875,
    "avg_bits_err_improve": 0,
    "time": 4742.843994140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000125,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 0,
    "time": 1638.724609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ a (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3994178578176384,
    "avg_bits_err_output": 0.234,
    "avg_bits_err_improve": 0.16541785781763838,
    "time": 9768.990478515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (- (+ (log1p (- (cos x))) -1.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 30.245784507366725,
    "avg_bits_err_output": 30.245784638837872,
    "avg_bits_err_improve": -1.3147114685807537e-07,
    "time": 25607.360595703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- (* (/ 1.0 (sqrt (- (* x x) eps))) eps) (- (* (* x x) (/ 1.0 (sqrt (- (* x x) eps)))) x))",
    "output_parens": 13,
    "avg_bits_err_input": 24.74729623413098,
    "avg_bits_err_output": 22.666773639043562,
    "avg_bits_err_improve": 2.0805225950874195,
    "time": 23621.677001953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (/ 1.0 (sin x)) (* (+ 1.0 (* (sin x) (/ -1.0 (sin x)))) (pow (sin x) 2.0)))) (tan x))",
    "output_parens": 16,
    "avg_bits_err_input": 29.94598572055244,
    "avg_bits_err_output": 29.99023009538108,
    "avg_bits_err_improve": -0.044244374828640076,
    "time": 43720.056396484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007073120312590144,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.006698120312590144,
    "time": 3758.890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-303) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 4e-15) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.892560485256006,
    "avg_bits_err_output": 11.57126412536046,
    "avg_bits_err_improve": 36.32129635989555,
    "time": 45517.760009765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.12211874181536,
    "avg_bits_err_output": 26.12211874181536,
    "avg_bits_err_improve": 0,
    "time": 25821.993896484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.308678419576303,
    "avg_bits_err_output": 26.308480299263714,
    "avg_bits_err_improve": 0.00019812031258936713,
    "time": 19990.225341796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(+ (- 1.0 ux) (* ux maxCos))",
    "output_parens": 3,
    "avg_bits_err_input": 0.034,
    "avg_bits_err_output": 0.034,
    "avg_bits_err_improve": 0,
    "time": 26725.30078125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (* ux (+ (* ux (+ maxCos -1.0)) (- (/ ux ux) (fma (fma ux maxCos 1.0) (+ maxCos -1.0) maxCos))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.438470364147909,
    "avg_bits_err_output": 0.5446025232555498,
    "avg_bits_err_improve": 12.893867840892359,
    "time": 34935.736083984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (fma ux (- (fma (fma ux maxCos 1.0) (+ maxCos -1.0) maxCos)) (* ux (+ 1.0 (- (* ux maxCos) ux))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.469913441361573,
    "avg_bits_err_output": 0.33626069171550416,
    "avg_bits_err_improve": 13.13365274964607,
    "time": 41255.496826171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* (+ 1.0 (- (+ uy uy) 1.0)) (* (+ uy uy) (/ PI (+ uy uy))))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.33065003407957066,
    "avg_bits_err_output": 0.3291592243802895,
    "avg_bits_err_improve": 0.0014908096992811704,
    "time": 99184.67724609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (log (exp (cos (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.20943728552988009,
    "avg_bits_err_output": 0.2102563767133046,
    "avg_bits_err_improve": -0.0008190911834245196,
    "time": 46867.156494140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5440503140067406,
    "avg_bits_err_output": 0.5440503140067406,
    "avg_bits_err_improve": 0,
    "time": 44166.11279296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.33463633674053544,
    "avg_bits_err_output": 0.33463633674053544,
    "avg_bits_err_improve": 0,
    "time": 48838.619384765625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (log (/ 1.0 (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3268509457247941,
    "avg_bits_err_output": 0.33029918893587046,
    "avg_bits_err_improve": -0.0034482432110763406,
    "time": 42251.557861328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.05719053371969949,
    "avg_bits_err_output": 0.05719053371969949,
    "avg_bits_err_improve": 0,
    "time": 6646.979248046875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (exp (* 2.0 (log1p (exp (/ (- (fabs x)) s)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1363717012863607,
    "avg_bits_err_output": 0.12275461077730201,
    "avg_bits_err_improve": 0.013617090509058682,
    "time": 17835.1083984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (expm1 (log1p (* x PI)))) (expm1 (log1p (* x PI)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.6721000649712545,
    "avg_bits_err_output": 0.6966673807066,
    "avg_bits_err_improve": -0.02456731573534543,
    "time": 24877.684326171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (log (pow (- u (* (exp (/ -2.0 v)) (- u 1.0))) v)) -1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1595977041511719,
    "avg_bits_err_output": 0.17891203752035564,
    "avg_bits_err_improve": -0.019314333369183756,
    "time": 31363.587646484375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.602624512973444,
    "avg_bits_err_output": 2.597886751420056,
    "avg_bits_err_improve": 0.004737761553388342,
    "time": 23690.53515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (fma (sinh (/ 1.0 v)) (* v 2.0) -1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4680016482563398,
    "avg_bits_err_output": 0.4761907771570452,
    "avg_bits_err_improve": -0.008189128900705445,
    "time": 48423.490966796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (fma (/ 1.0 (+ v v)) (* (+ v v) (* (+ 1.0 (+ v v)) (/ (/ 1.0 (+ v v)) (/ 1.0 (+ v v))))) -1.0) (* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) 1.0))))",
    "output_parens": 30,
    "avg_bits_err_input": 0.13372623535774267,
    "avg_bits_err_output": 0.12748991268528578,
    "avg_bits_err_improve": 0.006236322672456884,
    "time": 42736.967041015625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (log (pow alpha (* PI 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.47169524392017503,
    "avg_bits_err_output": 0.4223964605487255,
    "avg_bits_err_improve": 0.04929878337144955,
    "time": 31086.126220703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 (- (log1p (- (/ (+ u -0.25) 0.75))))) s)",
    "output_parens": 7,
    "avg_bits_err_input": 1.313558536097618,
    "avg_bits_err_output": 0.5446586204451775,
    "avg_bits_err_improve": 0.7688999156524405,
    "time": 35837.112060546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.496819115533375,
    "avg_bits_err_output": 0.201375,
    "avg_bits_err_improve": 12.295444115533375,
    "time": 60261.969482421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* PI (* 6.0 (* r s)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1393646669422509,
    "avg_bits_err_output": 0.14784420025702005,
    "avg_bits_err_improve": -0.008479533314769166,
    "time": 95524.8837890625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i (* (+ (sin (* normAngle u)) (* (+ (/ 1.0 (sin normAngle)) -1.0) (sin (* normAngle u)))) n1_i))",
    "output_parens": 17,
    "avg_bits_err_input": 0.8787843934670551,
    "avg_bits_err_output": 0.8712607643183793,
    "avg_bits_err_improve": 0.00752362914867577,
    "time": 51267.83251953125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 PI) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.7050612200225589,
    "avg_bits_err_output": 0.5571628047866775,
    "avg_bits_err_improve": 0.14789841523588143,
    "time": 61730.881591796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (* (sqrt (- (log1p (- u1)))) (* (sqrt (- (log1p (- u1)))) (/ 1.0 (sqrt (- (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 19,
    "avg_bits_err_input": 13.64286270808231,
    "avg_bits_err_output": 0.541989348499005,
    "avg_bits_err_improve": 13.100873359583305,
    "time": 30579.092529296875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.68930644715885,
    "avg_bits_err_output": 0.3139152074442824,
    "avg_bits_err_improve": 13.375391239714569,
    "time": 38969.69287109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.121078724752802,
    "avg_bits_err_output": 0.207125,
    "avg_bits_err_improve": 13.913953724752803,
    "time": 27221.09423828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.559770403455477,
    "avg_bits_err_output": 0.5193448756978591,
    "avg_bits_err_improve": 12.040425527757618,
    "time": 19219.81494140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -7e-151) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (+ (/ PI l) 1.0)) l) 0.0)))) (if (<= F 7.5e-155) (- (* PI l) (log (pow (exp (/ (tan (* PI l)) (/ 1.0 (* F F)))) (pow (/ 1.0 (* F F)) 2.0)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (* l (+ (+ 1.0 (/ PI l)) -1.0)) 0.0))))))",
    "output_parens": 39,
    "avg_bits_err_input": 16.484532653509525,
    "avg_bits_err_output": 4.706298790899548,
    "avg_bits_err_improve": 11.778233862609977,
    "time": 42063.7685546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2216887218755409,
    "avg_bits_err_output": 0.21763684218813104,
    "avg_bits_err_improve": 0.0040518796874098595,
    "time": 26540.89208984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+270) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (* (/ 1.0 (tan B)) (* x (/ (/ x x) x))))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.64980104240478,
    "avg_bits_err_output": 12.119418180344168,
    "avg_bits_err_improve": 1.5303828620606126,
    "time": 44562.510986328125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.462011496647925,
    "avg_bits_err_output": 1.9727431075546953,
    "avg_bits_err_improve": 59.489268389093226,
    "time": 33552.501708984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -2.165e-119) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 3e-159) (/ (fma (* (sqrt 2.0) (/ t (sqrt 2.0))) (sqrt 2.0) 0.0) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (- (+ 1.0 (/ (* t (sqrt 2.0)) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l))))) 1.0)))",
    "output_parens": 58,
    "avg_bits_err_input": 42.925394382291636,
    "avg_bits_err_output": 35.5476818719771,
    "avg_bits_err_improve": 7.377712510314538,
    "time": 35778.359619140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (log1p (expm1 (/ (sin ky) (hypot (sin ky) (sin kx))))) (sin th))",
    "output_parens": 9,
    "avg_bits_err_input": 3.6964799854752193,
    "avg_bits_err_output": 0.2507415582100876,
    "avg_bits_err_improve": 3.4457384272651317,
    "time": 35360.2802734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0654600485173984,
    "avg_bits_err_output": 0.006698120312590144,
    "avg_bits_err_improve": 1.0587619282048082,
    "time": 11693.247802734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159801384007425,
    "avg_bits_err_output": 10.159926384007425,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 173311.38720703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 0.0) (* (* (sqrt (* n (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (sqrt U)) (sqrt 2.0)) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e+146) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0)))))",
    "output_parens": 77,
    "avg_bits_err_input": 34.57310368756563,
    "avg_bits_err_output": 30.001108878004747,
    "avg_bits_err_improve": 4.571994809560881,
    "time": 40965.785400390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -3e+92) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 47.32513768766738,
    "avg_bits_err_output": 36.619695525447526,
    "avg_bits_err_improve": 10.705442162219853,
    "time": 57496.471923828125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 4e+231) (/ 2.0 (fma (* (tan k) (* (/ (pow t 3.0) (* l l)) (+ 2.0 (pow (/ k t) 2.0)))) (sin k) 0.0)) (/ 2.0 (* (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))) (+ 2.0 (pow (/ k t) 2.0)))))",
    "output_parens": 44,
    "avg_bits_err_input": 32.56549354709639,
    "avg_bits_err_output": 30.58674098575968,
    "avg_bits_err_improve": 1.9787525613367087,
    "time": 46125.039794921875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (- (* a2 (* (- (* (/ (cos th) (sqrt 2.0)) (/ a2 a2))) a2))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4966031984601277,
    "avg_bits_err_output": 0.4901338375223576,
    "avg_bits_err_improve": 0.006469360937770063,
    "time": 46591.880615234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (+ n n) (/ (- 1.0 k) 2.0)) (* (/ 1.0 (sqrt k)) (exp (* (/ (- 1.0 k) 2.0) (log PI)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5202207130428028,
    "avg_bits_err_output": 0.5038361534630074,
    "avg_bits_err_improve": 0.016384559579795455,
    "time": 36711.340576171875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp l)) (- J) (* (exp l) (- J))) (fma (exp l) J (* (- J) (exp (- l))))) (cos (/ K 2.0))) U)",
    "output_parens": 18,
    "avg_bits_err_input": 17.5399525058927,
    "avg_bits_err_output": 17.544827435281267,
    "avg_bits_err_improve": -0.00487492938856704,
    "time": 46288.311767578125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(log (pow (exp (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (cos (- (/ (* K (+ m n)) 2.0) M))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.777861285819132,
    "avg_bits_err_output": 1.1476061999949496,
    "avg_bits_err_improve": 13.630255085824182,
    "time": 53297.739990234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.513615601562954,
    "avg_bits_err_output": 18.513615601562954,
    "avg_bits_err_improve": 0,
    "time": 39625.39599609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))) (if (<= (/ h l) -2.6e-250) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.833042091093368,
    "avg_bits_err_output": 9.245193009211123,
    "avg_bits_err_improve": 4.587849081882245,
    "time": 21117.535400390625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.087414540911038,
    "avg_bits_err_output": 19.087414540911038,
    "avg_bits_err_improve": 0,
    "time": 28033.9033203125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) (* (/ (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (sqrt (- (* (/ (* d (* d c0)) (* D (* h (* w D)))) (/ (* d (* d c0)) (* D (* h (* w D))))) (* M M))))))",
    "output_parens": 42,
    "avg_bits_err_input": 59.588639698190775,
    "avg_bits_err_output": 56.27994232030792,
    "avg_bits_err_improve": 3.308697377882858,
    "time": 39775.90185546875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 4e+291) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0))",
    "output_parens": 46,
    "avg_bits_err_input": 25.877465678062265,
    "avg_bits_err_output": 24.511774632119412,
    "avg_bits_err_improve": 1.365691045942853,
    "time": 49657.891357421875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.425813022918906,
    "avg_bits_err_output": 15.425813022918906,
    "avg_bits_err_improve": 0,
    "time": 15741.654052734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9855943609377705,
    "avg_bits_err_output": 0.010323120312590145,
    "avg_bits_err_improve": 0.9752712406251803,
    "time": 9795.503662109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* 6.0 v)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.43574238835900414,
    "avg_bits_err_output": 0.3623100518562542,
    "avg_bits_err_improve": 0.07343233650274994,
    "time": 28214.3720703125,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.010344360937770435,
    "avg_bits_err_output": 0.009719360937770434,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 4570.081787109375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (- (+ 1.0 (/ (- 1.0 (* 5.0 (* v v))) (fma v v -1.0))) 1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5108302076528658,
    "avg_bits_err_output": 0.510789966641005,
    "avg_bits_err_improve": 4.024101186084206e-05,
    "time": 14069.6494140625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.2294409504701145,
    "avg_bits_err_output": 2.2294409504701145,
    "avg_bits_err_improve": 0,
    "time": 12178.98583984375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (- (+ (/ (+ Vef (+ EAccept (- Ev mu))) KbT) 1.0) 1.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.025436822098208918,
    "avg_bits_err_output": 0.025113701785618774,
    "avg_bits_err_improve": 0.0003231203125901444,
    "time": 8903.052978515625,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18291973225554356,
    "avg_bits_err_output": 0.18420545156583526,
    "avg_bits_err_improve": -0.0012857193102916997,
    "time": 21662.450927734375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma (* b b) (* a a) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1823065744436745,
    "avg_bits_err_output": 0.07870488225265898,
    "avg_bits_err_improve": 0.10360169219101553,
    "time": 27603.558349609375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma b b (* a a)) b)) (fma b (* b (* a a)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.19048803207133594,
    "avg_bits_err_output": 0.08343597932923065,
    "avg_bits_err_improve": 0.10705205274210529,
    "time": 28714.96240234375,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.609559969502971,
    "avg_bits_err_output": 13.609559969502971,
    "avg_bits_err_improve": 0,
    "time": 20352.90966796875,
    "seed": 13,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.77464088323663,
    "avg_bits_err_output": 0.055875,
    "avg_bits_err_improve": 40.71876588323663,
    "time": 12861.452880859375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.428593048015863,
    "avg_bits_err_output": 29.845405198181307,
    "avg_bits_err_improve": 1.5831878498345553,
    "time": 59087.239501953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 34.058381366922966,
    "avg_bits_err_output": 34.058381366922966,
    "avg_bits_err_improve": 0,
    "time": 19170.910400390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.03008086100492,
    "avg_bits_err_output": 34.03008086100492,
    "avg_bits_err_improve": 0,
    "time": 28685.308349609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (log1p (/ (exp (log1p (- (cos x)))) (* x x))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.90666563524404,
    "avg_bits_err_output": 30.912032781404335,
    "avg_bits_err_improve": -0.005367146160295988,
    "time": 20092.025634765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 9.8e+57) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (* (/ (/ 1.0 n) (/ 1.0 n)) (+ 1.0 (/ 1.0 n))) (/ (/ 1.0 n) (/ 1.0 n)))))) (- (/ 1.0 (pow (+ 1.0 x) (- (/ 1.0 n)))) (pow x (/ 1.0 n))))",
    "output_parens": 30,
    "avg_bits_err_input": 32.706754976689055,
    "avg_bits_err_output": 31.039319840230736,
    "avg_bits_err_improve": 1.6674351364583195,
    "time": 58380.417236328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.18356159511976,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 29.175186595119758,
    "time": 6738.666015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.669926653435628,
    "avg_bits_err_output": 14.669926653435628,
    "avg_bits_err_improve": 0,
    "time": 52215.375244140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.62885796385204,
    "avg_bits_err_output": 6.170391829550148,
    "avg_bits_err_improve": 33.458466134301894,
    "time": 27123.787109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log (exp (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.672128719980382,
    "avg_bits_err_output": 29.373038494558926,
    "avg_bits_err_improve": 0.29909022542145536,
    "time": 37830.641357421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.002686708335755,
    "avg_bits_err_output": 30.008909293058977,
    "avg_bits_err_improve": -0.006222584723222013,
    "time": 51037.337646484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.234673131877436,
    "avg_bits_err_output": 34.234673131877436,
    "avg_bits_err_improve": 0,
    "time": 22123.94287109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.710277482896295,
    "avg_bits_err_output": 33.722165164792145,
    "avg_bits_err_improve": -0.011887681895849767,
    "time": 21655.971435546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(- (+ (/ (log1p (- x)) (log1p x)) -1.0) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 61.368384163634296,
    "avg_bits_err_output": 0.03651917344137622,
    "avg_bits_err_improve": 61.33186499019292,
    "time": 16871.240478515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.004861545587985,
    "avg_bits_err_output": 0.06832251960426906,
    "avg_bits_err_improve": 62.93653902598372,
    "time": 47058.142578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (exp (+ -1.0 (/ (- 1.0 eps) (+ 1.0 eps))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.55311717107745,
    "avg_bits_err_output": 58.56120656826732,
    "avg_bits_err_improve": -0.00808939718987034,
    "time": 70246.56225585938,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(* (- (* (/ 1.0 x) (exp 1.0)) (- (* (+ 1.0 (/ 1.0 (tan x))) (exp 1.0)) (exp 1.0))) (exp -1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 59.86659524500726,
    "avg_bits_err_output": 59.862770320920816,
    "avg_bits_err_improve": 0.0038249240864445255,
    "time": 59069.60595703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.52131561508944,
    "avg_bits_err_output": 40.70842431750771,
    "avg_bits_err_improve": 19.81289129758173,
    "time": 45291.83935546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.146003904474156,
    "avg_bits_err_output": 0.3975943609377705,
    "avg_bits_err_improve": 40.74840954353638,
    "time": 17944.18603515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.65758867147359,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 58.65721367147359,
    "time": 3329.47314453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.113551741286233,
    "avg_bits_err_output": 0.01916850310022949,
    "avg_bits_err_improve": 29.094383238186005,
    "time": 5245.81201171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (+ 1.0 (- (log (+ (expm1 (- x)) (expm1 x))) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.460704682000475,
    "avg_bits_err_output": 28.60241854685707,
    "avg_bits_err_improve": 0.8582861351434055,
    "time": 32484.433349609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.633505261051234,
    "avg_bits_err_output": 9.64963316936641,
    "avg_bits_err_improve": -0.016127908315176853,
    "time": 39380.84912109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan x) (- (* (tan x) 2.0) (tan (+ x eps))))",
    "output_parens": 7,
    "avg_bits_err_input": 36.7534910911402,
    "avg_bits_err_output": 36.761553754136976,
    "avg_bits_err_improve": -0.008062662996778158,
    "time": 37847.68798828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (* (sqrt (+ x 1.0)) (/ 1.0 (+ x 1.0))) (- (* x (* (sqrt (+ x 1.0)) (/ 1.0 (+ x 1.0)))) (sqrt x)))",
    "output_parens": 14,
    "avg_bits_err_input": 29.591864212488453,
    "avg_bits_err_output": 26.384354605356755,
    "avg_bits_err_improve": 3.2075096071316977,
    "time": 36893.45068359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.01132265054853,
    "avg_bits_err_output": 0.39810650217054494,
    "avg_bits_err_improve": 36.61321614837799,
    "time": 25029.94189453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.256004051314022,
    "avg_bits_err_output": 20.115241279371475,
    "avg_bits_err_improve": 0.14076277194254772,
    "time": 26445.18212890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(exp (log (- (atan (+ N 1.0)) (atan N))))",
    "output_parens": 6,
    "avg_bits_err_input": 14.178066987185467,
    "avg_bits_err_output": 14.178088792565454,
    "avg_bits_err_improve": -2.1805379986972184e-05,
    "time": 68798.61157226562,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.38078377963852,
    "avg_bits_err_output": 1.2293022381684982,
    "avg_bits_err_improve": 28.151481541470023,
    "time": 29154.883056640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07448514209423482,
    "avg_bits_err_output": 0.07448514209423482,
    "avg_bits_err_improve": 0,
    "time": 36988.49951171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.067174388564737,
    "avg_bits_err_output": 0.31101917344137625,
    "avg_bits_err_improve": 15.75615521512336,
    "time": 31369.17919921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (log (exp (+ 1.0 (- (cos (* PI (/ angle 180.0))) 1.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.417983566486676,
    "avg_bits_err_output": 20.419283610926346,
    "avg_bits_err_improve": -0.0013000444396702449,
    "time": 44067.034423828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* (* PI (/ angle 180.0)) (* PI (* (/ angle 180.0) (/ 1.0 (* PI (/ angle 180.0))))))) -2.0)) (cos (* PI (/ angle 180.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 31.15099973059393,
    "avg_bits_err_output": 31.25393971205893,
    "avg_bits_err_improve": -0.10293998146499916,
    "time": 52158.237548828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (+ (* PI (+ (/ angle 180.0) -1.0)) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.207910606075902,
    "avg_bits_err_output": 20.20775359634909,
    "avg_bits_err_improve": 0.0001570097268128734,
    "time": 57460.8720703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17090158869586775,
    "avg_bits_err_output": 0.17131034640495865,
    "avg_bits_err_improve": -0.0004087577090909067,
    "time": 30704.37548828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3234814492662428,
    "avg_bits_err_output": 0.31439494479001145,
    "avg_bits_err_improve": 0.009086504476231327,
    "time": 44745.33837890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(log1p (expm1 (/ (* e (sin v)) (fma e (cos v) 1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.13239624062518027,
    "avg_bits_err_output": 0.13214624062518027,
    "avg_bits_err_improve": 0.0002500000000000002,
    "time": 35137.304443359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 12,
    "avg_bits_err_input": 17.053078116884766,
    "avg_bits_err_output": 17.053078116884766,
    "avg_bits_err_improve": 0,
    "time": 46073.982177734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.41960666705849,
    "avg_bits_err_output": 46.04070858547455,
    "avg_bits_err_improve": 6.378898081583941,
    "time": 41966.245361328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma c (* a -4.0) (* b b)) (fma (- a) (* c 4.0) (* c (* a 4.0)))))) (* a 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 28.521127677284223,
    "avg_bits_err_output": 28.520767336589753,
    "avg_bits_err_improve": 0.00036034069447055117,
    "time": 22433.86669921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.933839051325805,
    "avg_bits_err_output": 39.5672344005156,
    "avg_bits_err_improve": 4.366604650810203,
    "time": 25945.487548828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.23904482868608,
    "avg_bits_err_output": 34.23904482868608,
    "avg_bits_err_improve": 0,
    "time": 25061.433837890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))) (+ (* (* (cos phi2) (cos (- lambda1 lambda2))) (/ 1.0 (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1)))) (* (cos phi1) (/ 1.0 (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.9072351064400549,
    "avg_bits_err_output": 0.92861873716377,
    "avg_bits_err_improve": -0.021383630723715075,
    "time": 37736.298583984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 29.07634473132597,
    "avg_bits_err_output": 29.083255095668843,
    "avg_bits_err_improve": -0.006910364342871844,
    "time": 234898.18286132812,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.071940921935386,
    "avg_bits_err_output": 1.4171062031259016,
    "avg_bits_err_improve": 56.65483471880948,
    "time": 9004.185302734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.99240368509231,
    "avg_bits_err_output": 0.008,
    "avg_bits_err_improve": 57.98440368509231,
    "time": 6997.740234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.00789624062518029,
    "avg_bits_err_output": 0.00789624062518029,
    "avg_bits_err_improve": 0,
    "time": 3661.8818359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (fma (* x (/ (/ x x) x)) x (sqrt (fma x x -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 32.369375,
    "avg_bits_err_output": 32.36925,
    "avg_bits_err_improve": 0.00012499999999704414,
    "time": 8688.225830078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (expm1 (log1p (/ (+ x 1.0) (- 1.0 x))))) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.54309489220731,
    "avg_bits_err_output": 58.56014317435734,
    "avg_bits_err_improve": -0.017048282150035732,
    "time": 56591.4716796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026573120312590147,
    "avg_bits_err_output": 0.026573120312590147,
    "avg_bits_err_improve": 0,
    "time": 3915.212158203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12382312031259014,
    "avg_bits_err_output": 0.12382312031259014,
    "avg_bits_err_improve": 0,
    "time": 48265.52783203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1261462406251803,
    "avg_bits_err_output": 0.1261462406251803,
    "avg_bits_err_improve": 0,
    "time": 40724.887451171875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (- lambda1 lambda2) (fma (- lambda1) (- (cos (/ (+ phi1 phi2) 2.0))) (* (- (cos (/ (+ phi1 phi2) 2.0))) lambda1))) (- phi1 phi2)))",
    "output_parens": 19,
    "avg_bits_err_input": 39.08669208283665,
    "avg_bits_err_output": 3.6934866323323687,
    "avg_bits_err_improve": 35.39320545050428,
    "time": 52153.931396484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.449749711339619,
    "avg_bits_err_output": 14.449749711339619,
    "avg_bits_err_improve": 0,
    "time": 4380.866455078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (+ (fma (- (sin (asin (fma (sin delta) (* (cos theta) (cos phi1)) (* (sin phi1) (cos delta)))))) (sin phi1) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos theta) (cos phi1)) (* (sin phi1) (cos delta))))))) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos theta) (cos phi1)) (* (sin phi1) (cos delta))))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.1635200668372493,
    "avg_bits_err_output": 0.15470176798131852,
    "avg_bits_err_improve": 0.008818298855930773,
    "time": 50415.9814453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.4813404162015,
    "avg_bits_err_output": 46.05771256259478,
    "avg_bits_err_improve": 6.4236278536067175,
    "time": 35258.71142578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* a (* -3.0 (* c (sqrt (/ 1.0 (fma b b (* a (* c -3.0)))))))) (- (* b (* b (sqrt (/ 1.0 (fma b b (* a (* c -3.0))))))) b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.675928576812307,
    "avg_bits_err_output": 27.951707030973665,
    "avg_bits_err_improve": 0.7242215458386418,
    "time": 38988.24169921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) -1.0)))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 20,
    "avg_bits_err_input": 44.010822380376474,
    "avg_bits_err_output": 39.610294840217065,
    "avg_bits_err_improve": 4.400527540159409,
    "time": 37846.219970703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.27727371167057,
    "avg_bits_err_output": 34.27727371167057,
    "avg_bits_err_improve": 0,
    "time": 24462.270751953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (pow (cos phi2) 2.0) (/ (sin (- lambda1 lambda2)) (cos phi2))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.235009709166363,
    "avg_bits_err_output": 13.248912966305909,
    "avg_bits_err_improve": -0.013903257139546099,
    "time": 63596.9990234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(fma (+ 1.0 (- (/ -1.0 (/ (+ 1.0 x) (+ -1.0 x))) 1.0)) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (+ 1.0 (/ (+ 1.0 x) (+ -1.0 x))) -1.0)) (/ x (+ 1.0 x)))",
    "output_parens": 18,
    "avg_bits_err_input": 29.474627970452524,
    "avg_bits_err_output": 29.507632099818924,
    "avg_bits_err_improve": -0.03300412936640029,
    "time": 57404.734619140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ -1.0 x)) (+ (/ x (+ 1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.010375,
    "avg_bits_err_output": 0.010823120312590145,
    "avg_bits_err_improve": -0.0004481203125901445,
    "time": 3940.976806640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (log1p (expm1 (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.716908677052219,
    "avg_bits_err_output": 14.720784967075375,
    "avg_bits_err_improve": -0.003876290023155704,
    "time": 38815.24853515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5.4e-304) (/ (- (* (sqrt (- (+ (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) A))) (* (sqrt (fma 2.0 (pow B 2.0) (- (* C (* A 8.0))))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (- (+ C A) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* (sqrt F) (sqrt (- (* C (* A 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 51,
    "avg_bits_err_input": 52.34570415851834,
    "avg_bits_err_output": 47.03588852452644,
    "avg_bits_err_improve": 5.309815633991896,
    "time": 45847.970458984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.768099971483018,
    "avg_bits_err_output": 29.768099971483018,
    "avg_bits_err_improve": 0,
    "time": 56100.61572265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -4e-310) (/ (- (* (sqrt (* -2.0 F)) (sqrt (* (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ C A)) (- (* A (* C 4.0)) (pow B 2.0)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 47,
    "avg_bits_err_input": 52.39194310070474,
    "avg_bits_err_output": 47.42225718643844,
    "avg_bits_err_improve": 4.969685914266293,
    "time": 48642.21337890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.164742181436335,
    "avg_bits_err_output": 16.164742181436335,
    "avg_bits_err_improve": 0,
    "time": 59202.391357421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.2e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-287) (+ (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (/ (cbrt (/ 1.0 (+ a a))) (cbrt (- (sqrt (- (* g g) (* h h))) g))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (+ g h) (sqrt (/ (- g h) (+ g h)))) g))))))",
    "output_parens": 82,
    "avg_bits_err_input": 35.7464310882645,
    "avg_bits_err_output": 6.87596926828358,
    "avg_bits_err_improve": 28.87046181998092,
    "time": 66673.26489257812,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9913639109464255,
    "avg_bits_err_output": 0.027875,
    "avg_bits_err_improve": 0.9634889109464255,
    "time": 16886.832763671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(exp (log (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.667125,
    "avg_bits_err_output": 0.6687684006156179,
    "avg_bits_err_improve": -0.0016434006156179626,
    "time": 7750.120849609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.423395897667953,
    "avg_bits_err_output": 11.423395897667953,
    "avg_bits_err_improve": 0,
    "time": 11586.632080078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5129727632595006,
    "avg_bits_err_output": 0.4325,
    "avg_bits_err_improve": 0.08047276325950059,
    "time": 8339.25341796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.002) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.00000001) (log1p (+ x (fma (/ 1.0 (hypot 1.0 x)) (fma x x 1.0) -1.0))) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 52.89206785441452,
    "avg_bits_err_output": 11.204815002910472,
    "avg_bits_err_improve": 41.68725285150405,
    "time": 36428.22119140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.651442741400846,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.651442741400846,
    "time": 2306.523681640625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.013924039677847347,
    "avg_bits_err_improve": -0.001299039677847346,
    "time": 17569.673828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1282.1357421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 1e+64) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (- 0.375 (* v 0.25)) (* r w)))) (- 1.0 v))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* w (* (- 0.375 (* v 0.25)) (* r (* w r)))) (- 1.0 v)))))",
    "output_parens": 27,
    "avg_bits_err_input": 12.357390301486214,
    "avg_bits_err_output": 6.25656165469173,
    "avg_bits_err_improve": 6.1008286467944846,
    "time": 32292.42626953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* -6.0 (* x1 x1)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (+ (* x1 (* x1 4.0)) (* x1 (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 45,
    "avg_bits_err_input": 0.5166551153454957,
    "avg_bits_err_output": 0.2963797612621564,
    "avg_bits_err_improve": 0.22027535408333926,
    "time": 76712.84521484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.23924039327486,
    "avg_bits_err_output": 18.23924039327486,
    "avg_bits_err_improve": 0,
    "time": 53336.012939453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (+ (/ x x) (- (* x 0.12900613773279798) (/ x x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.21791748125036056,
    "avg_bits_err_output": 0.18564584436669945,
    "avg_bits_err_improve": 0.03227163688366111,
    "time": 18556.040771484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0026652410118609203,
    "avg_bits_err_output": 0.0026652410118609203,
    "avg_bits_err_improve": 0,
    "time": 5712.26318359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.487350327184277,
    "avg_bits_err_output": 9.902560289684972,
    "avg_bits_err_improve": 4.584790037499305,
    "time": 39400.1884765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (- (fma eps x x))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.288659464539627,
    "avg_bits_err_output": 0.8796167799012117,
    "avg_bits_err_improve": 28.409042684638415,
    "time": 36998.765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020375,
    "avg_bits_err_output": 0.020375,
    "avg_bits_err_improve": 0,
    "time": 10018.2646484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025625,
    "avg_bits_err_output": 0.025625,
    "avg_bits_err_improve": 0,
    "time": 27492.6943359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.035375,
    "avg_bits_err_output": 0.035375,
    "avg_bits_err_improve": 0,
    "time": 9656.89501953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3556.321533203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3870.676025390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4038.71728515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.80911877941945,
    "avg_bits_err_output": 0.248875,
    "avg_bits_err_improve": 7.56024377941945,
    "time": 49614.048828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.568363101246445,
    "avg_bits_err_output": 7.568363101246445,
    "avg_bits_err_improve": 0,
    "time": 30904.27978515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.151271773531636,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 16.137271773531637,
    "time": 17037.388427734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (* (pow (pow (exp x) -10.0) (/ x x)) (pow (pow (exp x) 10.0) 2.0)) x) (* (cos x) (* (cos x) (/ 1.0 (cos x)))))",
    "output_parens": 16,
    "avg_bits_err_input": 3.5337284328666234,
    "avg_bits_err_output": 2.0824854056634248,
    "avg_bits_err_improve": 1.4512430272031986,
    "time": 60401.36474609375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (fma x x 1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 14.775483775594797,
    "avg_bits_err_output": 14.775160655282209,
    "avg_bits_err_improve": 0.00032312031258818763,
    "time": 32813.3115234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.41319217748289,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.41319217748289,
    "time": 4379.618896484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.72486944223623,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 38.723869442236236,
    "time": 4155.880126953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.301,
    "avg_bits_err_improve": 63.699,
    "time": 4690.351318359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843250776468324,
    "avg_bits_err_output": 0.39607800781475366,
    "avg_bits_err_improve": 61.44717276865357,
    "time": 20330.54541015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.710277482896295,
    "avg_bits_err_output": 33.722165164792145,
    "avg_bits_err_improve": -0.011887681895849767,
    "time": 23246.513427734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.23904482868608,
    "avg_bits_err_output": 34.23904482868608,
    "avg_bits_err_improve": 0,
    "time": 24267.56494140625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2934.8173828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.02464764542883,
    "avg_bits_err_output": 0.01975,
    "avg_bits_err_improve": 40.00489764542883,
    "time": 37467.837646484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.27894301975897,
    "avg_bits_err_output": 20.27894301975897,
    "avg_bits_err_improve": 0,
    "time": 3323.675537109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.5764649048846247,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.5764649048846247,
    "time": 5436.71728515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0385,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.037125,
    "time": 6789.486328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.016948120312590145,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0.005823120312590146,
    "time": 5441.715087890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.014374999999999999,
    "time": 3936.95654296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1894.126953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4032691734413764,
    "avg_bits_err_output": 0.237625,
    "avg_bits_err_improve": 0.1656441734413764,
    "time": 6951.017333984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 29.500441905640464,
    "avg_bits_err_output": 29.50044190803017,
    "avg_bits_err_improve": -2.3897044343357265e-09,
    "time": 10799.293212890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.28423411580665,
    "avg_bits_err_output": 24.28423411580665,
    "avg_bits_err_improve": 0,
    "time": 21039.308837890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.51516062313163,
    "avg_bits_err_output": 30.514901156009806,
    "avg_bits_err_improve": 0.00025946712182545184,
    "time": 37503.606689453125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006573120312590144,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.005823120312590144,
    "time": 2956.865234375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-6) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.94557993578987,
    "avg_bits_err_output": 10.709453733069827,
    "avg_bits_err_improve": 37.236126202720044,
    "time": 43163.67578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.41803412600564,
    "avg_bits_err_output": 26.41803412600564,
    "avg_bits_err_improve": 0,
    "time": 33910.627685546875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d (- a) (* b c)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.36938487891704,
    "avg_bits_err_output": 26.36906175860445,
    "avg_bits_err_improve": 0.000323120312589964,
    "time": 21303.118896484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (* ux (+ maxCos (* ux (/ -1.0 ux)))) -1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 0.033375,
    "avg_bits_err_output": 0.031188753934705153,
    "avg_bits_err_improve": 0.0021862460652948487,
    "time": 7254.45703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (* ux (- (fma ux maxCos 1.0) ux)) (* ux (+ (- maxCos (* (fma ux maxCos 1.0) (- maxCos))) (- -1.0 (* ux maxCos)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.604116756017186,
    "avg_bits_err_output": 0.542674246801937,
    "avg_bits_err_improve": 13.061442509215249,
    "time": 46121.4873046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ (- (* ux (+ (- (* ux maxCos) ux) 2.0)) ux) (- (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.633105205358305,
    "avg_bits_err_output": 0.3388983784434938,
    "avg_bits_err_improve": 13.294206826914811,
    "time": 54693.73828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.3533256941859234,
    "avg_bits_err_output": 0.34699669838471414,
    "avg_bits_err_improve": 0.0063289958012092695,
    "time": 79125.58178710938,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.21003759491720253,
    "avg_bits_err_output": 0.21016259491720254,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 42751.078857421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (- (+ (/ 1.0 (/ u1 (- 1.0 u1))) -1.0) -1.0)))) (sin (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5273052096597759,
    "avg_bits_err_output": 0.527943831355386,
    "avg_bits_err_improve": -0.0006386216956101309,
    "time": 55668.37841796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (+ 1.0 (- (* u2 -6.28318530718) 1.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3268196327186358,
    "avg_bits_err_output": 0.3480386216482113,
    "avg_bits_err_improve": -0.021218988929575522,
    "time": 55531.89501953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (+ (+ -1.0 (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))) 1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33150640204892723,
    "avg_bits_err_output": 0.3325744025556765,
    "avg_bits_err_improve": -0.001068000506749267,
    "time": 38960.404296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05803104458225688,
    "avg_bits_err_output": 0.040230239571414854,
    "avg_bits_err_improve": 0.017800805010842025,
    "time": 24520.405029296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (- (+ (exp (/ (- (fabs x)) s)) 2.0) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13354197425442763,
    "avg_bits_err_output": 0.12773416636848023,
    "avg_bits_err_improve": 0.005807807885947397,
    "time": 30866.38330078125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6751124505807413,
    "avg_bits_err_output": 0.6787023715821615,
    "avg_bits_err_improve": -0.003589921001420193,
    "time": 31959.81982421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15663811306823494,
    "avg_bits_err_output": 0.15281908933121355,
    "avg_bits_err_improve": 0.003819023737021393,
    "time": 27222.051025390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.561479138020748,
    "avg_bits_err_output": 2.5558232954459363,
    "avg_bits_err_improve": 0.005655842574811665,
    "time": 57091.362548828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) (* 2.0 (/ v v))) (* v (- (* 3.0 (/ v v)) (* v (/ 2.0 v))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.46465221439493026,
    "avg_bits_err_output": 0.4373923327978285,
    "avg_bits_err_improve": 0.027259881597101743,
    "time": 46393.94482421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (/ 1.0 (+ v v)) (* (exp (+ (/ (* cosTheta_i cosTheta_O) v) (- (- 0.6931 (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)))) (exp (- (log (/ 1.0 (+ v v))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.10215365043857581,
    "avg_bits_err_output": 0.11085187926030869,
    "avg_bits_err_improve": -0.008698228821732878,
    "time": 39441.828125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (log (pow alpha (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (* PI 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.4702707101683745,
    "avg_bits_err_output": 0.434188708827536,
    "avg_bits_err_improve": 0.0360820013408385,
    "time": 26307.532470703125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(fma s (* s (/ (* (log1p (- (/ (+ u -0.25) 0.75))) -3.0) s)) 0.0)",
    "output_parens": 8,
    "avg_bits_err_input": 1.3115123199176546,
    "avg_bits_err_output": 0.7251776376027294,
    "avg_bits_err_improve": 0.5863346823149252,
    "time": 90079.5537109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.513838276691208,
    "avg_bits_err_output": 0.200875,
    "avg_bits_err_improve": 12.312963276691208,
    "time": 36918.001708984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (+ (* (* PI r) (* s (* 2.0 (/ r r)))) (* (* s (* 2.0 (/ r r))) 0.0))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI 6.0) (* s r))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.13220703589264557,
    "avg_bits_err_output": 0.13256292053639593,
    "avg_bits_err_improve": -0.00035588464375035933,
    "time": 56627.76708984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) (* n0_i (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8584023282747201,
    "avg_bits_err_output": 0.8295723507306697,
    "avg_bits_err_improve": 0.028829977544050367,
    "time": 53145.28271484375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (- (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (log (pow (exp (/ 1.0 (sqrt PI))) (- (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.6866850533746715,
    "avg_bits_err_output": 0.5448691089880067,
    "avg_bits_err_improve": 0.14181594438666478,
    "time": 49172.490478515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.621533033039467,
    "avg_bits_err_output": 0.5351147526715693,
    "avg_bits_err_improve": 13.086418280367898,
    "time": 28007.26513671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (- (+ 1.0 (* (* 2.0 PI) u2)) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.670547721294065,
    "avg_bits_err_output": 0.33348009881175916,
    "avg_bits_err_improve": 13.337067622482307,
    "time": 56468.185791015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.035741003659682,
    "avg_bits_err_output": 0.20775,
    "avg_bits_err_improve": 13.827991003659681,
    "time": 32081.409912109375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.619550375658925,
    "avg_bits_err_output": 0.5290116775891377,
    "avg_bits_err_improve": 12.090538698069787,
    "time": 22613.390625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (+ (/ PI l) 1.0)) l) 0.0))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.926184191673947,
    "avg_bits_err_output": 13.035951414875273,
    "avg_bits_err_improve": 3.8902327767986744,
    "time": 35110.8154296875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21206372187554084,
    "avg_bits_err_output": 0.2102406015629507,
    "avg_bits_err_improve": 0.0018231203125901319,
    "time": 40419.977783203125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 4e+262) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 41,
    "avg_bits_err_input": 13.320328265980981,
    "avg_bits_err_output": 11.9263710861994,
    "avg_bits_err_improve": 1.393957179781582,
    "time": 49841.5478515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.322369661325304,
    "avg_bits_err_output": 2.081489176572737,
    "avg_bits_err_improve": 59.240880484752566,
    "time": 71636.68481445312,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -7.8e-160) (/ (* (sqrt 2.0) t) (sqrt (- (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))) (* t (* (/ (+ 1.0 x) (+ x -1.0)) (* t -2.0)))))) (if (<= t 2e-112) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* l l) (* (* t t) 2.0)))))) (/ (* (sqrt 2.0) t) (sqrt (- (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))) (* t (* (/ (+ 1.0 x) (+ x -1.0)) (* t -2.0))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 42.89399472837731,
    "avg_bits_err_output": 35.78412819061557,
    "avg_bits_err_improve": 7.109866537761739,
    "time": 37683.723876953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9176017611745624,
    "avg_bits_err_output": 3.9176017611745624,
    "avg_bits_err_improve": 0,
    "time": 49520.793212890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.8943742678845564,
    "avg_bits_err_output": 0.006,
    "avg_bits_err_improve": 0.8883742678845564,
    "time": 14543.845458984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.862531952428254,
    "avg_bits_err_output": 10.863580387019924,
    "avg_bits_err_improve": -0.0010484345916701443,
    "time": 96795.03344726562,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= t -9.2e+102) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0))) (if (<= t 2.05e-304) (sqrt (* 2.0 (* (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) n))) (* (sqrt (fma 2.0 (- t (* n (* (pow (/ l Om) 2.0) (- U U*)))) (- (* (/ (* l l) Om) 4.0)))) (sqrt (* U n)))))",
    "output_parens": 48,
    "avg_bits_err_input": 34.56024740422174,
    "avg_bits_err_output": 32.12126607640921,
    "avg_bits_err_improve": 2.4389813278125274,
    "time": 43427.3837890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 5e+234) (/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 47.23044222472221,
    "avg_bits_err_output": 36.69722331487459,
    "avg_bits_err_improve": 10.53321890984762,
    "time": 56553.218017578125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (- (sin k) 0.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 32.163229373401556,
    "avg_bits_err_output": 32.14022164923425,
    "avg_bits_err_improve": 0.02300772416730723,
    "time": 42643.57763671875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (expm1 (log1p (/ (cos th) (sqrt 2.0)))) (+ (* a1 a1) (* a2 a2)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5397894765845872,
    "avg_bits_err_output": 0.5660024629162506,
    "avg_bits_err_improve": -0.026212986331663357,
    "time": 37485.48193359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (* (pow (* 2.0 n) (/ (- 1.0 k) 2.0)) (exp (* (/ (- 1.0 k) 2.0) (log PI)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4818863233716547,
    "avg_bits_err_output": 0.5012484909519778,
    "avg_bits_err_improve": -0.019362167580323053,
    "time": 48462.142822265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- (cos (/ K 2.0))) (fma (exp l) J (* J (- (exp (- l)) (* (exp l) 2.0))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.829651954521946,
    "avg_bits_err_output": 17.84592984187851,
    "avg_bits_err_improve": -0.016277887356565657,
    "time": 37627.88134765625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -7.5e+228) (* (cos (- (/ (* K (- (* K (+ 1.0 (/ (+ m n) K))) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 1.55e-41) (* (log (log (exp (exp (cos (- (/ (* K (+ m n)) 2.0) M)))))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (* K (+ 1.0 (/ (+ m n) K))) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 61,
    "avg_bits_err_input": 15.418386189492933,
    "avg_bits_err_output": 10.656251189306417,
    "avg_bits_err_improve": 4.762135000186516,
    "time": 28597.2666015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.46453308281331,
    "avg_bits_err_output": 17.46453308281331,
    "avg_bits_err_improve": 0,
    "time": 39713.63232421875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 1e+235) (- (+ (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))))) w0) w0) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 13.68570072456706,
    "avg_bits_err_output": 10.177213252247272,
    "avg_bits_err_improve": 3.5084874723197874,
    "time": 16158.361083984375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.321031222129317,
    "avg_bits_err_output": 19.321031222129317,
    "avg_bits_err_improve": 0,
    "time": 25499.82177734375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) (- INFINITY)) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))) (/ (* (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* D h)))) 2.0) (* M M)))) (/ c0 (+ w w))) 1.0))",
    "output_parens": 76,
    "avg_bits_err_input": 59.72345062510315,
    "avg_bits_err_output": 55.7123514254673,
    "avg_bits_err_improve": 4.011099199635851,
    "time": 42286.23291015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l)))))",
    "output_parens": 14,
    "avg_bits_err_input": 26.54313077399435,
    "avg_bits_err_output": 26.54327701461953,
    "avg_bits_err_improve": -0.00014624062518109326,
    "time": 59125.214111328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) (exp -2.0)) (exp 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 16.014168059511185,
    "avg_bits_err_output": 15.559380386417203,
    "avg_bits_err_improve": 0.45478767309398194,
    "time": 94183.22216796875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9868656015629508,
    "avg_bits_err_output": 0.012542481250360577,
    "avg_bits_err_improve": 0.9743231203125902,
    "time": 16176.8515625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (- (exp (log1p (* v (* v 5.0)))) 1.0)) (fma (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI)) 0.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.42591781149169733,
    "avg_bits_err_output": 0.36812689483688843,
    "avg_bits_err_improve": 0.0577909166548089,
    "time": 26773.0947265625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012707722262221501,
    "avg_bits_err_output": 0.012707722262221501,
    "avg_bits_err_improve": 0,
    "time": 6914.324462890625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5507649356150287,
    "avg_bits_err_output": 0.5507649356150287,
    "avg_bits_err_improve": 0,
    "time": 12511.55419921875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.14736174471255,
    "avg_bits_err_output": 2.14736174471255,
    "avg_bits_err_improve": 0,
    "time": 6607.98876953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (expm1 (log1p (exp (/ (+ Vef (- (+ Ev EAccept) mu)) KbT)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.022732716761480035,
    "avg_bits_err_output": 0.023732716761480036,
    "avg_bits_err_improve": -0.0010000000000000009,
    "time": 8450.667236328125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (+ (* b (* b 4.0)) (* a (* (fma b b (* a a)) a))) (* b (* (fma b b (* a a)) b))) 1.0)",
    "output_parens": 13,
    "avg_bits_err_input": 0.18781373264222415,
    "avg_bits_err_output": 0.13349512326451993,
    "avg_bits_err_improve": 0.05431860937770422,
    "time": 27231.54541015625,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* a (+ a (* a a))) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18910664275575975,
    "avg_bits_err_output": 0.18967452977192065,
    "avg_bits_err_improve": -0.0005678870161608951,
    "time": 30927.322998046875,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18459005351546667,
    "avg_bits_err_output": 0.18459005351546667,
    "avg_bits_err_improve": 0,
    "time": 4962.913818359375,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.296697980081309,
    "avg_bits_err_output": 13.296697980081309,
    "avg_bits_err_improve": 0,
    "time": 12908.58251953125,
    "seed": 14,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.59271767812149,
    "avg_bits_err_output": 0.049125,
    "avg_bits_err_improve": 40.54359267812149,
    "time": 6797.93798828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (- (+ (sin x) 1.0) 1.0)) (- (+ (+ x -2.0) 2.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.110674265336044,
    "avg_bits_err_output": 25.564446644179394,
    "avg_bits_err_improve": 5.54622762115665,
    "time": 50238.051025390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.820198183972245,
    "avg_bits_err_output": 33.820198183972245,
    "avg_bits_err_improve": 0,
    "time": 25001.916259765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* (* a c) (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))) (- 0.0 (- (* b_2 (* (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))) b_2)) (- b_2)))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 34.05588322986994,
    "avg_bits_err_output": 32.66834460692883,
    "avg_bits_err_improve": 1.3875386229411149,
    "time": 23074.604248046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (* x x))",
    "output_parens": 6,
    "avg_bits_err_input": 31.329167050767772,
    "avg_bits_err_output": 31.330572677697184,
    "avg_bits_err_improve": -0.0014056269294115964,
    "time": 34386.813232421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 3.25e+22) (+ (log (exp (- 1.0 (pow x (/ 1.0 n))))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (+ 1.0 (* (/ 1.0 n) (log1p x))) 1.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 32.00250505090117,
    "avg_bits_err_output": 30.191662099953675,
    "avg_bits_err_improve": 1.810842950947496,
    "time": 50482.13525390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.40489672648931,
    "avg_bits_err_output": 0.0165,
    "avg_bits_err_improve": 29.388396726489308,
    "time": 4612.90087890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.392850973268146,
    "avg_bits_err_output": 14.392850973268146,
    "avg_bits_err_improve": 0,
    "time": 36249.065673828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.940981555116096,
    "avg_bits_err_output": 6.47993218439644,
    "avg_bits_err_improve": 33.46104937071966,
    "time": 29781.000244140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (- (- -1.0 (cbrt x)) (- (- 2.0 (- 2.0 (cbrt (+ x 1.0)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 29.536233998661956,
    "avg_bits_err_output": 29.244308155822775,
    "avg_bits_err_improve": 0.29192584283918066,
    "time": 30315.00048828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.938340772734886,
    "avg_bits_err_output": 29.938340772734886,
    "avg_bits_err_improve": 0,
    "time": 31375.432861328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.148113047899024,
    "avg_bits_err_output": 34.149267869523726,
    "avg_bits_err_improve": -0.0011548216247021514,
    "time": 23617.731201171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (pow (+ (* b b) (* a (* c -4.0))) 0.5)) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.4079375625893,
    "avg_bits_err_output": 34.408898253405845,
    "avg_bits_err_improve": -0.0009606908165480377,
    "time": 21949.135009765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.41774068935821,
    "avg_bits_err_output": 0.022283082813311303,
    "avg_bits_err_improve": 61.3954576065449,
    "time": 20708.61572265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00128345677194,
    "avg_bits_err_output": 0.07090128210177632,
    "avg_bits_err_improve": 62.93038217467016,
    "time": 51018.765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(* (- (exp -1.0) (- (* (+ 1.0 (* (log (/ (- 1.0 eps) (- eps -1.0))) (exp 1.0))) (exp -1.0)) (* (+ 1.0 (exp 1.0)) (log (/ (- 1.0 eps) (- eps -1.0)))))) (exp -1.0))",
    "output_parens": 21,
    "avg_bits_err_input": 58.5901143684253,
    "avg_bits_err_output": 58.59302640825927,
    "avg_bits_err_improve": -0.0029120398339728126,
    "time": 73597.18090820312,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (* (/ 1.0 (tan x)) (- 1.0 (- (/ (+ 1.0 (/ 1.0 (tan x))) (/ 1.0 (tan x))) (/ 1.0 (/ 1.0 (tan x)))))) (- (/ 1.0 x) (/ 1.0 (tan x))))",
    "output_parens": 19,
    "avg_bits_err_input": 59.937304562023,
    "avg_bits_err_output": 59.92434022164438,
    "avg_bits_err_improve": 0.012964340378623262,
    "time": 64298.904296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.549631115990856,
    "avg_bits_err_output": 41.41662625050897,
    "avg_bits_err_improve": 19.133004865481887,
    "time": 49021.50927734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.02666931851472,
    "avg_bits_err_output": 0.4600943609377705,
    "avg_bits_err_improve": 40.56657495757695,
    "time": 8145.837890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.78338549412474,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.78263549412474,
    "time": 3638.34716796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.372772749799932,
    "avg_bits_err_output": 0.017067347324700076,
    "avg_bits_err_improve": 29.35570540247523,
    "time": 18881.367431640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (* (expm1 x) (exp x)) (- (expm1 (- x)) (pow (expm1 x) 2.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 30.072393212563146,
    "avg_bits_err_output": 29.302354949074612,
    "avg_bits_err_improve": 0.7700382634885337,
    "time": 23166.3173828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.623785173793717,
    "avg_bits_err_output": 9.623785173793717,
    "avg_bits_err_improve": 0,
    "time": 49988.178466796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.96683802788382,
    "avg_bits_err_output": 36.96683802788382,
    "avg_bits_err_improve": 0,
    "time": 39241.920166015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (exp (- (* 0.5 (log1p x)))) (- (- (* x (+ 1.0 (/ 1.0 (sqrt (+ x 1.0))))) (sqrt x)) x))",
    "output_parens": 13,
    "avg_bits_err_input": 29.598634197073682,
    "avg_bits_err_output": 25.473789215273875,
    "avg_bits_err_improve": 4.124844981799807,
    "time": 34347.590576171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.26211806434747,
    "avg_bits_err_output": 0.38340123831415746,
    "avg_bits_err_improve": 36.87871682603331,
    "time": 32925.095947265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.01758811801997,
    "avg_bits_err_output": 19.87866921607185,
    "avg_bits_err_improve": 0.13891890194812007,
    "time": 25324.66357421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (+ (- 2.0 (pow (- (atan (+ 1.0 N)) (atan N)) 2.0)) -2.0) (- (- (atan N) (atan (- N -1.0))) (pow (- (atan (- N -1.0)) (atan N)) 2.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 15.61891513363768,
    "avg_bits_err_output": 15.637054344940275,
    "avg_bits_err_improve": -0.01813921130259466,
    "time": 47550.11865234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.872719925704544,
    "avg_bits_err_output": 1.2385504134265952,
    "avg_bits_err_improve": 28.63416951227795,
    "time": 28184.40625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.08473027599603312,
    "avg_bits_err_output": 0.08292072124054027,
    "avg_bits_err_improve": 0.0018095547554928537,
    "time": 38934.544677734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.945028183788345,
    "avg_bits_err_output": 0.30325977500432677,
    "avg_bits_err_improve": 15.641768408784019,
    "time": 23003.30322265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (* (* (* (* (cos (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (/ 1.0 (cos (* PI (/ angle 180.0)))))) (* (cos (* PI (/ angle 180.0))) (/ 1.0 (cos (* PI (/ angle 180.0)))))) (* (cos (* PI (/ angle 180.0))) (/ 1.0 (cos (* PI (/ angle 180.0)))))) (* (cos (* PI (/ angle 180.0))) (/ 1.0 (cos (* PI (/ angle 180.0))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 47,
    "avg_bits_err_input": 20.515547362137298,
    "avg_bits_err_output": 20.516044390088588,
    "avg_bits_err_improve": -0.000497027951290363,
    "time": 71798.109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (+ (* (sin (* PI (/ angle 180.0))) (pow b 2.0)) (+ (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0))) (* (pow a 2.0) (sin (- (* PI (/ angle 180.0))))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 24,
    "avg_bits_err_input": 32.063659563320776,
    "avg_bits_err_output": 32.067251974239234,
    "avg_bits_err_improve": -0.0035924109184577446,
    "time": 48831.6904296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 20.54605131535058,
    "avg_bits_err_output": 20.559546197785288,
    "avg_bits_err_improve": -0.013494882434706312,
    "time": 56889.888427734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1838492043822976,
    "avg_bits_err_output": 0.1838492043822976,
    "avg_bits_err_improve": 0,
    "time": 32114.95263671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3173243178783786,
    "avg_bits_err_output": 0.3068214800231922,
    "avg_bits_err_improve": 0.010502837855186409,
    "time": 59796.7431640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13806372187554086,
    "avg_bits_err_output": 0.13806372187554086,
    "avg_bits_err_improve": 0,
    "time": 41747.905517578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos phi1) (cos (- lambda1 lambda2))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.69982691895783,
    "avg_bits_err_output": 16.696321838137578,
    "avg_bits_err_improve": 0.0035050808202505834,
    "time": 42067.5322265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.48820756036882,
    "avg_bits_err_output": 46.03575887357207,
    "avg_bits_err_improve": 6.45244868679675,
    "time": 29791.063720703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (fma b b (* a (* c -4.0))) (- b)) (+ a a))",
    "output_parens": 12,
    "avg_bits_err_input": 28.15600209448868,
    "avg_bits_err_output": 27.888940716655764,
    "avg_bits_err_improve": 0.26706137783291695,
    "time": 25306.16455078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (expm1 (log1p (* b (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))))) b)) (+ a a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.623192487426074,
    "avg_bits_err_output": 39.050803102370914,
    "avg_bits_err_improve": 4.5723893850551605,
    "time": 30783.07763671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (* c -4.0) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* b b)) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 34.15091079335884,
    "avg_bits_err_output": 33.832856752028725,
    "avg_bits_err_improve": 0.3180540413301145,
    "time": 24194.299072265625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (* (cos phi2) (/ (cos (- lambda1 lambda2)) (cos phi2))) (cos phi2) (cos phi1))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8504595051628373,
    "avg_bits_err_output": 0.855142678831968,
    "avg_bits_err_improve": -0.004683173669130736,
    "time": 44961.66064453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.14982067071498,
    "avg_bits_err_output": 29.14982067071498,
    "avg_bits_err_improve": 0,
    "time": 3368.16015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (expm1 (- x)) (+ (expm1 x) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 58.448047843824696,
    "avg_bits_err_output": 1.304575564063672,
    "avg_bits_err_improve": 57.14347227976103,
    "time": 10437.747314453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.18063737195172,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 58.17363737195172,
    "time": 7003.32666015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009521240625180288,
    "avg_bits_err_output": 0.009521240625180288,
    "avg_bits_err_improve": 0,
    "time": 2573.7705078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.13066524101186,
    "avg_bits_err_output": 32.13066524101186,
    "avg_bits_err_improve": 0,
    "time": 5547.1513671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(+ (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (- 0.5 (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))))) (- (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))))) 0.5))",
    "output_parens": 27,
    "avg_bits_err_input": 58.57730135833719,
    "avg_bits_err_output": 58.58823863212918,
    "avg_bits_err_improve": -0.010937273791995494,
    "time": 85081.63842773438,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026698120312590144,
    "avg_bits_err_output": 0.026698120312590144,
    "avg_bits_err_improve": 0,
    "time": 3283.620849609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.11932312031259014,
    "avg_bits_err_output": 0.11932312031259014,
    "avg_bits_err_improve": 0,
    "time": 40615.8583984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (- (+ (cos (atan (/ (* eh (- (tan t))) ew))) 1.0) 1.0)) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1252712406251803,
    "avg_bits_err_output": 0.12726184218813105,
    "avg_bits_err_improve": -0.00199060156295075,
    "time": 45608.022216796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.89351583101381,
    "avg_bits_err_output": 3.801823956046491,
    "avg_bits_err_improve": 35.09169187496732,
    "time": 52460.072509765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.201469142944786,
    "avg_bits_err_output": 14.201469142944786,
    "avg_bits_err_improve": 0,
    "time": 3477.797119140625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15155727584531054,
    "avg_bits_err_output": 0.1462474676845626,
    "avg_bits_err_improve": 0.005309808160747942,
    "time": 54274.569091796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.52465316488392,
    "avg_bits_err_output": 46.08994554256573,
    "avg_bits_err_improve": 6.434707622318193,
    "time": 32661.39892578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.28270455726747,
    "avg_bits_err_output": 28.2246283231184,
    "avg_bits_err_improve": 0.058076234149069705,
    "time": 24822.36767578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) 1.0))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.671751270778614,
    "avg_bits_err_output": 39.40252880821188,
    "avg_bits_err_improve": 4.269222462566731,
    "time": 44193.730712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (- (* b b) (* c (* a 3.0)))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.18203478559806,
    "avg_bits_err_output": 34.18203478559806,
    "avg_bits_err_improve": 0,
    "time": 27179.75048828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (cos (- lambda1 lambda2)) (sin phi1)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.058333628631958,
    "avg_bits_err_output": 13.059229652905334,
    "avg_bits_err_improve": -0.0008960242733753176,
    "time": 86429.81005859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (/ 1.0 (exp (- (/ (+ 1.0 x) (+ -1.0 x)) (/ x (+ 1.0 x))))))",
    "output_parens": 9,
    "avg_bits_err_input": 28.988357069377088,
    "avg_bits_err_output": 29.000575520773943,
    "avg_bits_err_improve": -0.012218451396854846,
    "time": 39311.996826171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (log1p (expm1 (/ 1.0 (+ -1.0 x)))) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.021519226984736083,
    "avg_bits_err_improve": -0.009769226984736083,
    "time": 5020.12451171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (- (- (/ 1.0 (+ -1.0 x))) (- (/ 1.0 (+ -1.0 x)) (- 1.0 (* (- (/ 1.0 (+ -1.0 x))) (+ (/ -1.0 (/ 1.0 (+ -1.0 x))) 2.0)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 14.406561586031108,
    "avg_bits_err_output": 3.3662104700309534,
    "avg_bits_err_improve": 11.040351116000155,
    "time": 30734.302734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1e-309) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (* 8.0 (* A C)) (* 2.0 (pow B 2.0)))) (sqrt (* F (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.35448496416277,
    "avg_bits_err_output": 47.730977144165394,
    "avg_bits_err_improve": 4.6235078199973785,
    "time": 48918.173828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.9966691977714,
    "avg_bits_err_output": 29.9966691977714,
    "avg_bits_err_improve": 0,
    "time": 44658.212646484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F 6.5e-239) (/ (- (pow (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* 2.0 (+ (+ (* (* A (* C -4.0)) F) (* (* A 4.0) (* C F))) (* (- (pow B 2.0) (* A (* C 4.0))) F)))) 0.5)) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (- (pow B 2.0) (* C (* A 4.0)))) (* (sqrt (fabs (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 55,
    "avg_bits_err_input": 52.60273035188702,
    "avg_bits_err_output": 48.56703414287621,
    "avg_bits_err_improve": 4.035696209010808,
    "time": 47640.445068359375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.795443944367163,
    "avg_bits_err_output": 15.795443944367163,
    "avg_bits_err_improve": 0,
    "time": 55083.93798828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.3e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 1.32e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (* (- g h) (* (- g h) (/ (+ g h) (- g h))))) g)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))))))",
    "output_parens": 70,
    "avg_bits_err_input": 36.48752067575829,
    "avg_bits_err_output": 15.911605259773944,
    "avg_bits_err_improve": 20.575915415984348,
    "time": 56490.681884765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9910877828190814,
    "avg_bits_err_output": 0.024448120312590145,
    "avg_bits_err_improve": 0.9666396625064912,
    "time": 6636.347900390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7174693609377705,
    "avg_bits_err_output": 0.7174693609377705,
    "avg_bits_err_improve": 0,
    "time": 3655.9208984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.130581512558171,
    "avg_bits_err_output": 11.130581512558171,
    "avg_bits_err_improve": 0,
    "time": 21155.247802734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.504616368894811,
    "avg_bits_err_output": 0.43307312031259015,
    "avg_bits_err_improve": 0.07154324858222083,
    "time": 12214.680908203125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.0000005) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 40,
    "avg_bits_err_input": 53.246138133384655,
    "avg_bits_err_output": 11.255328485601948,
    "avg_bits_err_improve": 41.990809647782704,
    "time": 17101.004638671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.657056111221792,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.657056111221792,
    "time": 3370.098388671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 0,
    "time": 18179.57470703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1232.170654296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 1e+166) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (* r w) (- 0.375 (* v 0.25))))) (- 1.0 v))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (- (* (+ (* r (* r w)) 1.0) w) w)) (- 1.0 v)))))",
    "output_parens": 29,
    "avg_bits_err_input": 12.816982311973051,
    "avg_bits_err_output": 6.334500376567272,
    "avg_bits_err_improve": 6.482481935405779,
    "time": 37665.84130859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.516347479053766,
    "avg_bits_err_output": 0.2760169119115761,
    "avg_bits_err_improve": 0.24033056714218987,
    "time": 90089.66918945312,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.34940208147552,
    "avg_bits_err_output": 18.34940208147552,
    "avg_bits_err_improve": 0,
    "time": 16328.345458984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (+ (* x (- (* 0.12900613773279798 (* x x)) x)) (* x x)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.25451515121455115,
    "avg_bits_err_output": 0.19612480725410125,
    "avg_bits_err_improve": 0.0583903439604499,
    "time": 33776.72216796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(+ (pow y 4.0) (+ (- (pow x 4.0) (pow y 4.0)) (- (pow y 4.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.002875,
    "avg_bits_err_output": 0.03646936093777043,
    "avg_bits_err_improve": -0.03359436093777043,
    "time": 13531.77392578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.666970671311079,
    "avg_bits_err_output": 9.97410253880116,
    "avg_bits_err_improve": 4.692868132509918,
    "time": 58144.448974609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (log (pow (exp (/ 1.0 eps)) (- (exp (- (* eps x) x)) (exp (- (fma eps x x)))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 30.225742800812153,
    "avg_bits_err_output": 0.9048488097810476,
    "avg_bits_err_improve": 29.320893991031106,
    "time": 32334.4521484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01925,
    "avg_bits_err_output": 0.01925,
    "avg_bits_err_improve": 0,
    "time": 7483.186767578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.025375,
    "avg_bits_err_output": 0.025375,
    "avg_bits_err_improve": 0,
    "time": 14331.49951171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.057125,
    "avg_bits_err_output": 0.057125,
    "avg_bits_err_improve": 0,
    "time": 13463.76513671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2587.83544921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3596.238525390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4798.217529296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.816005798380656,
    "avg_bits_err_output": 0.251875,
    "avg_bits_err_improve": 7.564130798380656,
    "time": 51641.3466796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.538505130238594,
    "avg_bits_err_output": 7.538505130238594,
    "avg_bits_err_improve": 0,
    "time": 45860.357421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x eps) (* eps (+ x eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.801908414872768,
    "avg_bits_err_output": 0.026875,
    "avg_bits_err_improve": 15.775033414872768,
    "time": 14020.934326171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (* (pow (pow (exp x) x) 10.0) (* (pow (pow (exp x) x) 10.0) (/ (/ (pow (pow (exp x) x) 10.0) (pow (pow (exp x) x) 10.0)) (pow (pow (exp x) x) 10.0)))) (cos x)) (pow (cos x) 2.0))",
    "output_parens": 24,
    "avg_bits_err_input": 3.5229290729726883,
    "avg_bits_err_output": 2.1292962566355285,
    "avg_bits_err_improve": 1.3936328163371599,
    "time": 62928.393798828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.824278310572428,
    "avg_bits_err_output": 14.824278310572428,
    "avg_bits_err_improve": 0,
    "time": 170730.1201171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 46.07436253481996,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 46.07436253481996,
    "time": 3604.730712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.92231583010681,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 38.92169083010681,
    "time": 3462.314453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.2985,
    "avg_bits_err_improve": 63.7015,
    "time": 7827.242431640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t t) 4e-32)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325161638259,
    "avg_bits_err_output": 0.42309473750504834,
    "avg_bits_err_improve": 61.42015687887754,
    "time": 21050.474609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (pow (+ (* b b) (* a (* c -4.0))) 0.5)) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.4079375625893,
    "avg_bits_err_output": 34.408898253405845,
    "avg_bits_err_improve": -0.0009606908165480377,
    "time": 20770.06884765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (* c -4.0) (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) (- (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* b b)) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 34.15091079335884,
    "avg_bits_err_output": 33.832856752028725,
    "avg_bits_err_improve": 0.3180540413301145,
    "time": 25088.390380859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3235.6796875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.913044624331306,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 39.902919624331304,
    "time": 6476.738037109375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.96967203494729,
    "avg_bits_err_output": 19.96967203494729,
    "avg_bits_err_improve": 0,
    "time": 3949.432861328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6203335493770865,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6203335493770865,
    "time": 5478.86279296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036125,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03525,
    "time": 7029.42919921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02189624062518029,
    "avg_bits_err_output": 0.011125,
    "avg_bits_err_improve": 0.01077124062518029,
    "time": 5617.001953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.014,
    "time": 5226.729736328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00025,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0,
    "time": 1334.278564453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40043665469173684,
    "avg_bits_err_output": 0.255625,
    "avg_bits_err_improve": 0.14481165469173685,
    "time": 9492.5009765625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (exp (log1p (expm1 (+ (log1p (- (cos x))) 1.0)))) (exp -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 30.191106099795643,
    "avg_bits_err_output": 30.191047146255116,
    "avg_bits_err_improve": 5.895354052753987e-05,
    "time": 33516.546142578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x x) eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 24.514198845606824,
    "avg_bits_err_output": 24.514198845606824,
    "avg_bits_err_improve": 0,
    "time": 27166.29052734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (/ 1.0 (sin x)) (* (+ 1.0 (* (sin x) (/ -1.0 (sin x)))) (pow (sin x) 2.0)))) (tan x))",
    "output_parens": 16,
    "avg_bits_err_input": 30.620194048603626,
    "avg_bits_err_output": 30.656884542811714,
    "avg_bits_err_improve": -0.0366904942080879,
    "time": 48345.96728515625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.008985521314888553,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.007860521314888553,
    "time": 2629.16845703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 4e-189) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n))))",
    "output_parens": 23,
    "avg_bits_err_input": 47.51389797100418,
    "avg_bits_err_output": 13.627266624110677,
    "avg_bits_err_improve": 33.8866313468935,
    "time": 50711.789306640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.23347368555568,
    "avg_bits_err_output": 26.233653405252657,
    "avg_bits_err_improve": -0.0001797196969768322,
    "time": 23543.828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a d) (+ (* b c) (* a (* d -2.0)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 25.817283732166857,
    "avg_bits_err_output": 25.8271114024811,
    "avg_bits_err_improve": -0.009827670314244585,
    "time": 21264.53564453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035,
    "avg_bits_err_output": 0.021386842188131014,
    "avg_bits_err_improve": 0.01361315781186899,
    "time": 15964.281005859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (+ (pow (- (* ux maxCos) ux) 2.0) (- (- (* ux (+ maxCos maxCos)) ux) ux)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.477731247355846,
    "avg_bits_err_output": 0.5304320020677138,
    "avg_bits_err_improve": 12.947299245288132,
    "time": 36853.325439453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (* uy 2.0) PI)) (sqrt (fma (fma ux maxCos (- ux)) (+ ux -1.0) (- (* (- ux (* ux maxCos)) (* ux maxCos)) (fma ux maxCos (- ux))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.512545684136345,
    "avg_bits_err_output": 0.3145954638734126,
    "avg_bits_err_improve": 13.197950220262932,
    "time": 49586.542724609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (+ (* (cos (- (* uy (* PI 2.0)) uy)) (sin uy)) (* (cos uy) (sin (* uy (fma PI 2.0 -1.0)))))))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.335919802336988,
    "avg_bits_err_output": 0.3574910043358201,
    "avg_bits_err_improve": -0.021571201998832112,
    "time": 115071.861328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.2037270697866437,
    "avg_bits_err_output": 0.20385206978664372,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 43471.005615234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5349836831455806,
    "avg_bits_err_output": 0.494762399516537,
    "avg_bits_err_improve": 0.04022128362904365,
    "time": 36198.726806640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (pow (* (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1))) 0.25) (cos (* u2 -6.28318530718)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3227656436061535,
    "avg_bits_err_output": 0.3351900138687756,
    "avg_bits_err_improve": -0.012424370262622109,
    "time": 50716.138427734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -2.0) 1.0)))",
    "output_parens": 20,
    "avg_bits_err_input": 0.35156261527631183,
    "avg_bits_err_output": 0.35191353464156905,
    "avg_bits_err_improve": -0.00035091936525721845,
    "time": 43049.263916015625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06832913801329205,
    "avg_bits_err_output": 0.04972732115257504,
    "avg_bits_err_improve": 0.018601816860717005,
    "time": 12071.95263671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (fma (exp (/ (- (fabs x)) s)) (+ s (fma s (exp (/ (- (fabs x)) s)) s)) s))",
    "output_parens": 16,
    "avg_bits_err_input": 0.16523170877488302,
    "avg_bits_err_output": 0.14207569314537585,
    "avg_bits_err_improve": 0.02315601562950717,
    "time": 35409.763427734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.682310690196305,
    "avg_bits_err_output": 0.6833658585772157,
    "avg_bits_err_improve": -0.001055168380910687,
    "time": 41336.536376953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15861638220756208,
    "avg_bits_err_output": 0.15347524502718632,
    "avg_bits_err_improve": 0.00514113718037576,
    "time": 34496.001708984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5935418963603016,
    "avg_bits_err_output": 2.5935418963603016,
    "avg_bits_err_improve": 0,
    "time": 54155.1328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (+ v v) (+ (- v) (+ (* (sinh (/ 1.0 v)) (+ v v)) (- v)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.4720714258862903,
    "avg_bits_err_output": 0.48873906438230624,
    "avg_bits_err_improve": -0.016667638496015935,
    "time": 53144.8095703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (- (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) 0.6931) (- (/ 1.0 v) (log (/ 1.0 (+ v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10872540520199615,
    "avg_bits_err_output": 0.10890185691678128,
    "avg_bits_err_improve": -0.000176451714785128,
    "time": 44961.036376953125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (log (pow alpha (* PI (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.4721451103973117,
    "avg_bits_err_output": 0.4237343968545791,
    "avg_bits_err_improve": 0.04841071354273263,
    "time": 33010.0546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* s (* (log1p (- (/ (- u 0.25) 0.75))) -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.316074137437004,
    "avg_bits_err_output": 0.5506228004920459,
    "avg_bits_err_improve": 0.765451336944958,
    "time": 40386.087646484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.215416280237807,
    "avg_bits_err_output": 0.19875,
    "avg_bits_err_improve": 12.016666280237807,
    "time": 55784.745361328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* PI (* s 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.14434114182003469,
    "avg_bits_err_output": 0.14620862790972458,
    "avg_bits_err_improve": -0.001867486089689896,
    "time": 51292.4775390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8396854338492937,
    "avg_bits_err_output": 0.8277430110765538,
    "avg_bits_err_improve": 0.011942422772739936,
    "time": 63399.1025390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (/ 1.0 PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.6941100610671365,
    "avg_bits_err_output": 0.5458117946265777,
    "avg_bits_err_improve": 0.14829826644055877,
    "time": 50304.34130859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.628203123889442,
    "avg_bits_err_output": 0.5400528319882714,
    "avg_bits_err_improve": 13.08815029190117,
    "time": 30320.18701171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.681134453204013,
    "avg_bits_err_output": 0.3030350057461876,
    "avg_bits_err_improve": 13.378099447457826,
    "time": 60436.21044921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.204926261487806,
    "avg_bits_err_output": 0.21175,
    "avg_bits_err_improve": 13.993176261487806,
    "time": 36361.439453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.649040992138502,
    "avg_bits_err_output": 0.545185315730021,
    "avg_bits_err_improve": 12.10385567640848,
    "time": 20722.102294921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+157) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (* l (/ (/ PI PI) l)) (* PI l))))) (if (<= (* PI l) 4e+115) (- (* PI l) (* (/ 1.0 (* F F)) (tan (+ (* l l) (- (* PI l) (* l l)))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI (* PI (fma l (exp (log1p (/ (/ l l) PI))) (- l)))))))))",
    "output_parens": 42,
    "avg_bits_err_input": 17.075932214308526,
    "avg_bits_err_output": 14.690734458196776,
    "avg_bits_err_improve": 2.3851977561117508,
    "time": 27873.23388671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21093872187554086,
    "avg_bits_err_output": 0.20784436093777042,
    "avg_bits_err_improve": 0.003094360937770435,
    "time": 41838.993896484375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 5e+285) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 14.431978838362001,
    "avg_bits_err_output": 12.64959499246988,
    "avg_bits_err_improve": 1.782383845892122,
    "time": 60038.74951171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.47967505940285,
    "avg_bits_err_output": 1.9252182436920322,
    "avg_bits_err_improve": 59.55445681571082,
    "time": 63745.73583984375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.6e-129) (/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ 1.0 x) (+ x -1.0)) (* t (+ t t))) (* l (- l (* (/ (+ 1.0 x) (+ x -1.0)) l)))))) (if (<= t 4.4e-139) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (fma 2.0 (* t t) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 50,
    "avg_bits_err_input": 42.7656167302722,
    "avg_bits_err_output": 35.27423906884552,
    "avg_bits_err_improve": 7.491377661426682,
    "time": 44267.220703125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 4.0281374659385,
    "avg_bits_err_output": 0.22020789531691698,
    "avg_bits_err_improve": 3.8079295706215834,
    "time": 38369.615234375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.9678373356809318,
    "avg_bits_err_output": 0.011808803594774204,
    "avg_bits_err_improve": 0.9560285320861576,
    "time": 13763.476806640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (+ 1.0 (* (/ t l) (/ t l))) 1.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.220808766035601,
    "avg_bits_err_output": 10.233594418688812,
    "avg_bits_err_improve": -0.012785652653210633,
    "time": 46482.358154296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -4e-310) (* (sqrt (- n)) (sqrt (* (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om)))) (* 2.0 U)))) (* (sqrt (+ n n)) (sqrt (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))))))",
    "output_parens": 33,
    "avg_bits_err_input": 34.04677738193184,
    "avg_bits_err_output": 28.17174410363209,
    "avg_bits_err_improve": 5.87503327829975,
    "time": 43464.74951171875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 47.5559019041451,
    "avg_bits_err_output": 38.844250098751694,
    "avg_bits_err_improve": 8.711651805393409,
    "time": 49815.64599609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+63) (/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))))",
    "output_parens": 44,
    "avg_bits_err_input": 31.979910067780295,
    "avg_bits_err_output": 30.362734339722714,
    "avg_bits_err_improve": 1.6171757280575818,
    "time": 46945.388427734375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5648131609608497,
    "avg_bits_err_output": 0.5171575218986195,
    "avg_bits_err_improve": 0.04765563906223014,
    "time": 41109.402587890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (+ n (- (* PI (+ n n)) n)) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5456900857066218,
    "avg_bits_err_output": 0.5510490916136053,
    "avg_bits_err_improve": -0.005359005906983461,
    "time": 63181.070556640625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- (cos (/ K 2.0)) 0.0) (fma (exp (- l)) (- J) (* (/ J (exp l)) (pow (exp l) 2.0)))) U)",
    "output_parens": 14,
    "avg_bits_err_input": 17.53336760725125,
    "avg_bits_err_output": 17.580531615370333,
    "avg_bits_err_improve": -0.04716400811908272,
    "time": 39123.643310546875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (- (* K (+ n (+ m 1.0))) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.488595464350512,
    "avg_bits_err_output": 15.54537506042657,
    "avg_bits_err_improve": -0.056779596076058425,
    "time": 14282.249267578125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(- (* (+ 1.0 (sqrt (+ 1.0 (pow (/ U (* 2.0 (* J (cos (/ K 2.0))))) 2.0)))) (* (cos (/ K 2.0)) (* J -2.0))) (* (cos (/ K 2.0)) (* J -2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 18.323688721875545,
    "avg_bits_err_output": 18.356974248439936,
    "avg_bits_err_improve": -0.03328552656439143,
    "time": 50949.483154296875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (- (+ (pow (/ (* M D) (+ d d)) 2.0) 1.0) 1.0)))))) (if (<= (/ h l) 5e-291) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (- (+ (pow (/ (* M D) (+ d d)) 2.0) 1.0) 1.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.83694474873081,
    "avg_bits_err_output": 9.131929443404411,
    "avg_bits_err_improve": 4.705015305326398,
    "time": 34277.093505859375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.374822214766585,
    "avg_bits_err_output": 19.374822214766585,
    "avg_bits_err_improve": 0,
    "time": 27421.980712890625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= M -1.15e-61) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))) (if (<= M -8e-216) (* (/ c0 (+ w w)) (/ (+ (/ (* d (* c0 d)) (* D (* h (* w D)))) (* (sqrt (- M (/ (* d (* d c0)) (* D (* D (* h w)))))) (sqrt (- (+ (/ (* d (* d c0)) (* D (* D (* h w)))) M))))) 1.0)) (* (/ c0 (+ w w)) (/ (+ (/ (* d (* c0 d)) (* D (* h (* w D)))) (sqrt (* (+ (/ (* d (* c0 d)) (* D (* h (* w D)))) M) (- (/ (* d (* c0 d)) (* D (* h (* w D)))) M)))) 1.0))))",
    "output_parens": 86,
    "avg_bits_err_input": 59.372895800855844,
    "avg_bits_err_output": 57.44440429146073,
    "avg_bits_err_improve": 1.9284915093951156,
    "time": 43810.466064453125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) -5e+53) (fma (sqrt (/ d l)) (* (pow (/ (* M D) (+ d d)) 2.0) (* (sqrt (/ d h)) (* (/ h l) -0.5))) (* (/ d h) (* (/ 1.0 (/ d h)) (sqrt (* (/ d h) (/ d l)))))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+193) (fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0)))",
    "output_parens": 84,
    "avg_bits_err_input": 26.50709304258459,
    "avg_bits_err_output": 25.208828516256688,
    "avg_bits_err_improve": 1.2982645263279018,
    "time": 50067.64013671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (/ 1.0 (- (* (/ 1.0 (hypot 1.0 x)) (- -1.0 (* x x)))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 15.410765365702012,
    "avg_bits_err_output": 15.410027516057259,
    "avg_bits_err_improve": 0.000737849644753652,
    "time": 25504.542724609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (sqrt (- 2.0 (* 6.0 (* v v)))) (+ (* v (* v -3.0)) 3.0)) PI))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9845050362151283,
    "avg_bits_err_output": 0.01222439715289865,
    "avg_bits_err_improve": 0.9722806390622296,
    "time": 11005.322998046875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* t (* v v))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4633783556607222,
    "avg_bits_err_output": 0.40079465706016004,
    "avg_bits_err_improve": 0.06258369860056218,
    "time": 26696.495361328125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011417481250360578,
    "avg_bits_err_output": 0.011417481250360578,
    "avg_bits_err_improve": 0,
    "time": 6796.67919921875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5266227886698662,
    "avg_bits_err_output": 0.5266227886698662,
    "avg_bits_err_improve": 0,
    "time": 11497.6982421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (fma k (+ k 10.0) 1.0))",
    "output_parens": 5,
    "avg_bits_err_input": 1.8686203510089219,
    "avg_bits_err_output": 1.851620351008922,
    "avg_bits_err_improve": 0.016999999999999904,
    "time": 11462.011474609375,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01684419868296054,
    "avg_bits_err_output": 0.01684419868296054,
    "avg_bits_err_improve": 0,
    "time": 13134.9638671875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18172445195251588,
    "avg_bits_err_output": 0.18172445195251588,
    "avg_bits_err_improve": 0,
    "time": 34502.504150390625,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (fma b (* b (* a a)) (pow b 4.0)) (* a (* (fma a a (* b b)) a))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1894806141215219,
    "avg_bits_err_output": 0.07430580161791617,
    "avg_bits_err_improve": 0.11517481250360573,
    "time": 33179.607421875,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* b (* b (+ 3.0 a)))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.19098629414064683,
    "avg_bits_err_output": 0.19111129414064684,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 32444.366455078125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.1530980595127,
    "avg_bits_err_output": 13.1530980595127,
    "avg_bits_err_improve": 0,
    "time": 26387.15673828125,
    "seed": 15,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.69647215902946,
    "avg_bits_err_output": 0.031625,
    "avg_bits_err_improve": 40.66484715902946,
    "time": 7507.79736328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.956759432176327,
    "avg_bits_err_output": 30.38738936223875,
    "avg_bits_err_improve": 1.5693700699375768,
    "time": 28296.54736328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (+ (* a c) (+ (- (* b_2 b_2) (* a c)) (* a (- c))))) b_2) a)",
    "output_parens": 11,
    "avg_bits_err_input": 34.406898499133696,
    "avg_bits_err_output": 34.4228984991337,
    "avg_bits_err_improve": -0.016000000000005343,
    "time": 19601.38134765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (+ (* a (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) c)) (+ (* (sqrt (- (* b_2 b_2) (* a c))) (* (sqrt (- (* b_2 b_2) (* a c))) (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) (* b_2 (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) (- b_2))))) (- (- b_2) (sqrt (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 40,
    "avg_bits_err_input": 34.130214017463175,
    "avg_bits_err_output": 33.18519342624162,
    "avg_bits_err_improve": 0.9450205912215566,
    "time": 19317.645751953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.26032868957306,
    "avg_bits_err_output": 30.92512239864211,
    "avg_bits_err_improve": 0.33520629093095167,
    "time": 29429.291748046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 4.3e+66) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (+ (+ 1.0 (/ 1.0 n)) -1.0)))) (+ (+ (pow (+ 1.0 x) (/ 1.0 n)) (- -2.0 (pow x (/ 1.0 n)))) 2.0))",
    "output_parens": 23,
    "avg_bits_err_input": 32.901508937959015,
    "avg_bits_err_output": 31.422540347148395,
    "avg_bits_err_improve": 1.47896859081062,
    "time": 73704.86938476562,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.93056365801526,
    "avg_bits_err_output": 0.015875,
    "avg_bits_err_improve": 29.91468865801526,
    "time": 6742.9140625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -1.28e+154) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x -13500000000000.0) (- (+ (* (pow (/ 1.0 x) 2.0) (+ 1.0 (/ -1.0 (/ 1.0 x)))) (/ 1.0 (+ 1.0 x))) (pow (/ 1.0 x) 2.0)) (if (<= x 0.001) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 1.2e+149) (- (+ (* (pow (/ 1.0 x) 2.0) (+ 1.0 (/ -1.0 (/ 1.0 x)))) (/ 1.0 (+ 1.0 x))) (pow (/ 1.0 x) 2.0)) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))))",
    "output_parens": 44,
    "avg_bits_err_input": 14.68472582155708,
    "avg_bits_err_output": 4.1174656508583345,
    "avg_bits_err_improve": 10.567260170698745,
    "time": 71916.77172851562,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.05257047549476,
    "avg_bits_err_output": 6.448650746977371,
    "avg_bits_err_improve": 32.60391972851739,
    "time": 25854.380615234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (fma (- -1.0 (cbrt x)) (* (- -1.0 (cbrt x)) (/ 1.0 (- -1.0 (* (* (cbrt x) (/ 1.0 (cbrt x))) (cbrt x))))) (cbrt (+ x 1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 30.197480960898407,
    "avg_bits_err_output": 29.93210111860063,
    "avg_bits_err_improve": 0.2653798422977758,
    "time": 28673.387939453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.07695533708086,
    "avg_bits_err_output": 30.07756415678765,
    "avg_bits_err_improve": -0.0006088197067875001,
    "time": 32111.114990234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.3501025909059,
    "avg_bits_err_output": 34.3501025909059,
    "avg_bits_err_improve": 0,
    "time": 24274.193603515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (fma (* -4.0 c) (* a (sqrt (/ 1.0 (fma b b (* c (* a -4.0)))))) (* b (* b (sqrt (/ 1.0 (fma b b (* c (* a -4.0))))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 33.77893227627691,
    "avg_bits_err_output": 32.76907633157453,
    "avg_bits_err_improve": 1.0098559447023803,
    "time": 33799.036376953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.27502969496562,
    "avg_bits_err_output": 0.02135620312590145,
    "avg_bits_err_improve": 61.25367349183971,
    "time": 26838.96484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00398418059162,
    "avg_bits_err_output": 0.06285997970034386,
    "avg_bits_err_improve": 62.94112420089128,
    "time": 32964.15625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.60424749611224,
    "avg_bits_err_output": 58.60424749611224,
    "avg_bits_err_improve": 0,
    "time": 19480.485595703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -7.2e-155) (- (+ (* (+ (/ 1.0 x) 2.0) (* (* (/ (/ 1.0 (+ (/ 1.0 x) 2.0)) (+ (/ 1.0 x) 2.0)) (+ (/ 1.0 x) 3.0)) (+ 1.0 (/ 1.0 x)))) (- -2.0 (/ 1.0 (tan x)))) (* (/ (/ 1.0 (+ (/ 1.0 x) 2.0)) (+ (/ 1.0 x) 2.0)) (- (+ (/ 1.0 x) 2.0)))) (if (<= x 1.85e-150) (fma (+ (/ 1.0 x) 2.0) (/ (+ (/ 1.0 x) 3.0) (+ (/ 1.0 x) 2.0)) (+ (- (+ 2.0 (/ 1.0 (tan x)))) (* (+ (/ 1.0 x) 2.0) (- (/ 1.0 (+ (/ 1.0 x) 2.0)))))) (- (+ (* (+ (/ 1.0 x) 2.0) (* (* (/ (/ 1.0 (+ (/ 1.0 x) 2.0)) (+ (/ 1.0 x) 2.0)) (+ (/ 1.0 x) 3.0)) (+ 1.0 (/ 1.0 x)))) (- -2.0 (/ 1.0 (tan x)))) (* (/ (/ 1.0 (+ (/ 1.0 x) 2.0)) (+ (/ 1.0 x) 2.0)) (- (+ (/ 1.0 x) 2.0))))))",
    "output_parens": 84,
    "avg_bits_err_input": 59.92112891366323,
    "avg_bits_err_output": 56.53894407415062,
    "avg_bits_err_improve": 3.382184839512611,
    "time": 67251.30639648438,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -1e-159) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (* (expm1 (* eps b)) (* (expm1 (* eps b)) (/ 1.0 (expm1 (* eps b))))))) (if (<= eps -7.8e-302) (/ (* eps (+ (pow (exp (+ a b)) eps) -1.0)) (* (expm1 (* eps a)) (+ (pow (exp b) eps) -1.0))) (if (<= eps 7.2e-109) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (pow (exp (+ a b)) eps) (pow (exp a) eps)) (expm1 (* eps b)))) (/ (* (* eps (expm1 (* eps (+ a b)))) (* (* eps (expm1 (* eps (+ a b)))) (/ 1.0 (* eps (expm1 (* eps (+ a b))))))) (* (expm1 (* eps a)) (expm1 (* eps b)))))))",
    "output_parens": 71,
    "avg_bits_err_input": 60.140743792295865,
    "avg_bits_err_output": 40.81566417295511,
    "avg_bits_err_improve": 19.325079619340755,
    "time": 49006.081787109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.01706065155699,
    "avg_bits_err_output": 0.09566561290634018,
    "avg_bits_err_improve": 40.92139503865065,
    "time": 7242.912841796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.7997733144941,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.7991483144941,
    "time": 2337.9814453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.25061422360539,
    "avg_bits_err_output": 0.021366638851527356,
    "avg_bits_err_improve": 29.22924758475386,
    "time": 25955.910400390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (+ (* (expm1 (- x)) (exp 1.0)) (* (expm1 x) (exp 1.0))) (exp -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 29.786134354770688,
    "avg_bits_err_output": 28.908035383041994,
    "avg_bits_err_improve": 0.8780989717286936,
    "time": 69666.58569335938,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.997585651399895,
    "avg_bits_err_output": 9.997585651399895,
    "avg_bits_err_improve": 0,
    "time": 42309.674560546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (- (tan (+ x eps)) (tan x)) (* (/ 1.0 (tan x)) (* (- 1.0 (* (tan x) (/ 1.0 (tan x)))) (pow (tan x) 2.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 36.81786670156528,
    "avg_bits_err_output": 36.85233010037206,
    "avg_bits_err_improve": -0.0344633988067784,
    "time": 45596.880615234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (- -1.0 (sqrt x)) (sqrt (+ x 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.252629808651058,
    "avg_bits_err_output": 29.561927612669386,
    "avg_bits_err_improve": 0.6907021959816717,
    "time": 52637.035400390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (- (* (cos eps) (sin x)) (sin x)))",
    "output_parens": 8,
    "avg_bits_err_input": 36.32264449718903,
    "avg_bits_err_output": 0.39928542773735287,
    "avg_bits_err_improve": 35.92335906945168,
    "time": 24128.46875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.81417387830634,
    "avg_bits_err_output": 19.67585040133837,
    "avg_bits_err_improve": 0.13832347696797243,
    "time": 28209.07568359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(exp (log (- (atan (+ N 1.0)) (atan N))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.39863673234765,
    "avg_bits_err_output": 15.398685858187015,
    "avg_bits_err_improve": -4.912583936445003e-05,
    "time": 46681.49853515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.97896328006593,
    "avg_bits_err_output": 1.323217114623692,
    "avg_bits_err_improve": 28.65574616544224,
    "time": 31530.37646484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (+ m -1.0) (* (- 1.0 (/ (- m (* m m)) v)) (* (+ m -1.0) (/ 1.0 (+ m -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.07897149133190084,
    "avg_bits_err_output": 0.09410535700325309,
    "avg_bits_err_improve": -0.015133865671352248,
    "time": 28109.80908203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.903204116975754,
    "avg_bits_err_output": 0.3044578953169171,
    "avg_bits_err_improve": 15.598746221658837,
    "time": 25100.42626953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (* (/ (/ (/ angle 180.0) PI) PI) (* PI PI))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.387206927066792,
    "avg_bits_err_output": 20.38649185265276,
    "avg_bits_err_improve": 0.0007150744140318466,
    "time": 62385.333251953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (- 0.0 (fma (cos (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (- (pow a 2.0) (pow b 2.0))) (fma (- (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) (cos (* PI (/ angle 180.0)))) (* (sin (* PI (/ angle 180.0))) (* (cos (* PI (/ angle 180.0))) (pow b 2.0)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 30.9352262690336,
    "avg_bits_err_output": 30.900238093336863,
    "avg_bits_err_improve": 0.034988175696735624,
    "time": 52174.269775390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (- (* (sin (* PI (/ angle 180.0))) (cos (fma (- (/ angle 180.0)) PI (* PI (/ angle 180.0))))) (* (sin (- (/ PI 2.0) (* PI (/ angle 180.0)))) (sin (fma (- (/ angle 180.0)) PI (* PI (/ angle 180.0))))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 31,
    "avg_bits_err_input": 20.48632514778673,
    "avg_bits_err_output": 20.627932232862747,
    "avg_bits_err_improve": -0.14160708507601782,
    "time": 71874.09350585938,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.18276502308887604,
    "avg_bits_err_output": 0.18223379506936926,
    "avg_bits_err_improve": 0.0005312280195067798,
    "time": 33503.547607421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (* (* (- -1.0 (tan x)) (* (- -1.0 (tan x)) (/ 1.0 (- -1.0 (tan x))))) (+ (tan x) -1.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.3224571174867323,
    "avg_bits_err_output": 0.38790416097315633,
    "avg_bits_err_improve": -0.06544704348642405,
    "time": 47545.47216796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13652124062518028,
    "avg_bits_err_output": 0.13652124062518028,
    "avg_bits_err_improve": 0,
    "time": 31415.5,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2)) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.75292398859684,
    "avg_bits_err_output": 16.75184946268735,
    "avg_bits_err_improve": 0.0010745259094910864,
    "time": 37348.828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.8e+16) (/ (- (sqrt (expm1 (* (log1p (fma a (* c -4.0) (* b b))) (* (log1p (fma a (* c -4.0) (* b b))) (* (/ 1.0 (log1p (fma c (* a -4.0) (* b b)))) (* (/ 1.0 (log1p (fma c (* a -4.0) (* b b)))) (/ 1.0 (/ 1.0 (log1p (fma c (* a -4.0) (* b b))))))))))) b) (+ a a)) (/ (- (+ (- 1.0 b) (sqrt (fma b b (* c (* a -4.0))))) 1.0) (* a 2.0)))",
    "output_parens": 44,
    "avg_bits_err_input": 52.74444090573376,
    "avg_bits_err_output": 51.15995894582612,
    "avg_bits_err_improve": 1.5844819599076416,
    "time": 31136.712158203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma b (* b (/ 1.0 (fma c (* a -4.0) (* b b)))) (* c (* (/ 1.0 (fma c (* a -4.0) (* b b))) (* a -4.0))))) (- b)) (+ a a))",
    "output_parens": 22,
    "avg_bits_err_input": 28.281940080108033,
    "avg_bits_err_output": 28.197943483703785,
    "avg_bits_err_improve": 0.08399659640424773,
    "time": 29853.139892578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (sqrt (fma a (* c -4.0) (* b b))) (* a (* (/ 1.0 (fma a (* c -4.0) (* b b))) (* c -4.0)))) (+ (- b) (* b (* (/ 1.0 (fma a (* c -4.0) (* b b))) (* b (sqrt (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 28,
    "avg_bits_err_input": 44.09986219561546,
    "avg_bits_err_output": 39.890353898140475,
    "avg_bits_err_improve": 4.209508297474983,
    "time": 27153.26806640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.37159669082678,
    "avg_bits_err_output": 34.37159669082678,
    "avg_bits_err_improve": 0,
    "time": 23447.858154296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (- (exp (log1p (cos (- lambda1 lambda2)))) 1.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9558991854781022,
    "avg_bits_err_output": 0.9660961961487711,
    "avg_bits_err_improve": -0.010197010670668916,
    "time": 38265.033447265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (log (exp (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 30.090555670984433,
    "avg_bits_err_output": 30.09139893093783,
    "avg_bits_err_improve": -0.000843259953398956,
    "time": 12100.670654296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.27648372474449,
    "avg_bits_err_output": 1.158063721875541,
    "avg_bits_err_improve": 57.118420002868945,
    "time": 11084.3095703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.126209404233144,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 58.119584404233144,
    "time": 6069.1162109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.015559970711631062,
    "avg_bits_err_output": 0.015559970711631062,
    "avg_bits_err_improve": 0,
    "time": 2497.7421875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (- (+ x (* x (* x (/ 1.0 (sqrt (fma x x -1.0)))))) (/ 1.0 (sqrt (fma x x -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 32.17,
    "avg_bits_err_output": 21.573094601472587,
    "avg_bits_err_improve": 10.596905398527415,
    "time": 9772.241943359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (/ (+ x 1.0) (- 1.0 x))) 0.5)",
    "output_parens": 5,
    "avg_bits_err_input": 58.59154683982613,
    "avg_bits_err_output": 58.59154683982613,
    "avg_bits_err_improve": 0,
    "time": 220880.47875976562,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- (fma x x -1.0))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.027521240625180292,
    "avg_bits_err_output": 0.027448120312590144,
    "avg_bits_err_improve": 7.312031259014765e-05,
    "time": 4616.540771484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12882312031259016,
    "avg_bits_err_output": 0.12882312031259016,
    "avg_bits_err_improve": 0,
    "time": 30248.441650390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (expm1 (log1p (cos (atan (/ (* eh (- (tan t))) ew)))))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.1260212406251803,
    "avg_bits_err_output": 0.12786560156295074,
    "avg_bits_err_improve": -0.001844360937770434,
    "time": 42296.7880859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.80015680612026,
    "avg_bits_err_output": 3.7637794875901585,
    "avg_bits_err_improve": 35.03637731853011,
    "time": 71325.15771484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (fma a a (* b (- b))) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.633290516393384,
    "avg_bits_err_output": 14.634613636705973,
    "avg_bits_err_improve": -0.0013231203125894098,
    "time": 6904.460205078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1623259767667463,
    "avg_bits_err_output": 0.15964670570445677,
    "avg_bits_err_improve": 0.0026792710622895177,
    "time": 48258.7724609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.72143720535621,
    "avg_bits_err_output": 46.22701097230706,
    "avg_bits_err_improve": 6.494426233049147,
    "time": 27175.4267578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma b b (* (* c a) -3.0))) (sqrt (* (fma b b (fma a (* c -3.0) 0.0)) (/ 1.0 (fma b b (* (* c a) -3.0))))) (- b)) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.434287850800708,
    "avg_bits_err_output": 28.44128276056743,
    "avg_bits_err_improve": -0.006994909766721236,
    "time": 33306.8720703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (pow (fma a (* c -3.0) (* b b)) -0.5))) (* b (+ -1.0 (* b (pow (fma a (* c -3.0) (* b b)) -0.5))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 44.163788074526806,
    "avg_bits_err_output": 39.81991540456377,
    "avg_bits_err_improve": 4.343872669963034,
    "time": 28226.789306640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.420186962105916,
    "avg_bits_err_output": 34.420186962105916,
    "avg_bits_err_improve": 0,
    "time": 28005.48291015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(if (<= (atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2))))) 1.57) (atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (- (+ (cos (- lambda1 lambda2)) 1.0) 1.0) (sin phi1))))) (if (<= (atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2))))) 1.570796326794897) (atan2 (* (/ (- (sin (- lambda1 lambda2)) (cos (+ (/ PI 2.0) (- PI (- lambda1 lambda2))))) 2.0) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (cos (- lambda1 lambda2)) (sin phi1))))) (atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (cos phi2) (* (/ (cos (- lambda1 lambda2)) (sin phi1)) (log (pow (exp (sin phi1)) (sin phi1)))))))))",
    "output_parens": 94,
    "avg_bits_err_input": 13.414988571793534,
    "avg_bits_err_output": 14.678358613213549,
    "avg_bits_err_improve": -1.2633700414200142,
    "time": 63093.541015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (expm1 (log1p (/ x (+ 1.0 x)))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.565583672812078,
    "avg_bits_err_output": 29.58109961105563,
    "avg_bits_err_improve": -0.015515938243552796,
    "time": 34701.70703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.012125,
    "avg_bits_err_output": 0.012125,
    "avg_bits_err_improve": 0,
    "time": 4865.458251953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.508512973173719,
    "avg_bits_err_output": 14.508512973173719,
    "avg_bits_err_improve": 0,
    "time": 66696.26831054688,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* 2.0 F)) (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.25923150834944,
    "avg_bits_err_output": 47.84958288082033,
    "avg_bits_err_improve": 4.4096486275291085,
    "time": 43776.04052734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 28.93617685401632,
    "avg_bits_err_output": 28.93617685401632,
    "avg_bits_err_improve": 0,
    "time": 39836.613525390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -7e-289) (/ (- (* (sqrt (- F)) (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* (sqrt (- (pow B 2.0) (* C (* A 4.0)))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.02030090309533,
    "avg_bits_err_output": 47.3140095298495,
    "avg_bits_err_improve": 4.706291373245833,
    "time": 55727.555419921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.826817317709503,
    "avg_bits_err_output": 15.826817317709503,
    "avg_bits_err_improve": 0,
    "time": 43830.253662109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -7.8e+150) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g -1e-262) (+ (* (* (cbrt (/ 1.0 (+ a a))) (/ (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)) (cbrt (/ 1.0 (+ a a))))) (cbrt (/ 1.0 (+ a a)))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 2e-139) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (if (<= g 2e+153) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (* (- (- g) (* (sqrt (- g h)) (sqrt (+ g h)))) (* (- (- g) (sqrt (- (* g g) (* h h)))) (/ 1.0 (- (- g) (sqrt (- (* g g) (* h h)))))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))))",
    "output_parens": 138,
    "avg_bits_err_input": 36.579882857277,
    "avg_bits_err_output": 14.839728114989196,
    "avg_bits_err_improve": 21.740154742287803,
    "time": 62823.31005859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9890996250072126,
    "avg_bits_err_output": 0.028344360937770437,
    "avg_bits_err_improve": 0.9607552640694421,
    "time": 18816.035400390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.5879777323043995,
    "avg_bits_err_output": 0.5879777323043995,
    "avg_bits_err_improve": 0,
    "time": 8055.31689453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.981464548096051,
    "avg_bits_err_output": 10.981464548096051,
    "avg_bits_err_improve": 0,
    "time": 19697.132568359375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4043473413791487,
    "avg_bits_err_output": 0.365875,
    "avg_bits_err_improve": 0.03847234137914868,
    "time": 12799.080810546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -6.8e-8) (- (log1p (+ (+ -1.0 (* x (exp 1.0))) (* (hypot 1.0 x) (exp 1.0)))) 1.0) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 53.552911619301796,
    "avg_bits_err_output": 13.726450812719968,
    "avg_bits_err_improve": 39.82646080658183,
    "time": 42442.86181640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.661859374034152,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.661859374034152,
    "time": 3281.6416015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (+ (+ (/ (- 1.0 x) (+ 1.0 x)) 2.0) -2.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.01375,
    "avg_bits_err_output": 0.01636560156295072,
    "avg_bits_err_improve": -0.002615601562950721,
    "time": 15896.310791015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1253.47998046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -1.5e+79) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (if (<= r 2e+107) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* w (* (- 0.375 (* v 0.25)) (* (* (- 0.375 (* v 0.25)) (/ (/ (* r (* r w)) (- 0.375 (* v 0.25))) (- 0.375 (* v 0.25)))) (- (fma v 0.25 -0.375))))) (- 1.0 v)))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (* w r) (* (* w r) (- 0.375 (* v 0.25)))) (- 1.0 v))))))",
    "output_parens": 52,
    "avg_bits_err_input": 12.788903629004727,
    "avg_bits_err_output": 6.3971383737244345,
    "avg_bits_err_improve": 6.391765255280292,
    "time": 34829.22265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0) (* x1 (* 2.0 (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0))))) (* (* x1 x1) -6.0)) (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0)))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.505693749776676,
    "avg_bits_err_output": 0.2687618881750369,
    "avg_bits_err_improve": 0.23693186160163915,
    "time": 80659.65283203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.173742226920712,
    "avg_bits_err_output": 18.173742226920712,
    "avg_bits_err_improve": 0,
    "time": 44317.841552734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (- (* x (+ (* x x) 1.0)) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.262886842188131,
    "avg_bits_err_output": 0.26298120312590145,
    "avg_bits_err_improve": -9.436093777043242e-05,
    "time": 41702.46875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 2444.6796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.359633506226235,
    "avg_bits_err_output": 9.647217193227586,
    "avg_bits_err_improve": 4.7124163129986485,
    "time": 41239.04638671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (- (fma eps x x)))) (exp (- (* eps x) x)))) (- (exp (- (fma eps x x))))) (exp (+ 1.0 (- (- (* eps x) x) 1.0)))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 29.37776484209796,
    "avg_bits_err_output": 0.9217961674616415,
    "avg_bits_err_improve": 28.455968674636317,
    "time": 37620.33349609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020875,
    "avg_bits_err_output": 0.020875,
    "avg_bits_err_improve": 0,
    "time": 7033.312744140625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.022125,
    "avg_bits_err_output": 0.022125,
    "avg_bits_err_improve": 0,
    "time": 20752.645263671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.02375,
    "avg_bits_err_output": 0.02375,
    "avg_bits_err_improve": 0,
    "time": 22717.3701171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3215.40966796875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3778.78759765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4387.221923828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.825823433141715,
    "avg_bits_err_output": 0.244,
    "avg_bits_err_improve": 7.581823433141715,
    "time": 68539.26538085938,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3515319460888335,
    "avg_bits_err_output": 7.3515319460888335,
    "avg_bits_err_improve": 0,
    "time": 31110.631103515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.847349048417943,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 15.834974048417942,
    "time": 15055.07177734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (pow (exp (* x x)) 10.0) (* (pow (pow (exp x) x) 10.0) (/ 1.0 (pow (exp (* x x)) 10.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 3.5123727756933536,
    "avg_bits_err_output": 2.1444133068514084,
    "avg_bits_err_improve": 1.3679594688419452,
    "time": 36805.434814453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.166612181515402,
    "avg_bits_err_output": 15.166612181515402,
    "avg_bits_err_improve": 0,
    "time": 36324.112060546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.42165213534209,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.42165213534209,
    "time": 5981.07861328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.114711767779134,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 39.114336767779136,
    "time": 4782.79541015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.302375,
    "avg_bits_err_improve": 63.697625,
    "time": 4099.05419921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843254462246236,
    "avg_bits_err_output": 0.4058492484399341,
    "avg_bits_err_improve": 61.4374052138063,
    "time": 17901.579833984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (fma (* -4.0 c) (* a (sqrt (/ 1.0 (fma b b (* c (* a -4.0)))))) (* b (* b (sqrt (/ 1.0 (fma b b (* c (* a -4.0))))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 33.77893227627691,
    "avg_bits_err_output": 32.76907633157453,
    "avg_bits_err_improve": 1.0098559447023803,
    "time": 39044.1005859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.37159669082678,
    "avg_bits_err_output": 34.37159669082678,
    "avg_bits_err_improve": 0,
    "time": 24910.5078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1790.30810546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.22072273549194,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 40.21109773549194,
    "time": 9664.13916015625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.40656451780972,
    "avg_bits_err_output": 20.409472600623033,
    "avg_bits_err_improve": -0.0029080828133132286,
    "time": 4976.0009765625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.671258470053417,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.671258470053417,
    "time": 6076.459228515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04025,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.03925,
    "time": 7995.36328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021219360937770434,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.008969360937770433,
    "time": 5285.609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x (* x x) (* x x))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.01475,
    "avg_bits_err_improve": -0.0002499999999999985,
    "time": 4339.705322265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 2056.6328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39365357187842565,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 0.14490357187842565,
    "time": 6408.187255859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (* (- (exp -1.0)) (* (exp 1.0) (log (pow (exp (* (exp 1.0) (- 1.0 (cos x)))) (- (/ (* (exp 1.0) (- 1.0 (cos x))) (* (exp 1.0) (- 1.0 (cos x))))))))) (exp -1.0))",
    "output_parens": 24,
    "avg_bits_err_input": 30.024454308598948,
    "avg_bits_err_output": 30.02754049499718,
    "avg_bits_err_improve": -0.0030861863982316606,
    "time": 31851.745361328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (* (pow (- (* x x) eps) 0.25) (pow (sqrt (fma x x (- eps))) 1.5))))",
    "output_parens": 10,
    "avg_bits_err_input": 24.370254713542884,
    "avg_bits_err_output": 24.40814365745422,
    "avg_bits_err_improve": -0.037888943911337236,
    "time": 28585.59228515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(- (+ (/ (- x (sin x)) (tan x)) 1.0) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.915080730161787,
    "avg_bits_err_output": 29.929772717473128,
    "avg_bits_err_improve": -0.014691987311341137,
    "time": 41880.655517578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.007375,
    "time": 4082.544189453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-271) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 4e-13) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 48.219958908061635,
    "avg_bits_err_output": 11.375453759318452,
    "avg_bits_err_improve": 36.84450514874318,
    "time": 52649.046142578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.993224218479938,
    "avg_bits_err_output": 25.993276098167346,
    "avg_bits_err_improve": -5.187968740827387e-05,
    "time": 29236.97900390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.82646100911031,
    "avg_bits_err_output": 25.82558600911031,
    "avg_bits_err_improve": 0.0008750000000006253,
    "time": 19192.483642578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037375,
    "avg_bits_err_output": 0.02080641359472751,
    "avg_bits_err_improve": 0.01656858640527249,
    "time": 11957.09912109375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (* (sin (* (+ uy uy) PI)) (* (sin (* (+ uy uy) PI)) (/ 1.0 (sin (* (+ uy uy) PI))))) (sqrt (fma ux (- (* ux maxCos) ux) (- ux (+ (* (- (fma ux maxCos 1.0) ux) (* ux maxCos)) (- (* ux maxCos) ux))))))",
    "output_parens": 25,
    "avg_bits_err_input": 13.446977237234336,
    "avg_bits_err_output": 0.5671643990935564,
    "avg_bits_err_improve": 12.87981283814078,
    "time": 39108.75927734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (fma ux (- (* ux maxCos) ux) (- ux (- (* ux (* maxCos (+ (- (* ux maxCos) ux) 2.0))) ux)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.488496597821669,
    "avg_bits_err_output": 0.3161813392936438,
    "avg_bits_err_improve": 13.172315258528025,
    "time": 50363.92919921875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (- PI (* PI (- 1.0 (* uy 2.0))))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* uy (* PI 2.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33099399119083023,
    "avg_bits_err_output": 0.3376454301424646,
    "avg_bits_err_improve": -0.006651438951634392,
    "time": 72116.76586914062,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.20555927976382687,
    "avg_bits_err_output": 0.20555927976382687,
    "avg_bits_err_improve": 0,
    "time": 32671.517578125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.5456668669841892,
    "avg_bits_err_output": 0.5456668669841892,
    "avg_bits_err_improve": 0,
    "time": 35464.07763671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (+ 1.0 (+ -1.0 (* (cos (* u2 6.28318530718)) (/ (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.3175356435446397,
    "avg_bits_err_output": 0.3222601554334482,
    "avg_bits_err_improve": -0.004724511888808514,
    "time": 55542.7431640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (+ -1.0 (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.3393021149501038,
    "avg_bits_err_output": 0.33835399463751364,
    "avg_bits_err_improve": 0.0009481203125901727,
    "time": 45960.03125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06095025814003622,
    "avg_bits_err_output": 0.06095025814003622,
    "avg_bits_err_improve": 0,
    "time": 19466.138671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (- s (* s (- -1.0 (exp (/ (- (fabs x)) s))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13555194388532374,
    "avg_bits_err_output": 0.12413329355072394,
    "avg_bits_err_improve": 0.011418650334599795,
    "time": 22668.64404296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6725417830419382,
    "avg_bits_err_output": 0.6725417830419382,
    "avg_bits_err_improve": 0,
    "time": 25303.046875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.1565655748760634,
    "avg_bits_err_output": 0.1529058344539579,
    "avg_bits_err_improve": 0.003659740422105512,
    "time": 45967.178955078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5370615514369237,
    "avg_bits_err_output": 2.5353462431838647,
    "avg_bits_err_improve": 0.0017153082530589892,
    "time": 46397.859375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (exp (log (* v (* (sinh (/ 1.0 v)) 2.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4635854936640751,
    "avg_bits_err_output": 0.4923523975308165,
    "avg_bits_err_improve": -0.02876690386674141,
    "time": 46241.9833984375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (- (- (/ 1.0 (+ v v)))) (* (exp (+ (/ (* cosTheta_i cosTheta_O) v) (- (- 0.6931 (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)))) (+ (+ (+ v v) -2.0) 2.0))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.12413746575755602,
    "avg_bits_err_output": 0.13505863208457355,
    "avg_bits_err_improve": -0.010921166327017534,
    "time": 49767.723388671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.45308520440294736,
    "avg_bits_err_output": 0.41478250783214227,
    "avg_bits_err_improve": 0.038302696570805095,
    "time": 24511.700439453125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (- (log (* (pow (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))) -3.0) (exp 1.0))) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 1.3284716984949052,
    "avg_bits_err_output": 1.3436807646776434,
    "avg_bits_err_improve": -0.015209066182738207,
    "time": 68577.8603515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.48234462060713,
    "avg_bits_err_output": 12.11736799769519,
    "avg_bits_err_improve": 0.36497662291193933,
    "time": 56489.492431640625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* s (* (* PI 6.0) r))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.14111506861303263,
    "avg_bits_err_output": 0.1420187321664786,
    "avg_bits_err_improve": -0.0009036635534459547,
    "time": 124231.71850585938,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma n1_i (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) (* n0_i (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9105841127247802,
    "avg_bits_err_output": 0.8934716655206537,
    "avg_bits_err_improve": 0.017112447204126524,
    "time": 40815.7470703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (- (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (log (pow (exp (/ 1.0 (sqrt PI))) (- (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.6943907046587724,
    "avg_bits_err_output": 0.54000823287562,
    "avg_bits_err_improve": 0.15438247178315234,
    "time": 105757.615234375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.523444399449476,
    "avg_bits_err_output": 0.5415152720929878,
    "avg_bits_err_improve": 12.981929127356487,
    "time": 29665.70263671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (- (+ (cos (* 2.0 (log (exp (* PI u2))))) -1.0) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 13.569321538697196,
    "avg_bits_err_output": 0.3230793923737714,
    "avg_bits_err_improve": 13.246242146323425,
    "time": 80674.29638671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.36378234277145,
    "avg_bits_err_output": 0.206625,
    "avg_bits_err_improve": 14.15715734277145,
    "time": 33207.237060546875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.555894410737363,
    "avg_bits_err_output": 0.5137439337230542,
    "avg_bits_err_improve": 12.042150477014308,
    "time": 22426.060302734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (- (* (+ (/ PI l) 1.0) l) l)))))",
    "output_parens": 11,
    "avg_bits_err_input": 15.773801323529252,
    "avg_bits_err_output": 12.147537155369648,
    "avg_bits_err_improve": 3.6262641681596044,
    "time": 31366.728271484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21324615082787057,
    "avg_bits_err_output": 0.21324615082787057,
    "avg_bits_err_improve": 0,
    "time": 30066.967529296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+286) (fma (/ 1.0 (tan B)) (- x) (* (/ F (sin B)) (pow (- (+ (+ (* x 2.0) 3.0) (* F F)) 1.0) -0.5))) (- (log (pow (exp (pow (fma x 2.0 (fma F F 2.0)) -0.5)) (/ F (sin B)))) (* x (/ 1.0 (tan B)))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.305414975164256,
    "avg_bits_err_output": 11.674504168795336,
    "avg_bits_err_improve": 1.6309108063689202,
    "time": 62314.00927734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (fma (exp (fma (/ PI 4.0) f 2.0)) (exp -2.0) (- (exp (* (/ PI 4.0) (- (* (- 1.0 f) (/ f f)) (/ f f))))))))))",
    "output_parens": 28,
    "avg_bits_err_input": 61.495448534344035,
    "avg_bits_err_output": 51.90957521160325,
    "avg_bits_err_improve": 9.585873322740788,
    "time": 97690.10864257812,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -6.4e-161) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 4.2e-164) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 51,
    "avg_bits_err_input": 43.08167959874521,
    "avg_bits_err_output": 35.38971298970511,
    "avg_bits_err_improve": 7.691966609040101,
    "time": 33127.9599609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.7811349724727923,
    "avg_bits_err_output": 0.22265601562950707,
    "avg_bits_err_improve": 3.558478956843285,
    "time": 44836.447265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9849839384753238,
    "avg_bits_err_output": 0.012653555837104547,
    "avg_bits_err_improve": 0.9723303826382192,
    "time": 13412.705078125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (+ 1.0 (+ (/ t l) -1.0))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 10.04127081872016,
    "avg_bits_err_output": 10.041020818720158,
    "avg_bits_err_improve": 0.0002500000000011937,
    "time": 26007.513427734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (* (sqrt (* n (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (sqrt (* 2.0 U))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+305) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0)))))",
    "output_parens": 74,
    "avg_bits_err_input": 34.158295003873945,
    "avg_bits_err_output": 29.48705038440373,
    "avg_bits_err_improve": 4.671244619470215,
    "time": 40519.245849609375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k))))))",
    "output_parens": 16,
    "avg_bits_err_input": 47.94815009988665,
    "avg_bits_err_output": 38.23265465605392,
    "avg_bits_err_improve": 9.71549544383273,
    "time": 55399.578369140625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 33.04164693993361,
    "avg_bits_err_output": 33.01045442390243,
    "avg_bits_err_improve": 0.0311925160311759,
    "time": 20939.10400390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a1) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5554900406482592,
    "avg_bits_err_output": 0.5233838375223577,
    "avg_bits_err_improve": 0.03210620312590151,
    "time": 51602.268798828125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)) (+ (+ (pow k -0.5) 1.0) -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5035408448820499,
    "avg_bits_err_output": 0.4781164993474002,
    "avg_bits_err_improve": 0.025424345534649673,
    "time": 31319.49462890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (fma (* J (exp l)) (cos (/ K 2.0)) (* (exp l) (* (cos (/ K 2.0)) (- J)))) (fma J (* (- (cos (/ K 2.0))) (exp (- l))) (* (cos (/ K 2.0)) (* J (exp l))))) U)",
    "output_parens": 25,
    "avg_bits_err_input": 17.975882678524336,
    "avg_bits_err_output": 17.995868315970586,
    "avg_bits_err_improve": -0.019985637446250593,
    "time": 43771.559326171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (* (- (/ (* K (+ m n)) 2.0) M) (* (* (- (/ (* K (+ m n)) 2.0) M) (/ 1.0 (- (/ (* K (+ m n)) 2.0) M))) (* (- (/ (* K (+ m n)) 2.0) M) (/ 1.0 (- (/ (* K (+ m n)) 2.0) M)))))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 37,
    "avg_bits_err_input": 15.11939821613272,
    "avg_bits_err_output": 15.112494278606986,
    "avg_bits_err_improve": 0.006903937525732928,
    "time": 36966.80908203125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* -2.0 (* (sqrt (+ 1.0 (pow (/ U (* J (* 2.0 (cos (/ K 2.0))))) 2.0))) (* J (cos (/ K 2.0)))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.053417481250364,
    "avg_bits_err_output": 18.053417481250364,
    "avg_bits_err_improve": 0,
    "time": 42120.076171875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ (* M D) (* 2.0 d)) -4e-114) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (if (<= (/ (* M D) (* 2.0 d)) 2e-139) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))) (* w0 (sqrt (- 1.0 (* (pow (* (/ (* M D) (+ d d)) (- (* (- (* 0.0 (/ 0.0 (/ (* M D) (+ d d)))) 0.0) (* (/ (* M D) (+ d d)) (/ (/ 1.0 (/ (* M D) (+ d d))) (/ (* M D) (+ d d))))) (* (* (/ (* M D) (+ d d)) (/ (/ 1.0 (/ (* M D) (+ d d))) (/ (* M D) (+ d d)))) (* (/ (/ (* M D) (+ d d)) (/ (* M D) (+ d d))) (- (/ (* M D) (+ d d))))))) 2.0) (/ h l)))))))",
    "output_parens": 90,
    "avg_bits_err_input": 14.461150724602188,
    "avg_bits_err_output": 9.91256683503429,
    "avg_bits_err_improve": 4.548583889567897,
    "time": 37231.486328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.365234728141775,
    "avg_bits_err_output": 18.365234728141775,
    "avg_bits_err_improve": 0,
    "time": 30745.978515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* D h)))) 2.0) (* M M)))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.66478830287663,
    "avg_bits_err_output": 56.283252897964104,
    "avg_bits_err_improve": 3.381535404912526,
    "time": 41622.220947265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+190) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (* (/ (/ d h) (/ d h)) (* (sqrt (/ d l)) (* (sqrt (/ d h)) (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 50,
    "avg_bits_err_input": 26.39968467194701,
    "avg_bits_err_output": 25.4450334225296,
    "avg_bits_err_improve": 0.9546512494174095,
    "time": 50977.70263671875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (+ (+ (/ 1.0 (hypot 1.0 x)) 2.0) -2.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 15.823127177455826,
    "avg_bits_err_output": 15.83991153306996,
    "avg_bits_err_improve": -0.016784355614134938,
    "time": 31723.27587890625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9849481203125902,
    "avg_bits_err_output": 0.011792481250360577,
    "avg_bits_err_improve": 0.9731556390622296,
    "time": 11582.729736328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- t (* t (* v v))) (* PI (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.45465630542840224,
    "avg_bits_err_output": 0.3826384506868021,
    "avg_bits_err_improve": 0.07201785474160016,
    "time": 34434.997802734375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (log (+ 1.0 (expm1 (sqrt (- 1.0 (* 3.0 (* v v))))))) (- 1.0 (* v v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.011594360937770434,
    "avg_bits_err_output": 0.012990601562950725,
    "avg_bits_err_improve": -0.0013962406251802912,
    "time": 9511.467529296875,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (+ 1.0 (- (/ (- 1.0 (* 5.0 (* v v))) (fma v v -1.0)) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.540316684964843,
    "avg_bits_err_output": 0.5600809572675205,
    "avg_bits_err_improve": -0.01976427230267752,
    "time": 15270.424072265625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.1102546721326263,
    "avg_bits_err_output": 2.0755353111948556,
    "avg_bits_err_improve": 0.03471936093777073,
    "time": 57646.379150390625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.01231245750865524,
    "avg_bits_err_output": 0.01231245750865524,
    "avg_bits_err_improve": 0,
    "time": 34205.079345703125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma a (* a (* b b)) (pow a 4.0))) 1.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.17756308742908467,
    "avg_bits_err_output": 0.06353675578915893,
    "avg_bits_err_improve": 0.11402633163992573,
    "time": 22961.64111328125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.18674727088642265,
    "avg_bits_err_output": 0.18674727088642265,
    "avg_bits_err_improve": 0,
    "time": 33148.2978515625,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(+ (* 4.0 (fma (* a a) (- 1.0 a) (* (* b b) (+ a 3.0)))) (- (* (+ (fma b (* b (* a a)) (pow b 4.0)) (* a (* (fma b b (* a a)) a))) 1.0) 1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.19231989481123013,
    "avg_bits_err_output": 0.0802493561960032,
    "avg_bits_err_improve": 0.11207053861522694,
    "time": 19756.15771484375,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma x x (* 4.0 (* p p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 12.608469703750725,
    "avg_bits_err_output": 12.619004046359777,
    "avg_bits_err_improve": -0.010534342609052061,
    "time": 15942.286376953125,
    "seed": 16,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (exp (log (/ (expm1 (+ x x)) (expm1 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 41.431867444974664,
    "avg_bits_err_output": 0.041448120312590146,
    "avg_bits_err_improve": 41.390419324662076,
    "time": 12299.52783203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (- (+ (sin x) 1.0) 1.0)) (- (+ (+ x -2.0) 2.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 32.18348031684792,
    "avg_bits_err_output": 26.415664581354864,
    "avg_bits_err_improve": 5.7678157354930555,
    "time": 28237.56982421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (fma a (- c) (* b_2 b_2))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.63248713143524,
    "avg_bits_err_output": 33.632164011122654,
    "avg_bits_err_improve": 0.0003231203125864113,
    "time": 19239.6474609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (+ (* (* a c) (/ 1.0 (sqrt (fma b_2 b_2 (* a (- c)))))) (+ (sqrt (fma b_2 b_2 (* a (- c)))) (* b_2 (* (/ 1.0 (sqrt (fma b_2 b_2 (* a (- c))))) (- b_2))))) (- (- b_2) (sqrt (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 29,
    "avg_bits_err_input": 33.83693593573938,
    "avg_bits_err_output": 33.41278059382659,
    "avg_bits_err_improve": 0.4241553419127939,
    "time": 24094.92626953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- (* (exp -1.0) (exp 1.0)) (* (exp -1.0) (- (* (+ (exp -1.0) 1.0) (* (cos x) (exp 2.0))) (* (cos x) (exp 2.0))))) (* x x))",
    "output_parens": 18,
    "avg_bits_err_input": 30.972926340166577,
    "avg_bits_err_output": 30.834506269200226,
    "avg_bits_err_improve": 0.138420070966351,
    "time": 17730.9306640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 880000000000.0) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (* (/ (/ 1.0 n) (/ 1.0 n)) (+ 1.0 (/ 1.0 n))) (/ (/ 1.0 n) (/ 1.0 n)))))) (- (pow (+ 1.0 x) (+ (+ 1.0 (/ 1.0 n)) -1.0)) (pow x (/ 1.0 n))))",
    "output_parens": 30,
    "avg_bits_err_input": 32.80354560491808,
    "avg_bits_err_output": 30.92592043905709,
    "avg_bits_err_improve": 1.8776251658609873,
    "time": 81178.16333007812,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.60636451278117,
    "avg_bits_err_output": 0.022875,
    "avg_bits_err_improve": 29.58348951278117,
    "time": 23681.862548828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.483121854825036,
    "avg_bits_err_output": 14.483121854825036,
    "avg_bits_err_improve": 0,
    "time": 52372.28369140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.31030765211852,
    "avg_bits_err_output": 6.262268310202285,
    "avg_bits_err_improve": 33.04803934191623,
    "time": 28273.37060546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log (exp (+ (cbrt (+ 1.0 x)) (- -1.0 (cbrt x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.89126835068925,
    "avg_bits_err_output": 29.58205822736059,
    "avg_bits_err_improve": 0.3092101233286577,
    "time": 30699.127197265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.11700333397715,
    "avg_bits_err_output": 30.11700333397715,
    "avg_bits_err_improve": 0,
    "time": 29530.606201171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.32765323271245,
    "avg_bits_err_output": 34.33133773121742,
    "avg_bits_err_improve": -0.003684498504966882,
    "time": 23892.610107421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* b b) (* a (* c -4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.79028626161961,
    "avg_bits_err_output": 34.013736022457635,
    "avg_bits_err_improve": -0.22344976083802237,
    "time": 27221.75048828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(log (exp (/ (log1p (- x)) (log1p x))))",
    "output_parens": 6,
    "avg_bits_err_input": 61.43207225054348,
    "avg_bits_err_output": 0.023733646876983188,
    "avg_bits_err_improve": 61.40833860366649,
    "time": 22834.470703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00466487177278,
    "avg_bits_err_output": 0.08260073286946593,
    "avg_bits_err_improve": 62.922064138903316,
    "time": 50401.86376953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (exp (+ -1.0 (/ (- 1.0 eps) (- eps -1.0))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.596153017157654,
    "avg_bits_err_output": 58.6012186320364,
    "avg_bits_err_improve": -0.00506561487874535,
    "time": 120728.33422851562,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -8.2e-155) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (* (/ 1.0 x) (/ 1.0 x)))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x))) (if (<= x 7.5e-154) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (- (* (/ 1.0 x) (+ 1.0 (/ 1.0 x))) (/ 1.0 x)))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x)))))",
    "output_parens": 37,
    "avg_bits_err_input": 59.85900928057009,
    "avg_bits_err_output": 56.61616827310366,
    "avg_bits_err_improve": 3.2428410074664313,
    "time": 62344.900146484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.058192328871215,
    "avg_bits_err_output": 41.182789852719225,
    "avg_bits_err_improve": 18.87540247615199,
    "time": 49428.62060546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.789398730570014,
    "avg_bits_err_output": 0.13979036598166197,
    "avg_bits_err_improve": 41.64960836458835,
    "time": 19370.410888671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.5733929586296,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.5727679586296,
    "time": 5207.4970703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.440749570452372,
    "avg_bits_err_output": 0.01680195072789178,
    "avg_bits_err_improve": 29.42394761972448,
    "time": 4851.734130859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.261318308666194,
    "avg_bits_err_output": 28.30423749512889,
    "avg_bits_err_improve": 0.9570808135373028,
    "time": 34643.239501953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.8563395808831,
    "avg_bits_err_output": 9.868947500685223,
    "avg_bits_err_improve": -0.01260791980212339,
    "time": 45570.88916015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan x) (- (tan (+ x eps)) (log1p (expm1 (* (tan x) 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 37.53202988348641,
    "avg_bits_err_output": 37.60458430865105,
    "avg_bits_err_improve": -0.07255442516463972,
    "time": 40537.444091796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- 1.0 (+ (fma (+ (sqrt x) 1.0) (/ (+ (sqrt x) 2.0) (+ (sqrt x) 1.0)) (- (sqrt (+ x 1.0)))) (* (+ (sqrt x) 1.0) (/ -1.0 (+ (sqrt x) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 29.986196283008077,
    "avg_bits_err_output": 29.278796606938815,
    "avg_bits_err_improve": 0.7073996760692616,
    "time": 28646.612060546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.6590889673482,
    "avg_bits_err_output": 0.3528258809580709,
    "avg_bits_err_improve": 36.306263086390125,
    "time": 30087.7392578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.679766766756835,
    "avg_bits_err_output": 19.540559772999647,
    "avg_bits_err_improve": 0.13920699375718826,
    "time": 29576.107421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ 1.0 N)) (- 1.0 (atan N))) (+ -1.0 (fma (- (* (+ (atan N) -1.0) (/ 1.0 (+ (atan N) -1.0)))) (+ (atan N) -1.0) (+ (atan N) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 14.616473437918307,
    "avg_bits_err_output": 14.625518004761732,
    "avg_bits_err_improve": -0.009044566843424917,
    "time": 38904.33837890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 30.030601608617232,
    "avg_bits_err_output": 1.4594250270877889,
    "avg_bits_err_improve": 28.571176581529443,
    "time": 49522.371337890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(+ -1.0 (- m (* (/ (- m (* m m)) v) (+ m -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.07089868437626201,
    "avg_bits_err_output": 0.07135282559915973,
    "avg_bits_err_improve": -0.0004541412228977193,
    "time": 26915.903076171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.222949566939832,
    "avg_bits_err_output": 0.31890601562950727,
    "avg_bits_err_improve": 15.904043551310325,
    "time": 16106.4443359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (expm1 (log1p (- (log (exp (+ (cos (* PI (/ angle 180.0))) 1.0))) 1.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.63888738572131,
    "avg_bits_err_output": 20.641705168865823,
    "avg_bits_err_improve": -0.00281778314451131,
    "time": 55373.77783203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log (+ 1.0 (expm1 (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 31.005119747765104,
    "avg_bits_err_output": 30.964364617539267,
    "avg_bits_err_improve": 0.04075513022583621,
    "time": 43011.419921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (- (expm1 (log (+ (cos (* (/ angle 180.0) PI)) 2.0))) 1.0)) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.73157717929106,
    "avg_bits_err_output": 20.73615177817158,
    "avg_bits_err_improve": -0.004574598880516589,
    "time": 52091.8935546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1753656015629507,
    "avg_bits_err_output": 0.1706172084824607,
    "avg_bits_err_improve": 0.004748393080489993,
    "time": 28215.064208984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.337931329582567,
    "avg_bits_err_output": 0.3252397200957485,
    "avg_bits_err_improve": 0.012691609486818523,
    "time": 63025.841064453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13375,
    "avg_bits_err_output": 0.13375,
    "avg_bits_err_improve": 0,
    "time": 36208.61572265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (fma (cos phi1) (* (cos phi1) (/ (* (cos phi2) (cos (- lambda1 lambda2))) (cos phi1))) 0.0))) R)",
    "output_parens": 15,
    "avg_bits_err_input": 17.303448346569223,
    "avg_bits_err_output": 17.311956723031226,
    "avg_bits_err_improve": -0.008508376462003753,
    "time": 41331.80419921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.41704766489184,
    "avg_bits_err_output": 45.999245453667854,
    "avg_bits_err_improve": 6.417802211223986,
    "time": 31662.1640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.070033190974513,
    "avg_bits_err_output": 27.416878900894776,
    "avg_bits_err_improve": 0.6531542900797369,
    "time": 24088.255126953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.1178578555359,
    "avg_bits_err_output": 39.67062183204925,
    "avg_bits_err_improve": 4.447236023486653,
    "time": 24065.28515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) 1e+300) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (- (+ (/ (- (log (pow (exp (/ (sqrt (/ 1.0 (fma a (* -4.0 c) (* b b)))) (fma a (* -4.0 c) (* b b)))) (pow (fma a (* -4.0 c) (* b b)) 2.0))) b) (+ a a)) 1.0) 1.0))",
    "output_parens": 41,
    "avg_bits_err_input": 34.33352993524726,
    "avg_bits_err_output": 33.479212184187084,
    "avg_bits_err_improve": 0.8543177510601794,
    "time": 44710.509521484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8863062573141274,
    "avg_bits_err_output": 0.8863062573141274,
    "avg_bits_err_improve": 0,
    "time": 47067.09130859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(expm1 (log1p (- (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.548493054417236,
    "avg_bits_err_output": 29.54116700028169,
    "avg_bits_err_improve": 0.007326054135546656,
    "time": 23225.041748046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (exp (log1p (+ (expm1 (- x)) (exp x)))))",
    "output_parens": 11,
    "avg_bits_err_input": 58.16080974381946,
    "avg_bits_err_output": 1.1557498072541017,
    "avg_bits_err_improve": 57.00505993656536,
    "time": 12532.877685546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.911683130642594,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 57.903808130642595,
    "time": 6806.990234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.00827124062518029,
    "avg_bits_err_output": 0.00827124062518029,
    "avg_bits_err_improve": 0,
    "time": 2402.3203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.5055,
    "avg_bits_err_output": 31.5055,
    "avg_bits_err_improve": 0,
    "time": 6067.130615234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (* (/ 1.0 (/ (+ x 1.0) (- 1.0 x))) (pow (/ (+ x 1.0) (- 1.0 x)) 2.0))) 0.5)",
    "output_parens": 11,
    "avg_bits_err_input": 58.581499101870136,
    "avg_bits_err_output": 58.59991105615662,
    "avg_bits_err_improve": -0.0184119542864849,
    "time": 113085.28344726562,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (pow (- 1.0 (* x x)) 0.5) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0595,
    "avg_bits_err_output": 0.0595,
    "avg_bits_err_improve": 0,
    "time": 5098.1484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ (/ eh ew) (tan t))))) (* eh (* (cos t) (sin (atan (/ (/ eh ew) (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13082312031259016,
    "avg_bits_err_output": 0.1281462406251803,
    "avg_bits_err_improve": 0.002676879687409872,
    "time": 35768.63720703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13344812031259015,
    "avg_bits_err_output": 0.1335,
    "avg_bits_err_improve": -5.1879687409855935e-05,
    "time": 13031.650146484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.331420605937446,
    "avg_bits_err_output": 3.889548600518053,
    "avg_bits_err_improve": 35.44187200541939,
    "time": 46388.857177734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (log (exp (/ (- (* a a) (* b b)) (* a a))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.897197625531357,
    "avg_bits_err_output": 13.899032384519495,
    "avg_bits_err_improve": -0.0018347589881386739,
    "time": 4852.14013671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (+ (fma (- (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1)))))) (sin phi1) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin delta) (* (cos phi1) (cos theta)) (* (cos delta) (sin phi1))))))))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.15194354739338634,
    "avg_bits_err_output": 0.1464343723817002,
    "avg_bits_err_improve": 0.005509175011686129,
    "time": 45825.60205078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) (- (* b (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.43019930029488,
    "avg_bits_err_output": 46.066594223304975,
    "avg_bits_err_improve": 6.363605076989906,
    "time": 30236.07568359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.225461096610402,
    "avg_bits_err_output": 28.165978643238756,
    "avg_bits_err_improve": 0.059482453371646926,
    "time": 28045.555908203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -4e-21) (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a)) (/ (- (* (+ (sqrt (fma -3.0 (* c a) (* b b))) (- 1.0 b)) (* (+ (sqrt (fma -3.0 (* c a) (* b b))) (- 1.0 b)) (/ 1.0 (+ (sqrt (log1p (expm1 (fma a (* -3.0 c) (* b b))))) (- 1.0 b))))) 1.0) (* 3.0 a)))",
    "output_parens": 44,
    "avg_bits_err_input": 44.135650546231574,
    "avg_bits_err_output": 42.0631774285239,
    "avg_bits_err_improve": 2.0724731177076734,
    "time": 33847.01806640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.36338207535971,
    "avg_bits_err_output": 34.36338207535971,
    "avg_bits_err_improve": 0,
    "time": 25667.608154296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 12.574238166279743,
    "avg_bits_err_output": 12.574697616736092,
    "avg_bits_err_improve": -0.0004594504563488755,
    "time": 52389.97900390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (- (+ 1.0 (/ x (+ 1.0 x))) 1.0) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 28.480170105057223,
    "avg_bits_err_output": 28.498196529229755,
    "avg_bits_err_improve": -0.01802642417253253,
    "time": 75213.0673828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": 0,
    "time": 6649.490966796875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (log1p (expm1 (/ 1.0 (+ -1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.24985535555293,
    "avg_bits_err_output": 14.254547750404315,
    "avg_bits_err_improve": -0.004692394851385728,
    "time": 39791.54443359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -4e-283) (/ (- (* (sqrt (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (+ A C))) (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* F -2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* 2.0 F)) (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 47,
    "avg_bits_err_input": 52.29320011853661,
    "avg_bits_err_output": 48.0020570688151,
    "avg_bits_err_improve": 4.291143049721512,
    "time": 48029.065673828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.835945267164455,
    "avg_bits_err_output": 29.835945267164455,
    "avg_bits_err_improve": 0,
    "time": 49442.290771484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 0.0) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (fabs (+ A (+ C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (sqrt (* 2.0 (* (+ A (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)) (* (- (pow B 2.0) (* 4.0 (* C A))) F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 68,
    "avg_bits_err_input": 52.51048112459206,
    "avg_bits_err_output": 47.96958925821721,
    "avg_bits_err_improve": 4.540891866374849,
    "time": 43403.244140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.627804421622432,
    "avg_bits_err_output": 15.627804421622432,
    "avg_bits_err_improve": 0,
    "time": 43766.51708984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))))",
    "output_parens": 42,
    "avg_bits_err_input": 36.08011519144055,
    "avg_bits_err_output": 22.076424636513753,
    "avg_bits_err_improve": 14.003690554926795,
    "time": 63692.24609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9912152265701634,
    "avg_bits_err_output": 0.028259601949631355,
    "avg_bits_err_improve": 0.962955624620532,
    "time": 15658.22607421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6922712406251803,
    "avg_bits_err_output": 0.6922712406251803,
    "avg_bits_err_improve": 0,
    "time": 4468.04833984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.372823166249141,
    "avg_bits_err_output": 11.372823166249141,
    "avg_bits_err_improve": 0,
    "time": 36908.197509765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4780040635518175,
    "avg_bits_err_output": 0.442625,
    "avg_bits_err_improve": 0.035379063551817524,
    "time": 30913.416015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -0.00182) (log (fma (* (+ 1.0 (+ x (hypot 1.0 x))) (* (exp -1.0) (exp 2.0))) (exp -1.0) -1.0)) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 16,
    "avg_bits_err_input": 52.93568994831417,
    "avg_bits_err_output": 13.323311227001696,
    "avg_bits_err_improve": 39.612378721312474,
    "time": 29624.957275390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.77550359204577,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.77550359204577,
    "time": 2254.81494140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.013875,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0,
    "time": 6506.2548828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1298.625244140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* (* r (* 0.375 w)) (* r w)) (* (* r w) (* (* v 0.25) (* r w)))) (- 1.0 v)))",
    "output_parens": 16,
    "avg_bits_err_input": 12.285871629202978,
    "avg_bits_err_output": 6.6813024597672594,
    "avg_bits_err_improve": 5.6045691694357185,
    "time": 33225.830322265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (+ (* (+ (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0) (* (+ x1 x1) (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)))) (* x1 (* -6.0 x1))) (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5128226024455851,
    "avg_bits_err_output": 0.3069417023576391,
    "avg_bits_err_improve": 0.20588090008794596,
    "time": 70372.79345703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.10776151392575,
    "avg_bits_err_output": 18.10776151392575,
    "avg_bits_err_improve": 0,
    "time": 32534.138671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.2234789628874018,
    "avg_bits_err_output": 0.2234789628874018,
    "avg_bits_err_improve": 0,
    "time": 30371.068115234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(+ (pow y 4.0) (- (- (pow x 4.0) (pow y 4.0)) (pow y 4.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0026981203125901448,
    "avg_bits_err_output": 0.020469360937770437,
    "avg_bits_err_improve": -0.01777124062518029,
    "time": 3889.28125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.28120578385956,
    "avg_bits_err_output": 9.71390390417213,
    "avg_bits_err_improve": 4.567301879687431,
    "time": 40495.270751953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ 1.0 (exp (- (* eps x) x))) (+ (* (exp (+ (- (* eps x)) (- x))) (- 1.0 (/ 1.0 eps))) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) -1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.59160663785604,
    "avg_bits_err_output": 0.9852005002906482,
    "avg_bits_err_improve": 28.60640613756539,
    "time": 27847.906005859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 0,
    "time": 9235.312255859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.016375,
    "avg_bits_err_output": 0.016375,
    "avg_bits_err_improve": 0,
    "time": 21384.826171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (+ 2.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.048375,
    "avg_bits_err_output": 0.043875,
    "avg_bits_err_improve": 0.004500000000000004,
    "time": 28159.564208984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3010.738037109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2698.873291015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4693.02001953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8035933305167395,
    "avg_bits_err_output": 0.245375,
    "avg_bits_err_improve": 7.558218330516739,
    "time": 70657.07885742188,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 7.0989590952705415,
    "avg_bits_err_output": 7.117674744333836,
    "avg_bits_err_improve": -0.018715649063294926,
    "time": 37218.863525390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.626894356708267,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": 15.616144356708267,
    "time": 16766.029541015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(fma (cos x) (pow (+ (expm1 (* x x)) 1.0) 10.0) (fma (- (expm1 (* 10.0 (* x x)))) (- (cos x)) (* (exp (log (expm1 (* 10.0 (* x x))))) (- (cos x)))))",
    "output_parens": 21,
    "avg_bits_err_input": 3.555339469037401,
    "avg_bits_err_output": 3.0657396014449567,
    "avg_bits_err_improve": 0.4895998675924442,
    "time": 34026.257568359375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.8233887960941,
    "avg_bits_err_output": 14.8233887960941,
    "avg_bits_err_improve": 0,
    "time": 62722.17431640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.17150046941011,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.17150046941011,
    "time": 5459.80322265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.086585328122624,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.08633532812262,
    "time": 3749.708251953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.287625,
    "avg_bits_err_improve": 63.712375,
    "time": 4743.253173828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325163339247,
    "avg_bits_err_output": 0.3983872187554087,
    "avg_bits_err_improve": 61.44486441463706,
    "time": 17398.51123046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* b b) (* a (* c -4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 33.79028626161961,
    "avg_bits_err_output": 34.013736022457635,
    "avg_bits_err_improve": -0.22344976083802237,
    "time": 26365.50537109375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) 1e+300) (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) (- (+ (/ (- (log (pow (exp (/ (sqrt (/ 1.0 (fma a (* -4.0 c) (* b b)))) (fma a (* -4.0 c) (* b b)))) (pow (fma a (* -4.0 c) (* b b)) 2.0))) b) (+ a a)) 1.0) 1.0))",
    "output_parens": 41,
    "avg_bits_err_input": 34.33352993524726,
    "avg_bits_err_output": 33.479212184187084,
    "avg_bits_err_improve": 0.8543177510601794,
    "time": 44994.19677734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2667.126220703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.379538544695365,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 39.369913544695365,
    "time": 3403.4228515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.832435837777357,
    "avg_bits_err_output": 19.832435837777357,
    "avg_bits_err_improve": 0,
    "time": 4043.04248046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.7066968622617615,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.7066968622617615,
    "time": 4179.9296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.039,
    "time": 6150.26025390625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* a (* b (/ (+ a b) (+ a b)))) (+ (* a (+ a b)) (* b (* b (/ (+ a b) (+ a b))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020844360937770434,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0.003719360937770432,
    "time": 5618.296875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.016,
    "time": 6338.177490234375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.000375,
    "time": 4206.27783203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4018659781302286,
    "avg_bits_err_output": 0.263625,
    "avg_bits_err_improve": 0.13824097813022862,
    "time": 7524.486083984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.15436374729859,
    "avg_bits_err_output": 30.154363900539053,
    "avg_bits_err_improve": -1.5324046387377166e-07,
    "time": 11176.293212890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(+ (- x (sqrt (- (* x x) eps))) (- (* (+ (* (* x x) (/ -1.0 (- (* x x) eps))) 1.0) (* (- (* x x) eps) (/ 1.0 (sqrt (- (* x x) eps))))) (* (* (- (* x x) eps) (/ 1.0 (sqrt (- (* x x) eps)))) (* eps (/ -1.0 (- (* x x) eps))))))",
    "output_parens": 32,
    "avg_bits_err_input": 24.62497337338717,
    "avg_bits_err_output": 21.88391822473759,
    "avg_bits_err_improve": 2.741055148649579,
    "time": 22735.85546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(log (exp (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.982081294775853,
    "avg_bits_err_output": 30.004479841849687,
    "avg_bits_err_improve": -0.022398547073834152,
    "time": 43083.66748046875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00725,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.006625000000000001,
    "time": 3862.1474609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-17) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.579275910185075,
    "avg_bits_err_output": 11.451473418326692,
    "avg_bits_err_improve": 36.12780249185838,
    "time": 73448.21899414062,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.56655196064843,
    "avg_bits_err_output": 26.56655196064843,
    "avg_bits_err_improve": 0,
    "time": 41671.953857421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.48909648430748,
    "avg_bits_err_output": 25.48909648430748,
    "avg_bits_err_improve": 0,
    "time": 21464.093505859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037875,
    "avg_bits_err_output": 0.020860521314888556,
    "avg_bits_err_improve": 0.017014478685111443,
    "time": 36286.0380859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (* uy 2.0) PI)) (sqrt (- (* ux (- (fma ux maxCos 2.0) ux)) (- (* (fma ux maxCos 1.0) (- (fma ux maxCos 2.0) ux)) (- (fma ux maxCos 2.0) ux)))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.770385221272825,
    "avg_bits_err_output": 1.8807028084436412,
    "avg_bits_err_improve": 11.889682412829185,
    "time": 63011.173095703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (+ (* ux (- (fma ux maxCos 1.0) ux)) ux) (* (* ux maxCos) (- (fma ux maxCos 2.0) ux)))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.808443394040077,
    "avg_bits_err_output": 0.34863582848872177,
    "avg_bits_err_improve": 13.459807565551356,
    "time": 44996.3095703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* ux (- maxCos (* ux maxCos))) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33048018785438493,
    "avg_bits_err_output": 0.33093819888669235,
    "avg_bits_err_improve": -0.0004580110323074149,
    "time": 91256.24682617188,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (log (exp (cos (atan (* (tan (* PI (fma 2.0 u1 1.5))) (/ alphay alphax)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 41,
    "avg_bits_err_input": 0.19787968083262134,
    "avg_bits_err_output": 0.19909924248458788,
    "avg_bits_err_improve": -0.0012195616519665442,
    "time": 57456.436767578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (exp (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5395669897023756,
    "avg_bits_err_output": 0.4875653355386488,
    "avg_bits_err_improve": 0.05200165416372682,
    "time": 43124.7607421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (- (+ (* u2 -6.28318530718) 1.0) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3182523052562121,
    "avg_bits_err_output": 0.3197523052562121,
    "avg_bits_err_improve": -0.0015000000000000013,
    "time": 34923.626708984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (+ (+ -1.0 (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))) 1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3291006081264169,
    "avg_bits_err_output": 0.3299535344905731,
    "avg_bits_err_improve": -0.0008529263641561813,
    "time": 41673.888427734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.06253090445323171,
    "avg_bits_err_output": 0.06253090445323171,
    "avg_bits_err_improve": 0,
    "time": 21055.002685546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (- (fabs x)) s))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1602904943487237,
    "avg_bits_err_output": 0.1475920522684732,
    "avg_bits_err_improve": 0.012698442080250505,
    "time": 35427.299560546875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6678888130575138,
    "avg_bits_err_output": 0.6697037708744058,
    "avg_bits_err_improve": -0.0018149578168920044,
    "time": 25704.799072265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.151137259172071,
    "avg_bits_err_output": 0.1448124751468385,
    "avg_bits_err_improve": 0.006324784025232483,
    "time": 29921.4267578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5843473848796834,
    "avg_bits_err_output": 2.5843473848796834,
    "avg_bits_err_improve": 0,
    "time": 46000.072509765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) (exp (log v))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.45646508831999544,
    "avg_bits_err_output": 0.4593906584781978,
    "avg_bits_err_improve": -0.002925570158202384,
    "time": 67896.51806640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (* (exp 0.6931) (exp (- (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (/ (* sinTheta_i sinTheta_O) v)))) (/ 1.0 (+ v v)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1017916211995896,
    "avg_bits_err_output": 0.09893938715535655,
    "avg_bits_err_improve": 0.002852234044233043,
    "time": 12235.309326171875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* PI (* (log alpha) (* (- (- (* (* cosTheta cosTheta) (* alpha alpha)) -1.0) (* cosTheta cosTheta)) 2.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47458210654791216,
    "avg_bits_err_output": 0.4767136815200498,
    "avg_bits_err_improve": -0.0021315749721376176,
    "time": 26358.001953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (log (pow (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) -3.0))))",
    "output_parens": 8,
    "avg_bits_err_input": 1.3262383922843086,
    "avg_bits_err_output": 1.3269891934337368,
    "avg_bits_err_improve": -0.0007508011494281597,
    "time": 40726.336669921875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.264057598280885,
    "avg_bits_err_output": 0.200375,
    "avg_bits_err_improve": 12.063682598280886,
    "time": 38119.234130859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* PI (expm1 (log1p (* 6.0 (* r s)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1294345796303651,
    "avg_bits_err_output": 0.14672311413169045,
    "avg_bits_err_improve": -0.017288534501325364,
    "time": 48475.631103515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.946681081244515,
    "avg_bits_err_output": 0.9353972451419523,
    "avg_bits_err_improve": 0.011283836102562672,
    "time": 52824.743896484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.7156405514643401,
    "avg_bits_err_output": 0.5188691750169169,
    "avg_bits_err_improve": 0.19677137644742326,
    "time": 68031.61572265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (- (log1p (- u1))) 0.5) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.541846383590148,
    "avg_bits_err_output": 0.5241262408014903,
    "avg_bits_err_improve": 13.017720142788658,
    "time": 30484.723876953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.591794425307109,
    "avg_bits_err_output": 0.30692069451770987,
    "avg_bits_err_improve": 13.2848737307894,
    "time": 56734.31494140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.192672930035418,
    "avg_bits_err_output": 0.214125,
    "avg_bits_err_improve": 13.978547930035418,
    "time": 36313.88916015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.561665502677593,
    "avg_bits_err_output": 0.5445566370751921,
    "avg_bits_err_improve": 12.0171088656024,
    "time": 29690.489013671875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -4.5e-130) (- (* PI l) (* (pow F -2.0) (tan (* PI l)))) (if (<= F 3.6e-119) (- (* PI l) (* (* (/ 1.0 (* F F)) (- 0.0 (* (* (/ 1.0 (* F F)) (/ (/ 1.0 (/ 1.0 (* F F))) (/ 1.0 (* F F)))) (- (/ 1.0 (* F F)))))) (tan (* PI l)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))))",
    "output_parens": 39,
    "avg_bits_err_input": 16.87330777360657,
    "avg_bits_err_output": 17.146129352430457,
    "avg_bits_err_improve": -0.272821578823887,
    "time": 32502.951416015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.22167019050571782,
    "avg_bits_err_output": 0.21829248125036058,
    "avg_bits_err_improve": 0.003377709255357242,
    "time": 40844.955078125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 4e+303) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 14.174091690595713,
    "avg_bits_err_output": 12.545132209676897,
    "avg_bits_err_improve": 1.628959480918816,
    "time": 67818.69311523438,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (- (* f (+ (/ PI 4.0) 1.0)) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.491432612763994,
    "avg_bits_err_output": 2.172652383609334,
    "avg_bits_err_improve": 59.31878022915466,
    "time": 72001.23852539062,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.1e-98) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))))) (if (<= t 6.8e-170) (/ (* (sqrt 2.0) t) (sqrt (- (fma l l (* (/ (+ 1.0 x) (+ x -1.0)) (- (fma l l (* t (* 2.0 t))))))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 42.840952807663975,
    "avg_bits_err_output": 36.06510199542672,
    "avg_bits_err_improve": 6.775850812237252,
    "time": 49346.786376953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.980989365904106,
    "avg_bits_err_output": 0.21452161719245771,
    "avg_bits_err_improve": 3.7664677487116482,
    "time": 43091.218505859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.094125,
    "avg_bits_err_output": 0.00675,
    "avg_bits_err_improve": 1.087375,
    "time": 12724.631103515625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.622328598079049,
    "avg_bits_err_output": 10.62220359807905,
    "avg_bits_err_improve": 0.0001249999999988205,
    "time": 27608.49609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-323) (* (sqrt (* 2.0 (/ (- (* U (- t (* 2.0 (/ (* l l) Om)))) (* n (* (pow (/ l Om) 2.0) (* U (- U U*))))) (+ n n)))) (hypot n n)) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+302) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (* 2.0 (/ (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) (+ n n)))) (hypot n n))))",
    "output_parens": 79,
    "avg_bits_err_input": 34.67842107000908,
    "avg_bits_err_output": 25.391812126223094,
    "avg_bits_err_improve": 9.286608943785986,
    "time": 45527.439208984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (pow (/ k t) 2.0) (* (sin k) (* (/ (pow t 3.0) (* l l)) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))))",
    "output_parens": 30,
    "avg_bits_err_input": 47.336429510506825,
    "avg_bits_err_output": 38.143707669952335,
    "avg_bits_err_improve": 9.19272184055449,
    "time": 91834.337890625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+206) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k)))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (+ (fma (sin k) (tan k) (* (tan k) (- (sin k)))) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 32.277784931514574,
    "avg_bits_err_output": 30.609113539525058,
    "avg_bits_err_improve": 1.6686713919895162,
    "time": 39400.000244140625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a1) a1 (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5807400406482597,
    "avg_bits_err_output": 0.5506056422112101,
    "avg_bits_err_improve": 0.03013439843704957,
    "time": 41504.384765625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (- (* (+ 1.0 (* 2.0 PI)) n) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5224056608305663,
    "avg_bits_err_output": 0.5409175923002624,
    "avg_bits_err_improve": -0.018511931469696097,
    "time": 31184.063720703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- J) (fma (cos (/ K 2.0)) (exp l) (* (cos (/ K 2.0)) (- (- (exp (- l)) (exp l)) (exp l))))) U)",
    "output_parens": 16,
    "avg_bits_err_input": 17.31369576187562,
    "avg_bits_err_output": 17.326319129111017,
    "avg_bits_err_improve": -0.012623367235395477,
    "time": 36384.705322265625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (- (* (cos (+ (/ (* K (+ m n)) 2.0) (- 1.0 M))) (cos -1.0)) (* (sin (+ (/ (* K (+ m n)) 2.0) (- 1.0 M))) (sin -1.0))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 27,
    "avg_bits_err_input": 15.274467448716402,
    "avg_bits_err_output": 15.290871075318265,
    "avg_bits_err_improve": -0.016403626601862342,
    "time": 25537.9970703125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.00421936093777,
    "avg_bits_err_output": 18.00421936093777,
    "avg_bits_err_improve": 0,
    "time": 41747.458984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) 5e+299) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 14.127842899506629,
    "avg_bits_err_output": 9.521460537271567,
    "avg_bits_err_improve": 4.6063823622350615,
    "time": 40364.983642578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.331082942441245,
    "avg_bits_err_output": 19.331082942441245,
    "avg_bits_err_improve": 0,
    "time": 36496.501953125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) -1e-178) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (* (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M))))) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* c0 d)) (* (* D h) (* D w))) (sqrt (- (pow (/ (* d (* c0 d)) (* (* D h) (* D w))) 2.0) (* M M))))))",
    "output_parens": 75,
    "avg_bits_err_input": 59.43901740849568,
    "avg_bits_err_output": 55.86647519222338,
    "avg_bits_err_improve": 3.5725422162722964,
    "time": 40648.939453125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 5e+289) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (exp (* 1.0 (log (* 0.5 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0))))))))))",
    "output_parens": 49,
    "avg_bits_err_input": 26.404284773602452,
    "avg_bits_err_output": 24.924306874417226,
    "avg_bits_err_improve": 1.4799778991852257,
    "time": 49528.936767578125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (exp (+ 1.0 (log1p (- (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))))) (exp -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 15.707598007090736,
    "avg_bits_err_output": 15.711013412441105,
    "avg_bits_err_improve": -0.003415405350368772,
    "time": 83801.18798828125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (+ (* v (* v -3.0)) 3.0) (sqrt (- 2.0 (* 6.0 (* v v)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9818340531677464,
    "avg_bits_err_output": 0.012709053167746438,
    "avg_bits_err_improve": 0.969125,
    "time": 10604.373291015625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (fma (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI)) 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44198733279738894,
    "avg_bits_err_output": 0.3739632718538489,
    "avg_bits_err_improve": 0.06802406094354002,
    "time": 30033.482177734375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01320366957750995,
    "avg_bits_err_output": 0.01264624062518029,
    "avg_bits_err_improve": 0.00055742895232966,
    "time": 8842.402099609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5152070115660735,
    "avg_bits_err_output": 0.5152070115660735,
    "avg_bits_err_improve": 0,
    "time": 13693.947021484375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (- (+ (* a (pow k m)) (* a 1.0)) a) (+ (+ 1.0 (* k 10.0)) (* k k)))",
    "output_parens": 10,
    "avg_bits_err_input": 1.9546565265742808,
    "avg_bits_err_output": 2.045612642699916,
    "avg_bits_err_improve": -0.09095611612563537,
    "time": 24293.52880859375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.021912583770241124,
    "avg_bits_err_output": 0.021912583770241124,
    "avg_bits_err_improve": 0,
    "time": 11969.402099609375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.18203655590132128,
    "avg_bits_err_output": 0.18396343558873113,
    "avg_bits_err_improve": -0.0019268796874098437,
    "time": 23755.712158203125,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma (* b b) (* a a) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.18997040104138205,
    "avg_bits_err_output": 0.07829863205992087,
    "avg_bits_err_improve": 0.11167176898146118,
    "time": 39843.29833984375,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma b b (* a a)) b)) (fma b (* a (* b a)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18842033202660644,
    "avg_bits_err_output": 0.0778731041072642,
    "avg_bits_err_improve": 0.11054722791934224,
    "time": 24426.453857421875,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.208008860755024,
    "avg_bits_err_output": 13.208008860755024,
    "avg_bits_err_improve": 0,
    "time": 18767.320556640625,
    "seed": 17,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.59321119733226,
    "avg_bits_err_output": 0.056875,
    "avg_bits_err_improve": 40.53633619733226,
    "time": 6822.108642578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.68612750779363,
    "avg_bits_err_output": 30.113501671356726,
    "avg_bits_err_improve": 1.5726258364369023,
    "time": 55873.998046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- (* a (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) (- c))) b_2) (* b_2 (* b_2 (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 33.730158327203675,
    "avg_bits_err_output": 32.64559136703678,
    "avg_bits_err_improve": 1.084566960166896,
    "time": 23198.810302734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.53854291580848,
    "avg_bits_err_output": 33.53854291580848,
    "avg_bits_err_improve": 0,
    "time": 20725.739990234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp -1.0))) (exp 1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.106342939284794,
    "avg_bits_err_output": 30.790891552714104,
    "avg_bits_err_improve": 0.3154513865706896,
    "time": 20005.600341796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 1e+52) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (+ (/ 1.0 n) (- (+ 1.0 (* (/ 1.0 n) (+ (log1p x) -1.0))) 1.0)))) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (+ 1.0 (* (/ 1.0 n) (log1p x))) 1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 32.4629577493785,
    "avg_bits_err_output": 30.78603330246413,
    "avg_bits_err_improve": 1.6769244469143736,
    "time": 54186.772705078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.500741789756933,
    "avg_bits_err_output": 0.006875,
    "avg_bits_err_improve": 29.493866789756932,
    "time": 4601.264892578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (- (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ 1.0 x)) (- (/ 1.0 x) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.328016796907551,
    "avg_bits_err_output": 0.47736315896410814,
    "avg_bits_err_improve": 13.850653637943443,
    "time": 34934.572021484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (- (sin eps)) (sin x) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.60068821796507,
    "avg_bits_err_output": 6.135565763233379,
    "avg_bits_err_improve": 33.46512245473169,
    "time": 29205.2841796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (- (+ (cbrt (+ 1.0 x)) -1.0) (cbrt x)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.750049245808967,
    "avg_bits_err_output": 29.43577713976695,
    "avg_bits_err_improve": 0.31427210604201505,
    "time": 37406.21630859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.96797140621094,
    "avg_bits_err_output": 29.974280384488036,
    "avg_bits_err_improve": -0.00630897827709731,
    "time": 28811.886474609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70671116528833,
    "avg_bits_err_output": 33.70671116528833,
    "avg_bits_err_improve": 0,
    "time": 34351.983154296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.13804826137772,
    "avg_bits_err_output": 33.138047667366116,
    "avg_bits_err_improve": 5.940116025726638e-07,
    "time": 40853.0732421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.182643001630375,
    "avg_bits_err_output": 0.02356372187554087,
    "avg_bits_err_improve": 61.159079279754835,
    "time": 13062.19384765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.01021685974004,
    "avg_bits_err_output": 0.05692845492697532,
    "avg_bits_err_improve": 62.953288404813065,
    "time": 51081.16552734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.60315345304578,
    "avg_bits_err_output": 58.59890115649773,
    "avg_bits_err_improve": 0.00425229654804582,
    "time": 18419.841552734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ (- (/ 1.0 x) (/ 1.0 (tan x))) (- (/ 1.0 (+ 1.0 (/ 1.0 (tan x)))) (- (* (+ 1.0 (/ 1.0 (tan x))) (+ 1.0 (- (/ 1.0 (+ 1.0 (/ 1.0 (tan x))))))) (- (+ 1.0 (/ 1.0 (tan x))) (* (/ 1.0 (+ 1.0 (/ 1.0 (tan x)))) (+ (/ 1.0 (tan x)) 2.0))))))",
    "output_parens": 33,
    "avg_bits_err_input": 59.887347463261065,
    "avg_bits_err_output": 52.261475538870954,
    "avg_bits_err_improve": 7.625871924390111,
    "time": 87080.14233398438,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.538691125731525,
    "avg_bits_err_output": 40.50487944660691,
    "avg_bits_err_improve": 20.033811679124618,
    "time": 48951.383544921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (+ -1.0 (/ 1.0 (expm1 x))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 40.86726586985108,
    "avg_bits_err_output": 0.07913707963896373,
    "avg_bits_err_improve": 40.78812879021212,
    "time": 26275.22412109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64070708086842,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.639832080868416,
    "time": 2984.927490234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.486760751671497,
    "avg_bits_err_output": 0.022180644893423293,
    "avg_bits_err_improve": 29.464580106778072,
    "time": 6341.65185546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.683117156777303,
    "avg_bits_err_output": 28.74672544517191,
    "avg_bits_err_improve": 0.9363917116053919,
    "time": 25983.3369140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.791196462515073,
    "avg_bits_err_output": 9.791196462515073,
    "avg_bits_err_improve": 0,
    "time": 44143.5830078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (+ (tan (+ x eps)) (* (tan x) -3.0)) (* (tan x) (* 2.0 (- (* (tan x) (/ -3.0 (tan x))) -2.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 37.32211213782556,
    "avg_bits_err_output": 37.465312701608475,
    "avg_bits_err_improve": -0.14320056378291213,
    "time": 62313.98095703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (- (- x (- (sqrt x) (* x (/ 1.0 (sqrt (+ x 1.0)))))) x))",
    "output_parens": 12,
    "avg_bits_err_input": 29.89520388300476,
    "avg_bits_err_output": 25.567227842802073,
    "avg_bits_err_improve": 4.327976040202689,
    "time": 37748.701904296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.076021656316286,
    "avg_bits_err_output": 0.39816943011774464,
    "avg_bits_err_improve": 36.67785222619854,
    "time": 26282.459716796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.768123257986957,
    "avg_bits_err_output": 19.63318214441329,
    "avg_bits_err_improve": 0.13494111357366734,
    "time": 27866.67529296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (* (atan (+ N 1.0)) (/ 1.0 (- (- (atan (+ N 1.0)) 1.0) -1.0))) (atan (+ N 1.0)) (- (atan N)))",
    "output_parens": 13,
    "avg_bits_err_input": 14.990133460485552,
    "avg_bits_err_output": 14.98759137623364,
    "avg_bits_err_improve": 0.002542084251912158,
    "time": 22724.990966796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.77134824367137,
    "avg_bits_err_output": 1.4313300565131444,
    "avg_bits_err_improve": 28.340018187158226,
    "time": 27444.585205078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07404492500144229,
    "avg_bits_err_output": 0.07404492500144229,
    "avg_bits_err_improve": 0,
    "time": 34592.129638671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.864693567269725,
    "avg_bits_err_output": 0.307594737505048,
    "avg_bits_err_improve": 16.557098829764676,
    "time": 9753.478271484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (* (/ 1.0 PI) (* PI (/ angle 180.0)))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 14,
    "avg_bits_err_input": 20.318325708829597,
    "avg_bits_err_output": 20.31672697415921,
    "avg_bits_err_improve": 0.001598734670388069,
    "time": 51452.8134765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (fma (sin (* PI (/ angle 180.0))) (* 2.0 (- (pow b 2.0) (pow a 2.0))) (* 2.0 (fma (sin (- (* PI (/ angle 180.0)))) (pow a 2.0) (* (sin (* PI (/ angle 180.0))) (pow a 2.0))))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 24,
    "avg_bits_err_input": 31.073264448467892,
    "avg_bits_err_output": 31.084799219145808,
    "avg_bits_err_improve": -0.011534770677915418,
    "time": 51776.420166015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (log (exp (- (- (* (+ 1.0 (cos (fma (/ angle 180.0) PI 1.0))) (cos 1.0)) (cos 1.0)) (* (sin (fma (/ angle 180.0) PI 1.0)) (sin -1.0)))))) 2.0))",
    "output_parens": 24,
    "avg_bits_err_input": 20.21627943539432,
    "avg_bits_err_output": 20.208966313424714,
    "avg_bits_err_improve": 0.007313121969605874,
    "time": 64742.209228515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (* m (- (* m (/ (/ m m) m)) m)) v)) m)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17499060156295074,
    "avg_bits_err_output": 0.2168140984428183,
    "avg_bits_err_improve": -0.041823496879867555,
    "time": 30557.21728515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32144531176572927,
    "avg_bits_err_output": 0.3123491174138237,
    "avg_bits_err_improve": 0.009096194351905562,
    "time": 43300.92626953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13386560156295074,
    "avg_bits_err_output": 0.13386560156295074,
    "avg_bits_err_improve": 0,
    "time": 29681.2041015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (/ (sin phi2) (sin phi1)) (pow (sin phi1) 2.0)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 15,
    "avg_bits_err_input": 16.50614705770733,
    "avg_bits_err_output": 16.51317660406752,
    "avg_bits_err_improve": -0.007029546360190153,
    "time": 43642.1845703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.60920530351322,
    "avg_bits_err_output": 46.14366119707055,
    "avg_bits_err_improve": 6.465544106442671,
    "time": 26337.64453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma b (* b (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))) (- b)) (* a (* c (* -4.0 (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.32917868863751,
    "avg_bits_err_output": 27.616590530799755,
    "avg_bits_err_improve": 0.7125881578377538,
    "time": 29572.55078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -2e-20) (/ (* (- (sqrt (fma b b (* c (* a -4.0)))) b) (* (- (sqrt (fma b b (* c (* a -4.0)))) b) (/ 1.0 (- (sqrt (fma b b (* c (* a -4.0)))) b)))) (* a 2.0)) (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (fma a (* c -4.0) (* b b)) (- (+ 1.0 (/ 1.0 (fma c (* a -4.0) (* b b)))) 1.0))) (- b)) (+ a a)))",
    "output_parens": 50,
    "avg_bits_err_input": 43.78874762707837,
    "avg_bits_err_output": 42.41536610681642,
    "avg_bits_err_improve": 1.373381520261951,
    "time": 29521.96533203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70310996181358,
    "avg_bits_err_output": 33.70310996181358,
    "avg_bits_err_improve": 0,
    "time": 27262.156494140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (/ (cos (- lambda1 lambda2)) (cos phi2)) (pow (cos phi2) 2.0) (cos phi1))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8872506754157247,
    "avg_bits_err_output": 0.9091796171080783,
    "avg_bits_err_improve": -0.0219289416923536,
    "time": 33835.724365234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output_parens": 5,
    "avg_bits_err_input": 29.361745493776258,
    "avg_bits_err_output": 29.361745493776258,
    "avg_bits_err_improve": 0,
    "time": 46681.115966796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.118687058443555,
    "avg_bits_err_output": 1.2238255640636722,
    "avg_bits_err_improve": 56.89486149437988,
    "time": 10482.5927734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.0167606326519,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 58.0080106326519,
    "time": 7017.080810546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (exp (log (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.007469360937770434,
    "avg_bits_err_output": 0.010184444911123627,
    "avg_bits_err_improve": -0.0027150839733531933,
    "time": 3057.216064453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.55375,
    "avg_bits_err_output": 31.55375,
    "avg_bits_err_improve": 0,
    "time": 10321.569091796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (log1p (expm1 (/ (+ x 1.0) (- 1.0 x))))) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.59061824405141,
    "avg_bits_err_output": 58.594420140941956,
    "avg_bits_err_improve": -0.0038018968905433326,
    "time": 86269.40551757812,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (* (sqrt (- 1.0 (* x x))) (sqrt (* (- 1.0 (* x x)) (/ 1.0 (- 1.0 (* x x)))))) x)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.020625,
    "avg_bits_err_output": 0.020625,
    "avg_bits_err_improve": 0,
    "time": 4961.140869140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ (/ eh ew) (tan t))))) (* eh (* (cos t) (sin (atan (/ (/ eh ew) (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13032312031259013,
    "avg_bits_err_output": 0.1293962406251803,
    "avg_bits_err_improve": 0.0009268796874098428,
    "time": 44377.268798828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (log1p (expm1 (cos (atan (/ (* eh (- (tan t))) ew))))) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.12325,
    "avg_bits_err_output": 0.12396936093777043,
    "avg_bits_err_improve": -0.000719360937770433,
    "time": 32394.852294921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) (/ (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) 0.0) (- phi1 phi2)))",
    "output_parens": 16,
    "avg_bits_err_input": 39.03542395506298,
    "avg_bits_err_output": 3.6267191902702516,
    "avg_bits_err_improve": 35.40870476479273,
    "time": 58899.193115234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.14076196427245,
    "avg_bits_err_output": 14.142964589961812,
    "avg_bits_err_improve": -0.0022026256893621365,
    "time": 4453.169677734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (- (exp (log1p (* (cos phi1) (sin delta)))) 1.0) (cos theta)))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.15376049262704158,
    "avg_bits_err_output": 0.1579164521560576,
    "avg_bits_err_improve": -0.004155959529016012,
    "time": 45491.2294921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.643515077095074,
    "avg_bits_err_output": 46.16154716039699,
    "avg_bits_err_improve": 6.481967916698082,
    "time": 45253.529052734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma b b (* c (* a -3.0))) (/ 1.0 (fma b b (* c (* a -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.449788997139287,
    "avg_bits_err_output": 28.420691567724234,
    "avg_bits_err_improve": 0.029097429415053,
    "time": 55514.631103515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.86024444686531,
    "avg_bits_err_output": 39.489007074846114,
    "avg_bits_err_improve": 4.371237372019195,
    "time": 35584.91748046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.75598930418483,
    "avg_bits_err_output": 33.75598930418483,
    "avg_bits_err_improve": 0,
    "time": 22324.70361328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (- (+ (cos (- lambda1 lambda2)) 1.0) 1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 12.83495008420797,
    "avg_bits_err_output": 12.843312055177245,
    "avg_bits_err_improve": -0.00836197096927549,
    "time": 52822.193603515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(fma (/ x (+ 1.0 x)) (* (/ x (+ 1.0 x)) (/ 1.0 (/ x (+ 1.0 x)))) (- (/ (+ 1.0 x) (+ x -1.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 29.214774936467396,
    "avg_bits_err_output": 29.215989437817647,
    "avg_bits_err_improve": -0.0012145013502511404,
    "time": 12949.591796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01325,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": 0,
    "time": 6188.714599609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (fma (/ 1.0 (+ x -1.0)) (/ -1.0 (/ 1.0 (+ x -1.0))) (/ (/ 1.0 (+ x -1.0)) (/ 1.0 (+ x -1.0)))) (* (/ 1.0 (* (/ 1.0 (+ -1.0 x)) 2.0)) (* (/ 1.0 (* (/ 1.0 (+ -1.0 x)) 2.0)) (* (* (/ 1.0 (+ -1.0 x)) 2.0) (* 2.0 (pow (/ 1.0 (+ -1.0 x)) 2.0)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.2279152119211,
    "avg_bits_err_output": 14.15094710535125,
    "avg_bits_err_improve": 0.07696810656985065,
    "time": 32137.357666015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.7e-294) (/ (- (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (* (sqrt (- F)) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0)))) (* (sqrt F) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.022102674683836,
    "avg_bits_err_output": 47.481688021473914,
    "avg_bits_err_improve": 4.540414653209922,
    "time": 57664.949462890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.622284869091633,
    "avg_bits_err_output": 29.622284869091633,
    "avg_bits_err_improve": 0,
    "time": 48828.196533203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (* (sqrt (- F)) (sqrt (- (* A (* C 4.0)) (pow B 2.0)))) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt F)) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.20052644554488,
    "avg_bits_err_output": 46.866499284938776,
    "avg_bits_err_improve": 5.334027160606105,
    "time": 52325.74169921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 16.173155062949267,
    "avg_bits_err_output": 16.173155062949267,
    "avg_bits_err_improve": 0,
    "time": 57346.08154296875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -2e-279) (+ (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (/ (cbrt (/ 1.0 (+ a a))) (cbrt (- (sqrt (- (* g g) (* h h))) g))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 4e-156) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (if (<= g 2e+141) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g)))))))",
    "output_parens": 101,
    "avg_bits_err_input": 36.10844214362376,
    "avg_bits_err_output": 21.491840233066295,
    "avg_bits_err_improve": 14.616601910557467,
    "time": 52638.428466796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.990130264069442,
    "avg_bits_err_output": 0.02475,
    "avg_bits_err_improve": 0.965380264069442,
    "time": 15811.867919921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6863101077719279,
    "avg_bits_err_output": 0.6863101077719279,
    "avg_bits_err_improve": 0,
    "time": 9099.793212890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.756077792918333,
    "avg_bits_err_output": 11.756077792918333,
    "avg_bits_err_improve": 0,
    "time": 28038.564697265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4106678932626421,
    "avg_bits_err_output": 0.3514693609377705,
    "avg_bits_err_improve": 0.0591985323248716,
    "time": 8340.267822265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.188717752877125,
    "avg_bits_err_output": 15.54360469837109,
    "avg_bits_err_improve": 37.645113054506034,
    "time": 22352.024169921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.688435062155849,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.688435062155849,
    "time": 2611.16796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (+ (+ (sqrt (/ (- 1.0 x) (- x -1.0))) 2.0) -2.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.01525,
    "avg_bits_err_output": 0.034526128127343764,
    "avg_bits_err_improve": -0.019276128127343764,
    "time": 7299.5078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1258.816162109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+32) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* w (* (* w r) (- 0.375 (* v 0.25))))) (- 1.0 v))) (if (<= r 5e+64) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (- 0.375 (* v 0.25)) (* r (* r w)))) (- 1.0 v))) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v))))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.409354168210111,
    "avg_bits_err_output": 7.2165003765672715,
    "avg_bits_err_improve": 6.19285379164284,
    "time": 31142.2919921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5119075524366935,
    "avg_bits_err_output": 0.27280362525832286,
    "avg_bits_err_improve": 0.23910392717837065,
    "time": 72807.232421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.199758453382344,
    "avg_bits_err_output": 18.199758453382344,
    "avg_bits_err_improve": 0,
    "time": 24200.7421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.24974869440854447,
    "avg_bits_err_output": 0.18134436093777043,
    "avg_bits_err_improve": 0.06840433347077404,
    "time": 21268.664306640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0,
    "time": 4253.687255859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.513709106071017,
    "avg_bits_err_output": 9.681004936493464,
    "avg_bits_err_improve": 4.832704169577553,
    "time": 40310.08447265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (+ (- 1.0 (exp (- (fma eps x x)))) (exp (- (* eps x) x))) 1.0)) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.52543822715212,
    "avg_bits_err_output": 0.9301322624558728,
    "avg_bits_err_improve": 28.595305964696244,
    "time": 38197.624755859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 17759.687255859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017875,
    "avg_bits_err_output": 0.017875,
    "avg_bits_err_improve": 0,
    "time": 22009.940185546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.047625,
    "avg_bits_err_output": 0.047625,
    "avg_bits_err_improve": 0,
    "time": 9701.34619140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3224.05615234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3203.440673828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3747.922119140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.856874630548388,
    "avg_bits_err_output": 0.2415,
    "avg_bits_err_improve": 7.615374630548388,
    "time": 81172.84790039062,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (- (* (pow (+ x eps) 5.0) 2.0) (pow x 5.0)) (pow (+ x eps) 5.0))",
    "output_parens": 8,
    "avg_bits_err_input": 7.5660326112087155,
    "avg_bits_err_output": 7.565945570757508,
    "avg_bits_err_improve": 8.704045120744297e-05,
    "time": 30008.504638671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 15.333745352421747,
    "avg_bits_err_output": 0.014634601949631355,
    "avg_bits_err_improve": 15.319110750472117,
    "time": 18855.394287109375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ -1.0 (cos x)) (- (* (exp (log1p (cos x))) (* (cos x) (- (pow (pow (exp x) 10.0) x)))) (* (cos x) (- (pow (pow (exp x) 10.0) x)))))",
    "output_parens": 20,
    "avg_bits_err_input": 3.5732909029815776,
    "avg_bits_err_output": 2.0840677514570145,
    "avg_bits_err_improve": 1.489223151524563,
    "time": 63666.573486328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.903628770797948,
    "avg_bits_err_output": 14.903628770797948,
    "avg_bits_err_improve": 0,
    "time": 21251.172607421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.26257073515229,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.26257073515229,
    "time": 4924.490478515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.62585231336359,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.625352313363585,
    "time": 4662.62548828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.295125,
    "avg_bits_err_improve": 63.704875,
    "time": 4675.08740234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843251581151,
    "avg_bits_err_output": 0.39662988750216355,
    "avg_bits_err_improve": 61.44662169364884,
    "time": 19531.173828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (fma b b (* (* a c) -4.0)))) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.13804826137772,
    "avg_bits_err_output": 33.138047667366116,
    "avg_bits_err_improve": 5.940116025726638e-07,
    "time": 41406.86376953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.70310996181358,
    "avg_bits_err_output": 33.70310996181358,
    "avg_bits_err_improve": 0,
    "time": 25514.4248046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2242.242431640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.778903636442365,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 39.76665363644236,
    "time": 10503.751953125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.43269442652045,
    "avg_bits_err_output": 20.43269442652045,
    "avg_bits_err_improve": 0,
    "time": 9083.035400390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6682673616342902,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6682673616342902,
    "time": 4053.36572265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.037,
    "time": 8511.49365234375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma b b (* a (+ b (+ b a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.02454248125036058,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.02454248125036058,
    "time": 5812.38427734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013625,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": -0.0006250000000000006,
    "time": 6111.84716796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 2278.701171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ a c))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40139417344137657,
    "avg_bits_err_output": 0.235625,
    "avg_bits_err_improve": 0.16576917344137657,
    "time": 6985.65771484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.175013497041636,
    "avg_bits_err_output": 30.175013497041636,
    "avg_bits_err_improve": 0,
    "time": 23120.516357421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.807716904491198,
    "avg_bits_err_output": 24.80277194022622,
    "avg_bits_err_improve": 0.004944964264979035,
    "time": 31589.681884765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (fma (sin x) (/ -1.0 (sin x)) 1.0) (log (exp (* (pow (sin x) 2.0) (/ 1.0 (sin x))))))) (tan x))",
    "output_parens": 17,
    "avg_bits_err_input": 30.112599360710764,
    "avg_bits_err_output": 30.084351776723206,
    "avg_bits_err_improve": 0.028247583987557334,
    "time": 41449.218994140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005875,
    "avg_bits_err_output": 0.005875,
    "avg_bits_err_improve": 0,
    "time": 2222.3720703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.004) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.77211882117193,
    "avg_bits_err_output": 10.935300288666944,
    "avg_bits_err_improve": 36.836818532504985,
    "time": 48384.319580078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.981051375107914,
    "avg_bits_err_output": 25.981051375107914,
    "avg_bits_err_improve": 0,
    "time": 38660.89697265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.025556527964095,
    "avg_bits_err_output": 26.024983407651504,
    "avg_bits_err_improve": 0.0005731203125911577,
    "time": 22246.144775390625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.036,
    "avg_bits_err_output": 0.022500203512582077,
    "avg_bits_err_improve": 0.01349979648741792,
    "time": 6304.071533203125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (* (* ux (* (/ (- (fma ux maxCos 2.0) ux) (- (* ux maxCos) ux)) (+ maxCos -1.0))) (- (- ux) (* maxCos (- ux)))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.628666110642111,
    "avg_bits_err_output": 0.5367458445739225,
    "avg_bits_err_improve": 13.09192026606819,
    "time": 33397.3984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (- (- (* ux (+ maxCos (* (fma ux maxCos 1.0) (+ maxCos -1.0))))) (- (* ux (- (* ux maxCos))) ux)) (* ux ux))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.67249297037591,
    "avg_bits_err_output": 0.32235057369052683,
    "avg_bits_err_improve": 13.350142396685383,
    "time": 49876.849609375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (+ (fma uy (* PI 2.0) -1.0) 1.0)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* uy (* PI 2.0)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.33726015310460555,
    "avg_bits_err_output": 0.33193319039464914,
    "avg_bits_err_improve": 0.005326962709956418,
    "time": 67007.3837890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.20730650370629405,
    "avg_bits_err_output": 0.20718150370629404,
    "avg_bits_err_improve": 0.000125000000000014,
    "time": 32594.074462890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (* (sin (* 6.28318530718 u2)) (* (sin (* 6.28318530718 u2)) (/ 1.0 (sin (* 6.28318530718 u2))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5367695534358211,
    "avg_bits_err_output": 0.5605088202606509,
    "avg_bits_err_improve": -0.02373926682482974,
    "time": 40079.6142578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3323867862721689,
    "avg_bits_err_output": 0.3323867862721689,
    "avg_bits_err_improve": 0,
    "time": 66832.44921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3336518788743524,
    "avg_bits_err_output": 0.3338328112464738,
    "avg_bits_err_improve": -0.00018093237212141178,
    "time": 45090.2568359375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(pow (exp -1.0) (log1p (exp (/ (- x) s))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06429548788115326,
    "avg_bits_err_output": 0.05477634723382898,
    "avg_bits_err_improve": 0.00951914064732428,
    "time": 34599.166015625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.14993301787864208,
    "avg_bits_err_output": 0.13420184521062717,
    "avg_bits_err_improve": 0.01573117266801491,
    "time": 26349.843017578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6669101577778684,
    "avg_bits_err_output": 0.6669101577778684,
    "avg_bits_err_improve": 0,
    "time": 28446.78759765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(- (* v (log1p (* (- 1.0 u) (expm1 (/ -2.0 v))))) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15813005669845615,
    "avg_bits_err_output": 0.2744096165228757,
    "avg_bits_err_improve": -0.11627955982441956,
    "time": 39579.961181640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4823853075992357,
    "avg_bits_err_output": 2.4797694026941106,
    "avg_bits_err_improve": 0.0026159049051250882,
    "time": 50850.681884765625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46618866059225506,
    "avg_bits_err_output": 0.46618866059225506,
    "avg_bits_err_improve": 0,
    "time": 65724.25512695312,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (* (- (/ 1.0 (+ v v))) (+ (- 1.0 (/ 1.0 (/ 1.0 (+ v v)))) (* (/ 1.0 (+ v v)) (/ -1.0 (/ 1.0 (+ v v))))))))",
    "output_parens": 28,
    "avg_bits_err_input": 0.11093281078861096,
    "avg_bits_err_output": 0.11361645476371184,
    "avg_bits_err_improve": -0.0026836439751008745,
    "time": 44552.30078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.466228432430596,
    "avg_bits_err_output": 0.4182181896361626,
    "avg_bits_err_improve": 0.04801024279443339,
    "time": 22746.165771484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* (log1p (- (/ (+ u -0.25) 0.75))) -3.0) s)",
    "output_parens": 6,
    "avg_bits_err_input": 1.3193486567454937,
    "avg_bits_err_output": 0.5379740841230347,
    "avg_bits_err_improve": 0.781374572622459,
    "time": 115833.49169921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.206946242590604,
    "avg_bits_err_output": 0.20225,
    "avg_bits_err_improve": 12.004696242590605,
    "time": 42294.49951171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12661813465590116,
    "avg_bits_err_output": 0.12661813465590116,
    "avg_bits_err_improve": 0,
    "time": 69670.94482421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* u normAngle)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8848375306681342,
    "avg_bits_err_output": 0.8876744367978583,
    "avg_bits_err_improve": -0.0028369061297240927,
    "time": 43562.88232421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (/ 1.0 PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.6889490988543148,
    "avg_bits_err_output": 0.5285161645221349,
    "avg_bits_err_improve": 0.16043293433217987,
    "time": 48734.16064453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (* (sin (* 2.0 (* PI u2))) (* (sin (* 2.0 (* PI u2))) (/ 1.0 (sin (* 2.0 (* PI u2)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.639527819892129,
    "avg_bits_err_output": 0.560442838551407,
    "avg_bits_err_improve": 13.079084981340722,
    "time": 32719.2978515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (- (* u2 (+ 1.0 (* 2.0 PI))) u2)))",
    "output_parens": 10,
    "avg_bits_err_input": 13.688588634235135,
    "avg_bits_err_output": 0.3303079856877051,
    "avg_bits_err_improve": 13.35828064854743,
    "time": 29897.579345703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.112642639836032,
    "avg_bits_err_output": 0.20575,
    "avg_bits_err_improve": 13.906892639836032,
    "time": 26570.758056640625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.548936959150813,
    "avg_bits_err_output": 0.5055268806847097,
    "avg_bits_err_improve": 12.043410078466103,
    "time": 20809.75244140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (- (* l (+ (/ PI l) 1.0)) l)))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.827125798040637,
    "avg_bits_err_output": 12.985299829575194,
    "avg_bits_err_improve": 3.841825968465443,
    "time": 55037.933837890625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21240808281331133,
    "avg_bits_err_output": 0.21074060156295074,
    "avg_bits_err_improve": 0.0016674812503605918,
    "time": 39651.947021484375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 5e+264) (fma (- (/ 1.0 (tan B))) x (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B)))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.72987245158614,
    "avg_bits_err_output": 12.24974694160268,
    "avg_bits_err_improve": 1.4801255099834592,
    "time": 50716.83544921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (expm1 (log1p (log (/ (+ (pow (exp (/ PI 4.0)) f) (exp (* (/ PI 4.0) (- f)))) (+ (fma (- (exp -1.0)) (exp (- 1.0 (* (/ PI 4.0) f))) (pow (exp (- f)) (/ PI 4.0))) (- (pow (exp f) (/ PI 4.0)) (pow (exp (- f)) (/ PI 4.0))))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 61.54822637419554,
    "avg_bits_err_output": 51.917869651680164,
    "avg_bits_err_improve": 9.63035672251538,
    "time": 90642.26245117188,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.15e-139) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (- (* l (- (+ (- 2.0 l) (* (/ (+ 1.0 x) (+ -1.0 x)) l)) 1.0)) l)))) (if (<= t 3.2e-144) (/ (- (* (+ 1.0 (sqrt 2.0)) t) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (fma l (- l) (* l (* (/ (+ 1.0 x) (+ -1.0 x)) l)))))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 59,
    "avg_bits_err_input": 43.43996276536648,
    "avg_bits_err_output": 36.563935209564775,
    "avg_bits_err_improve": 6.876027555801706,
    "time": 36833.4228515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.8436816310052255,
    "avg_bits_err_output": 0.21328101562950708,
    "avg_bits_err_improve": 3.6304006153757182,
    "time": 35114.14697265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 1.0800849081295463,
    "avg_bits_err_output": 0.0065,
    "avg_bits_err_improve": 1.0735849081295463,
    "time": 14360.453857421875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.384251990995761,
    "avg_bits_err_output": 10.384780121214959,
    "avg_bits_err_improve": -0.0005281302191981752,
    "time": 28219.736083984375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= t -9e-290) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0))) (if (<= t 4.4e-35) (* (sqrt (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*))))) (sqrt (* n (* U 2.0)))) (if (<= t 4.25e+102) (sqrt (* 2.0 (- (* n (* (- U* U) (* U (* n (pow (/ l Om) 2.0))))) (* n (* U (- (* 2.0 (/ (* l l) Om)) t)))))) (* (sqrt (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*))))) (sqrt (* n (* U 2.0)))))))",
    "output_parens": 67,
    "avg_bits_err_input": 34.65783381182702,
    "avg_bits_err_output": 32.92145875494882,
    "avg_bits_err_improve": 1.7363750568781953,
    "time": 44053.702392578125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+57) (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0)) (sin k)) (tan k))) (/ 2.0 (* (pow (/ k t) 2.0) (+ (fma (- (pow (tan k) 2.0)) (/ (sin k) (tan k)) (* (tan k) (sin k))) (- (* (tan k) (* (sin k) (+ (/ (pow t 3.0) (* l l)) 1.0))) (* (tan k) (sin k)))))))",
    "output_parens": 53,
    "avg_bits_err_input": 47.600965719084996,
    "avg_bits_err_output": 37.27423324357537,
    "avg_bits_err_improve": 10.32673247550963,
    "time": 62394.859130859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (+ (fma (sin k) (tan k) (* (tan k) (sin (- k)))) (* (sin k) (* (tan k) (/ (pow t 3.0) (* l l)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 32.70258891534153,
    "avg_bits_err_output": 32.29001141568676,
    "avg_bits_err_improve": 0.4125774996547662,
    "time": 39066.1748046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (- (* a2 (* (/ (cos th) (sqrt 2.0)) (- a2)))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5150255672126525,
    "avg_bits_err_output": 0.49741936408675036,
    "avg_bits_err_improve": 0.01760620312590211,
    "time": 51499.96630859375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow k -0.5) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5365099251197049,
    "avg_bits_err_output": 0.49675334501074947,
    "avg_bits_err_improve": 0.039756580108955386,
    "time": 65288.697998046875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (cos (/ K 2.0))) (- (expm1 l) (expm1 (- l)))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.293928584652306,
    "avg_bits_err_output": 0.07358496250072115,
    "avg_bits_err_improve": 17.220343622151585,
    "time": 29332.247802734375,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (* (+ n m) (- (* (+ 1.0 (/ 1.0 K)) K) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 20,
    "avg_bits_err_input": 15.446249203110485,
    "avg_bits_err_output": 1.3021721632455376,
    "avg_bits_err_improve": 14.144077039864946,
    "time": 27811.721435546875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.973542481250362,
    "avg_bits_err_output": 17.973542481250362,
    "avg_bits_err_improve": 0,
    "time": 45895.12548828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)) 1.0) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 14.15935888795238,
    "avg_bits_err_output": 8.96675722880384,
    "avg_bits_err_improve": 5.19260165914854,
    "time": 37019.266845703125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.553756028197697,
    "avg_bits_err_output": 19.553756028197697,
    "avg_bits_err_improve": 0,
    "time": 28203.044189453125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (* (- (/ (* d (* d c0)) (* D (* D (* w h)))) M) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.488770402858144,
    "avg_bits_err_output": 56.6694105508569,
    "avg_bits_err_improve": 2.8193598520012415,
    "time": 39454.095947265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+250) (fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (sqrt (exp (/ h l))) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0))",
    "output_parens": 46,
    "avg_bits_err_input": 26.928219754942614,
    "avg_bits_err_output": 25.542467425800115,
    "avg_bits_err_improve": 1.3857523291424982,
    "time": 56293.2265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(exp (log (- 1.0 (sqrt (fma 0.5 (expm1 (log1p (/ 1.0 (hypot 1.0 x)))) 0.5)))))",
    "output_parens": 9,
    "avg_bits_err_input": 15.2251660647968,
    "avg_bits_err_output": 15.228092203565607,
    "avg_bits_err_improve": -0.002926138768806652,
    "time": 40885.096923828125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9836462406251804,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": 0.971125,
    "time": 14519.845947265625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44761267390050846,
    "avg_bits_err_output": 0.38067428127808234,
    "avg_bits_err_improve": 0.06693839262242612,
    "time": 24688.4736328125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* v 3.0)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012719360937770433,
    "avg_bits_err_output": 0.013542481250360578,
    "avg_bits_err_improve": -0.0008231203125901448,
    "time": 11080.84326171875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5217996194694392,
    "avg_bits_err_output": 0.5217996194694392,
    "avg_bits_err_improve": 0,
    "time": 12338.203369140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (* (log (exp (pow k m))) 1.0)) (+ (+ 1.0 (* k 10.0)) (* k k)))",
    "output_parens": 10,
    "avg_bits_err_input": 2.06863836397435,
    "avg_bits_err_output": 2.2136854165664754,
    "avg_bits_err_improve": -0.14504705259212525,
    "time": 14098.1103515625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (+ (+ (/ (+ mu (+ EDonor (- Vef Ec))) KbT) 2.0) -2.0)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.017803982015155383,
    "avg_bits_err_output": 0.017752102327745524,
    "avg_bits_err_improve": 5.1879687409859404e-05,
    "time": 12465.1044921875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (* b (* 4.0 b)) (- (pow (fma a a (* b b)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.1843212018417508,
    "avg_bits_err_output": 0.18517496121657046,
    "avg_bits_err_improve": -0.000853759374819657,
    "time": 24362.84619140625,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma b (* b (* a a)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1849417761643687,
    "avg_bits_err_output": 0.07552316750672863,
    "avg_bits_err_improve": 0.10941860865764005,
    "time": 30391.01513671875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18395327522396127,
    "avg_bits_err_output": 0.18395327522396127,
    "avg_bits_err_improve": 0,
    "time": 5778.796875,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma x x (* p (* 4.0 p))))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.511156673774472,
    "avg_bits_err_output": 13.514025263642404,
    "avg_bits_err_improve": -0.0028685898679317035,
    "time": 24826.210205078125,
    "seed": 18,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.110354816562136,
    "avg_bits_err_output": 0.063,
    "avg_bits_err_improve": 41.047354816562134,
    "time": 6522.090576171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (sin x) (* (/ 1.0 (* (sin x) 2.0)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (* (sin x) 2.0))))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 22,
    "avg_bits_err_input": 31.762109247225116,
    "avg_bits_err_output": 30.166127756055346,
    "avg_bits_err_improve": 1.5959814911697698,
    "time": 36860.056640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- (* b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) b_2) (* (* a c) (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.13426978784239,
    "avg_bits_err_output": 32.473863755477446,
    "avg_bits_err_improve": 1.6604060323649463,
    "time": 32067.7197265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* a c) (+ (- (* b_2 b_2) (* a c)) (* a (- c)))))) a)",
    "output_parens": 12,
    "avg_bits_err_input": 34.2973491957779,
    "avg_bits_err_output": 34.297922316090485,
    "avg_bits_err_improve": -0.000573120312587605,
    "time": 22204.6494140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (fma (* (cos x) (- (exp 1.0))) (exp -1.0) (exp 0.0)) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 31.54762944792096,
    "avg_bits_err_output": 31.22359228696528,
    "avg_bits_err_improve": 0.3240371609556796,
    "time": 24424.677978515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 6.6e+21) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 21,
    "avg_bits_err_input": 32.52726198764511,
    "avg_bits_err_output": 30.581212278686863,
    "avg_bits_err_improve": 1.946049708958249,
    "time": 34889.90478515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.188278670226154,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 29.179528670226155,
    "time": 13498.132080078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.899962691339875,
    "avg_bits_err_output": 14.899962691339875,
    "avg_bits_err_improve": 0,
    "time": 184482.9765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (- (* (cos eps) (cos x)) (cos x)))",
    "output_parens": 9,
    "avg_bits_err_input": 39.72788865800732,
    "avg_bits_err_output": 6.057830081524569,
    "avg_bits_err_improve": 33.67005857648275,
    "time": 28508.19775390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (cbrt (+ 1.0 x)) (- -1.0 (cbrt x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.449209773693745,
    "avg_bits_err_output": 29.161806043769925,
    "avg_bits_err_improve": 0.28740372992382035,
    "time": 35296.097412109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.38121018738277,
    "avg_bits_err_output": 29.38121018738277,
    "avg_bits_err_improve": 0,
    "time": 31771.2744140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.09578963633692,
    "avg_bits_err_output": 34.095156801186484,
    "avg_bits_err_improve": 0.0006328351504336638,
    "time": 25441.246337890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (* c (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* a 4.0))) (- (* b (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (- b))) b)) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 31.85545697384997,
    "avg_bits_err_improve": 2.00107027732815,
    "time": 40681.354248046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.26492470872319,
    "avg_bits_err_output": 0.02262744375108174,
    "avg_bits_err_improve": 61.24229726497211,
    "time": 19993.983642578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (+ (log1p n) (* n (- (log1p n) (log n)))) (- n (+ n 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 63.00460421687091,
    "avg_bits_err_output": 0.05686908784492756,
    "avg_bits_err_improve": 62.94773512902598,
    "time": 32226.696044921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.61421781599877,
    "avg_bits_err_output": 58.63377001871932,
    "avg_bits_err_improve": -0.01955220272054703,
    "time": 72801.16137695312,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -7.5e-155) (+ (/ 1.0 (/ 1.0 (tan x))) (- (/ 1.0 x) (* (/ 1.0 (/ 1.0 (tan x))) (+ 1.0 (pow (/ 1.0 (tan x)) 2.0))))) (if (<= x 1.02e-149) (exp (log (- (/ 1.0 x) (/ 1.0 (tan x))))) (+ (exp (- (log (/ 1.0 (tan x))))) (- (/ 1.0 x) (* (/ 1.0 (/ 1.0 (tan x))) (+ 1.0 (pow (/ 1.0 (tan x)) 2.0)))))))",
    "output_parens": 40,
    "avg_bits_err_input": 59.95428283110227,
    "avg_bits_err_output": 56.68863133199777,
    "avg_bits_err_improve": 3.2656514991045,
    "time": 119953.93359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -1.2e-295) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps 1.64e-212) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (* (* (expm1 (* eps a)) (/ (expm1 (* eps b)) (expm1 (* eps a)))) (+ -1.0 (pow (exp a) eps)))) (/ (fma (expm1 (* eps (+ a b))) (fma (expm1 (* eps (+ a b))) (* (expm1 (* eps (+ a b))) (/ (/ eps (expm1 (* eps (+ a b)))) (expm1 (* eps (+ a b))))) 0.0) 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 58,
    "avg_bits_err_input": 60.32324488120562,
    "avg_bits_err_output": 40.25848769386337,
    "avg_bits_err_improve": 20.064757187342245,
    "time": 49878.671630859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.37114770170423,
    "avg_bits_err_output": 0.11444052790774983,
    "avg_bits_err_improve": 41.25670717379648,
    "time": 11778.97314453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.694040926597964,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.693415926597964,
    "time": 3320.459228515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.25158828609527,
    "avg_bits_err_output": 0.01600607606577124,
    "avg_bits_err_improve": 29.2355822100295,
    "time": 3924.890380859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.636062920659565,
    "avg_bits_err_output": 28.665511150171987,
    "avg_bits_err_improve": 0.9705517704875781,
    "time": 23418.50244140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.084907377362468,
    "avg_bits_err_output": 10.084907377362468,
    "avg_bits_err_improve": 0,
    "time": 41132.93115234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.269582755506676,
    "avg_bits_err_output": 37.269582755506676,
    "avg_bits_err_improve": 0,
    "time": 51869.983642578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 29.50086927330795,
    "avg_bits_err_output": 25.287061667490644,
    "avg_bits_err_improve": 4.213807605817305,
    "time": 38139.40283203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (- (* (cos eps) (sin x)) (sin x)))",
    "output_parens": 8,
    "avg_bits_err_input": 37.201022185864595,
    "avg_bits_err_output": 0.41033947558582,
    "avg_bits_err_improve": 36.79068271027877,
    "time": 25439.779541015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.403880175719536,
    "avg_bits_err_output": 20.267225549351533,
    "avg_bits_err_improve": 0.13665462636800285,
    "time": 30576.73046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0))))) (atan N))",
    "output_parens": 11,
    "avg_bits_err_input": 14.088187256374939,
    "avg_bits_err_output": 14.091368116412584,
    "avg_bits_err_improve": -0.0031808600376450613,
    "time": 26459.407958984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.37658192425628,
    "avg_bits_err_output": 1.2947736393344336,
    "avg_bits_err_improve": 28.081808284921845,
    "time": 28835.968017578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 (/ (- m (* m m)) v)) (* (- 1.0 m) (* (- 1.0 m) (/ -1.0 (- 1.0 m)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.0742920849918798,
    "avg_bits_err_output": 0.08456068912007972,
    "avg_bits_err_improve": -0.010268604128199924,
    "time": 44659.788818359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.250279562481776,
    "avg_bits_err_output": 0.31243665469173687,
    "avg_bits_err_improve": 15.937842907790039,
    "time": 19250.0185546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (- (/ angle 180.0)) (+ (- -1.0 (/ PI (/ angle 180.0))) 1.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.38239609746375,
    "avg_bits_err_output": 20.429291831091138,
    "avg_bits_err_improve": -0.046895733627387415,
    "time": 59472.571044921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (log1p (expm1 (sin (* PI (/ angle 180.0))))) -2.0)) (- (exp (log1p (cos (* PI (/ angle 180.0))))) 1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 31.088215511093885,
    "avg_bits_err_output": 31.087940001779767,
    "avg_bits_err_improve": 0.00027550931411823854,
    "time": 45139.859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) (* (/ angle 180.0) (fma PI (* PI (/ (/ 1.0 (/ angle 180.0)) PI)) 0.0))))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.56853517139335,
    "avg_bits_err_output": 20.938663477229518,
    "avg_bits_err_improve": -0.3701283058361682,
    "time": 69184.31787109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17595056406367185,
    "avg_bits_err_output": 0.17476045370222215,
    "avg_bits_err_improve": 0.0011901103614496977,
    "time": 29827.018798828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (+ 1.0 (pow (tan x) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3189410841024603,
    "avg_bits_err_output": 0.3193160841024603,
    "avg_bits_err_improve": -0.0003750000000000142,
    "time": 53689.694091796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.14049060156295073,
    "avg_bits_err_output": 0.14049060156295073,
    "avg_bits_err_improve": 0,
    "time": 37524.004150390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.351595573944635,
    "avg_bits_err_output": 16.348689768928722,
    "avg_bits_err_improve": 0.002905805015913643,
    "time": 40662.996337890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.37542226341931,
    "avg_bits_err_output": 45.923481650290555,
    "avg_bits_err_improve": 6.451940613128755,
    "time": 39495.587158203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma c (* a -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.841902841350603,
    "avg_bits_err_output": 28.840967632422426,
    "avg_bits_err_improve": 0.0009352089281762233,
    "time": 22242.533203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.7664966882125,
    "avg_bits_err_output": 39.51161257491141,
    "avg_bits_err_improve": 4.254884113301088,
    "time": 24535.744873046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.09730309892419,
    "avg_bits_err_output": 34.095156801186484,
    "avg_bits_err_improve": 0.0021462977377098014,
    "time": 24450.85693359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (expm1 (log1p (cos (- lambda1 lambda2))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9115798475594101,
    "avg_bits_err_output": 0.9198628458134994,
    "avg_bits_err_improve": -0.008282998254089291,
    "time": 36358.220703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (log (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x)))))) -1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 28.889383349182452,
    "avg_bits_err_output": 28.890710559014746,
    "avg_bits_err_improve": -0.0013272098322936188,
    "time": 70820.39868164062,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.0612262879322,
    "avg_bits_err_output": 1.2429293234384917,
    "avg_bits_err_improve": 56.81829696449371,
    "time": 7703.552001953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.71578129667867,
    "avg_bits_err_output": 0.00825,
    "avg_bits_err_improve": 57.707531296678674,
    "time": 9913.18994140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.007719360937770434,
    "avg_bits_err_output": 0.09378928621442392,
    "avg_bits_err_improve": -0.08606992527665348,
    "time": 10609.203857421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.89775,
    "avg_bits_err_output": 31.89775,
    "avg_bits_err_improve": 0,
    "time": 7733.879150390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.60761187666961,
    "avg_bits_err_output": 58.6053194322978,
    "avg_bits_err_improve": 0.0022924443718110865,
    "time": 65638.02807617188,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.05141524101186092,
    "avg_bits_err_output": 0.05141524101186092,
    "avg_bits_err_improve": 0,
    "time": 4143.8212890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t)))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12225,
    "avg_bits_err_output": 0.1215,
    "avg_bits_err_improve": 0.0007500000000000007,
    "time": 56639.028564453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1295,
    "avg_bits_err_output": 0.1295,
    "avg_bits_err_improve": 0,
    "time": 56892.736328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 40.385934374038776,
    "avg_bits_err_output": 3.778640136639726,
    "avg_bits_err_improve": 36.60729423739905,
    "time": 63335.5966796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.264119382402065,
    "avg_bits_err_output": 14.264119382402065,
    "avg_bits_err_improve": 0,
    "time": 4681.8330078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (fma (sin theta) (* (sin theta) (/ (sin delta) (sin theta))) 0.0) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.1612182612364986,
    "avg_bits_err_output": 0.16802352747816662,
    "avg_bits_err_improve": -0.006805266241668023,
    "time": 48540.262939453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.381283108553,
    "avg_bits_err_output": 45.936389938454575,
    "avg_bits_err_improve": 6.444893170098425,
    "time": 44705.209228515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 29.000176910769337,
    "avg_bits_err_output": 28.137535979276066,
    "avg_bits_err_improve": 0.8626409314932708,
    "time": 27595.645263671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-19) (* (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* 3.0 a)) (* (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* 3.0 a)) (/ 1.0 (/ (- (sqrt (fma b b (* c (* a -3.0)))) b) (* 3.0 a))))) (/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma b b (* c (* a -3.0))) (- (exp (log1p (/ 1.0 (fma c (* a -3.0) (* b b))))) 1.0))))) (* 3.0 a)))",
    "output_parens": 55,
    "avg_bits_err_input": 43.800473786413896,
    "avg_bits_err_output": 42.493083492709836,
    "avg_bits_err_improve": 1.30739029370406,
    "time": 27985.268798828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.136680201286005,
    "avg_bits_err_output": 34.136680201286005,
    "avg_bits_err_improve": 0,
    "time": 23237.657958984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (+ 1.0 (- (cos (- lambda1 lambda2)) 1.0))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.090280293143818,
    "avg_bits_err_output": 13.103304972917448,
    "avg_bits_err_improve": -0.013024679773629089,
    "time": 54087.773681640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.57652331232844,
    "avg_bits_err_output": 29.57652331232844,
    "avg_bits_err_improve": 0,
    "time": 47414.896240234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (* (/ 1.0 (/ x (+ 1.0 x))) (pow (/ x (+ 1.0 x)) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.03982312031259015,
    "avg_bits_err_improve": -0.028323120312590152,
    "time": 7918.32373046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* 1.0 (* (+ (fma (/ 1.0 (+ -1.0 x)) (/ -1.0 (/ 1.0 (+ -1.0 x))) 2.0) -1.0) (- (+ 1.0 (/ 1.0 (+ -1.0 x))) 1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 14.87853005323882,
    "avg_bits_err_output": 14.881079365052068,
    "avg_bits_err_improve": -0.0025493118132491333,
    "time": 42789.583251953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 0.0) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (sqrt (* F (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 70,
    "avg_bits_err_input": 52.28084410863378,
    "avg_bits_err_output": 48.02549981900887,
    "avg_bits_err_improve": 4.255344289624908,
    "time": 47617.977294921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.631214795776373,
    "avg_bits_err_output": 29.631214795776373,
    "avg_bits_err_improve": 0,
    "time": 48140.47607421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.55e-293) (/ (- (* (* (sqrt (- F)) (sqrt (- (* A (* C 4.0)) (pow B 2.0)))) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt F) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (- (* (pow B 2.0) 2.0) (* (* A C) 8.0)))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.13494609591828,
    "avg_bits_err_output": 47.20888424591059,
    "avg_bits_err_improve": 4.926061850007692,
    "time": 52131.988037109375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.375658357687337,
    "avg_bits_err_output": 15.375658357687337,
    "avg_bits_err_improve": 0,
    "time": 53008.886962890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -5e+153) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-251) (+ (* (* (cbrt (/ 1.0 (+ a a))) (/ (cbrt (- (sqrt (- (* g g) (* h h))) g)) (cbrt (/ 1.0 (+ a a))))) (cbrt (/ 1.0 (+ a a)))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 1.1e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))))))",
    "output_parens": 100,
    "avg_bits_err_input": 36.11006560959621,
    "avg_bits_err_output": 14.9504501586693,
    "avg_bits_err_improve": 21.159615450926914,
    "time": 76723.28881835938,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (- (* (cos (/ (* 2.0 PI) 3.0)) (cos (/ (acos (/ (- g) h)) 3.0))) (* (sin (expm1 (log1p (/ (* 2.0 PI) 3.0)))) (sin (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.9898921062575732,
    "avg_bits_err_output": 0.022219360937770435,
    "avg_bits_err_improve": 0.9676727453198027,
    "time": 13647.0791015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.5634481203125902,
    "avg_bits_err_output": 0.5634481203125902,
    "avg_bits_err_improve": 0,
    "time": 2853.329345703125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.160701667980266,
    "avg_bits_err_output": 11.160701667980266,
    "avg_bits_err_improve": 0,
    "time": 16601.52880859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49714040828653017,
    "avg_bits_err_output": 0.44719812031259015,
    "avg_bits_err_improve": 0.049942287973940014,
    "time": 7933.1103515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.115667577270706,
    "avg_bits_err_output": 15.329017592399001,
    "avg_bits_err_improve": 37.7866499848717,
    "time": 18979.861083984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.680914404955915,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.680914404955915,
    "time": 3673.236328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.013375,
    "avg_bits_err_improve": 0,
    "time": 11259.322265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1305.28369140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* (* w r) (* w r))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.229562452244346,
    "avg_bits_err_output": 7.19470827188418,
    "avg_bits_err_improve": 6.034854180360166,
    "time": 33142.91455078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)) (* x1 (+ (+ -6.0 (* 2.0 (/ (+ x2 (- (fma x1 (* x1 3.0) x2) x1)) (fma x1 x1 1.0)))) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5125338784601732,
    "avg_bits_err_output": 0.27174778689115553,
    "avg_bits_err_improve": 0.24078609156901765,
    "time": 71368.07080078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.856409227374165,
    "avg_bits_err_output": 17.856409227374165,
    "avg_bits_err_improve": 0,
    "time": 62158.45361328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.22539340061561777,
    "avg_bits_err_output": 0.18787673793068907,
    "avg_bits_err_improve": 0.0375166626849287,
    "time": 25912.170654296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2445.892333984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.761072592660604,
    "avg_bits_err_output": 9.228836502032523,
    "avg_bits_err_improve": 4.53223609062808,
    "time": 39919.52001953125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (exp (* x (- -1.0 eps))) (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (* x (- -1.0 eps)))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 18,
    "avg_bits_err_input": 29.204602081864202,
    "avg_bits_err_output": 0.8963239148839316,
    "avg_bits_err_improve": 28.30827816698027,
    "time": 33019.97802734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.019375,
    "avg_bits_err_output": 0.019375,
    "avg_bits_err_improve": 0,
    "time": 25324.98046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.023,
    "avg_bits_err_output": 0.023,
    "avg_bits_err_improve": 0,
    "time": 43751.855224609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (+ 2.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.036625,
    "avg_bits_err_improve": 0.003500000000000003,
    "time": 18478.955810546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3483.220458984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2998.999755859375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4289.8955078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.859650380151461,
    "avg_bits_err_output": 0.24875,
    "avg_bits_err_improve": 7.6109003801514605,
    "time": 40007.151611328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.644378882563689,
    "avg_bits_err_output": 7.644378882563689,
    "avg_bits_err_improve": 0,
    "time": 36233.34619140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.52739149729937,
    "avg_bits_err_output": 0.01475,
    "avg_bits_err_improve": 16.51264149729937,
    "time": 14161.814453125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (pow (exp x) 10.0) x) (- (+ 1.0 (cos x)) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 3.5098863314918933,
    "avg_bits_err_output": 2.0769044460465556,
    "avg_bits_err_improve": 1.4329818854453378,
    "time": 36659.843017578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.731017406151821,
    "avg_bits_err_output": 14.731017406151821,
    "avg_bits_err_improve": 0,
    "time": 17674.770263671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.124525152334634,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.124525152334634,
    "time": 4702.476318359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.42814559085069,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.42789559085069,
    "time": 7344.15576171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.302375,
    "avg_bits_err_improve": 63.697625,
    "time": 6264.643310546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843251666115286,
    "avg_bits_err_output": 0.4057503765672779,
    "avg_bits_err_improve": 61.43750128954801,
    "time": 25293.67578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (* c (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* a 4.0))) (- (* b (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (- b))) b)) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 33.85652725117812,
    "avg_bits_err_output": 31.85545697384997,
    "avg_bits_err_improve": 2.00107027732815,
    "time": 45797.137451171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.09730309892419,
    "avg_bits_err_output": 34.095156801186484,
    "avg_bits_err_improve": 0.0021462977377098014,
    "time": 25168.593017578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3301.974853515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.957346973747235,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 39.949221973747235,
    "time": 6891.404541015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.07051112173985,
    "avg_bits_err_output": 20.07051112173985,
    "avg_bits_err_improve": 0,
    "time": 2912.34716796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6618832283851797,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6618832283851797,
    "time": 5703.52734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.035375,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.034874999999999996,
    "time": 8300.225341796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.023698120312590144,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.013323120312590144,
    "time": 5598.650390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.01325,
    "time": 5658.684326171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 1498.36181640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ a (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40413477500432715,
    "avg_bits_err_output": 0.237125,
    "avg_bits_err_improve": 0.16700977500432715,
    "time": 9903.99169921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (exp (+ 1.0 (- (+ (log1p (- (cos x))) -1.0) -1.0))) (exp -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 29.33689209056337,
    "avg_bits_err_output": 29.33689236203042,
    "avg_bits_err_improve": -2.7146704795200094e-07,
    "time": 26426.1806640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (expm1 (expm1 (log1p (log1p (sqrt (- (* x x) eps)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 24.32207227533444,
    "avg_bits_err_output": 24.382193057553103,
    "avg_bits_err_improve": -0.06012078221866446,
    "time": 27292.84765625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (/ 1.0 (sin x)) (* (+ 1.0 (* (sin x) (/ -1.0 (sin x)))) (pow (sin x) 2.0)))) (tan x))",
    "output_parens": 16,
    "avg_bits_err_input": 29.891511944556225,
    "avg_bits_err_output": 29.91074067461462,
    "avg_bits_err_improve": -0.019228730058394206,
    "time": 43411.071533203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(- (* a a) (* b b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.008719360937770431,
    "avg_bits_err_output": 0.008719360937770431,
    "avg_bits_err_improve": 0,
    "time": 1758.671142578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-45) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.55933602860441,
    "avg_bits_err_output": 11.860245790294268,
    "avg_bits_err_improve": 35.69909023831015,
    "time": 58118.7177734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.282295503603127,
    "avg_bits_err_output": 26.282295503603127,
    "avg_bits_err_improve": 0,
    "time": 34187.46923828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma a d (fma a (- d) (- (* c b) (* a d)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 25.908890223171973,
    "avg_bits_err_output": 25.910213343484564,
    "avg_bits_err_improve": -0.0013231203125911861,
    "time": 22019.22998046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03425,
    "avg_bits_err_output": 0.024210878354688034,
    "avg_bits_err_improve": 0.010039121645311969,
    "time": 23861.886474609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (expm1 (log1p (sqrt (- (* ux (- (fma ux maxCos 1.0) ux)) (fma (fma ux maxCos 1.0) (- (* ux maxCos) ux) (* ux maxCos)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.532161296898241,
    "avg_bits_err_output": 0.5744812534956909,
    "avg_bits_err_improve": 12.95768004340255,
    "time": 38005.0224609375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (fma ux (- (- (* ux maxCos) ux) (+ (fma maxCos (- (fma ux maxCos 1.0) ux) maxCos) -1.0)) ux)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.571100165100978,
    "avg_bits_err_output": 0.32312427790866277,
    "avg_bits_err_improve": 13.247975887192315,
    "time": 34340.078125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (- PI (* PI (- 1.0 (+ uy uy))))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* uy (* PI 2.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.33834245490952625,
    "avg_bits_err_output": 0.3409256879077855,
    "avg_bits_err_improve": -0.002583232998259244,
    "time": 67173.28247070312,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (- (+ (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 1.0) 1.0) (/ (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 1.0)) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 51,
    "avg_bits_err_input": 0.20443398826188036,
    "avg_bits_err_output": 0.20619439478146695,
    "avg_bits_err_improve": -0.0017604065195865881,
    "time": 39200.224853515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (log1p (expm1 (sqrt (/ u1 (- 1.0 u1))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.5322783060501183,
    "avg_bits_err_output": 0.5388138326145117,
    "avg_bits_err_improve": -0.006535526564393379,
    "time": 31343.23583984375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (+ (fma u2 -6.28318530718 1.0) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.32006129259685334,
    "avg_bits_err_output": 0.32911944479261535,
    "avg_bits_err_improve": -0.009058152195762004,
    "time": 58167.76318359375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(fma s (log (* (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0)) (* (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0)) (/ 1.0 (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0)))))) 0.0)",
    "output_parens": 50,
    "avg_bits_err_input": 0.3359695363788537,
    "avg_bits_err_output": 0.34789298508265365,
    "avg_bits_err_improve": -0.011923448703799966,
    "time": 37423.4052734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05602140916728211,
    "avg_bits_err_output": 0.041313299846034435,
    "avg_bits_err_improve": 0.014708109321247678,
    "time": 43605.410888671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* s (exp (* 2.0 (log1p (exp (/ (- (fabs x)) s)))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.13045220970122418,
    "avg_bits_err_output": 0.12154291657910386,
    "avg_bits_err_improve": 0.008909293122120313,
    "time": 36685.04931640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6725636303603195,
    "avg_bits_err_output": 0.6763994120276566,
    "avg_bits_err_improve": -0.0038357816673371126,
    "time": 31675.298828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.15501197676078995,
    "avg_bits_err_output": 0.15042157656993405,
    "avg_bits_err_improve": 0.004590400190855909,
    "time": 26235.414306640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.6561803163408895,
    "avg_bits_err_output": 2.65427467727866,
    "avg_bits_err_improve": 0.0019056390622296249,
    "time": 52913.578857421875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (+ (exp (log (* (sinh (/ 1.0 v)) (* v 2.0)))) 2.0) -2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4647366230633134,
    "avg_bits_err_output": 0.5351296436497377,
    "avg_bits_err_improve": -0.07039302058642427,
    "time": 69538.46728515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (log (* (/ 1.0 (+ v v)) (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.13299457682521126,
    "avg_bits_err_output": 0.13544704437904959,
    "avg_bits_err_improve": -0.0024524675538383223,
    "time": 11501.18896484375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (/ (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (log (pow alpha (* PI 2.0)))) 1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4683460707194643,
    "avg_bits_err_output": 0.424700565905836,
    "avg_bits_err_improve": 0.04364550481362833,
    "time": 27206.711181640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log1p (- (/ (+ u -0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3189906511052305,
    "avg_bits_err_output": 0.5488528763794398,
    "avg_bits_err_improve": 0.7701377747257907,
    "time": 59034.721435546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(- (* (log (/ 1.0 (- 1.0 (* 4.0 u)))) (* (exp (log1p (/ s s))) s)) (* (log (log (exp (/ 1.0 (- 1.0 (* 4.0 u)))))) s))",
    "output_parens": 17,
    "avg_bits_err_input": 12.41898949309484,
    "avg_bits_err_output": 12.050445324403645,
    "avg_bits_err_improve": 0.36854416869119433,
    "time": 63942.9638671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* s (* PI 6.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1354666053125164,
    "avg_bits_err_output": 0.13537224437474593,
    "avg_bits_err_improve": 9.436093777046017e-05,
    "time": 113923.140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8720949351974231,
    "avg_bits_err_output": 0.8616307190448435,
    "avg_bits_err_improve": 0.010464216152579642,
    "time": 44274.3642578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (- (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (log (pow (exp (/ 1.0 (sqrt PI))) (- (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.7015683320417706,
    "avg_bits_err_output": 0.5827478936861158,
    "avg_bits_err_improve": 0.11882043835565481,
    "time": 61746.921142578125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- u1)) (* (log1p (- u1)) (/ 1.0 (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 13.702145640368503,
    "avg_bits_err_output": 0.5146093091453723,
    "avg_bits_err_improve": 13.18753633122313,
    "time": 30919.965087890625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.752268772711531,
    "avg_bits_err_output": 0.30124294910636246,
    "avg_bits_err_improve": 13.45102582360517,
    "time": 44101.087158203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.252310686522181,
    "avg_bits_err_output": 0.20732312031259015,
    "avg_bits_err_improve": 14.04498756620959,
    "time": 31752.690673828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.511917658031727,
    "avg_bits_err_output": 0.5362628504909606,
    "avg_bits_err_improve": 11.975654807540767,
    "time": 29258.57861328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -2e+157) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (/ (/ l PI) PI) (* PI (pow PI 2.0)))))) (if (<= (* PI l) 1e+153) (- (* PI l) (* (/ 1.0 (* F F)) (tan (+ (* l l) (- (* PI l) (* l l)))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))))",
    "output_parens": 35,
    "avg_bits_err_input": 16.467013265433167,
    "avg_bits_err_output": 13.908814641064872,
    "avg_bits_err_improve": 2.558198624368295,
    "time": 52394.490478515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.213636842188131,
    "avg_bits_err_output": 0.213636842188131,
    "avg_bits_err_improve": 0,
    "time": 32658.490966796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 5e+225) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (- (+ 1.0 (* x (/ 1.0 (tan B)))) 1.0)) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 43,
    "avg_bits_err_input": 14.485261577706648,
    "avg_bits_err_output": 13.261026527194367,
    "avg_bits_err_improve": 1.2242350505122808,
    "time": 86226.35229492188,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (+ (- (expm1 (fma (/ PI 4.0) (- f) (fma (- f) (/ PI 4.0) (* (/ PI 4.0) f))))) (expm1 (* (/ PI 4.0) f)))))))",
    "output_parens": 28,
    "avg_bits_err_input": 61.58862009234665,
    "avg_bits_err_output": 2.036082559151781,
    "avg_bits_err_improve": 59.55253753319487,
    "time": 39867.79931640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -2.45e-147) (/ (* (* (sqrt 2.0) t) (* (* (sqrt 2.0) t) (/ 1.0 (* (sqrt 2.0) t)))) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 1.22e-182) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 58,
    "avg_bits_err_input": 42.7452470102987,
    "avg_bits_err_output": 35.81090657534152,
    "avg_bits_err_improve": 6.9343404349571784,
    "time": 31876.52783203125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.9675895151539873,
    "avg_bits_err_output": 3.9675895151539873,
    "avg_bits_err_improve": 0,
    "time": 39155.568115234375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.967667200391513,
    "avg_bits_err_output": 0.004,
    "avg_bits_err_improve": 0.963667200391513,
    "time": 11475.043701171875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (pow (/ Om Omc) 2.0)) 1.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.54989865402811,
    "avg_bits_err_output": 10.550767872251503,
    "avg_bits_err_improve": -0.0008692182233929202,
    "time": 25409.175048828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 5e-118) (* (sqrt (- U)) (sqrt (* 2.0 (* n (- (* 2.0 (/ (* l l) Om)) (- t (* (pow (/ l Om) 2.0) (* n (- U U*))))))))) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 2e+154) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- n)) (sqrt (* (* 2.0 U) (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om)))))))))",
    "output_parens": 78,
    "avg_bits_err_input": 34.772395436123226,
    "avg_bits_err_output": 31.572570646876294,
    "avg_bits_err_improve": 3.1998247892469323,
    "time": 49415.3466796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -2.3e-102) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (if (<= t 2e+102) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k))))))))",
    "output_parens": 53,
    "avg_bits_err_input": 47.968548489729244,
    "avg_bits_err_output": 36.13056564112991,
    "avg_bits_err_improve": 11.837982848599331,
    "time": 58423.419677734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 2e+278) (/ 2.0 (* (sin k) (* (/ (pow t 3.0) (* l l)) (* (+ 2.0 (pow (/ k t) 2.0)) (tan k))))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (fma (tan k) (* (sin k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (sin k) (tan (- k)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 33.357204472368096,
    "avg_bits_err_output": 30.969110306909624,
    "avg_bits_err_improve": 2.3880941654584724,
    "time": 48468.0966796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a2 a2)) (* a1 (* a1 (/ (cos th) (sqrt 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5120276343964563,
    "avg_bits_err_output": 0.49384135627199705,
    "avg_bits_err_improve": 0.01818627812445922,
    "time": 42432.06103515625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (* (pow PI (/ (- 1.0 k) 2.0)) (* (pow (* n (/ PI PI)) (/ (- 1.0 k) 2.0)) (pow 2.0 (/ (- 1.0 k) 2.0)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5343900507637622,
    "avg_bits_err_output": 0.595117736589298,
    "avg_bits_err_improve": -0.06072768582553578,
    "time": 56124.4560546875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(fma J (+ (* (- (exp l) (exp (- l))) (cos (/ K 2.0))) (fma (- (exp l)) (- (cos (/ K 2.0))) (* (exp l) (- (cos (/ K 2.0)))))) U)",
    "output_parens": 20,
    "avg_bits_err_input": 17.52382925669616,
    "avg_bits_err_output": 17.523607231997033,
    "avg_bits_err_improve": 0.0002220246991271324,
    "time": 36452.658447265625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 0.1) (* (+ 1.0 (- (cos (- (/ (* K (+ m n)) 2.0) M)) 1.0)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (- (* (+ (/ (+ m (+ 1.0 n)) K) 2.0) K) K) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 15.372463040371839,
    "avg_bits_err_output": 10.218174608640757,
    "avg_bits_err_improve": 5.154288431731082,
    "time": 25116.265869140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.87244812031259,
    "avg_bits_err_output": 18.87244812031259,
    "avg_bits_err_improve": 0,
    "time": 44261.9306640625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+245) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (- (+ (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0)) 1.0) 1.0)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 14.208183454186809,
    "avg_bits_err_output": 10.052592627049608,
    "avg_bits_err_improve": 4.1555908271372015,
    "time": 20744.32666015625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.039959213284444,
    "avg_bits_err_output": 19.039959213284444,
    "avg_bits_err_improve": 0,
    "time": 30805.88525390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= h -4e+47) (* (/ c0 (+ w w)) (+ (/ (* c0 (* d d)) (* D (* w (* h D)))) (sqrt (- (pow (/ (* c0 (* d d)) (* D (* w (* h D)))) 2.0) (* M M))))) (if (<= h 6.8e+103) (* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* h (* w (* D D)))) (sqrt (* (+ (/ (* d (* d c0)) (* h (* w (* D D)))) M) (- (/ (* d (* d c0)) (* h (* w (* D D)))) M))))) (* (/ c0 (* 2.0 w)) (+ (sqrt (* (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M) (- (/ (* d (* c0 d)) (* w (* D (* D h)))) M))) (/ (* d (* c0 d)) (* w (* D (* D h))))))))",
    "output_parens": 76,
    "avg_bits_err_input": 59.97466461697975,
    "avg_bits_err_output": 58.29692981798381,
    "avg_bits_err_improve": 1.6777347989959424,
    "time": 43483.979248046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+176) (fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 2.0)) (* (/ h l) 0.5)))) (sqrt (/ d l))) 0.0))",
    "output_parens": 46,
    "avg_bits_err_input": 27.179215347818232,
    "avg_bits_err_output": 26.086049298835977,
    "avg_bits_err_improve": 1.0931660489822548,
    "time": 51471.669921875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) (exp -1.0)) (* (exp -1.0) (exp 2.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 16.0976448010201,
    "avg_bits_err_output": 15.649290393015693,
    "avg_bits_err_improve": 0.4483544080044055,
    "time": 61652.39111328125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9851981203125901,
    "avg_bits_err_output": 0.009969360937770436,
    "avg_bits_err_improve": 0.9752287593748197,
    "time": 15536.8896484375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) t))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4699651755792754,
    "avg_bits_err_output": 0.4032384833882595,
    "avg_bits_err_improve": 0.0667266921910159,
    "time": 28193.285888671875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011448120312590146,
    "avg_bits_err_output": 0.009698120312590146,
    "avg_bits_err_improve": 0.0017499999999999998,
    "time": 15643.4052734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5498065734829228,
    "avg_bits_err_output": 0.5498065734829228,
    "avg_bits_err_improve": 0,
    "time": 10031.457275390625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (- (fma a (pow k m) a) a) (+ (+ 1.0 (* k 10.0)) (* k k)))",
    "output_parens": 8,
    "avg_bits_err_input": 1.8855198915566997,
    "avg_bits_err_output": 1.9385366324068842,
    "avg_bits_err_improve": -0.053016740850184485,
    "time": 22870.37841796875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.023025757404635052,
    "avg_bits_err_output": 0.023025757404635052,
    "avg_bits_err_improve": 0,
    "time": 13426.065673828125,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(fma b (* b 4.0) (+ (pow (fma a a (* b b)) 2.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.18252857187842536,
    "avg_bits_err_output": 0.18241297031547463,
    "avg_bits_err_improve": 0.00011560156295073454,
    "time": 29014.638427734375,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (+ (pow b 4.0) (* (* a a) (+ (* b b) (fma a a (* b b))))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.18674133035577506,
    "avg_bits_err_output": 0.09603832254102163,
    "avg_bits_err_improve": 0.09070300781475343,
    "time": 34171.093994140625,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (+ (* (* b b) (fma b b (* a a))) (+ (pow a 4.0) (* (* b b) (* a a)))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18881329892135118,
    "avg_bits_err_output": 0.10644316173318807,
    "avg_bits_err_improve": 0.0823701371881631,
    "time": 26314.170654296875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.46761535571047,
    "avg_bits_err_output": 13.46761535571047,
    "avg_bits_err_improve": 0,
    "time": 23592.697998046875,
    "seed": 19,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.82770324993401,
    "avg_bits_err_output": 0.073375,
    "avg_bits_err_improve": 40.75432824993401,
    "time": 8605.02392578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (fma (- (* (sin x) (/ 1.0 (sin x)))) (sin x) (sin x))) (+ (- x (tan x)) (fma (- (pow (tan x) 2.0)) (/ 1.0 (tan x)) (* (/ 1.0 (tan x)) (pow (tan x) 2.0)))))",
    "output_parens": 26,
    "avg_bits_err_input": 31.2218692274709,
    "avg_bits_err_output": 30.675798265553624,
    "avg_bits_err_improve": 0.5460709619172768,
    "time": 32979.228759765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- (* c (* a (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) b_2)) a)",
    "output_parens": 17,
    "avg_bits_err_input": 33.3586201905314,
    "avg_bits_err_output": 32.29961520724599,
    "avg_bits_err_improve": 1.059004983285405,
    "time": 29613.251220703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.39088452413298,
    "avg_bits_err_output": 34.39088452413298,
    "avg_bits_err_improve": 0,
    "time": 23036.84619140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (log1p (/ (- 1.0 (cos x)) (* x x))))",
    "output_parens": 6,
    "avg_bits_err_input": 31.249751031140796,
    "avg_bits_err_output": 31.250493105110593,
    "avg_bits_err_improve": -0.0007420739697963086,
    "time": 19173.162109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 1.65e+34) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (* (/ (/ 1.0 n) (/ 1.0 n)) (+ 1.0 (/ 1.0 n))) (/ (/ 1.0 n) (/ 1.0 n)))))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow (exp (log x)) (* (/ 1.0 n) 1.0))))",
    "output_parens": 31,
    "avg_bits_err_input": 32.315236178028606,
    "avg_bits_err_output": 30.415552941388494,
    "avg_bits_err_improve": 1.8996832366401115,
    "time": 54641.563720703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.67818123973979,
    "avg_bits_err_output": 0.025125,
    "avg_bits_err_improve": 29.65305623973979,
    "time": 32922.033447265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (- (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ 1.0 x)) (- (/ 1.0 x) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.62474502994269,
    "avg_bits_err_output": 0.5747474867691871,
    "avg_bits_err_improve": 14.049997543173504,
    "time": 32409.20654296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.42344523042765,
    "avg_bits_err_output": 6.346164375231422,
    "avg_bits_err_improve": 33.07728085519623,
    "time": 29248.865478515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.974136662457955,
    "avg_bits_err_output": 29.681593557062122,
    "avg_bits_err_improve": 0.2925431053958327,
    "time": 34428.752685546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.415523609635727,
    "avg_bits_err_output": 30.415523609635727,
    "avg_bits_err_improve": 0,
    "time": 36813.45703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.67674917748502,
    "avg_bits_err_output": 33.6959750033507,
    "avg_bits_err_improve": -0.01922582586568211,
    "time": 20313.199462890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (fma (* -4.0 c) (* a (sqrt (/ 1.0 (fma b b (* c (* a -4.0)))))) (* b (* b (sqrt (/ 1.0 (fma b b (* c (* a -4.0))))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 34.2952012372741,
    "avg_bits_err_output": 33.287952859290264,
    "avg_bits_err_improve": 1.007248377983835,
    "time": 61609.7685546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.48234358383173,
    "avg_bits_err_output": 0.01998120312590145,
    "avg_bits_err_improve": 61.46236238070583,
    "time": 15618.6826171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(+ (log (+ n 1.0)) (+ (- -1.0 (* n (log n))) (* n (log (+ n 1.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 63.003586208812294,
    "avg_bits_err_output": 0.528,
    "avg_bits_err_improve": 62.475586208812295,
    "time": 51749.8759765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output_parens": 4,
    "avg_bits_err_input": 58.50507453227207,
    "avg_bits_err_output": 58.50507453227207,
    "avg_bits_err_improve": 0,
    "time": 148386.50952148438,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -8.5e-155) (+ (- (/ 1.0 (/ 1.0 (tan x))) (- (* (/ 1.0 (/ 1.0 (tan x))) (+ 1.0 (pow (/ 1.0 (tan x)) 2.0))) (/ 1.0 (tan x)))) (- (/ 1.0 x) (/ 1.0 (tan x)))) (if (<= x 1.4e-154) (- (/ 1.0 x) (/ 1.0 (tan x))) (+ (- (/ 1.0 (/ 1.0 (tan x))) (- (* (/ 1.0 (/ 1.0 (tan x))) (+ 1.0 (pow (/ 1.0 (tan x)) 2.0))) (/ 1.0 (tan x)))) (- (/ 1.0 x) (/ 1.0 (tan x))))))",
    "output_parens": 48,
    "avg_bits_err_input": 59.88408315217295,
    "avg_bits_err_output": 56.5544680024123,
    "avg_bits_err_improve": 3.3296151497606488,
    "time": 57842.203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -1.9e-161) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps -2.1e-216) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps b))) (expm1 (* eps a)))) (/ (fma (expm1 (* eps (+ a b))) (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps (+ a b))))) 0.0) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 47,
    "avg_bits_err_input": 60.029807782035185,
    "avg_bits_err_output": 40.50499980291343,
    "avg_bits_err_improve": 19.524807979121753,
    "time": 30232.08056640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.20346794511585,
    "avg_bits_err_output": 0.1135374429797517,
    "avg_bits_err_improve": 41.08993050213609,
    "time": 16430.730712890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.72378344594542,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 58.723033445945426,
    "time": 6067.67626953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.601623270563962,
    "avg_bits_err_output": 0.02071736561972104,
    "avg_bits_err_improve": 29.58090590494424,
    "time": 3944.144775390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.934927720364247,
    "avg_bits_err_output": 29.006232617270932,
    "avg_bits_err_improve": 0.9286951030933146,
    "time": 32351.004638671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.74829177130195,
    "avg_bits_err_output": 9.74829177130195,
    "avg_bits_err_improve": 0,
    "time": 39332.278076171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 36.43921113191494,
    "avg_bits_err_output": 36.43921113191494,
    "avg_bits_err_improve": 0,
    "time": 35331.498291015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (exp (- (* 0.5 (log1p x)))) (- (- (* x (+ 1.0 (/ 1.0 (sqrt (+ x 1.0))))) (sqrt x)) x))",
    "output_parens": 13,
    "avg_bits_err_input": 30.0311619115621,
    "avg_bits_err_output": 25.882018437861444,
    "avg_bits_err_improve": 4.149143473700658,
    "time": 32801.4072265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.6909443846718,
    "avg_bits_err_output": 0.37931712590042055,
    "avg_bits_err_improve": 36.31162725877138,
    "time": 24062.15234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.65787767276261,
    "avg_bits_err_output": 19.524872294138596,
    "avg_bits_err_improve": 0.13300537862401285,
    "time": 29431.5537109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (- (atan (+ 1.0 N)) (atan N)) (fma (- (* (atan N) (/ 1.0 (atan N)))) (atan N) (atan N)))",
    "output_parens": 13,
    "avg_bits_err_input": 14.706098295422246,
    "avg_bits_err_output": 14.702575407953479,
    "avg_bits_err_improve": 0.0035228874687671663,
    "time": 15486.925537109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.49036338333371,
    "avg_bits_err_output": 1.2922767898901002,
    "avg_bits_err_improve": 28.198086593443612,
    "time": 28826.6103515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 m) (+ (/ (- m (* m m)) v) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07734252772443494,
    "avg_bits_err_output": 0.07790096583933155,
    "avg_bits_err_improve": -0.0005584381148966144,
    "time": 27425.469970703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.085804749389116,
    "avg_bits_err_output": 0.30406165469173674,
    "avg_bits_err_improve": 15.78174309469738,
    "time": 21799.647705078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (+ (* (sin (* PI (/ angle 180.0))) (cos (fma (- (* (/ angle 180.0) (/ PI PI))) PI (* PI (/ angle 180.0))))) (* (sin (fma (- (* (/ angle 180.0) (/ PI PI))) PI (* PI (/ angle 180.0)))) (- (cos (* PI (/ angle 180.0))))))) 2.0))",
    "output_parens": 34,
    "avg_bits_err_input": 20.213355120457617,
    "avg_bits_err_output": 20.20190192207993,
    "avg_bits_err_improve": 0.011453198377687102,
    "time": 63574.092529296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(if (<= (- (pow b 2.0) (pow a 2.0)) (- INFINITY)) (* (fma (pow b 2.0) (* 2.0 (sin (* PI (/ angle 180.0)))) (- (exp (+ (* 2.0 (log a)) (log (* 2.0 (sin (* PI (/ angle 180.0))))))))) (cos (* PI (/ angle 180.0)))) (* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (expm1 (log1p (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 40,
    "avg_bits_err_input": 31.50825619267726,
    "avg_bits_err_output": 30.416335684854268,
    "avg_bits_err_improve": 1.0919205078229908,
    "time": 47810.518310546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (expm1 (+ 1.0 (- (log1p (cos (* (/ angle 180.0) PI))) 1.0)))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.177170824327334,
    "avg_bits_err_output": 20.179166488996977,
    "avg_bits_err_improve": -0.0019956646696428493,
    "time": 60775.668701171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17100804548200058,
    "avg_bits_err_output": 0.16955148342892906,
    "avg_bits_err_improve": 0.001456562053071514,
    "time": 29885.831298828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.33175743549675557,
    "avg_bits_err_output": 0.3334082874467403,
    "avg_bits_err_improve": -0.0016508519499847107,
    "time": 55520.68994140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (- (- (* (cos v) e) 1.0) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.1347193609377704,
    "avg_bits_err_output": 0.13826184218813103,
    "avg_bits_err_improve": -0.003542481250360635,
    "time": 27326.965087890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 17.104720361712022,
    "avg_bits_err_output": 17.098447668484702,
    "avg_bits_err_improve": 0.0062726932273200475,
    "time": 42302.570068359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.76154780897245,
    "avg_bits_err_output": 46.22914720184229,
    "avg_bits_err_improve": 6.532400607130164,
    "time": 26488.068359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (sqrt (/ 1.0 (fma a (* c -4.0) (* b b)))) (* a (* c -4.0))) (* b (+ -1.0 (* b (sqrt (/ 1.0 (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.529744901384003,
    "avg_bits_err_output": 27.716344904277346,
    "avg_bits_err_improve": 0.8133999971066572,
    "time": 24886.409423828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.742041672974686,
    "avg_bits_err_output": 39.39893484934907,
    "avg_bits_err_improve": 4.343106823625618,
    "time": 25429.51416015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.678949773148155,
    "avg_bits_err_output": 33.6959750033507,
    "avg_bits_err_improve": -0.01702523020254887,
    "time": 21680.334228515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (expm1 (log1p (sin (- lambda1 lambda2))))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8554353573512197,
    "avg_bits_err_output": 0.8663791153331781,
    "avg_bits_err_improve": -0.010943757981958457,
    "time": 38004.8232421875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (exp (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 29.589158234542733,
    "avg_bits_err_output": 29.589624642852435,
    "avg_bits_err_improve": -0.0004664083097019045,
    "time": 30487.817626953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.12261903136475,
    "avg_bits_err_output": 1.1836580828133114,
    "avg_bits_err_improve": 56.93896094855144,
    "time": 13660.458740234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.055986656383155,
    "avg_bits_err_output": 0.0085,
    "avg_bits_err_improve": 58.04748665638316,
    "time": 6032.50634765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008448120312590145,
    "avg_bits_err_output": 0.008448120312590145,
    "avg_bits_err_improve": 0,
    "time": 2219.603759765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.881625,
    "avg_bits_err_output": 31.881625,
    "avg_bits_err_improve": 0,
    "time": 5120.42431640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(- (* (+ 1.0 (log (/ (+ x 1.0) (- 1.0 x)))) 0.5) 0.5)",
    "output_parens": 7,
    "avg_bits_err_input": 58.4959460051333,
    "avg_bits_err_output": 58.500931898743715,
    "avg_bits_err_improve": -0.004985893610417236,
    "time": 52014.47802734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.026875,
    "avg_bits_err_output": 0.026875,
    "avg_bits_err_improve": 0,
    "time": 3832.987060546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t)))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12744812031259015,
    "avg_bits_err_output": 0.126125,
    "avg_bits_err_improve": 0.0013231203125901592,
    "time": 41493.12744140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.129,
    "avg_bits_err_output": 0.129,
    "avg_bits_err_improve": 0,
    "time": 32842.253662109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.20791525352395,
    "avg_bits_err_output": 3.7676012769625267,
    "avg_bits_err_improve": 35.44031397656143,
    "time": 53219.986572265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.227114489635877,
    "avg_bits_err_output": 14.227114489635877,
    "avg_bits_err_improve": 0,
    "time": 3938.748779296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos phi1) (* (sin delta) (cos theta))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1485108369463292,
    "avg_bits_err_output": 0.1470290048304523,
    "avg_bits_err_improve": 0.00148183211587688,
    "time": 47880.55517578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.79820351486748,
    "avg_bits_err_output": 46.25252416776899,
    "avg_bits_err_improve": 6.545679347098492,
    "time": 39033.02587890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma a (* a (/ (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) a)) (- (* (* b b) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) b)) (* 3.0 a))",
    "output_parens": 20,
    "avg_bits_err_input": 28.675115352585333,
    "avg_bits_err_output": 27.964902207546615,
    "avg_bits_err_improve": 0.7102131450387184,
    "time": 38052.53564453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ b b)) b (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* c -3.0)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.717116949100095,
    "avg_bits_err_output": 39.39728484469927,
    "avg_bits_err_improve": 4.319832104400824,
    "time": 30513.172119140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.73140712667356,
    "avg_bits_err_output": 33.73140712667356,
    "avg_bits_err_improve": 0,
    "time": 20764.43994140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (- (* (sin (- lambda1 lambda2)) (cos (- (- (+ lambda2 lambda1) lambda1) lambda2))) (* (cos (- lambda2 lambda1)) (sin (- lambda2 lambda2)))) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 26,
    "avg_bits_err_input": 12.970295589353583,
    "avg_bits_err_output": 12.303899659640159,
    "avg_bits_err_improve": 0.6663959297134241,
    "time": 65579.09301757812,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (+ (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))) 2.0) -2.0)",
    "output_parens": 8,
    "avg_bits_err_input": 28.870565557947803,
    "avg_bits_err_output": 28.90352954145777,
    "avg_bits_err_improve": -0.0329639835099691,
    "time": 9809.05419921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (* (/ 1.0 (+ -1.0 (/ 1.0 (+ -1.0 x)))) (pow (+ -1.0 (/ 1.0 (+ -1.0 x))) 2.0)) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.01325,
    "avg_bits_err_output": 0.029431767189573334,
    "avg_bits_err_improve": -0.016181767189573336,
    "time": 6087.935546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.12e-302) (/ (- (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (* (sqrt (- F)) (sqrt (* -1.0 (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (+ A C))) (* (sqrt F) (sqrt (- (* (pow B 2.0) -2.0) (* (* A C) -8.0)))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.255105281448856,
    "avg_bits_err_output": 47.26800544956537,
    "avg_bits_err_improve": 4.987099831883484,
    "time": 56273.10595703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.818121364011493,
    "avg_bits_err_output": 29.818121364011493,
    "avg_bits_err_improve": 0,
    "time": 46795.38671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1e-310) (/ (- (* (sqrt (- F)) (* (sqrt (* 2.0 (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))) (sqrt (- (* 4.0 (* A C)) (pow B 2.0)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* 2.0 F)) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (- (pow B 2.0) (* A (* C 4.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.1401115349008,
    "avg_bits_err_output": 46.701606749228866,
    "avg_bits_err_improve": 5.438504785671931,
    "time": 50580.383544921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.846903408451233,
    "avg_bits_err_output": 15.846903408451233,
    "avg_bits_err_improve": 0,
    "time": 54902.27978515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))))) (if (<= g 1.35e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))))))",
    "output_parens": 68,
    "avg_bits_err_input": 36.34708362534482,
    "avg_bits_err_output": 19.51268802937315,
    "avg_bits_err_improve": 16.83439559597167,
    "time": 79335.26098632812,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9905714296960648,
    "avg_bits_err_output": 0.02959436093777043,
    "avg_bits_err_improve": 0.9609770687582944,
    "time": 11329.399169921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.804125,
    "avg_bits_err_output": 0.804125,
    "avg_bits_err_improve": 0,
    "time": 24612.404541015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.711597641688524,
    "avg_bits_err_output": 10.711597641688524,
    "avg_bits_err_improve": 0,
    "time": 27068.30078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.49916476114975633,
    "avg_bits_err_output": 0.4650731203125902,
    "avg_bits_err_improve": 0.03409164083716615,
    "time": 12934.36474609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.9795181675399,
    "avg_bits_err_output": 15.983159899625294,
    "avg_bits_err_improve": 36.99635826791461,
    "time": 11147.968994140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.681446684364617,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.681446684364617,
    "time": 3531.55517578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))) (/ (- 1.0 x) (+ 1.0 x))) (* (/ (- 1.0 x) (+ 1.0 x)) (/ (- 1.0 x) (+ 1.0 x))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.01789624062518029,
    "avg_bits_err_improve": -0.0045212406251802905,
    "time": 37328.77197265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1204.017822265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (* r w) (* r (* w (- 0.375 (* v 0.25))))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 12.774235722855092,
    "avg_bits_err_output": 7.604577815068845,
    "avg_bits_err_improve": 5.169657907786247,
    "time": 34094.4736328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (- (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (+ 1.0 (fma (+ x1 x1) (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (pow (+ x1 x1) 2.0)))) (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0))) (* x1 (* x1 -6.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5159809249647487,
    "avg_bits_err_output": 0.2768192840114974,
    "avg_bits_err_improve": 0.23916164095325126,
    "time": 72566.15771484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.44557671619713,
    "avg_bits_err_output": 18.44557671619713,
    "avg_bits_err_improve": 0,
    "time": 52217.731201171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x (- 0.954929658551372 (* x (* x 0.12900613773279798))) (* x (fma (* x x) -0.12900613773279798 (* x (* x 0.12900613773279798)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.2291156015629507,
    "avg_bits_err_output": 0.16691524101186092,
    "avg_bits_err_improve": 0.06220036055108977,
    "time": 21847.570068359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0019481203125901445,
    "avg_bits_err_output": 0.0019481203125901445,
    "avg_bits_err_improve": 0,
    "time": 4163.05419921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(+ (* (/ 1.0 (* (- b a) (+ b a))) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (- (* (- (/ 1.0 a) (/ 1.0 b)) (/ PI 2.0)) (/ 1.0 b))))",
    "output_parens": 19,
    "avg_bits_err_input": 14.481456735071005,
    "avg_bits_err_output": 9.745293468269143,
    "avg_bits_err_improve": 4.736163266801862,
    "time": 36980.81591796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (- (+ (exp (- (fma eps x x))) (exp (- (* eps x) x))) (- (* (- (exp (- (* eps x) x)) (exp (- (fma eps x x)))) (/ 1.0 eps)))) 2.0)",
    "output_parens": 19,
    "avg_bits_err_input": 29.81263627458951,
    "avg_bits_err_output": 0.9246349184699051,
    "avg_bits_err_improve": 28.888001356119606,
    "time": 38751.51513671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.00425,
    "avg_bits_err_output": 0.00425,
    "avg_bits_err_improve": 0,
    "time": 8438.803466796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.007375,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 0,
    "time": 47324.70947265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0335,
    "avg_bits_err_output": 0.0335,
    "avg_bits_err_improve": 0,
    "time": 9213.9072265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3700.667236328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2702.512451171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3496.65234375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.824276137616425,
    "avg_bits_err_output": 0.253125,
    "avg_bits_err_improve": 7.571151137616425,
    "time": 77729.30395507812,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(expm1 (log1p (- (pow (+ x eps) 5.0) (pow x 5.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 7.796183698191227,
    "avg_bits_err_output": 7.811471594147508,
    "avg_bits_err_improve": -0.015287895956281439,
    "time": 28158.372802734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.942217949882018,
    "avg_bits_err_output": 0.013375,
    "avg_bits_err_improve": 15.928842949882018,
    "time": 15834.715087890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (fma (pow (exp (* x 10.0)) x) (cos x) (cos x)) (cos x))",
    "output_parens": 8,
    "avg_bits_err_input": 3.5227591036483363,
    "avg_bits_err_output": 3.151608268678246,
    "avg_bits_err_improve": 0.3711508349700905,
    "time": 38350.051025390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (fma x x 1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 14.88172632941671,
    "avg_bits_err_output": 14.88185132941671,
    "avg_bits_err_improve": -0.00012500000000059686,
    "time": 60884.277099609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.74881219898697,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.74881219898697,
    "time": 5125.152587890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.073055117603154,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.07280511760315,
    "time": 4965.28515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29375,
    "avg_bits_err_improve": 63.70625,
    "time": 5132.779541015625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t t) 4e-32)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325134047954,
    "avg_bits_err_output": 0.410012218755409,
    "avg_bits_err_improve": 61.43323912172413,
    "time": 19386.765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (fma (* -4.0 c) (* a (sqrt (/ 1.0 (fma b b (* c (* a -4.0)))))) (* b (* b (sqrt (/ 1.0 (fma b b (* c (* a -4.0))))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 34.2952012372741,
    "avg_bits_err_output": 33.287952859290264,
    "avg_bits_err_improve": 1.007248377983835,
    "time": 45906.879150390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.678949773148155,
    "avg_bits_err_output": 33.6959750033507,
    "avg_bits_err_improve": -0.01702523020254887,
    "time": 18741.18701171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2750.356201171875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.22878109257118,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 40.219406092571184,
    "time": 3941.114013671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.4468839462664,
    "avg_bits_err_output": 20.4468839462664,
    "avg_bits_err_improve": 0,
    "time": 6292.79296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6851025900384813,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6851025900384813,
    "time": 6148.208251953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.038125,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.03725,
    "time": 7395.740966796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(fma (+ a b) b (* a (+ a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.023719360937770433,
    "avg_bits_err_output": 0.011375,
    "avg_bits_err_improve": 0.012344360937770433,
    "time": 5222.05322265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.014875,
    "time": 4024.218505859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.000875,
    "time": 4025.245849609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ (+ a c) (+ d b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40499793281619606,
    "avg_bits_err_output": 0.234125,
    "avg_bits_err_improve": 0.17087293281619606,
    "time": 10582.3173828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.082026384833778,
    "avg_bits_err_output": 30.082026384833778,
    "avg_bits_err_improve": 0,
    "time": 33593.55712890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.184016653323592,
    "avg_bits_err_output": 24.181549710496956,
    "avg_bits_err_improve": 0.002466942826636398,
    "time": 34607.595947265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (/ 1.0 (sin x)) (* (+ 1.0 (* (sin x) (/ -1.0 (sin x)))) (pow (sin x) 2.0)))) (tan x))",
    "output_parens": 16,
    "avg_bits_err_input": 30.419596007039722,
    "avg_bits_err_output": 30.484258946109602,
    "avg_bits_err_improve": -0.06466293906987985,
    "time": 42136.705078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00575,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.005375,
    "time": 3743.374755859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.2) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.8415147810946,
    "avg_bits_err_output": 11.138698914123015,
    "avg_bits_err_improve": 36.70281586697159,
    "time": 54298.755859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d b (* a c)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.609066136059518,
    "avg_bits_err_output": 25.60931613605952,
    "avg_bits_err_improve": -0.0002500000000011937,
    "time": 27993.58154296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.982753069101992,
    "avg_bits_err_output": 25.982753069101992,
    "avg_bits_err_improve": 0,
    "time": 20437.757080078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.021926748933204645,
    "avg_bits_err_improve": 0.015698251066795354,
    "time": 5902.9560546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (* -1.0 (- (* ux (* (- (fma ux maxCos 1.0) ux) maxCos)) (* ux (- (- (fma ux maxCos 1.0) ux) (+ maxCos -1.0)))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.570782447418955,
    "avg_bits_err_output": 0.5495200984243641,
    "avg_bits_err_improve": 13.02126234899459,
    "time": 34278.55029296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (* (* ux maxCos) (- -1.0 (* ux maxCos))) (* ux (+ (- -1.0 (* maxCos ux)) (- (+ ux maxCos) (fma maxCos ux 1.0)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.613212439241869,
    "avg_bits_err_output": 0.3558306242683842,
    "avg_bits_err_improve": 13.257381814973485,
    "time": 54395.07470703125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* uy (* 2.0 PI))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 32,
    "avg_bits_err_input": 0.33857795013352554,
    "avg_bits_err_output": 0.326387689142946,
    "avg_bits_err_improve": 0.012190260990579516,
    "time": 73487.12036132812,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.2018069536215519,
    "avg_bits_err_output": 0.20160883330896182,
    "avg_bits_err_improve": 0.00019812031259008878,
    "time": 35036.794921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5326200048436213,
    "avg_bits_err_output": 0.496348143825257,
    "avg_bits_err_improve": 0.03627186101836427,
    "time": 54669.843017578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3063428212477156,
    "avg_bits_err_output": 0.3063428212477156,
    "avg_bits_err_improve": 0,
    "time": 52804.33154296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- (log1p (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -2.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.33003870797885915,
    "avg_bits_err_output": 0.32957272505547675,
    "avg_bits_err_improve": 0.000465982923382402,
    "time": 44897.835693359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.059045489586960445,
    "avg_bits_err_output": 0.04249266654841896,
    "avg_bits_err_improve": 0.016552823038541484,
    "time": 17608.5810546875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.15872914394076296,
    "avg_bits_err_output": 0.14574521842648092,
    "avg_bits_err_improve": 0.012983925514282041,
    "time": 22496.448974609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6646417569147469,
    "avg_bits_err_output": 0.671383895373748,
    "avg_bits_err_improve": -0.006742138459001068,
    "time": 38173.31005859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.17133664783748395,
    "avg_bits_err_output": 0.16523923275447755,
    "avg_bits_err_improve": 0.006097415083006402,
    "time": 35625.861328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.499164735521869,
    "avg_bits_err_output": 2.4943656958440226,
    "avg_bits_err_improve": 0.004799039677846562,
    "time": 30124.7919921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (- (+ 1.0 (/ (* sinTheta_i sinTheta_O) v)) 1.0))) (/ (* cosTheta_i cosTheta_O) v)) (- (* v (+ 1.0 (* (sinh (/ 1.0 v)) 2.0))) v))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4724252346420962,
    "avg_bits_err_output": 0.495602573345924,
    "avg_bits_err_improve": -0.02317733870382782,
    "time": 56295.0537109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.152237279469318,
    "avg_bits_err_output": 0.152237279469318,
    "avg_bits_err_improve": 0,
    "time": 34455.075927734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.47341459829872734,
    "avg_bits_err_output": 0.42795002935355086,
    "avg_bits_err_improve": 0.045464568945176476,
    "time": 22010.201904296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* s (log1p (expm1 (- (log1p (- (/ (+ u -0.25) 0.75))))))))",
    "output_parens": 9,
    "avg_bits_err_input": 1.3315633394986508,
    "avg_bits_err_output": 0.5834828502494522,
    "avg_bits_err_improve": 0.7480804892491986,
    "time": 62214.7705078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(+ (fma (- (log1p (* u -4.0))) s (* (log1p (* u -4.0)) s)) (* (log1p (* u -4.0)) (- s)))",
    "output_parens": 12,
    "avg_bits_err_input": 12.384435603547642,
    "avg_bits_err_output": 0.20275,
    "avg_bits_err_improve": 12.181685603547642,
    "time": 47406.757080078125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (expm1 (log1p (* PI (* s 6.0)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.14616035262140678,
    "avg_bits_err_output": 0.16473431462653293,
    "avg_bits_err_improve": -0.01857396200512615,
    "time": 44568.56298828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9163473813057331,
    "avg_bits_err_output": 0.9163473813057331,
    "avg_bits_err_improve": 0,
    "time": 53768.2802734375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 PI) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.7136843510275821,
    "avg_bits_err_output": 0.5741572131300242,
    "avg_bits_err_improve": 0.13952713789755788,
    "time": 65669.49975585938,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- 0.0 u1)) (* (log1p (- u1)) (* (/ 1.0 (log1p (- u1))) (* (/ 1.0 (log1p (- u1))) (/ 1.0 (/ 1.0 (log1p (- u1)))))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 24,
    "avg_bits_err_input": 13.477390005953321,
    "avg_bits_err_output": 0.5230050472796026,
    "avg_bits_err_improve": 12.95438495867372,
    "time": 30405.8349609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.526408367458307,
    "avg_bits_err_output": 0.29078426761155934,
    "avg_bits_err_improve": 13.235624099846747,
    "time": 71593.08349609375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.343850610989191,
    "avg_bits_err_output": 0.203125,
    "avg_bits_err_improve": 14.140725610989191,
    "time": 27592.623779296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.578819480856613,
    "avg_bits_err_output": 0.5261249974284123,
    "avg_bits_err_improve": 12.0526944834282,
    "time": 23636.02197265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (+ (/ PI l) 1.0)) l) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.444907328151956,
    "avg_bits_err_output": 12.833597028015738,
    "avg_bits_err_improve": 3.6113103001362177,
    "time": 28368.15771484375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21333116579459072,
    "avg_bits_err_output": 0.21066175578915894,
    "avg_bits_err_improve": 0.002669410005431777,
    "time": 30796.3154296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+255) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (- (+ 1.0 (* x (/ 1.0 (tan B)))) 1.0)) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 40,
    "avg_bits_err_input": 13.883072798316967,
    "avg_bits_err_output": 12.54533970360052,
    "avg_bits_err_improve": 1.3377330947164463,
    "time": 65386.32861328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.58871014308897,
    "avg_bits_err_output": 1.965139880455205,
    "avg_bits_err_improve": 59.62357026263376,
    "time": 42961.630859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.7e-88) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 3.6e-112) (/ (- (* (+ 1.0 (sqrt 2.0)) t) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (- 1.0 (fma l l (- 1.0 (* (/ (+ 1.0 x) (+ -1.0 x)) (* l l)))))))) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 57,
    "avg_bits_err_input": 42.99137361713371,
    "avg_bits_err_output": 35.363897399374494,
    "avg_bits_err_improve": 7.627476217759217,
    "time": 46303.057861328125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.085453883550879,
    "avg_bits_err_output": 4.085453883550879,
    "avg_bits_err_improve": 0,
    "time": 36486.341064453125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.1194553301976353,
    "avg_bits_err_output": 0.00475,
    "avg_bits_err_improve": 1.1147053301976353,
    "time": 18795.74072265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.450937440019898,
    "avg_bits_err_output": 10.450937440019898,
    "avg_bits_err_improve": 0,
    "time": 21419.95458984375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -2.4e-217) (* (sqrt (- U)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 n)))) (if (<= U 2.5e-248) (sqrt (* 2.0 (- (* n (* (- U* U) (* U (* n (pow (/ l Om) 2.0))))) (* n (* U (- (* 2.0 (/ (* l l) Om)) t)))))) (* (sqrt (* n (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (sqrt (* (/ (* n (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*)))))) (* n (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))))) (* 2.0 U))))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.54947140814998,
    "avg_bits_err_output": 31.30574465776783,
    "avg_bits_err_improve": 3.243726750382148,
    "time": 37312.633056640625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) INFINITY) (/ 2.0 (* (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k))) (/ 2.0 (fma (* (+ (/ (pow t 3.0) (* l l)) 1.0) (* (pow (/ k t) 2.0) (sin (+ (- PI k) 0.0)))) (tan k) (* (tan k) (* (- (sin k)) (pow (/ k t) 2.0))))))",
    "output_parens": 46,
    "avg_bits_err_input": 47.70343549375484,
    "avg_bits_err_output": 37.5931754489078,
    "avg_bits_err_improve": 10.110260044847038,
    "time": 53622.076904296875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (+ 2.0 (pow (/ k t) 2.0))) (tan k)) (sin k)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.342430985604025,
    "avg_bits_err_output": 32.295131337878125,
    "avg_bits_err_improve": 0.04729964772590023,
    "time": 47618.742919921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5184238750216361,
    "avg_bits_err_output": 0.49828947658458683,
    "avg_bits_err_improve": 0.020134398437049283,
    "time": 44827.707275390625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (+ (fma PI (* PI (/ (+ n n) PI)) (- n)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.5140279260500398,
    "avg_bits_err_output": 0.5285473070285363,
    "avg_bits_err_improve": -0.014519380978496477,
    "time": 34350.261962890625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (+ (fma (- (exp l)) (- J) (* (exp l) (- J))) (* (- (exp l) (exp (- l))) J)) (cos (/ K 2.0))) U)",
    "output_parens": 17,
    "avg_bits_err_input": 17.213703918742553,
    "avg_bits_err_output": 17.2204566839311,
    "avg_bits_err_improve": -0.006752765188547727,
    "time": 48457.15869140625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(log (pow (exp (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (cos (- (/ (* K (+ m n)) 2.0) M))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.008031903246641,
    "avg_bits_err_output": 1.13749117332165,
    "avg_bits_err_improve": 13.870540729924992,
    "time": 43644.02783203125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.203969360937773,
    "avg_bits_err_output": 18.203969360937773,
    "avg_bits_err_improve": 0,
    "time": 38289.728759765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 5e+141) (* w0 (pow (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))) 0.5)) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.624542998972204,
    "avg_bits_err_output": 10.292134529934428,
    "avg_bits_err_improve": 4.332408469037777,
    "time": 20738.664794921875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.18210017194593,
    "avg_bits_err_output": 19.18210017194593,
    "avg_bits_err_improve": 0,
    "time": 19808.29443359375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (* (+ (/ (* d (* d c0)) (* D (* D (* w h)))) M) (- (/ (* d (* d c0)) (* D (* D (* w h)))) M)))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.74169802210378,
    "avg_bits_err_output": 56.936798525893174,
    "avg_bits_err_improve": 2.8048994962106093,
    "time": 37212.771728515625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+98) (fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (log (pow (exp (pow (/ (* M D) (+ d d)) 2.0)) (/ h l)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 27.016522333590924,
    "avg_bits_err_output": 26.16714525650593,
    "avg_bits_err_improve": 0.8493770770849949,
    "time": 46396.3037109375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (+ 0.5 (* 0.5 (/ 1.0 (- (* (/ 1.0 (hypot 1.0 x)) (- -1.0 (* x x)))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 15.448066746173776,
    "avg_bits_err_output": 15.448057341801364,
    "avg_bits_err_improve": 9.404372411481177e-06,
    "time": 36171.811767578125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (- 1.0 (* v v)) PI) (* 3.0 (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9822924812503606,
    "avg_bits_err_output": 0.016193758090669086,
    "avg_bits_err_improve": 0.9660987231596916,
    "time": 16430.551513671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) t))",
    "output_parens": 13,
    "avg_bits_err_input": 0.40754667459338745,
    "avg_bits_err_output": 0.3305164950493952,
    "avg_bits_err_improve": 0.07703017954399227,
    "time": 27684.36376953125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.015026789890100095,
    "avg_bits_err_output": 0.013343104229687444,
    "avg_bits_err_improve": 0.0016836856604126507,
    "time": 8736.385009765625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.586107011897837,
    "avg_bits_err_output": 0.586107011897837,
    "avg_bits_err_improve": 0,
    "time": 11625.048828125,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.06915416049006,
    "avg_bits_err_output": 2.0355079198648798,
    "avg_bits_err_improve": 0.03364624062518029,
    "time": 16782.94091796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02500558392515775,
    "avg_bits_err_output": 0.02500558392515775,
    "avg_bits_err_improve": 0,
    "time": 8020.442138671875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma b (* b (* a a)) (pow a 4.0))) 1.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1824013316399258,
    "avg_bits_err_output": 0.06589624062518028,
    "avg_bits_err_improve": 0.11650509101474553,
    "time": 26439.46630859375,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (fma a (* a (+ a 2.0)) (- (* a a))) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 17,
    "avg_bits_err_input": 0.1823637998834221,
    "avg_bits_err_output": 0.1826137998834221,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 14746.62841796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (fma (* a a) (* b b) (pow b 4.0)) (* a (* (fma b b (* a a)) a))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18817552734808446,
    "avg_bits_err_output": 0.08062815859556048,
    "avg_bits_err_improve": 0.10754736875252398,
    "time": 19349.69091796875,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (fma 4.0 (* p p) (* x x)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.050855588987446,
    "avg_bits_err_output": 13.055760921170108,
    "avg_bits_err_improve": -0.004905332182662647,
    "time": 24009.252197265625,
    "seed": 20,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (- (+ (/ (expm1 (+ x x)) (expm1 x)) 1.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 40.95910217272023,
    "avg_bits_err_output": 0.065875,
    "avg_bits_err_improve": 40.89322717272023,
    "time": 11502.534423828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (- x (tan x)) (* (- (fma (tan x) (/ 1.0 (tan x)) -1.0)) (tan x))))",
    "output_parens": 13,
    "avg_bits_err_input": 31.1622441417708,
    "avg_bits_err_output": 30.2713276101169,
    "avg_bits_err_improve": 0.8909165316539003,
    "time": 37087.44287109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* (* a c) (- (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))))) (- (* b_2 (* b_2 (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))))) b_2)) a)",
    "output_parens": 18,
    "avg_bits_err_input": 33.58034283479927,
    "avg_bits_err_output": 32.23452359718423,
    "avg_bits_err_improve": 1.3458192376150393,
    "time": 24073.69189453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* (* a c) (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))) (- 0.0 (- (* b_2 (* (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))) b_2)) (- b_2)))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 34.07013790512233,
    "avg_bits_err_output": 32.69553608609386,
    "avg_bits_err_improve": 1.3746018190284701,
    "time": 27659.622802734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp 1.0))) (exp -1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.809175377527488,
    "avg_bits_err_output": 31.482724398271905,
    "avg_bits_err_improve": 0.32645097925558275,
    "time": 22819.662353515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 2.3e+88) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (+ (/ 1.0 n) (- (+ 1.0 (* (/ 1.0 n) (+ (log1p x) -1.0))) 1.0)))) (- (exp (* (log1p x) (/ 1.0 n))) (pow x (/ 1.0 n))))",
    "output_parens": 22,
    "avg_bits_err_input": 32.28090906370833,
    "avg_bits_err_output": 31.03490021893305,
    "avg_bits_err_improve": 1.2460088447752788,
    "time": 70520.90112304688,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.299182087719696,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 29.289932087719695,
    "time": 6894.265380859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -6.8e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 1.15e+154) (- (- (* (/ (/ 1.0 (+ x 1.0)) (+ x 1.0)) (+ x 2.0)) (/ 1.0 x)) (/ (/ 1.0 (+ x 1.0)) (+ x 1.0))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 25,
    "avg_bits_err_input": 14.731404307233335,
    "avg_bits_err_output": 1.8639555425212853,
    "avg_bits_err_improve": 12.86744876471205,
    "time": 33484.593505859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (fma (cos eps) (cos x) (- (cos x))) (* (sin x) (sin eps)))",
    "output_parens": 9,
    "avg_bits_err_input": 39.3162565886154,
    "avg_bits_err_output": 6.241506947648838,
    "avg_bits_err_improve": 33.074749640966566,
    "time": 31562.42236328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.61538023469967,
    "avg_bits_err_output": 29.327397415338602,
    "avg_bits_err_improve": 0.2879828193610692,
    "time": 33583.83154296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.256443566921956,
    "avg_bits_err_output": 30.256443566921956,
    "avg_bits_err_improve": 0,
    "time": 32579.09619140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (fma c (* a (* c (/ -4.0 c))) (* b b)))) (* a 2.0))",
    "output_parens": 10,
    "avg_bits_err_input": 33.98275498666728,
    "avg_bits_err_output": 34.02486250982109,
    "avg_bits_err_improve": -0.04210752315380972,
    "time": 21838.578857421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* b b) (* a (* c -4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.42168904118794,
    "avg_bits_err_output": 34.6121023714746,
    "avg_bits_err_improve": -0.19041333028665974,
    "time": 26061.44970703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(log (exp (/ (log1p (- x)) (log1p x))))",
    "output_parens": 6,
    "avg_bits_err_input": 61.33684103380118,
    "avg_bits_err_output": 0.02441992500144232,
    "avg_bits_err_improve": 61.31242110879974,
    "time": 12344.53857421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.0083649550288,
    "avg_bits_err_output": 0.05822428280983049,
    "avg_bits_err_improve": 62.95014067221897,
    "time": 50469.96435546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (log (exp (+ -1.0 (/ (- 1.0 eps) (+ 1.0 eps))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.53179012753429,
    "avg_bits_err_output": 58.540783554326794,
    "avg_bits_err_improve": -0.008993426792500259,
    "time": 134874.419921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(+ 1.0 (log1p (expm1 (+ -1.0 (- (/ 1.0 x) (/ 1.0 (tan x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.87089322200644,
    "avg_bits_err_output": 59.87088097331817,
    "avg_bits_err_improve": 1.2248688264548946e-05,
    "time": 68675.66430664062,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.37253754349297,
    "avg_bits_err_output": 41.51877425624447,
    "avg_bits_err_improve": 18.853763287248498,
    "time": 48875.955322265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.26232657018524,
    "avg_bits_err_output": 0.07839074977123098,
    "avg_bits_err_improve": 41.18393582041401,
    "time": 14970.417236328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.71435071468072,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.71347571468072,
    "time": 4074.98291015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.3258058584518,
    "avg_bits_err_output": 0.01681923215775668,
    "avg_bits_err_improve": 29.308986626294043,
    "time": 4688.450439453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (* (+ (expm1 (- x)) (expm1 x)) (exp 1.0)) (exp -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 29.413189572216908,
    "avg_bits_err_output": 28.564161179105533,
    "avg_bits_err_improve": 0.8490283931113751,
    "time": 37658.83203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.814365027234135,
    "avg_bits_err_output": 9.814365027234135,
    "avg_bits_err_improve": 0,
    "time": 43865.86083984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (- (tan (+ x eps)) (tan x)) (fma (- (- (+ (* (tan x) (/ 1.0 (tan x))) (tan x)) (tan x))) (tan x) (tan x)))",
    "output_parens": 17,
    "avg_bits_err_input": 37.270815854716275,
    "avg_bits_err_output": 37.3314890067835,
    "avg_bits_err_improve": -0.06067315206722412,
    "time": 45741.649169921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- (* x (/ 1.0 (sqrt (+ x 1.0)))) x) (- x (sqrt x))))",
    "output_parens": 12,
    "avg_bits_err_input": 29.537471904759915,
    "avg_bits_err_output": 25.332772847147638,
    "avg_bits_err_improve": 4.204699057612277,
    "time": 28120.68701171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.47468880428797,
    "avg_bits_err_output": 0.3728154862224118,
    "avg_bits_err_improve": 36.10187331806556,
    "time": 28424.146484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.69575315252571,
    "avg_bits_err_output": 19.552476563626602,
    "avg_bits_err_improve": 0.14327658889910921,
    "time": 26761.272705078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(fma (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0)))) (- (atan N)))",
    "output_parens": 11,
    "avg_bits_err_input": 15.167809408758213,
    "avg_bits_err_output": 15.169541272060394,
    "avg_bits_err_improve": -0.0017318633021812246,
    "time": 36205.5849609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.719850736957508,
    "avg_bits_err_output": 1.2385090535832974,
    "avg_bits_err_improve": 28.48134168337421,
    "time": 29842.473876953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(fma (/ (- m (* m m)) v) (- (- 1.0 m) m) (+ -1.0 (+ (* m (/ (- m (* m m)) v)) m)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.08232272405410936,
    "avg_bits_err_output": 0.09095016780519113,
    "avg_bits_err_improve": -0.008627443751081779,
    "time": 40498.286376953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.37196471908534,
    "avg_bits_err_output": 0.3123659781302284,
    "avg_bits_err_improve": 16.059598740955114,
    "time": 16696.69970703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (- (* (/ angle 180.0) (+ (/ PI (/ angle 180.0)) 1.0)) (/ angle 180.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.389233911526752,
    "avg_bits_err_output": 20.471825780124007,
    "avg_bits_err_improve": -0.08259186859725531,
    "time": 64635.844970703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (- (* (- (pow b 2.0) (pow a 2.0)) (* (exp (log1p (cos (* PI (/ angle 180.0))))) (sin (* PI (/ angle 180.0))))) (* (sin (* PI (/ angle 180.0))) (- (pow b 2.0) (pow a 2.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 31.27805907037909,
    "avg_bits_err_output": 31.24416533612901,
    "avg_bits_err_improve": 0.03389373425007847,
    "time": 49138.436767578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma PI (* (/ (* (/ angle 180.0) (/ (/ PI PI) PI)) PI) (* PI PI)) 0.0))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.15324652601649,
    "avg_bits_err_output": 20.15821326815014,
    "avg_bits_err_improve": -0.004966742133650115,
    "time": 68314.35327148438,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1864505640636719,
    "avg_bits_err_output": 0.18258847503972342,
    "avg_bits_err_improve": 0.0038620890239484673,
    "time": 29948.3828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (expm1 (log1p (pow (tan x) 2.0)))) (+ 1.0 (expm1 (log1p (pow (tan x) 2.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.31238967449275823,
    "avg_bits_err_output": 0.34967540599107844,
    "avg_bits_err_improve": -0.03728573149832021,
    "time": 62598.80322265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1309387218755409,
    "avg_bits_err_output": 0.1309387218755409,
    "avg_bits_err_improve": 0,
    "time": 40683.589599609375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))) (+ (fma (sin phi1) (sin phi2) -1.0) 1.0))) R)",
    "output_parens": 13,
    "avg_bits_err_input": 17.032407256751274,
    "avg_bits_err_output": 17.041498604359738,
    "avg_bits_err_improve": -0.009091347608464417,
    "time": 38727.7890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.75275759132865,
    "avg_bits_err_output": 46.28151094044988,
    "avg_bits_err_improve": 6.471246650878776,
    "time": 25042.5712890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (+ (* (/ 1.0 (fma a (* c -4.0) (* b b))) (* a (* c -4.0))) (* b (* b (/ 1.0 (fma a (* c -4.0) (* b b))))))) (- b)) (+ a a))",
    "output_parens": 23,
    "avg_bits_err_input": 28.499638671508404,
    "avg_bits_err_output": 28.50891875987583,
    "avg_bits_err_improve": -0.009280088367425776,
    "time": 28341.13525390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.40407546852819,
    "avg_bits_err_output": 39.115725225644894,
    "avg_bits_err_improve": 4.288350242883297,
    "time": 24601.080078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (fma a (* -4.0 (* c (sqrt (/ 1.0 (fma b b (* a (* -4.0 c))))))) (* b (* (sqrt (/ 1.0 (fma b b (* a (* -4.0 c))))) b)))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 34.004483310277834,
    "avg_bits_err_output": 32.95998516282716,
    "avg_bits_err_improve": 1.0444981474506747,
    "time": 20424.0615234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8421704250420191,
    "avg_bits_err_output": 0.8392374263551654,
    "avg_bits_err_improve": 0.002932998686853705,
    "time": 35748.187255859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(+ (+ 1.0 (/ 2.0 (+ 2.0 (expm1 (* -2.0 x))))) -2.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.67968941526113,
    "avg_bits_err_output": 29.700269283189694,
    "avg_bits_err_improve": -0.020579867928564255,
    "time": 4703.379150390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (+ (exp (- x)) 1.0) (expm1 x)))",
    "output_parens": 10,
    "avg_bits_err_input": 58.03530237781477,
    "avg_bits_err_output": 1.0892124062518032,
    "avg_bits_err_improve": 56.94608997156297,
    "time": 10826.15771484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.10137886102345,
    "avg_bits_err_output": 0.005875,
    "avg_bits_err_improve": 58.095503861023445,
    "time": 6808.877685546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0072712406251802895,
    "avg_bits_err_output": 0.0072712406251802895,
    "avg_bits_err_improve": 0,
    "time": 3918.911865234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.2495,
    "avg_bits_err_output": 32.2495,
    "avg_bits_err_improve": 0,
    "time": 5318.50830078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(log (sqrt (/ (- x -1.0) (- 1.0 x))))",
    "output_parens": 5,
    "avg_bits_err_input": 58.52155357422325,
    "avg_bits_err_output": 58.553973380706125,
    "avg_bits_err_improve": -0.03241980648287779,
    "time": 142375.04565429688,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- 1.0 (* x x))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.02789624062518029,
    "avg_bits_err_output": 0.028488361324451067,
    "avg_bits_err_improve": -0.0005921206992707782,
    "time": 4383.9375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12275,
    "avg_bits_err_output": 0.12325,
    "avg_bits_err_improve": -0.0005000000000000004,
    "time": 48417.18212890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13019812031259012,
    "avg_bits_err_output": 0.12971936093777042,
    "avg_bits_err_improve": 0.0004787593748196983,
    "time": 14218.71435546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.42654678543464,
    "avg_bits_err_output": 3.9756621258913993,
    "avg_bits_err_improve": 35.45088465954324,
    "time": 63221.638671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.341059708464464,
    "avg_bits_err_output": 14.341059708464464,
    "avg_bits_err_improve": 0,
    "time": 5668.711669921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (* (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (* (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (/ 1.0 (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.13565926880974163,
    "avg_bits_err_output": 0.14106951007070798,
    "avg_bits_err_improve": -0.005410241260966342,
    "time": 50475.735107421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (+ -1.0 (* b (pow (fma c (* a -3.0) (* b b)) -0.5)))) (* a (* c (* (pow (fma c (* a -3.0) (* b b)) -0.5) -3.0)))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 52.7435470852624,
    "avg_bits_err_output": 46.39465517675421,
    "avg_bits_err_improve": 6.348891908508186,
    "time": 26756.0263671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.642582371706403,
    "avg_bits_err_output": 28.578078098912425,
    "avg_bits_err_improve": 0.06450427279397886,
    "time": 26818.30322265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ b b)) (* (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* a (* c -3.0)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.44111972458669,
    "avg_bits_err_output": 39.11727638023591,
    "avg_bits_err_improve": 4.323843344350784,
    "time": 30780.00927734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.06653552731876,
    "avg_bits_err_output": 34.06653552731876,
    "avg_bits_err_improve": 0,
    "time": 26784.802734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (* (cos (- lambda1 lambda2)) (* (cos (- lambda1 lambda2)) (/ 1.0 (cos (- lambda1 lambda2))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 12.991207689749464,
    "avg_bits_err_output": 12.994922394180971,
    "avg_bits_err_improve": -0.003714704431507343,
    "time": 63249.53173828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(* (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))) (log (pow (exp (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x)))) (/ 1.0 (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x)))))))",
    "output_parens": 23,
    "avg_bits_err_input": 29.167248913616987,
    "avg_bits_err_output": 29.171411853334032,
    "avg_bits_err_improve": -0.0041629397170446225,
    "time": 202432.73291015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 5438.21484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.508728574786986,
    "avg_bits_err_output": 14.508728574786986,
    "avg_bits_err_improve": 0,
    "time": 132070.18408203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.7e-294) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (* 2.0 (* (+ C (- A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) F)))) (sqrt (- (* A (* 4.0 C)) (pow B 2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.501496761601125,
    "avg_bits_err_output": 48.11310410459153,
    "avg_bits_err_improve": 4.388392657009597,
    "time": 47765.577392578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.037128243422124,
    "avg_bits_err_output": 29.037128243422124,
    "avg_bits_err_improve": 0,
    "time": 50435.73583984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2e-310) (/ (- (* (sqrt (- F)) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt F) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* (pow B 2.0) 2.0) (* (* A C) 8.0)))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.11395969337423,
    "avg_bits_err_output": 47.13520706579272,
    "avg_bits_err_improve": 4.978752627581507,
    "time": 52482.912841796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.500727153718927,
    "avg_bits_err_output": 15.500727153718927,
    "avg_bits_err_improve": 0,
    "time": 44059.547119140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.5e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -2e-271) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 5e+153) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))) (* (cbrt (* (fma (sqrt (- g h)) (sqrt (+ g h)) g) (/ (/ 1.0 (+ a a)) (/ 1.0 (+ a a))))) (cbrt (- (/ 1.0 (+ a a)))))))))",
    "output_parens": 99,
    "avg_bits_err_input": 36.32984600865366,
    "avg_bits_err_output": 12.00350864353937,
    "avg_bits_err_improve": 24.32633736511429,
    "time": 68037.74853515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (- (* PI 2.0) (+ (/ (* PI 2.0) 3.0) (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.990142106257573,
    "avg_bits_err_output": 0.027799842961492276,
    "avg_bits_err_improve": 0.9623422632960807,
    "time": 22287.317138671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6680212406251803,
    "avg_bits_err_output": 0.6680212406251803,
    "avg_bits_err_improve": 0,
    "time": 4849.126708984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.383478930627295,
    "avg_bits_err_output": 11.383478930627295,
    "avg_bits_err_improve": 0,
    "time": 33015.648193359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5811207016134862,
    "avg_bits_err_output": 0.527125,
    "avg_bits_err_improve": 0.05399570161348621,
    "time": 15259.09375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.312481655785085,
    "avg_bits_err_output": 15.93258836854393,
    "avg_bits_err_improve": 37.37989328724115,
    "time": 30397.1328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.658665575112182,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.658665575112182,
    "time": 2388.353759765625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.012875,
    "avg_bits_err_output": 0.012875,
    "avg_bits_err_improve": 0,
    "time": 30843.506103515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1204.68798828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -5e+146) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v))) (if (<= r 5e-26) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* w (* r (* w r)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.663979549339475,
    "avg_bits_err_output": 6.611257331253239,
    "avg_bits_err_improve": 6.0527222180862355,
    "time": 31641.30126953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5179001533525124,
    "avg_bits_err_output": 0.2701457781398927,
    "avg_bits_err_improve": 0.24775437521261967,
    "time": 74728.48657226562,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma u u (* t1 (+ (+ t1 u) u))))",
    "output_parens": 7,
    "avg_bits_err_input": 17.868495681068495,
    "avg_bits_err_output": 17.866835400459372,
    "avg_bits_err_improve": 0.0016602806091228217,
    "time": 30205.776611328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x (- 0.954929658551372 (* x (* x 0.12900613773279798))) (* x (fma (* x x) -0.12900613773279798 (* x (* x 0.12900613773279798)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.2253233238251722,
    "avg_bits_err_output": 0.17521936093777044,
    "avg_bits_err_improve": 0.050103962887401765,
    "time": 23702.38916015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow y 4.0) (- (* (pow y 4.0) 2.0) (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.004,
    "avg_bits_err_output": 0.012875,
    "avg_bits_err_improve": -0.008875,
    "time": 8087.122314453125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(+ (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))) (* (- (/ 1.0 b) (/ 1.0 a)) (* (/ 1.0 (* (- b a) (+ b a))) (- 1.0 (/ PI 2.0)))))",
    "output_parens": 20,
    "avg_bits_err_input": 14.7775402722595,
    "avg_bits_err_output": 9.810804558198685,
    "avg_bits_err_improve": 4.966735714060816,
    "time": 41782.367431640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (- (fma eps x x)))) (exp (- (* eps x) x)))) (- (/ 1.0 (exp (+ (+ 1.0 (fma eps x x)) -1.0))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 22,
    "avg_bits_err_input": 30.29231448085851,
    "avg_bits_err_output": 1.0313027607595215,
    "avg_bits_err_improve": 29.26101172009899,
    "time": 31761.85888671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (expm1 (log (- 3.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.03825,
    "avg_bits_err_improve": -0.025625,
    "time": 25778.360595703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.019,
    "avg_bits_err_output": 0.016125,
    "avg_bits_err_improve": 0.002874999999999999,
    "time": 43097.08544921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- (* 1.0 (- -1.0 (/ (+ t t) (+ t 1.0)))) (- -1.0 (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.017,
    "avg_bits_err_output": 0.018813721875540868,
    "avg_bits_err_improve": -0.0018137218755408663,
    "time": 23786.1826171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2910.80859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3939.72265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3757.327880859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.824674060686979,
    "avg_bits_err_output": 0.250875,
    "avg_bits_err_improve": 7.573799060686979,
    "time": 45067.795166015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.094733465421128,
    "avg_bits_err_output": 7.094733465421128,
    "avg_bits_err_improve": 0,
    "time": 30410.59130859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.474514949881973,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 15.460639949881973,
    "time": 13281.185546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (+ (expm1 (* x x)) 1.0) 10.0) (cos x))",
    "output_parens": 6,
    "avg_bits_err_input": 3.555566318981618,
    "avg_bits_err_output": 3.0784051782087984,
    "avg_bits_err_improve": 0.47716114077281935,
    "time": 42856.3955078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.186054409420443,
    "avg_bits_err_output": 15.186054409420443,
    "avg_bits_err_improve": 0,
    "time": 57775.75048828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.03636601724201,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.03636601724201,
    "time": 5142.556396484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.05344387228909,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 39.05306887228909,
    "time": 5912.59521484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.29625,
    "avg_bits_err_improve": 63.70375,
    "time": 5262.2333984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325111880238,
    "avg_bits_err_output": 0.39542236875252423,
    "avg_bits_err_improve": 61.44782875004985,
    "time": 23060.36865234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (- (sqrt (+ (* b b) (* a (* c -4.0)))))) (+ a a))",
    "output_parens": 11,
    "avg_bits_err_input": 34.42168904118794,
    "avg_bits_err_output": 34.6121023714746,
    "avg_bits_err_improve": -0.19041333028665974,
    "time": 24428.19970703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (fma a (* -4.0 (* c (sqrt (/ 1.0 (fma b b (* a (* -4.0 c))))))) (* b (* (sqrt (/ 1.0 (fma b b (* a (* -4.0 c))))) b)))) (* a 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 34.004483310277834,
    "avg_bits_err_output": 32.95998516282716,
    "avg_bits_err_improve": 1.0444981474506747,
    "time": 22932.078857421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2350.735595703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.857741367063106,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 39.84599136706311,
    "time": 10462.016845703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (fma y y (* x x)))",
    "output_parens": 6,
    "avg_bits_err_input": 20.0666625807642,
    "avg_bits_err_output": 20.066162580764196,
    "avg_bits_err_improve": 0.0005000000000023874,
    "time": 11890.819580078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6503057926418863,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6503057926418863,
    "time": 5275.798095703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.040125,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.039125,
    "time": 8642.943603515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.021073120312590145,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.010823120312590145,
    "time": 4847.48388671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.012375,
    "time": 3648.5732421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 2208.227294921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ a (+ d (+ c b))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3976960531287862,
    "avg_bits_err_output": 0.2545,
    "avg_bits_err_improve": 0.1431960531287862,
    "time": 10033.846435546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (* (* (exp 1.0) (- 1.0 (cos x))) (* (exp 1.0) (log (pow (exp (* (exp 1.0) (- 1.0 (cos x)))) (/ (exp -1.0) (exp (+ (log (- 1.0 (cos x))) 1.0))))))) (exp -1.0))",
    "output_parens": 23,
    "avg_bits_err_input": 30.717366939253317,
    "avg_bits_err_output": 30.71754299336521,
    "avg_bits_err_improve": -0.0001760541118933645,
    "time": 42264.158203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.38325999275463,
    "avg_bits_err_output": 24.378286461291726,
    "avg_bits_err_improve": 0.004973531462905356,
    "time": 19846.953857421875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ 1.0 (- (/ (- x (sin x)) (tan x)) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 29.847906859935847,
    "avg_bits_err_output": 29.851792156860014,
    "avg_bits_err_improve": -0.003885296924167392,
    "time": 51787.393798828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00699715999043749,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.00612215999043749,
    "time": 4233.1630859375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-301) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0001) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.7425151892976,
    "avg_bits_err_output": 11.223893299771985,
    "avg_bits_err_improve": 36.51862188952561,
    "time": 59495.452392578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d b (* a c)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.84041357473784,
    "avg_bits_err_output": 25.840163574737844,
    "avg_bits_err_improve": 0.000249999999997641,
    "time": 36099.8125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.61856440548663,
    "avg_bits_err_output": 25.61849128517404,
    "avg_bits_err_improve": 7.312031258877028e-05,
    "time": 16997.916748046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.020833600670583246,
    "avg_bits_err_improve": 0.016166399329416752,
    "time": 28050.03173828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (fma ux (* ux (/ (- (fma ux maxCos 1.0) ux) ux)) (- (fma (fma ux maxCos 1.0) (- (* ux maxCos) ux) (* ux maxCos))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.68308928991072,
    "avg_bits_err_output": 0.5515469857576785,
    "avg_bits_err_improve": 13.131542304153042,
    "time": 47155.915283203125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ (* ux (fma ux maxCos (- ux))) (- ux (* ux (+ (* (fma ux maxCos 1.0) (+ maxCos -1.0)) maxCos))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.72367366635082,
    "avg_bits_err_output": 0.3188877538084643,
    "avg_bits_err_improve": 13.404785912542355,
    "time": 43440.24462890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* maxCos (- ux (* (/ ux maxCos) (* ux maxCos)))) zi))",
    "output_parens": 36,
    "avg_bits_err_input": 0.33072118587336513,
    "avg_bits_err_output": 0.33677641727557456,
    "avg_bits_err_improve": -0.006055231402209427,
    "time": 70708.861328125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (+ (+ 2.0 (cos (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5))))))) -2.0) (- (+ (cos (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))) -1.0) -1.0)) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20541054573943912,
    "avg_bits_err_output": 0.20639065377422056,
    "avg_bits_err_improve": -0.000980108034781435,
    "time": 54257.84716796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5447692852279641,
    "avg_bits_err_output": 0.5065716011254333,
    "avg_bits_err_improve": 0.03819768410253077,
    "time": 39796.050048828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3203414002753925,
    "avg_bits_err_output": 0.3203414002753925,
    "avg_bits_err_improve": 0,
    "time": 45789.40234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- (log (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -1.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.3458643325518788,
    "avg_bits_err_output": 0.34614721185260805,
    "avg_bits_err_improve": -0.00028287930072923295,
    "time": 47966.166015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06266176980599433,
    "avg_bits_err_output": 0.046157923000204826,
    "avg_bits_err_improve": 0.016503846805789507,
    "time": 13463.308837890625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (* s (- (exp (/ (- (fabs x)) s)) -2.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.1694443566847406,
    "avg_bits_err_output": 0.1520538604367188,
    "avg_bits_err_improve": 0.017390496248021775,
    "time": 46290.9423828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6614285520357847,
    "avg_bits_err_output": 0.6614285520357847,
    "avg_bits_err_improve": 0,
    "time": 20893.26904296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15195905975788243,
    "avg_bits_err_output": 0.14668419553277465,
    "avg_bits_err_improve": 0.005274864225107784,
    "time": 37722.025390625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.527076019302284,
    "avg_bits_err_output": 2.527076019302284,
    "avg_bits_err_improve": 0,
    "time": 52162.861572265625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v v)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4683893808914111,
    "avg_bits_err_output": 0.48777428301170916,
    "avg_bits_err_improve": -0.019384902120298086,
    "time": 43846.254638671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11109494293788265,
    "avg_bits_err_output": 0.11109494293788265,
    "avg_bits_err_improve": 0,
    "time": 10088.462646484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* (log (* alpha alpha)) (* PI (log (+ (pow alpha (* (/ (/ PI PI) (log (* alpha alpha))) 2.0)) 0.0)))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.4714024399079597,
    "avg_bits_err_output": 0.4992095658390452,
    "avg_bits_err_improve": -0.027807125931085475,
    "time": 31502.267333984375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 (log1p (+ (/ 1.0 (- 1.0 (/ (+ u -0.25) 0.75))) -1.0))) s)",
    "output_parens": 8,
    "avg_bits_err_input": 1.3257919615366902,
    "avg_bits_err_output": 1.322194593650087,
    "avg_bits_err_improve": 0.0035973678866032532,
    "time": 69026.3125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.431461885444705,
    "avg_bits_err_output": 0.20725,
    "avg_bits_err_improve": 12.224211885444705,
    "time": 37403.843017578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (- (+ (/ (- r) (* s 3.0)) 1.0) 1.0))) (* r (* s (* PI 6.0)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.14141178160890722,
    "avg_bits_err_output": 0.1430580222340875,
    "avg_bits_err_improve": -0.0016462406251802897,
    "time": 89677.84228515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (+ n0_i (* n0_i (fma (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u))) -1.0))) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 15,
    "avg_bits_err_input": 0.884920688474437,
    "avg_bits_err_output": 0.8600836906549384,
    "avg_bits_err_improve": 0.024836997819498552,
    "time": 46417.353515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (- (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (log (pow (exp (/ 1.0 (sqrt PI))) (- (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.7058440506065694,
    "avg_bits_err_output": 0.5430226688972942,
    "avg_bits_err_improve": 0.16282138170927518,
    "time": 44743.45263671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- u1)) (* (log1p (- u1)) (/ 1.0 (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 13.577721959130951,
    "avg_bits_err_output": 0.5291570234417529,
    "avg_bits_err_improve": 13.048564935689198,
    "time": 30582.478515625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* PI (* PI (/ (* 2.0 u2) PI)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.624678750244207,
    "avg_bits_err_output": 0.30861083257614796,
    "avg_bits_err_improve": 13.31606791766806,
    "time": 55570.119140625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.950693271702217,
    "avg_bits_err_output": 0.2135,
    "avg_bits_err_improve": 13.737193271702218,
    "time": 36474.98095703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.67562021340418,
    "avg_bits_err_output": 0.5373861982362047,
    "avg_bits_err_improve": 12.138234015167976,
    "time": 21367.55517578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= F -5.7e-96) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (if (<= F -2.6e-125) (- (* PI l) (* (* (/ 1.0 (* F F)) (tan (* PI l))) (* (* (/ 1.0 (* F F)) (tan (* PI l))) (/ 1.0 (* (log1p (expm1 (/ 1.0 (* F F)))) (tan (* PI l))))))) (- (* PI l) (* (tan (* PI l)) (pow F -2.0)))))",
    "output_parens": 39,
    "avg_bits_err_input": 16.631047126414845,
    "avg_bits_err_output": 16.85009063652617,
    "avg_bits_err_improve": -0.21904351011132306,
    "time": 36926.69921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21008496250072115,
    "avg_bits_err_output": 0.20695996250072116,
    "avg_bits_err_improve": 0.003124999999999989,
    "time": 34636.00048828125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2.65e+233) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.269348627273855,
    "avg_bits_err_output": 12.10317472939904,
    "avg_bits_err_improve": 1.166173897874815,
    "time": 49469.9345703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (log (pow (/ (+ (pow (exp (/ PI 4.0)) f) (exp (* (/ PI 4.0) (- f)))) (+ (- (pow (exp (/ PI 4.0)) f) (pow (exp (/ PI 4.0)) (- f))) (fma (- (exp (- (/ PI 4.0)))) (pow (exp (/ PI 4.0)) (- 1.0 f)) (pow (exp (/ PI 4.0)) (- f))))) (/ 1.0 (/ PI 4.0)))))",
    "output_parens": 36,
    "avg_bits_err_input": 61.37488063878209,
    "avg_bits_err_output": 51.73476382192712,
    "avg_bits_err_improve": 9.64011681685497,
    "time": 65205.78466796875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.62e-152) (/ (* (* t (/ (sqrt 2.0) t)) t) (sqrt (- (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- l (* (/ (+ 1.0 x) (+ -1.0 x)) l)))))) (if (<= t 1.9e-158) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma 2.0 (* t t) (* l l)) (* l (fma l -1.0 l)))))) (/ (* (/ t (sqrt 2.0)) 2.0) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 55,
    "avg_bits_err_input": 43.048819249214226,
    "avg_bits_err_output": 36.20564451155524,
    "avg_bits_err_improve": 6.843174737658984,
    "time": 40947.241943359375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (* (pow (sin kx) 2.0) (pow (* (sin kx) (/ 1.0 (sin kx))) 2.0)) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 16,
    "avg_bits_err_input": 3.9409121748217673,
    "avg_bits_err_output": 3.9800612357653082,
    "avg_bits_err_improve": -0.03914906094354098,
    "time": 41511.1181640625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (+ (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) 2.0) (- (pow (* (/ (+ l l) Om) (sin kx)) 2.0) 1.0)))) 1.0)))))",
    "output_parens": 20,
    "avg_bits_err_input": 1.1116693791695658,
    "avg_bits_err_output": 0.012289296299448853,
    "avg_bits_err_improve": 1.099380082870117,
    "time": 20518.2138671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (- (+ 1.0 (* (/ t l) (/ t l))) 1.0))))))",
    "output_parens": 13,
    "avg_bits_err_input": 10.46811091450147,
    "avg_bits_err_output": 10.47596015991176,
    "avg_bits_err_improve": -0.007849245410291417,
    "time": 110960.85302734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-320) (* (sqrt (/ (* (+ n n) (/ (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) (+ n n))) (+ n n))) (* (sqrt 2.0) (hypot n n))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e+302) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (/ (* (+ n n) (/ (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) (+ n n))) (+ n n))) (* (sqrt 2.0) (hypot n n)))))",
    "output_parens": 88,
    "avg_bits_err_input": 34.93906984707936,
    "avg_bits_err_output": 25.885393780731505,
    "avg_bits_err_improve": 9.053676066347855,
    "time": 43409.294921875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) INFINITY) (/ 2.0 (* (sin k) (* (/ (pow t 3.0) (* l l)) (* (tan k) (pow (/ k t) 2.0))))) (/ 2.0 (fma (tan k) (* (* (pow (/ k t) 2.0) (+ (/ (pow t 3.0) (* l l)) 1.0)) (sin (+ (- PI k) 0.0))) (- (* (tan k) (* (pow (/ k t) 2.0) (sin k)))))))",
    "output_parens": 46,
    "avg_bits_err_input": 47.464270556938324,
    "avg_bits_err_output": 36.93394776134764,
    "avg_bits_err_improve": 10.530322795590685,
    "time": 64071.526123046875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+286) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (- (* (tan k) (+ 3.0 (pow (/ k t) 2.0))) (tan k)))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (* (tan k) (* (sin k) (fma (tan k) (/ (+ (/ (pow t 3.0) (* l l)) 1.0) (tan k)) -1.0))))))",
    "output_parens": 46,
    "avg_bits_err_input": 32.09885611619477,
    "avg_bits_err_output": 30.109451066173357,
    "avg_bits_err_improve": 1.9894050500214107,
    "time": 45149.08154296875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5102094015860297,
    "avg_bits_err_output": 0.5102094015860297,
    "avg_bits_err_improve": 0,
    "time": 46628.291015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(- (* (+ 1.0 (/ 1.0 (sqrt k))) (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0))) (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5278220424144104,
    "avg_bits_err_output": 0.5301356674208834,
    "avg_bits_err_improve": -0.002313625006472919,
    "time": 52845.063720703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (- (cos (/ K 2.0)) 0.0) (+ (fma (- (exp l)) (- J) (* (- J) (exp l))) (* J (- (exp l) (exp (- l)))))) U)",
    "output_parens": 18,
    "avg_bits_err_input": 17.524502448964775,
    "avg_bits_err_output": 17.526431929560783,
    "avg_bits_err_improve": -0.0019294805960079486,
    "time": 40002.7578125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 0.8) (* (cos (- (/ (+ (* K n) (+ (* K (- m 1.0)) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ m n)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 57,
    "avg_bits_err_input": 15.238814040605956,
    "avg_bits_err_output": 10.011457297381389,
    "avg_bits_err_improve": 5.227356743224567,
    "time": 32885.400146484375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (- (+ 1.0 (sqrt (+ 1.0 (pow (/ U (* 2.0 (* J (cos (/ K 2.0))))) 2.0)))) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 18.24563684218813,
    "avg_bits_err_output": 18.25204736875253,
    "avg_bits_err_improve": -0.006410526564401664,
    "time": 40171.47412109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))) (if (<= (/ h l) 2e-75) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 13.99973424969177,
    "avg_bits_err_output": 9.553283644832861,
    "avg_bits_err_improve": 4.446450604858908,
    "time": 34479.97705078125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.127674924208797,
    "avg_bits_err_output": 19.127674924208797,
    "avg_bits_err_improve": 0,
    "time": 28814.893310546875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* M M) 5e-58) (* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) (* (/ (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (sqrt (- (* (/ (* d (* d c0)) (* D (* h (* w D)))) (/ (* d (* d c0)) (* D (* h (* w D))))) (* M M)))))) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* (* D h) (* w D))) M)) (sqrt (+ (/ (* d (* c0 d)) (* (* D h) (* w D))) M)) (/ (* d (* c0 d)) (* (* D h) (* w D))))))",
    "output_parens": 71,
    "avg_bits_err_input": 59.578335426410895,
    "avg_bits_err_output": 55.653648461642355,
    "avg_bits_err_improve": 3.92468696476854,
    "time": 39117.184326171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) -2e+167) (+ (* (* (pow (/ (* M D) (+ d d)) 2.0) -0.5) (* (/ h l) (* (sqrt (/ d l)) (sqrt (/ d h))))) (* (/ (/ d h) (/ d h)) (sqrt (* (/ d h) (/ d l))))) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 2e+195) (* (- (sqrt (/ d h))) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (- (sqrt (/ d l))))) (* (/ (/ d h) (/ d h)) (* (sqrt (/ d l)) (* (sqrt (/ d h)) (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))))))))",
    "output_parens": 90,
    "avg_bits_err_input": 26.63086244926833,
    "avg_bits_err_output": 25.26955048801844,
    "avg_bits_err_improve": 1.3613119612498927,
    "time": 51241.345703125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- (+ 1.0 (- (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0) (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (pow (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 15.009825039194446,
    "avg_bits_err_output": 14.527143455916807,
    "avg_bits_err_improve": 0.482681583277639,
    "time": 193173.63110351562,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* -3.0 (* (sqrt (- 2.0 (* v (* v 6.0)))) (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9824693609377705,
    "avg_bits_err_output": 0.013667481250360576,
    "avg_bits_err_improve": 0.9688018796874099,
    "time": 15527.78076171875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.450863597056105,
    "avg_bits_err_output": 0.3841889098313943,
    "avg_bits_err_improve": 0.0666746872247107,
    "time": 28966.677001953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (- (/ (sqrt 2.0) 4.0) (* (/ (sqrt 2.0) 4.0) (* v v))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.013219360937770434,
    "avg_bits_err_output": 0.01189624062518029,
    "avg_bits_err_improve": 0.0013231203125901436,
    "time": 15264.376953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5547808128388627,
    "avg_bits_err_output": 0.5547808128388627,
    "avg_bits_err_improve": 0,
    "time": 8148.083740234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.044204896471663,
    "avg_bits_err_output": 2.0353086558464826,
    "avg_bits_err_improve": 0.00889624062518024,
    "time": 20756.654052734375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (exp (log1p (exp (/ (+ (- Ev mu) (+ EAccept Vef)) KbT))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.01445373388755319,
    "avg_bits_err_output": 0.014618974899414109,
    "avg_bits_err_improve": -0.0001652410118609185,
    "time": 14769.25537109375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(+ (pow (fma a a (* b b)) 2.0) (fma b (* b 4.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1838846127163147,
    "avg_bits_err_output": 0.18309924843993386,
    "avg_bits_err_improve": 0.0007853642763808455,
    "time": 21647.4541015625,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (- (fma (fma b b 1.0) (fma a a (* b b)) (fma a (* a (* b b)) (pow a 4.0))) (fma b b (* a a))) (- (* (- (* a (* a (+ 1.0 a))) (* (* b b) (fma a 3.0 -1.0))) 4.0) 1.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.18600154215544593,
    "avg_bits_err_output": 0.10863269279207356,
    "avg_bits_err_improve": 0.07736884936337236,
    "time": 27933.88671875,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (+ (* b (* (fma b b (* a a)) b)) (fma b (* a (* b a)) (pow a 4.0))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.1849129259339448,
    "avg_bits_err_output": 0.08066783312731146,
    "avg_bits_err_improve": 0.10424509280663333,
    "time": 21181.126953125,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (log (exp (+ 1.0 (/ x (sqrt (+ (* x x) (* 4.0 (* p p))))))))))",
    "output_parens": 11,
    "avg_bits_err_input": 13.183217069403334,
    "avg_bits_err_output": 13.187257511568673,
    "avg_bits_err_improve": -0.004040442165338831,
    "time": 20777.146240234375,
    "seed": 21,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.80101797391755,
    "avg_bits_err_output": 0.065375,
    "avg_bits_err_improve": 40.73564297391755,
    "time": 27121.94287109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (+ (+ (sin x) 1.0) -1.0)) (- (+ (+ x 1.0) -1.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.001298892878165,
    "avg_bits_err_output": 25.40518354741402,
    "avg_bits_err_improve": 5.5961153454641455,
    "time": 33242.043701171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (* -1.0 (- (* c (* a (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) (- (* b_2 (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) b_2)) b_2))) a)",
    "output_parens": 18,
    "avg_bits_err_input": 33.59610348022696,
    "avg_bits_err_output": 31.646960598474333,
    "avg_bits_err_improve": 1.9491428817526248,
    "time": 29255.457275390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.083170787186184,
    "avg_bits_err_output": 34.083170787186184,
    "avg_bits_err_improve": 0,
    "time": 23314.149169921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (fma (* (cos x) (- (exp 1.0))) (exp -1.0) (exp 0.0)) (* x x))",
    "output_parens": 9,
    "avg_bits_err_input": 31.4356699051609,
    "avg_bits_err_output": 31.120416847123558,
    "avg_bits_err_improve": 0.31525305803734227,
    "time": 24871.382080078125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 1.85e+52) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- -1.0 (+ (pow x (/ 1.0 n)) (- -1.0 (pow (- x -1.0) (/ 1.0 n))))))",
    "output_parens": 23,
    "avg_bits_err_input": 32.65638854650896,
    "avg_bits_err_output": 30.894221419605756,
    "avg_bits_err_improve": 1.7621671269032007,
    "time": 50516.946533203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.519028777784158,
    "avg_bits_err_output": 0.016375,
    "avg_bits_err_improve": 29.502653777784158,
    "time": 10206.76806640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (- (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ 1.0 x)) (- (/ 1.0 x) (* (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ 1.0 x))))))",
    "output_parens": 15,
    "avg_bits_err_input": 14.775579121337277,
    "avg_bits_err_output": 0.5282284107478745,
    "avg_bits_err_improve": 14.247350710589402,
    "time": 77199.03100585938,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (sin x) (- (sin eps)) (* (+ (cos eps) -1.0) (cos x)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.53444158006489,
    "avg_bits_err_output": 6.04000218936365,
    "avg_bits_err_improve": 33.494439390701245,
    "time": 26916.649658203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.87015529724748,
    "avg_bits_err_output": 29.57361629658565,
    "avg_bits_err_improve": 0.29653900066182715,
    "time": 29304.20654296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.325512253725027,
    "avg_bits_err_output": 30.325512253725027,
    "avg_bits_err_improve": 0,
    "time": 32572.81884765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.76671665607642,
    "avg_bits_err_output": 33.786588544329696,
    "avg_bits_err_improve": -0.019871888253277348,
    "time": 22648.048828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.90217231269888,
    "avg_bits_err_output": 33.90217231269888,
    "avg_bits_err_improve": 0,
    "time": 23862.526123046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.44332515996419,
    "avg_bits_err_output": 0.018158082813311303,
    "avg_bits_err_improve": 61.42516707715088,
    "time": 14805.7509765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.009547988953926,
    "avg_bits_err_output": 0.09175272015783402,
    "avg_bits_err_improve": 62.91779526879609,
    "time": 48131.91259765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (fma (/ 1.0 (/ (- 1.0 eps) (- eps -1.0))) (* (/ (- 1.0 eps) (+ 1.0 eps)) (/ 1.0 (/ 1.0 (/ (- 1.0 eps) (+ 1.0 eps))))) -1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 58.534877072668486,
    "avg_bits_err_output": 58.543653501517085,
    "avg_bits_err_improve": -0.008776428848598528,
    "time": 69860.19067382812,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -7.5e-155) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x))) (if (<= x 7.5e-155) (log (exp (- (/ 1.0 x) (/ 1.0 (tan x))))) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x)))))",
    "output_parens": 34,
    "avg_bits_err_input": 59.796361490079846,
    "avg_bits_err_output": 56.47143021273104,
    "avg_bits_err_improve": 3.324931277348803,
    "time": 59322.1728515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (* (expm1 (* eps (+ a b))) (/ eps (expm1 (* eps (+ a b))))) (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 18,
    "avg_bits_err_input": 60.24005956845239,
    "avg_bits_err_output": 40.72721263504029,
    "avg_bits_err_improve": 19.5128469334121,
    "time": 47295.065185546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.20429917238173,
    "avg_bits_err_output": 0.1382076897336578,
    "avg_bits_err_improve": 41.066091482648076,
    "time": 12768.8212890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.54128667628145,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 58.54066167628145,
    "time": 2914.063720703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.21804364908251,
    "avg_bits_err_output": 0.017365861892522247,
    "avg_bits_err_improve": 29.20067778718999,
    "time": 3794.345458984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.494713068448025,
    "avg_bits_err_output": 28.545757038745364,
    "avg_bits_err_improve": 0.9489560297026607,
    "time": 38837.344970703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.551911233420748,
    "avg_bits_err_output": 10.551911233420748,
    "avg_bits_err_improve": 0,
    "time": 43882.4375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (+ (- (pow (tan (+ x eps)) 2.0)) (+ (tan (- x)) (pow (tan (+ x eps)) 2.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 36.82284035546564,
    "avg_bits_err_output": 36.82390592573666,
    "avg_bits_err_improve": -0.0010655702710238302,
    "time": 40342.662353515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 30.07898519023648,
    "avg_bits_err_output": 25.703026451542826,
    "avg_bits_err_improve": 4.3759587386936545,
    "time": 38967.07177734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.994920403285256,
    "avg_bits_err_output": 0.3664758840418383,
    "avg_bits_err_improve": 36.628444519243416,
    "time": 22814.031494140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.89772360002084,
    "avg_bits_err_output": 19.756993894332126,
    "avg_bits_err_improve": 0.14072970568871312,
    "time": 31150.137939453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ 1.0 N)) (log (exp (- -1.0 (atan N))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.240620254415086,
    "avg_bits_err_output": 15.245392082028532,
    "avg_bits_err_improve": -0.004771827613446078,
    "time": 34570.784423828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.45688257295531,
    "avg_bits_err_output": 1.3066603380651296,
    "avg_bits_err_improve": 28.15022223489018,
    "time": 45121.8154296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (fma (- 1.0 m) (* (- 1.0 m) (/ m (- 1.0 m))) 0.0) v) 1.0) (- 1.0 m))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07492952695107366,
    "avg_bits_err_output": 0.08279757226510613,
    "avg_bits_err_improve": -0.00786804531403247,
    "time": 38804.38037109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.207636134846265,
    "avg_bits_err_output": 0.30016541406655656,
    "avg_bits_err_improve": 15.907470720779708,
    "time": 26154.1083984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ angle 180.0) PI) (* PI (* (/ (/ angle 180.0) PI) (+ -1.0 (+ 1.0 (/ PI (/ (/ angle 180.0) PI))))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.41193543653165,
    "avg_bits_err_output": 20.60937774834044,
    "avg_bits_err_improve": -0.19744231180878913,
    "time": 57548.1201171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (- (exp (log1p (cos (* PI (/ angle 180.0))))) 1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 30.96692917185439,
    "avg_bits_err_output": 30.941829815555927,
    "avg_bits_err_improve": 0.025099356298461828,
    "time": 48920.750244140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (- (+ (- (* (cos 1.0) (cos (fma (/ angle 180.0) PI -1.0))) (* (sin 1.0) (sin (fma (/ angle 180.0) PI -1.0)))) 1.0) 1.0)) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.225061056929945,
    "avg_bits_err_output": 20.22885012982174,
    "avg_bits_err_improve": -0.0037890728917950867,
    "time": 89004.41845703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (fma (- 1.0 m) (* (- 1.0 m) (/ m (- 1.0 m))) 0.0) v) 1.0) m)",
    "output_parens": 9,
    "avg_bits_err_input": 0.17904492500144228,
    "avg_bits_err_output": 0.18658985000288458,
    "avg_bits_err_improve": -0.007544925001442299,
    "time": 27725.9873046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (+ (pow (tan x) 2.0) (fma (- (* (tan x) (/ 1.0 (tan x)))) (tan x) (tan x)))) (+ 1.0 (* (tan x) (tan x))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.324533471101042,
    "avg_bits_err_output": 0.3362975142035507,
    "avg_bits_err_improve": -0.01176404310250867,
    "time": 63985.5390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13295996250072117,
    "avg_bits_err_output": 0.13295996250072117,
    "avg_bits_err_improve": 0,
    "time": 30037.166259765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi2) (* (cos phi1) (cos (- lambda2 lambda1)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.953097082217212,
    "avg_bits_err_output": 16.948844070425853,
    "avg_bits_err_improve": 0.004253011791359285,
    "time": 38846.9423828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.821499066727064,
    "avg_bits_err_output": 46.34988320683922,
    "avg_bits_err_improve": 6.471615859887841,
    "time": 26258.060546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))) (- (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* b b)) b)) (+ a a))",
    "output_parens": 18,
    "avg_bits_err_input": 28.60818091170491,
    "avg_bits_err_output": 27.815568495371032,
    "avg_bits_err_improve": 0.7926124163338777,
    "time": 25981.946533203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.89645211831586,
    "avg_bits_err_output": 39.590193922821165,
    "avg_bits_err_improve": 4.306258195494692,
    "time": 27193.435791015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.76344596353321,
    "avg_bits_err_output": 33.786588544329696,
    "avg_bits_err_improve": -0.023142580796488232,
    "time": 25166.840087890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8691847769019289,
    "avg_bits_err_output": 0.8691847769019289,
    "avg_bits_err_improve": 0,
    "time": 36651.11669921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.46947039949891,
    "avg_bits_err_output": 29.47160972539062,
    "avg_bits_err_improve": -0.0021393258917115077,
    "time": 32286.78662109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.01768685983989,
    "avg_bits_err_output": 1.1357005640636721,
    "avg_bits_err_improve": 56.881986295776215,
    "time": 14976.228759765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.026838844259885,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 58.018463844259884,
    "time": 8838.925537109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008813721875540867,
    "avg_bits_err_output": 0.008813721875540867,
    "avg_bits_err_improve": 0,
    "time": 2300.419677734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 32.345,
    "avg_bits_err_output": 32.345,
    "avg_bits_err_improve": 0,
    "time": 5029.7353515625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (+ -0.5 (* (log (/ (+ 1.0 x) (- 1.0 x))) (* (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))))))))",
    "output_parens": 30,
    "avg_bits_err_input": 58.52256983069233,
    "avg_bits_err_output": 58.539977701839796,
    "avg_bits_err_improve": -0.017407871147462117,
    "time": 54001.9501953125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.019625,
    "avg_bits_err_output": 0.019625,
    "avg_bits_err_improve": 0,
    "time": 26154.81640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.131125,
    "avg_bits_err_output": 0.131,
    "avg_bits_err_improve": 0.00012499999999998623,
    "time": 49395.658935546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (log (+ 1.0 (expm1 (cos (atan (/ (* eh (- (tan t))) ew)))))) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.13334436093777044,
    "avg_bits_err_output": 0.13479248125036059,
    "avg_bits_err_improve": -0.0014481203125901454,
    "time": 38376.502197265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma (- (- lambda1 lambda2) lambda2) (cos (/ (+ phi1 phi2) 2.0)) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 13,
    "avg_bits_err_input": 39.19432324589845,
    "avg_bits_err_output": 3.7028157523328273,
    "avg_bits_err_improve": 35.49150749356563,
    "time": 56089.938720703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.326517097683741,
    "avg_bits_err_output": 14.326517097683741,
    "avg_bits_err_improve": 0,
    "time": 5322.921142578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (expm1 (log1p (fma (sin phi1) (- (sin (asin (fma (cos delta) (sin phi1) (* (cos theta) (* (sin delta) (cos phi1))))))) (cos delta))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1540273748569362,
    "avg_bits_err_output": 0.16069343749301127,
    "avg_bits_err_improve": -0.006666062636075054,
    "time": 47204.98828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= b 3.9e+15) (/ (- (sqrt (expm1 (log1p (fma b b (* a (* c -3.0)))))) b) (* 3.0 a)) (/ (- (+ (- 1.0 b) (sqrt (fma b b (* c (* a -3.0))))) 1.0) (* 3.0 a)))",
    "output_parens": 20,
    "avg_bits_err_input": 52.85289051060008,
    "avg_bits_err_output": 51.3245558864055,
    "avg_bits_err_improve": 1.528334624194585,
    "time": 26813.22119140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.721469969936166,
    "avg_bits_err_output": 28.655971690575104,
    "avg_bits_err_improve": 0.06549827936106212,
    "time": 26474.09521484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.99996235999059,
    "avg_bits_err_output": 39.6662648196554,
    "avg_bits_err_improve": 4.333697540335187,
    "time": 27133.1083984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma c (* a (* c (/ -3.0 c))) (* b b))) b) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8056581876436,
    "avg_bits_err_output": 33.82072190951914,
    "avg_bits_err_improve": -0.015063721875542058,
    "time": 22273.596923828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.121493596458414,
    "avg_bits_err_output": 13.121833804109993,
    "avg_bits_err_improve": -0.00034020765157904975,
    "time": 59061.2041015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(log (/ 1.0 (exp (- (/ (+ 1.0 x) (+ -1.0 x)) (/ x (+ 1.0 x))))))",
    "output_parens": 9,
    "avg_bits_err_input": 29.050979948618203,
    "avg_bits_err_output": 29.05884263375016,
    "avg_bits_err_improve": -0.007862685131957647,
    "time": 65784.044921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ -1.0 x)) (+ (/ x (+ 1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.012667481250360579,
    "avg_bits_err_improve": -0.0011674812503605792,
    "time": 7022.40869140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -1.2e+151) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (if (<= x 6.5e+143) (+ (- (/ 1.0 (+ x 1.0)) (pow (+ x -1.0) -1.0)) (- (- (pow (+ x -1.0) -2.0)) (- (/ 1.0 (+ x -1.0)) (* x (pow (+ x -1.0) -2.0))))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))))",
    "output_parens": 30,
    "avg_bits_err_input": 14.261181778937402,
    "avg_bits_err_output": 12.942953784410914,
    "avg_bits_err_improve": 1.318227994526488,
    "time": 52471.715087890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.6e-299) (/ (- (* (sqrt (- F)) (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* 2.0 (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* 2.0 (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (pow B 2.0) (* A (* C 4.0)))))) (sqrt F))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.75869241148732,
    "avg_bits_err_output": 48.06280914573898,
    "avg_bits_err_improve": 4.695883265748336,
    "time": 48774.265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (+ (+ 1.0 (+ -1.0 C)) (- A)) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 15,
    "avg_bits_err_input": 29.234304135622732,
    "avg_bits_err_output": 29.41130097029433,
    "avg_bits_err_improve": -0.17699683467159844,
    "time": 39014.929931640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (sqrt (- F)) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.28914102363238,
    "avg_bits_err_output": 47.12840337722115,
    "avg_bits_err_improve": 5.160737646411235,
    "time": 45852.079833984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.839933858978108,
    "avg_bits_err_output": 15.839933858978108,
    "avg_bits_err_improve": 0,
    "time": 37287.738525390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.26e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (* (sqrt (- h g)) (sqrt (- (+ g h))))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-296) (* (* (cbrt (/ 1.0 (+ a a))) (* (cbrt (/ 1.0 (+ a a))) (/ 1.0 (cbrt (/ 1.0 (+ a a)))))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (* (- g h) (+ g h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 3.7e-156) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))) (if (<= g 8e+147) (+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (* (cbrt -1.0) (* (/ (cbrt (+ g (sqrt (- (* g g) (* h h))))) (cbrt (/ 1.0 (+ a a)))) (pow (cbrt (/ 1.0 (+ a a))) 2.0)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))))))))",
    "output_parens": 132,
    "avg_bits_err_input": 36.19173754887036,
    "avg_bits_err_output": 14.804158252270778,
    "avg_bits_err_improve": 21.38757929659958,
    "time": 81991.99609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (- (* (cos (/ (* 2.0 PI) 3.0)) (cos (/ (acos (/ (- g) h)) 3.0))) (* (- (+ (sin (/ (* 2.0 PI) 3.0)) 1.0) 1.0) (sin (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.9905926703212454,
    "avg_bits_err_output": 0.04038477500432693,
    "avg_bits_err_improve": 0.9502078953169185,
    "time": 8729.8818359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7236981203125902,
    "avg_bits_err_output": 0.7236981203125902,
    "avg_bits_err_improve": 0,
    "time": 3496.62158203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.187339252153905,
    "avg_bits_err_output": 11.187339252153905,
    "avg_bits_err_improve": 0,
    "time": 35438.635009765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output_parens": 5,
    "avg_bits_err_input": 0.38977469366336176,
    "avg_bits_err_output": 0.38977469366336176,
    "avg_bits_err_improve": 0,
    "time": 12190.586181640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.0000001) (log1p (log1p (expm1 (+ x (+ (hypot 1.0 x) -1.0))))) (log (- (+ x (* x (log1p (expm1 (* x (/ 1.0 (hypot 1.0 x))))))) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 53.11471906277841,
    "avg_bits_err_output": 10.988187254697584,
    "avg_bits_err_improve": 42.12653180808083,
    "time": 26996.0107421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.696461706896871,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.696461706896871,
    "time": 2461.54638671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.012625,
    "avg_bits_err_output": 0.01325,
    "avg_bits_err_improve": -0.0006249999999999988,
    "time": 17426.273681640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1258.227783203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -2e-91) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (* (- 0.375 (* v 0.25)) (* w r)) (* w r)) (- 1.0 v))) (if (<= r 1e-119) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* w (- (- w) (* w (- -1.0 (* r r)))))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (* (- 0.375 (* v 0.25)) (* w r)) (* w r)) (- 1.0 v)))))",
    "output_parens": 43,
    "avg_bits_err_input": 12.764505436557108,
    "avg_bits_err_output": 6.562368371833332,
    "avg_bits_err_improve": 6.202137064723776,
    "time": 34291.047607421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ x1 (fma 3.0 (/ (- (- (* 3.0 (* x1 x1)) x1) (* 2.0 x2)) (fma x1 x1 1.0)) (+ x1 (fma x1 (* x1 x1) (fma (* 3.0 (* x1 x1)) (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) (* (fma x1 x1 1.0) (+ (* (* x1 x1) -6.0) (+ (* (+ (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) -3.0) (* x1 (* 2.0 (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0))))) (* (/ (- (fma 2.0 x2 (* 3.0 (* x1 x1))) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 0.5078143109829513,
    "avg_bits_err_output": 0.27509665375851816,
    "avg_bits_err_improve": 0.2327176572244331,
    "time": 74185.45239257812,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.078678852635576,
    "avg_bits_err_output": 18.078678852635576,
    "avg_bits_err_improve": 0,
    "time": 35786.00146484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (- (* x (+ (* 0.12900613773279798 (* x x)) 1.0)) x))",
    "output_parens": 7,
    "avg_bits_err_input": 0.25050960194963134,
    "avg_bits_err_output": 0.19172400089441777,
    "avg_bits_err_improve": 0.05878560105521358,
    "time": 38239.555419921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00404024101186092,
    "avg_bits_err_output": 0.00404024101186092,
    "avg_bits_err_improve": 0,
    "time": 2228.609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.816422851129083,
    "avg_bits_err_output": 9.64856888824167,
    "avg_bits_err_improve": 5.167853962887413,
    "time": 44794.468017578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (* 1.0 (log1p (exp (- (* eps x) x))))) (+ (* (exp (- (fma eps x x))) (- 1.0 (/ 1.0 eps))) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) -1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.61187939349448,
    "avg_bits_err_output": 0.933259122319303,
    "avg_bits_err_improve": 28.678620271175177,
    "time": 33416.7333984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.018625,
    "avg_bits_err_output": 0.021698120312590146,
    "avg_bits_err_improve": -0.003073120312590147,
    "time": 14385.344482421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 2.0 (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -2.0))))) (+ 2.0 (+ (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) 4.0)))",
    "output_parens": 26,
    "avg_bits_err_input": 0.023375,
    "avg_bits_err_output": 0.02314624062518029,
    "avg_bits_err_improve": 0.0002287593748197085,
    "time": 28897.22998046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ t 1.0))) (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.049625,
    "avg_bits_err_output": 0.051011842188131006,
    "avg_bits_err_improve": -0.001386842188131003,
    "time": 12140.106689453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 2771.326904296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2905.34765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3997.8779296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.8048787719210315,
    "avg_bits_err_output": 0.24625,
    "avg_bits_err_improve": 7.558628771921032,
    "time": 60228.526611328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.176543722603144,
    "avg_bits_err_output": 7.176543722603144,
    "avg_bits_err_improve": 0,
    "time": 26223.340087890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.948025801308923,
    "avg_bits_err_output": 0.013625,
    "avg_bits_err_improve": 15.934400801308923,
    "time": 13975.644287109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (- (* (/ (pow (exp (* x x)) 10.0) (cos x)) (+ (cos x) 1.0)) (* (pow (exp (* x x)) 10.0) (/ (/ (cos x) (cos x)) (cos x)))))",
    "output_parens": 20,
    "avg_bits_err_input": 3.543833777534675,
    "avg_bits_err_output": 3.0540403437354287,
    "avg_bits_err_improve": 0.48979343379924645,
    "time": 53114.691650390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.918746765158422,
    "avg_bits_err_output": 14.918746765158422,
    "avg_bits_err_improve": 0,
    "time": 85637.62475585938,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.13048641923284,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.13048641923284,
    "time": 5155.050537109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.37399185609116,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 39.37374185609116,
    "time": 4220.93408203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.307125,
    "avg_bits_err_improve": 63.692875,
    "time": 8774.140869140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325371826954,
    "avg_bits_err_output": 0.39205676718957344,
    "avg_bits_err_improve": 61.451196951079964,
    "time": 18460.281982421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.90217231269888,
    "avg_bits_err_output": 33.90217231269888,
    "avg_bits_err_improve": 0,
    "time": 24841.60986328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma a (* c -4.0) (* b b))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.76344596353321,
    "avg_bits_err_output": 33.786588544329696,
    "avg_bits_err_improve": -0.023142580796488232,
    "time": 25689.10888671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2339.377685546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.674689452994,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 39.665439452994,
    "time": 8011.40576171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.329775514485313,
    "avg_bits_err_output": 20.329775514485313,
    "avg_bits_err_improve": 0,
    "time": 6921.859619140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.665714915995972,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.665714915995972,
    "time": 4886.435791015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.037625,
    "avg_bits_err_output": 0.00325,
    "avg_bits_err_improve": 0.034374999999999996,
    "time": 5590.10546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019344360937770436,
    "avg_bits_err_output": 0.0105,
    "avg_bits_err_improve": 0.008844360937770435,
    "time": 2982.21435546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.016625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.015875,
    "time": 8296.7783203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000625,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0,
    "time": 1673.632080078125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40403101562950744,
    "avg_bits_err_output": 0.239625,
    "avg_bits_err_improve": 0.16440601562950743,
    "time": 10177.17919921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (* (- (exp -1.0)) (* (exp 1.0) (log (pow (exp (* (exp 1.0) (- 1.0 (cos x)))) (- (/ (* (exp 1.0) (- 1.0 (cos x))) (* (exp 1.0) (- 1.0 (cos x))))))))) (exp -1.0))",
    "output_parens": 24,
    "avg_bits_err_input": 30.19763256285712,
    "avg_bits_err_output": 30.19835027160291,
    "avg_bits_err_improve": -0.0007177087457890252,
    "time": 30092.36474609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- (* (/ 1.0 (sqrt (- (* x x) eps))) eps) (- (* (* x x) (/ 1.0 (sqrt (- (* x x) eps)))) x))",
    "output_parens": 13,
    "avg_bits_err_input": 24.89990283792306,
    "avg_bits_err_output": 22.8173426555864,
    "avg_bits_err_improve": 2.0825601823366604,
    "time": 25302.117919921875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (log (exp (/ (- x (sin x)) (tan x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.992117789079575,
    "avg_bits_err_output": 30.007563270706378,
    "avg_bits_err_improve": -0.015445481626802149,
    "time": 44734.366943359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007337554964767636,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.006212554964767636,
    "time": 3879.35009765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-6) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.798963025806536,
    "avg_bits_err_output": 11.292590755424825,
    "avg_bits_err_improve": 36.50637227038171,
    "time": 53126.5556640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.035564446303326,
    "avg_bits_err_output": 26.034293205678143,
    "avg_bits_err_improve": 0.0012712406251829123,
    "time": 18583.06689453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.95546451676505,
    "avg_bits_err_output": 25.955214516765054,
    "avg_bits_err_improve": 0.000249999999997641,
    "time": 32020.0830078125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03225,
    "avg_bits_err_output": 0.023324960075102284,
    "avg_bits_err_improve": 0.008925039924897717,
    "time": 6430.87744140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (* (sin (* (+ uy uy) PI)) (* (sin (* (+ uy uy) PI)) (/ 1.0 (sin (* (+ uy uy) PI))))) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* maxCos (* maxCos (/ ux maxCos))))))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.686136210332535,
    "avg_bits_err_output": 0.5594030949665741,
    "avg_bits_err_improve": 13.12673311536596,
    "time": 34005.5458984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (* ux (+ maxCos (* (fma ux maxCos 1.0) (+ maxCos -1.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.72487156003154,
    "avg_bits_err_output": 0.3385954087573506,
    "avg_bits_err_improve": 13.386276151274188,
    "time": 38427.907958984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* yi (sin (* (+ uy uy) (* (* uy (/ 1.0 uy)) PI)))))))",
    "output_parens": 35,
    "avg_bits_err_input": 0.34560481299364165,
    "avg_bits_err_output": 0.34160649173159807,
    "avg_bits_err_improve": 0.00399832126204358,
    "time": 94688.57446289062,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (log (exp (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 48,
    "avg_bits_err_input": 0.2039093460579787,
    "avg_bits_err_output": 0.2042839733638312,
    "avg_bits_err_improve": -0.0003746273058524985,
    "time": 56984.12158203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5239761466028169,
    "avg_bits_err_output": 0.5168219043167702,
    "avg_bits_err_improve": 0.007154242286046664,
    "time": 45344.486572265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(fma (cos (* u2 -6.28318530718)) (* (cos (* u2 -6.28318530718)) (/ (sqrt (/ u1 (- 1.0 u1))) (cos (* u2 -6.28318530718)))) 0.0)",
    "output_parens": 12,
    "avg_bits_err_input": 0.33648332060704467,
    "avg_bits_err_output": 0.3407715903558275,
    "avg_bits_err_improve": -0.004288269748782825,
    "time": 50816.155029296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* s (log (expm1 (log1p (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.33416850618637534,
    "avg_bits_err_output": 0.34596031080802886,
    "avg_bits_err_improve": -0.011791804621653523,
    "time": 41575.90234375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05882812611399042,
    "avg_bits_err_output": 0.04027349392890941,
    "avg_bits_err_improve": 0.018554632185081014,
    "time": 73379.91259765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (exp (log1p (exp (/ (- (fabs x)) s)))) (* s (+ (exp (/ (- (fabs x)) s)) 1.0))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.13424615967520595,
    "avg_bits_err_output": 0.12449127217304246,
    "avg_bits_err_improve": 0.009754887502163495,
    "time": 35941.392822265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6724961202122393,
    "avg_bits_err_output": 0.6732809363468223,
    "avg_bits_err_improve": -0.0007848161345830329,
    "time": 26115.70263671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.15205500933767416,
    "avg_bits_err_output": 0.1454621762088687,
    "avg_bits_err_improve": 0.006592833128805459,
    "time": 23956.025390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.579439253100349,
    "avg_bits_err_output": 2.579439253100349,
    "avg_bits_err_improve": 0,
    "time": 22411.57421875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (/ (* (sinh (/ 1.0 v)) 2.0) v) (* v v)))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4524569086763729,
    "avg_bits_err_output": 0.47258423007359374,
    "avg_bits_err_improve": -0.020127321397220843,
    "time": 45154.41552734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (log (+ v v)))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.133655879990983,
    "avg_bits_err_output": 0.07774594179077157,
    "avg_bits_err_improve": 0.05590993820021142,
    "time": 37059.01220703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4727386216274613,
    "avg_bits_err_output": 0.4270377222210807,
    "avg_bits_err_improve": 0.04570089940638056,
    "time": 24914.994140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* 3.0 (* (* 3.0 s) (* (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) (/ s (* 3.0 s)))))",
    "output_parens": 11,
    "avg_bits_err_input": 1.3366678960400442,
    "avg_bits_err_output": 1.3644956227930525,
    "avg_bits_err_improve": -0.027827726753008264,
    "time": 113169.88134765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (- (log1p (- (* 4.0 u)))))",
    "output_parens": 5,
    "avg_bits_err_input": 12.261449949987062,
    "avg_bits_err_output": 0.20425,
    "avg_bits_err_improve": 12.057199949987062,
    "time": 51884.981689453125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* r 6.0) (* 6.0 (* (/ PI (* r 6.0)) (* r s))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.13820640067753484,
    "avg_bits_err_output": 0.14844758097727415,
    "avg_bits_err_improve": -0.010241180299739305,
    "time": 110423.873046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8725186000838073,
    "avg_bits_err_output": 0.8725186000838073,
    "avg_bits_err_improve": 0,
    "time": 44755.1708984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.6713088026669302,
    "avg_bits_err_output": 0.6713088026669302,
    "avg_bits_err_improve": 0,
    "time": 68505.8779296875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.367400261435419,
    "avg_bits_err_output": 0.5242158196633717,
    "avg_bits_err_improve": 12.843184441772047,
    "time": 27912.720703125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (/ (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2))) (pow (cos (* (* 2.0 PI) u2)) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 13.414906258828818,
    "avg_bits_err_output": 0.36061760108828816,
    "avg_bits_err_improve": 13.05428865774053,
    "time": 56412.3671875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.056376922310076,
    "avg_bits_err_output": 0.209875,
    "avg_bits_err_improve": 13.846501922310075,
    "time": 44208.051025390625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.66285528476113,
    "avg_bits_err_output": 0.4997101983124778,
    "avg_bits_err_improve": 12.163145086448653,
    "time": 21528.66015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (/ (* (/ 1.0 (* F F)) (tan (* l (- (* l (+ (/ PI l) 1.0)) l)))) 1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 16.691843987733897,
    "avg_bits_err_output": 13.006340374428403,
    "avg_bits_err_improve": 3.685503613305494,
    "time": 41420.105712890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21904248125036055,
    "avg_bits_err_output": 0.21560879558994792,
    "avg_bits_err_improve": 0.003433685660412633,
    "time": 30192.8798828125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= x -11000000000.0) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))))",
    "output_parens": 28,
    "avg_bits_err_input": 13.969781206720246,
    "avg_bits_err_output": 13.231874551992107,
    "avg_bits_err_improve": 0.737906654728139,
    "time": 67671.755859375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.33326911280274,
    "avg_bits_err_output": 1.8848466696658952,
    "avg_bits_err_improve": 59.44842244313684,
    "time": 65080.171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -6e-147) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 2e-248) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (+ (* t (+ t t)) (* l l)))))) (/ (exp (log (* t (sqrt 2.0)))) (exp (log (sqrt (fma l (* l (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x)))) (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))))))))))",
    "output_parens": 54,
    "avg_bits_err_input": 42.37771968794223,
    "avg_bits_err_output": 35.57761276921741,
    "avg_bits_err_improve": 6.800106918724822,
    "time": 40249.0068359375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.860575818610361,
    "avg_bits_err_output": 3.860575818610361,
    "avg_bits_err_improve": 0,
    "time": 46606.3642578125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0458010014493448,
    "avg_bits_err_output": 0.006375,
    "avg_bits_err_improve": 1.0394260014493448,
    "time": 10484.0712890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.044448814120882,
    "avg_bits_err_output": 10.044448814120882,
    "avg_bits_err_improve": 0,
    "time": 60582.955322265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (* (sqrt U) (sqrt (* n (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) 2.0)))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+292) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) (sqrt (* 2.0 (* n U))))))",
    "output_parens": 74,
    "avg_bits_err_input": 35.1978862865177,
    "avg_bits_err_output": 30.61147991325359,
    "avg_bits_err_improve": 4.586406373264111,
    "time": 35409.744140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -8e-105) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (sin k) (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (* (sin k) (- (tan k)))))) (if (<= t 1.16e-64) (/ 2.0 (fma (pow (/ k t) 2.0) (* (tan k) (* (sin (+ (- PI k) 0.0)) (+ (/ (pow t 3.0) (* l l)) 1.0))) (* (* (pow (/ k t) 2.0) (tan k)) (- (sin k))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (sin k) (tan (- k)) (* (sin k) (* (tan k) (+ (pow (/ k t) 2.0) 1.0))))))))",
    "output_parens": 57,
    "avg_bits_err_input": 47.38494465601513,
    "avg_bits_err_output": 35.64395631245402,
    "avg_bits_err_improve": 11.740988343561106,
    "time": 54682.221435546875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (tan k))) (sin k)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.22962081645923,
    "avg_bits_err_output": 32.20986493381343,
    "avg_bits_err_improve": 0.019755882645803524,
    "time": 45482.326171875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a2) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5215889125209148,
    "avg_bits_err_output": 0.5011383484572429,
    "avg_bits_err_improve": 0.02045056406367185,
    "time": 43608.498291015625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow k -0.5) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.49177474195505366,
    "avg_bits_err_output": 0.448793686342028,
    "avg_bits_err_improve": 0.042981055613025676,
    "time": 31998.431884765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (* (cos (/ K 2.0)) (* (cos (/ K 2.0)) (- (/ (exp l) (cos (/ K 2.0))) (/ (* (exp (- l)) (/ (cos (/ K 2.0)) (cos (/ K 2.0)))) (cos (/ K 2.0))))))) U)",
    "output_parens": 24,
    "avg_bits_err_input": 17.508431442493627,
    "avg_bits_err_output": 17.513678617574136,
    "avg_bits_err_improve": -0.005247175080508981,
    "time": 40115.99658203125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (* K (+ n (- (+ m 1.0) 1.0))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ m n)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 56,
    "avg_bits_err_input": 15.561705301890038,
    "avg_bits_err_output": 10.107716378307224,
    "avg_bits_err_improve": 5.4539889235828145,
    "time": 32424.994384765625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.464323120312592,
    "avg_bits_err_output": 17.464323120312592,
    "avg_bits_err_improve": 0,
    "time": 34327.06640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 5e+134) (* w0 (sqrt (- 1.0 (- (+ (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)) 1.0) 1.0)))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 37,
    "avg_bits_err_input": 14.651517897889446,
    "avg_bits_err_output": 10.155245792842337,
    "avg_bits_err_improve": 4.49627210504711,
    "time": 37662.587646484375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.103543663613543,
    "avg_bits_err_output": 19.103543663613543,
    "avg_bits_err_improve": 0,
    "time": 34924.73681640625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) (* (/ (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (sqrt (- (* (/ (* d (* d c0)) (* D (* h (* w D)))) (/ (* d (* d c0)) (* D (* h (* w D))))) (* M M))))))",
    "output_parens": 42,
    "avg_bits_err_input": 59.690435362156144,
    "avg_bits_err_output": 56.42009225490014,
    "avg_bits_err_improve": 3.2703431072560036,
    "time": 39109.13037109375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (- (* (* (sqrt (/ d l)) (- 1.0 (exp (+ (* 2.0 (log (/ (* M D) (+ d d)))) (log (* 0.5 (/ h l))))))) (* (sqrt (/ d h)) (/ (/ d l) (/ d l)))) (* (/ (/ d l) (/ d l)) 0.0)) (if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+177) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (fma (sqrt (/ d h)) (* (- 1.0 (log (pow (pow (exp (/ h l)) 0.5) (pow (/ (* M D) (+ d d)) 2.0)))) (sqrt (/ d l))) 0.0)))",
    "output_parens": 89,
    "avg_bits_err_input": 26.882942619124844,
    "avg_bits_err_output": 25.454518484897157,
    "avg_bits_err_improve": 1.4284241342276864,
    "time": 47374.66748046875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (exp -2.0) (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 15.55160651413115,
    "avg_bits_err_output": 15.080786049778377,
    "avg_bits_err_improve": 0.4708204643527729,
    "time": 73142.3369140625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (- 3.0 (* 3.0 (* v v))) (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9842924812503606,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.9740424812503606,
    "time": 11710.944091796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (fma (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI)) 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.42143915857060477,
    "avg_bits_err_output": 0.36389992704520413,
    "avg_bits_err_improve": 0.057539231525400636,
    "time": 27437.689208984375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.01252124062518029,
    "avg_bits_err_output": 0.00989624062518029,
    "avg_bits_err_improve": 0.0026250000000000006,
    "time": 9544.36328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5478636605581666,
    "avg_bits_err_output": 0.5478636605581666,
    "avg_bits_err_improve": 0,
    "time": 10758.9716796875,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (fma k k (fma k 10.0 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 1.9274456531526651,
    "avg_bits_err_output": 1.885695653152665,
    "avg_bits_err_improve": 0.041750000000000176,
    "time": 22629.932861328125,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ (expm1 (/ (+ (- Vef mu) (+ Ev EAccept)) KbT)) 2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.02812955818689803,
    "avg_bits_err_output": 0.026160197249127597,
    "avg_bits_err_improve": 0.001969360937770434,
    "time": 8010.65087890625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma b (* b (* a a)) (pow a 4.0))) 1.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.18284945195251592,
    "avg_bits_err_output": 0.07116768476294266,
    "avg_bits_err_improve": 0.11168176718957326,
    "time": 23564.560302734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (fma a (* b (* a b)) (pow b 4.0)) (* a (* (fma a a (* b b)) a))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.19612962650265922,
    "avg_bits_err_output": 0.07490394347421063,
    "avg_bits_err_improve": 0.12122568302844859,
    "time": 30284.74072265625,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1943640478111961,
    "avg_bits_err_output": 0.1943640478111961,
    "avg_bits_err_improve": 0,
    "time": 5541.310302734375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.472645032385683,
    "avg_bits_err_output": 13.472645032385683,
    "avg_bits_err_improve": 0,
    "time": 19744.2099609375,
    "seed": 22,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.566345583290996,
    "avg_bits_err_output": 0.015125,
    "avg_bits_err_improve": 40.551220583291,
    "time": 8840.70263671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (+ (+ x 2.0) -2.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.668470336410316,
    "avg_bits_err_output": 30.103899926132605,
    "avg_bits_err_improve": 1.5645704102777103,
    "time": 32802.149169921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (fma b_2 (* b_2 (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))) (- b_2)) (* a (* (- c) (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))))) a)",
    "output_parens": 18,
    "avg_bits_err_input": 33.71794520895431,
    "avg_bits_err_output": 32.03320913801522,
    "avg_bits_err_improve": 1.6847360709390884,
    "time": 25863.9111328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (+ (* (* a c) (/ 1.0 (sqrt (fma b_2 b_2 (* a (- c)))))) (+ (sqrt (fma b_2 b_2 (* a (- c)))) (* b_2 (* (/ 1.0 (sqrt (fma b_2 b_2 (* a (- c))))) (- b_2))))) (- (- b_2) (sqrt (- (* b_2 b_2) (* a c))))) a)",
    "output_parens": 29,
    "avg_bits_err_input": 33.97385611769561,
    "avg_bits_err_output": 33.48331075942245,
    "avg_bits_err_improve": 0.4905453582731596,
    "time": 18654.51025390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (exp (log1p (- (cos x)))) (* x x))",
    "output_parens": 6,
    "avg_bits_err_input": 31.376303852537593,
    "avg_bits_err_output": 31.381995511098594,
    "avg_bits_err_improve": -0.005691658561001844,
    "time": 21872.757080078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 2.2e+39) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (- (* (/ (/ 1.0 n) (/ 1.0 n)) (+ 1.0 (/ 1.0 n))) (/ (/ 1.0 n) (/ 1.0 n)))))) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- 1.0 (+ (/ 1.0 n) (- 1.0 (* (/ 1.0 n) (+ 1.0 (log1p x)))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 32.469962662104635,
    "avg_bits_err_output": 30.681296669776213,
    "avg_bits_err_improve": 1.788665992328422,
    "time": 58797.856689453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.552227315224616,
    "avg_bits_err_output": 0.016625,
    "avg_bits_err_improve": 29.535602315224615,
    "time": 7270.534912109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -7.6e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 3.15e+153) (/ (- (- (* (pow (+ 1.0 x) -2.0) (+ x 2.0)) (/ 1.0 x)) (pow (+ 1.0 x) -2.0)) 1.0) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 22,
    "avg_bits_err_input": 14.553174895831383,
    "avg_bits_err_output": 4.076531664131744,
    "avg_bits_err_improve": 10.476643231699638,
    "time": 150657.9013671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (expm1 (log1p (sin eps))))))",
    "output_parens": 10,
    "avg_bits_err_input": 39.93567122901428,
    "avg_bits_err_output": 6.2586777193043375,
    "avg_bits_err_improve": 33.676993509709945,
    "time": 31323.543701171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.896581344258788,
    "avg_bits_err_output": 29.605599538989708,
    "avg_bits_err_improve": 0.29098180526908024,
    "time": 35308.90869140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.55151258194374,
    "avg_bits_err_output": 30.55569184860867,
    "avg_bits_err_improve": -0.004179266664930736,
    "time": 38833.294189453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.851531813868164,
    "avg_bits_err_output": 33.851531813868164,
    "avg_bits_err_improve": 0,
    "time": 27177.9765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.081361275863955,
    "avg_bits_err_output": 34.08318090186161,
    "avg_bits_err_improve": -0.001819625997654839,
    "time": 23894.257080078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.06916301485907,
    "avg_bits_err_output": 0.024950564063671885,
    "avg_bits_err_improve": 61.0442124507954,
    "time": 31791.86474609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.0130033641234,
    "avg_bits_err_output": 0.02325671531750775,
    "avg_bits_err_improve": 62.98974664880589,
    "time": 35739.914794921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log (log (exp (/ (- 1.0 eps) (+ 1.0 eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 58.599320036676964,
    "avg_bits_err_output": 58.6074522682753,
    "avg_bits_err_improve": -0.008132231598338535,
    "time": 40168.48095703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- 1.0 (expm1 (log1p (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.906298302052484,
    "avg_bits_err_output": 59.90631495942378,
    "avg_bits_err_improve": -1.6657371297412737e-05,
    "time": 65243.36962890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps 6.2e-281) (/ (* (expm1 (* eps (+ a b))) (fma (/ (/ eps eps) (expm1 (* eps (+ a b)))) (* eps (expm1 (* eps (+ a b)))) 0.0)) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps 4.05e-212) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (log (exp (exp (* eps (+ a b))))) (exp (* eps a))) (expm1 (* eps b)))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 51,
    "avg_bits_err_input": 60.420969460268275,
    "avg_bits_err_output": 41.0639480777032,
    "avg_bits_err_improve": 19.357021382565073,
    "time": 47446.39599609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 40.9553766315833,
    "avg_bits_err_output": 0.13530753396128914,
    "avg_bits_err_improve": 40.82006909762201,
    "time": 17301.3955078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.792896419761746,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 58.792396419761744,
    "time": 3815.449951171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.531069950251908,
    "avg_bits_err_output": 0.016973793617776685,
    "avg_bits_err_improve": 29.51409615663413,
    "time": 4719.4765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (* (+ (expm1 (- x)) (expm1 x)) (exp 1.0)) (exp -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 29.62849430006962,
    "avg_bits_err_output": 28.733592462369835,
    "avg_bits_err_improve": 0.8949018376997842,
    "time": 37826.3662109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.130581383432595,
    "avg_bits_err_output": 10.137798796528113,
    "avg_bits_err_improve": -0.0072174130955176,
    "time": 39889.79150390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (tan (+ x eps)) (log1p (expm1 (- (tan x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.61544432487748,
    "avg_bits_err_output": 37.636783903375296,
    "avg_bits_err_improve": -0.021339578497816092,
    "time": 62000.44921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (pow (+ x 1.0) -0.5) (- (- (sqrt (- x -1.0)) (pow (- x -1.0) -0.5)) (sqrt x)))",
    "output_parens": 10,
    "avg_bits_err_input": 30.010578261194585,
    "avg_bits_err_output": 25.477058801370067,
    "avg_bits_err_improve": 4.533519459824518,
    "time": 30737.436279296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin eps) (cos x) (* (sin x) (+ (cos eps) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.46693857426891,
    "avg_bits_err_output": 0.37648592918908474,
    "avg_bits_err_improve": 37.09045264507982,
    "time": 25021.746826171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.90763185922271,
    "avg_bits_err_output": 19.770308290935308,
    "avg_bits_err_improve": 0.13732356828740322,
    "time": 29723.076171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (* (atan (+ 1.0 N)) (exp 1.0)) (exp -1.0)) (atan N))",
    "output_parens": 8,
    "avg_bits_err_input": 15.003709080553007,
    "avg_bits_err_output": 15.010840848475778,
    "avg_bits_err_improve": -0.0071317679227718145,
    "time": 31603.43701171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.503171876792933,
    "avg_bits_err_output": 1.2498186336119579,
    "avg_bits_err_improve": 28.253353243180975,
    "time": 28941.643310546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(+ -1.0 (- m (* (/ (- m (* m m)) v) (+ m -1.0))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.0776488878888441,
    "avg_bits_err_output": 0.07485356662892098,
    "avg_bits_err_improve": 0.002795321259923114,
    "time": 34252.0341796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.812565061129124,
    "avg_bits_err_output": 0.30685657969317903,
    "avg_bits_err_improve": 15.505708481435946,
    "time": 14576.8291015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (- (* (cos (fma PI (/ angle 180.0) 1.0)) (cos 1.0)) (* (sin (fma PI (/ angle 180.0) 1.0)) (sin -1.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.608705022628236,
    "avg_bits_err_output": 20.606670641406794,
    "avg_bits_err_improve": 0.002034381221442061,
    "time": 81395.54711914062,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.438873971055294,
    "avg_bits_err_output": 31.421278645142834,
    "avg_bits_err_improve": 0.017595325912459714,
    "time": 50851.2958984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma (pow PI 2.0) (fma (pow PI 2.0) (* (/ (/ angle 180.0) PI) (/ (/ (pow PI 2.0) (pow PI 2.0)) (pow PI 2.0))) 0.0) 0.0))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.29283692702173,
    "avg_bits_err_output": 20.299227597561273,
    "avg_bits_err_improve": -0.006390670539541787,
    "time": 78078.44653320312,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17735620312590142,
    "avg_bits_err_output": 0.17735620312590142,
    "avg_bits_err_improve": 0,
    "time": 32410.13671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.31963946681700633,
    "avg_bits_err_output": 0.31826852172968445,
    "avg_bits_err_improve": 0.0013709450873218842,
    "time": 63784.2646484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13694812031259015,
    "avg_bits_err_output": 0.13694812031259015,
    "avg_bits_err_improve": 0,
    "time": 29385.742919921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))) R)",
    "output_parens": 12,
    "avg_bits_err_input": 17.270826726077534,
    "avg_bits_err_output": 17.271090909539435,
    "avg_bits_err_improve": -0.0002641834619012684,
    "time": 42022.01025390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.308047170860114,
    "avg_bits_err_output": 45.90112303302345,
    "avg_bits_err_improve": 6.406924137836661,
    "time": 27920.19873046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma a (* c (* -4.0 (pow (fma b b (* a (* c -4.0))) -0.5))) (* b (+ (* b (pow (fma b b (* a (* c -4.0))) -0.5)) -1.0))) (+ a a))",
    "output_parens": 16,
    "avg_bits_err_input": 28.219183359608415,
    "avg_bits_err_output": 27.367078864253664,
    "avg_bits_err_improve": 0.8521044953547516,
    "time": 22138.11181640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.44645167037662,
    "avg_bits_err_output": 39.121114132099805,
    "avg_bits_err_improve": 4.325337538276813,
    "time": 24137.845947265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.861446536139766,
    "avg_bits_err_output": 33.861446536139766,
    "avg_bits_err_improve": 0,
    "time": 24232.445556640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8077925542400564,
    "avg_bits_err_output": 0.807415012635698,
    "avg_bits_err_improve": 0.0003775416043583224,
    "time": 42447.626953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (exp (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 29.0979440931814,
    "avg_bits_err_output": 29.093495694769764,
    "avg_bits_err_improve": 0.004448398411636134,
    "time": 40027.69287109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (expm1 (- x)) (+ (expm1 x) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 58.04622256576127,
    "avg_bits_err_output": 1.3639505640636722,
    "avg_bits_err_improve": 56.6822720016976,
    "time": 8137.8564453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.06032060631522,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 58.05219560631522,
    "time": 5941.710693359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.008875,
    "avg_bits_err_output": 0.008875,
    "avg_bits_err_improve": 0,
    "time": 2387.85009765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.873125,
    "avg_bits_err_output": 31.873125,
    "avg_bits_err_improve": 0,
    "time": 5828.68896484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (/ (+ x 1.0) (- 1.0 x))) 0.5)",
    "output_parens": 5,
    "avg_bits_err_input": 58.59448913333511,
    "avg_bits_err_output": 58.59448913333511,
    "avg_bits_err_improve": 0,
    "time": 52770.47265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.003448120312590144,
    "avg_bits_err_output": 0.003448120312590144,
    "avg_bits_err_improve": 0,
    "time": 4606.27001953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12686560156295074,
    "avg_bits_err_output": 0.12459436093777043,
    "avg_bits_err_improve": 0.002271240625180304,
    "time": 43216.37353515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos (atan (/ (* (- eh) (tan t)) ew))) (cos t))) (* (sin t) (* eh (sin (- PI (atan (/ (* eh (tan (- t))) ew))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.11644812031259014,
    "avg_bits_err_output": 0.11796936093777044,
    "avg_bits_err_improve": -0.0015212406251803035,
    "time": 25118.671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.12043562712222,
    "avg_bits_err_output": 3.8016556487787714,
    "avg_bits_err_improve": 35.31877997834345,
    "time": 70120.6171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.33800257757965,
    "avg_bits_err_output": 14.33800257757965,
    "avg_bits_err_improve": 0,
    "time": 4605.597900390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.1580655913209612,
    "avg_bits_err_output": 0.15902119898942887,
    "avg_bits_err_improve": -0.0009556076684676673,
    "time": 43569.1416015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.311331709905836,
    "avg_bits_err_output": 45.89633631418199,
    "avg_bits_err_improve": 6.4149953957238495,
    "time": 27538.03759765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.321092932950116,
    "avg_bits_err_output": 28.270130524437402,
    "avg_bits_err_improve": 0.05096240851271361,
    "time": 32823.542724609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.46908362541463,
    "avg_bits_err_output": 39.133269449643805,
    "avg_bits_err_improve": 4.335814175770828,
    "time": 39710.177978515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.8970234565059,
    "avg_bits_err_output": 33.8970234565059,
    "avg_bits_err_improve": 0,
    "time": 31179.714111328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.522863158103593,
    "avg_bits_err_output": 13.522863158103593,
    "avg_bits_err_improve": 0,
    "time": 58447.5390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log (exp (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.065162798802888,
    "avg_bits_err_output": 29.06887259289911,
    "avg_bits_err_improve": -0.00370979409622052,
    "time": 112827.97607421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ x (+ 1.0 x)) (+ (/ 1.0 (+ -1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.01691297031547478,
    "avg_bits_err_improve": -0.0035379703154747814,
    "time": 4537.61279296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.859461299622096,
    "avg_bits_err_output": 14.859461299622096,
    "avg_bits_err_improve": 0,
    "time": 125513.67724609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1e-309) (/ (- (* (sqrt (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (+ A C))) (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* F -2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* F -2.0))) (sqrt (- (* 4.0 (* A C)) (pow B 2.0))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 47,
    "avg_bits_err_input": 51.983211803226446,
    "avg_bits_err_output": 47.30428904629269,
    "avg_bits_err_improve": 4.678922756933758,
    "time": 46126.2041015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.035061182282806,
    "avg_bits_err_output": 30.035061182282806,
    "avg_bits_err_improve": 0,
    "time": 43307.6123046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e-310) (/ (- (* (* (sqrt (- F)) (sqrt (- (* A (* C 4.0)) (pow B 2.0)))) (sqrt (* 2.0 (+ A (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) C)))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt F)) (sqrt (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 51.99893718574888,
    "avg_bits_err_output": 46.9811645242964,
    "avg_bits_err_improve": 5.017772661452476,
    "time": 49459.716552734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.240815313840924,
    "avg_bits_err_output": 15.240815313840924,
    "avg_bits_err_improve": 0,
    "time": 42533.40771484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -2e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-152) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (fma g g (- (* h h)))))) (cbrt (- (sqrt (fma g g (- (* h h)))) g)))) (if (<= g -2e-245) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 1.3e-171) (+ (- (+ 1.0 (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g)))) 1.0) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))) (if (<= g 1.35e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (fma (- (sqrt (+ g h))) (sqrt (- g h)) (sqrt (- (* g g) (* h h)))) (- (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))))))))",
    "output_parens": 146,
    "avg_bits_err_input": 36.37509049241928,
    "avg_bits_err_output": 14.967647701225806,
    "avg_bits_err_improve": 21.407442791193475,
    "time": 76835.3974609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9902601515716059,
    "avg_bits_err_output": 0.02929248125036058,
    "avg_bits_err_improve": 0.9609676703212453,
    "time": 10377.1318359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7168231203125902,
    "avg_bits_err_output": 0.7168231203125902,
    "avg_bits_err_improve": 0,
    "time": 4349.327392578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.990635441032403,
    "avg_bits_err_output": 10.990635441032403,
    "avg_bits_err_improve": 0,
    "time": 28171.097412109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5058062020706864,
    "avg_bits_err_output": 0.439125,
    "avg_bits_err_improve": 0.0666812020706864,
    "time": 14149.561767578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.004) (log (- (+ x (* (/ 1.0 (hypot 1.0 x)) (* x x))) (- (/ 1.0 (expm1 (log1p (hypot 1.0 x))))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 2.0) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (log (- (+ x (* x (* x (/ 1.0 (hypot 1.0 x))))) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 38,
    "avg_bits_err_input": 53.09023147039252,
    "avg_bits_err_output": 12.18926488842952,
    "avg_bits_err_improve": 40.900966581963,
    "time": 34806.607666015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.677473653900648,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.677473653900648,
    "time": 2389.549560546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.014,
    "avg_bits_err_improve": -0.0022500000000000003,
    "time": 14523.6162109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1278.554443359375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* (* r w) (* r w))) (- 1.0 v))))",
    "output_parens": 12,
    "avg_bits_err_input": 12.89513380956406,
    "avg_bits_err_output": 6.467630671094592,
    "avg_bits_err_improve": 6.427503138469468,
    "time": 34185.1796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (fma -6.0 (* x1 x1) (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (fma (+ x1 x1) (+ (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (* x1 (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 43,
    "avg_bits_err_input": 0.5029244838468105,
    "avg_bits_err_output": 0.28935355520173184,
    "avg_bits_err_improve": 0.2135709286450787,
    "time": 72644.9189453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.21487455932854,
    "avg_bits_err_output": 18.21487455932854,
    "avg_bits_err_improve": 0,
    "time": 21797.949951171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.24785620312590143,
    "avg_bits_err_output": 0.24785620312590143,
    "avg_bits_err_improve": 0,
    "time": 21140.402587890625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 6899.45361328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.088246987263581,
    "avg_bits_err_output": 9.565636273202765,
    "avg_bits_err_improve": 4.522610714060816,
    "time": 48033.997314453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.22088656098563,
    "avg_bits_err_output": 1.027888568378797,
    "avg_bits_err_improve": 28.192997992606834,
    "time": 32890.0341796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.020625,
    "avg_bits_err_output": 0.020625,
    "avg_bits_err_improve": 0,
    "time": 16900.685546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.024875,
    "avg_bits_err_output": 0.024875,
    "avg_bits_err_improve": 0,
    "time": 28386.572509765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- (- (pow (/ (+ t t) (+ t 1.0)) 2.0) 1.0) -1.0)) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.056875,
    "avg_bits_err_output": 0.05375,
    "avg_bits_err_improve": 0.0031250000000000028,
    "time": 111526.13037109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3226.38525390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3210.462646484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 5012.060302734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.82853340489227,
    "avg_bits_err_output": 0.259375,
    "avg_bits_err_improve": 7.56915840489227,
    "time": 64202.80615234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.541647976561522,
    "avg_bits_err_output": 7.541647976561522,
    "avg_bits_err_improve": 0,
    "time": 32224.800537109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.250982329742293,
    "avg_bits_err_output": 0.01425,
    "avg_bits_err_improve": 16.236732329742292,
    "time": 10304.0810546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (pow (exp (* x x)) 10.0) (cos x)) (- (- (* (exp (log1p (* (cos x) (/ (/ (pow (exp (* x x)) 10.0) (cos x)) (/ (pow (exp (* x x)) 10.0) (cos x)))))) (+ (cos x) 1.0)) (+ (cos x) 1.0)) (* (/ (pow (exp (* x x)) 10.0) (cos x)) (/ (cos x) (/ (pow (exp (* x x)) 10.0) (cos x))))))",
    "output_parens": 41,
    "avg_bits_err_input": 3.5421382670536876,
    "avg_bits_err_output": 3.0455903344419153,
    "avg_bits_err_improve": 0.4965479326117723,
    "time": 49822.485595703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (fma x x 1.0))",
    "output_parens": 2,
    "avg_bits_err_input": 15.06790785240537,
    "avg_bits_err_output": 15.06765785240537,
    "avg_bits_err_improve": 0.00024999999999941735,
    "time": 85232.54418945312,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.4131633067091,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.4131633067091,
    "time": 4553.489501953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.657742036475284,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 38.65761703647529,
    "time": 4572.34130859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.293125,
    "avg_bits_err_improve": 63.706875,
    "time": 4588.2333984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.84325490773342,
    "avg_bits_err_output": 0.4029060156295073,
    "avg_bits_err_improve": 61.44034889210391,
    "time": 18158.85107421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.081361275863955,
    "avg_bits_err_output": 34.08318090186161,
    "avg_bits_err_improve": -0.001819625997654839,
    "time": 23082.40771484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.861446536139766,
    "avg_bits_err_output": 33.861446536139766,
    "avg_bits_err_improve": 0,
    "time": 23884.18115234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1978.208251953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.144719079365316,
    "avg_bits_err_output": 0.00875,
    "avg_bits_err_improve": 40.13596907936532,
    "time": 4785.16064453125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.2896927656655,
    "avg_bits_err_output": 20.2896927656655,
    "avg_bits_err_improve": 0,
    "time": 3213.46533203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6723747271657574,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6723747271657574,
    "time": 5449.814697265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.039625,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 0.039375,
    "time": 10696.093994140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(* (+ a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.022615601562950727,
    "avg_bits_err_output": 0.022615601562950727,
    "avg_bits_err_improve": 0,
    "time": 6824.67919921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* x (+ x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.015625,
    "avg_bits_err_output": 0.01375,
    "avg_bits_err_improve": 0.001875,
    "time": 3554.712646484375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.0005,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0,
    "time": 1639.322998046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.38537537656727777,
    "avg_bits_err_output": 0.24975,
    "avg_bits_err_improve": 0.13562537656727777,
    "time": 10936.462158203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log (- 1.0 (cos x))))",
    "output_parens": 4,
    "avg_bits_err_input": 30.096737201696023,
    "avg_bits_err_output": 30.096737021577276,
    "avg_bits_err_improve": 1.801187465844123e-07,
    "time": 10150.57373046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* (* x (/ (/ x x) x)) (* x x)) eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 24.78045917770206,
    "avg_bits_err_output": 24.825275878023483,
    "avg_bits_err_improve": -0.04481670032142304,
    "time": 20572.244384765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (* (sin x) (* (fma (/ -1.0 (sin x)) (sin x) 1.0) (- (/ (+ (sin x) 1.0) (sin x)) (/ 1.0 (sin x)))))) (tan x))",
    "output_parens": 19,
    "avg_bits_err_input": 30.113208890120433,
    "avg_bits_err_output": 30.057243746047998,
    "avg_bits_err_improve": 0.05596514407243447,
    "time": 49823.880126953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006698120312590144,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.006198120312590144,
    "time": 6754.75244140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-26) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.41160314990244,
    "avg_bits_err_output": 10.928665111584927,
    "avg_bits_err_improve": 36.48293803831751,
    "time": 44738.19970703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d b (* a c)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.908789764300582,
    "avg_bits_err_output": 26.90796664398799,
    "avg_bits_err_improve": 0.0008231203125923514,
    "time": 28358.24267578125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* d (- a))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.270625993114052,
    "avg_bits_err_output": 26.270677872861935,
    "avg_bits_err_improve": -5.187974788256611e-05,
    "time": 31724.240234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035625,
    "avg_bits_err_output": 0.02137394680449909,
    "avg_bits_err_improve": 0.014251053195500907,
    "time": 5320.92041015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (fma ux (- (fma ux maxCos 1.0) ux) (- (fma (fma ux maxCos 1.0) (fma ux maxCos (- ux)) (* ux maxCos))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.462975043700663,
    "avg_bits_err_output": 0.5508368847779255,
    "avg_bits_err_improve": 12.912138158922737,
    "time": 37739.9228515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (fma ux (- (fma ux maxCos 1.0) ux) (- (fma (fma ux maxCos 1.0) (- (* ux maxCos) ux) (* ux maxCos))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.507328469036898,
    "avg_bits_err_output": 0.32750067632341456,
    "avg_bits_err_improve": 13.179827792713484,
    "time": 41715.560546875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (log (+ 1.0 (expm1 (* uy (* 2.0 PI)))))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 37,
    "avg_bits_err_input": 0.328177297868859,
    "avg_bits_err_output": 0.3307941863044007,
    "avg_bits_err_improve": -0.0026168884355416977,
    "time": 102914.9853515625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ (* 2.0 u1) 1.5)))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0)))) (sin (atan (* (/ alphay alphax) (/ (tan (* PI (+ (* 2.0 u1) 1.5))) 1.0))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 40,
    "avg_bits_err_input": 0.21051020992672873,
    "avg_bits_err_output": 0.21072733062599952,
    "avg_bits_err_improve": -0.00021712069927079525,
    "time": 35585.44384765625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1)))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.5418959333010298,
    "avg_bits_err_output": 0.5315418027753356,
    "avg_bits_err_improve": 0.010354130525694227,
    "time": 44542.311279296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(- (sqrt (/ u1 (- 1.0 u1))) (+ (* (sqrt (/ u1 (- 1.0 u1))) (- (cos (* u2 -6.28318530718)))) (sqrt (/ u1 (- 1.0 u1)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.31916516594789673,
    "avg_bits_err_output": 0.32851060427288886,
    "avg_bits_err_improve": -0.009345438324992128,
    "time": 55009.417236328125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- (log (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -1.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.3321276630050384,
    "avg_bits_err_output": 0.3323141446420796,
    "avg_bits_err_improve": -0.00018648163704121368,
    "time": 52211.2744140625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.058452828504809935,
    "avg_bits_err_output": 0.04223443768491417,
    "avg_bits_err_improve": 0.01621839081989577,
    "time": 18957.263671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (fma s (pow (exp (/ (- (fabs x)) s)) 2.0) (+ s (* s (* (exp (/ (- (fabs x)) s)) 2.0)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.15271362191927917,
    "avg_bits_err_output": 0.13043820991228497,
    "avg_bits_err_improve": 0.022275412006994205,
    "time": 24871.7412109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* PI (* x tau))) (* PI (* x tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6767807164693598,
    "avg_bits_err_output": 0.6802871005567529,
    "avg_bits_err_improve": -0.003506384087393122,
    "time": 28250.570556640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.167893458786857,
    "avg_bits_err_output": 0.167893458786857,
    "avg_bits_err_improve": 0,
    "time": 26802.846923828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.6794854329685642,
    "avg_bits_err_output": 2.6753367485923016,
    "avg_bits_err_improve": 0.00414868437626259,
    "time": 35606.591552734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (+ 1.0 (* (sinh (/ 1.0 v)) (+ (+ 1.0 (+ v v)) -1.0))) 1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4523562980781001,
    "avg_bits_err_output": 0.50991602534214,
    "avg_bits_err_improve": -0.05755972726403985,
    "time": 55360.486572265625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (* (- (- 1.0 (- (+ 1.0 (/ (/ 1.0 (/ 1.0 (+ v v))) (/ 1.0 (+ v v)))) (* (/ (/ 1.0 (/ 1.0 (+ v v))) (/ 1.0 (+ v v))) (+ 1.0 (/ 1.0 (+ v v))))))) (- 1.0 (+ 1.0 (/ 1.0 (+ v v)))))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.09521814623317311,
    "avg_bits_err_output": 0.09774759949026002,
    "avg_bits_err_improve": -0.0025294532570869083,
    "time": 80844.61206054688,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4769048987141803,
    "avg_bits_err_output": 0.4294659960858502,
    "avg_bits_err_improve": 0.047438902628330115,
    "time": 27952.393798828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (* 3.0 s) (log1p (+ (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75))) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 1.3117305707750366,
    "avg_bits_err_output": 1.3130399223873823,
    "avg_bits_err_improve": -0.0013093516123456883,
    "time": 111034.04833984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.23917750314314,
    "avg_bits_err_output": 0.200875,
    "avg_bits_err_improve": 12.03830250314314,
    "time": 44712.621826171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (/ s r) (* (* PI 6.0) (* r r)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12330796069031025,
    "avg_bits_err_output": 0.12784833120227287,
    "avg_bits_err_improve": -0.004540370511962627,
    "time": 90393.09326171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9352968279169397,
    "avg_bits_err_output": 0.9236750680148902,
    "avg_bits_err_improve": 0.0116217599020495,
    "time": 47132.009033203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6754996208738828,
    "avg_bits_err_output": 0.46860977657940533,
    "avg_bits_err_improve": 0.2068898442944775,
    "time": 48402.38330078125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- 0.0 u1)) (* (log1p (- 0.0 u1)) (/ 1.0 (log1p (- 0.0 u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 13.541353183554238,
    "avg_bits_err_output": 0.5149354959272514,
    "avg_bits_err_improve": 13.026417687626987,
    "time": 30516.731201171875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.585095345600042,
    "avg_bits_err_output": 0.29734199132839517,
    "avg_bits_err_improve": 13.287753354271647,
    "time": 56009.727294921875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.020426091044692,
    "avg_bits_err_output": 0.2155,
    "avg_bits_err_improve": 13.804926091044692,
    "time": 66732.92211914062,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.522760797044796,
    "avg_bits_err_output": 0.5131430872545525,
    "avg_bits_err_improve": 12.009617709790243,
    "time": 21311.727783203125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (- (tan (* PI l)) (* (tan (* PI l)) (- 1.0 (/ 1.0 (* F F))))))",
    "output_parens": 11,
    "avg_bits_err_input": 17.292468979213908,
    "avg_bits_err_output": 17.292240219839087,
    "avg_bits_err_improve": 0.0002287593748206973,
    "time": 37091.51123046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.216625203512582,
    "avg_bits_err_output": 0.21301184218813093,
    "avg_bits_err_improve": 0.0036133613244510587,
    "time": 38151.81591796875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+297) (fma (/ 1.0 (tan B)) (- x) (* (/ F (sin B)) (pow (fma F F (fma x 2.0 2.0)) -0.5))) (+ (- (fma x (/ 1.0 (tan B)) (fma (- (- -1.0 (/ 1.0 (tan B)))) x (* x (- -1.0 (/ 1.0 (tan B))))))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 47,
    "avg_bits_err_input": 13.636061481042615,
    "avg_bits_err_output": 11.974062950747374,
    "avg_bits_err_improve": 1.6619985302952411,
    "time": 53734.3984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.47469298687306,
    "avg_bits_err_output": 2.0942836682267902,
    "avg_bits_err_improve": 59.38040931864627,
    "time": 106194.18676757812,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.65e-151) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l))))) (if (<= t 3.8e-160) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (/ (* (/ t (sqrt 2.0)) 2.0) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l)))))))",
    "output_parens": 53,
    "avg_bits_err_input": 43.17700125312591,
    "avg_bits_err_output": 36.121754817586165,
    "avg_bits_err_improve": 7.055246435539743,
    "time": 37146.035888671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 4.067728561313607,
    "avg_bits_err_output": 0.21254285781763807,
    "avg_bits_err_improve": 3.8551857034959687,
    "time": 37765.169677734375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (+ 1.0 (- (/ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.96675,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 0.958125,
    "time": 16710.623046875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 9.789597222722069,
    "avg_bits_err_output": 9.789597222722069,
    "avg_bits_err_improve": 0,
    "time": 159697.13354492188,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -2.1e-221) (* (sqrt (- U)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 n)))) (if (<= U 7e-115) (sqrt (* 2.0 (* n (- (* U (- t (* 2.0 (/ (* l l) Om)))) (* (pow (/ l Om) 2.0) (* n (* (- U U*) U))))))) (if (<= U 3.3e-54) (* (sqrt (- n)) (sqrt (* 2.0 (- (* (pow (/ l Om) 2.0) (* n (* U (- U U*)))) (* U (- t (* 2.0 (/ (* l l) Om)))))))) (* (sqrt U) (* (sqrt 2.0) (sqrt (* n (- (- t (* 2.0 (/ (* l l) Om))) (* (- U U*) (* n (pow (/ l Om) 2.0)))))))))))",
    "output_parens": 70,
    "avg_bits_err_input": 34.475201905767605,
    "avg_bits_err_output": 31.229318422191287,
    "avg_bits_err_improve": 3.2458834835763177,
    "time": 46110.698974609375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.35e-108) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (sin k) (* (tan k) (exp (log1p (pow (/ k t) 2.0)))) (- (* (sin k) (tan k)))))) (if (<= t 8.2e-17) (/ 2.0 (+ (* (sin k) (* (+ (/ (pow t 3.0) (* l l)) 1.0) (* (tan k) (pow (/ k t) 2.0)))) (- (* (tan k) (* (pow (/ k t) 2.0) (sin (+ (- PI k) 0.0))))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (sin k) (* (tan k) (exp (log1p (pow (/ k t) 2.0)))) (- (* (sin k) (tan k))))))))",
    "output_parens": 60,
    "avg_bits_err_input": 47.61331606667237,
    "avg_bits_err_output": 36.355090747656504,
    "avg_bits_err_improve": 11.258225319015864,
    "time": 52360.701904296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+284) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (* (tan k) (* (/ (pow t 3.0) (* l l)) (sin k))))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (fma (tan k) (* (sin k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (sin k) (tan (- k)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 32.67543674537656,
    "avg_bits_err_output": 30.661249446503756,
    "avg_bits_err_improve": 2.014187298872802,
    "time": 36268.722900390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (* a2 a2) (/ (cos th) (sqrt 2.0))) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.49869022814465336,
    "avg_bits_err_output": 0.4988577093950139,
    "avg_bits_err_improve": -0.00016748125036053496,
    "time": 39888.844482421875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow k -0.5) (* (pow PI (/ (- 1.0 k) 2.0)) (pow (* n 2.0) (/ (- 1.0 k) 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.49524191574408905,
    "avg_bits_err_output": 0.6259523397503662,
    "avg_bits_err_improve": -0.1307104240062772,
    "time": 74015.11499023438,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp l) (* J (cos (/ K 2.0))) (* (- (cos (/ K 2.0))) (* (exp (- l)) J))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.094342382592135,
    "avg_bits_err_output": 17.110223283282536,
    "avg_bits_err_improve": -0.01588090069040149,
    "time": 34204.54638671875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -2.7e+56) (* (cos (- (/ (* K (* K (- (* (+ n m) (+ 1.0 (/ 1.0 K))) (+ n m)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 5e-28) (* (cos (* (- (/ (* K (+ m n)) 2.0) M) (* (* (- (/ (* K (+ m n)) 2.0) M) (/ 1.0 (- (/ (* K (+ m n)) 2.0) M))) (* (* (- (/ (* K (+ m n)) 2.0) M) (/ 1.0 (- (/ (* K (+ m n)) 2.0) M))) (* (- (/ (* K (+ m n)) 2.0) M) (/ 1.0 (- (/ (* K (+ m n)) 2.0) M))))))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* K (- (* (+ n m) (+ 1.0 (/ 1.0 K))) (+ n m)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 94,
    "avg_bits_err_input": 14.829365840309114,
    "avg_bits_err_output": 1.7127161605412584,
    "avg_bits_err_improve": 13.116649679767855,
    "time": 38547.315673828125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.953490601562955,
    "avg_bits_err_output": 17.953490601562955,
    "avg_bits_err_improve": 0,
    "time": 40514.030029296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (/ h l) (- INFINITY)) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))) (if (<= (/ h l) -4.2e-292) (* w0 (sqrt (- 1.0 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l)))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 14.144391989015354,
    "avg_bits_err_output": 9.180920302321738,
    "avg_bits_err_improve": 4.963471686693616,
    "time": 39528.95751953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.57038228438656,
    "avg_bits_err_output": 19.57038228438656,
    "avg_bits_err_improve": 0,
    "time": 30562.626220703125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) (* (/ (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (sqrt (- (* (/ (* d (* d c0)) (* D (* h (* w D)))) (/ (* d (* d c0)) (* D (* h (* w D))))) (* M M))))))",
    "output_parens": 42,
    "avg_bits_err_input": 59.65366311255262,
    "avg_bits_err_output": 56.40834471686337,
    "avg_bits_err_improve": 3.245318395689253,
    "time": 35573.154296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(fma (sqrt (/ d h)) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (sqrt (/ d l))) 0.0)",
    "output_parens": 14,
    "avg_bits_err_input": 26.1102377170222,
    "avg_bits_err_output": 26.308383958312994,
    "avg_bits_err_improve": -0.19814624129079306,
    "time": 44515.032958984375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) (* (exp -1.0) (exp 2.0))) (exp -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 15.198639124086169,
    "avg_bits_err_output": 14.73312158264261,
    "avg_bits_err_improve": 0.4655175414435586,
    "time": 77486.390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* (+ (* v (* -3.0 v)) 4.0) (sqrt (- 2.0 (* v (* v 6.0))))) (sqrt (- 2.0 (* v (* v 6.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9842712406251803,
    "avg_bits_err_output": 0.014115601562950724,
    "avg_bits_err_improve": 0.9701556390622296,
    "time": 13145.65234375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* t (* (* (sqrt (- 2.0 (* 6.0 (* v v)))) (- 1.0 (* v v))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4232660806086218,
    "avg_bits_err_output": 0.34439070404134386,
    "avg_bits_err_improve": 0.07887537656727794,
    "time": 18752.12109375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* 3.0 (* v v)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011240601562950724,
    "avg_bits_err_output": 0.011115601562950723,
    "avg_bits_err_improve": 0.0001250000000000001,
    "time": 14558.816650390625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5689749779216494,
    "avg_bits_err_output": 0.5689749779216494,
    "avg_bits_err_improve": 0,
    "time": 9786.61181640625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.057504563148923,
    "avg_bits_err_output": 2.0326295631489235,
    "avg_bits_err_improve": 0.024874999999999314,
    "time": 13040.2666015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (expm1 (log1p (exp (/ (+ mu (- EDonor (- Ec Vef))) KbT)))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.024045067776892925,
    "avg_bits_err_output": 0.024276459853653613,
    "avg_bits_err_improve": -0.0002313920767606885,
    "time": 8267.0166015625,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18088233125324507,
    "avg_bits_err_output": 0.18088233125324507,
    "avg_bits_err_improve": 0,
    "time": 23587.036376953125,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma b (* b (* a a)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.1909003037584943,
    "avg_bits_err_output": 0.07988133382970022,
    "avg_bits_err_improve": 0.11101896992879406,
    "time": 28456.8505859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (fma b (* b (* a a)) (pow b 4.0)) (* a (* (fma b b (* a a)) a))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18768732722117645,
    "avg_bits_err_output": 0.07212363580352212,
    "avg_bits_err_improve": 0.11556369141765434,
    "time": 21714.17529296875,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.275076765494285,
    "avg_bits_err_output": 13.275076765494285,
    "avg_bits_err_improve": 0,
    "time": 14454.124755859375,
    "seed": 23,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.51736058791459,
    "avg_bits_err_output": 0.03325,
    "avg_bits_err_improve": 40.484110587914586,
    "time": 7613.16650390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (sin x)) (+ (- x (tan x)) (* (- (fma (tan x) (/ 1.0 (tan x)) -1.0)) (tan x))))",
    "output_parens": 13,
    "avg_bits_err_input": 30.93712721710075,
    "avg_bits_err_output": 30.066868411053036,
    "avg_bits_err_improve": 0.8702588060477119,
    "time": 21997.78271484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) (- c))) (- (* b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) b_2)) a)",
    "output_parens": 18,
    "avg_bits_err_input": 34.61760259231339,
    "avg_bits_err_output": 32.53616680409523,
    "avg_bits_err_improve": 2.0814357882181582,
    "time": 26880.08447265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* (* a c) (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))) (- 0.0 (- (* b_2 (* (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))) b_2)) (- b_2)))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 35.00094369766507,
    "avg_bits_err_output": 33.57086787875942,
    "avg_bits_err_improve": 1.4300758189056495,
    "time": 22813.209716796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (- 1.0 (cos x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 31.632038646688006,
    "avg_bits_err_output": 31.632038646688006,
    "avg_bits_err_improve": 0,
    "time": 22975.80224609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 3.1e+34) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (+ (/ 1.0 n) (* (/ 1.0 n) (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (exp (log (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))))",
    "output_parens": 24,
    "avg_bits_err_input": 33.07206991980063,
    "avg_bits_err_output": 31.179725460482686,
    "avg_bits_err_improve": 1.8923444593179468,
    "time": 67690.37890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.804529152916196,
    "avg_bits_err_output": 0.01525,
    "avg_bits_err_improve": 29.789279152916194,
    "time": 4090.986083984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(+ (* (/ 1.0 x) (* (- (* -1.0 (- (- -1.0 (- (/ 1.0 x) (/ (/ 1.0 x) (/ 1.0 x)))) (/ 0.0 (/ 1.0 x)))) (/ 1.0 x)) (* (/ 1.0 x) (/ 1.0 (/ 1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x)))",
    "output_parens": 24,
    "avg_bits_err_input": 14.2273226190291,
    "avg_bits_err_output": 0.7812387911903828,
    "avg_bits_err_improve": 13.446083827838716,
    "time": 148324.49926757812,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.638216277975815,
    "avg_bits_err_output": 6.280186504141579,
    "avg_bits_err_improve": 33.35802977383423,
    "time": 32393.854248046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (- (cbrt (+ 1.0 x)) (+ 1.0 (cbrt x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.188358436767803,
    "avg_bits_err_output": 29.903709288546548,
    "avg_bits_err_improve": 0.28464914822125564,
    "time": 38047.5380859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (log1p (- (+ (expm1 (- 1.0 (cos x))) -1.0) -1.0)) (sin x))",
    "output_parens": 8,
    "avg_bits_err_input": 30.579054011345196,
    "avg_bits_err_output": 30.60978049829135,
    "avg_bits_err_improve": -0.030726486946154097,
    "time": 30122.904296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.93445466301425,
    "avg_bits_err_output": 34.93445466301425,
    "avg_bits_err_improve": 0,
    "time": 21066.9990234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (+ (* b (* b (sqrt (/ 1.0 (fma b b (* c (* -4.0 a))))))) (* a (* (* -4.0 (sqrt (/ 1.0 (fma b b (* c (* -4.0 a)))))) c)))) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 34.44126964576185,
    "avg_bits_err_output": 33.49748981404704,
    "avg_bits_err_improve": 0.9437798317148065,
    "time": 41243.076904296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(* (/ 1.0 (/ (log1p (- x)) (log1p x))) (log (pow (exp (/ (log1p (- x)) (log1p x))) (/ (log1p (- x)) (log1p x)))))",
    "output_parens": 17,
    "avg_bits_err_input": 61.38891185717953,
    "avg_bits_err_output": 0.03085885038956527,
    "avg_bits_err_improve": 61.358053006789966,
    "time": 170507.40600585938,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 62.99888327154557,
    "avg_bits_err_output": 0.1427415964105528,
    "avg_bits_err_improve": 62.85614167513502,
    "time": 35034.193115234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (fma (/ 1.0 (log1p (expm1 (/ (- 1.0 eps) (+ 1.0 eps))))) (* (/ (- 1.0 eps) (+ 1.0 eps)) (/ (- 1.0 eps) (+ 1.0 eps))) -1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 58.35341066314982,
    "avg_bits_err_output": 58.37226002883172,
    "avg_bits_err_improve": -0.01884936568189488,
    "time": 86782.30639648438,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -7.5e-155) (- (- (/ -1.0 (/ 1.0 x))) (- (- (- (/ 1.0 (tan x)) (* (/ -1.0 (/ 1.0 x)) (pow (/ 1.0 x) 2.0))) (+ -1.0 (+ (/ -1.0 (/ 1.0 x)) (/ 1.0 x)))) (+ 1.0 (/ 1.0 x)))) (if (<= x 9.5e-155) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (- (/ -1.0 (/ 1.0 x))) (- (- (- (/ 1.0 (tan x)) (* (/ -1.0 (/ 1.0 x)) (pow (/ 1.0 x) 2.0))) (+ -1.0 (+ (/ -1.0 (/ 1.0 x)) (/ 1.0 x)))) (+ 1.0 (/ 1.0 x))))))",
    "output_parens": 50,
    "avg_bits_err_input": 59.79855468872009,
    "avg_bits_err_output": 56.15090349340627,
    "avg_bits_err_improve": 3.64765119531382,
    "time": 58275.791259765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.394072675873275,
    "avg_bits_err_output": 40.688952922760855,
    "avg_bits_err_improve": 19.70511975311242,
    "time": 26457.800048828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 40.941937859467174,
    "avg_bits_err_output": 0.18706504014536238,
    "avg_bits_err_improve": 40.75487281932181,
    "time": 11899.22509765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.52065401188685,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 58.51965401188685,
    "time": 4305.702880859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 28.826777816347242,
    "avg_bits_err_output": 0.017604374069748012,
    "avg_bits_err_improve": 28.809173442277494,
    "time": 3854.591796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (* (* (+ (expm1 (- x)) (expm1 x)) (exp 1.0)) (exp -1.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 29.476469818524706,
    "avg_bits_err_output": 28.603348765075676,
    "avg_bits_err_improve": 0.8731210534490295,
    "time": 46152.6884765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 9.453149699537779,
    "avg_bits_err_output": 9.468474851766278,
    "avg_bits_err_improve": -0.01532515222849895,
    "time": 55185.921630859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(+ (- (tan (+ x eps)) (tan x)) (* (tan x) (* (- (- (- (/ (+ (tan x) 1.0) (tan x)) 1.0) (/ 1.0 (tan x)))) (* (tan x) (/ 1.0 (tan x))))))",
    "output_parens": 21,
    "avg_bits_err_input": 36.94908442066489,
    "avg_bits_err_output": 36.97837522795301,
    "avg_bits_err_improve": -0.02929080728812039,
    "time": 66029.48583984375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- (sqrt x)) (* x (/ 1.0 (sqrt (+ 1.0 x))))))",
    "output_parens": 11,
    "avg_bits_err_input": 29.873995510961144,
    "avg_bits_err_output": 27.796125693318494,
    "avg_bits_err_improve": 2.07786981764265,
    "time": 34619.95361328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.83406834362443,
    "avg_bits_err_output": 0.36210117991268304,
    "avg_bits_err_improve": 36.471967163711746,
    "time": 27966.100830078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.60310164925825,
    "avg_bits_err_output": 19.45525305662966,
    "avg_bits_err_improve": 0.14784859262858774,
    "time": 23446.9443359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.286482994686681,
    "avg_bits_err_output": 15.286482994686681,
    "avg_bits_err_improve": 0,
    "time": 15021.50927734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.306553821776255,
    "avg_bits_err_output": 1.2552371300526501,
    "avg_bits_err_improve": 28.051316691723606,
    "time": 27208.51171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- (* m (/ (- m (* m m)) v)) (+ m -1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07549304531403245,
    "avg_bits_err_output": 0.07286804531403246,
    "avg_bits_err_improve": 0.0026249999999999885,
    "time": 22892.0869140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.49007435411809,
    "avg_bits_err_output": 0.3038941734413762,
    "avg_bits_err_improve": 16.186180180676715,
    "time": 13207.957763671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (fma (sin (* PI (/ angle 180.0))) (cos (fma (- (* (/ angle 180.0) (/ PI PI))) PI (* PI (/ angle 180.0)))) (* (- (cos (* PI (/ angle 180.0)))) (sin (fma (- (* (/ angle 180.0) (/ PI PI))) PI (fma (/ angle 180.0) (* (/ angle 180.0) (/ PI (/ angle 180.0))) 0.0)))))) 2.0))",
    "output_parens": 37,
    "avg_bits_err_input": 20.819323155759186,
    "avg_bits_err_output": 21.141490135529402,
    "avg_bits_err_improve": -0.32216697977021624,
    "time": 51661.44921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (* (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (/ 1.0 (* (sin (* PI (/ angle 180.0))) (* (sin (* PI (/ angle 180.0))) (/ 1.0 (sin (* PI (/ angle 180.0))))))))) -2.0)) (cos (* PI (/ angle 180.0))))",
    "output_parens": 30,
    "avg_bits_err_input": 31.789190770607956,
    "avg_bits_err_output": 31.831048614286807,
    "avg_bits_err_improve": -0.04185784367885148,
    "time": 51212.036865234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (+ 1.0 (log1p (expm1 (+ (cos (* (/ angle 180.0) PI)) -1.0))))) 2.0))",
    "output_parens": 15,
    "avg_bits_err_input": 20.727941041465197,
    "avg_bits_err_output": 20.72825061984472,
    "avg_bits_err_improve": -0.0003095783795217244,
    "time": 58584.685302734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* (+ (/ (- m (* m m)) v) -1.0) (* m (/ (/ (- m (* m m)) v) (+ (/ (- m (* m m)) v) -1.0)))) (* (+ (/ (- m (* m m)) v) -1.0) (/ m (+ (/ (- m (* m m)) v) -1.0))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.1719505640636719,
    "avg_bits_err_output": 0.17691052656439302,
    "avg_bits_err_improve": -0.004959962500721116,
    "time": 28600.53759765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (+ 1.0 (pow (tan x) 2.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3035934497084736,
    "avg_bits_err_output": 0.30416657002106373,
    "avg_bits_err_improve": -0.0005731203125901585,
    "time": 54558.482177734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1374174812503606,
    "avg_bits_err_output": 0.1374174812503606,
    "avg_bits_err_improve": 0,
    "time": 31398.45654296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (- (sin phi1)) (- -1.0 (- (sin phi2) 1.0))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 15,
    "avg_bits_err_input": 15.907197124315086,
    "avg_bits_err_output": 15.918593975140853,
    "avg_bits_err_improve": -0.011396850825766691,
    "time": 40704.040771484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.231235217471315,
    "avg_bits_err_output": 45.841403364955184,
    "avg_bits_err_improve": 6.3898318525161315,
    "time": 30831.2978515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma b (* b (/ 1.0 (sqrt (fma a (* c -4.0) (* b b))))) (- b)) (* a (* c (* -4.0 (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.56767270190151,
    "avg_bits_err_output": 27.77308807394034,
    "avg_bits_err_improve": 0.7945846279611715,
    "time": 28649.6923828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.57419296955966,
    "avg_bits_err_output": 39.27353147419265,
    "avg_bits_err_improve": 4.3006614953670095,
    "time": 26250.2158203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.93790387716921,
    "avg_bits_err_output": 34.93790387716921,
    "avg_bits_err_improve": 0,
    "time": 25471.23828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.8057784476292126,
    "avg_bits_err_output": 0.8057784476292126,
    "avg_bits_err_improve": 0,
    "time": 35791.951171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.634759879073194,
    "avg_bits_err_output": 29.630225521680554,
    "avg_bits_err_improve": 0.004534357392639521,
    "time": 47089.490966796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.27129468449465,
    "avg_bits_err_output": 1.254813721875541,
    "avg_bits_err_improve": 57.016480962619106,
    "time": 12211.565185546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.984881001746615,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 57.975506001746616,
    "time": 8123.1171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(expm1 (log1p (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.008042481250360577,
    "avg_bits_err_output": 0.00955432343849159,
    "avg_bits_err_improve": -0.0015118421881310136,
    "time": 3192.144287109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (- (+ (* x (* x (/ 1.0 (sqrt (fma x x -1.0))))) x) (/ 1.0 (sqrt (fma x x -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 32.009,
    "avg_bits_err_output": 21.465364771917706,
    "avg_bits_err_improve": 10.543635228082294,
    "time": 6907.102783203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log (/ (+ x 1.0) (- 1.0 x))) 0.5)",
    "output_parens": 5,
    "avg_bits_err_input": 58.344897269166175,
    "avg_bits_err_output": 58.344897269166175,
    "avg_bits_err_improve": 0,
    "time": 148857.21704101562,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (- (+ 1.0 (sqrt (- 1.0 (* x x)))) 1.0) x)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.050896240625180285,
    "avg_bits_err_output": 0.051146240625180285,
    "avg_bits_err_improve": -0.0002500000000000002,
    "time": 5785.84619140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* ew (* (cos (atan (/ (/ eh ew) (tan t)))) (sin t))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12784436093777043,
    "avg_bits_err_output": 0.12784436093777043,
    "avg_bits_err_improve": 0,
    "time": 43108.13427734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12421936093777045,
    "avg_bits_err_output": 0.12421936093777045,
    "avg_bits_err_improve": 0,
    "time": 42405.75537109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* lambda1 (cos (/ (+ phi1 phi2) 2.0))) (* lambda2 (cos (/ (+ phi1 phi2) 2.0)))) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 39.155730002212515,
    "avg_bits_err_output": 3.744273391573867,
    "avg_bits_err_improve": 35.411456610638645,
    "time": 68264.98657226562,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.54596624557503,
    "avg_bits_err_output": 14.54596624557503,
    "avg_bits_err_improve": 0,
    "time": 4234.226318359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (fma (sin theta) (* (sin theta) (/ (sin delta) (sin theta))) 0.0) (cos phi1)) (+ (fma (- (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))) (sin phi1) (* (sin phi1) (+ (+ (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) 1.0) -1.0))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))",
    "output_parens": 53,
    "avg_bits_err_input": 0.15138822062361698,
    "avg_bits_err_output": 0.1725133233522131,
    "avg_bits_err_improve": -0.021125102728596107,
    "time": 43467.577880859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) -1.0))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.30746546370878,
    "avg_bits_err_output": 45.887725491695655,
    "avg_bits_err_improve": 6.419739972013126,
    "time": 23867.9423828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.70276479473836,
    "avg_bits_err_output": 28.66652878711266,
    "avg_bits_err_improve": 0.036236007625699784,
    "time": 34242.41162109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.607102224862125,
    "avg_bits_err_output": 39.317379171440756,
    "avg_bits_err_improve": 4.289723053421369,
    "time": 26097.757568359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.976433453952566,
    "avg_bits_err_output": 34.976433453952566,
    "avg_bits_err_improve": 0,
    "time": 23329.49853515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.031895371367533,
    "avg_bits_err_output": 13.031895371367533,
    "avg_bits_err_improve": 0,
    "time": 56927.67626953125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (/ (+ 1.0 x) (+ -1.0 x)) (+ (- (/ x (+ 1.0 x)) (/ (+ 1.0 x) (+ -1.0 x))) (- (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 15,
    "avg_bits_err_input": 29.449825090040896,
    "avg_bits_err_output": 29.462026896464696,
    "avg_bits_err_improve": -0.012201806423799866,
    "time": 128256.99243164062,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(* (/ 1.0 (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))) (pow (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.01025,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 0.001875,
    "time": 8134.733642578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.314104877727425,
    "avg_bits_err_output": 14.314104877727425,
    "avg_bits_err_improve": 0,
    "time": 211195.31982421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.1e+225) (/ (- (* (sqrt (- F)) (sqrt (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* A C)))) (if (<= F -1.9e-307) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* 2.0 (* F (+ C (- A (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* 2.0 F)) (sqrt (* (- (pow B 2.0) (* 4.0 (* A C))) (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))) (- (pow B 2.0) (* (* 4.0 A) C)))))",
    "output_parens": 71,
    "avg_bits_err_input": 52.13415897560496,
    "avg_bits_err_output": 48.1785323819325,
    "avg_bits_err_improve": 3.955626593672463,
    "time": 52408.84326171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (- (- 1.0 (* (/ 1.0 B) (+ (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (- A C)))) 1.0)) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 29.800572726157856,
    "avg_bits_err_output": 29.80353805258717,
    "avg_bits_err_improve": -0.0029653264293152404,
    "time": 43372.0048828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -1.32e-281) (/ (- (* (sqrt (- (* C (* A 8.0)) (* 2.0 (pow B 2.0)))) (sqrt (* (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ C A)) (- F))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 48,
    "avg_bits_err_input": 52.04447761826772,
    "avg_bits_err_output": 47.01665945338774,
    "avg_bits_err_improve": 5.027818164879982,
    "time": 48104.696533203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.521582783470016,
    "avg_bits_err_output": 15.521582783470016,
    "avg_bits_err_improve": 0,
    "time": 39038.704345703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -5e-298) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 4e-150) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a)))))) (if (<= g 5e+153) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (/ (cbrt (- (/ 1.0 (+ a a)))) (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g))))))))))",
    "output_parens": 130,
    "avg_bits_err_input": 35.659372981148096,
    "avg_bits_err_output": 11.139611364470746,
    "avg_bits_err_improve": 24.51976161667735,
    "time": 72445.4658203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (fma (sin (expm1 (log1p (/ (* 2.0 PI) 3.0)))) (- (sin (/ (acos (/ (- g) h)) 3.0))) (* (cos (/ (* 2.0 PI) 3.0)) (cos (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.989068985944983,
    "avg_bits_err_output": 0.018844360937770435,
    "avg_bits_err_improve": 0.9702246250072126,
    "time": 22091.013916015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(log (exp (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.6440212406251803,
    "avg_bits_err_output": 0.76903645545781,
    "avg_bits_err_improve": -0.12501521483262967,
    "time": 32889.8798828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.476061622241211,
    "avg_bits_err_output": 11.476061622241211,
    "avg_bits_err_improve": 0,
    "time": 24868.53662109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5304528334220815,
    "avg_bits_err_output": 0.472,
    "avg_bits_err_improve": 0.05845283342208152,
    "time": 9209.6025390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (+ x (* x (* x (/ 1.0 (hypot 1.0 x))))) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 1.1) (log1p (+ x (+ (hypot 1.0 x) -1.0))) (log (- (+ x (* x (* x (/ 1.0 (hypot 1.0 x))))) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 53.16835519210999,
    "avg_bits_err_output": 11.836827071478034,
    "avg_bits_err_improve": 41.33152812063196,
    "time": 25717.78271484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.657870842628769,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.657870842628769,
    "time": 2468.07470703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ x 1.0)) (log1p (expm1 (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.015375,
    "avg_bits_err_output": 0.015844360937770436,
    "avg_bits_err_improve": -0.0004693609377704362,
    "time": 21093.872314453125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1326.6962890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* (* w r) (* w r))) (- 1.0 v)))",
    "output_parens": 12,
    "avg_bits_err_input": 13.311068669748659,
    "avg_bits_err_output": 7.0638639109464085,
    "avg_bits_err_improve": 6.24720475880225,
    "time": 32643.076416015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (/ (fma (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (fma (+ x1 x1) (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) (* x1 (* x1 4.0))) (* x1 (* x1 -6.0))) 1.0) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5085803715304767,
    "avg_bits_err_output": 0.2835798728039626,
    "avg_bits_err_improve": 0.22500049872651418,
    "time": 71849.35107421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.47505220014807,
    "avg_bits_err_output": 18.47505220014807,
    "avg_bits_err_improve": 0,
    "time": 41837.0595703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* 0.12900613773279798 (* x x))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2332692038992627,
    "avg_bits_err_output": 0.18062744375108172,
    "avg_bits_err_improve": 0.05264176014818098,
    "time": 28901.773193359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.002948120312590144,
    "avg_bits_err_output": 0.002948120312590144,
    "avg_bits_err_improve": 0,
    "time": 3320.046142578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 15.187446997227202,
    "avg_bits_err_output": 10.211748876914589,
    "avg_bits_err_improve": 4.975698120312613,
    "time": 57051.74755859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (- (fma eps x x))))) (- (exp (- (fma eps x x))))) (exp (+ (+ 1.0 (- (* eps x) x)) -1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 29.39176485935185,
    "avg_bits_err_output": 0.742059807227598,
    "avg_bits_err_improve": 28.64970505212425,
    "time": 30361.235107421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (log1p (expm1 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.02175,
    "avg_bits_err_output": 0.0215,
    "avg_bits_err_improve": 0.0002500000000000002,
    "time": 12987.309326171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (+ (- 3.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) -1.0))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.026875,
    "avg_bits_err_output": 0.033398684376262026,
    "avg_bits_err_improve": -0.006523684376262027,
    "time": 84164.11645507812,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.017625,
    "avg_bits_err_output": 0.017625,
    "avg_bits_err_improve": 0,
    "time": 14947.538818359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3732.923828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3211.87255859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4091.35986328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.794267633753049,
    "avg_bits_err_output": 0.253875,
    "avg_bits_err_improve": 7.540392633753049,
    "time": 47048.634521484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 6.871553505483716,
    "avg_bits_err_output": 6.871553505483716,
    "avg_bits_err_improve": 0,
    "time": 28008.469482421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* eps eps) (* eps (+ x x)))",
    "output_parens": 4,
    "avg_bits_err_input": 15.11161327536692,
    "avg_bits_err_output": 0.016125,
    "avg_bits_err_improve": 15.09548827536692,
    "time": 14845.196044921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (cos x) (cos x)) (* (log (exp (cos x))) (pow (* (pow (exp 10.0) (fabs x)) (* (pow (exp 10.0) (fabs x)) (/ 1.0 (pow (exp 10.0) (fabs x))))) (fabs x))))",
    "output_parens": 22,
    "avg_bits_err_input": 3.5214174414767743,
    "avg_bits_err_output": 1.1451043209856473,
    "avg_bits_err_improve": 2.376313120491127,
    "time": 30326.34130859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.937445964149477,
    "avg_bits_err_output": 15.937445964149477,
    "avg_bits_err_improve": 0,
    "time": 72725.00634765625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.9555078319992,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.9555078319992,
    "time": 4995.16455078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.389331828656594,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.38883182865659,
    "time": 5027.698486328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.30475,
    "avg_bits_err_improve": 63.69525,
    "time": 4352.76416015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* t (* t 2e-16)))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843251523038745,
    "avg_bits_err_output": 0.41814417344137655,
    "avg_bits_err_improve": 61.42510734959737,
    "time": 22930.673095703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (+ (* b (* b (sqrt (/ 1.0 (fma b b (* c (* -4.0 a))))))) (* a (* (* -4.0 (sqrt (/ 1.0 (fma b b (* c (* -4.0 a)))))) c)))) (+ a a))",
    "output_parens": 20,
    "avg_bits_err_input": 34.44126964576185,
    "avg_bits_err_output": 33.49748981404704,
    "avg_bits_err_improve": 0.9437798317148065,
    "time": 44243.987548828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.93790387716921,
    "avg_bits_err_output": 34.93790387716921,
    "avg_bits_err_improve": 0,
    "time": 25704.198974609375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 1705.279296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.5427603283314,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 39.532385328331394,
    "time": 19843.63916015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.992478467082034,
    "avg_bits_err_output": 19.992478467082034,
    "avg_bits_err_improve": 0,
    "time": 8943.856201171875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6715485494078313,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6715485494078313,
    "time": 3972.63720703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.004125,
    "avg_bits_err_improve": 0.035875000000000004,
    "time": 5621.04345703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.020844360937770437,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": 0.010094360937770438,
    "time": 8095.7197265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.001,
    "avg_bits_err_improve": 0.0125,
    "time": 9723.897705078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0,
    "time": 2297.16552734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40375977500432714,
    "avg_bits_err_output": 0.24025,
    "avg_bits_err_improve": 0.16350977500432715,
    "time": 7112.977294921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(log1p (- (+ (expm1 (- 1.0 (cos x))) -1.0) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 30.43870851392195,
    "avg_bits_err_output": 30.44311753342275,
    "avg_bits_err_improve": -0.004409019500801747,
    "time": 14412.176513671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (fma x x (- eps))))",
    "output_parens": 4,
    "avg_bits_err_input": 24.75693699231205,
    "avg_bits_err_output": 24.75210238464164,
    "avg_bits_err_improve": 0.004834607670410662,
    "time": 35475.894775390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 28.788777767944996,
    "avg_bits_err_output": 28.788803588590344,
    "avg_bits_err_improve": -2.58206453480625e-05,
    "time": 46537.537841796875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007363361324451065,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0.006113361324451064,
    "time": 4126.46875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-9) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.50174955065749,
    "avg_bits_err_output": 11.025049708164058,
    "avg_bits_err_improve": 36.47669984249343,
    "time": 58179.5673828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.069959384915816,
    "avg_bits_err_output": 26.069959384915816,
    "avg_bits_err_improve": 0,
    "time": 36925.72998046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c b (* d (- a))) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.65854345701529,
    "avg_bits_err_output": 26.65676057771456,
    "avg_bits_err_improve": 0.0017828793007304,
    "time": 24724.1875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (* ux (+ maxCos (- (* (* ux ux) (+ (/ -1.0 (* ux ux)) 1.0)) (* ux ux)))) -1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.03875,
    "avg_bits_err_output": 0.0288135994617975,
    "avg_bits_err_improve": 0.009936400538202501,
    "time": 19887.2197265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (fma (- (fma ux maxCos 1.0) ux) ux (- (fma (fma ux maxCos 1.0) (- (* ux maxCos) ux) (* ux maxCos))))))",
    "output_parens": 14,
    "avg_bits_err_input": 13.497687227091795,
    "avg_bits_err_output": 0.529689073441831,
    "avg_bits_err_improve": 12.967998153649964,
    "time": 52363.156005859375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (fma (+ uy uy) (* (+ uy uy) (/ PI (+ uy uy))) 0.0)) (sqrt (+ (- ux (* ux (* (- (fma ux maxCos 1.0) ux) (+ maxCos -1.0)))) (- (* ux maxCos)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.540722880457121,
    "avg_bits_err_output": 0.3517496659100832,
    "avg_bits_err_improve": 13.188973214547039,
    "time": 47026.563720703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (/ 2.0 PI) (* PI (* uy PI)))) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output_parens": 36,
    "avg_bits_err_input": 0.3376173847165654,
    "avg_bits_err_output": 0.35114520630500135,
    "avg_bits_err_improve": -0.013527821588435962,
    "time": 105366.75854492188,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.20115376181596006,
    "avg_bits_err_output": 0.20115376181596006,
    "avg_bits_err_improve": 0,
    "time": 37707.9775390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5381628816039323,
    "avg_bits_err_output": 0.49396173148831124,
    "avg_bits_err_improve": 0.04420115011562109,
    "time": 31628.523681640625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(+ (sqrt (/ u1 (- 1.0 u1))) (* (+ (cos (* u2 6.28318530718)) -1.0) (sqrt (/ u1 (- 1.0 u1)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3323814637931077,
    "avg_bits_err_output": 0.3436617385698706,
    "avg_bits_err_improve": -0.01128027477676291,
    "time": 51820.009521484375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3375540656001496,
    "avg_bits_err_output": 0.3380021859127397,
    "avg_bits_err_improve": -0.00044812031259011675,
    "time": 42008.72119140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07039997381152756,
    "avg_bits_err_output": 0.05387591589253221,
    "avg_bits_err_improve": 0.016524057918995347,
    "time": 10940.090087890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.16534426588581133,
    "avg_bits_err_output": 0.15295736889806294,
    "avg_bits_err_improve": 0.012386896987748391,
    "time": 23973.502197265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6641135874740226,
    "avg_bits_err_output": 0.6727942602193283,
    "avg_bits_err_improve": -0.008680672745305706,
    "time": 22889.790283203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.15567642670288123,
    "avg_bits_err_output": 0.15168587417774718,
    "avg_bits_err_improve": 0.003990552525134056,
    "time": 24551.35595703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5574870978969493,
    "avg_bits_err_output": 2.5558076437042523,
    "avg_bits_err_improve": 0.0016794541926969941,
    "time": 95290.95288085938,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 12,
    "avg_bits_err_input": 0.44788030619839286,
    "avg_bits_err_output": 0.44788030619839286,
    "avg_bits_err_improve": 0,
    "time": 51257.110107421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (- (* (/ 1.0 (+ v v)) (- (+ 1.0 (* (/ (/ 1.0 (/ 1.0 (+ v v))) (/ 1.0 (+ v v))) (+ 1.0 (/ 1.0 (+ v v))))) 1.0)) (* (/ 1.0 (+ v v)) (/ (/ 1.0 (/ 1.0 (+ v v))) (/ 1.0 (+ v v)))))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.11342486894409184,
    "avg_bits_err_output": 0.1153213059735013,
    "avg_bits_err_improve": -0.0018964370294094618,
    "time": 70354.77221679688,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (pow alpha (* PI 2.0))) (+ 1.0 (* cosTheta (+ (* alpha (* cosTheta alpha)) (- cosTheta))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4767753941579562,
    "avg_bits_err_output": 0.4275398465955443,
    "avg_bits_err_improve": 0.04923554756241194,
    "time": 26986.0986328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log (- 1.0 (/ (- u 0.25) 0.75))) (* s -3.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3345746971356445,
    "avg_bits_err_output": 1.0687323654030094,
    "avg_bits_err_improve": 0.26584233173263505,
    "time": 45154.35107421875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (+ 1.0 (- (log (* (/ 1.0 (- 1.0 (* 4.0 u))) (* (/ 1.0 (- 1.0 (* 4.0 u))) (/ 1.0 (/ 1.0 (- 1.0 (* 4.0 u))))))) 1.0)))",
    "output_parens": 16,
    "avg_bits_err_input": 12.339410347436003,
    "avg_bits_err_output": 12.37033042526396,
    "avg_bits_err_improve": -0.03092007782795747,
    "time": 54200.78662109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* s (/ r s)) (* PI (* s 6.0)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1434555200460597,
    "avg_bits_err_output": 0.1511094715533156,
    "avg_bits_err_improve": -0.007653951507255924,
    "time": 80301.4111328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.9247303301421024,
    "avg_bits_err_output": 0.9197612557068029,
    "avg_bits_err_improve": 0.004969074435299481,
    "time": 50578.07275390625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6900439519084594,
    "avg_bits_err_output": 0.47482669376621983,
    "avg_bits_err_improve": 0.21521725814223952,
    "time": 54555.474365234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (* (sqrt (- (log1p (- u1)))) (* (sqrt (- (log1p (- u1)))) (/ 1.0 (sqrt (- (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 19,
    "avg_bits_err_input": 13.513070364833133,
    "avg_bits_err_output": 0.5397326091009551,
    "avg_bits_err_improve": 12.973337755732178,
    "time": 27428.249267578125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (cos (* 2.0 (* PI u2))) (* (cos (* 2.0 (* PI u2))) (/ (sqrt (- (log1p (- u1)))) (cos (* 2.0 (* PI u2))))))",
    "output_parens": 16,
    "avg_bits_err_input": 13.566173037343615,
    "avg_bits_err_output": 0.31301063267095613,
    "avg_bits_err_improve": 13.25316240467266,
    "time": 43240.096435546875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.967857744198856,
    "avg_bits_err_output": 0.2065,
    "avg_bits_err_improve": 13.761357744198856,
    "time": 29566.406494140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.735171715335717,
    "avg_bits_err_output": 0.5277029701653595,
    "avg_bits_err_improve": 12.207468745170358,
    "time": 23098.382568359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) (- INFINITY)) (- (* PI l) (* (/ 1.0 F) (* (/ 1.0 F) (tan (* PI l))))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 1e+178) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (+ (/ PI l) 1.0)) l) l)))) (- (* PI l) (* (/ 1.0 F) (fma (/ 1.0 F) (tan (* PI l)) (fma (- (tan (* PI l))) (- (/ 1.0 F)) (* (/ 1.0 F) (- (tan (* PI l))))))))))",
    "output_parens": 57,
    "avg_bits_err_input": 16.49249338287027,
    "avg_bits_err_output": 9.680980236133667,
    "avg_bits_err_improve": 6.811513146736601,
    "time": 34046.5498046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2236497379540208,
    "avg_bits_err_output": 0.21921956445035246,
    "avg_bits_err_improve": 0.004430173503668339,
    "time": 32450.59228515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= x -1.2e+22) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))) (if (<= x -1.5e-58) (+ (- (* (/ (/ 1.0 (tan B)) x) (* x x))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (if (<= x 250000.0) (+ (- (* x (+ (* (/ 1.0 (tan B)) (/ x x)) (- 1.0 (* x (/ 1.0 x)))))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))))",
    "output_parens": 66,
    "avg_bits_err_input": 13.457914018303216,
    "avg_bits_err_output": 12.21355610202701,
    "avg_bits_err_improve": 1.244357916276206,
    "time": 50735.587890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (+ (fma (- (exp (- (/ PI 4.0)))) (pow (exp (/ PI 4.0)) (- 1.0 f)) (pow (exp (/ PI 4.0)) (- f))) (- (pow (exp (/ PI 4.0)) f) (pow (exp (/ PI 4.0)) (- f))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 61.43982144920934,
    "avg_bits_err_output": 51.86339994401826,
    "avg_bits_err_improve": 9.576421505191078,
    "time": 66615.58129882812,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.85e-157) (/ (* (sqrt 2.0) t) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x))) l))))) (if (<= t 1.45e-152) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (- (+ 1.0 (/ (* t (sqrt 2.0)) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l))))) 1.0)))",
    "output_parens": 54,
    "avg_bits_err_input": 43.329198102684785,
    "avg_bits_err_output": 35.725746309767395,
    "avg_bits_err_improve": 7.60345179291739,
    "time": 36025.31787109375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (log1p (expm1 (pow (sin kx) 2.0))) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 3.853514213811086,
    "avg_bits_err_output": 3.856724176311807,
    "avg_bits_err_improve": -0.003209962500721364,
    "time": 40920.489501953125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0863747861547797,
    "avg_bits_err_output": 0.00625,
    "avg_bits_err_improve": 1.0801247861547796,
    "time": 13010.984619140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (expm1 (log1p (/ (- 1.0 (pow (/ Om Omc) 2.0)) (fma 2.0 (* (/ t l) (/ t l)) 1.0))))))",
    "output_parens": 12,
    "avg_bits_err_input": 9.724483127932366,
    "avg_bits_err_output": 9.729895233517723,
    "avg_bits_err_improve": -0.0054121055853570965,
    "time": 48228.135498046875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 0.0) (sqrt (* (* 2.0 n) (* (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* (- U U*) n))) U))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 2e+280) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) (sqrt (* 2.0 (* n U))))))",
    "output_parens": 73,
    "avg_bits_err_input": 34.46157878550961,
    "avg_bits_err_output": 30.10521658577302,
    "avg_bits_err_improve": 4.356362199736587,
    "time": 42249.053955078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) INFINITY) (/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (* (pow (/ k t) 2.0) (tan k))) (sin k))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 47.83210195031423,
    "avg_bits_err_output": 37.49758901101216,
    "avg_bits_err_improve": 10.334512939302073,
    "time": 47737.920166015625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) INFINITY) (/ 2.0 (* (tan k) (* (* (/ (pow t 3.0) (* l l)) (+ 2.0 (pow (/ k t) 2.0))) (sin k)))) (/ 2.0 (* (- (+ 2.0 (pow (/ k t) 2.0))) (fma (sin k) (tan k) (- (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 32.43845866339954,
    "avg_bits_err_output": 30.6358986395223,
    "avg_bits_err_improve": 1.8025600238772377,
    "time": 40719.21533203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma a1 (* (/ (cos th) (sqrt 2.0)) a1) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5028838375223573,
    "avg_bits_err_output": 0.49531316096084893,
    "avg_bits_err_improve": 0.007570676561508394,
    "time": 40670.63720703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) (* (* 2.0 PI) (/ n (* 2.0 PI)))) (/ (- 1.0 k) 2.0)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.472565155812468,
    "avg_bits_err_output": 0.4819648967594253,
    "avg_bits_err_improve": -0.00939974094695728,
    "time": 70196.85205078125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (fma (exp l) (cos (/ K 2.0)) (* (cos (/ K 2.0)) (- (exp (- l)))))) U)",
    "output_parens": 12,
    "avg_bits_err_input": 17.272637600033196,
    "avg_bits_err_output": 17.275066570647045,
    "avg_bits_err_improve": -0.0024289706138489464,
    "time": 37943.068603515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 2.0) (* (cos (- (/ (- (* K (+ m (+ 1.0 n))) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* (+ m n) (* K (- (* (exp (log1p (/ 1.0 K))) K) K))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 56,
    "avg_bits_err_input": 15.458969763343148,
    "avg_bits_err_output": 1.3348239302970761,
    "avg_bits_err_improve": 14.124145833046072,
    "time": 37377.9013671875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.28489624062518,
    "avg_bits_err_output": 18.28489624062518,
    "avg_bits_err_improve": 0,
    "time": 35674.87890625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 1e+113) (* w0 (sqrt (- 1.0 (- (+ (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)) 1.0) 1.0)))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 34,
    "avg_bits_err_input": 14.059530863966984,
    "avg_bits_err_output": 10.226009719403718,
    "avg_bits_err_improve": 3.8335211445632655,
    "time": 36799.104736328125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.9747755837963,
    "avg_bits_err_output": 18.9747755837963,
    "avg_bits_err_improve": 0,
    "time": 24222.288818359375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= D -2e-264) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M))))) (if (<= D 2e-198) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* (* D h) w))) (* (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M))))) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (* (/ (* d (* d c0)) (* D (* D (* w h)))) (/ (* d (* d c0)) (* D (* D (* w h))))) (* M M)))))))",
    "output_parens": 83,
    "avg_bits_err_input": 59.67273215480821,
    "avg_bits_err_output": 57.138706150418216,
    "avg_bits_err_improve": 2.534026004389993,
    "time": 35821.422119140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) (- INFINITY)) (+ (sqrt (* (/ d l) (/ d h))) (- (exp (fma 2.0 (log (/ (* M D) (+ d d))) (log (* (/ h l) (* (sqrt (* (/ d l) (/ d h))) 0.5))))))) (* (- (sqrt (/ d h))) (* (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (* (/ h l) 0.5))) (- (sqrt (/ d l))))))",
    "output_parens": 53,
    "avg_bits_err_input": 26.44617227584965,
    "avg_bits_err_output": 25.968268413541843,
    "avg_bits_err_improve": 0.4779038623078087,
    "time": 45370.30908203125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 14.971667081376712,
    "avg_bits_err_output": 14.971667081376712,
    "avg_bits_err_improve": 0,
    "time": 5519.67822265625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (- (* 0.0 (- -3.0 (* v (* -3.0 v)))) (* (- -3.0 (* v (* -3.0 v))) (sqrt (- 2.0 (* v (* v 6.0))))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.9823868421881311,
    "avg_bits_err_output": 0.014408082813311303,
    "avg_bits_err_improve": 0.9679787593748198,
    "time": 14137.45654296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (sqrt (- 2.0 (* v (* v 6.0)))) PI) (* t (- 1.0 (* v v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4803071376397249,
    "avg_bits_err_output": 0.4040487680564453,
    "avg_bits_err_improve": 0.07625836958327958,
    "time": 23807.742919921875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.014917481250360578,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.002667481250360577,
    "time": 9588.568115234375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (- (+ 1.0 (* 5.0 (* v v))) 1.0)) (- (* v v) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.534914697257525,
    "avg_bits_err_output": 0.5535178879287848,
    "avg_bits_err_improve": -0.018603190671259706,
    "time": 11133.65478515625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (+ (* k (+ k 10.0)) 2.0) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9187119986384435,
    "avg_bits_err_output": 1.8719832392636238,
    "avg_bits_err_improve": 0.046728759374819795,
    "time": 14609.529052734375,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (- (+ (/ (+ mu (+ EDonor (- Vef Ec))) KbT) 1.0) 1.0)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.01902135833709117,
    "avg_bits_err_output": 0.01909447864968131,
    "avg_bits_err_improve": -7.312031259014071e-05,
    "time": 9393.904296875,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (- (+ (* (* b b) 4.0) 1.0) 1.0)) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 0.18189417344137612,
    "avg_bits_err_output": 0.1910404140665564,
    "avg_bits_err_improve": -0.009146240625180269,
    "time": 26727.018798828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(+ (pow (fma a a (* b b)) 2.0) (fma 4.0 (fma (* a a) (+ a 1.0) (* (* b b) (- 1.0 (* a 3.0)))) -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 0.1894956925776963,
    "avg_bits_err_output": 0.19281373264222423,
    "avg_bits_err_improve": -0.003318040064527933,
    "time": 46233.9140625,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (- 1.0 a) (expm1 (log1p (* a a)))) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.18585903185262348,
    "avg_bits_err_output": 0.18652427286448442,
    "avg_bits_err_improve": -0.0006652410118609398,
    "time": 38759.626220703125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.501493261825829,
    "avg_bits_err_output": 13.501493261825829,
    "avg_bits_err_improve": 0,
    "time": 20893.596923828125,
    "seed": 24,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.83161298072334,
    "avg_bits_err_output": 0.0475,
    "avg_bits_err_improve": 40.78411298072334,
    "time": 13299.1982421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (+ (+ x -2.0) 2.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 30.978015531159368,
    "avg_bits_err_output": 29.49049539479917,
    "avg_bits_err_improve": 1.4875201363601995,
    "time": 34793.83642578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- b_2)) (* c (* a (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.729145063819495,
    "avg_bits_err_output": 32.80610379624951,
    "avg_bits_err_improve": 1.9230412675699853,
    "time": 26533.5390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* a c) (+ (* b_2 b_2) (* a (* c -2.0)))))) a)",
    "output_parens": 10,
    "avg_bits_err_input": 34.436573743810996,
    "avg_bits_err_output": 34.471808290205445,
    "avg_bits_err_improve": -0.035234546394448785,
    "time": 16681.788818359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (* (* (- (exp 1.0)) (fma (* (cos x) (exp -1.0)) (exp 1.0) -1.0)) (exp -1.0)) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.216202271379384,
    "avg_bits_err_output": 30.907124339766735,
    "avg_bits_err_improve": 0.3090779316126486,
    "time": 24354.577880859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 8e+30) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (/ 1.0 n) (+ 1.0 (log1p x))) (+ (+ (/ 1.0 n) -1.0) 1.0)))) (- (pow (+ 1.0 x) (/ 1.0 n)) (pow x (+ (+ 1.0 (/ 1.0 n)) -1.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 33.38967272288387,
    "avg_bits_err_output": 31.45618030333811,
    "avg_bits_err_improve": 1.933492419545761,
    "time": 51125.315673828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.44133110348553,
    "avg_bits_err_output": 0.008625,
    "avg_bits_err_improve": 29.432706103485533,
    "time": 37843.402099609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -6e+128) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 9.5e+154) (- (- (* (pow (+ x 1.0) -2.0) (+ x 2.0)) (/ 1.0 x)) (pow (+ x 1.0) -2.0)) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 21,
    "avg_bits_err_input": 14.751710394678788,
    "avg_bits_err_output": 5.1661513085272714,
    "avg_bits_err_improve": 9.585559086151516,
    "time": 64004.541748046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 39.33306555243677,
    "avg_bits_err_output": 6.0822985662278635,
    "avg_bits_err_improve": 33.25076698620891,
    "time": 27446.585693359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (- (- (cbrt (+ x 1.0)) 1.0) (cbrt x)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.742797241848077,
    "avg_bits_err_output": 29.4239908270469,
    "avg_bits_err_improve": 0.3188064148011769,
    "time": 35502.053955078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 30.43307979460694,
    "avg_bits_err_output": 30.436205002756058,
    "avg_bits_err_improve": -0.003125208149118208,
    "time": 55388.789306640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.490826374729586,
    "avg_bits_err_output": 34.490826374729586,
    "avg_bits_err_improve": 0,
    "time": 20519.28515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.731654172625774,
    "avg_bits_err_output": 34.7267159859375,
    "avg_bits_err_improve": 0.004938186688271173,
    "time": 22723.80224609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.25592938520995,
    "avg_bits_err_output": 0.025783082813311303,
    "avg_bits_err_improve": 61.23014630239664,
    "time": 17189.2216796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.0043646566278,
    "avg_bits_err_output": 0.06597838529663243,
    "avg_bits_err_improve": 62.93838627133117,
    "time": 48248.9462890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- 1.0 (log (exp (+ 1.0 (- (/ 1.0 (tan x)) (/ 1.0 x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 59.86949778009672,
    "avg_bits_err_output": 59.869526152593295,
    "avg_bits_err_improve": -2.837249657261509e-05,
    "time": 97065.40063476562,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -6.9e-177) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (if (<= eps 3e-260) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps b))) (expm1 (* eps a)))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 39,
    "avg_bits_err_input": 60.4660750040529,
    "avg_bits_err_output": 41.10977665592871,
    "avg_bits_err_improve": 19.356298348124184,
    "time": 52209.843994140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.16859861326628,
    "avg_bits_err_output": 0.11342830607708138,
    "avg_bits_err_improve": 41.0551703071892,
    "time": 24149.18505859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.76375708417609,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 58.763382084176094,
    "time": 2375.124755859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.016698955664374,
    "avg_bits_err_output": 0.021512548747768777,
    "avg_bits_err_improve": 28.995186406916606,
    "time": 11726.411865234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 29.54982648154794,
    "avg_bits_err_output": 28.699024979227623,
    "avg_bits_err_improve": 0.8508015023203157,
    "time": 27629.576171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(- (+ (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ x -1.0))) (/ 2.0 x))",
    "output_parens": 7,
    "avg_bits_err_input": 10.06042986287164,
    "avg_bits_err_output": 10.071920550386082,
    "avg_bits_err_improve": -0.011490687514442044,
    "time": 53073.95361328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (* (tan (+ x eps)) (/ 1.0 (log1p (expm1 (tan (+ x eps)))))) (tan (+ x eps)) (tan (- x)))",
    "output_parens": 13,
    "avg_bits_err_input": 36.80678994756066,
    "avg_bits_err_output": 37.12351826991658,
    "avg_bits_err_improve": -0.31672832235592097,
    "time": 51842.46923828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(- (/ 1.0 (+ 1.0 (sqrt x))) (- (* (/ 1.0 (+ 1.0 (sqrt x))) (+ 1.0 (pow (- -1.0 (sqrt x)) 2.0))) (+ 1.0 (sqrt (+ 1.0 x)))))",
    "output_parens": 16,
    "avg_bits_err_input": 29.92762824474874,
    "avg_bits_err_output": 26.689080301501658,
    "avg_bits_err_improve": 3.238547943247081,
    "time": 23758.8544921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.96172508371131,
    "avg_bits_err_output": 0.3764164224635464,
    "avg_bits_err_improve": 36.58530866124776,
    "time": 26933.402099609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.97093036205265,
    "avg_bits_err_output": 19.830462029447336,
    "avg_bits_err_improve": 0.14046833260531244,
    "time": 34781.14892578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 15.0705599578238,
    "avg_bits_err_output": 15.0705599578238,
    "avg_bits_err_improve": 0,
    "time": 11509.818603515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.806541770153874,
    "avg_bits_err_output": 1.21246057057931,
    "avg_bits_err_improve": 28.594081199574564,
    "time": 30416.029052734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0707195644503525,
    "avg_bits_err_output": 0.0707195644503525,
    "avg_bits_err_improve": 0,
    "time": 23217.30322265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.10308491871449,
    "avg_bits_err_output": 0.30514661719245784,
    "avg_bits_err_improve": 15.797938301522032,
    "time": 19139.96435546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (* PI (/ (/ angle 180.0) PI)) (* (* PI (/ (/ angle 180.0) PI)) (fma PI (* PI (/ (/ 1.0 (* PI (/ (/ angle 180.0) PI))) PI)) 0.0))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 24,
    "avg_bits_err_input": 20.247295279560415,
    "avg_bits_err_output": 20.563792017519408,
    "avg_bits_err_improve": -0.31649673795899247,
    "time": 66770.59033203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log (+ 1.0 (expm1 (cos (* PI (/ angle 180.0)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 31.860737409601708,
    "avg_bits_err_output": 31.843839640307735,
    "avg_bits_err_improve": 0.016897769293972686,
    "time": 52150.998291015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (- (log (pow (exp (cos 1.0)) (cos (fma (/ angle 180.0) PI 1.0)))) (* (sin (fma (/ angle 180.0) PI 1.0)) (sin -1.0)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.41262782178542,
    "avg_bits_err_output": 20.420552688053995,
    "avg_bits_err_improve": -0.007924866268574249,
    "time": 63758.935546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17216748125036058,
    "avg_bits_err_output": 0.17216748125036058,
    "avg_bits_err_improve": 0,
    "time": 28154.423828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31242730941468716,
    "avg_bits_err_output": 0.3018406598076887,
    "avg_bits_err_improve": 0.010586649606998455,
    "time": 38580.21826171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13759436093777044,
    "avg_bits_err_output": 0.13759436093777044,
    "avg_bits_err_improve": 0,
    "time": 39612.8515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi1) (* (cos phi2) (cos (- lambda2 lambda1))) (* (sin phi1) (sin phi2)))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.86179442777483,
    "avg_bits_err_output": 16.855590456965988,
    "avg_bits_err_improve": 0.006203970808840609,
    "time": 46707.128662109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= b 1.62e+16) (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (* (+ (* (* b (* (fma a (* c -4.0) (* b b)) b)) (/ 1.0 (fma a (* c -4.0) (* b b)))) (* (/ 1.0 (fma a (* c -4.0) (* b b))) (* a (* (fma a (* c -4.0) (* b b)) (* c -4.0))))) (/ 1.0 (fma a (* c -4.0) (* b b))))) (- b)) (+ a a)) (/ (- (- (+ (sqrt (fma a (* c -4.0) (* b b))) 1.0) b) 1.0) (* a 2.0)))",
    "output_parens": 47,
    "avg_bits_err_input": 52.54893871942147,
    "avg_bits_err_output": 50.68501270903819,
    "avg_bits_err_improve": 1.863926010383281,
    "time": 33638.1103515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.93968600050526,
    "avg_bits_err_output": 28.191604549883216,
    "avg_bits_err_improve": 0.7480814506220455,
    "time": 24450.312744140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.79672286925443,
    "avg_bits_err_output": 39.521468563827256,
    "avg_bits_err_improve": 4.275254305427175,
    "time": 25683.848876953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.50892151664608,
    "avg_bits_err_output": 34.50892151664608,
    "avg_bits_err_improve": 0,
    "time": 19505.110595703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (* (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)) (/ 1.0 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1)))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.8488395665463114,
    "avg_bits_err_output": 0.8601605238937103,
    "avg_bits_err_improve": -0.011320957347398908,
    "time": 41577.224365234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (+ 1.0 (log (* (exp (/ 2.0 (+ 1.0 (exp (* -2.0 x))))) (exp -1.0)))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 29.374745308290716,
    "avg_bits_err_output": 29.379070462161362,
    "avg_bits_err_improve": -0.004325153870645693,
    "time": 22555.90869140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.278366926252225,
    "avg_bits_err_output": 1.1029293234384918,
    "avg_bits_err_improve": 57.17543760281373,
    "time": 21727.251953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.27560170097852,
    "avg_bits_err_output": 0.007,
    "avg_bits_err_improve": 58.26860170097852,
    "time": 7328.125732421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.007823120312590146,
    "avg_bits_err_output": 0.007823120312590146,
    "avg_bits_err_improve": 0,
    "time": 3894.60791015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.705625,
    "avg_bits_err_output": 31.705625,
    "avg_bits_err_improve": 0,
    "time": 5792.76904296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(fma (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (* (log (- (+ 1.0 (/ (+ 1.0 x) (- 1.0 x))) 1.0)) (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) (fma (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x)))) (/ 0.5 (+ 1.0 (log (/ (+ 1.0 x) (- 1.0 x))))) -0.5))",
    "output_parens": 31,
    "avg_bits_err_input": 58.70600775417713,
    "avg_bits_err_output": 58.75110099913412,
    "avg_bits_err_improve": -0.04509324495698763,
    "time": 74502.23168945312,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- (fma x x -1.0))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.04294812031259015,
    "avg_bits_err_output": 0.04294812031259015,
    "avg_bits_err_improve": 0,
    "time": 4393.75830078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12507312031259016,
    "avg_bits_err_output": 0.12507312031259016,
    "avg_bits_err_improve": 0,
    "time": 49536.134765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (- (+ (cos (atan (/ (* eh (- (tan t))) ew))) 1.0) 1.0) (cos t))) (* (sin t) (* (sin (atan (/ (* (- eh) (tan t)) ew))) eh))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.129125,
    "avg_bits_err_output": 0.13029248125036058,
    "avg_bits_err_improve": -0.0011674812503605914,
    "time": 15602.36572265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (- (* (cos (/ (+ phi1 phi2) 2.0)) lambda1) (* (cos (/ (+ phi1 phi2) 2.0)) lambda2)) (- phi1 phi2)))",
    "output_parens": 12,
    "avg_bits_err_input": 38.75888818465462,
    "avg_bits_err_output": 3.833443564715602,
    "avg_bits_err_improve": 34.92544461993902,
    "time": 40916.3564453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.35516522605636,
    "avg_bits_err_output": 14.35516522605636,
    "avg_bits_err_improve": 0,
    "time": 7437.134521484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (fma (sin phi1) (cos delta) (* (* (sin delta) (cos phi1)) (cos theta)))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.16115112925084202,
    "avg_bits_err_output": 0.15845757699866758,
    "avg_bits_err_improve": 0.002693552252174436,
    "time": 48806.603515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (+ -1.0 (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 52.56052898958039,
    "avg_bits_err_output": 46.11336487231139,
    "avg_bits_err_improve": 6.447164117269004,
    "time": 32146.545166015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -3.0))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 29.074130093987623,
    "avg_bits_err_output": 29.01709701941774,
    "avg_bits_err_improve": 0.05703307456988327,
    "time": 36778.282958984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* a (* c -3.0))) (- (* b (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))))) b)) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.86880553911625,
    "avg_bits_err_output": 39.62478514094446,
    "avg_bits_err_improve": 4.244020398171791,
    "time": 23809.028076171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* c (* a -3.0)))) b) (* a 3.0))",
    "output_parens": 8,
    "avg_bits_err_input": 34.5228111051199,
    "avg_bits_err_output": 34.5228111051199,
    "avg_bits_err_improve": 0,
    "time": 22384.4736328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.159819173272345,
    "avg_bits_err_output": 13.159819173272345,
    "avg_bits_err_improve": 0,
    "time": 68173.05053710938,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (log1p (expm1 (/ (+ 1.0 x) (+ -1.0 x)))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.148772293790792,
    "avg_bits_err_output": 29.165815569834443,
    "avg_bits_err_improve": -0.01704327604365119,
    "time": 21815.263427734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (+ (/ 1.0 (+ -1.0 x)) -1.0) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01557556406367188,
    "avg_bits_err_improve": -0.004325564063671881,
    "time": 5063.766357421875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (- (+ (/ 1.0 (+ 1.0 x)) (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ -1.0 x)) (pow (/ 1.0 (+ 1.0 x)) 2.0))) (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (pow (/ 1.0 (+ 1.0 x)) 2.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 14.52866119350035,
    "avg_bits_err_output": 0.6642541946341822,
    "avg_bits_err_improve": 13.864406998866167,
    "time": 92538.59765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -4e-310) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (- (* 2.0 (pow B 2.0)) (* A (* C 8.0))))) (* (sqrt F) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.332486803990264,
    "avg_bits_err_output": 47.432860975091344,
    "avg_bits_err_improve": 4.89962582889892,
    "time": 54030.544921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.94791697115608,
    "avg_bits_err_output": 29.94791697115608,
    "avg_bits_err_improve": 0,
    "time": 70596.58422851562,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F 8e-287) (/ (- (sqrt (* F (* (+ (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ C A)) (- (* 2.0 (pow B 2.0)) (* A (* 8.0 C))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt F)) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 46,
    "avg_bits_err_input": 52.377085075342315,
    "avg_bits_err_output": 48.19586832942596,
    "avg_bits_err_improve": 4.181216745916352,
    "time": 46096.271240234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.04371613288221,
    "avg_bits_err_output": 15.04371613288221,
    "avg_bits_err_improve": 0,
    "time": 54831.80908203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 5.5e+152) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (- (* g g) (* h h))) g)))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))))))",
    "output_parens": 66,
    "avg_bits_err_input": 36.91913143472072,
    "avg_bits_err_output": 16.32539542717529,
    "avg_bits_err_improve": 20.593736007545427,
    "time": 59279.361328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (- (* (cos (/ (* 2.0 PI) 3.0)) (cos (/ (acos (/ (- g) h)) 3.0))) (* (- (+ (sin (/ (* 2.0 PI) 3.0)) 1.0) 1.0) (sin (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.9918708656323929,
    "avg_bits_err_output": 0.03413233125324521,
    "avg_bits_err_improve": 0.9577385343791477,
    "time": 13629.13037109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6469693609377705,
    "avg_bits_err_output": 0.6469693609377705,
    "avg_bits_err_improve": 0,
    "time": 2303.805419921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.986655253484908,
    "avg_bits_err_output": 11.986655253484908,
    "avg_bits_err_improve": 0,
    "time": 23091.5576171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5623637626021017,
    "avg_bits_err_output": 0.513625,
    "avg_bits_err_improve": 0.04873876260210175,
    "time": 9951.48193359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 52.79582136742435,
    "avg_bits_err_output": 15.044978511043547,
    "avg_bits_err_improve": 37.75084285638081,
    "time": 27913.27197265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.71919993055985,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.71919993055985,
    "time": 2031.1767578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01175,
    "avg_bits_err_output": 0.01175,
    "avg_bits_err_improve": 0,
    "time": 6971.03076171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1268.218994140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 5e-104) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (- 0.375 (* v 0.25)) (* r (* r w)))) (- 1.0 v))))",
    "output_parens": 27,
    "avg_bits_err_input": 13.24002046550635,
    "avg_bits_err_output": 7.4497904140665465,
    "avg_bits_err_improve": 5.790230051439803,
    "time": 33070.904296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (fma (* x1 x1) -6.0 (* (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (* (+ (/ (+ (fma 3.0 (* x1 x1) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0) 2.0)))) (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (* (* x1 x1) 4.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 51,
    "avg_bits_err_input": 0.5127421811457701,
    "avg_bits_err_output": 0.28743207843261687,
    "avg_bits_err_improve": 0.22531010271315322,
    "time": 72930.87890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.29623075170551,
    "avg_bits_err_output": 19.29623075170551,
    "avg_bits_err_improve": 0,
    "time": 64504.962646484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.2240614816370412,
    "avg_bits_err_output": 0.17868892538812292,
    "avg_bits_err_improve": 0.04537255624891828,
    "time": 23820.079345703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003919694000577261,
    "avg_bits_err_output": 0.003919694000577261,
    "avg_bits_err_improve": 0,
    "time": 2795.080078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.938247422578925,
    "avg_bits_err_output": 9.123075430393675,
    "avg_bits_err_improve": 4.815171992185251,
    "time": 40294.69091796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(if (<= (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 0.0) (/ (- (- (+ (* (- 1.0 (/ 1.0 eps)) (pow (exp (- -1.0 eps)) x)) (* (/ 1.0 eps) (* (exp (- (* eps x) x)) (/ (/ 1.0 eps) (+ 1.0 (/ 1.0 eps)))))) (- (* (exp (- (* eps x) x)) (/ (/ 1.0 eps) (+ 1.0 (/ 1.0 eps)))))) (- (* (+ 1.0 (/ 1.0 eps)) (/ (exp (- (* eps x) x)) (+ 1.0 (/ 1.0 eps)))))) 2.0) (/ (+ (* (- 1.0 (/ 1.0 eps)) (exp (* x (- -1.0 eps)))) (* (exp (- (* eps x) x)) (- (/ 1.0 eps) -1.0))) 2.0))",
    "output_parens": 70,
    "avg_bits_err_input": 29.087406643723906,
    "avg_bits_err_output": 0.9182093720020567,
    "avg_bits_err_improve": 28.16919727172185,
    "time": 37457.26025390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.017125,
    "avg_bits_err_output": 0.017125,
    "avg_bits_err_improve": 0,
    "time": 6735.192626953125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.024125,
    "avg_bits_err_output": 0.024125,
    "avg_bits_err_improve": 0,
    "time": 46836.40771484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- (* (/ (+ t t) (+ t 1.0)) (+ 1.0 (/ (+ t t) (+ t 1.0)))) (/ (+ t t) (+ t 1.0)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.023125,
    "avg_bits_err_output": 0.02668872187554087,
    "avg_bits_err_improve": -0.0035637218755408713,
    "time": 29080.8388671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3475.808349609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3800.738037109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3787.106201171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.818228497284723,
    "avg_bits_err_output": 0.240375,
    "avg_bits_err_improve": 7.577853497284723,
    "time": 55562.22802734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.771673768895418,
    "avg_bits_err_output": 7.771673768895418,
    "avg_bits_err_improve": 0,
    "time": 25943.42822265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.29147747013905,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 16.27910247013905,
    "time": 14537.040283203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (pow (exp (* x x)) 10.0) (cos x)) (+ (+ (pow (cos x) 2.0) 1.0) -1.0))",
    "output_parens": 10,
    "avg_bits_err_input": 3.5597346939920094,
    "avg_bits_err_output": 3.066734184109733,
    "avg_bits_err_improve": 0.4930005098822763,
    "time": 35685.19287109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.862961151971179,
    "avg_bits_err_output": 14.862961151971179,
    "avg_bits_err_improve": 0,
    "time": 32761.886962890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.58276838073367,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.58276838073367,
    "time": 4897.9580078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.14358561573015,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.14308561573015,
    "time": 4583.1083984375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.306625,
    "avg_bits_err_improve": 63.693375,
    "time": 4705.56640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843253347501275,
    "avg_bits_err_output": 0.401125,
    "avg_bits_err_improve": 61.442128347501274,
    "time": 18919.318603515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- (sqrt (fma a (* c -4.0) (* b b)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 34.731654172625774,
    "avg_bits_err_output": 34.7267159859375,
    "avg_bits_err_improve": 0.004938186688271173,
    "time": 26526.5,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.50892151664608,
    "avg_bits_err_output": 34.50892151664608,
    "avg_bits_err_improve": 0,
    "time": 23042.455322265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 3030.77685546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.411440673098795,
    "avg_bits_err_output": 0.009875,
    "avg_bits_err_improve": 39.401565673098794,
    "time": 15216.205078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.68575504741409,
    "avg_bits_err_output": 19.68575504741409,
    "avg_bits_err_improve": 0,
    "time": 5876.041015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6721265540007746,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6721265540007746,
    "time": 5775.296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03875,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0.037625,
    "time": 9251.764892578125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.01856372187554087,
    "avg_bits_err_output": 0.008375,
    "avg_bits_err_improve": 0.01018872187554087,
    "time": 5972.413818359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.012875,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0.012499999999999999,
    "time": 7218.36279296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 2123.46240234375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4000428578176385,
    "avg_bits_err_output": 0.2375,
    "avg_bits_err_improve": 0.1625428578176385,
    "time": 6745.17236328125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 30.01115789529748,
    "avg_bits_err_output": 30.01115789529748,
    "avg_bits_err_improve": 0,
    "time": 9707.88671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(/ (- x (sqrt (- (* x (* (* x (/ 1.0 x)) x)) eps))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 24.556461837877784,
    "avg_bits_err_output": 24.573661042571867,
    "avg_bits_err_improve": -0.017199204694083647,
    "time": 47777.176513671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(* (- (* (/ (- x (sin x)) (tan x)) (+ 1.0 (exp 1.0))) (+ 1.0 (- (/ (- x (sin x)) (tan x)) 1.0))) (exp -1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 29.68532795172709,
    "avg_bits_err_output": 29.68715799545318,
    "avg_bits_err_improve": -0.0018300437260911906,
    "time": 48668.624755859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005625,
    "avg_bits_err_output": 0.00075,
    "avg_bits_err_improve": 0.004875,
    "time": 3767.15185546875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-252) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-15) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.3425093859414,
    "avg_bits_err_output": 10.462449303409693,
    "avg_bits_err_improve": 36.880060082531706,
    "time": 58363.8896484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.980188192230877,
    "avg_bits_err_output": 25.980188192230877,
    "avg_bits_err_improve": 0,
    "time": 21628.595947265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d (- a) (* b c)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.083827027080257,
    "avg_bits_err_output": 26.083827027080257,
    "avg_bits_err_improve": 0,
    "time": 25516.557373046875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035625,
    "avg_bits_err_output": 0.02065776945635998,
    "avg_bits_err_improve": 0.014967230543640016,
    "time": 5756.977294921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- ux (* ux (+ maxCos (* (- (fma ux maxCos 1.0) ux) (+ maxCos -1.0)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.44394324418557,
    "avg_bits_err_output": 0.5416053298456059,
    "avg_bits_err_improve": 12.902337914339965,
    "time": 39144.2548828125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (+ ux (* ux (- (- (* ux maxCos) ux) (fma (fma ux maxCos 1.0) (+ maxCos -1.0) maxCos))))))",
    "output_parens": 13,
    "avg_bits_err_input": 13.495645621433516,
    "avg_bits_err_output": 0.3326033522266071,
    "avg_bits_err_improve": 13.163042269206908,
    "time": 47357.176513671875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (sin (* (* uy 2.0) PI))) yi)) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.32794533011683163,
    "avg_bits_err_output": 0.3236992226651708,
    "avg_bits_err_improve": 0.004246107451660819,
    "time": 50505.323974609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.19663710765478196,
    "avg_bits_err_output": 0.1968352279673721,
    "avg_bits_err_improve": -0.0001981203125901443,
    "time": 41982.61181640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5584054131264333,
    "avg_bits_err_output": 0.5152048241376349,
    "avg_bits_err_improve": 0.043200588988798416,
    "time": 33480.009521484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(- (sqrt (/ u1 (- 1.0 u1))) (* (sqrt (/ u1 (- 1.0 u1))) (- 1.0 (cos (* u2 6.28318530718)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3288798706505123,
    "avg_bits_err_output": 0.3433964855655813,
    "avg_bits_err_improve": -0.014516614915069004,
    "time": 46419.82177734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- (log1p (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -2.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.34622139490544057,
    "avg_bits_err_output": 0.3467216320504017,
    "avg_bits_err_improve": -0.0005002371449611132,
    "time": 45237.091796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.0604678217642843,
    "avg_bits_err_output": 0.03956267642378781,
    "avg_bits_err_improve": 0.020905145340496492,
    "time": 12095.398193359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (+ (* s (exp (/ (- (fabs x)) s))) s)))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14691469672015062,
    "avg_bits_err_output": 0.13297104611787655,
    "avg_bits_err_improve": 0.013943650602274066,
    "time": 30116.716552734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6377393741706877,
    "avg_bits_err_output": 0.6403502679299644,
    "avg_bits_err_improve": -0.0026108937592767,
    "time": 25442.66552734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.16001236850351017,
    "avg_bits_err_output": 0.15965373301264021,
    "avg_bits_err_improve": 0.00035863549086995183,
    "time": 33143.16455078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.5661096639661056,
    "avg_bits_err_output": 2.5661096639661056,
    "avg_bits_err_improve": 0,
    "time": 59801.9794921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (- v (* (sinh (/ 1.0 v)) (* v -2.0))) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.45987599673795104,
    "avg_bits_err_output": 0.47586697486817997,
    "avg_bits_err_improve": -0.015990978130228928,
    "time": 59749.830078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.11523247469693938,
    "avg_bits_err_output": 0.11523247469693938,
    "avg_bits_err_improve": 0,
    "time": 26084.3544921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (pow (* alpha alpha) PI)) (fma cosTheta (- (* alpha (* alpha cosTheta)) cosTheta) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.4714917115735817,
    "avg_bits_err_output": 0.43688570325022325,
    "avg_bits_err_improve": 0.03460600832335847,
    "time": 26582.685791015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* (log1p (- (/ (+ u -0.25) 0.75))) (* -3.0 s))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3181925752395882,
    "avg_bits_err_output": 0.542735106825265,
    "avg_bits_err_improve": 0.7754574684143232,
    "time": 88698.9404296875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.398654350062245,
    "avg_bits_err_output": 0.206,
    "avg_bits_err_improve": 12.192654350062245,
    "time": 29401.85205078125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (- (* (exp (log1p (* 2.0 PI))) s) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 21,
    "avg_bits_err_input": 0.14816826612545544,
    "avg_bits_err_output": 0.150472589563947,
    "avg_bits_err_improve": -0.0023043234384915456,
    "time": 74345.32568359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8504139139318614,
    "avg_bits_err_output": 0.8450307993082161,
    "avg_bits_err_improve": 0.005383114623645269,
    "time": 50395.537353515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (exp (* (log (sqrt PI)) -2.0))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.6964411828804143,
    "avg_bits_err_output": 0.5449777281570198,
    "avg_bits_err_improve": 0.1514634547233945,
    "time": 47999.672119140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.626070382870543,
    "avg_bits_err_output": 0.5511130372409616,
    "avg_bits_err_improve": 13.074957345629581,
    "time": 29715.880859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (exp (log (* (* 2.0 PI) u2)))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.667632846796424,
    "avg_bits_err_output": 0.3134293371616096,
    "avg_bits_err_improve": 13.354203509634814,
    "time": 52623.35693359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (* (- alpha) alpha) (log1p (- u0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.226162936136163,
    "avg_bits_err_output": 0.3187430453140324,
    "avg_bits_err_improve": 13.90741989082213,
    "time": 39157.43896484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.584607537057988,
    "avg_bits_err_output": 0.5244400263906225,
    "avg_bits_err_improve": 12.060167510667364,
    "time": 24052.225341796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -5e+19) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (+ (- (* l (/ PI l)) l) l))))) (if (<= (* PI l) 5e-113) (- (* PI l) (* (pow F -1.0) (* (tan (* PI l)) (pow F -1.0)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* l (+ (- (* l (/ PI l)) l) l)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 16.646005884411142,
    "avg_bits_err_output": 9.184579722648374,
    "avg_bits_err_improve": 7.461426161762768,
    "time": 47665.74658203125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.2149387218755409,
    "avg_bits_err_output": 0.2149387218755409,
    "avg_bits_err_improve": 0,
    "time": 26699.15771484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+281) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (+ (fma x (/ 1.0 (tan B)) (- x)) x)) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 43,
    "avg_bits_err_input": 13.858444100164588,
    "avg_bits_err_output": 12.397939578483456,
    "avg_bits_err_improve": 1.4605045216811323,
    "time": 62955.6318359375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (fma (exp 2.0) (exp (fma (/ PI 4.0) f -2.0)) (- (exp (* (/ PI 4.0) (- f)))))))))",
    "output_parens": 24,
    "avg_bits_err_input": 61.69862389366804,
    "avg_bits_err_output": 51.96673645732813,
    "avg_bits_err_improve": 9.73188743633991,
    "time": 56678.575439453125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -7.5e-148) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 1.7e-134) (/ (* (sqrt 2.0) t) (sqrt (+ (+ (* (/ (+ 1.0 x) (+ x -1.0)) (* t (+ t t))) (* l (* l (+ -1.0 (/ (+ 1.0 x) (+ x -1.0)))))) (fma (- (* l (/ (* l (/ l l)) l))) l (* l l))))) (- (+ 1.0 (/ (* t (sqrt 2.0)) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) l))))) 1.0)))",
    "output_parens": 64,
    "avg_bits_err_input": 43.0165951562062,
    "avg_bits_err_output": 36.05219258086431,
    "avg_bits_err_improve": 6.964402575341893,
    "time": 35590.0634765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 3.802986425580912,
    "avg_bits_err_output": 3.802986425580912,
    "avg_bits_err_improve": 0,
    "time": 31327.63525390625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.9689041181878356,
    "avg_bits_err_output": 0.009125,
    "avg_bits_err_improve": 0.9597791181878356,
    "time": 13119.149169921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.004405037257653,
    "avg_bits_err_output": 10.004405037257653,
    "avg_bits_err_improve": 0,
    "time": 197277.69140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -3.5e+32) (sqrt (* 2.0 (* (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))) n))) (if (<= n -6.5e-304) (* (sqrt (- n)) (sqrt (- (* (pow (/ l Om) 2.0) (* (* 2.0 U) (* n (- U U*)))) (* 2.0 (* U (- t (* 2.0 (/ (* l l) Om)))))))) (* (sqrt (* 2.0 (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))))) (sqrt n))))",
    "output_parens": 51,
    "avg_bits_err_input": 34.3563435188631,
    "avg_bits_err_output": 30.10716358162395,
    "avg_bits_err_improve": 4.249179937239148,
    "time": 37576.841552734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -1.85e-41) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (if (<= t 65.0) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 47.70244897910644,
    "avg_bits_err_output": 36.67924520355173,
    "avg_bits_err_improve": 11.023203775554713,
    "time": 54293.07470703125,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+172) (/ 2.0 (* (tan k) (* (* (+ 2.0 (pow (/ k t) 2.0)) (sin k)) (/ (pow t 3.0) (* l l))))) (/ 2.0 (* (- (+ 2.0 (pow (/ k t) 2.0))) (fma (sin k) (tan k) (- (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 32.00405801311554,
    "avg_bits_err_output": 30.07316811660039,
    "avg_bits_err_improve": 1.9308898965151506,
    "time": 41818.089599609375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (* a2 (/ (/ (cos th) (sqrt 2.0)) a2)) a2) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 12,
    "avg_bits_err_input": 0.530235153146095,
    "avg_bits_err_output": 0.5144030109637342,
    "avg_bits_err_improve": 0.015832142182360842,
    "time": 54869.39794921875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)) (pow k -0.5))",
    "output_parens": 7,
    "avg_bits_err_input": 0.4558140234749733,
    "avg_bits_err_output": 0.4174137696006557,
    "avg_bits_err_improve": 0.038400253874317614,
    "time": 67798.27734375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (* (- (expm1 l) (expm1 (- l))) (cos (/ K 2.0)))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.295902563258757,
    "avg_bits_err_output": 0.06732312031259013,
    "avg_bits_err_improve": 17.228579442946167,
    "time": 34766.7109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (* (- (+ (cos (- (/ (* K (+ m n)) 2.0) M)) 1.0) 1.0) (* (cos (- (/ (* K (+ m n)) 2.0) M)) (/ 1.0 (/ (+ (* (/ (cos 0.0) (cos (- (/ (* K (+ m n)) 2.0) M))) (log (pow (exp (cos (- (/ (* K (+ m n)) 2.0) M))) (cos (- (/ (* K (+ m n)) 2.0) M))))) (cos (- (- (/ (* K (+ m n)) 2.0) M) (* 2.0 PI)))) 2.0)))) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 55,
    "avg_bits_err_input": 15.259977517909437,
    "avg_bits_err_output": 15.264186117156186,
    "avg_bits_err_improve": -0.0042085992467484346,
    "time": 42569.322509765625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(- (* (+ 1.0 (sqrt (+ 1.0 (pow (/ U (* 2.0 (* J (cos (/ K 2.0))))) 2.0)))) (* (cos (/ K 2.0)) (* J -2.0))) (* (cos (/ K 2.0)) (* J -2.0)))",
    "output_parens": 19,
    "avg_bits_err_input": 18.33732312031259,
    "avg_bits_err_output": 18.370078007814758,
    "avg_bits_err_improve": -0.03275488750216837,
    "time": 39342.054931640625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+280) (* w0 (* (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l))))))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ 1.0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 72,
    "avg_bits_err_input": 13.991339047435492,
    "avg_bits_err_output": 9.863098509205557,
    "avg_bits_err_improve": 4.128240538229935,
    "time": 35807.29541015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.489491733666977,
    "avg_bits_err_output": 19.489491733666977,
    "avg_bits_err_improve": 0,
    "time": 21957.87255859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* (* w D) (* D h))) (sqrt (- (pow (/ (* d (* d c0)) (* (* w D) (* D h))) 2.0) (* M M)))))",
    "output_parens": 20,
    "avg_bits_err_input": 59.53181243466636,
    "avg_bits_err_output": 56.15016957429051,
    "avg_bits_err_improve": 3.381642860375848,
    "time": 37092.856201171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 5e+254) (* (* (sqrt (/ d l)) (pow (/ d h) 0.5)) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (- (* (* (sqrt (/ d h)) (- 1.0 (* 0.5 (log (pow (exp (/ h l)) (pow (/ (* M D) (+ d d)) 2.0)))))) (* (sqrt (/ d l)) (/ (/ d h) (/ d h)))) (* (/ (/ d h) (/ d h)) 0.0)))",
    "output_parens": 55,
    "avg_bits_err_input": 26.41690728909107,
    "avg_bits_err_output": 25.176765462452156,
    "avg_bits_err_improve": 1.240141826638915,
    "time": 50273.559326171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.39205824064325,
    "avg_bits_err_output": 15.39205824064325,
    "avg_bits_err_improve": 0,
    "time": 8622.828369140625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9870637218755409,
    "avg_bits_err_output": 0.012094360937770436,
    "avg_bits_err_improve": 0.9749693609377705,
    "time": 17043.990478515625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (fma t (* PI (* (- 1.0 (* v v)) (sqrt (- 2.0 (* v (* v 6.0)))))) 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.45553459325646145,
    "avg_bits_err_output": 0.3870458553647325,
    "avg_bits_err_improve": 0.06848873789172893,
    "time": 24565.96630859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011167481250360578,
    "avg_bits_err_output": 0.010323120312590145,
    "avg_bits_err_improve": 0.0008443609377704331,
    "time": 14222.996826171875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5285635298177244,
    "avg_bits_err_output": 0.5285635298177244,
    "avg_bits_err_improve": 0,
    "time": 9263.70166015625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.0529347922808627,
    "avg_bits_err_output": 2.026913551655683,
    "avg_bits_err_improve": 0.026021240625179853,
    "time": 6101.8837890625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (expm1 (log1p (exp (/ (+ mu (- EDonor (- Ec Vef))) KbT)))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.024823660533951273,
    "avg_bits_err_output": 0.02610145958661833,
    "avg_bits_err_improve": -0.0012777990526670578,
    "time": 21180.093505859375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18200977500432683,
    "avg_bits_err_output": 0.18200977500432683,
    "avg_bits_err_improve": 0,
    "time": 16168.322265625,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma a a (* b b)) b)) (fma b (* b (* a a)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 21,
    "avg_bits_err_input": 0.18484082587449863,
    "avg_bits_err_output": 0.0815485373700368,
    "avg_bits_err_improve": 0.10329228850446183,
    "time": 26474.8271484375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (* b (* (fma b b (* a a)) b)) (fma b (* a (* b a)) (pow a 4.0))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.18622876449628095,
    "avg_bits_err_output": 0.07807663285159236,
    "avg_bits_err_improve": 0.10815213164468859,
    "time": 23006.647216796875,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.036152592432723,
    "avg_bits_err_output": 13.036152592432723,
    "avg_bits_err_improve": 0,
    "time": 16427.78662109375,
    "seed": 25,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.89204784365195,
    "avg_bits_err_output": 0.064875,
    "avg_bits_err_improve": 40.82717284365195,
    "time": 8756.5830078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (+ (+ x 2.0) -2.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.55902957880205,
    "avg_bits_err_output": 29.9705897185807,
    "avg_bits_err_improve": 1.5884398602213494,
    "time": 30267.3447265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.250716627551554,
    "avg_bits_err_output": 33.250716627551554,
    "avg_bits_err_improve": 0,
    "time": 31622.51953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (+ (* (* a c) (sqrt (/ 1.0 (- (* b_2 b_2) (* a c))))) (- 0.0 (- (* b_2 (* (sqrt (/ 1.0 (- (* b_2 b_2) (* a c)))) b_2)) (- b_2)))) a)",
    "output_parens": 19,
    "avg_bits_err_input": 34.11813922100866,
    "avg_bits_err_output": 32.62459690766499,
    "avg_bits_err_improve": 1.4935423133436743,
    "time": 27354.747314453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (exp (log1p (- (cos x)))) (* x x))",
    "output_parens": 6,
    "avg_bits_err_input": 31.86615493825549,
    "avg_bits_err_output": 31.86708724502887,
    "avg_bits_err_improve": -0.0009323067733788548,
    "time": 26265.1669921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 6.6e+49) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (- (* (+ (log1p x) 1.0) (/ 1.0 n)) (- (+ 1.0 (/ 1.0 n)) 1.0)))) (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))",
    "output_parens": 21,
    "avg_bits_err_input": 32.852489982194086,
    "avg_bits_err_output": 31.01992780545572,
    "avg_bits_err_improve": 1.8325621767383673,
    "time": 82019.24584960938,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.80565365569737,
    "avg_bits_err_output": 0.03,
    "avg_bits_err_improve": 29.77565365569737,
    "time": 19038.655029296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -2e+178) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (+ (* (/ 1.0 x) (* (- (- (* (/ 1.0 x) (- 1.0 (/ 1.0 (/ 1.0 x)))) -1.0) (/ 1.0 x)) (* (/ 1.0 x) (/ 1.0 (/ 1.0 x))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.266997377295024,
    "avg_bits_err_output": 2.58166888783285,
    "avg_bits_err_improve": 11.685328489462174,
    "time": 109848.255859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 40.063134977209515,
    "avg_bits_err_output": 6.328703402832806,
    "avg_bits_err_improve": 33.73443157437671,
    "time": 32355.0263671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (- (cbrt (+ 1.0 x)) (+ 1.0 (cbrt x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.287079827296214,
    "avg_bits_err_output": 29.98137038087552,
    "avg_bits_err_improve": 0.30570944642069264,
    "time": 35376.169677734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.820413235775288,
    "avg_bits_err_output": 29.827045281214694,
    "avg_bits_err_improve": -0.006632045439406653,
    "time": 29457.012451171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.497212251970524,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0047428209283779665,
    "time": 22851.435791015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.777319510496454,
    "avg_bits_err_output": 33.777319510496454,
    "avg_bits_err_improve": 0,
    "time": 19039.197265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.249397783302264,
    "avg_bits_err_output": 0.022240601562950726,
    "avg_bits_err_improve": 61.227157181739315,
    "time": 13912.097412109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.0038189906172,
    "avg_bits_err_output": 0.09838553129218586,
    "avg_bits_err_improve": 62.90543345932501,
    "time": 49046.698974609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(log1p (fma (/ 1.0 (- (+ 1.0 (/ (- 1.0 eps) (+ 1.0 eps))) 1.0)) (* (/ (- 1.0 eps) (+ 1.0 eps)) (/ (- 1.0 eps) (+ 1.0 eps))) -1.0))",
    "output_parens": 15,
    "avg_bits_err_input": 58.505118567529436,
    "avg_bits_err_output": 58.534537526530286,
    "avg_bits_err_improve": -0.02941895900085001,
    "time": 110282.23950195312,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output_parens": 4,
    "avg_bits_err_input": 59.799133600510245,
    "avg_bits_err_output": 59.799133600510245,
    "avg_bits_err_improve": 0,
    "time": 82385.40576171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 10,
    "avg_bits_err_input": 60.26191170306846,
    "avg_bits_err_output": 41.056960470197275,
    "avg_bits_err_improve": 19.20495123287119,
    "time": 47530.202880859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(+ (+ -1.0 (/ 1.0 (expm1 x))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 41.198204675298605,
    "avg_bits_err_output": 0.08645157306188932,
    "avg_bits_err_improve": 41.11175310223672,
    "time": 17537.053466796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.61771282688367,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.61746282688367,
    "time": 4000.150146484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.76068083760891,
    "avg_bits_err_output": 0.014410952987381808,
    "avg_bits_err_improve": 29.746269884621526,
    "time": 6211.91748046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.009672811185897,
    "avg_bits_err_output": 28.98448064295407,
    "avg_bits_err_improve": 1.025192168231829,
    "time": 40194.04296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ -1.0 x)) (/ 2.0 x)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.253645595574053,
    "avg_bits_err_output": 9.253584917220657,
    "avg_bits_err_improve": 6.067835339607086e-05,
    "time": 61196.514404296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(fma (tan x) (fma (tan x) (/ -1.0 (tan x)) (tan x)) (+ (tan (+ x eps)) (- (pow (tan x) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 37.19322870327347,
    "avg_bits_err_output": 37.22648120212111,
    "avg_bits_err_improve": -0.033252498847637924,
    "time": 39354.82568359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 13,
    "avg_bits_err_input": 30.267771417149046,
    "avg_bits_err_output": 25.94176187686485,
    "avg_bits_err_improve": 4.326009540284197,
    "time": 33371.355224609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.32740431185747,
    "avg_bits_err_output": 0.3878878336525282,
    "avg_bits_err_improve": 36.93951647820494,
    "time": 27443.3369140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.91670907442092,
    "avg_bits_err_output": 19.76856965388457,
    "avg_bits_err_improve": 0.14813942053634932,
    "time": 22730.13525390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (* (atan (+ N 1.0)) (* (atan (+ N 1.0)) (/ 1.0 (atan (+ N 1.0))))) (atan N))",
    "output_parens": 11,
    "avg_bits_err_input": 14.767982564178892,
    "avg_bits_err_output": 14.772563281811584,
    "avg_bits_err_improve": -0.004580717632691744,
    "time": 49380.637939453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.397892207208027,
    "avg_bits_err_output": 1.1879858716004401,
    "avg_bits_err_improve": 28.209906335607588,
    "time": 27303.39599609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(- (/ (- m (* m m)) v) (- 1.0 (- m (* m (/ (- m (* m m)) v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.07326204570071307,
    "avg_bits_err_output": 0.07167987882802454,
    "avg_bits_err_improve": 0.0015821668726885285,
    "time": 37886.892822265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.437323458131658,
    "avg_bits_err_output": 0.31009718125612984,
    "avg_bits_err_improve": 16.12722627687553,
    "time": 8994.992431640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (- (* (/ angle 180.0) (+ (/ PI (/ angle 180.0)) 1.0)) (/ angle 180.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.821060747476913,
    "avg_bits_err_output": 20.922814889641735,
    "avg_bits_err_improve": -0.10175414216482181,
    "time": 61973.40283203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (log (exp (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.81752120710567,
    "avg_bits_err_output": 30.791549203425262,
    "avg_bits_err_improve": 0.025972003680408307,
    "time": 47350.135498046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (- (* (sin (- (* PI (/ angle 180.0)) 1.0)) (sin -1.0)) (* (- (cos (fma PI (/ angle 180.0) -1.0))) (cos 1.0)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 20.12189732157665,
    "avg_bits_err_output": 20.101532810356023,
    "avg_bits_err_improve": 0.020364511220627435,
    "time": 71214.12329101562,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.17863684218813097,
    "avg_bits_err_output": 0.17853375534275098,
    "avg_bits_err_improve": 0.00010308684537999047,
    "time": 35781.408447265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (+ 1.0 (* (tan x) (+ (+ (tan x) -2.0) 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.3155272590284995,
    "avg_bits_err_output": 0.3396912737157339,
    "avg_bits_err_improve": -0.024164014687234392,
    "time": 79766.5810546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13592403967784733,
    "avg_bits_err_output": 0.13592403967784733,
    "avg_bits_err_improve": 0,
    "time": 36068.4189453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.456186758291835,
    "avg_bits_err_output": 16.45197347502879,
    "avg_bits_err_improve": 0.004213283263045042,
    "time": 41067.906005859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))) (* c (* a -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma c (* a -4.0) (* b b)))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.120791713719925,
    "avg_bits_err_output": 45.762857227378376,
    "avg_bits_err_improve": 6.357934486341549,
    "time": 28571.513427734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.605496859858842,
    "avg_bits_err_output": 27.809426157275905,
    "avg_bits_err_improve": 0.7960707025829379,
    "time": 25090.028564453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.99124497118306,
    "avg_bits_err_output": 39.64070512889726,
    "avg_bits_err_improve": 4.350539842285798,
    "time": 35945.2099609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.50072855114043,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0012265217584683796,
    "time": 22780.37890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8208514187129492,
    "avg_bits_err_output": 0.8147689649444515,
    "avg_bits_err_improve": 0.006082453768497698,
    "time": 39566.64794921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.025259517857783,
    "avg_bits_err_output": 29.02462479522889,
    "avg_bits_err_improve": 0.0006347226288951902,
    "time": 8167.208740234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.14127252826874,
    "avg_bits_err_output": 1.1058349625007213,
    "avg_bits_err_improve": 57.03543756576802,
    "time": 12782.148193359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.0175177741536,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 58.010892774153604,
    "time": 8082.34375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.008563721875540865,
    "avg_bits_err_output": 0.129642816206339,
    "avg_bits_err_improve": -0.12107909433079814,
    "time": 3033.752685546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (sqrt (fma x x -1.0)) -1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 32.345625,
    "avg_bits_err_output": 32.346,
    "avg_bits_err_improve": -0.00037499999999823785,
    "time": 9290.470703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (* (- (+ 1.0 (* (log (/ (+ 1.0 x) (- 1.0 x))) (exp 1.0))) 1.0) (exp -1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 58.49709355993969,
    "avg_bits_err_output": 58.49968714527241,
    "avg_bits_err_improve": -0.0025935853327183622,
    "time": 68868.51391601562,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.06044812031259014,
    "avg_bits_err_output": 0.06044812031259014,
    "avg_bits_err_improve": 0,
    "time": 3199.325439453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (fma ew (* (sin t) (cos (atan (/ (/ eh ew) (tan t))))) (* eh (* (cos t) (sin (atan (/ (/ eh ew) (tan t))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.12719812031259015,
    "avg_bits_err_output": 0.1266462406251803,
    "avg_bits_err_improve": 0.0005518796874098564,
    "time": 37100.955322265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12925,
    "avg_bits_err_output": 0.12925,
    "avg_bits_err_improve": 0,
    "time": 31903.182373046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.41878921237882,
    "avg_bits_err_output": 3.776400656937925,
    "avg_bits_err_improve": 34.642388555440895,
    "time": 51407.33935546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (- (+ (/ (- (* a a) (* b b)) (* a a)) 1.0) 1.0)))",
    "output_parens": 9,
    "avg_bits_err_input": 14.75590394101239,
    "avg_bits_err_output": 14.75763560760186,
    "avg_bits_err_improve": -0.0017316665894711036,
    "time": 9141.678466796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (* (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (* (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))) (/ 1.0 (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))))))))",
    "output_parens": 44,
    "avg_bits_err_input": 0.15402250659705077,
    "avg_bits_err_output": 0.15653615397535697,
    "avg_bits_err_improve": -0.0025136473783061997,
    "time": 48766.04638671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (+ -1.0 (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) (* a (fma (* c -3.0) (* c (* (/ (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) (* c -3.0)) -3.0)) 0.0))) (* 3.0 a))",
    "output_parens": 22,
    "avg_bits_err_input": 52.16219721394157,
    "avg_bits_err_output": 45.75542215479302,
    "avg_bits_err_improve": 6.406775059148551,
    "time": 33347.234130859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (* (fma b b (* c (* a -3.0))) (/ 1.0 (fma b b (* c (* a -3.0)))))) (- b)) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.741924115096033,
    "avg_bits_err_output": 28.73429318137602,
    "avg_bits_err_improve": 0.007630933720012223,
    "time": 29972.83935546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) (/ b b)) b (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) (* c -3.0)))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.026525042560394,
    "avg_bits_err_output": 39.67691982789961,
    "avg_bits_err_improve": 4.349605214660784,
    "time": 29632.447021484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 33.5403086642602,
    "avg_bits_err_output": 33.57824584775801,
    "avg_bits_err_improve": -0.03793718349781017,
    "time": 26629.867431640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (fma (cos phi2) (sin (- lambda1 lambda2)) (* (cos phi2) (+ (sin (- lambda1 lambda2)) (* (cos phi2) (/ (sin (- lambda2 lambda1)) (cos phi2)))))) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 26,
    "avg_bits_err_input": 13.392803135743739,
    "avg_bits_err_output": 13.396248234646686,
    "avg_bits_err_improve": -0.003445098902947308,
    "time": 59909.767333984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.25925549259497,
    "avg_bits_err_output": 29.25925549259497,
    "avg_bits_err_improve": 0,
    "time": 102060.42333984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (- (+ (/ 1.0 (+ -1.0 x)) -1.0) -1.0) (/ x (+ x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.01125,
    "avg_bits_err_output": 0.01645056406367188,
    "avg_bits_err_improve": -0.0052005640636718815,
    "time": 6055.67724609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (- (+ (/ 1.0 (+ 1.0 x)) (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ -1.0 x)) (pow (/ 1.0 (+ 1.0 x)) 2.0))) (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (pow (/ 1.0 (+ 1.0 x)) 2.0)))",
    "output_parens": 22,
    "avg_bits_err_input": 14.255973601060752,
    "avg_bits_err_output": 0.6129244325029375,
    "avg_bits_err_improve": 13.643049168557814,
    "time": 142376.0849609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.4e-295) (/ (- (* (sqrt (- (* 2.0 F))) (* (sqrt (- (pow B 2.0) (* 4.0 (* A C)))) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt 2.0) (* (sqrt (- (* A (* C 4.0)) (pow B 2.0))) (* (sqrt F) (sqrt (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C))))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 50,
    "avg_bits_err_input": 52.337215148945475,
    "avg_bits_err_output": 47.30425804646527,
    "avg_bits_err_improve": 5.032957102480204,
    "time": 44047.905029296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.861659304921883,
    "avg_bits_err_output": 29.861659304921883,
    "avg_bits_err_improve": 0,
    "time": 34149.79150390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= (/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C))) 0.0) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (sqrt (* 2.0 (* (- (pow B 2.0) (* A (* C 4.0))) (+ (* C F) (* F (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))))))) (- (pow B 2.0) (* A (* C 4.0)))))",
    "output_parens": 68,
    "avg_bits_err_input": 52.21040211276203,
    "avg_bits_err_output": 47.83370816522203,
    "avg_bits_err_improve": 4.376693947540005,
    "time": 42865.443115234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.428865641902025,
    "avg_bits_err_output": 15.428865641902025,
    "avg_bits_err_improve": 0,
    "time": 45206.338623046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.35e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -5e-280) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 3.3e+153) (+ (cbrt (* (/ 1.0 (+ a a)) (- (sqrt (- (* g g) (* h h))) g))) (* (cbrt (fma (sqrt (- g h)) (sqrt (+ g h)) g)) (cbrt (- (/ 1.0 (+ a a)))))) (+ (cbrt (* (/ 1.0 (+ a a)) (- (* (sqrt (- g h)) (sqrt (+ g h))) g))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))))))))",
    "output_parens": 92,
    "avg_bits_err_input": 35.81181306384064,
    "avg_bits_err_output": 14.866172743696026,
    "avg_bits_err_improve": 20.945640320144612,
    "time": 72838.76196289062,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9892646625064913,
    "avg_bits_err_output": 0.026240601562950727,
    "avg_bits_err_improve": 0.9630240609435405,
    "time": 7348.27001953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7293776763925557,
    "avg_bits_err_output": 0.7293776763925557,
    "avg_bits_err_improve": 0,
    "time": 5989.8466796875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.259932373714525,
    "avg_bits_err_output": 11.259932373714525,
    "avg_bits_err_improve": 0,
    "time": 22120.289306640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma x (- y) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.5141795882180192,
    "avg_bits_err_output": 0.4405,
    "avg_bits_err_improve": 0.07367958821801923,
    "time": 13896.820068359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -45000000.0) (log (+ (/ 1.0 (hypot 1.0 x)) (+ x (* x (* x (/ 1.0 (hypot 1.0 x))))))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 53.072991959607606,
    "avg_bits_err_output": 11.396145911765489,
    "avg_bits_err_improve": 41.67684604784212,
    "time": 31284.716064453125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.737987692005759,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.737987692005759,
    "time": 2569.529052734375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (* (/ (- 1.0 x) (+ 1.0 x)) (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (- (+ 1.0 (/ (- 1.0 x) (+ 1.0 x))) 1.0)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.01252124062518029,
    "avg_bits_err_improve": -0.0010212406251802909,
    "time": 23762.301513671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1205.953857421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -4e+89) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (* r (* w (- 0.375 (* v 0.25)))) w)) (- 1.0 v))) (if (<= r 40000000000000.0) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* w (* (- 0.375 (* v 0.25)) (* r (* r w)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v)))))",
    "output_parens": 40,
    "avg_bits_err_input": 12.927482184284866,
    "avg_bits_err_output": 6.912759775004318,
    "avg_bits_err_improve": 6.014722409280548,
    "time": 31016.328369140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (fma x1 (* x1 -6.0) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (- (+ (fma x1 (* x1 4.0) (* (+ x1 x1) (+ (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) -3.0))) 2.0) 2.0))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 45,
    "avg_bits_err_input": 0.5116336805139391,
    "avg_bits_err_output": 0.28139882256461,
    "avg_bits_err_improve": 0.23023485794932907,
    "time": 67786.16162109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.88612866222424,
    "avg_bits_err_output": 17.88612866222424,
    "avg_bits_err_improve": 0,
    "time": 59264.054443359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.22938228322697118,
    "avg_bits_err_output": 0.22938228322697118,
    "avg_bits_err_improve": 0,
    "time": 16981.349609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003,
    "avg_bits_err_output": 0.003,
    "avg_bits_err_improve": 0,
    "time": 2889.904541015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.76977070297973,
    "avg_bits_err_output": 9.808577470169261,
    "avg_bits_err_improve": 4.961193232810469,
    "time": 41513.998291015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (* x (- -1.0 eps)))) (exp (- (* eps x) x)))) (- (exp (* x (- -1.0 eps))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.50826244526362,
    "avg_bits_err_output": 0.9506305257045966,
    "avg_bits_err_improve": 28.557631919559025,
    "time": 34492.792724609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.027875,
    "avg_bits_err_output": 0.027875,
    "avg_bits_err_improve": 0,
    "time": 15343.5537109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.03175,
    "avg_bits_err_output": 0.03175,
    "avg_bits_err_improve": 0,
    "time": 56552.68603515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (- 1.0 (+ 1.0 (- 0.0 (* (/ (+ t t) (+ 1.0 t)) (+ (/ (+ t t) (+ 1.0 t)) 0.0)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.033625,
    "avg_bits_err_output": 0.033,
    "avg_bits_err_improve": 0.0006250000000000006,
    "time": 29458.538330078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3855.389404296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3295.395263671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4013.85107421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.869208202763694,
    "avg_bits_err_output": 0.258875,
    "avg_bits_err_improve": 7.6103332027636945,
    "time": 52678.983154296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.704921750259623,
    "avg_bits_err_output": 7.704921750259623,
    "avg_bits_err_improve": 0,
    "time": 25653.359619140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.39349772541454,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 16.38087272541454,
    "time": 12326.03955078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (cos x) (* (pow (pow (exp 10.0) x) x) (* (cos x) (/ 1.0 (cos x)))))",
    "output_parens": 10,
    "avg_bits_err_input": 3.549624384460356,
    "avg_bits_err_output": 1.1765951025235626,
    "avg_bits_err_improve": 2.3730292819367937,
    "time": 60704.27490234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.440684010593156,
    "avg_bits_err_output": 15.440684010593156,
    "avg_bits_err_improve": 0,
    "time": 58887.024658203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.83574125539821,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.83574125539821,
    "time": 5128.071533203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.76474219334192,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 38.76349219334192,
    "time": 4701.88818359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.300125,
    "avg_bits_err_improve": 63.699875,
    "time": 4600.99951171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t t) 4e-32)",
    "output_parens": 2,
    "avg_bits_err_input": 61.843245613873904,
    "avg_bits_err_output": 0.4106253765672779,
    "avg_bits_err_improve": 61.43262023730663,
    "time": 19526.166015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.777319510496454,
    "avg_bits_err_output": 33.777319510496454,
    "avg_bits_err_improve": 0,
    "time": 24436.13525390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.50072855114043,
    "avg_bits_err_output": 33.5019550728989,
    "avg_bits_err_improve": -0.0012265217584683796,
    "time": 23499.821533203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2566.98876953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.21935763276731,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 40.209107632767314,
    "time": 5455.4970703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 20.589307546808183,
    "avg_bits_err_output": 20.589307546808183,
    "avg_bits_err_improve": 0,
    "time": 3000.93798828125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6405157901204688,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6405157901204688,
    "time": 5390.105712890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.034625,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.034125,
    "time": 7890.486572265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.024188721875540872,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0.012688721875540872,
    "time": 4934.6435546875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.012375,
    "avg_bits_err_output": 0.012375,
    "avg_bits_err_improve": 0,
    "time": 3103.72998046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000375,
    "avg_bits_err_output": 0.000375,
    "avg_bits_err_improve": 0,
    "time": 2049.859130859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39340601562950744,
    "avg_bits_err_output": 0.247125,
    "avg_bits_err_improve": 0.14628101562950743,
    "time": 8039.578857421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.811700122557763,
    "avg_bits_err_output": 29.811700122557763,
    "avg_bits_err_improve": 0,
    "time": 20332.982421875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- (* eps 1.0) (- (sqrt (- (* x x) eps)) (- x eps)))",
    "output_parens": 7,
    "avg_bits_err_input": 24.456523389874434,
    "avg_bits_err_output": 23.562127219645927,
    "avg_bits_err_improve": 0.8943961702285073,
    "time": 22878.4296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(* (* (- (exp -1.0)) (log (pow (exp (exp 1.0)) (* (/ (- x (sin x)) (tan x)) (- (exp 1.0)))))) (exp -1.0))",
    "output_parens": 16,
    "avg_bits_err_input": 29.421632279398324,
    "avg_bits_err_output": 29.423627924594122,
    "avg_bits_err_improve": -0.0019956451957980903,
    "time": 51110.820556640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.005375,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.00475,
    "time": 3800.69140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.1) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.941282953079444,
    "avg_bits_err_output": 10.442913113698836,
    "avg_bits_err_improve": 37.49836983938061,
    "time": 52282.901611328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 25.80754034068526,
    "avg_bits_err_output": 25.80754034068526,
    "avg_bits_err_improve": 0,
    "time": 47365.30029296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma d d (* c c)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.95044423935469,
    "avg_bits_err_output": 25.949194239354693,
    "avg_bits_err_improve": 0.0012499999999988631,
    "time": 29893.92041015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035125,
    "avg_bits_err_output": 0.023856203125901452,
    "avg_bits_err_improve": 0.011268796874098552,
    "time": 9910.117919921875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- ux (* ux (+ maxCos (* (- (fma ux maxCos 1.0) ux) (+ maxCos -1.0)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.579489360709896,
    "avg_bits_err_output": 0.5300722294354744,
    "avg_bits_err_improve": 13.049417131274422,
    "time": 32881.9228515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (+ (* (/ PI (+ uy uy)) (* uy (+ uy uy))) (* (/ PI (+ uy uy)) (* uy (+ uy uy))))) (sqrt (fma (- (fma ux maxCos 1.0) ux) ux (- (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 24,
    "avg_bits_err_input": 13.63019050459329,
    "avg_bits_err_output": 0.3467109050324693,
    "avg_bits_err_improve": 13.28347959956082,
    "time": 41786.869873046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (+ (* (* (cos (- (* (exp (log (* PI 2.0))) uy) (+ uy 0.0))) (sin uy)) yi) (* yi (* (cos uy) (sin (* uy (fma PI 2.0 -1.0)))))))))",
    "output_parens": 45,
    "avg_bits_err_input": 0.33401348843591894,
    "avg_bits_err_output": 0.3446810288424918,
    "avg_bits_err_improve": -0.010667540406572862,
    "time": 78124.8671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.19987260553560118,
    "avg_bits_err_output": 0.19987260553560118,
    "avg_bits_err_improve": 0,
    "time": 41776.126220703125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (sqrt (/ u1 (- 1.0 u1))) (* (- (- (sqrt (/ u1 (- 1.0 u1))))) (* (sqrt (/ u1 (- 1.0 u1))) (/ 1.0 (sqrt (/ u1 (- 1.0 u1)))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 22,
    "avg_bits_err_input": 0.5308800480580345,
    "avg_bits_err_output": 0.5456144114973916,
    "avg_bits_err_improve": -0.01473436343935719,
    "time": 43275.822021484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (- (+ (* u2 -6.28318530718) (* u2 1.0)) u2)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.3397218907425026,
    "avg_bits_err_output": 0.34509536955149295,
    "avg_bits_err_improve": -0.005373478808990362,
    "time": 59092.520751953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(- (* s (log (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3406485254221038,
    "avg_bits_err_output": 0.34186844209800304,
    "avg_bits_err_improve": -0.0012199166758992686,
    "time": 39619.710693359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05871110042782082,
    "avg_bits_err_output": 0.04649475208758201,
    "avg_bits_err_improve": 0.012216348340238811,
    "time": 67094.06958007812,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (* (+ (exp (/ (- (fabs x)) s)) 1.0) (fma s (exp (/ (- (fabs x)) s)) s)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.16424616026081912,
    "avg_bits_err_output": 0.15186403252015615,
    "avg_bits_err_improve": 0.012382127740662968,
    "time": 33922.0224609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6632781777917213,
    "avg_bits_err_output": 0.6632781777917213,
    "avg_bits_err_improve": 0,
    "time": 23478.132568359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.1462528737561116,
    "avg_bits_err_output": 0.14301424957475212,
    "avg_bits_err_improve": 0.0032386241813594785,
    "time": 22388.1201171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.2895482299233305,
    "avg_bits_err_output": 2.286068667264866,
    "avg_bits_err_improve": 0.003479562658464719,
    "time": 46086.67236328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (+ (+ (/ (* sinTheta_i sinTheta_O) v) -2.0) 2.0))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output_parens": 14,
    "avg_bits_err_input": 0.46097934380132244,
    "avg_bits_err_output": 0.46234290863835564,
    "avg_bits_err_improve": -0.0013635648370332043,
    "time": 46515.78076171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (* (/ 1.0 (+ v v)) (+ (/ 1.0 (/ 1.0 (+ v v))) (+ (* (/ 1.0 (/ 1.0 (+ v v))) (/ (/ (/ 1.0 (+ v v)) (/ 1.0 (+ v v))) (/ 1.0 (/ 1.0 (+ v v))))) -1.0)))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.10302601290249022,
    "avg_bits_err_output": 0.09616165298263774,
    "avg_bits_err_improve": 0.006864359919852486,
    "time": 44972.269287109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.4681064950266719,
    "avg_bits_err_output": 0.42144753909128235,
    "avg_bits_err_improve": 0.046658955935389546,
    "time": 26073.454833984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(fma (* (log1p (- (/ (- u 0.25) 0.75))) -3.0) s 0.0)",
    "output_parens": 6,
    "avg_bits_err_input": 1.3060568408883189,
    "avg_bits_err_output": 0.5422085627755834,
    "avg_bits_err_improve": 0.7638482781127355,
    "time": 98051.08569335938,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (log1p (* u -4.0)) (- s))",
    "output_parens": 4,
    "avg_bits_err_input": 12.538021244643698,
    "avg_bits_err_output": 0.200375,
    "avg_bits_err_improve": 12.337646244643699,
    "time": 39455.16455078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (- s) (* r (- (* PI 6.0))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.14880376278430135,
    "avg_bits_err_output": 0.14910829521155758,
    "avg_bits_err_improve": -0.00030453242725622665,
    "time": 75634.64697265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.8751437394991366,
    "avg_bits_err_output": 0.8641663067559616,
    "avg_bits_err_improve": 0.010977432743174975,
    "time": 51300.668212890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (+ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (* (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (log1p (expm1 (+ (/ 1.0 (sqrt PI)) -1.0))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.7016228866725667,
    "avg_bits_err_output": 0.484524814078852,
    "avg_bits_err_improve": 0.21709807259371466,
    "time": 37859.9658203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (pow (pow (log1p (- u1)) 2.0) 0.25) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.571038820056883,
    "avg_bits_err_output": 0.5307458788767088,
    "avg_bits_err_improve": 13.040292941180173,
    "time": 29095.12646484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.618980245072857,
    "avg_bits_err_output": 0.31571240726479305,
    "avg_bits_err_improve": 13.303267837808063,
    "time": 38024.5205078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.342785358530046,
    "avg_bits_err_output": 0.21575,
    "avg_bits_err_improve": 14.127035358530046,
    "time": 31898.6943359375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (* (/ cos2phi (* alphax alphax)) (* (/ cos2phi (* alphax alphax)) (/ 1.0 (/ cos2phi (* alphax alphax))))) (/ sin2phi (* alphay alphay))))",
    "output_parens": 16,
    "avg_bits_err_input": 12.85168414432041,
    "avg_bits_err_output": 0.542402681663765,
    "avg_bits_err_improve": 12.309281462656646,
    "time": 20596.06103515625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1e+157) (- (* PI l) (* (/ 1.0 (* F F)) (log1p (expm1 (tan (* PI l)))))) (if (<= (* PI l) 5e+142) (- (* PI l) (* (/ 1.0 (* F F)) (tan (+ (* l l) (- (* PI l) (* l l)))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))))",
    "output_parens": 33,
    "avg_bits_err_input": 16.58024427079044,
    "avg_bits_err_output": 14.145986460412903,
    "avg_bits_err_improve": 2.434257810377538,
    "time": 29196.39013671875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20717164837040855,
    "avg_bits_err_output": 0.20391241358116216,
    "avg_bits_err_improve": 0.00325923478924639,
    "time": 35513.032958984375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+299) (fma (/ F (sin B)) (pow (fma x 2.0 (fma F F 2.0)) -0.5) (- (* x (/ 1.0 (tan B))))) (+ (- (fma (/ 1.0 (tan B)) x (fma (- x) (- (/ 1.0 (tan B))) (* (/ 1.0 (tan B)) (- x))))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 47,
    "avg_bits_err_input": 14.041987773608499,
    "avg_bits_err_output": 12.102645707390668,
    "avg_bits_err_improve": 1.9393420662178311,
    "time": 65993.94140625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.52293558095672,
    "avg_bits_err_output": 2.194514357267732,
    "avg_bits_err_improve": 59.328421223688984,
    "time": 36498.659912109375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= (* l l) 2e+288) (/ (+ t (* t (- (sqrt 2.0) 1.0))) (sqrt (+ (* (/ (+ 1.0 x) (+ -1.0 x)) (* 2.0 (* t t))) (* (* l l) (+ (/ (+ 1.0 x) (+ -1.0 x)) -1.0))))) (/ (* (sqrt 2.0) t) (sqrt (- 1.0 (fma l l (- (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma t (+ t t) (* l l)) -1.0)))))))",
    "output_parens": 36,
    "avg_bits_err_input": 42.9698256132607,
    "avg_bits_err_output": 36.1859866932886,
    "avg_bits_err_improve": 6.783838919972105,
    "time": 47022.888916015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output_parens": 10,
    "avg_bits_err_input": 4.155389877793806,
    "avg_bits_err_output": 4.155389877793806,
    "avg_bits_err_improve": 0,
    "time": 43044.0556640625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (log (exp (/ 1.0 (sqrt (fma (pow (/ (+ l l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)) 1.0))))))))",
    "output_parens": 16,
    "avg_bits_err_input": 1.0022106035144864,
    "avg_bits_err_output": 1.0038356035144864,
    "avg_bits_err_improve": -0.0016249999999999876,
    "time": 14730.194580078125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.401775337236556,
    "avg_bits_err_output": 10.401775337236556,
    "avg_bits_err_improve": 0,
    "time": 238314.52075195312,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 1e-159) (* (sqrt (* 2.0 (/ (* U (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*))))) (+ n n)))) (hypot n n)) (if (<= (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) 5e+151) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- U)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 n))))))",
    "output_parens": 79,
    "avg_bits_err_input": 34.784326591242504,
    "avg_bits_err_output": 27.276317608108734,
    "avg_bits_err_improve": 7.50800898313377,
    "time": 46795.885498046875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)) 2e+242) (/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0)))))))",
    "output_parens": 41,
    "avg_bits_err_input": 47.17592741129102,
    "avg_bits_err_output": 37.1982286198546,
    "avg_bits_err_improve": 9.977698791436417,
    "time": 58420.5322265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+212) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (* (tan k) (* (/ (pow t 3.0) (* l l)) (sin k))))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (fma (tan k) (* (sin k) (exp (log1p (/ (pow t 3.0) (* l l))))) (* (sin k) (tan (- k)))))))",
    "output_parens": 45,
    "avg_bits_err_input": 32.06283414055706,
    "avg_bits_err_output": 30.206244833293535,
    "avg_bits_err_improve": 1.8565893072635227,
    "time": 43959.228271484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* a2 (* (/ (cos th) (sqrt 2.0)) a2)) (* a1 (* (/ (cos th) (sqrt 2.0)) a1)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5179001906453743,
    "avg_bits_err_output": 0.49438872502452125,
    "avg_bits_err_improve": 0.023511465620853045,
    "time": 44271.015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (* (* (pow n (/ (- 1.0 k) 2.0)) (pow 2.0 (/ (- 1.0 k) 2.0))) (pow PI (/ (- 1.0 k) 2.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.5012922630313916,
    "avg_bits_err_output": 0.5929624331880612,
    "avg_bits_err_improve": -0.09167017015666956,
    "time": 51170.677001953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* J (* (cos (/ K 2.0)) (- (expm1 l) (expm1 (- l))))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.579718509402472,
    "avg_bits_err_output": 0.07306372187554086,
    "avg_bits_err_improve": 17.50665478752693,
    "time": 35495.890625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 0.0) (* (log1p (+ (+ (expm1 (cos (- (/ (* K (+ m n)) 2.0) M))) -2.0) 2.0)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (* K (- (* (+ n m) (+ 1.0 (/ 1.0 K))) (+ n m)))) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 58,
    "avg_bits_err_input": 14.906355391942377,
    "avg_bits_err_output": 1.3200280900927297,
    "avg_bits_err_improve": 13.586327301849646,
    "time": 33298.870849609375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.52152124062518,
    "avg_bits_err_output": 17.52152124062518,
    "avg_bits_err_improve": 0,
    "time": 40549.228271484375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 2e+153) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 14.68144798762942,
    "avg_bits_err_output": 9.89669845081835,
    "avg_bits_err_improve": 4.78474953681107,
    "time": 38176.43505859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.267624367244505,
    "avg_bits_err_output": 19.267624367244505,
    "avg_bits_err_improve": 0,
    "time": 21441.3779296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= w -6.8e+58) (exp (* 1.0 (log (* (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (pow (/ (* d (* d c0)) (* D (* D (* w h)))) 2.0) (* M M)))) (/ c0 (+ w w)))))) (if (<= w 4.2e+84) (* (/ c0 (+ w w)) (fma (sqrt (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (sqrt (- (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (/ (* d (* d c0)) (* D (* h (* w D)))))) (/ (* (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) (sqrt (- (pow (/ (* d (* c0 d)) (* D (* w (* D h)))) 2.0) (* M M)))) (/ c0 (+ w w))) 1.0)))",
    "output_parens": 74,
    "avg_bits_err_input": 59.816706543722134,
    "avg_bits_err_output": 57.27370354308456,
    "avg_bits_err_improve": 2.543003000637576,
    "time": 39511.017578125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 4e+254) (* (* (sqrt (/ d h)) (sqrt (/ d l))) (- 1.0 (- (+ (* 0.5 (* (/ h l) (pow (/ (* M D) (+ d d)) 2.0))) 1.0) 1.0))) (* (sqrt (* (/ d h) (/ d l))) (- (exp (log1p (- 1.0 (* 0.5 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0))))))) 1.0)))",
    "output_parens": 52,
    "avg_bits_err_input": 26.594621883612902,
    "avg_bits_err_output": 25.933803943948412,
    "avg_bits_err_improve": 0.66081793966449,
    "time": 45651.847900390625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (- (* (- 2.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5))) (exp 1.0)) (exp 1.0)) (exp -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 15.363753683668655,
    "avg_bits_err_output": 14.926964541854266,
    "avg_bits_err_improve": 0.43678914181438877,
    "time": 22195.977783203125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* (* (sqrt (- 2.0 (* v (* v 6.0)))) 3.0) (- PI (* PI (* v v)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9814481203125902,
    "avg_bits_err_output": 0.013033082813311302,
    "avg_bits_err_improve": 0.9684150374992789,
    "time": 15427.56005859375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* t (* (* (- 1.0 (* v v)) (sqrt (- 2.0 (* v (* v 6.0))))) PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4544076372987831,
    "avg_bits_err_output": 0.38929165916855424,
    "avg_bits_err_improve": 0.06511597813022885,
    "time": 21151.5791015625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.012719360937770435,
    "avg_bits_err_output": 0.01139624062518029,
    "avg_bits_err_improve": 0.0013231203125901453,
    "time": 7848.74072265625,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5944290227989761,
    "avg_bits_err_output": 0.5944290227989761,
    "avg_bits_err_improve": 0,
    "time": 8349.608154296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 1.9715034027665266,
    "avg_bits_err_output": 1.9697321621413462,
    "avg_bits_err_improve": 0.0017712406251804147,
    "time": 19387.465576171875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.015878218412193564,
    "avg_bits_err_output": 0.015878218412193564,
    "avg_bits_err_improve": 0,
    "time": 6129.0029296875,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (fma b b (* a a)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.18413233125324513,
    "avg_bits_err_output": 0.18341297031547465,
    "avg_bits_err_improve": 0.0007193609377704746,
    "time": 16087.370361328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(fma (* b b) 4.0 (+ (pow (fma b b (* a a)) 2.0) (+ (* a (+ (* a 4.0) (- (* a (* a 4.0)) (* b (* b 12.0))))) -1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.19084249726654834,
    "avg_bits_err_output": 0.19253101562950714,
    "avg_bits_err_improve": -0.0016885183629588019,
    "time": 30571.27490234375,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (+ (* b (* (fma b b (* a a)) b)) (fma b (* a (* b a)) (pow a 4.0))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.19892162183657477,
    "avg_bits_err_output": 0.08580564370634665,
    "avg_bits_err_improve": 0.11311597813022813,
    "time": 25818.67626953125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (fma x x (* 4.0 (* p p))))))))",
    "output_parens": 8,
    "avg_bits_err_input": 13.28311631048599,
    "avg_bits_err_output": 13.283774072572022,
    "avg_bits_err_improve": -0.0006577620860319655,
    "time": 21703.328125,
    "seed": 26,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.871881448441904,
    "avg_bits_err_output": 0.0485,
    "avg_bits_err_improve": 41.82338144844191,
    "time": 10050.801025390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (- (+ (sin x) 1.0) 1.0)) (- (+ (+ x -2.0) 2.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.219757239076408,
    "avg_bits_err_output": 25.6475530384003,
    "avg_bits_err_improve": 5.572204200676108,
    "time": 37693.569580078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (sqrt (- (* b_2 b_2) (* a c))) b_2) a)",
    "output_parens": 6,
    "avg_bits_err_input": 33.3946016815262,
    "avg_bits_err_output": 33.3946016815262,
    "avg_bits_err_improve": 0,
    "time": 23578.612548828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 33.82572493381178,
    "avg_bits_err_output": 33.82572493381178,
    "avg_bits_err_improve": 0,
    "time": 21854.41259765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp 1.0))) (exp -1.0) (cos x))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.760817682830556,
    "avg_bits_err_output": 31.406413717688896,
    "avg_bits_err_improve": 0.3544039651416604,
    "time": 30361.142578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (pow (exp 1.0) (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 8,
    "avg_bits_err_input": 32.572839008559924,
    "avg_bits_err_output": 32.30862628316595,
    "avg_bits_err_improve": 0.2642127253939748,
    "time": 81374.9375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.759153922008,
    "avg_bits_err_output": 0.023875,
    "avg_bits_err_improve": 29.735278922008,
    "time": 20534.13916015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output_parens": 4,
    "avg_bits_err_input": 14.891865061230554,
    "avg_bits_err_output": 14.891865061230554,
    "avg_bits_err_improve": 0,
    "time": 55944.71337890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (* (+ (cos eps) -1.0) (cos x)) (* (sin x) (sin eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.967193054080916,
    "avg_bits_err_output": 6.006978987385502,
    "avg_bits_err_improve": 33.960214066695414,
    "time": 25394.43896484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (cbrt (+ 1.0 x)) (- -1.0 (cbrt x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 30.00037727883092,
    "avg_bits_err_output": 29.691314382687835,
    "avg_bits_err_improve": 0.3090628961430859,
    "time": 32903.323486328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log (- 1.0 (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.610853563576264,
    "avg_bits_err_output": 29.61255307423071,
    "avg_bits_err_improve": -0.0016995106544470673,
    "time": 34187.653076171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (+ (* b b) (* a (* c -4.0)))) b) (+ a a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.953378994917635,
    "avg_bits_err_output": 33.94871226723644,
    "avg_bits_err_improve": 0.004666727681197358,
    "time": 33056.4091796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.98620127500834,
    "avg_bits_err_output": 33.98620127500834,
    "avg_bits_err_improve": 0,
    "time": 20596.55810546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(* (/ 1.0 (/ (log1p (- x)) (log1p x))) (- (+ (pow (/ (log1p (- x)) (log1p x)) 2.0) 1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 61.454338070962,
    "avg_bits_err_output": 0.030066572651786767,
    "avg_bits_err_improve": 61.42427149831022,
    "time": 20548.4892578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00612660175783,
    "avg_bits_err_output": 0.10455599657055682,
    "avg_bits_err_improve": 62.901570605187274,
    "time": 49124.4287109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ -1.0 (log (/ (- 1.0 eps) (+ 1.0 eps)))) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 58.77575192202896,
    "avg_bits_err_output": 58.79238272519365,
    "avg_bits_err_improve": -0.01663080316468779,
    "time": 272163.4611816406,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output_parens": 4,
    "avg_bits_err_input": 59.955196340111364,
    "avg_bits_err_output": 59.955196340111364,
    "avg_bits_err_improve": 0,
    "time": 66077.82861328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -6e-212) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (* (expm1 (* eps b)) (* (expm1 (* eps b)) (/ 1.0 (expm1 (* eps b))))))) (if (<= eps 5.2e-287) (/ (* eps (+ (pow (exp (+ a b)) eps) -1.0)) (* (expm1 (* eps a)) (+ (pow (exp b) eps) -1.0))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 43,
    "avg_bits_err_input": 60.40087358858221,
    "avg_bits_err_output": 40.81900857076828,
    "avg_bits_err_improve": 19.581865017813925,
    "time": 51020.670166015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 42.19630522812508,
    "avg_bits_err_output": 0.12963546846403642,
    "avg_bits_err_improve": 42.06666975966104,
    "time": 18927.833984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.820127470369236,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.819252470369236,
    "time": 3061.361328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.66894960581914,
    "avg_bits_err_output": 0.018188651651654526,
    "avg_bits_err_improve": 29.650760954167485,
    "time": 3838.177490234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.426038065991328,
    "avg_bits_err_output": 29.41684362617497,
    "avg_bits_err_improve": 1.0091944398163584,
    "time": 38452.97265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 10.026637176608501,
    "avg_bits_err_output": 10.026637176608501,
    "avg_bits_err_improve": 0,
    "time": 109582.42553710938,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (tan x))",
    "output_parens": 4,
    "avg_bits_err_input": 37.16310756923978,
    "avg_bits_err_output": 37.16310756923978,
    "avg_bits_err_improve": 0,
    "time": 41603.33203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- x (sqrt x)) (* x (- (/ 1.0 (sqrt (+ x 1.0))) 1.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.11088690925882,
    "avg_bits_err_output": 25.857565737980227,
    "avg_bits_err_improve": 4.253321171278593,
    "time": 38330.268798828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (log1p (expm1 (+ (cos eps) -1.0))) (* (sin eps) (cos x)))",
    "output_parens": 9,
    "avg_bits_err_input": 37.574983091242494,
    "avg_bits_err_output": 0.42553078990824184,
    "avg_bits_err_improve": 37.14945230133425,
    "time": 27060.906005859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.36414428848915,
    "avg_bits_err_output": 19.22093644720189,
    "avg_bits_err_improve": 0.1432078412872606,
    "time": 32533.03759765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.865302624446377,
    "avg_bits_err_output": 14.865302624446377,
    "avg_bits_err_improve": 0,
    "time": 53392.375244140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.399025438664076,
    "avg_bits_err_output": 1.263901333936852,
    "avg_bits_err_improve": 28.135124104727225,
    "time": 27712.529052734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07928328632589335,
    "avg_bits_err_output": 0.07928328632589335,
    "avg_bits_err_improve": 0,
    "time": 41147.91064453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (+ (pow (* a b) 2.0) (* (* a (- b)) (fma (- b) a (* a b)))))",
    "output_parens": 10,
    "avg_bits_err_input": 16.35089717574628,
    "avg_bits_err_output": 0.268125,
    "avg_bits_err_improve": 16.08277217574628,
    "time": 14531.351806640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (* (/ (/ (/ angle 180.0) PI) PI) (expm1 (log1p (* PI (pow PI 2.0))))))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 20.189043207596974,
    "avg_bits_err_output": 20.22317212806807,
    "avg_bits_err_improve": -0.0341289204710975,
    "time": 68999.75122070312,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* 2.0 (* (sin (* PI (/ angle 180.0))) (* (- (pow b 2.0) (pow a 2.0)) (- (exp (log1p (cos (* PI (/ angle 180.0))))) 1.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 31.20189951601392,
    "avg_bits_err_output": 31.189286960775103,
    "avg_bits_err_improve": 0.012612555238817436,
    "time": 49943.33935546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ (/ angle 180.0) PI) (* PI PI)))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 19.956372670681894,
    "avg_bits_err_output": 19.960443054086905,
    "avg_bits_err_improve": -0.004070383405011313,
    "time": 87160.24926757812,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (+ (/ (- m (* m m)) v) -1.0) (+ (- (/ m (+ (/ (- m (* m m)) v) -1.0))) (* (/ (- m (* m m)) v) (/ m (+ (/ (- m (* m m)) v) -1.0)))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.17507928248159613,
    "avg_bits_err_output": 0.20048555786236757,
    "avg_bits_err_improve": -0.025406275380771448,
    "time": 29913.174560546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3109950042093892,
    "avg_bits_err_output": 0.30797442312357537,
    "avg_bits_err_improve": 0.0030205810858138227,
    "time": 56688.68994140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1321887218755409,
    "avg_bits_err_output": 0.1321887218755409,
    "avg_bits_err_improve": 0,
    "time": 25485.286376953125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (expm1 (log1p (* (sin phi1) (sin phi2)))) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 17.180040983176863,
    "avg_bits_err_output": 17.18977058230429,
    "avg_bits_err_improve": -0.009729599127428656,
    "time": 46245.95849609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.74936595178498,
    "avg_bits_err_output": 46.21171690407492,
    "avg_bits_err_improve": 6.537649047710062,
    "time": 27882.322265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.589142920712227,
    "avg_bits_err_output": 27.807143570895267,
    "avg_bits_err_improve": 0.7819993498169602,
    "time": 20563.208984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.01897761971098,
    "avg_bits_err_output": 39.69073079246087,
    "avg_bits_err_improve": 4.328246827250112,
    "time": 28237.407470703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96554197578415,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": 0,
    "time": 25867.28857421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (log1p (+ 1.0 (- (expm1 (fma (cos (- lambda2 lambda1)) (cos phi2) (cos phi1))) 1.0)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.8053622766329612,
    "avg_bits_err_output": 0.8237262317878125,
    "avg_bits_err_improve": -0.01836395515485123,
    "time": 39609.703369140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(- (log (exp (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 28.53750820755532,
    "avg_bits_err_output": 28.538105531340992,
    "avg_bits_err_improve": -0.0005973237856728986,
    "time": 10485.09521484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.14652874571676,
    "avg_bits_err_output": 1.2884293234384918,
    "avg_bits_err_improve": 56.858099422278265,
    "time": 14012.26904296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.07901046630942,
    "avg_bits_err_output": 0.007875,
    "avg_bits_err_improve": 58.07113546630942,
    "time": 6107.6123046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009823120312590146,
    "avg_bits_err_output": 0.009823120312590146,
    "avg_bits_err_improve": 0,
    "time": 1967.94384765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.753875,
    "avg_bits_err_output": 31.753875,
    "avg_bits_err_improve": 0,
    "time": 8375.99267578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* (log1p (log (exp (+ (/ (+ x 1.0) (- 1.0 x)) -1.0)))) 0.5)",
    "output_parens": 8,
    "avg_bits_err_input": 58.76182474844535,
    "avg_bits_err_output": 58.76432882795893,
    "avg_bits_err_improve": -0.002504079513578006,
    "time": 59323.478271484375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.03475,
    "avg_bits_err_output": 0.03475,
    "avg_bits_err_improve": 0,
    "time": 3875.1201171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12694812031259015,
    "avg_bits_err_output": 0.12694812031259015,
    "avg_bits_err_improve": 0,
    "time": 48717.797119140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (fma (* ew (cos (atan (/ (* eh (- (tan t))) ew)))) (cos t) 0.0) (* eh (* (sin t) (sin (atan (/ (* (- eh) (tan t)) ew)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.126,
    "avg_bits_err_output": 0.1245,
    "avg_bits_err_improve": 0.0015000000000000013,
    "time": 39546.384033203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 39.209571044582276,
    "avg_bits_err_output": 3.913578454997839,
    "avg_bits_err_improve": 35.295992589584436,
    "time": 48277.625244140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.451062335672834,
    "avg_bits_err_output": 14.452331340551108,
    "avg_bits_err_improve": -0.0012690048782744157,
    "time": 5728.787109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos theta) (cos phi1))))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.15682207471488516,
    "avg_bits_err_output": 0.15424884352082288,
    "avg_bits_err_improve": 0.0025732311940622754,
    "time": 42499.896728515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* a (* c (* -3.0 (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.787022170868994,
    "avg_bits_err_output": 46.270515231843994,
    "avg_bits_err_improve": 6.516506939025,
    "time": 30298.495361328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma (sqrt (fma b b (* c (* a -3.0)))) (sqrt (* (fma b b (* c (* a -3.0))) (/ 1.0 (fma b b (* c (* a -3.0)))))) (- b)) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.74547855708578,
    "avg_bits_err_output": 28.75310039353279,
    "avg_bits_err_improve": -0.007621836447011532,
    "time": 30697.59375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (- (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) 1.0))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 44.08677076960128,
    "avg_bits_err_output": 39.764877497491355,
    "avg_bits_err_improve": 4.321893272109925,
    "time": 25791.408447265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.00292884734385,
    "avg_bits_err_output": 34.00292884734385,
    "avg_bits_err_improve": 0,
    "time": 21793.610107421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (- (* (+ (cos phi1) 1.0) (sin phi2)) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.311878993256501,
    "avg_bits_err_output": 13.32673689535686,
    "avg_bits_err_improve": -0.014857902100358089,
    "time": 66310.96997070312,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(+ (- (/ x (+ 1.0 x)) (* (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))) (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (+ (fma (- (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0)) (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))) (* (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))) (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0))) (fma (- (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0)) (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))) (* (/ 1.0 (/ (+ 1.0 x) (+ -1.0 x))) (pow (/ (+ 1.0 x) (+ -1.0 x)) 2.0)))))",
    "output_parens": 52,
    "avg_bits_err_input": 29.710162012746203,
    "avg_bits_err_output": 29.72483358426078,
    "avg_bits_err_improve": -0.014671571514575987,
    "time": 66190.38891601562,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.009375,
    "avg_bits_err_output": 0.009375,
    "avg_bits_err_improve": 0,
    "time": 8283.816162109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(if (<= x -8e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0))) (if (<= x 3.8e+154) (- (- (* (/ (/ 1.0 (+ 1.0 x)) (+ 1.0 x)) (+ x 2.0)) (/ 1.0 (+ x -1.0))) (/ (/ 1.0 (+ 1.0 x)) (+ 1.0 x))) (- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))))",
    "output_parens": 28,
    "avg_bits_err_input": 14.884995437822148,
    "avg_bits_err_output": 13.095594867029137,
    "avg_bits_err_improve": 1.7894005707930116,
    "time": 26441.8134765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.4e-292) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (* 2.0 (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (- (pow B 2.0) (* A (* C 4.0)))))) (sqrt F))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.0230816104221,
    "avg_bits_err_output": 47.42822507010464,
    "avg_bits_err_improve": 4.5948565403174655,
    "time": 51284.38134765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.12373037427018,
    "avg_bits_err_output": 29.12373037427018,
    "avg_bits_err_improve": 0,
    "time": 46044.255615234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -3.5e-226) (/ (- (* (sqrt (- F)) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (- (* A (* C 8.0)) (* 2.0 (pow B 2.0))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 51.50106194647084,
    "avg_bits_err_output": 46.52567229129837,
    "avg_bits_err_improve": 4.975389655172471,
    "time": 49811.613037109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.469744216549094,
    "avg_bits_err_output": 15.469744216549094,
    "avg_bits_err_improve": 0,
    "time": 49977.091796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1.5e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-294) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 1e+146) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (- (+ (- 1.0 g) (sqrt (- (* g g) (* h h)))) 1.0))) (* (cbrt (* (fma (sqrt (- g h)) (sqrt (+ g h)) g) (/ (/ 1.0 (+ a a)) (/ 1.0 (+ a a))))) (cbrt (- (/ 1.0 (+ a a)))))) (+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (* (sqrt (- g h)) (sqrt (+ g h)))))) (* (cbrt (* (fma (sqrt (- g h)) (sqrt (+ g h)) g) (/ (/ 1.0 (+ a a)) (/ 1.0 (+ a a))))) (cbrt (- (/ 1.0 (+ a a)))))))))",
    "output_parens": 107,
    "avg_bits_err_input": 35.493450781234436,
    "avg_bits_err_output": 11.91912978341349,
    "avg_bits_err_improve": 23.574320997820948,
    "time": 72864.01586914062,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9897246250072126,
    "avg_bits_err_output": 0.026469360937770435,
    "avg_bits_err_improve": 0.9632552640694422,
    "time": 16073.5224609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.7338443609377705,
    "avg_bits_err_output": 0.7338443609377705,
    "avg_bits_err_improve": 0,
    "time": 21218.573974609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 10.946943699076499,
    "avg_bits_err_output": 10.946943699076499,
    "avg_bits_err_improve": 0,
    "time": 19686.528076171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.45766730763229724,
    "avg_bits_err_output": 0.416375,
    "avg_bits_err_improve": 0.04129230763229724,
    "time": 13660.923583984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= x -5e+15) (log (* (+ (+ (* (hypot 1.0 x) (exp 1.0)) (- (* x (exp 1.0)) 1.0)) 1.0) (exp -1.0))) (log1p (+ x (+ (hypot 1.0 x) -1.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 53.15309295628262,
    "avg_bits_err_output": 13.918498116169848,
    "avg_bits_err_improve": 39.23459484011277,
    "time": 25631.325927734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.671864244806499,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.671864244806499,
    "time": 2210.1025390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.01525,
    "avg_bits_err_output": 0.01525,
    "avg_bits_err_improve": 0,
    "time": 6420.90478515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1267.41845703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= (* w w) 1.6e-82) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (- 0.375 (* v 0.25)) (* w (* r w)))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- (* w (* r (* r w)))) (- (* v 0.25) 0.375)) (- 1.0 v))))",
    "output_parens": 28,
    "avg_bits_err_input": 12.854716806468947,
    "avg_bits_err_output": 6.930567865719409,
    "avg_bits_err_improve": 5.924148940749538,
    "time": 31892.74560546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5202355044794914,
    "avg_bits_err_output": 0.2678833995169889,
    "avg_bits_err_improve": 0.2523521049625025,
    "time": 65172.0361328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.55169286973226,
    "avg_bits_err_output": 18.55169286973226,
    "avg_bits_err_improve": 0,
    "time": 20542.47412109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(fma x (- 0.954929658551372 (* x (* x 0.12900613773279798))) (* x (fma (* x x) -0.12900613773279798 (* x (* x 0.12900613773279798)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.23429268476294263,
    "avg_bits_err_output": 0.1697924812503606,
    "avg_bits_err_improve": 0.06450020351258204,
    "time": 31441.2080078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.00325,
    "avg_bits_err_output": 0.00325,
    "avg_bits_err_improve": 0,
    "time": 8704.24267578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (- (/ 1.0 a) (/ 1.0 b)) (* (/ 1.0 (* (- b a) (+ b a))) (/ PI 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 14.10479569368505,
    "avg_bits_err_output": 9.087878212434633,
    "avg_bits_err_improve": 5.016917481250417,
    "time": 54942.3779296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (- 1.0 (- (exp (- (fma eps x x))) (expm1 (- (* eps x) x))))) (- (exp (- (fma eps x x))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.01462423991279,
    "avg_bits_err_output": 1.2377839597935048,
    "avg_bits_err_improve": 27.776840280119288,
    "time": 37707.48486328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.02,
    "avg_bits_err_output": 0.02,
    "avg_bits_err_improve": 0,
    "time": 11034.37158203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(- (/ (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -5.0) (- (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (+ (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) -4.0)) -6.0)) 0.0)",
    "output_parens": 24,
    "avg_bits_err_input": 0.0245,
    "avg_bits_err_output": 0.02391748125036058,
    "avg_bits_err_improve": 0.0005825187496394206,
    "time": 40375.62841796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- (- (- (* (/ (+ t t) (+ t 1.0)) (- (- (/ (+ t t) (+ t 1.0))))) 0.0) 1.0) -1.0)) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.022375,
    "avg_bits_err_output": 0.020375,
    "avg_bits_err_improve": 0.0019999999999999983,
    "time": 23807.04736328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3100.707763671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3799.986083984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3601.277587890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.807484438451687,
    "avg_bits_err_output": 0.24925,
    "avg_bits_err_improve": 7.558234438451687,
    "time": 42294.354248046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.429971816061293,
    "avg_bits_err_output": 7.429971816061293,
    "avg_bits_err_improve": 0,
    "time": 27489.05615234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 16.15167030008723,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 16.13854530008723,
    "time": 13125.445068359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (pow (exp (* x x)) 10.0) (cos x)) (+ (- 1.0 (cos x)) (- (+ (cos x) (pow (cos x) 2.0)) 1.0)))",
    "output_parens": 14,
    "avg_bits_err_input": 3.509632368915222,
    "avg_bits_err_output": 3.073192079212672,
    "avg_bits_err_improve": 0.43644028970254967,
    "time": 44714.825927734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.674814088112495,
    "avg_bits_err_output": 14.674814088112495,
    "avg_bits_err_improve": 0,
    "time": 49343.405029296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.04050213454488,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.04050213454488,
    "time": 4747.7216796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.0585255882019,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.0580255882019,
    "time": 5057.67578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.301625,
    "avg_bits_err_improve": 63.698375,
    "time": 5094.240478515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t 4e-32) t)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325366599201,
    "avg_bits_err_output": 0.40269812031259017,
    "avg_bits_err_improve": 61.440555545679416,
    "time": 20992.999755859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.98620127500834,
    "avg_bits_err_output": 33.98620127500834,
    "avg_bits_err_improve": 0,
    "time": 22486.806884765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.96554197578415,
    "avg_bits_err_output": 33.96554197578415,
    "avg_bits_err_improve": 0,
    "time": 24476.48486328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2491.86669921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.34420391507517,
    "avg_bits_err_output": 0.01075,
    "avg_bits_err_improve": 40.33345391507517,
    "time": 2288.321044921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output_parens": 7,
    "avg_bits_err_input": 19.965563736638746,
    "avg_bits_err_output": 19.965563736638746,
    "avg_bits_err_improve": 0,
    "time": 3728.43994140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.687790786378916,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.687790786378916,
    "time": 6437.6787109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.036625,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.036125,
    "time": 8657.781005859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.019969360937770436,
    "avg_bits_err_output": 0.010375,
    "avg_bits_err_improve": 0.009594360937770436,
    "time": 5215.44091796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(fma x x (* x (* x x)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.014875,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.014374999999999999,
    "time": 11047.308349609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(fma x x x)",
    "output_parens": 1,
    "avg_bits_err_input": 0.00075,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0.00075,
    "time": 5680.1455078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ a c))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40486109062806497,
    "avg_bits_err_output": 0.232,
    "avg_bits_err_improve": 0.17286109062806496,
    "time": 9809.28173828125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (+ (fma (/ (- 1.0 (cos x)) (exp 1.0)) (* (- 1.0 (cos x)) (exp 2.0)) (* (exp 1.0) (* (- 1.0 (cos x)) (cos x)))) (fma (- (cos x)) (exp 1.0) (* (cos x) (exp 1.0)))) (exp -1.0))",
    "output_parens": 25,
    "avg_bits_err_input": 29.606384526306954,
    "avg_bits_err_output": 29.61572208850347,
    "avg_bits_err_improve": -0.009337562196517268,
    "time": 54554.099853515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (expm1 (log1p (sqrt (- (* x x) eps)))))",
    "output_parens": 6,
    "avg_bits_err_input": 24.73343322037492,
    "avg_bits_err_output": 24.784145648784797,
    "avg_bits_err_improve": -0.05071242840987722,
    "time": 33387.65576171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.39446080742367,
    "avg_bits_err_output": 30.394384027549407,
    "avg_bits_err_improve": 7.677987426291111e-05,
    "time": 69433.373046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007698120312590144,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.0071981203125901436,
    "time": 4696.103759765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 1e-11) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 48.210164515605314,
    "avg_bits_err_output": 11.307505590678952,
    "avg_bits_err_improve": 36.902658924926364,
    "time": 53269.6533203125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 25.946804357537932,
    "avg_bits_err_output": 25.94573123722534,
    "avg_bits_err_improve": 0.0010731203125935451,
    "time": 15880.803466796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d (- a) (fma c b (fma (- a) d (* d a)))) (+ (* c c) (* d d)))",
    "output_parens": 10,
    "avg_bits_err_input": 25.666643687069257,
    "avg_bits_err_output": 25.687017845850495,
    "avg_bits_err_improve": -0.020374158781237384,
    "time": 17311.454345703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.035875,
    "avg_bits_err_output": 0.02285396288740179,
    "avg_bits_err_improve": 0.013021037112598208,
    "time": 8229.561279296875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (* (* ux maxCos) (- -1.0 (* ux maxCos))) (- (+ (* ux maxCos) (* ux (- -1.0 (* ux maxCos)))) (- ux (* ux (- ux (* ux maxCos))))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.634844888315962,
    "avg_bits_err_output": 0.5447902659006096,
    "avg_bits_err_improve": 13.090054622415353,
    "time": 43387.874755859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (log (exp (* (+ uy uy) PI)))) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (- (+ (* ux (* (- (* ux maxCos) ux) maxCos)) (* ux maxCos)) (- ux (* ux maxCos)))))))",
    "output_parens": 21,
    "avg_bits_err_input": 13.671874358429502,
    "avg_bits_err_output": 0.3045738658255073,
    "avg_bits_err_improve": 13.367300492603995,
    "time": 53458.079833984375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* ux (- maxCos (* ux maxCos))) zi))",
    "output_parens": 34,
    "avg_bits_err_input": 0.3319351082645813,
    "avg_bits_err_output": 0.3315841448663901,
    "avg_bits_err_improve": 0.00035096339819118416,
    "time": 71109.24829101562,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 38,
    "avg_bits_err_input": 0.20653324229295936,
    "avg_bits_err_output": 0.20653324229295936,
    "avg_bits_err_improve": 0,
    "time": 32631.22998046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sin (* 6.28318530718 u2)) (* (sqrt (/ u1 (- 1.0 u1))) (* (sqrt (/ u1 (- 1.0 u1))) (/ 1.0 (sqrt (/ u1 (- 1.0 u1)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.5450989847503924,
    "avg_bits_err_output": 0.5650125034312489,
    "avg_bits_err_improve": -0.019913518680856446,
    "time": 44418.541259765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* u2 -6.28318530718) (* (* u2 -6.28318530718) (/ 1.0 (* u2 -6.28318530718))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.3222715960245229,
    "avg_bits_err_output": 0.32978972698065206,
    "avg_bits_err_improve": -0.007518130956129188,
    "time": 38738.6025390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (+ (+ -1.0 (log (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))) 1.0))",
    "output_parens": 19,
    "avg_bits_err_input": 0.3322475408065705,
    "avg_bits_err_output": 0.335185023537136,
    "avg_bits_err_improve": -0.0029374827305654883,
    "time": 36454.77734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(pow (exp -1.0) (log1p (exp (/ (- x) s))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05262998408642589,
    "avg_bits_err_output": 0.04183131255812226,
    "avg_bits_err_improve": 0.010798671528303633,
    "time": 13057.52734375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (+ (* (exp (/ (- (fabs x)) s)) (+ s s)) (* s (exp (* (/ (- (fabs x)) s) 2.0)))) s))",
    "output_parens": 19,
    "avg_bits_err_input": 0.1491181812836496,
    "avg_bits_err_output": 0.12465728366915785,
    "avg_bits_err_improve": 0.024460897614491744,
    "time": 27678.827880859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* x (* PI tau))) (* x (* PI tau))) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6652467142518929,
    "avg_bits_err_output": 0.667276720285483,
    "avg_bits_err_improve": -0.0020300060335901593,
    "time": 32615.9619140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.18097698960340125,
    "avg_bits_err_output": 0.18105312629467737,
    "avg_bits_err_improve": -7.61366912761241e-05,
    "time": 24757.39111328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.7722461908401734,
    "avg_bits_err_output": 2.7679653482653617,
    "avg_bits_err_improve": 0.004280842574811761,
    "time": 60935.02099609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* v (* (* v (/ (/ (* (sinh (/ 1.0 v)) 2.0) v) v)) v)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.4536425977964531,
    "avg_bits_err_output": 0.4709234245622246,
    "avg_bits_err_improve": -0.017280826765771473,
    "time": 49112.883056640625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (* (/ 1.0 (+ v v)) (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v))))) (log (exp (+ v v)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.0918517741805179,
    "avg_bits_err_output": 0.09402220335047103,
    "avg_bits_err_improve": -0.0021704291699531225,
    "time": 42333.1328125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* (* cosTheta (- cosTheta)) (- 1.0 (* alpha alpha))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4546062307488622,
    "avg_bits_err_output": 0.41066139512096056,
    "avg_bits_err_improve": 0.043944835627901635,
    "time": 20709.872314453125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (* (log1p (- (/ (+ u -0.25) 0.75))) 3.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.3239806661406583,
    "avg_bits_err_output": 0.5593151163981519,
    "avg_bits_err_improve": 0.7646655497425064,
    "time": 48453.75732421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.377611995813469,
    "avg_bits_err_output": 0.1995,
    "avg_bits_err_improve": 12.178111995813468,
    "time": 53947.94482421875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (* 2.0 (* s PI)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* (* PI (* s r)) 6.0)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12956170487676072,
    "avg_bits_err_output": 0.13790934066477833,
    "avg_bits_err_improve": -0.008347635788017616,
    "time": 53195.341796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(+ (* (expm1 (log1p (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output_parens": 16,
    "avg_bits_err_input": 0.926627020375334,
    "avg_bits_err_output": 0.9623513940950742,
    "avg_bits_err_improve": -0.03572437371974024,
    "time": 50592.99609375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (* (/ 1.0 (sqrt PI)) (/ (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (/ 1.0 (sqrt PI)))) (/ 1.0 PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.6796139703323612,
    "avg_bits_err_output": 0.6336055010501243,
    "avg_bits_err_improve": 0.0460084692822369,
    "time": 43624.250244140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (/ (sin (* 2.0 (* PI u2))) (sqrt (- (log1p (- u1))))) (- (log1p (- u1))))",
    "output_parens": 12,
    "avg_bits_err_input": 13.595958155964459,
    "avg_bits_err_output": 0.5887347266264839,
    "avg_bits_err_improve": 13.007223429337975,
    "time": 29107.582763671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.650115896474576,
    "avg_bits_err_output": 0.3043767817863185,
    "avg_bits_err_improve": 13.345739114688257,
    "time": 55856.845947265625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.194763032863586,
    "avg_bits_err_output": 0.20425,
    "avg_bits_err_improve": 13.990513032863586,
    "time": 31760.834228515625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.722424199082445,
    "avg_bits_err_output": 0.5037876892682575,
    "avg_bits_err_improve": 12.218636509814187,
    "time": 31704.041748046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (* PI l) -1.45e+24) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (+ (/ PI l) 1.0)) l) 0.0)))) (if (<= (* PI l) 5e-94) (- (* PI l) (* (/ 1.0 F) (* (/ 1.0 F) (tan (* PI l))))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (fma l (- (* l (+ (/ PI l) 1.0)) l) 0.0))))))",
    "output_parens": 36,
    "avg_bits_err_input": 16.24167241562882,
    "avg_bits_err_output": 9.067073567385455,
    "avg_bits_err_improve": 7.174598848243365,
    "time": 32255.140380859375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(fma x (- (/ 1.0 (tan B))) (/ 1.0 (sin B)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.20531372187554084,
    "avg_bits_err_output": 0.20241748125036055,
    "avg_bits_err_improve": 0.002896240625180291,
    "time": 35659.76123046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5)))",
    "output_parens": 13,
    "avg_bits_err_input": 13.279575600895308,
    "avg_bits_err_output": 13.279575600895308,
    "avg_bits_err_improve": 0,
    "time": 41605.850830078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (- (pow (exp (/ 1.0 (log (* (/ 1.0 (/ PI 4.0)) (+ 1.0 (log (/ (+ (pow (exp f) (/ PI 4.0)) (pow (exp f) (- (/ PI 4.0)))) (- (pow (exp f) (/ PI 4.0)) (pow (exp f) (- (/ PI 4.0))))))))))) (pow (log (* (/ 1.0 (/ PI 4.0)) (+ 1.0 (log (/ (+ (pow (exp f) (/ PI 4.0)) (pow (exp f) (- (/ PI 4.0)))) (- (pow (exp f) (/ PI 4.0)) (pow (exp f) (- (/ PI 4.0))))))))) 2.0)) (/ 1.0 (/ PI 4.0))))",
    "output_parens": 54,
    "avg_bits_err_input": 61.35206920019215,
    "avg_bits_err_output": 60.4942308641178,
    "avg_bits_err_improve": 0.8578383360743445,
    "time": 120052.16845703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t 4.4e-70) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (- (* l l) (* t (* t -2.0))))))) (/ (exp (log (* t (sqrt 2.0)))) (sqrt (exp (log (fma l (- (* (/ (+ 1.0 x) (+ -1.0 x)) l) l) (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t)))))))))",
    "output_parens": 36,
    "avg_bits_err_input": 42.8761941606873,
    "avg_bits_err_output": 37.745964388929195,
    "avg_bits_err_improve": 5.130229771758103,
    "time": 32100.28466796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.9029741489722687,
    "avg_bits_err_output": 0.21807349687986766,
    "avg_bits_err_improve": 3.6849006520924013,
    "time": 53454.798095703125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 1.0585228084366862,
    "avg_bits_err_output": 0.00775,
    "avg_bits_err_improve": 1.0507728084366863,
    "time": 12313.663330078125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (* (/ Om Omc) (+ 1.0 (/ Om Omc))) (- (+ 1.0 (/ Om Omc)) 1.0))) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output_parens": 16,
    "avg_bits_err_input": 10.236104477331978,
    "avg_bits_err_output": 10.273979068215663,
    "avg_bits_err_improve": -0.0378745908836855,
    "time": 199261.83520507812,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 5e-313) (* (sqrt (- n)) (sqrt (* (- (* (pow (/ l Om) 2.0) (* n (- U U*))) (- t (* 2.0 (/ (* l l) Om)))) (* 2.0 U)))) (if (<= (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))) 1e+305) (sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*))))) (* (sqrt (- (* n (* (pow (/ l Om) 2.0) (- U U*))) (- t (* 2.0 (/ (* l l) Om))))) (sqrt (* (* n U) -2.0)))))",
    "output_parens": 75,
    "avg_bits_err_input": 34.36355138032334,
    "avg_bits_err_output": 29.73754159971377,
    "avg_bits_err_improve": 4.626009780609568,
    "time": 39588.222900390625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+151) (/ 2.0 (* (pow (/ k t) 2.0) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (+ (/ (pow t 3.0) (* l l)) 1.0) (tan k)))))))",
    "output_parens": 42,
    "avg_bits_err_input": 47.61774772707072,
    "avg_bits_err_output": 37.80543095759412,
    "avg_bits_err_improve": 9.812316769476602,
    "time": 53949.81591796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 5e+182) (/ 2.0 (- 0.0 (* (* (* (/ (pow t 3.0) (* l l)) (- -2.0 (pow (/ k t) 2.0))) (tan k)) (sin k)))) (/ 2.0 (fma (tan k) (* (+ 2.0 (pow (/ k t) 2.0)) (- (sin (+ (- PI k) 0.0)) (* (/ (pow t 3.0) (* l l)) (- (sin k))))) (- (* (+ 2.0 (pow (/ k t) 2.0)) (* (sin k) (tan k)))))))",
    "output_parens": 53,
    "avg_bits_err_input": 32.54339100056812,
    "avg_bits_err_output": 30.82900815425561,
    "avg_bits_err_improve": 1.7143828463125104,
    "time": 42452.465087890625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (+ (* a1 a1) (* a2 a2)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5459639125209151,
    "avg_bits_err_output": 0.547152634396456,
    "avg_bits_err_improve": -0.0011887218755408657,
    "time": 50671.010009765625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (/ 1.0 (sqrt k)) (pow (* (* n (/ (* 2.0 PI) n)) n) (/ (- 1.0 k) 2.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5113231719727442,
    "avg_bits_err_output": 0.573091773100792,
    "avg_bits_err_improve": -0.06176860112804772,
    "time": 55581.258544921875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output_parens": 9,
    "avg_bits_err_input": 17.876537267042494,
    "avg_bits_err_output": 17.876537267042494,
    "avg_bits_err_improve": 0,
    "time": 35343.75244140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 15,
    "avg_bits_err_input": 15.541636401465324,
    "avg_bits_err_output": 15.541636401465324,
    "avg_bits_err_improve": 0,
    "time": 6716.639892578125,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.158271240625183,
    "avg_bits_err_output": 18.158271240625183,
    "avg_bits_err_improve": 0,
    "time": 33451.01416015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))) 5e+118) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (pow (/ (* M D) (+ d d)) 4.0)) (/ (/ h l) (pow (/ (* M D) (+ d d)) 2.0))))))))",
    "output_parens": 35,
    "avg_bits_err_input": 14.204097075735564,
    "avg_bits_err_output": 10.122481829962133,
    "avg_bits_err_improve": 4.081615245773431,
    "time": 35231.924560546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 18.97941775789509,
    "avg_bits_err_output": 18.97941775789509,
    "avg_bits_err_improve": 0,
    "time": 27958.7060546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(+ (* (/ (* d (* c0 d)) (* (* D h) (* w D))) (/ c0 (+ w w))) (* (sqrt (- (pow (/ (* d (* c0 d)) (* (* D h) (* w D))) 2.0) (* M M))) (/ c0 (+ w w))))",
    "output_parens": 23,
    "avg_bits_err_input": 59.5038495139375,
    "avg_bits_err_output": 56.39135111729242,
    "avg_bits_err_improve": 3.11249839664508,
    "time": 33750.885498046875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 5e+279) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (- (sqrt (* (/ d h) (/ d l))) (* 0.5 (fma (sqrt (/ d l)) (log (pow (exp (pow (/ (* M D) (+ d d)) 2.0)) (* (/ h l) (sqrt (/ d h))))) 0.0))))",
    "output_parens": 50,
    "avg_bits_err_input": 26.64818285572742,
    "avg_bits_err_output": 25.45385577019833,
    "avg_bits_err_improve": 1.194327085529089,
    "time": 42171.920166015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (exp -2.0) (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 15.291291794951803,
    "avg_bits_err_output": 14.832877100337871,
    "avg_bits_err_improve": 0.45841469461393203,
    "time": 99363.90747070312,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9862383613244511,
    "avg_bits_err_output": 0.012030842574811643,
    "avg_bits_err_improve": 0.9742075187496394,
    "time": 13395.4287109375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* v (* v 5.0))) (* t (* (sqrt (- 2.0 (* 6.0 (* v v)))) (* PI (- 1.0 (* v v))))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4528530939519554,
    "avg_bits_err_output": 0.3807936794987178,
    "avg_bits_err_improve": 0.0720594144532376,
    "time": 23652.5966796875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (sqrt (- 1.0 (* v (* v 3.0)))) (* (/ (sqrt 2.0) 4.0) (- 1.0 (* v v))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011292481250360578,
    "avg_bits_err_output": 0.011009601949631355,
    "avg_bits_err_improve": 0.00028287930072922254,
    "time": 11965.0263671875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.524612494388833,
    "avg_bits_err_output": 0.524612494388833,
    "avg_bits_err_improve": 0,
    "time": 10228.210693359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 2.17998571354413,
    "avg_bits_err_output": 2.14698571354413,
    "avg_bits_err_improve": 0.03299999999999992,
    "time": 17001.951416015625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (+ 1.0 (- (/ (+ mu (+ EDonor (- Vef Ec))) KbT) 1.0))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.018873997935444798,
    "avg_bits_err_output": 0.01907211824803494,
    "avg_bits_err_improve": -0.00019812031259014082,
    "time": 7773.960693359375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.17492481250360573,
    "avg_bits_err_output": 0.17492481250360573,
    "avg_bits_err_improve": 0,
    "time": 21796.052490234375,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1863240526179966,
    "avg_bits_err_output": 0.1863240526179966,
    "avg_bits_err_improve": 0,
    "time": 33273.703369140625,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (* (+ (fma a (* b (* a b)) (pow b 4.0)) (* a (* (fma b b (* a a)) a))) 1.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.1862157017554753,
    "avg_bits_err_output": 0.07774736350301956,
    "avg_bits_err_improve": 0.10846833825245575,
    "time": 25541.93310546875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.55708596115098,
    "avg_bits_err_output": 13.55708596115098,
    "avg_bits_err_improve": 0,
    "time": 14235.684326171875,
    "seed": 27,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 41.036489005031974,
    "avg_bits_err_output": 0.049,
    "avg_bits_err_improve": 40.987489005031975,
    "time": 6673.532470703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (- (fma (sin x) (/ 1.0 (sin x)) -1.0)) (sin x))) (- (+ (+ x 1.0) -1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.3597885931389,
    "avg_bits_err_output": 29.716077007469334,
    "avg_bits_err_improve": 1.6437115856695677,
    "time": 37487.77197265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- b_2)) (* a (* c (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 33.896260775808834,
    "avg_bits_err_output": 31.937731742363646,
    "avg_bits_err_improve": 1.9585290334451884,
    "time": 27699.618408203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (fma b_2 b_2 (* a (- c))))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.34583601879705,
    "avg_bits_err_output": 34.343482756551005,
    "avg_bits_err_improve": 0.0023532622460464836,
    "time": 19069.33740234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(expm1 (expm1 (log1p (log1p (/ (- 1.0 (cos x)) (* x x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 32.197380032654614,
    "avg_bits_err_output": 32.197771601830915,
    "avg_bits_err_improve": -0.0003915691763012319,
    "time": 20245.74658203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(- (exp (* (/ 1.0 n) (log1p x))) (pow x (/ 1.0 n)))",
    "output_parens": 7,
    "avg_bits_err_input": 32.265012022629655,
    "avg_bits_err_output": 31.996573021578328,
    "avg_bits_err_improve": 0.2684390010513269,
    "time": 65476.269775390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.181923357574714,
    "avg_bits_err_output": 0.033375,
    "avg_bits_err_improve": 29.148548357574715,
    "time": 5159.47705078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(- (+ (+ 1.0 (fma (/ (/ 1.0 (+ 1.0 x)) (+ 1.0 x)) (+ x 2.0) (- (/ 1.0 x)))) -1.0) (/ (/ 1.0 (+ x 1.0)) (+ x 1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 14.227152949135515,
    "avg_bits_err_output": 0.49944796486685283,
    "avg_bits_err_improve": 13.727704984268662,
    "time": 37290.38037109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (fma (cos eps) (cos x) (- (cos x))) (* (sin x) (sin eps)))",
    "output_parens": 9,
    "avg_bits_err_input": 39.48883795789857,
    "avg_bits_err_output": 6.26241751810623,
    "avg_bits_err_improve": 33.226420439792335,
    "time": 29946.814697265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ (+ (- -1.0 (cbrt x)) (cbrt (+ x 1.0))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 29.434190690407554,
    "avg_bits_err_output": 29.131100457731332,
    "avg_bits_err_improve": 0.30309023267622237,
    "time": 37290.090576171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (exp (log1p (- (cos x)))) (sin x))",
    "output_parens": 6,
    "avg_bits_err_input": 29.684109682184822,
    "avg_bits_err_output": 29.692204051535985,
    "avg_bits_err_improve": -0.008094369351162811,
    "time": 34061.891845703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.82758938682075,
    "avg_bits_err_output": 34.01755922067204,
    "avg_bits_err_improve": -0.1899698338512934,
    "time": 23832.958740234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* b b) (* a (* c -4.0))))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.980636546105906,
    "avg_bits_err_output": 33.99176960620369,
    "avg_bits_err_improve": -0.011133060097783698,
    "time": 23671.7275390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.26344024916715,
    "avg_bits_err_output": 0.023469360937770436,
    "avg_bits_err_improve": 61.23997088822938,
    "time": 21065.734619140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00405331366263,
    "avg_bits_err_output": 0.08044702155261137,
    "avg_bits_err_improve": 62.92360629211002,
    "time": 49881.201171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(* (log (* (exp 1.0) (* (pow (/ (- 1.0 eps) (+ 1.0 eps)) (exp 1.0)) (exp -1.0)))) (exp -1.0))",
    "output_parens": 12,
    "avg_bits_err_input": 58.70969124861712,
    "avg_bits_err_output": 58.7130023856329,
    "avg_bits_err_improve": -0.0033111370157783426,
    "time": 105886.38647460938,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(- (/ 1.0 x) (- (+ 1.0 (/ 1.0 (tan x))) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 59.914072478982206,
    "avg_bits_err_output": 59.912024844575065,
    "avg_bits_err_improve": 0.0020476344071411745,
    "time": 151559.9873046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= a -2.9e-141) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b)))) (/ (* eps (+ (* eps (/ (pow (exp (+ a b)) eps) eps)) -1.0)) (- (- (exp (* eps (+ a b))) (exp (* eps b))) (expm1 (* eps a)))))",
    "output_parens": 29,
    "avg_bits_err_input": 60.20264697536054,
    "avg_bits_err_output": 41.731353060373,
    "avg_bits_err_improve": 18.471293914987534,
    "time": 49833.495849609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (/ 1.0 (expm1 x)) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 41.35365944160877,
    "avg_bits_err_output": 0.13787883899180423,
    "avg_bits_err_improve": 41.21578060261697,
    "time": 19358.8544921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.60070967651047,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.60045967651047,
    "time": 3777.7880859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.59846497119116,
    "avg_bits_err_output": 0.015469822378330845,
    "avg_bits_err_improve": 29.582995148812827,
    "time": 4362.50537109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(exp (log (+ (expm1 (- x)) (expm1 x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.00743125467056,
    "avg_bits_err_output": 29.105719370286934,
    "avg_bits_err_improve": 0.9017118843836265,
    "time": 23945.421142578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (+ (/ 1.0 (+ 1.0 x)) (- (/ 1.0 (+ -1.0 x)) (/ 2.0 x))) (* (/ 2.0 x) (* (+ 1.0 (* (/ 2.0 x) (/ -1.0 (/ 2.0 x)))) (* (/ 1.0 (/ 2.0 x)) (+ (+ (/ 2.0 x) 1.0) -1.0)))))",
    "output_parens": 22,
    "avg_bits_err_input": 9.152640581308404,
    "avg_bits_err_output": 9.198160074606182,
    "avg_bits_err_improve": -0.04551949329777827,
    "time": 60530.951904296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan x) (- (* (tan x) 4.0) (+ (tan (+ x eps)) (* (tan x) 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 36.78331177612614,
    "avg_bits_err_output": 36.91227748858442,
    "avg_bits_err_improve": -0.1289657124582817,
    "time": 39550.3369140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- (* x (/ 1.0 (sqrt (+ x 1.0)))) x) (- x (sqrt x))))",
    "output_parens": 12,
    "avg_bits_err_input": 29.579155592790897,
    "avg_bits_err_output": 25.358429747583525,
    "avg_bits_err_improve": 4.220725845207372,
    "time": 53657.103271484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.933256363557675,
    "avg_bits_err_output": 0.37604020934650845,
    "avg_bits_err_improve": 36.55721615421117,
    "time": 30879.168701171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.311396114594427,
    "avg_bits_err_output": 19.167326348770064,
    "avg_bits_err_improve": 0.14406976582436215,
    "time": 28846.4091796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(+ (+ (atan (+ 1.0 N)) (log (exp (- -1.0 (atan N))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 15.176901341954409,
    "avg_bits_err_output": 15.183303206702638,
    "avg_bits_err_improve": -0.006401864748228903,
    "time": 34917.8046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.6802993283027,
    "avg_bits_err_output": 1.4740945429348011,
    "avg_bits_err_improve": 28.2062047853679,
    "time": 30366.541259765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(fma (- 1.0 m) (/ (- m (* m m)) v) (+ (+ m -1.0) (fma (- m) (/ (- m (* m m)) v) (* m (/ (- m (* m m)) v)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.07752953698335613,
    "avg_bits_err_output": 0.09030693977754242,
    "avg_bits_err_improve": -0.012777402794186293,
    "time": 22711.42578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.036826129186863,
    "avg_bits_err_output": 0.3162103390679988,
    "avg_bits_err_improve": 15.720615790118865,
    "time": 12659.353759765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (/ (+ (cos (* PI (/ angle 180.0))) (cos (- (* PI (/ angle 180.0)) (* PI 2.0)))) 2.0)) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.55777104414763,
    "avg_bits_err_output": 20.558028195501105,
    "avg_bits_err_improve": -0.0002571513534768144,
    "time": 55917.224609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.946381846740348,
    "avg_bits_err_output": 30.946381846740348,
    "avg_bits_err_improve": 0,
    "time": 43069.158447265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (- (* PI (+ (/ angle 180.0) 1.0)) PI))) 2.0))",
    "output_parens": 13,
    "avg_bits_err_input": 21.097963081477836,
    "avg_bits_err_output": 21.09893172276812,
    "avg_bits_err_improve": -0.0009686412902851771,
    "time": 63449.06640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (* m (/ (- m (* m m)) v)) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1742127584773497,
    "avg_bits_err_output": 0.16981367784260687,
    "avg_bits_err_improve": 0.004399080634742841,
    "time": 24337.71923828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (* (tan x) (tan x))) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.31606680393017456,
    "avg_bits_err_output": 0.31676492424276464,
    "avg_bits_err_improve": -0.0006981203125900892,
    "time": 53308.677978515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.1368962406251803,
    "avg_bits_err_output": 0.1368962406251803,
    "avg_bits_err_improve": 0,
    "time": 52951.670654296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (cos phi2) (* (cos phi1) (cos (- lambda1 lambda2))) (log1p (expm1 (* (sin phi1) (sin phi2)))))) R)",
    "output_parens": 13,
    "avg_bits_err_input": 17.16051448746713,
    "avg_bits_err_output": 17.162317540135046,
    "avg_bits_err_improve": -0.0018030526679169157,
    "time": 41849.653564453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (* a (* c -4.0)) (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) (* (+ (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) -1.0) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.55899760197495,
    "avg_bits_err_output": 46.11669465518176,
    "avg_bits_err_improve": 6.442302946793191,
    "time": 34204.180908203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (- (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* b b)) b) 1.0 (* -4.0 (* a (* c (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))))) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.791949948158187,
    "avg_bits_err_output": 28.020694546044428,
    "avg_bits_err_improve": 0.7712554021137592,
    "time": 24717.302734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (* b (/ (/ -1.0 b) b)) (* b b) (sqrt (fma c (* a -4.0) (* b b)))) (* a 2.0))",
    "output_parens": 11,
    "avg_bits_err_input": 43.909366179606586,
    "avg_bits_err_output": 43.0326387746975,
    "avg_bits_err_improve": 0.876727404909083,
    "time": 29655.929931640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.83231652137298,
    "avg_bits_err_output": 34.01755922067204,
    "avg_bits_err_improve": -0.18524269929906012,
    "time": 26817.90185546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (- (+ (cos (- lambda1 lambda2)) 1.0) 1.0)))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.8195144067283671,
    "avg_bits_err_output": 0.8333462432578008,
    "avg_bits_err_improve": -0.01383183652943376,
    "time": 35493.320068359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.38406440195118,
    "avg_bits_err_output": 29.385017427317074,
    "avg_bits_err_improve": -0.0009530253658951438,
    "time": 8767.615478515625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.214160224743246,
    "avg_bits_err_output": 1.2650118421881311,
    "avg_bits_err_improve": 56.949148382555116,
    "time": 16624.23681640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 58.073115069838195,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 58.06574006983819,
    "time": 23018.890380859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(log (exp (/ 2.0 (+ (exp x) (exp (- x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.008865601562950725,
    "avg_bits_err_output": 0.18029888190507645,
    "avg_bits_err_improve": -0.17143328034212574,
    "time": 3442.74267578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output_parens": 5,
    "avg_bits_err_input": 31.777,
    "avg_bits_err_output": 31.777,
    "avg_bits_err_improve": 0,
    "time": 5968.5732421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (log (expm1 (log1p (/ (+ 1.0 x) (- 1.0 x))))))",
    "output_parens": 7,
    "avg_bits_err_input": 58.70562520356331,
    "avg_bits_err_output": 58.72174547529234,
    "avg_bits_err_improve": -0.016120271729029412,
    "time": 105989.62744140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.04394812031259015,
    "avg_bits_err_output": 0.04394812031259015,
    "avg_bits_err_improve": 0,
    "time": 3853.615234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (- (+ (cos (atan (/ (/ eh ew) (tan t)))) 1.0) 1.0)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.127375,
    "avg_bits_err_output": 0.1286674812503606,
    "avg_bits_err_improve": -0.0012924812503606053,
    "time": 45142.6162109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13125,
    "avg_bits_err_output": 0.13125,
    "avg_bits_err_improve": 0,
    "time": 30306.309326171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.1486844613934,
    "avg_bits_err_output": 3.7822560962169676,
    "avg_bits_err_improve": 34.36642836517643,
    "time": 44341.307861328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 14.65675921527103,
    "avg_bits_err_output": 14.65675921527103,
    "avg_bits_err_improve": 0,
    "time": 5939.94580078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (+ (fma (- (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta))))))) (sin phi1) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (sin delta) (* (cos phi1) (cos theta)))))))) (fma (sin phi1) (- (sin (asin (fma (cos delta) (sin phi1) (* (cos theta) (* (sin delta) (cos phi1))))))) (cos delta)))))",
    "output_parens": 47,
    "avg_bits_err_input": 0.15562405006909605,
    "avg_bits_err_output": 0.14473604369564452,
    "avg_bits_err_improve": 0.010888006373451525,
    "time": 44134.13671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma a (* c -3.0) (* b b)))) -1.0)))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 20,
    "avg_bits_err_input": 52.56642732981351,
    "avg_bits_err_output": 46.14746744253907,
    "avg_bits_err_improve": 6.41895988727444,
    "time": 29239.793212890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 28.92385788802242,
    "avg_bits_err_output": 28.86027812753745,
    "avg_bits_err_improve": 0.06357976048497349,
    "time": 28390.5400390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (fma -3.0 (* a (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))) 0.0)) (* b (+ -1.0 (* b (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))))) (* 3.0 a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.97902241094706,
    "avg_bits_err_output": 39.65168198422259,
    "avg_bits_err_improve": 4.327340426724469,
    "time": 50480.5380859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (+ (* c (* a -3.0)) (* b b))) b) (* 3.0 a))",
    "output_parens": 8,
    "avg_bits_err_input": 33.856203313246255,
    "avg_bits_err_output": 33.856203313246255,
    "avg_bits_err_improve": 0,
    "time": 22336.81396484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.010364323226927,
    "avg_bits_err_output": 13.010364323226927,
    "avg_bits_err_improve": 0,
    "time": 68839.20703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.967350305388614,
    "avg_bits_err_output": 29.967350305388614,
    "avg_bits_err_improve": 0,
    "time": 188621.90356445312,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(log1p (expm1 (+ (/ 1.0 (+ -1.0 x)) (/ x (+ 1.0 x)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.010625,
    "avg_bits_err_output": 0.012542481250360577,
    "avg_bits_err_improve": -0.0019174812503605764,
    "time": 5756.183837890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ 1.0 x)) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (* (- (+ (+ (* (/ 1.0 (+ -1.0 x)) (+ 1.0 (/ -1.0 (/ 1.0 (+ -1.0 x))))) 2.0) -1.0) (/ 1.0 (+ -1.0 x))) (* (/ 1.0 (+ -1.0 x)) (/ 1.0 (/ 1.0 (+ -1.0 x)))))))",
    "output_parens": 28,
    "avg_bits_err_input": 14.035714261268229,
    "avg_bits_err_output": 12.24419388025228,
    "avg_bits_err_improve": 1.7915203810159497,
    "time": 36076.37255859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -3.3e-290) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))) (+ A C))) (sqrt (* (* (- (pow B 2.0) (* A (* C 4.0))) F) -2.0)))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 49,
    "avg_bits_err_input": 51.828736731426396,
    "avg_bits_err_output": 47.03328369775309,
    "avg_bits_err_improve": 4.795453033673304,
    "time": 44490.614501953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 29.104482211257125,
    "avg_bits_err_output": 29.104482211257125,
    "avg_bits_err_improve": 0,
    "time": 57260.908935546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F 1.25e-257) (/ (- (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (* 2.0 (+ (fma (- (* A (* C 4.0))) F (* C (* 4.0 (* A F)))) (* (- (pow B 2.0) (* A (* C 4.0))) F)))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (* (sqrt (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* (* 4.0 A) C))))",
    "output_parens": 55,
    "avg_bits_err_input": 52.28626989007919,
    "avg_bits_err_output": 47.9603132500544,
    "avg_bits_err_improve": 4.325956640024792,
    "time": 52004.079833984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.23335130055074,
    "avg_bits_err_output": 15.23335130055074,
    "avg_bits_err_improve": 0,
    "time": 42945.344482421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -2e+159) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (pow (- (+ g h)) 0.5) (pow (- h g) 0.5)))) (cbrt (- (* (sqrt (- h g)) (sqrt (- (+ g h)))) g)))) (if (<= g -1e-147) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (- (sqrt (* (- g h) (* (+ g h) (* (+ g h) (/ (/ (- g h) (- g h)) (+ g h)))))) g)))) (if (<= g -1e-289) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- h g)) (sqrt (- (+ g h)))) g)))) (if (<= g 1e+151) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))))",
    "output_parens": 119,
    "avg_bits_err_input": 35.849081053277125,
    "avg_bits_err_output": 10.655749236778771,
    "avg_bits_err_improve": 25.193331816498354,
    "time": 59040.26904296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (/ (+ (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))) (cos (- (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0)) (* 2.0 PI)))) 2.0))",
    "output_parens": 21,
    "avg_bits_err_input": 0.9904133468827534,
    "avg_bits_err_output": 0.031023887888844113,
    "avg_bits_err_improve": 0.9593894589939093,
    "time": 17078.28076171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (- (+ (exp a) (+ (exp b) 1.0)) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5334749102026902,
    "avg_bits_err_output": 0.5767836551277554,
    "avg_bits_err_improve": -0.0433087449250652,
    "time": 9217.120361328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.45150533875889,
    "avg_bits_err_output": 11.45150533875889,
    "avg_bits_err_improve": 0,
    "time": 13697.764404296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(fma y (- x) (log1p (exp x)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4214587964875865,
    "avg_bits_err_output": 0.361125,
    "avg_bits_err_improve": 0.06033379648758652,
    "time": 10434.64599609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.001) (log (- (* x (+ (* x (/ 1.0 (hypot 1.0 x))) 1.0)) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 2.0) (log1p (+ x (expm1 (* (log1p (* x x)) 0.5)))) (log (- (* x (+ (* x (/ 1.0 (hypot 1.0 x))) 1.0)) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 38,
    "avg_bits_err_input": 52.89417892955714,
    "avg_bits_err_output": 11.80000032823452,
    "avg_bits_err_improve": 41.094178601322625,
    "time": 33679.03564453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.721221891303513,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.721221891303513,
    "time": 2408.499755859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.013875,
    "avg_bits_err_output": 0.013875,
    "avg_bits_err_improve": 0,
    "time": 13163.648193359375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1284.46484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= r -1e-37) (+ -1.5 (- (/ 2.0 (* r r)) (/ (* (- 0.375 (* v 0.25)) (* r (* w (* r w)))) (- 1.0 v)))) (if (<= r 1e-37) (- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* w (* (* w r) (* w (/ r w))))) (- 1.0 v))) 4.5) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (- (* (* 0.375 (* r w)) w) (* w (* v (* (* r w) 0.25))))) (- 1.0 v)))))",
    "output_parens": 47,
    "avg_bits_err_input": 12.709489423258463,
    "avg_bits_err_output": 6.826278957120181,
    "avg_bits_err_improve": 5.883210466138282,
    "time": 32946.3291015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (* x1 4.0) (+ -6.0 (* 2.0 (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)))))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5159012060702414,
    "avg_bits_err_output": 0.26544755718238777,
    "avg_bits_err_improve": 0.2504536488878536,
    "time": 77984.71240234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 18.295043589852305,
    "avg_bits_err_output": 18.295043589852305,
    "avg_bits_err_improve": 0,
    "time": 20931.59033203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- (* 0.954929658551372 x) (- (* 0.12900613773279798 (* x (+ (* x x) 1.0))) (* x 0.12900613773279798)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.23467251746548876,
    "avg_bits_err_output": 0.23708496250072114,
    "avg_bits_err_improve": -0.0024124450352323856,
    "time": 20897.56298828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003875,
    "avg_bits_err_output": 0.003875,
    "avg_bits_err_improve": 0,
    "time": 3504.197021484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.138060384022722,
    "avg_bits_err_output": 9.511385948086357,
    "avg_bits_err_improve": 4.626674435936366,
    "time": 45457.15234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (+ (exp (- (+ (- -1.0 x) 1.0) (* x eps))) (* (/ 1.0 eps) (- (exp (- (* eps x) x)) (exp (* x (- -1.0 eps)))))) (exp (- (* x eps) x))) 2.0)",
    "output_parens": 20,
    "avg_bits_err_input": 29.543531437114826,
    "avg_bits_err_output": 1.0338885039276893,
    "avg_bits_err_improve": 28.509642933187138,
    "time": 37772.84375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.029,
    "avg_bits_err_output": 0.029,
    "avg_bits_err_improve": 0,
    "time": 12831.64697265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.032875,
    "avg_bits_err_output": 0.03075,
    "avg_bits_err_improve": 0.002125000000000002,
    "time": 26373.657958984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.048,
    "avg_bits_err_output": 0.048,
    "avg_bits_err_improve": 0,
    "time": 55112.466064453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3489.919189453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 2592.67236328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3664.2646484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.840824799560117,
    "avg_bits_err_output": 0.255375,
    "avg_bits_err_improve": 7.585449799560117,
    "time": 63784.268310546875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.3247496513254875,
    "avg_bits_err_output": 7.3247496513254875,
    "avg_bits_err_improve": 0,
    "time": 28598.13916015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 15.708367810745404,
    "avg_bits_err_output": 0.012625,
    "avg_bits_err_improve": 15.695742810745404,
    "time": 11514.76904296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(- (* (* (pow (exp (* x x)) 10.0) (* -1.0 (* (pow (exp (* x x)) 10.0) (/ -1.0 (pow (exp (* x x)) 10.0))))) (+ (cos x) 1.0)) (pow (exp (* x x)) 10.0))",
    "output_parens": 20,
    "avg_bits_err_input": 3.541094055679177,
    "avg_bits_err_output": 3.024206532521525,
    "avg_bits_err_improve": 0.516887523157652,
    "time": 45711.588134765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(log1p (expm1 (/ x (fma x x 1.0))))",
    "output_parens": 4,
    "avg_bits_err_input": 14.28559916519377,
    "avg_bits_err_output": 14.28559916519377,
    "avg_bits_err_improve": 0,
    "time": 50695.019775390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.92305890107985,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.92305890107985,
    "time": 4795.33740234375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.353893905130626,
    "avg_bits_err_output": 0.000125,
    "avg_bits_err_improve": 39.35376890513063,
    "time": 5077.52783203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.300125,
    "avg_bits_err_improve": 63.699875,
    "time": 4432.924072265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* t (* (* t 2e-16) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.843250060791135,
    "avg_bits_err_output": 0.3987761281273439,
    "avg_bits_err_improve": 61.44447393266379,
    "time": 18730.79052734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (* b b) (* a (* c -4.0))))) (+ a a))",
    "output_parens": 9,
    "avg_bits_err_input": 33.980636546105906,
    "avg_bits_err_output": 33.99176960620369,
    "avg_bits_err_improve": -0.011133060097783698,
    "time": 26405.776123046875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma b (* b (/ -1.0 b)) (sqrt (fma b b (* a (* c -4.0))))) (* a 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 33.83231652137298,
    "avg_bits_err_output": 34.01755922067204,
    "avg_bits_err_improve": -0.18524269929906012,
    "time": 26717.357177734375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2382.4580078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.83810762505364,
    "avg_bits_err_output": 0.013125,
    "avg_bits_err_improve": 39.824982625053636,
    "time": 14105.7587890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(log1p (expm1 (/ (- (* x x) (* y y)) (fma x x (* y y)))))",
    "output_parens": 8,
    "avg_bits_err_input": 20.041416061583668,
    "avg_bits_err_output": 20.045817541936557,
    "avg_bits_err_improve": -0.004401480352889564,
    "time": 17600.199951171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.661189081637689,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.661189081637689,
    "time": 4788.21923828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.039375,
    "time": 8515.904296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.022490601562950727,
    "avg_bits_err_output": 0.01225,
    "avg_bits_err_improve": 0.010240601562950726,
    "time": 4349.422607421875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.0135,
    "avg_bits_err_output": 0.0135,
    "avg_bits_err_improve": 0,
    "time": 5057.356689453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.000875,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0,
    "time": 1471.228271484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ e (+ d (+ b (+ a c))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.39465601562950725,
    "avg_bits_err_output": 0.23475,
    "avg_bits_err_improve": 0.15990601562950726,
    "time": 11774.34814453125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(exp (log (log (exp (- 1.0 (cos x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.292060223209155,
    "avg_bits_err_output": 30.328515160492344,
    "avg_bits_err_improve": -0.036454937283188826,
    "time": 11654.433349609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(- x (sqrt (- (* x (* (* x (/ (/ x x) x)) x)) eps)))",
    "output_parens": 8,
    "avg_bits_err_input": 25.038366505204042,
    "avg_bits_err_output": 25.066794977422116,
    "avg_bits_err_improve": -0.02842847221807432,
    "time": 22868.069091796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(+ 1.0 (- (/ (- x (sin x)) (tan x)) 1.0))",
    "output_parens": 6,
    "avg_bits_err_input": 30.486938587298585,
    "avg_bits_err_output": 30.489105023906134,
    "avg_bits_err_improve": -0.002166436607549116,
    "time": 47122.743896484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0065,
    "avg_bits_err_output": 0.001375,
    "avg_bits_err_improve": 0.005124999999999999,
    "time": 2967.801513671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0001) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.609822427305765,
    "avg_bits_err_output": 10.485268662927853,
    "avg_bits_err_improve": 37.124553764377914,
    "time": 43508.879150390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma c a (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.369552687193668,
    "avg_bits_err_output": 26.369354566881075,
    "avg_bits_err_improve": 0.00019812031259291984,
    "time": 33328.0322265625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (fma d (- a) (* b c)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.351501031704768,
    "avg_bits_err_output": 26.350677911392175,
    "avg_bits_err_improve": 0.0008231203125923514,
    "time": 43782.342529296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.03275,
    "avg_bits_err_output": 0.019990697420484902,
    "avg_bits_err_improve": 0.0127593025795151,
    "time": 9193.407958984375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (+ (fma ux (* ux (/ (- (fma ux maxCos 1.0) ux) ux)) 0.0) (- (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 18,
    "avg_bits_err_input": 13.64969994492842,
    "avg_bits_err_output": 0.5488487385501041,
    "avg_bits_err_improve": 13.100851206378316,
    "time": 39114.948974609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (* ux (* ux maxCos)) (- (* ux ux) (* (- ux (* ux maxCos)) (+ (* ux maxCos) 2.0))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.686038579350132,
    "avg_bits_err_output": 0.3130216677663801,
    "avg_bits_err_improve": 13.373016911583752,
    "time": 40224.46044921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(+ (fma (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (pow (* ux (* (- 1.0 ux) maxCos)) 2.0))) (* yi (* (sin (* 2.0 (* uy PI))) (* yi (/ 1.0 yi)))))) (* (* ux (* (- 1.0 ux) maxCos)) zi))",
    "output_parens": 33,
    "avg_bits_err_input": 0.34590803930447744,
    "avg_bits_err_output": 0.40310449839074497,
    "avg_bits_err_improve": -0.057196459086267526,
    "time": 84189.505859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (pow (- (+ (cos (atan (* (/ alphay alphax) (tan (* PI (fma 2.0 u1 0.5)))))) 1.0) 1.0) 2.0) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 39,
    "avg_bits_err_input": 0.20441147540404264,
    "avg_bits_err_output": 0.20626228202351304,
    "avg_bits_err_improve": -0.001850806619470402,
    "time": 42734.468994140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.543769143854134,
    "avg_bits_err_output": 0.5044123237404571,
    "avg_bits_err_improve": 0.039356820113676916,
    "time": 52535.94580078125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* (* u2 -6.28318530718) (* (/ -1.0 (* u2 -6.28318530718)) (* u2 6.28318530718)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.32032849407495295,
    "avg_bits_err_output": 0.32357502233775753,
    "avg_bits_err_improve": -0.003246528262804582,
    "time": 45402.1884765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- (log (+ (/ 1.0 (fma (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u) (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))))) -1.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.33984281472053063,
    "avg_bits_err_output": 0.34069079804167246,
    "avg_bits_err_improve": -0.000847983321141832,
    "time": 48079.28662109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05787217015750099,
    "avg_bits_err_output": 0.04193869786308746,
    "avg_bits_err_improve": 0.015933472294413532,
    "time": 14538.557861328125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ (* (* s (exp (/ (- (fabs x)) s))) (+ (exp (/ (- (fabs x)) s)) 2.0)) s))",
    "output_parens": 17,
    "avg_bits_err_input": 0.13712960107210362,
    "avg_bits_err_output": 0.11622971371145537,
    "avg_bits_err_improve": 0.020899887360648253,
    "time": 24417.93505859375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (- (+ (* x PI) 1.0) 1.0)) (- (+ (* x PI) 1.0) 1.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.6680207908937882,
    "avg_bits_err_output": 0.6722477923110984,
    "avg_bits_err_improve": -0.00422700141731025,
    "time": 44528.81591796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log1p (* (- 1.0 u) (expm1 (/ -2.0 v)))) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.16185322714897074,
    "avg_bits_err_output": 0.25218380347618824,
    "avg_bits_err_improve": -0.0903305763272175,
    "time": 26455.021484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.583018703851672,
    "avg_bits_err_output": 2.580663262784846,
    "avg_bits_err_improve": 0.0023554410668262804,
    "time": 70321.50805664062,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (+ (fma (sinh (/ 1.0 v)) (+ v v) v) (+ (- 2.0 v) -2.0)))",
    "output_parens": 15,
    "avg_bits_err_input": 0.4653512624968681,
    "avg_bits_err_output": 0.47669751596365045,
    "avg_bits_err_improve": -0.011346253466782363,
    "time": 48884.079345703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(* (/ 1.0 (+ v v)) (* (fma (+ v v) (/ (+ 1.0 (+ v v)) (+ v v)) -1.0) (* (exp (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (- 0.6931 (/ 1.0 v)))) (* (/ 1.0 (+ v v)) 1.0))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.10650240332098712,
    "avg_bits_err_output": 0.10779063255544373,
    "avg_bits_err_improve": -0.0012882292344566088,
    "time": 37774.7548828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (- (exp (log1p (* (fma alpha alpha -1.0) (* cosTheta cosTheta)))) 1.0))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.4558456497706566,
    "avg_bits_err_output": 0.45707893084704554,
    "avg_bits_err_improve": -0.0012332810763889257,
    "time": 27835.629638671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(- (* s (- (+ 1.0 (* (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))) -3.0)) 1.0)))",
    "output_parens": 10,
    "avg_bits_err_input": 1.3065097947354827,
    "avg_bits_err_output": 1.3063186229643904,
    "avg_bits_err_improve": 0.0001911717710922911,
    "time": 69825.84497070312,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* s (log1p (log (exp (+ (/ 1.0 (- 1.0 (* 4.0 u))) -1.0)))))",
    "output_parens": 8,
    "avg_bits_err_input": 12.348574563720144,
    "avg_bits_err_output": 12.472131073087425,
    "avg_bits_err_improve": -0.12355650936728146,
    "time": 54408.784912109375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* r (- (* (+ (* PI 2.0) 1.0) s) s))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* r (* 6.0 (* s PI)))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.13655677100410343,
    "avg_bits_err_output": 0.1435446708376067,
    "avg_bits_err_improve": -0.006987899833503258,
    "time": 106765.98291015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (* normAngle u))) n1_i (* (sin (- normAngle (* normAngle u))) (* (/ 1.0 (sin normAngle)) n0_i)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.905243938932086,
    "avg_bits_err_output": 0.9171416615015842,
    "avg_bits_err_improve": -0.01189772256949817,
    "time": 59908.00341796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (fma (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ (+ 1.0 (/ 1.0 (sqrt PI))) (/ 1.0 (sqrt PI))) (- (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 29,
    "avg_bits_err_input": 0.6794786001993081,
    "avg_bits_err_output": 0.7462433265961308,
    "avg_bits_err_improve": -0.06676472639682274,
    "time": 77716.43188476562,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (* (sqrt (- (log1p (- u1)))) (* (sqrt (- (log1p (- u1)))) (/ 1.0 (sqrt (- (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 19,
    "avg_bits_err_input": 13.343898601823916,
    "avg_bits_err_output": 0.5564111281807227,
    "avg_bits_err_improve": 12.787487473643193,
    "time": 32670.010009765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 PI) u2)))",
    "output_parens": 8,
    "avg_bits_err_input": 13.384857568120973,
    "avg_bits_err_output": 0.30097890305987846,
    "avg_bits_err_improve": 13.083878665061095,
    "time": 56921.520263671875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.05757635386599,
    "avg_bits_err_output": 0.2135,
    "avg_bits_err_improve": 13.84407635386599,
    "time": 33443.824462890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.58468902222884,
    "avg_bits_err_output": 0.513462997297571,
    "avg_bits_err_improve": 12.071226024931269,
    "time": 22048.1416015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 5e+144) (- (* PI l) (fma (tan (* PI l)) (* (/ 1.0 (* F F)) 2.0) (* (/ 1.0 (* F F)) (- (tan (* PI l)))))) (if (<= (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l)))) 1e+179) (- (* PI l) (* (* (/ 1.0 (* F F)) (* (/ 1.0 (* F F)) (- (exp (log1p (/ 1.0 (/ 1.0 (* F F))))) 1.0))) (tan (* PI l)))) (- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))))",
    "output_parens": 56,
    "avg_bits_err_input": 16.52083657805504,
    "avg_bits_err_output": 17.068933140483537,
    "avg_bits_err_improve": -0.5480965624284977,
    "time": 53384.99951171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* x (/ 1.0 (tan B))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.21641748125036056,
    "avg_bits_err_output": 0.21641748125036056,
    "avg_bits_err_improve": 0,
    "time": 37435.062744140625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 1e+264) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 41,
    "avg_bits_err_input": 13.764258446437987,
    "avg_bits_err_output": 12.362361814119119,
    "avg_bits_err_improve": 1.4018966323188682,
    "time": 52310.34326171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.37742317936748,
    "avg_bits_err_output": 2.0014290250447515,
    "avg_bits_err_improve": 59.37599415432273,
    "time": 87385.8701171875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -3.9e-145) (/ (* (/ t (sqrt 2.0)) 2.0) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l))))) (if (<= t 1.8e-172) (/ (* (sqrt 2.0) t) (sqrt (fma (- l) l (fma (/ (+ 1.0 x) (+ -1.0 x)) (fma 2.0 (* t t) (* l l)) (* l (fma l -1.0 l)))))) (expm1 (log1p (/ (* 2.0 (/ t (sqrt 2.0))) (sqrt (fma t (* (/ (+ 1.0 x) (+ -1.0 x)) (+ t t)) (* l (fma (/ (+ 1.0 x) (+ -1.0 x)) l (- l))))))))))",
    "output_parens": 55,
    "avg_bits_err_input": 43.053375779353544,
    "avg_bits_err_output": 35.58438427396594,
    "avg_bits_err_improve": 7.468991505387606,
    "time": 36499.54150390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 3.650189929377229,
    "avg_bits_err_output": 0.2064672937539662,
    "avg_bits_err_improve": 3.443722635623263,
    "time": 37062.26806640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))))))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.918375,
    "avg_bits_err_output": 0.006625,
    "avg_bits_err_improve": 0.9117500000000001,
    "time": 11570.061767578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (* (/ Om Omc) (/ Om Omc))) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 12,
    "avg_bits_err_input": 10.159428568136615,
    "avg_bits_err_output": 10.159428568136615,
    "avg_bits_err_improve": 0,
    "time": 38063.5283203125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -2.1e-307) (* (sqrt (- n)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 U)))) (* (sqrt (+ n n)) (sqrt (* U (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*))))))))",
    "output_parens": 33,
    "avg_bits_err_input": 34.64485074348534,
    "avg_bits_err_output": 28.416892870736348,
    "avg_bits_err_improve": 6.227957872748995,
    "time": 35797.398681640625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k))))))",
    "output_parens": 16,
    "avg_bits_err_input": 47.67671050232394,
    "avg_bits_err_output": 37.94541241921847,
    "avg_bits_err_improve": 9.731298083105472,
    "time": 53329.47900390625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (/ (pow t 3.0) (* l l)) (sin k)) (* (+ (pow (/ k t) 2.0) 2.0) (tan k))))",
    "output_parens": 12,
    "avg_bits_err_input": 32.03275996639717,
    "avg_bits_err_output": 32.0164285253354,
    "avg_bits_err_improve": 0.016331441061772978,
    "time": 14618.675048828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* a2 (* (/ (cos th) (sqrt 2.0)) a2)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.5189406047119312,
    "avg_bits_err_output": 0.510992484399341,
    "avg_bits_err_improve": 0.007948120312590179,
    "time": 49982.323974609375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* PI n) (/ (- 1.0 k) 2.0)) (* (pow k -0.5) (pow 2.0 (/ (- 1.0 k) 2.0))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.49293429273022,
    "avg_bits_err_output": 0.5245689614409027,
    "avg_bits_err_improve": -0.03163466871068271,
    "time": 37555.884765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (fma (* (cos (/ K 2.0)) J) (exp l) (* (exp (- l)) (* (- J) (cos (/ K 2.0))))) (* J (fma (- (exp (- l))) (cos (/ K 2.0)) (* (cos (/ K 2.0)) (exp (- l)))))) U)",
    "output_parens": 26,
    "avg_bits_err_input": 16.864990563002465,
    "avg_bits_err_output": 16.865427986357066,
    "avg_bits_err_improve": -0.00043742335460095205,
    "time": 37820.0673828125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= (* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n)))))) 1.0) (* (cos (- (/ (- (fma K (+ n (+ m 2.0)) (- K)) K) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (fma K (* K (/ (- (* (+ (/ (/ K K) K) 1.0) (+ n m)) (+ n m)) K)) 0.0)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))))",
    "output_parens": 60,
    "avg_bits_err_input": 15.698836307057327,
    "avg_bits_err_output": 1.409282389347082,
    "avg_bits_err_improve": 14.289553917710245,
    "time": 38175.840087890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.95346936093777,
    "avg_bits_err_output": 17.95346936093777,
    "avg_bits_err_improve": 0,
    "time": 36750.6767578125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+295) (- (fma (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) w0 w0) w0) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 32,
    "avg_bits_err_input": 14.633980344312715,
    "avg_bits_err_output": 10.334092947130562,
    "avg_bits_err_improve": 4.299887397182152,
    "time": 21699.1845703125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.03711654221674,
    "avg_bits_err_output": 19.03711654221674,
    "avg_bits_err_improve": 0,
    "time": 25708.998291015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h))))))",
    "output_parens": 26,
    "avg_bits_err_input": 59.78790956957688,
    "avg_bits_err_output": 58.281968143252286,
    "avg_bits_err_improve": 1.505941426324597,
    "time": 39522.841796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (/ (* M D) (+ d d)) (* (/ (* M D) (+ d d)) (/ h l))))))",
    "output_parens": 17,
    "avg_bits_err_input": 26.30444984918681,
    "avg_bits_err_output": 24.61986971154775,
    "avg_bits_err_improve": 1.6845801376390597,
    "time": 55229.404541015625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (* (exp -2.0) (- 1.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 2.0))",
    "output_parens": 9,
    "avg_bits_err_input": 15.46220520852375,
    "avg_bits_err_output": 14.992472021227739,
    "avg_bits_err_improve": 0.4697331872960113,
    "time": 83680.51391601562,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9868443609377705,
    "avg_bits_err_output": 0.012011842188131013,
    "avg_bits_err_improve": 0.9748325187496395,
    "time": 10040.88134765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI (sqrt (- 2.0 (* v (* v 6.0))))) t) (- 1.0 (* v v))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4341304608686311,
    "avg_bits_err_output": 0.3654714017169791,
    "avg_bits_err_improve": 0.06865905915165199,
    "time": 29750.39404296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (/ (sqrt 2.0) 4.0) (* (sqrt (- 1.0 (* v (* 3.0 v)))) (- (- 2.0 (* v v)) 1.0)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.011323120312590145,
    "avg_bits_err_output": 0.013386842188131012,
    "avg_bits_err_improve": -0.0020637218755408665,
    "time": 6879.998779296875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5474621861276876,
    "avg_bits_err_output": 0.5474621861276876,
    "avg_bits_err_improve": 0,
    "time": 10094.212646484375,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 1.9828245666930557,
    "avg_bits_err_output": 1.9828245666930557,
    "avg_bits_err_improve": 0,
    "time": 8660.5341796875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.016935321751558364,
    "avg_bits_err_output": 0.016935321751558364,
    "avg_bits_err_improve": 0,
    "time": 7197.793212890625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.1862998125036057,
    "avg_bits_err_output": 0.1862998125036057,
    "avg_bits_err_improve": 0,
    "time": 17739.364501953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (+ (+ (pow (* a b) 2.0) (pow b 4.0)) (* (fma a a (* b b)) (* a a))) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 20,
    "avg_bits_err_input": 0.19424740211637467,
    "avg_bits_err_output": 0.11171187555198167,
    "avg_bits_err_improve": 0.082535526564393,
    "time": 30004.395751953125,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (+ (+ (pow (* a b) 2.0) (pow b 4.0)) (* (fma b b (* a a)) (* a a))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 19,
    "avg_bits_err_input": 0.18480271804288967,
    "avg_bits_err_output": 0.10668467272885732,
    "avg_bits_err_improve": 0.07811804531403235,
    "time": 24140.1044921875,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.23647577207128,
    "avg_bits_err_output": 13.23647577207128,
    "avg_bits_err_improve": 0,
    "time": 17453.166259765625,
    "seed": 28,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (expm1 x)))",
    "output_parens": 5,
    "avg_bits_err_input": 40.901760617157315,
    "avg_bits_err_output": 0.056625,
    "avg_bits_err_improve": 40.84513561715732,
    "time": 4224.632568359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (- x (- (+ (sin x) 1.0) 1.0)) (- (+ (+ x -2.0) 2.0) (tan x)))",
    "output_parens": 9,
    "avg_bits_err_input": 31.902755490590717,
    "avg_bits_err_output": 26.205686844818075,
    "avg_bits_err_improve": 5.697068645772642,
    "time": 21803.8349609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- (* b_2 (* (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))) b_2)) b_2) (* (* a c) (/ 1.0 (sqrt (- (* b_2 b_2) (* a c)))))) a)",
    "output_parens": 17,
    "avg_bits_err_input": 34.40584995319248,
    "avg_bits_err_output": 32.80633152233055,
    "avg_bits_err_improve": 1.5995184308619272,
    "time": 23344.914306640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (+ (* a c) (+ (- (* b_2 b_2) (* a c)) (* a (- c)))))) a)",
    "output_parens": 12,
    "avg_bits_err_input": 34.3828390476411,
    "avg_bits_err_output": 34.39166216795369,
    "avg_bits_err_improve": -0.00882312031259147,
    "time": 16850.72607421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (pow (exp (pow (log1p (- (cos x))) 2.0)) (/ 1.0 (log1p (- (cos x))))) (* x x))",
    "output_parens": 12,
    "avg_bits_err_input": 31.402821974584036,
    "avg_bits_err_output": 31.321040429144492,
    "avg_bits_err_improve": 0.08178154543954363,
    "time": 36713.490478515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 1.15e+30) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (+ (/ 1.0 n) (- 1.0 (- 1.0 (* (/ 1.0 n) (+ (log1p x) -1.0))))))) (exp (log (- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n))))))",
    "output_parens": 23,
    "avg_bits_err_input": 32.65858272605914,
    "avg_bits_err_output": 30.754630431888046,
    "avg_bits_err_improve": 1.9039522941710914,
    "time": 58524.1181640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.889323456536772,
    "avg_bits_err_output": 0.008125,
    "avg_bits_err_improve": 29.881198456536772,
    "time": 8936.19384765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -3.8e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 9e+153) (- (- (* (pow (/ 1.0 (+ 1.0 x)) 2.0) (- 1.0 (/ -1.0 (/ 1.0 (+ 1.0 x))))) (/ 1.0 x)) (pow (/ 1.0 (+ 1.0 x)) 2.0)) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x))))",
    "output_parens": 26,
    "avg_bits_err_input": 14.376828836079588,
    "avg_bits_err_output": 3.8180902054386947,
    "avg_bits_err_improve": 10.558738630640892,
    "time": 58019.834716796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(- (- (* (cos x) (cos eps)) (cos x)) (* (sin x) (sin eps)))",
    "output_parens": 9,
    "avg_bits_err_input": 39.32695016404619,
    "avg_bits_err_output": 6.423062317448831,
    "avg_bits_err_improve": 32.90388784659736,
    "time": 27128.422119140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(- (+ (* (cbrt (+ x 1.0)) (- (/ 1.0 (- -1.0 (cbrt (+ x 1.0)))))) (- (fma (- -1.0 (cbrt (+ x 1.0))) (/ (cbrt (+ x 1.0)) (- -1.0 (cbrt (+ x 1.0)))) -1.0) (cbrt x))) (/ 1.0 (- -1.0 (cbrt (+ x 1.0)))))",
    "output_parens": 26,
    "avg_bits_err_input": 30.409551823361127,
    "avg_bits_err_output": 29.96370656936573,
    "avg_bits_err_improve": 0.44584525399539743,
    "time": 49702.8798828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (log1p (exp (log (expm1 (- 1.0 (cos x)))))) (sin x))",
    "output_parens": 8,
    "avg_bits_err_input": 30.43412667195782,
    "avg_bits_err_output": 30.452181924033585,
    "avg_bits_err_improve": -0.018055252075765083,
    "time": 33769.395263671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (sqrt (fma b b (* (* a c) -4.0))) b) (+ a a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.45820643720567,
    "avg_bits_err_output": 34.457562875138535,
    "avg_bits_err_improve": 0.0006435620671325637,
    "time": 30320.515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.47193849760178,
    "avg_bits_err_output": 34.47193849760178,
    "avg_bits_err_improve": 0,
    "time": 21817.518798828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(/ (log1p (- x)) (log1p x))",
    "output_parens": 4,
    "avg_bits_err_input": 61.34023281158273,
    "avg_bits_err_output": 0.021377443751081738,
    "avg_bits_err_improve": 61.318855367831645,
    "time": 14801.86279296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.005504915345526,
    "avg_bits_err_output": 0.0898600996884355,
    "avg_bits_err_improve": 62.91564481565709,
    "time": 50134.89794921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (log1p (expm1 (/ (- 1.0 eps) (- eps -1.0)))))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 58.6068582932264,
    "avg_bits_err_output": 58.611684960114786,
    "avg_bits_err_improve": -0.004826666888384068,
    "time": 97545.18969726562,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -1.25e-146) (- (/ 1.0 (/ 1.0 (tan x))) (- (* (/ 1.0 (/ 1.0 (tan x))) (+ 1.0 (pow (/ 1.0 (tan x)) 2.0))) (/ 1.0 x))) (if (<= x 1.16e-154) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (* (/ 1.0 (/ 1.0 (tan x))) (* (/ 1.0 (/ 1.0 (tan x))) (/ 1.0 (/ 1.0 (/ 1.0 (tan x)))))) (- (* (/ 1.0 (/ 1.0 (tan x))) (+ 1.0 (pow (/ 1.0 (tan x)) 2.0))) (/ 1.0 x)))))",
    "output_parens": 45,
    "avg_bits_err_input": 59.946070332992555,
    "avg_bits_err_output": 56.74391308352441,
    "avg_bits_err_improve": 3.2021572494681436,
    "time": 59498.256591796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(if (<= eps -5e-187) (/ (* eps (expm1 (* eps (+ a b)))) (+ (* (expm1 (* eps a)) (expm1 (* eps b))) (fma (- (* (expm1 (* eps b)) (/ (/ (expm1 (* eps a)) (expm1 (* eps a))) (expm1 (* eps b))))) (expm1 (* eps b)) (* (expm1 (* eps b)) (/ (expm1 (* eps a)) (expm1 (* eps a))))))) (if (<= eps 1.05e-302) (/ (- (* eps (pow (exp (+ a b)) eps)) eps) (- (- (exp (* eps (+ a b))) (exp (* eps b))) (expm1 (* eps a)))) (/ (* eps (expm1 (* eps (+ a b)))) (* (expm1 (* eps a)) (expm1 (* eps b))))))",
    "output_parens": 63,
    "avg_bits_err_input": 60.25634483926499,
    "avg_bits_err_output": 41.43597707884442,
    "avg_bits_err_improve": 18.820367760420574,
    "time": 51062.682861328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(- (* (exp x) (+ 1.0 (/ 1.0 (expm1 x)))) (exp x))",
    "output_parens": 7,
    "avg_bits_err_input": 41.33060170075053,
    "avg_bits_err_output": 0.5255551599769501,
    "avg_bits_err_improve": 40.805046540773574,
    "time": 15453.242431640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.64451325328932,
    "avg_bits_err_output": 0.00025,
    "avg_bits_err_improve": 58.64426325328932,
    "time": 5032.00732421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.473618010929215,
    "avg_bits_err_output": 0.02225475254202879,
    "avg_bits_err_improve": 29.451363258387186,
    "time": 4441.507568359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(+ (expm1 (- x)) (expm1 x))",
    "output_parens": 4,
    "avg_bits_err_input": 29.784773665693805,
    "avg_bits_err_output": 28.81671323884879,
    "avg_bits_err_improve": 0.9680604268450139,
    "time": 36742.9873046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.6849076618687,
    "avg_bits_err_output": 9.6849076618687,
    "avg_bits_err_improve": 0,
    "time": 48371.360595703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan x) (- (* (tan x) 2.0) (tan (+ x eps))))",
    "output_parens": 7,
    "avg_bits_err_input": 37.45831012305874,
    "avg_bits_err_output": 37.46353278761286,
    "avg_bits_err_improve": -0.005222664554125345,
    "time": 45700.202392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (/ 1.0 (sqrt (+ 1.0 x))) (+ (- (* x (/ 1.0 (sqrt (+ x 1.0)))) x) (- x (sqrt x))))",
    "output_parens": 12,
    "avg_bits_err_input": 30.451153362379326,
    "avg_bits_err_output": 26.086155652456966,
    "avg_bits_err_improve": 4.36499770992236,
    "time": 45199.997802734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 36.814638662066,
    "avg_bits_err_output": 0.3881593738301317,
    "avg_bits_err_improve": 36.42647928823587,
    "time": 34559.0087890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 20.194070471701124,
    "avg_bits_err_output": 20.04933011115343,
    "avg_bits_err_improve": 0.14474036054769357,
    "time": 30370.577392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (atan (+ N 1.0)) (atan N))",
    "output_parens": 4,
    "avg_bits_err_input": 14.985983612324597,
    "avg_bits_err_output": 14.985983612324597,
    "avg_bits_err_improve": 0,
    "time": 43527.275390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.800148016001764,
    "avg_bits_err_output": 1.4198377343724662,
    "avg_bits_err_improve": 28.3803102816293,
    "time": 28951.523193359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- 1.0 (/ (* m (- 1.0 m)) v)) (* (+ m -1.0) (* (- 1.0 m) (/ 1.0 (- 1.0 m)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.07936580507553277,
    "avg_bits_err_output": 0.08848385038956526,
    "avg_bits_err_improve": -0.009118045314032486,
    "time": 28686.30322265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.681680381599026,
    "avg_bits_err_output": 0.3122834593805891,
    "avg_bits_err_improve": 16.36939692221844,
    "time": 18062.236083984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (- (* (/ angle 180.0) (+ (/ PI (/ angle 180.0)) 1.0)) (/ angle 180.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.634345486172702,
    "avg_bits_err_output": 20.79291644565615,
    "avg_bits_err_improve": -0.15857095948344835,
    "time": 68220.75244140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (- (* (pow a 2.0) (* (sin (* PI (/ angle 180.0))) -2.0)) (* (sin (* PI (/ angle 180.0))) (* (pow b 2.0) -2.0))) (cos (* PI (/ angle 180.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 31.456268841423093,
    "avg_bits_err_output": 31.432742141498473,
    "avg_bits_err_improve": 0.023526699924619976,
    "time": 59273.491943359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (fma (/ angle 180.0) (- (* (/ angle 180.0) (+ (/ PI (/ angle 180.0)) 1.0)) (/ angle 180.0)) 0.0))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 21.348467854042926,
    "avg_bits_err_output": 21.335903239057895,
    "avg_bits_err_improve": 0.012564614985031142,
    "time": 91541.03930664062,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output_parens": 5,
    "avg_bits_err_input": 0.1812550362151282,
    "avg_bits_err_output": 0.1812550362151282,
    "avg_bits_err_improve": 0,
    "time": 37014.26416015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- (fma (tan x) (tan x) -1.0)) (- (pow (tan x) 2.0) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 0.32299789178787647,
    "avg_bits_err_output": 0.31375567096001583,
    "avg_bits_err_improve": 0.009242220827860637,
    "time": 57148.02392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13271936093777043,
    "avg_bits_err_output": 0.13271936093777043,
    "avg_bits_err_improve": 0,
    "time": 29705.453857421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (log (exp (cos (- lambda1 lambda2))))))) R)",
    "output_parens": 14,
    "avg_bits_err_input": 16.845404614420108,
    "avg_bits_err_output": 16.883032542838905,
    "avg_bits_err_improve": -0.037627928418796586,
    "time": 40552.25927734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (fma (* c -4.0) (* a (/ 1.0 (sqrt (fma b b (* a (* c -4.0)))))) 0.0) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.64142193928883,
    "avg_bits_err_output": 46.23612121400279,
    "avg_bits_err_improve": 6.40530072528604,
    "time": 38584.895751953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (fma b (* b (/ 1.0 (fma c (* a -4.0) (* b b)))) (* c (* (/ 1.0 (fma c (* a -4.0) (* b b))) (* a -4.0))))) (- b)) (+ a a))",
    "output_parens": 22,
    "avg_bits_err_input": 28.61555811155753,
    "avg_bits_err_output": 28.542216362477244,
    "avg_bits_err_improve": 0.07334174908028501,
    "time": 31134.649169921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a)) -1e-21) (/ (- (pow (fma b b (* a (* c -4.0))) 0.5) b) (+ a a)) (/ (fma (sqrt (fma a (* c -4.0) (* b b))) (sqrt (- (* (+ 1.0 (/ 1.0 (fma c (* a -4.0) (* b b)))) (fma c (* a -4.0) (* b b))) (fma c (* a -4.0) (* b b)))) (- b)) (+ a a)))",
    "output_parens": 40,
    "avg_bits_err_input": 43.974908201120016,
    "avg_bits_err_output": 42.68775794199749,
    "avg_bits_err_improve": 1.2871502591225266,
    "time": 30814.10302734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (* c -4.0) (sqrt (/ 1.0 (fma c (* a -4.0) (* b b)))))) (- (* b (* b (sqrt (/ 1.0 (fma c (* a -4.0) (* b b)))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 34.46880819558325,
    "avg_bits_err_output": 32.59350495871284,
    "avg_bits_err_improve": 1.8753032368704083,
    "time": 26832.82958984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (* (fma (cos (- lambda1 lambda2)) (cos phi2) (cos phi1)) (fma (/ 1.0 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (cos phi1) (* (/ 1.0 (+ (* (cos (- lambda1 lambda2)) (cos phi2)) (cos phi1))) (* (cos (- lambda1 lambda2)) (cos phi2)))))))",
    "output_parens": 33,
    "avg_bits_err_input": 0.9314431385492803,
    "avg_bits_err_output": 0.9485856410619675,
    "avg_bits_err_improve": -0.01714250251268723,
    "time": 49041.114013671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 29.52380263861097,
    "avg_bits_err_output": 29.5168105869109,
    "avg_bits_err_improve": 0.006992051700070334,
    "time": 55810.2490234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 58.12213032889227,
    "avg_bits_err_output": 1.2882099625007213,
    "avg_bits_err_improve": 56.833920366391546,
    "time": 16443.8427734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.996967362018786,
    "avg_bits_err_output": 0.00925,
    "avg_bits_err_improve": 57.987717362018785,
    "time": 14083.367431640625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(- (+ (/ 2.0 (+ (exp x) (exp (- x)))) 1.0) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.008323120312590145,
    "avg_bits_err_output": 0.1615170570218136,
    "avg_bits_err_improve": -0.15319393670922346,
    "time": 3127.345947265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (sqrt (fma x x -1.0)) -1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 32.07419812031259,
    "avg_bits_err_output": 32.074375,
    "avg_bits_err_improve": -0.00017687968741597615,
    "time": 7366.673095703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(* 0.5 (+ (- (+ 1.0 (* (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0) (/ (log (/ (+ 1.0 x) (- 1.0 x))) (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0)))) 1.0) (fma (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0) (/ -1.0 (+ (log (/ (+ 1.0 x) (- 1.0 x))) -1.0)) 1.0)))",
    "output_parens": 32,
    "avg_bits_err_input": 58.596442739326356,
    "avg_bits_err_output": 58.603081370713625,
    "avg_bits_err_improve": -0.00663863138726839,
    "time": 100653.46215820312,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log1p (+ (/ (sqrt (- 1.0 (* x x))) x) (+ (/ 1.0 x) -1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.020049039677847345,
    "avg_bits_err_output": 0.020073120312590145,
    "avg_bits_err_improve": -2.408063474279923e-05,
    "time": 4813.890869140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.12707312031259016,
    "avg_bits_err_output": 0.12707312031259016,
    "avg_bits_err_improve": 0,
    "time": 39626.280517578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* ew (* (cos t) (cos (atan (/ (* (- eh) (tan t)) ew))))) (* eh (* (sin t) (sin (atan (/ (* (- eh) (tan t)) ew)))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.1242712406251803,
    "avg_bits_err_output": 0.12471936093777043,
    "avg_bits_err_improve": -0.00044812031259013063,
    "time": 29654.391845703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (- phi1 phi2)))",
    "output_parens": 8,
    "avg_bits_err_input": 38.40633293832862,
    "avg_bits_err_output": 3.608744908494849,
    "avg_bits_err_improve": 34.79758802983377,
    "time": 37568.8759765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.024248602497597,
    "avg_bits_err_output": 15.024248602497597,
    "avg_bits_err_improve": 0,
    "time": 7091.49755859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (sin delta) (* (/ (cos theta) (cos phi1)) (* (cos phi1) (cos phi1)))))))))))",
    "output_parens": 26,
    "avg_bits_err_input": 0.1503200559205525,
    "avg_bits_err_output": 0.15182513616861462,
    "avg_bits_err_improve": -0.0015050802480621184,
    "time": 48195.7109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* c (* a -3.0))))) -1.0))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma a (* c -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 52.66005239941638,
    "avg_bits_err_output": 46.215346190354985,
    "avg_bits_err_improve": 6.444706209061394,
    "time": 31930.516357421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma b b (* c (* a -3.0))) (/ 1.0 (fma b b (* c (* a -3.0)))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.78284198433713,
    "avg_bits_err_output": 28.761144404220286,
    "avg_bits_err_improve": 0.021697580116843085,
    "time": 33860.301025390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(if (<= (/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a)) -2e-22) (/ (- (sqrt (fma b b (* a (* c -3.0)))) b) (* 3.0 a)) (/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma b b (* c (* a -3.0))) (- (+ (/ 1.0 (fma b b (* c (* a -3.0)))) -1.0) -1.0))))) (* 3.0 a)))",
    "output_parens": 37,
    "avg_bits_err_input": 44.025899448391854,
    "avg_bits_err_output": 42.61537005819036,
    "avg_bits_err_improve": 1.4105293902014964,
    "time": 28635.6484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (- (sqrt (fma (* c a) -3.0 (* b b))) b) (* 3.0 a))",
    "output_parens": 7,
    "avg_bits_err_input": 34.50402994997815,
    "avg_bits_err_output": 34.53059766964378,
    "avg_bits_err_improve": -0.026567719665635536,
    "time": 23880.1796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (- (* (sin phi2) (exp (log1p (cos phi1)))) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output_parens": 19,
    "avg_bits_err_input": 12.948513061722045,
    "avg_bits_err_output": 12.967889575888718,
    "avg_bits_err_improve": -0.019376514166673076,
    "time": 54208.67529296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (log (exp (/ x (+ 1.0 x)))) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 29.37113755413338,
    "avg_bits_err_output": 29.37340451328067,
    "avg_bits_err_improve": -0.002266959147288361,
    "time": 57260.769287109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(- (+ (/ x (+ 1.0 x)) (+ (/ 1.0 (+ -1.0 x)) -1.0)) -1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.011125,
    "avg_bits_err_output": 0.016401128127343765,
    "avg_bits_err_improve": -0.0052761281273437655,
    "time": 5706.98974609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.321671084054008,
    "avg_bits_err_output": 14.321671084054008,
    "avg_bits_err_improve": 0,
    "time": 54459.109619140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -8.4e-308) (/ (- (* (sqrt (- (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))) (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (- F))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (* 2.0 (+ (* (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (- (pow B 2.0) (* A (* C 4.0)))) (fma (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)) (* A (* C 4.0)) (* (- (+ A C) (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))) (* A (* C 4.0))))))) (sqrt F))) (- (pow B 2.0) (* 4.0 (* A C)))))",
    "output_parens": 70,
    "avg_bits_err_input": 52.16865161148619,
    "avg_bits_err_output": 47.186831591864305,
    "avg_bits_err_improve": 4.981820019621885,
    "time": 50118.66162109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output_parens": 12,
    "avg_bits_err_input": 30.0025210089891,
    "avg_bits_err_output": 30.0025210089891,
    "avg_bits_err_improve": 0,
    "time": 78138.71484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -4.5e-208) (/ (- (* (sqrt (* (- (pow B 2.0) (* A (* C 4.0))) F)) (sqrt (* 2.0 (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (if (<= F 1.8e+83) (/ (- (* (sqrt (- (pow B 2.0) (* A (* C 4.0)))) (sqrt (* 2.0 (* F (+ A (+ C (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))))))) (- (pow B 2.0) (* (* 4.0 A) C))) (/ (- (* (sqrt (* (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (fma 2.0 (pow B 2.0) (* A (* C -8.0))))) (sqrt F))) (- (pow B 2.0) (* 4.0 (* C A))))))",
    "output_parens": 69,
    "avg_bits_err_input": 52.36921926210302,
    "avg_bits_err_output": 49.03753251055836,
    "avg_bits_err_improve": 3.331686751544666,
    "time": 47105.087646484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.690131836924849,
    "avg_bits_err_output": 15.690131836924849,
    "avg_bits_err_improve": 0,
    "time": 45541.58251953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -5e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-297) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (+ (- (- 1.0 g) (sqrt (- (* g g) (* h h)))) -1.0)) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g 2e+149) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (- (sqrt (- (* g g) (* h h))) g) 1.0) -1.0)))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g)))))))",
    "output_parens": 90,
    "avg_bits_err_input": 35.53274624010303,
    "avg_bits_err_output": 10.174156298833635,
    "avg_bits_err_improve": 25.358589941269393,
    "time": 62087.1015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9904251890708848,
    "avg_bits_err_output": 0.027844360937770436,
    "avg_bits_err_improve": 0.9625808281331144,
    "time": 18722.719970703125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(expm1 (log1p (/ (exp a) (+ (exp a) (exp b)))))",
    "output_parens": 7,
    "avg_bits_err_input": 0.7035212406251803,
    "avg_bits_err_output": 0.709389285939213,
    "avg_bits_err_improve": -0.005868045314032733,
    "time": 16163.75439453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.326408975029926,
    "avg_bits_err_output": 11.326408975029926,
    "avg_bits_err_improve": 0,
    "time": 22842.70654296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.3967590118918804,
    "avg_bits_err_output": 0.35021599005682036,
    "avg_bits_err_improve": 0.04654302183506004,
    "time": 9389.829833984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(if (<= (+ x (sqrt (+ (* x x) 1.0))) 0.0) (log (- (* x (+ (* x (/ 1.0 (hypot 1.0 x))) 1.0)) (- (/ 1.0 (hypot 1.0 x))))) (if (<= (+ x (sqrt (+ (* x x) 1.0))) 2.0) (log1p (log1p (expm1 (+ x (+ (hypot 1.0 x) -1.0))))) (log (- (* x (+ (* x (/ 1.0 (hypot 1.0 x))) 1.0)) (- (/ 1.0 (hypot 1.0 x)))))))",
    "output_parens": 38,
    "avg_bits_err_input": 52.82564529594612,
    "avg_bits_err_output": 11.853904142290347,
    "avg_bits_err_improve": 40.97174115365577,
    "time": 31465.212646484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.740093080754705,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.740093080754705,
    "time": 2550.004638671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (* (/ (- 1.0 x) (+ 1.0 x)) (/ 1.0 (sqrt (* (- (sqrt (/ (- 1.0 x) (+ 1.0 x)))) (log (pow (exp (sqrt (/ (- 1.0 x) (+ 1.0 x)))) -1.0))))))))",
    "output_parens": 21,
    "avg_bits_err_input": 0.01475,
    "avg_bits_err_output": 0.018094360937770435,
    "avg_bits_err_improve": -0.0033443609377704353,
    "time": 40178.286865234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1221.3857421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(- (+ (/ 2.0 (* r r)) -1.5) (/ (- (* (* r (* 0.375 w)) (* r w)) (* (* r w) (* (* v 0.25) (* r w)))) (- 1.0 v)))",
    "output_parens": 16,
    "avg_bits_err_input": 12.980985044843623,
    "avg_bits_err_output": 6.582944189457552,
    "avg_bits_err_improve": 6.39804085538607,
    "time": 32311.731689453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (fma (* x1 x1) -6.0 (* (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) (+ (* x1 (* 4.0 x1)) (* (+ x1 x1) (+ (/ (- (fma 3.0 (* x1 x1) (+ x2 x2)) x1) (fma x1 x1 1.0)) -3.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5128586979480503,
    "avg_bits_err_output": 0.28885900894845057,
    "avg_bits_err_improve": 0.2239996889995997,
    "time": 78904.38818359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (fma (+ t1 u) u (* t1 (+ t1 u))))",
    "output_parens": 7,
    "avg_bits_err_input": 18.39720575079531,
    "avg_bits_err_output": 18.394705750795318,
    "avg_bits_err_improve": 0.0024999999999941735,
    "time": 32469.882568359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(* x (- 0.954929658551372 (* x (* x 0.12900613773279798))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.23615584257481162,
    "avg_bits_err_output": 0.18730432343849157,
    "avg_bits_err_improve": 0.04885151913632005,
    "time": 30040.77587890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.003625,
    "avg_bits_err_output": 0.003625,
    "avg_bits_err_improve": 0,
    "time": 3068.642822265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ 1.0 (* (- b a) (+ b a))) (* (/ PI 2.0) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.242238088516295,
    "avg_bits_err_output": 9.341059857244506,
    "avg_bits_err_improve": 4.901178231271789,
    "time": 45629.188232421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (exp (* 1.0 (log1p (exp (- (* eps x) x))))) (+ (* (exp (- (fma eps x x))) (- 1.0 (/ 1.0 eps))) (+ (* (/ 1.0 eps) (exp (- (* eps x) x))) -1.0))) 2.0)",
    "output_parens": 21,
    "avg_bits_err_input": 30.23530296898333,
    "avg_bits_err_output": 0.916000294019758,
    "avg_bits_err_improve": 29.319302674963573,
    "time": 32003.949462890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.019,
    "avg_bits_err_output": 0.019,
    "avg_bits_err_improve": 0,
    "time": 9385.031982421875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.022625,
    "avg_bits_err_output": 0.022625,
    "avg_bits_err_improve": 0,
    "time": 22772.7900390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (- (+ 2.0 (* (/ (+ t t) (+ t 1.0)) (/ (+ t t) (+ t 1.0)))) 1.0) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.04875,
    "avg_bits_err_output": 0.0435,
    "avg_bits_err_improve": 0.005250000000000005,
    "time": 72999.0361328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3123.5068359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 3374.1591796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 3917.265625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.847342034684209,
    "avg_bits_err_output": 0.2395,
    "avg_bits_err_improve": 7.607842034684209,
    "time": 73407.81420898438,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.638903356860634,
    "avg_bits_err_output": 7.638903356860634,
    "avg_bits_err_improve": 0,
    "time": 29901.020263671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(+ (* x (+ eps eps)) (* eps eps))",
    "output_parens": 4,
    "avg_bits_err_input": 16.03787629900214,
    "avg_bits_err_output": 0.013375,
    "avg_bits_err_improve": 16.02450129900214,
    "time": 12523.047119140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (pow (pow (exp x) 10.0) x) (expm1 (log1p (cos x))))",
    "output_parens": 7,
    "avg_bits_err_input": 3.5614595501176867,
    "avg_bits_err_output": 2.0614697620248617,
    "avg_bits_err_improve": 1.499989788092825,
    "time": 51354.4541015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 15.11125884618631,
    "avg_bits_err_output": 15.11125884618631,
    "avg_bits_err_improve": 0,
    "time": 21789.618896484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 45.42939066357538,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 45.42939066357538,
    "time": 3867.388427734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 38.73041824971003,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 38.729918249710025,
    "time": 3592.920654296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.293875,
    "avg_bits_err_improve": 63.706125,
    "time": 5103.740234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* 2e-16 (* (* t t) 2e-16))",
    "output_parens": 3,
    "avg_bits_err_input": 61.8432546466958,
    "avg_bits_err_output": 0.42507876094930924,
    "avg_bits_err_improve": 61.418175885746486,
    "time": 24278.21044921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.47193849760178,
    "avg_bits_err_output": 34.47193849760178,
    "avg_bits_err_improve": 0,
    "time": 22363.71923828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (* c -4.0) (sqrt (/ 1.0 (fma c (* a -4.0) (* b b)))))) (- (* b (* b (sqrt (/ 1.0 (fma c (* a -4.0) (* b b)))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 34.46880819558325,
    "avg_bits_err_output": 32.59350495871284,
    "avg_bits_err_improve": 1.8753032368704083,
    "time": 31141.170654296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2406.920166015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 39.95170034462739,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 39.94070034462739,
    "time": 11188.780517578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(log1p (expm1 (/ (- (* x x) (* y y)) (fma x x (* y y)))))",
    "output_parens": 8,
    "avg_bits_err_input": 20.466781533013744,
    "avg_bits_err_output": 20.46997452528024,
    "avg_bits_err_improve": -0.003192992266495054,
    "time": 8773.695068359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6390114363130643,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6390114363130643,
    "time": 6105.045166015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma (+ b d) a (* a c))",
    "output_parens": 3,
    "avg_bits_err_input": 0.03625,
    "avg_bits_err_output": 0.002625,
    "avg_bits_err_improve": 0.033624999999999995,
    "time": 8735.61962890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b b) (* a (+ a (+ b b))))",
    "output_parens": 5,
    "avg_bits_err_input": 0.020969360937770437,
    "avg_bits_err_output": 0.010125,
    "avg_bits_err_improve": 0.010844360937770437,
    "time": 4847.49560546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(+ (* x (* x x)) (* x x))",
    "output_parens": 4,
    "avg_bits_err_input": 0.015,
    "avg_bits_err_output": 0.015,
    "avg_bits_err_improve": 0,
    "time": 4511.00244140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.00125,
    "avg_bits_err_output": 0.00125,
    "avg_bits_err_improve": 0,
    "time": 1555.23388671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ d (+ e (+ b (+ c a))))",
    "output_parens": 4,
    "avg_bits_err_input": 0.40246729375396656,
    "avg_bits_err_output": 0.240375,
    "avg_bits_err_improve": 0.16209229375396655,
    "time": 7680.901611328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(* (* (* (- 1.0 (cos x)) (exp 2.0)) (* (exp 1.0) (* 1.0 (* (exp -1.0) (log (pow (exp (exp -2.0)) (exp 1.0))))))) (exp -1.0))",
    "output_parens": 17,
    "avg_bits_err_input": 29.91012317378537,
    "avg_bits_err_output": 29.91012363650163,
    "avg_bits_err_improve": -4.627162617509839e-07,
    "time": 25356.0439453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(+ (- x (sqrt (- (* x x) eps))) (* (- (- (* (* x x) (/ -1.0 (- (* x x) eps))) -1.0) (* eps (/ -1.0 (- (* x x) eps)))) (* 1.0 (* (- (* x x) eps) (* (/ (- (* x x) eps) (- (* x x) eps)) (/ 1.0 (sqrt (- (* x x) eps))))))))",
    "output_parens": 31,
    "avg_bits_err_input": 24.34135249968183,
    "avg_bits_err_output": 21.637119895680815,
    "avg_bits_err_improve": 2.704232604001014,
    "time": 18979.13134765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(exp (log (/ (- x (sin x)) (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 30.08428995822381,
    "avg_bits_err_output": 30.08472868431169,
    "avg_bits_err_improve": -0.0004387260878786492,
    "time": 45089.656494140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.007792481250360578,
    "avg_bits_err_output": 0.000625,
    "avg_bits_err_improve": 0.0071674812503605785,
    "time": 3920.077392578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 5e-9) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.80853741260593,
    "avg_bits_err_output": 10.915384226868703,
    "avg_bits_err_improve": 36.893153185737226,
    "time": 56523.78515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* b d) (* a c)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.722039910265075,
    "avg_bits_err_output": 26.721738030577665,
    "avg_bits_err_improve": 0.0003018796874094676,
    "time": 35833.34228515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (fma c c (* d d)))",
    "output_parens": 6,
    "avg_bits_err_input": 26.48712388619866,
    "avg_bits_err_output": 26.48674888619866,
    "avg_bits_err_improve": 0.00037499999999823785,
    "time": 25355.988525390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux maxCos) ux) -1.0)",
    "output_parens": 3,
    "avg_bits_err_input": 0.032125,
    "avg_bits_err_output": 0.020222849187341674,
    "avg_bits_err_improve": 0.011902150812658326,
    "time": 24500.8017578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (sin (* (+ uy uy) PI)) (sqrt (- (* (* ux maxCos) (- -1.0 (* ux maxCos))) (- (+ (* ux maxCos) (* ux (- -1.0 (* ux maxCos)))) (* ux (- (fma ux maxCos 1.0) ux))))))",
    "output_parens": 19,
    "avg_bits_err_input": 13.636810760200278,
    "avg_bits_err_output": 0.5614216490148406,
    "avg_bits_err_improve": 13.075389111185437,
    "time": 46857.10888671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) (* uy (* (/ PI (+ uy uy)) 2.0)))) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (+ (* (fma ux maxCos 1.0) (- (* ux maxCos) ux)) (* ux maxCos))))))",
    "output_parens": 20,
    "avg_bits_err_input": 13.665775788780483,
    "avg_bits_err_output": 0.33107786692796237,
    "avg_bits_err_improve": 13.33469792185252,
    "time": 48506.3251953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (* ux (* (- 1.0 ux) maxCos)) zi (fma (* (cos (* uy (* PI 2.0))) (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos)))))) xi (* (sqrt (- 1.0 (* (* ux (* (- 1.0 ux) maxCos)) (* ux (* (- 1.0 ux) maxCos))))) (* (* (sin (* PI uy)) (cos (* PI uy))) (+ yi yi)))))",
    "output_parens": 35,
    "avg_bits_err_input": 0.3375869690582136,
    "avg_bits_err_output": 0.3446450057643419,
    "avg_bits_err_improve": -0.007058036706128312,
    "time": 78094.52685546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 50,
    "avg_bits_err_input": 0.19545630303031034,
    "avg_bits_err_output": 0.19545630303031034,
    "avg_bits_err_improve": 0,
    "time": 25513.701171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (pow (* (/ u1 (- 1.0 u1)) (/ u1 (- 1.0 u1))) 0.25) (sin (* 6.28318530718 u2)))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5380415291800155,
    "avg_bits_err_output": 0.5414083225082792,
    "avg_bits_err_improve": -0.0033667933282637286,
    "time": 39156.846923828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output_parens": 6,
    "avg_bits_err_input": 0.3137584999820968,
    "avg_bits_err_output": 0.3137584999820968,
    "avg_bits_err_improve": 0,
    "time": 52180.7099609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (log (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))) s)",
    "output_parens": 17,
    "avg_bits_err_input": 0.3369293245419511,
    "avg_bits_err_output": 0.3466758710427341,
    "avg_bits_err_improve": -0.009746546500782993,
    "time": 38091.1591796875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.06315855607968592,
    "avg_bits_err_output": 0.04392676477927609,
    "avg_bits_err_improve": 0.019231791300409827,
    "time": 33684.295166015625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (- s (* s (- -1.0 (exp (/ (- (fabs x)) s))))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1565690076009342,
    "avg_bits_err_output": 0.14142880012299835,
    "avg_bits_err_improve": 0.015140207477935846,
    "time": 32225.430419921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (expm1 (log1p (* x PI))) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.6513452135954878,
    "avg_bits_err_output": 0.6835950235245164,
    "avg_bits_err_improve": -0.032249809929028594,
    "time": 26166.18603515625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (- u (* (exp (/ -2.0 v)) (+ u -1.0)))) 1.0)",
    "output_parens": 7,
    "avg_bits_err_input": 0.16747158469483756,
    "avg_bits_err_output": 0.16173303305689957,
    "avg_bits_err_improve": 0.005738551637937989,
    "time": 41377.8828125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.612310869104001,
    "avg_bits_err_output": 2.6111192718829748,
    "avg_bits_err_improve": 0.0011915972210263526,
    "time": 41991.318359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (* (sinh (/ 1.0 v)) (* (sinh (/ 1.0 v)) (/ 1.0 (sinh (/ 1.0 v))))) 2.0) v))",
    "output_parens": 19,
    "avg_bits_err_input": 0.4526825504145021,
    "avg_bits_err_output": 0.46714441621091923,
    "avg_bits_err_improve": -0.014461865796417117,
    "time": 50243.604736328125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output_parens": 13,
    "avg_bits_err_input": 0.10742929765524199,
    "avg_bits_err_output": 0.10742929765524199,
    "avg_bits_err_improve": 0,
    "time": 49610.58203125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (log (pow (* alpha alpha) PI)) (+ 1.0 (* cosTheta (+ (* alpha (* cosTheta alpha)) (- cosTheta))))))",
    "output_parens": 12,
    "avg_bits_err_input": 0.46684033353438215,
    "avg_bits_err_output": 0.4492735081605508,
    "avg_bits_err_improve": 0.017566825373831363,
    "time": 23289.082763671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* -3.0 (* s (log1p (- (/ (+ u -0.25) 0.75)))))",
    "output_parens": 6,
    "avg_bits_err_input": 1.311871300643012,
    "avg_bits_err_output": 0.5443749608890928,
    "avg_bits_err_improve": 0.7674963397539193,
    "time": 168120.40649414062,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- s) (log1p (* u -4.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 12.31327778622974,
    "avg_bits_err_output": 0.2045,
    "avg_bits_err_improve": 12.10877778622974,
    "time": 45230.63330078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output_parens": 18,
    "avg_bits_err_input": 0.1346384577372028,
    "avg_bits_err_output": 0.1346384577372028,
    "avg_bits_err_improve": 0,
    "time": 67414.12060546875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9343527535727689,
    "avg_bits_err_output": 0.9230585303999114,
    "avg_bits_err_improve": 0.011294223172857554,
    "time": 64404.3193359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI))) (/ 1.0 PI)) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.7028325369087378,
    "avg_bits_err_output": 0.5393119262840109,
    "avg_bits_err_improve": 0.1635206106247269,
    "time": 51382.62109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- 0.0 u1)) (* (log1p (- 0.0 u1)) (/ 1.0 (log1p (- 0.0 u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 13.395732373251557,
    "avg_bits_err_output": 0.5195570805418819,
    "avg_bits_err_improve": 12.876175292709675,
    "time": 28056.84326171875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (log (pow (exp (* 2.0 PI)) u2))))",
    "output_parens": 10,
    "avg_bits_err_input": 13.434744053587542,
    "avg_bits_err_output": 0.30745229846447236,
    "avg_bits_err_improve": 13.12729175512307,
    "time": 64520.25439453125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(* (* (- alpha) alpha) (log1p (- u0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.340866284373869,
    "avg_bits_err_output": 0.32058740625180293,
    "avg_bits_err_improve": 14.020278878122065,
    "time": 45205.81787109375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.601033155138609,
    "avg_bits_err_output": 0.5215443741000872,
    "avg_bits_err_improve": 12.079488781038522,
    "time": 33897.208984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* (- (* l (+ (/ PI l) 1.0)) l) l))))",
    "output_parens": 11,
    "avg_bits_err_input": 16.22565607336345,
    "avg_bits_err_output": 12.644458399086307,
    "avg_bits_err_improve": 3.581197674277142,
    "time": 45118.6455078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(+ (+ (- (/ 1.0 (tan B))) (* (/ 1.0 (tan B)) (- 1.0 x))) (/ 1.0 (sin B)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.21874060156295072,
    "avg_bits_err_output": 0.22081372187554088,
    "avg_bits_err_improve": -0.00207312031259016,
    "time": 33341.389892578125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+276) (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 41,
    "avg_bits_err_input": 13.570001173261042,
    "avg_bits_err_output": 12.140581749622857,
    "avg_bits_err_improve": 1.4294194236381852,
    "time": 50981.40087890625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.5730331379407,
    "avg_bits_err_output": 1.8405316455289185,
    "avg_bits_err_improve": 59.73250149241178,
    "time": 58195.619140625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1.2e-161) (/ (* (sqrt 2.0) t) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (exp (log (+ -1.0 (/ (+ 1.0 x) (+ -1.0 x))))) l))))) (if (<= t 6.5e-238) (/ (* (sqrt 2.0) t) (exp (log (sqrt (fma t (* (/ (+ 1.0 x) (+ -1.0 x)) (+ t t)) (fma l (- l) (* (/ (+ 1.0 x) (+ -1.0 x)) (* l l)))))))) (/ (* (* (* (sqrt 2.0) t) (/ 1.0 (* (sqrt 2.0) t))) (* (sqrt 2.0) t)) (sqrt (fma t (* (/ (+ 1.0 x) (+ x -1.0)) (+ t t)) (* l (* (+ -1.0 (/ (+ 1.0 x) (+ x -1.0))) l)))))))",
    "output_parens": 64,
    "avg_bits_err_input": 42.57509323770458,
    "avg_bits_err_output": 36.235487709566165,
    "avg_bits_err_improve": 6.339605528138414,
    "time": 38581.264404296875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (/ (sin ky) (hypot (sin ky) (sin kx))) (sin th))",
    "output_parens": 7,
    "avg_bits_err_input": 4.150766573662981,
    "avg_bits_err_output": 0.21689661719245773,
    "avg_bits_err_improve": 3.9338699564705233,
    "time": 37809.8427734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (exp (* (log1p (+ (pow (* (/ (+ l l) Om) (sin ky)) 2.0) (pow (* (/ (+ l l) Om) (sin kx)) 2.0))) -0.5)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.9363905959419778,
    "avg_bits_err_output": 0.006375,
    "avg_bits_err_improve": 0.9300155959419778,
    "time": 14732.52001953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (- (+ 1.0 (* (/ Om Omc) (/ Om Omc))) 1.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 14,
    "avg_bits_err_input": 10.298768464718043,
    "avg_bits_err_output": 10.298822566165446,
    "avg_bits_err_improve": -5.410144740380929e-05,
    "time": 101224.33740234375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= n -7.8e+28) (sqrt (* 2.0 (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) (* n U)))) (if (<= n -1.25e-269) (sqrt (* 2.0 (* U (* n (- (- t (* 2.0 (/ (* l l) Om))) (* (pow (/ l Om) 2.0) (* n (- U U*)))))))) (if (<= n -4e-310) (* (sqrt (- n)) (sqrt (* 2.0 (* U (- (* (pow (/ l Om) 2.0) (* n (- U U*))) (- t (* 2.0 (/ (* l l) Om)))))))) (* (sqrt n) (sqrt (* U (* -2.0 (- (* 2.0 (/ (* l l) Om)) (- t (* (- U U*) (* n (pow (/ l Om) 2.0))))))))))))",
    "output_parens": 65,
    "avg_bits_err_input": 35.01707994436509,
    "avg_bits_err_output": 30.367185282895075,
    "avg_bits_err_improve": 4.649894661470018,
    "time": 39530.864501953125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -5.6e-108) (/ 2.0 (* (/ (pow t 3.0) (* l l)) (fma (* (tan k) (+ (pow (/ k t) 2.0) 1.0)) (sin k) (* (sin k) (- (tan k)))))) (if (<= t 5.5e-104) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (* (tan k) (exp (log1p (/ (pow t 3.0) (* l l))))) (- (* (sin k) (tan k)))))) (/ 2.0 (* (pow (/ k t) 2.0) (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k))))))",
    "output_parens": 48,
    "avg_bits_err_input": 47.900483413567684,
    "avg_bits_err_output": 36.89344073915009,
    "avg_bits_err_improve": 11.007042674417598,
    "time": 51699.41259765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(/ 2.0 (* (* (+ 2.0 (pow (/ k t) 2.0)) (* (/ (pow t 3.0) (* l l)) (sin k))) (tan k)))",
    "output_parens": 12,
    "avg_bits_err_input": 32.95536768404197,
    "avg_bits_err_output": 32.932941312667886,
    "avg_bits_err_improve": 0.0224263713740811,
    "time": 42093.3818359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(fma (* (/ (cos th) (sqrt 2.0)) a2) a2 (* (/ (cos th) (sqrt 2.0)) (* a1 a1)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.5071832734586856,
    "avg_bits_err_output": 0.5030063937712757,
    "avg_bits_err_improve": 0.0041768796874099845,
    "time": 41037.407958984375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(- (* (/ 1.0 (sqrt k)) (* (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)) (/ (+ 1.0 (/ 1.0 (sqrt k))) (/ 1.0 (sqrt k))))) (* (/ 1.0 (sqrt k)) (/ (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)) (/ 1.0 (sqrt k)))))",
    "output_parens": 27,
    "avg_bits_err_input": 0.5371243047279676,
    "avg_bits_err_output": 0.5449324334481486,
    "avg_bits_err_improve": -0.007808128720180996,
    "time": 51232.243896484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (fma (exp (- l)) (* J (- (cos (/ K 2.0)))) (* J (* (exp l) (cos (/ K 2.0))))) U)",
    "output_parens": 13,
    "avg_bits_err_input": 17.263152104342474,
    "avg_bits_err_output": 17.27799906112761,
    "avg_bits_err_improve": -0.014846956785135035,
    "time": 36126.648193359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(if (<= K -1.12e+196) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ n m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (if (<= K 5.5e+194) (* (cos (- (/ (fma (+ m n) (* (- (+ m n)) (+ (- -1.0 (/ K (+ m n))) 1.0)) 0.0) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0)))) (* (cos (- (/ (* K (- (- (* K (+ 1.0 (/ (+ 1.0 (+ n m)) K))) 1.0) K)) 2.0) M)) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))))",
    "output_parens": 68,
    "avg_bits_err_input": 14.61046555967511,
    "avg_bits_err_output": 5.048495153506518,
    "avg_bits_err_improve": 9.56197040616859,
    "time": 29155.94677734375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 18.37494812031259,
    "avg_bits_err_output": 18.37494812031259,
    "avg_bits_err_improve": 0,
    "time": 33748.479248046875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 5e+301) (fma (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (* (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))) (/ w0 (sqrt (- 1.0 (* (pow (/ (* M D) (+ d d)) 2.0) (/ h l)))))) 0.0) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 49,
    "avg_bits_err_input": 14.388696426827504,
    "avg_bits_err_output": 10.485357663145228,
    "avg_bits_err_improve": 3.9033387636822763,
    "time": 14766.4130859375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.034376758014886,
    "avg_bits_err_output": 19.034376758014886,
    "avg_bits_err_improve": 0,
    "time": 35491.330078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(* (/ c0 (+ w w)) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) (* (/ (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M) (+ (/ (* d (* d c0)) (* D (* h (* w D)))) M)) (sqrt (- (* (/ (* d (* d c0)) (* D (* h (* w D)))) (/ (* d (* d c0)) (* D (* h (* w D))))) (* M M))))))",
    "output_parens": 42,
    "avg_bits_err_input": 59.680442275452414,
    "avg_bits_err_output": 56.19157524039654,
    "avg_bits_err_improve": 3.4888670350558755,
    "time": 37494.19775390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(if (<= (* (* (pow (/ d h) 0.5) (pow (/ d l) 0.5)) (- 1.0 (* (* 0.5 (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l)))) 1e+294) (* (* (sqrt (/ d l)) (sqrt (/ d h))) (- 1.0 (* 0.5 (* (pow (/ (* M D) (* d 2.0)) 2.0) (/ h l))))) (- (sqrt (* (/ d l) (/ d h))) (* 0.5 (log (pow (pow (exp (/ h l)) (sqrt (* (/ d l) (/ d h)))) (pow (/ (* M D) (+ d d)) 2.0))))))",
    "output_parens": 49,
    "avg_bits_err_input": 26.930657258275332,
    "avg_bits_err_output": 25.514581134445503,
    "avg_bits_err_improve": 1.4160761238298285,
    "time": 46986.942138671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(* (- (* (exp 1.0) (- 2.0 (sqrt (fma 0.5 (/ 1.0 (hypot 1.0 x)) 0.5)))) (exp 1.0)) (exp -1.0))",
    "output_parens": 11,
    "avg_bits_err_input": 15.501832345748937,
    "avg_bits_err_output": 15.062913972494522,
    "avg_bits_err_improve": 0.4389183732544151,
    "time": 106583.77099609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (* -3.0 (fma v v -1.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.9846981203125902,
    "avg_bits_err_output": 0.013469360937770436,
    "avg_bits_err_improve": 0.9712287593748198,
    "time": 12988.197021484375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (* 5.0 (* v v))) (fma (- 1.0 (* v v)) (* t (* (sqrt (- 2.0 (* v (* v 6.0)))) PI)) 0.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.4177905635405,
    "avg_bits_err_output": 0.34695766822358254,
    "avg_bits_err_improve": 0.07083289531691744,
    "time": 19440.839599609375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.011594360937770434,
    "avg_bits_err_output": 0.011594360937770434,
    "avg_bits_err_improve": 0,
    "time": 11494.051513671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5259832657021648,
    "avg_bits_err_output": 0.5259832657021648,
    "avg_bits_err_improve": 0,
    "time": 10566.367919921875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output_parens": 7,
    "avg_bits_err_input": 2.32511591314059,
    "avg_bits_err_output": 2.32511591314059,
    "avg_bits_err_improve": 0,
    "time": 10773.007568359375,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (+ 1.0 (- (/ (+ mu (+ EDonor (- Vef Ec))) KbT) 1.0))))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.0160842797537534,
    "avg_bits_err_output": 0.016157400066343544,
    "avg_bits_err_improve": -7.312031259014418e-05,
    "time": 10693.056884765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 8,
    "avg_bits_err_input": 0.18960905390214727,
    "avg_bits_err_output": 0.18960905390214727,
    "avg_bits_err_improve": 0,
    "time": 17596.8134765625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (+ (* a (* a a)) (* a a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 16,
    "avg_bits_err_input": 0.1865633717196659,
    "avg_bits_err_output": 0.18679513692473326,
    "avg_bits_err_improve": -0.00023176520506737464,
    "time": 24059.650390625,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.1860512990690369,
    "avg_bits_err_output": 0.1860512990690369,
    "avg_bits_err_improve": 0,
    "time": 5656.5888671875,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.049863174189971,
    "avg_bits_err_output": 13.049863174189971,
    "avg_bits_err_improve": 0,
    "time": 34379.75830078125,
    "seed": 29,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sqrtexp (problem 3.4.4)",
    "input": "(sqrt (/ (- (exp (* 2.0 x)) 1.0) (- (exp x) 1.0)))",
    "output": "(sqrt (/ (expm1 (+ x x)) (* (* (expm1 x) (/ 1.0 (expm1 x))) (expm1 x))))",
    "output_parens": 10,
    "avg_bits_err_input": 41.581795527543186,
    "avg_bits_err_output": 0.04275,
    "avg_bits_err_improve": 41.53904552754319,
    "time": 13773.683349609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "sintan (problem 3.4.5)",
    "input": "(/ (- x (sin x)) (- x (tan x)))",
    "output": "(/ (+ (- x (sin x)) (* (fma (/ 1.0 (sin x)) (- (sin x)) 1.0) (sin x))) (- (- (+ x 1.0) 1.0) (tan x)))",
    "output_parens": 15,
    "avg_bits_err_input": 31.616592616403562,
    "avg_bits_err_output": 29.929085580192393,
    "avg_bits_err_improve": 1.6875070362111693,
    "time": 41726.4775390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2p (problem 3.2.1, positive)",
    "input": "(/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(if (<= b_2 4.05e-151) (/ (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- (* c (* a (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) b_2)) a) (if (<= b_2 8.6e+153) (/ (- (- (* (sqrt (- (* b_2 b_2) (* a c))) (- (+ 1.0 (* b_2 (* b_2 (/ 1.0 (- (* b_2 b_2) (* a c)))))) 1.0)) b_2) (* a (* (sqrt (- (* b_2 b_2) (* a c))) (* c (/ 1.0 (- (* b_2 b_2) (* a c))))))) a) (/ (fma b_2 (* b_2 (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))) (- (* c (* a (- (/ 1.0 (sqrt (- (* b_2 b_2) (* a c))))))) b_2)) a)))",
    "output_parens": 65,
    "avg_bits_err_input": 34.45107456429824,
    "avg_bits_err_output": 32.1333837476897,
    "avg_bits_err_improve": 2.3176908166085397,
    "time": 31554.900634765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quad2m (problem 3.2.1, negative)",
    "input": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output": "(/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a)",
    "output_parens": 7,
    "avg_bits_err_input": 34.62861518651838,
    "avg_bits_err_output": 34.62861518651838,
    "avg_bits_err_improve": 0,
    "time": 19829.069580078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "cos2 (problem 3.4.1)",
    "input": "(/ (- 1.0 (cos x)) (* x x))",
    "output": "(/ (* 1.0 (+ (- 1.0 (cos x)) (fma (- (* (cos x) (exp 1.0))) (exp -1.0) (* 1.0 (cos x))))) (* x x))",
    "output_parens": 14,
    "avg_bits_err_input": 31.382620110201913,
    "avg_bits_err_output": 31.058786125984998,
    "avg_bits_err_improve": 0.32383398421691467,
    "time": 32218.626953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2nthrt (problem 3.4.6)",
    "input": "(- (pow (+ x 1.0) (/ 1.0 n)) (pow x (/ 1.0 n)))",
    "output": "(if (<= x 1.35e+47) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (+ (- (+ 1.0 (* (/ 1.0 n) (+ (log1p x) -1.0))) 1.0) (/ 1.0 n)))) (+ (- 1.0 (pow x (/ 1.0 n))) (expm1 (* (- (- (log1p x))) (- (+ 1.0 (/ 1.0 n)) 1.0)))))",
    "output_parens": 27,
    "avg_bits_err_input": 32.97007266637754,
    "avg_bits_err_output": 31.122249271702316,
    "avg_bits_err_improve": 1.847823394675224,
    "time": 90299.51782226562,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2log (problem 3.3.6)",
    "input": "(- (log (+ N 1.0)) (log N))",
    "output": "(log1p (/ 1.0 N))",
    "output_parens": 2,
    "avg_bits_err_input": 29.545799160346263,
    "avg_bits_err_output": 0.0165,
    "avg_bits_err_improve": 29.529299160346262,
    "time": 5286.090576171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2frac (problem 3.3.1)",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 x))",
    "output": "(if (<= x -7.5e+153) (- (/ 1.0 (+ x 1.0)) (/ 1.0 x)) (if (<= x 8.5e+153) (- (- (* (pow (+ x 1.0) -2.0) (+ x 2.0)) (/ 1.0 x)) (pow (+ x 1.0) -2.0)) (+ (* (/ 1.0 (/ 1.0 x)) (* (fma (/ 1.0 x) (- (/ 1.0 (/ 1.0 x))) 1.0) (* (/ 1.0 x) (* (/ 1.0 (/ 1.0 x)) (/ (/ 1.0 x) (/ 1.0 (/ 1.0 x))))))) (- (/ 1.0 (+ 1.0 x)) (/ 1.0 x)))))",
    "output_parens": 40,
    "avg_bits_err_input": 14.45404023870485,
    "avg_bits_err_output": 4.237601225134716,
    "avg_bits_err_improve": 10.216439013570135,
    "time": 40173.469482421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cos (problem 3.3.5)",
    "input": "(- (cos (+ x eps)) (cos x))",
    "output": "(fma (cos x) (+ (cos eps) -1.0) (* (sin x) (- (sin eps))))",
    "output_parens": 8,
    "avg_bits_err_input": 40.45591082540549,
    "avg_bits_err_output": 6.376070401701845,
    "avg_bits_err_improve": 34.079840423703644,
    "time": 31796.151611328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2cbrt (problem 3.3.4)",
    "input": "(- (cbrt (+ x 1.0)) (cbrt x))",
    "output": "(+ 1.0 (log1p (expm1 (+ (cbrt (+ 1.0 x)) (- -1.0 (cbrt x))))))",
    "output_parens": 8,
    "avg_bits_err_input": 29.832082985190723,
    "avg_bits_err_output": 29.53381711893694,
    "avg_bits_err_improve": 0.29826586625378226,
    "time": 34113.647216796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "tanhf (example 3.4)",
    "input": "(/ (- 1.0 (cos x)) (sin x))",
    "output": "(/ (- 1.0 (cos x)) (sin x))",
    "output_parens": 4,
    "avg_bits_err_input": 30.87957046301514,
    "avg_bits_err_output": 30.87957046301514,
    "avg_bits_err_improve": 0,
    "time": 31561.53271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadp (p42, positive)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (+ (fma a (* c -4.0) (* b b)) (* a (* (+ (* a (/ (/ a (- a)) a)) 1.0) (* c 4.0)))))) (* a 2.0))",
    "output_parens": 17,
    "avg_bits_err_input": 34.453524917576104,
    "avg_bits_err_output": 34.49409951493768,
    "avg_bits_err_improve": -0.040574597361576537,
    "time": 22308.33544921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "quadm (p42, negative)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (fma a (* c -4.0) (* b b)) (* a (* (- 4.0 (* a (/ 4.0 a))) c))))) (+ a a))",
    "output_parens": 14,
    "avg_bits_err_input": 35.01359457323689,
    "avg_bits_err_output": 35.049550098625275,
    "avg_bits_err_improve": -0.03595552538838831,
    "time": 25919.299560546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "qlog (example 3.10)",
    "input": "(/ (log (- 1.0 x)) (log (+ 1.0 x)))",
    "output": "(log (exp (/ (log1p (- x)) (log1p x))))",
    "output_parens": 6,
    "avg_bits_err_input": 61.617755739700655,
    "avg_bits_err_output": 0.02059680468885217,
    "avg_bits_err_improve": 61.597158935011805,
    "time": 17397.96044921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logs (example 3.8)",
    "input": "(- (- (* (+ n 1.0) (log (+ n 1.0))) (* n (log n))) 1.0)",
    "output": "(- (+ (+ 1.0 (log1p n)) (+ (- -1.0 n) (+ n (* n (- (log1p n) (log n)))))) 1.0)",
    "output_parens": 11,
    "avg_bits_err_input": 63.00704683582842,
    "avg_bits_err_output": 0.06781217008777905,
    "avg_bits_err_improve": 62.93923466574064,
    "time": 49423.8388671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "logq (problem 3.4.3)",
    "input": "(log (/ (- 1.0 eps) (+ 1.0 eps)))",
    "output": "(- (+ 1.0 (log (* (* (/ (- 1.0 eps) (+ 1.0 eps)) (exp 1.0)) (exp -1.0)))) 1.0)",
    "output_parens": 10,
    "avg_bits_err_input": 58.510085398497004,
    "avg_bits_err_output": 58.527028289270234,
    "avg_bits_err_improve": -0.016942890773229635,
    "time": 19110.62744140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "invcot (example 3.9)",
    "input": "(- (/ 1.0 x) (/ 1.0 (tan x)))",
    "output": "(if (<= x -1.16e-154) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (pow (/ 1.0 x) 2.0))) (/ 1.0 (tan x))) (exp (log (/ -1.0 (/ 1.0 x))))) (if (<= x 1.7e-153) (- (/ 1.0 x) (/ 1.0 (tan x))) (- (- (* (/ -1.0 (/ 1.0 x)) (- 1.0 (* (/ 1.0 x) (/ 1.0 x)))) (/ 1.0 (tan x))) (/ -1.0 (/ 1.0 x)))))",
    "output_parens": 35,
    "avg_bits_err_input": 59.818693213327315,
    "avg_bits_err_output": 56.52476819141959,
    "avg_bits_err_improve": 3.293925021907725,
    "time": 62522.3916015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq3 (problem 3.4.2)",
    "input": "(/ (* eps (- (exp (* (+ a b) eps)) 1.0)) (* (- (exp (* a eps)) 1.0) (- (exp (* b eps)) 1.0)))",
    "output": "(/ (* (expm1 (* eps (+ a b))) (* (expm1 (* eps (+ a b))) (* eps (/ (/ eps eps) (expm1 (* eps (+ a b))))))) (* (expm1 (* eps a)) (expm1 (* eps b))))",
    "output_parens": 20,
    "avg_bits_err_input": 60.298200043857314,
    "avg_bits_err_output": 41.20286837914315,
    "avg_bits_err_improve": 19.095331664714166,
    "time": 51719.365478515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expq2 (section 3.11)",
    "input": "(/ (exp x) (- (exp x) 1.0))",
    "output": "(/ (exp x) (expm1 x))",
    "output_parens": 3,
    "avg_bits_err_input": 41.96361656350097,
    "avg_bits_err_output": 0.4385943609377705,
    "avg_bits_err_improve": 41.5250222025632,
    "time": 38704.355712890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expm1 (example 3.7)",
    "input": "(- (exp x) 1.0)",
    "output": "(expm1 x)",
    "output_parens": 1,
    "avg_bits_err_input": 58.6588772568554,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 58.6580022568554,
    "time": 7975.1845703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "expax (section 3.5)",
    "input": "(- (exp (* a x)) 1.0)",
    "output": "(expm1 (* a x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.42017257535626,
    "avg_bits_err_output": 0.016070789202753646,
    "avg_bits_err_improve": 29.404101786153507,
    "time": 16817.841064453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "exp2 (problem 3.3.7)",
    "input": "(+ (- (exp x) 2.0) (exp (- x)))",
    "output": "(* (exp (+ (log (+ (expm1 (- x)) (expm1 x))) 1.0)) (exp -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 29.97926091000864,
    "avg_bits_err_output": 29.013949159542953,
    "avg_bits_err_improve": 0.9653117504656876,
    "time": 40624.775634765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "3frac (problem 3.3.3)",
    "input": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output": "(+ (- (/ 1.0 (+ x 1.0)) (/ 2.0 x)) (/ 1.0 (- x 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 9.523050693013245,
    "avg_bits_err_output": 9.523050693013245,
    "avg_bits_err_improve": 0,
    "time": 52379.85498046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2tan (problem 3.3.2)",
    "input": "(- (tan (+ x eps)) (tan x))",
    "output": "(- (tan (+ x eps)) (log1p (expm1 (tan x))))",
    "output_parens": 6,
    "avg_bits_err_input": 36.559457049524056,
    "avg_bits_err_output": 36.61379830324129,
    "avg_bits_err_improve": -0.054341253717232973,
    "time": 75441.52490234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sqrt (example 3.1)",
    "input": "(- (sqrt (+ x 1.0)) (sqrt x))",
    "output": "(+ (exp (- (* 0.5 (log1p x)))) (+ (- x) (+ (* x (/ 1.0 (sqrt (+ 1.0 x)))) (- x (sqrt x)))))",
    "output_parens": 14,
    "avg_bits_err_input": 30.066230535009122,
    "avg_bits_err_output": 25.737515232220417,
    "avg_bits_err_improve": 4.328715302788705,
    "time": 37249.122314453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2sin (example 3.3)",
    "input": "(- (sin (+ x eps)) (sin x))",
    "output": "(fma (sin x) (+ (cos eps) -1.0) (* (sin eps) (cos x)))",
    "output_parens": 7,
    "avg_bits_err_input": 37.50143438815844,
    "avg_bits_err_output": 0.4186822559880677,
    "avg_bits_err_improve": 37.08275213217037,
    "time": 24962.342041015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2isqrt (example 3.6)",
    "input": "(- (/ 1.0 (sqrt x)) (/ 1.0 (sqrt (+ x 1.0))))",
    "output": "(- (pow x -0.5) (pow (+ 1.0 x) -0.5))",
    "output_parens": 4,
    "avg_bits_err_input": 19.546716205344698,
    "avg_bits_err_output": 19.395065660574836,
    "avg_bits_err_improve": 0.15165054476986128,
    "time": 24683.3330078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2atan (example 3.5)",
    "input": "(- (atan (+ N 1.0)) (atan N))",
    "output": "(- (- (- (atan (+ N 1.0)) 1.0) -1.0) (atan N))",
    "output_parens": 6,
    "avg_bits_err_input": 14.54986387644225,
    "avg_bits_err_output": 14.550817317365745,
    "avg_bits_err_improve": -0.0009534409234941421,
    "time": 25430.371826171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "symmetry log of sum of exp",
    "input": "(log (+ (exp a) (exp b)))",
    "output": "(log1p (+ (exp a) (expm1 b)))",
    "output_parens": 4,
    "avg_bits_err_input": 29.5427609228867,
    "avg_bits_err_output": 1.5133184183111608,
    "avg_bits_err_improve": 28.029442504575538,
    "time": 29055.7880859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "b parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output": "(* (- (/ (* m (- 1.0 m)) v) 1.0) (- 1.0 m))",
    "output_parens": 6,
    "avg_bits_err_input": 0.07596240625180288,
    "avg_bits_err_output": 0.07596240625180288,
    "avg_bits_err_improve": 0,
    "time": 42295.030517578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF D",
    "input": "(- (* (* (* a a) b) b))",
    "output": "(- (* (* a b) (* a b)))",
    "output_parens": 4,
    "avg_bits_err_input": 16.31332318650586,
    "avg_bits_err_output": 0.30214661719245783,
    "avg_bits_err_improve": 16.0111765693134,
    "time": 20159.80908203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF C",
    "input": "(+ (pow (* a (cos (* PI (/ angle 180.0)))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output": "(+ (pow (* a (cos (fma (/ angle 180.0) (* (- (/ angle 180.0)) (+ (- -1.0 (/ PI (/ angle 180.0))) 1.0)) 0.0))) 2.0) (pow (* b (sin (* PI (/ angle 180.0)))) 2.0))",
    "output_parens": 18,
    "avg_bits_err_input": 20.741136635939192,
    "avg_bits_err_output": 20.852379000061948,
    "avg_bits_err_improve": -0.11124236412275579,
    "time": 59853.28759765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF B",
    "input": "(* (* (* 2.0 (- (pow b 2.0) (pow a 2.0))) (sin (* PI (/ angle 180.0)))) (cos (* PI (/ angle 180.0))))",
    "output": "(* (* (- (pow a 2.0) (pow b 2.0)) (* (sin (* PI (/ angle 180.0))) -2.0)) (expm1 (log1p (cos (* PI (/ angle 180.0))))))",
    "output_parens": 14,
    "avg_bits_err_input": 31.095909298799665,
    "avg_bits_err_output": 31.03346243046924,
    "avg_bits_err_improve": 0.06244686833042579,
    "time": 43214.1083984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ab-angle->ABCF A",
    "input": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (cos (* (/ angle 180.0) PI))) 2.0))",
    "output": "(+ (pow (* a (sin (* (/ angle 180.0) PI))) 2.0) (pow (* b (- (* (cos -1.0) (cos (fma (/ angle 180.0) PI -1.0))) (* (sin 1.0) (sin (fma (/ angle 180.0) PI -1.0))))) 2.0))",
    "output_parens": 19,
    "avg_bits_err_input": 20.55448105433022,
    "avg_bits_err_output": 20.54906061184207,
    "avg_bits_err_improve": 0.005420442488151878,
    "time": 67593.91479492188,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "a parameter of renormalized beta distribution",
    "input": "(* (- (/ (* m (- 1.0 m)) v) 1.0) m)",
    "output": "(- (- (+ m (* m (/ (- m (* m m)) v))) m) m)",
    "output_parens": 7,
    "avg_bits_err_input": 0.17812744375108172,
    "avg_bits_err_output": 0.17330884514006076,
    "avg_bits_err_improve": 0.004818598611020963,
    "time": 35314.7216796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry B",
    "input": "(/ (- 1.0 (* (tan x) (tan x))) (+ 1.0 (* (tan x) (tan x))))",
    "output": "(/ (- 1.0 (pow (tan x) 2.0)) (fma (tan x) (tan x) 1.0))",
    "output_parens": 7,
    "avg_bits_err_input": 0.3237485555484409,
    "avg_bits_err_output": 0.3222196541248029,
    "avg_bits_err_improve": 0.001528901423637985,
    "time": 58986.3271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trigonometry A",
    "input": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output": "(/ (* e (sin v)) (+ 1.0 (* e (cos v))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.13684436093777044,
    "avg_bits_err_output": 0.13684436093777044,
    "avg_bits_err_improve": 0,
    "time": 32032.22216796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Spherical law of cosines",
    "input": "(* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R)",
    "output": "(* (acos (fma (sin phi1) (sin phi2) (* (cos phi2) (* (cos phi1) (cos (- lambda2 lambda1)))))) R)",
    "output_parens": 11,
    "avg_bits_err_input": 16.749913700046047,
    "avg_bits_err_output": 16.741738043275998,
    "avg_bits_err_improve": 0.0081756567700495,
    "time": 43561.506103515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 52.24080678802017,
    "avg_bits_err_output": 45.87992377244884,
    "avg_bits_err_improve": 6.360883015571332,
    "time": 36426.254638671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))) (* a (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma a (* c -4.0) (* b b)))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 28.163699049436563,
    "avg_bits_err_output": 27.485440514355265,
    "avg_bits_err_improve": 0.678258535081298,
    "time": 25955.01123046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (* a (* (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))) (* c -4.0))) (- (* b (* b (/ 1.0 (sqrt (fma b b (* a (* c -4.0))))))) b)) (+ a a))",
    "output_parens": 19,
    "avg_bits_err_input": 43.55315757788315,
    "avg_bits_err_output": 39.328079124984285,
    "avg_bits_err_improve": 4.225078452898863,
    "time": 24725.060546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quadratic roots, full range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.47102289653146,
    "avg_bits_err_output": 34.47102289653146,
    "avg_bits_err_improve": 0,
    "time": 26321.544677734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Midpoint on a great circle",
    "input": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output": "(+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (fma (cos phi2) (cos (- lambda1 lambda2)) (cos phi1))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.8806065906188587,
    "avg_bits_err_output": 0.8752695520203244,
    "avg_bits_err_improve": 0.005337038598534294,
    "time": 49487.597900390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function from Lakshay Garg",
    "input": "(- (/ 2.0 (+ 1.0 (exp (* -2.0 x)))) 1.0)",
    "output": "(log (exp (+ (/ 2.0 (+ 2.0 (expm1 (* -2.0 x)))) -1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 28.599473414399565,
    "avg_bits_err_output": 28.596651639488115,
    "avg_bits_err_improve": 0.002821774911449637,
    "time": 9109.873291015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic tangent",
    "input": "(/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x))))",
    "output": "(/ (- (expm1 x) (expm1 (- x))) (+ (exp x) (exp (- x))))",
    "output_parens": 9,
    "avg_bits_err_input": 57.93453049033198,
    "avg_bits_err_output": 1.1954293234384918,
    "avg_bits_err_improve": 56.73910116689349,
    "time": 22321.957763671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic sine",
    "input": "(/ (- (exp x) (exp (- x))) 2.0)",
    "output": "(/ (- (expm1 x) (expm1 (- x))) 2.0)",
    "output_parens": 5,
    "avg_bits_err_input": 57.90369207397151,
    "avg_bits_err_output": 0.009625,
    "avg_bits_err_improve": 57.89406707397151,
    "time": 5781.408447265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic secant",
    "input": "(/ 2.0 (+ (exp x) (exp (- x))))",
    "output": "(/ 2.0 (+ (+ (expm1 (- x)) (expm1 x)) 2.0))",
    "output_parens": 6,
    "avg_bits_err_input": 0.005948120312590145,
    "avg_bits_err_output": 0.006,
    "avg_bits_err_improve": -5.187968740985507e-05,
    "time": 5569.15283203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-cosine",
    "input": "(log (+ x (sqrt (- (* x x) 1.0))))",
    "output": "(log (- (+ x (* x (* x (/ 1.0 (sqrt (fma x x -1.0)))))) (/ 1.0 (sqrt (fma x x -1.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 31.68993242895233,
    "avg_bits_err_output": 21.246043434127465,
    "avg_bits_err_improve": 10.443888994824864,
    "time": 10591.01904296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)tangent",
    "input": "(* (/ 1.0 2.0) (log (/ (+ 1.0 x) (- 1.0 x))))",
    "output": "(log (* (/ (+ x 1.0) (- 1.0 x)) (/ 1.0 (sqrt (/ (+ x 1.0) (- 1.0 x))))))",
    "output_parens": 10,
    "avg_bits_err_input": 58.502049688533155,
    "avg_bits_err_output": 58.55870920291792,
    "avg_bits_err_improve": -0.05665951438476213,
    "time": 87611.66748046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arc-(co)secant",
    "input": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output": "(log (+ (/ 1.0 x) (/ (sqrt (- 1.0 (* x x))) x)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.003625,
    "avg_bits_err_output": 0.003625,
    "avg_bits_err_improve": 0,
    "time": 3325.591552734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example from Robby",
    "input": "(fabs (+ (* (* ew (sin t)) (cos (atan (/ (/ eh ew) (tan t))))) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output": "(fabs (+ (* (* ew (cos (atan (/ (/ eh ew) (tan t))))) (sin t)) (* (* eh (cos t)) (sin (atan (/ (/ eh ew) (tan t)))))))",
    "output_parens": 18,
    "avg_bits_err_input": 0.131875,
    "avg_bits_err_output": 0.132,
    "avg_bits_err_improve": -0.000125000000000014,
    "time": 65159.629150390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Example 2 from Robby",
    "input": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output": "(fabs (- (* (* ew (cos t)) (cos (atan (/ (* (- eh) (tan t)) ew)))) (* (* eh (sin t)) (sin (atan (/ (* (- eh) (tan t)) ew))))))",
    "output_parens": 20,
    "avg_bits_err_input": 0.12189624062518029,
    "avg_bits_err_output": 0.12189624062518029,
    "avg_bits_err_improve": 0,
    "time": 50597.77783203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Equirectangular approximation to distance on a great circle",
    "input": "(* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2.0)))) (* (- phi1 phi2) (- phi1 phi2)))))",
    "output": "(* R (hypot (fma lambda2 (- (cos (/ (+ phi1 phi2) 2.0))) (- (* lambda1 (- (cos (/ (+ phi1 phi2) 2.0)))))) (- phi1 phi2)))",
    "output_parens": 14,
    "avg_bits_err_input": 39.14955991869289,
    "avg_bits_err_output": 3.616625439626638,
    "avg_bits_err_improve": 35.53293447906625,
    "time": 44251.625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Eccentricity of an ellipse",
    "input": "(sqrt (fabs (/ (- (* a a) (* b b)) (* a a))))",
    "output": "(sqrt (fabs (/ (* (- a b) (+ a b)) (* a a))))",
    "output_parens": 7,
    "avg_bits_err_input": 15.030912421810992,
    "avg_bits_err_output": 15.03358332906923,
    "avg_bits_err_improve": -0.0026709072582384863,
    "time": 5420.872314453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Destination given bearing on a great circle",
    "input": "(+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta)))))))))",
    "output": "(+ lambda1 (atan2 (* (sin theta) (* (sin delta) (cos phi1))) (log (exp (- (cos delta) (* (sin phi1) (sin (asin (fma (cos delta) (sin phi1) (* (cos theta) (* (sin delta) (cos phi1))))))))))))",
    "output_parens": 23,
    "avg_bits_err_input": 0.1634541690030238,
    "avg_bits_err_output": 0.19565923017928477,
    "avg_bits_err_improve": -0.03220506117626096,
    "time": 49104.515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, wide range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (fma b (+ -1.0 (* b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))))) (* a (* (* c -3.0) (/ 1.0 (sqrt (fma b b (* a (* c -3.0)))))))) (* 3.0 a))",
    "output_parens": 18,
    "avg_bits_err_input": 52.281141624971596,
    "avg_bits_err_output": 45.885822378605646,
    "avg_bits_err_improve": 6.3953192463659505,
    "time": 23261.771484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, narrow range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (* (fma b b (* c (* a -3.0))) (* (fma c (* a -3.0) (* b b)) (/ 1.0 (fma c (* a -3.0) (* b b))))))) (* 3.0 a))",
    "output_parens": 17,
    "avg_bits_err_input": 28.35602565152832,
    "avg_bits_err_output": 28.329384706914844,
    "avg_bits_err_improve": 0.02664094461347588,
    "time": 35258.628662109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical, medium range",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (* c (* (* a -3.0) (/ 1.0 (sqrt (fma c (* a -3.0) (* b b)))))) (* b (log (+ 1.0 (expm1 (fma b (/ 1.0 (sqrt (fma b b (* a (* c -3.0))))) -1.0)))))) (* 3.0 a))",
    "output_parens": 21,
    "avg_bits_err_input": 43.60290176876151,
    "avg_bits_err_output": 39.31914102546381,
    "avg_bits_err_improve": 4.283760743297705,
    "time": 45640.993896484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Cubic critical",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 3.0 a) c)))) (* 3.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.48780767584708,
    "avg_bits_err_output": 34.48780767584708,
    "avg_bits_err_improve": 0,
    "time": 23317.494873046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bearing on a great circle",
    "input": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2)))))",
    "output": "(atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (sin phi1) (* (cos phi2) (cos (- lambda1 lambda2))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.212609150528868,
    "avg_bits_err_output": 13.213732867009607,
    "avg_bits_err_improve": -0.0011237164807393896,
    "time": 48599.955078125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote C",
    "input": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output": "(- (/ x (+ x 1.0)) (/ (+ x 1.0) (- x 1.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 29.079432701395508,
    "avg_bits_err_output": 29.079432701395508,
    "avg_bits_err_improve": 0,
    "time": 58889.5302734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote B",
    "input": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output": "(+ (/ 1.0 (- x 1.0)) (/ x (+ x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.0115,
    "avg_bits_err_output": 0.0115,
    "avg_bits_err_improve": 0,
    "time": 3985.656005859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Asymptote A",
    "input": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output": "(- (/ 1.0 (+ x 1.0)) (/ 1.0 (- x 1.0)))",
    "output_parens": 5,
    "avg_bits_err_input": 14.383260165823431,
    "avg_bits_err_output": 14.383260165823431,
    "avg_bits_err_improve": 0,
    "time": 27734.9248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle b",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (- (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -5e+212) (/ (- (* (sqrt (- F)) (sqrt (* (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))) (* (- (* C (* A 8.0)) (* 2.0 (pow B 2.0))) (/ (- F) (- F))))))) (- (pow B 2.0) (* A (* 4.0 C)))) (if (<= F -1.65e-307) (/ (- (* (sqrt (- (* 2.0 (pow B 2.0)) (* A (* C 8.0)))) (sqrt (* F (+ A (- C (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* 4.0 (* A C)))) (/ (- (* (sqrt (- (* 8.0 (* A C)) (* 2.0 (pow B 2.0)))) (sqrt (* F (- (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))) (+ A C)))))) (- (pow B 2.0) (* 4.0 (* A C))))))",
    "output_parens": 75,
    "avg_bits_err_input": 52.48032292019452,
    "avg_bits_err_output": 48.23590118798372,
    "avg_bits_err_improve": 4.244421732210796,
    "time": 49626.6181640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle angle",
    "input": "(* 180.0 (/ (atan (* (/ 1.0 B) (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))))) PI))",
    "output": "(* 180.0 (/ (atan (- (+ 1.0 (* (- (- C A) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0)))) (/ 1.0 B))) 1.0)) PI))",
    "output_parens": 14,
    "avg_bits_err_input": 29.428998426865522,
    "avg_bits_err_output": 29.431695402107948,
    "avg_bits_err_improve": -0.0026969752424257365,
    "time": 62745.6884765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ABCF->ab-angle a",
    "input": "(/ (- (sqrt (* (* 2.0 (* (- (pow B 2.0) (* (* 4.0 A) C)) F)) (+ (+ A C) (sqrt (+ (pow (- A C) 2.0) (pow B 2.0))))))) (- (pow B 2.0) (* (* 4.0 A) C)))",
    "output": "(if (<= F -2.35e-284) (/ (- (* (* (sqrt (- F)) (sqrt (- (* A (* C 4.0)) (pow B 2.0)))) (sqrt (* 2.0 (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0))))))))) (- (pow B 2.0) (* 4.0 (* C A)))) (/ (- (* (sqrt (+ C (+ A (sqrt (+ (pow B 2.0) (pow (- A C) 2.0)))))) (* (sqrt (- (pow B 2.0) (* C (* A 4.0)))) (sqrt (* 2.0 F))))) (- (pow B 2.0) (* 4.0 (* C A)))))",
    "output_parens": 49,
    "avg_bits_err_input": 52.40359133940805,
    "avg_bits_err_output": 46.91427005891326,
    "avg_bits_err_improve": 5.489321280494792,
    "time": 48783.454833984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, zero discriminant",
    "input": "(cbrt (/ g (* 2.0 a)))",
    "output": "(cbrt (/ g (* 2.0 a)))",
    "output_parens": 3,
    "avg_bits_err_input": 15.752350087011,
    "avg_bits_err_output": 15.752350087011,
    "avg_bits_err_improve": 0,
    "time": 54874.046142578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, positive discriminant",
    "input": "(+ (cbrt (* (/ 1.0 (* 2.0 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h)))))))",
    "output": "(if (<= g -1e+154) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- (+ g h))) (sqrt (- h g))))) (cbrt (- (* (sqrt (- (+ g h))) (sqrt (- h g))) g)))) (if (<= g -1e-305) (+ (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (* (cbrt (- (sqrt (- (* g g) (* h h))) g)) (/ (cbrt (/ 1.0 (+ a a))) (cbrt (- (sqrt (- (* g g) (* h h))) g))))) (cbrt (* (/ 1.0 (* 2.0 a)) (- (- g) (sqrt (- (* g g) (* h h))))))) (if (<= g 1e-74) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (+ (+ (sqrt (- (* g g) (* h h))) (- 1.0 g)) -1.0)))) (if (<= g 5e+139) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (sqrt (- (* g g) (* h h))))) (cbrt (* (- (sqrt (- (* g g) (* h h))) g) (* (- (sqrt (- (* g g) (* h h))) g) (/ 1.0 (fma (sqrt (- g h)) (sqrt (+ g h)) (- g)))))))) (* (cbrt (/ 1.0 (+ a a))) (+ (cbrt (- (- g) (* (sqrt (- g h)) (sqrt (+ g h))))) (cbrt (- (* (sqrt (- g h)) (sqrt (+ g h))) g))))))))",
    "output_parens": 138,
    "avg_bits_err_input": 35.99520121547135,
    "avg_bits_err_output": 11.443018034334685,
    "avg_bits_err_improve": 24.552183181136662,
    "time": 71640.25463867188,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "2-ancestry mixing, negative discriminant",
    "input": "(* 2.0 (cos (+ (/ (* 2.0 PI) 3.0) (/ (acos (/ (- g) h)) 3.0))))",
    "output": "(* 2.0 (cos (+ (- PI (/ (* 2.0 PI) 3.0)) (- PI (/ (acos (/ (- g) h)) 3.0)))))",
    "output_parens": 11,
    "avg_bits_err_input": 0.9882127828190815,
    "avg_bits_err_output": 0.02641524101186092,
    "avg_bits_err_improve": 0.9617975418072207,
    "time": 18309.595703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of sum of exps",
    "input": "(/ (exp a) (+ (exp a) (exp b)))",
    "output": "(/ (exp a) (+ (exp a) (exp b)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.6085433791303934,
    "avg_bits_err_output": 0.6085433791303934,
    "avg_bits_err_improve": 0,
    "time": 2273.6376953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Quotient of products",
    "input": "(/ (* a1 a2) (* b1 b2))",
    "output": "(/ (* a1 a2) (* b1 b2))",
    "output_parens": 3,
    "avg_bits_err_input": 11.32111551295781,
    "avg_bits_err_output": 11.32111551295781,
    "avg_bits_err_improve": 0,
    "time": 6841.893310546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic regression 2",
    "input": "(- (log (+ 1.0 (exp x))) (* x y))",
    "output": "(- (log1p (exp x)) (* x y))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4924154457670652,
    "avg_bits_err_output": 0.459125,
    "avg_bits_err_improve": 0.03329044576706519,
    "time": 9945.973388671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Hyperbolic arcsine",
    "input": "(log (+ x (sqrt (+ (* x x) 1.0))))",
    "output": "(log1p (+ x (+ (hypot 1.0 x) -1.0)))",
    "output_parens": 4,
    "avg_bits_err_input": 53.03431540410139,
    "avg_bits_err_output": 15.351982395885328,
    "avg_bits_err_improve": 37.68233300821606,
    "time": 31813.482177734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Exp of sum of logs",
    "input": "(exp (+ (log a) (log b)))",
    "output": "(* a b)",
    "output_parens": 1,
    "avg_bits_err_input": 5.650665790699693,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 5.650665790699693,
    "time": 2716.857421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "arccos",
    "input": "(* 2.0 (atan (sqrt (/ (- 1.0 x) (+ 1.0 x)))))",
    "output": "(* 2.0 (atan (expm1 (log1p (sqrt (/ (- 1.0 x) (+ 1.0 x)))))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.0145,
    "avg_bits_err_output": 0.018125,
    "avg_bits_err_improve": -0.003624999999999998,
    "time": 6405.9990234375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rump's expression from Stadtherr's award speech",
    "input": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output": "(+ (+ (+ (* 333.75 (pow y 6.0)) (* (* x x) (- (- (- (* (* (* (* 11.0 x) x) y) y) (pow y 6.0)) (* 121.0 (pow y 4.0))) 2.0))) (* 5.5 (pow y 8.0))) (/ x (* 2.0 y)))",
    "output_parens": 21,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 58.136380241123696,
    "avg_bits_err_improve": 0,
    "time": 1304.48828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's TurbineBenchmark",
    "input": "(- (- (+ 3.0 (/ 2.0 (* r r))) (/ (* (* 0.125 (- 3.0 (* 2.0 v))) (* (* (* w w) r) r)) (- 1.0 v))) 4.5)",
    "output": "(if (<= w -6e-127) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- 0.375 (* v 0.25)) (* w (* (* w r) r))) (- 1.0 v))) (if (<= w 3e-39) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* r (* (* w r) (* w (- 0.375 (* v 0.25))))) (- 1.0 v))) (- (+ (/ 2.0 (* r r)) -1.5) (/ (* (- (* w (fma w (* w (/ (* r r) w)) 0.0))) (- (* v 0.25) 0.375)) (- 1.0 v)))))",
    "output_parens": 43,
    "avg_bits_err_input": 12.898187306960708,
    "avg_bits_err_output": 7.460065568406419,
    "avg_bits_err_improve": 5.438121738554289,
    "time": 37174.12353515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's FloatVsDoubleBenchmark",
    "input": "(+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2.0 x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) (- (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)) 3.0)) (* (* x1 x1) (- (* 4.0 (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0))) 6.0))) (+ (* x1 x1) 1.0)) (* (* (* 3.0 x1) x1) (/ (- (+ (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))) (* (* x1 x1) x1)) x1) (* 3.0 (/ (- (- (* (* 3.0 x1) x1) (* 2.0 x2)) x1) (+ (* x1 x1) 1.0)))))",
    "output": "(+ (fma (fma x1 x1 1.0) (+ (* x1 (* x1 -6.0)) (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) (* x1 (+ (+ (* (/ (+ (fma x1 (* x1 3.0) x2) (- x2 x1)) (fma x1 x1 1.0)) 2.0) -6.0) (* x1 4.0))))) (* x1 (+ (* x1 x1) (* x1 (* (/ (- (fma x1 (* x1 3.0) (* 2.0 x2)) x1) (fma x1 x1 1.0)) 3.0))))) (+ x1 (fma 3.0 (/ (- (- (* x1 (* x1 3.0)) (* 2.0 x2)) x1) (fma x1 x1 1.0)) x1)))",
    "output_parens": 44,
    "avg_bits_err_input": 0.5135698396923305,
    "avg_bits_err_output": 0.27057772221743576,
    "avg_bits_err_improve": 0.24299211747489474,
    "time": 84809.9931640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's DopplerBench",
    "input": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output": "(/ (* (- t1) v) (* (+ t1 u) (+ t1 u)))",
    "output_parens": 6,
    "avg_bits_err_input": 17.915628747042692,
    "avg_bits_err_output": 17.915628747042692,
    "avg_bits_err_improve": 0,
    "time": 53734.2880859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rosa's Benchmark",
    "input": "(- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x)))",
    "output": "(- x (* x (+ (* (* x x) 0.12900613773279798) 0.045070341448628)))",
    "output_parens": 5,
    "avg_bits_err_input": 0.25346936093777045,
    "avg_bits_err_output": 0.1125968046888522,
    "avg_bits_err_improve": 0.14087255624891826,
    "time": 18799.2734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Radioactive exchange between two surfaces",
    "input": "(- (pow x 4.0) (pow y 4.0))",
    "output": "(- (pow x 4.0) (pow y 4.0))",
    "output_parens": 3,
    "avg_bits_err_input": 0.0025,
    "avg_bits_err_output": 0.0025,
    "avg_bits_err_improve": 0,
    "time": 5358.834228515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, B",
    "input": "(* (* (/ PI 2.0) (/ 1.0 (- (* b b) (* a a)))) (- (/ 1.0 a) (/ 1.0 b)))",
    "output": "(* (/ PI 2.0) (* (/ 1.0 (* (- b a) (+ b a))) (- (/ 1.0 a) (/ 1.0 b))))",
    "output_parens": 10,
    "avg_bits_err_input": 14.770976513200347,
    "avg_bits_err_output": 9.749576094699956,
    "avg_bits_err_improve": 5.0214004185003915,
    "time": 56005.56982421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "NMSE Section 6.1 mentioned, A",
    "input": "(/ (- (* (+ 1.0 (/ 1.0 eps)) (exp (- (* (- 1.0 eps) x)))) (* (- (/ 1.0 eps) 1.0) (exp (- (* (+ 1.0 eps) x))))) 2.0)",
    "output": "(/ (+ (- (* (/ 1.0 eps) (+ (- (exp (+ (- x) (- (* eps x))))) (exp (- (* eps x) x)))) (- (log (exp (exp (- (fma eps x x))))))) (exp (- (* eps x) x))) 2.0)",
    "output_parens": 24,
    "avg_bits_err_input": 29.453644125620823,
    "avg_bits_err_output": 1.0094043261655115,
    "avg_bits_err_improve": 28.44423979945531,
    "time": 34106.661376953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 3",
    "input": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output": "(- 1.0 (/ 1.0 (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 14,
    "avg_bits_err_input": 0.011625,
    "avg_bits_err_output": 0.011625,
    "avg_bits_err_improve": 0,
    "time": 11233.06787109375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 2",
    "input": "(/ (+ 1.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))) (+ 2.0 (* (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))) (- 2.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t)))))))",
    "output": "(/ (+ 1.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))) (+ 2.0 (- 4.0 (* (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))) (- 4.0 (/ (/ 2.0 t) (+ 1.0 (/ 1.0 t))))))))",
    "output_parens": 25,
    "avg_bits_err_input": 0.01625,
    "avg_bits_err_output": 0.01564624062518029,
    "avg_bits_err_improve": 0.0006037593748197088,
    "time": 62068.98388671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p13 Example 1",
    "input": "(/ (+ 1.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output": "(/ (+ 1.0 (- 1.0 (- (+ 1.0 (/ (+ t t) (+ 1.0 t))) (* (/ (+ t t) (+ 1.0 t)) (+ 1.0 (/ (+ t t) (+ 1.0 t))))))) (+ 2.0 (* (/ (* 2.0 t) (+ 1.0 t)) (/ (* 2.0 t) (+ 1.0 t)))))",
    "output_parens": 24,
    "avg_bits_err_input": 0.03925,
    "avg_bits_err_output": 0.041688721875540874,
    "avg_bits_err_improve": -0.0024387218755408738,
    "time": 14054.29248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Warwick Tucker's Validated Numerics",
    "input": "(+ (+ (+ (* 333.75 (pow 33096.0 6.0)) (* (* 77617.0 77617.0) (+ (+ (+ (* (* 11.0 (* 77617.0 77617.0)) (* 33096.0 33096.0)) (- (pow 33096.0 6.0))) (* -121.0 (pow 33096.0 4.0))) -2.0))) (* 5.5 (pow 33096.0 8.0))) (/ 77617.0 (* 2.0 33096.0)))",
    "output": "-0.8273960599468214",
    "output_parens": 0,
    "avg_bits_err_input": 58.136380241123696,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 58.136380241123696,
    "time": 3184.843017578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper, rewritten",
    "input": "(- (* 9.0 (pow x 4.0)) (* (* y y) (- (* y y) 2.0)))",
    "output": "(fma (- 2.0 (* y y)) (* y y) (* 9.0 (pow x 4.0)))",
    "output_parens": 6,
    "avg_bits_err_input": 61.99859042973555,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 61.99859042973555,
    "time": 4130.379638671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "From Rump in a 1983 paper",
    "input": "(+ (- (* 9.0 (pow x 4.0)) (pow y 4.0)) (* 2.0 (* y y)))",
    "output": "(+ (+ (- (fma 9.0 (pow x 4.0) 1.0) (pow y 4.0)) -1.0) (* 2.0 (* y y)))",
    "output_parens": 8,
    "avg_bits_err_input": 52,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 52,
    "time": 4759.602294921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, B",
    "input": "(/ 10.0 (- 1.0 (* x x)))",
    "output": "(/ 10.0 (- (fma x x -1.0)))",
    "output_parens": 3,
    "avg_bits_err_input": 7.801530994643082,
    "avg_bits_err_output": 0.243,
    "avg_bits_err_improve": 7.558530994643082,
    "time": 54820.368896484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=5",
    "input": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output": "(- (pow (+ x eps) 5.0) (pow x 5.0))",
    "output_parens": 4,
    "avg_bits_err_input": 7.8289289514031815,
    "avg_bits_err_output": 7.8289289514031815,
    "avg_bits_err_improve": 0,
    "time": 29514.186279296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4b, n=2",
    "input": "(- (pow (+ x eps) 2.0) (pow x 2.0))",
    "output": "(* (+ eps (+ x x)) eps)",
    "output_parens": 3,
    "avg_bits_err_input": 16.614361036599533,
    "avg_bits_err_output": 0.01275,
    "avg_bits_err_improve": 16.601611036599532,
    "time": 15085.140869140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 1",
    "input": "(* (cos x) (exp (* 10.0 (* x x))))",
    "output": "(* (/ (pow (exp (* x x)) 10.0) (cos x)) (/ (- (- (* (cos (- PI x)) (cos (- PI x))) -1.0) (pow (sin x) 2.0)) 2.0))",
    "output_parens": 16,
    "avg_bits_err_input": 3.564018320784271,
    "avg_bits_err_output": 3.0756645961025098,
    "avg_bits_err_improve": 0.4883537246817613,
    "time": 35394.848388671875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "x / (x^2 + 1)",
    "input": "(/ x (+ (* x x) 1.0))",
    "output": "(/ x (+ (* x x) 1.0))",
    "output_parens": 3,
    "avg_bits_err_input": 14.876132882244992,
    "avg_bits_err_output": 14.876132882244992,
    "avg_bits_err_improve": 0,
    "time": 21053.04833984375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "simple fma test",
    "input": "(- (fma x y z) (+ 1.0 (+ (* x y) z)))",
    "output": "-1.0",
    "output_parens": 0,
    "avg_bits_err_input": 44.65687027405402,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 44.65687027405402,
    "time": 5660.82470703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ln(1 + x)",
    "input": "(log (+ 1.0 x))",
    "output": "(log1p x)",
    "output_parens": 1,
    "avg_bits_err_input": 39.03638582326905,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 39.03588582326905,
    "time": 4767.15966796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test2",
    "input": "(- (* 1.7e+308 t) 1.7e+308)",
    "output": "(fma 1.7e+308 t -1.7e+308)",
    "output_parens": 1,
    "avg_bits_err_input": 64,
    "avg_bits_err_output": 0.299375,
    "avg_bits_err_improve": 63.700625,
    "time": 4579.115966796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "fma_test1",
    "input": "(+ (* (+ 1.0 (* t 2e-16)) (+ 1.0 (* t 2e-16))) (- -1.0 (* 2.0 (* t 2e-16))))",
    "output": "(* (* t t) 4e-32)",
    "output_parens": 2,
    "avg_bits_err_input": 61.84325519148306,
    "avg_bits_err_output": 0.4221584593805892,
    "avg_bits_err_improve": 61.42109673210247,
    "time": 21709.306640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r2)",
    "input": "(/ (- (- b) (sqrt (- (* b b) (* 4.0 (* a c))))) (* 2.0 a))",
    "output": "(/ (- (- b) (sqrt (+ (fma a (* c -4.0) (* b b)) (* a (* (- 4.0 (* a (/ 4.0 a))) c))))) (+ a a))",
    "output_parens": 14,
    "avg_bits_err_input": 35.01359457323689,
    "avg_bits_err_output": 35.049550098625275,
    "avg_bits_err_improve": -0.03595552538838831,
    "time": 27120.68212890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "The quadratic formula (r1)",
    "input": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output": "(/ (+ (- b) (sqrt (- (* b b) (* (* 4.0 a) c)))) (* 2.0 a))",
    "output_parens": 9,
    "avg_bits_err_input": 34.47102289653146,
    "avg_bits_err_output": 34.47102289653146,
    "avg_bits_err_improve": 0,
    "time": 28203.71826171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Rectangular parallelepiped of dimension a×b×c",
    "input": "(* 2.0 (+ (+ (* 1.0 (/ 1.0 9.0)) (* (/ 1.0 9.0) (/ 1.0 9.0))) (* (/ 1.0 9.0) 1.0)))",
    "output": "0.4691358024691358",
    "output_parens": 0,
    "avg_bits_err_input": 0,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 0,
    "time": 2682.833251953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan's exp quotient",
    "input": "(/ (- (exp x) 1.0) x)",
    "output": "(/ (expm1 x) x)",
    "output_parens": 2,
    "avg_bits_err_input": 40.386030501860056,
    "avg_bits_err_output": 0.011,
    "avg_bits_err_improve": 40.37503050186005,
    "time": 10288.01953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Kahan p9 Example",
    "input": "(/ (* (- x y) (+ x y)) (+ (* x x) (* y y)))",
    "output": "(/ (- (* x x) (* y y)) (fma x x (* y y)))",
    "output_parens": 6,
    "avg_bits_err_input": 19.900819241230433,
    "avg_bits_err_output": 19.901463197678645,
    "avg_bits_err_improve": -0.000643956448211469,
    "time": 5770.622802734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p6",
    "input": "(* (+ a (+ b (+ c d))) 2.0)",
    "output": "(* (+ b (+ c (+ a d))) 2.0)",
    "output_parens": 4,
    "avg_bits_err_input": 3.6717340797998848,
    "avg_bits_err_output": 0,
    "avg_bits_err_improve": 3.6717340797998848,
    "time": 5300.06494140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression, p14",
    "input": "(* a (+ (+ b c) d))",
    "output": "(fma d a (* a (+ b c)))",
    "output_parens": 3,
    "avg_bits_err_input": 0.04275,
    "avg_bits_err_output": 0.0005,
    "avg_bits_err_improve": 0.04225,
    "time": 6113.0341796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 4, p15",
    "input": "(* (+ a b) (+ a b))",
    "output": "(+ (* b (+ b (+ a a))) (* a a))",
    "output_parens": 5,
    "avg_bits_err_input": 0.02177124062518029,
    "avg_bits_err_output": 0.01025,
    "avg_bits_err_improve": 0.01152124062518029,
    "time": 4163.09423828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 3, p15",
    "input": "(+ (* x (* x x)) (* x x))",
    "output": "(* (+ x 1.0) (* x x))",
    "output_parens": 3,
    "avg_bits_err_input": 0.013375,
    "avg_bits_err_output": 0.02254248125036058,
    "avg_bits_err_improve": -0.00916748125036058,
    "time": 4654.3056640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 2, p15",
    "input": "(+ x (* x x))",
    "output": "(+ x (* x x))",
    "output_parens": 2,
    "avg_bits_err_input": 0.001125,
    "avg_bits_err_output": 0.001125,
    "avg_bits_err_improve": 0,
    "time": 2634.97607421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Expression 1, p15",
    "input": "(+ (+ (+ (+ e d) c) b) a)",
    "output": "(+ (+ e d) (+ a (+ c b)))",
    "output_parens": 4,
    "avg_bits_err_input": 0.4040216171924582,
    "avg_bits_err_output": 0.25875,
    "avg_bits_err_improve": 0.14527161719245824,
    "time": 7363.73291015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Mentioned, A",
    "input": "(- 1.0 (cos x))",
    "output": "(- 1.0 (cos x))",
    "output_parens": 2,
    "avg_bits_err_input": 29.880607605573434,
    "avg_bits_err_output": 29.880607605573434,
    "avg_bits_err_improve": 0,
    "time": 9690.13525390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4d",
    "input": "(- x (sqrt (- (* x x) eps)))",
    "output": "(+ (- x (* x (* x (sqrt (/ 1.0 (- (* x x) eps)))))) (* eps (sqrt (/ 1.0 (- (* x x) eps)))))",
    "output_parens": 13,
    "avg_bits_err_input": 24.61180531814241,
    "avg_bits_err_output": 22.17534061591351,
    "avg_bits_err_improve": 2.4364647022289,
    "time": 19803.389404296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "ENA, Section 1.4, Exercise 4a",
    "input": "(/ (- x (sin x)) (tan x))",
    "output": "(/ (+ (- x (sin x)) (fma (- (- (- (+ (+ 1.0 (* (sin x) (/ 1.0 (sin x)))) (sin x)) 1.0) (sin x))) (sin x) (sin x))) (tan x))",
    "output_parens": 19,
    "avg_bits_err_input": 30.371839472538547,
    "avg_bits_err_output": 30.357480350658843,
    "avg_bits_err_improve": 0.014359121879703451,
    "time": 44615.795166015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Difference of squares",
    "input": "(- (* a a) (* b b))",
    "output": "(* (- a b) (+ a b))",
    "output_parens": 3,
    "avg_bits_err_input": 0.006600919365257201,
    "avg_bits_err_output": 0.000875,
    "avg_bits_err_improve": 0.005725919365257201,
    "time": 3841.479248046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Compound Interest",
    "input": "(* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)))",
    "output": "(if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 0.0) (* 100.0 (/ (expm1 (* n (log1p (/ i n)))) (/ i n))) (if (<= (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n)) 2e-25) (* 100.0 (/ (- (pow (+ 1.0 (/ i n)) n) 1.0) (/ i n))) (* 100.0 (/ (- (pow (exp n) (log1p (/ i n))) 1.0) (/ i n)))))",
    "output_parens": 38,
    "avg_bits_err_input": 47.40229719414461,
    "avg_bits_err_output": 11.666882874922528,
    "avg_bits_err_improve": 35.73541431922208,
    "time": 53700.14599609375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, real part",
    "input": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output": "(/ (+ (* a c) (* b d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.114874810140503,
    "avg_bits_err_output": 26.114874810140503,
    "avg_bits_err_improve": 0,
    "time": 17479.374755859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Complex division, imag part",
    "input": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output": "(/ (- (* b c) (* a d)) (+ (* c c) (* d d)))",
    "output_parens": 7,
    "avg_bits_err_input": 26.210439665110023,
    "avg_bits_err_output": 26.210439665110023,
    "avg_bits_err_improve": 0,
    "time": 22201.82861328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, z",
    "input": "(+ (- 1.0 ux) (* ux maxCos))",
    "output": "(- (- (* ux (+ (fma ux (/ -1.0 ux) maxCos) 1.0)) ux) -1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.037,
    "avg_bits_err_output": 0.03183979560202489,
    "avg_bits_err_improve": 0.005160204397975106,
    "time": 13049.685791015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, y",
    "input": "(* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (log1p (expm1 (sin (* (+ uy uy) PI)))) (sqrt (+ (* ux (- (* ux maxCos) ux)) (- ux (* ux (+ (* (fma ux maxCos 1.0) (+ maxCos -1.0)) maxCos))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.701491355935918,
    "avg_bits_err_output": 0.5530378930417063,
    "avg_bits_err_improve": 13.148453462894212,
    "time": 33170.21533203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone, x",
    "input": "(* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (+ (- 1.0 ux) (* ux maxCos)) (+ (- 1.0 ux) (* ux maxCos))))))",
    "output": "(* (cos (* (+ uy uy) PI)) (sqrt (- (* ux (- (fma ux maxCos 1.0) ux)) (* ux (- (- (+ maxCos -1.0) (* ux maxCos)) (* (fma ux maxCos 1.0) (- maxCos)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 13.736653736431963,
    "avg_bits_err_output": 0.3430430572301832,
    "avg_bits_err_improve": 13.39361067920178,
    "time": 37188.697998046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "UniformSampleCone 2",
    "input": "(+ (+ (* (* (cos (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) xi) (* (* (sin (* (* uy 2.0) PI)) (sqrt (- 1.0 (* (* (* (- 1.0 ux) maxCos) ux) (* (* (- 1.0 ux) maxCos) ux))))) yi)) (* (* (* (- 1.0 ux) maxCos) ux) zi))",
    "output": "(fma (cos (* (/ 2.0 uy) (* PI (* uy uy)))) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) xi) (fma ux (* (- 1.0 ux) (* zi maxCos)) (* (sqrt (- 1.0 (* ux (* (* (- 1.0 ux) maxCos) (* ux (* (- 1.0 ux) maxCos)))))) (* (sin (* uy (* 2.0 PI))) yi))))",
    "output_parens": 34,
    "avg_bits_err_input": 0.34700233475199505,
    "avg_bits_err_output": 0.3510037388986812,
    "avg_bits_err_improve": -0.004001404146686149,
    "time": 75841.14404296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, sample surface normal, cosTheta",
    "input": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (cos (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI)))))) (sin (atan (* (/ alphay alphax) (tan (+ (* (* 2.0 PI) u1) (* 0.5 PI))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output": "(/ 1.0 (sqrt (+ 1.0 (/ (* (/ 1.0 (+ (/ (* (log (exp (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))))) (cos (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphax alphax)) (/ (* (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1))))))) (sin (atan (* (/ alphay alphax) (tan (* PI (+ 0.5 (* 2.0 u1)))))))) (* alphay alphay)))) u0) (- 1.0 u0)))))",
    "output_parens": 48,
    "avg_bits_err_input": 0.1992409899958042,
    "avg_bits_err_output": 0.19855754901838782,
    "avg_bits_err_improve": 0.0006834409774163774,
    "time": 67178.45751953125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_y",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (sin (* 6.28318530718 u2)))",
    "output": "(* (sqrt (* (/ u1 (- 1.0 u1)) (log (+ 1.0 (expm1 (* (/ u1 (- 1.0 u1)) (/ 1.0 (/ u1 (- 1.0 u1))))))))) (sin (* 6.28318530718 u2)))",
    "output_parens": 16,
    "avg_bits_err_input": 0.5327953589052737,
    "avg_bits_err_output": 0.48074280265106084,
    "avg_bits_err_improve": 0.0520525562542129,
    "time": 39536.625732421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Trowbridge-Reitz Sample, near normal, slope_x",
    "input": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (* 6.28318530718 u2)))",
    "output": "(* (sqrt (/ u1 (- 1.0 u1))) (cos (log (exp (* u2 -6.28318530718)))))",
    "output_parens": 8,
    "avg_bits_err_input": 0.3269974191468956,
    "avg_bits_err_output": 0.32886302070984624,
    "avg_bits_err_improve": -0.001865601562950625,
    "time": 38252.623779296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Sample trimmed logistic on [-pi, pi]",
    "input": "(* (- s) (log (- (/ 1.0 (+ (* u (- (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) (/ 1.0 (+ 1.0 (exp (/ PI s)))))) 1.0)))",
    "output": "(* (- s) (log (* (+ (/ 1.0 (+ (* u (/ 1.0 (+ 1.0 (exp (/ (- PI) s))))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (+ (- u) 1.0)))) -1.0) (- 1.0 (- (+ 1.0 (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))) (* (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) (/ 1.0 (+ (/ 1.0 (fma u (/ 1.0 (+ 1.0 (exp (/ (- PI) s)))) (* (/ 1.0 (+ 1.0 (exp (/ PI s)))) (- 1.0 u)))) -1.0))))))))",
    "output_parens": 67,
    "avg_bits_err_input": 0.33157011017982335,
    "avg_bits_err_output": 0.35258907512746773,
    "avg_bits_err_improve": -0.02101896494764438,
    "time": 45284.789306640625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic function",
    "input": "(/ 1.0 (+ 1.0 (exp (/ (- x) s))))",
    "output": "(exp (- (log1p (exp (/ (- x) s)))))",
    "output_parens": 6,
    "avg_bits_err_input": 0.05277137048278721,
    "avg_bits_err_output": 0.03487778576674878,
    "avg_bits_err_improve": 0.017893584716038434,
    "time": 16655.196044921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Logistic distribution",
    "input": "(/ (exp (/ (- (fabs x)) s)) (* (* s (+ 1.0 (exp (/ (- (fabs x)) s)))) (+ 1.0 (exp (/ (- (fabs x)) s)))))",
    "output": "(/ (exp (/ (- (fabs x)) s)) (+ s (* (exp (/ (- (fabs x)) s)) (* s (- (exp (/ (- (fabs x)) s)) -2.0)))))",
    "output_parens": 17,
    "avg_bits_err_input": 0.14704880041152202,
    "avg_bits_err_output": 0.13486820467252789,
    "avg_bits_err_improve": 0.012180595738994132,
    "time": 38711.774169921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Lanczos kernel",
    "input": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output": "(* (/ (sin (* (* x PI) tau)) (* (* x PI) tau)) (/ (sin (* x PI)) (* x PI)))",
    "output_parens": 11,
    "avg_bits_err_input": 0.6610546146344237,
    "avg_bits_err_output": 0.6610546146344237,
    "avg_bits_err_improve": 0,
    "time": 26285.978271484375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, sample_f, cosTheta",
    "input": "(+ 1.0 (* v (log (+ u (* (- 1.0 u) (exp (/ -2.0 v)))))))",
    "output": "(fma v (log (fma (- 1.0 u) (exp (/ -2.0 v)) u)) 1.0)",
    "output_parens": 6,
    "avg_bits_err_input": 0.1607340264575818,
    "avg_bits_err_output": 0.15984696442315724,
    "avg_bits_err_improve": 0.0008870620344245683,
    "time": 26521.7060546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, gamma for a refracted ray",
    "input": "(asin (/ h (sqrt (- (* eta eta) (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O))))))))",
    "output": "(asin (/ h (sqrt (fma eta eta (- (/ (* sinTheta_O sinTheta_O) (sqrt (- 1.0 (* sinTheta_O sinTheta_O)))))))))",
    "output_parens": 10,
    "avg_bits_err_input": 2.4787252456347293,
    "avg_bits_err_output": 2.4752293728899977,
    "avg_bits_err_improve": 0.0034958727447316207,
    "time": 48736.959228515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, upper",
    "input": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (* (* (sinh (/ 1.0 v)) 2.0) v))",
    "output": "(/ (* (exp (- (/ (* sinTheta_i sinTheta_O) v))) (/ (* cosTheta_i cosTheta_O) v)) (- (fma v (* (sinh (/ 1.0 v)) 2.0) 1.0) 1.0))",
    "output_parens": 13,
    "avg_bits_err_input": 0.44697668449907874,
    "avg_bits_err_output": 0.4506026912953059,
    "avg_bits_err_improve": -0.0036260067962271547,
    "time": 55603.4619140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "HairBSDF, Mp, lower",
    "input": "(exp (+ (+ (- (- (/ (* cosTheta_i cosTheta_O) v) (/ (* sinTheta_i sinTheta_O) v)) (/ 1.0 v)) 0.6931) (log (/ 1.0 (* 2.0 v)))))",
    "output": "(exp (- (- (+ (- (/ (* cosTheta_i cosTheta_O) v) (/ 1.0 v)) -1.3069) (/ (* sinTheta_i sinTheta_O) v)) (+ (log (+ v v)) -2.0)))",
    "output_parens": 13,
    "avg_bits_err_input": 0.1127232469302494,
    "avg_bits_err_output": 0.08795998530104407,
    "avg_bits_err_improve": 0.024763261629205335,
    "time": 35541.119873046875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "GTR1 distribution",
    "input": "(/ (- (* alpha alpha) 1.0) (* (* PI (log (* alpha alpha))) (+ 1.0 (* (* (- (* alpha alpha) 1.0) cosTheta) cosTheta))))",
    "output": "(/ (fma alpha alpha -1.0) (* (fma (fma alpha alpha -1.0) (* cosTheta cosTheta) 1.0) (log (pow alpha (* PI 2.0)))))",
    "output_parens": 9,
    "avg_bits_err_input": 0.46684617393572764,
    "avg_bits_err_output": 0.42267600312121223,
    "avg_bits_err_improve": 0.04417017081451541,
    "time": 34356.749267578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, upper",
    "input": "(* (* 3.0 s) (log (/ 1.0 (- 1.0 (/ (- u 0.25) 0.75)))))",
    "output": "(* -3.0 (* (log1p (- (/ (+ u -0.25) 0.75))) s))",
    "output_parens": 6,
    "avg_bits_err_input": 1.3155586273297748,
    "avg_bits_err_output": 0.5563197420272183,
    "avg_bits_err_improve": 0.7592388853025565,
    "time": 84574.52856445312,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, sample scattering profile, lower",
    "input": "(* s (log (/ 1.0 (- 1.0 (* 4.0 u)))))",
    "output": "(* (- (log1p (* u -4.0))) s)",
    "output_parens": 4,
    "avg_bits_err_input": 12.177074462391777,
    "avg_bits_err_output": 0.206875,
    "avg_bits_err_improve": 11.970199462391777,
    "time": 41326.61669921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Disney BSSRDF, PDF of scattering profile",
    "input": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* (* (* 2.0 PI) s) r)) (/ (* 0.75 (exp (/ (- r) (* 3.0 s)))) (* (* (* 6.0 PI) s) r)))",
    "output": "(+ (/ (* 0.25 (exp (/ (- r) s))) (* PI (* r (* s 2.0)))) (/ (* 0.75 (exp (/ (- r) (* s 3.0)))) (* s (* r (* PI (* (/ (/ r r) s) (* 6.0 s)))))))",
    "output_parens": 22,
    "avg_bits_err_input": 0.14136866499793704,
    "avg_bits_err_output": 0.1437861712449006,
    "avg_bits_err_improve": -0.0024175062469635467,
    "time": 56643.71826171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Curve intersection, scale width based on ribbon orientation",
    "input": "(+ (* (* (sin (* (- 1.0 u) normAngle)) (/ 1.0 (sin normAngle))) n0_i) (* (* (sin (* u normAngle)) (/ 1.0 (sin normAngle))) n1_i))",
    "output": "(fma (* (/ 1.0 (sin normAngle)) (sin (- normAngle (* normAngle u)))) n0_i (* (* (/ 1.0 (sin normAngle)) (sin (* u normAngle))) n1_i))",
    "output_parens": 13,
    "avg_bits_err_input": 0.9211949337940752,
    "avg_bits_err_output": 0.9102116113808001,
    "avg_bits_err_improve": 0.010983322413275154,
    "time": 46867.024658203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, normalization factor",
    "input": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 (sqrt PI)) (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta)) (exp (* (- cosTheta) cosTheta)))))",
    "output": "(/ 1.0 (+ (+ 1.0 c) (* (* (/ 1.0 PI) (/ (/ (sqrt (- (- 1.0 cosTheta) cosTheta)) cosTheta) (/ 1.0 (sqrt PI)))) (exp (* (- cosTheta) cosTheta)))))",
    "output_parens": 16,
    "avg_bits_err_input": 0.6968330656105688,
    "avg_bits_err_output": 0.5515420741842308,
    "avg_bits_err_improve": 0.14529099142633795,
    "time": 39009.4111328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_y",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (sin (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (* (log1p (- 0.0 u1)) (* (log1p (- u1)) (/ 1.0 (log1p (- u1))))))) (sin (* (* 2.0 PI) u2)))",
    "output_parens": 15,
    "avg_bits_err_input": 13.602537837612301,
    "avg_bits_err_output": 0.5129678881109178,
    "avg_bits_err_improve": 13.089569949501383,
    "time": 31646.852294921875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Sample, near normal, slope_x",
    "input": "(* (sqrt (- (log (- 1.0 u1)))) (cos (* (* 2.0 PI) u2)))",
    "output": "(* (sqrt (- (log1p (- u1)))) (cos (* (* 2.0 (* u2 PI)) (* (* 2.0 (* u2 PI)) (/ 1.0 (* 2.0 (* u2 PI)))))))",
    "output_parens": 15,
    "avg_bits_err_input": 13.650906166182418,
    "avg_bits_err_output": 0.313810117800173,
    "avg_bits_err_improve": 13.337096048382245,
    "time": 43639.701416015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax == alphay",
    "input": "(* (* (- alpha) alpha) (log (- 1.0 u0)))",
    "output": "(fma (* alpha (- alpha)) (log1p (- u0)) (* (fma (- alpha) alpha (* alpha alpha)) (* alpha (* (- alpha) (/ (log1p (- u0)) (* alpha (- alpha)))))))",
    "output_parens": 17,
    "avg_bits_err_input": 14.142857218853672,
    "avg_bits_err_output": 0.215375,
    "avg_bits_err_improve": 13.927482218853672,
    "time": 23781.65380859375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Beckmann Distribution sample, tan2theta, alphax != alphay, u1 <= 0.5",
    "input": "(/ (- (log (- 1.0 u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output": "(/ (- (log1p (- u0))) (+ (/ cos2phi (* alphax alphax)) (/ sin2phi (* alphay alphay))))",
    "output_parens": 9,
    "avg_bits_err_input": 12.704742806965966,
    "avg_bits_err_output": 0.5303217930246142,
    "avg_bits_err_improve": 12.174421013941352,
    "time": 21529.4384765625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (6)",
    "input": "(- (* PI l) (* (/ 1.0 (* F F)) (tan (* PI l))))",
    "output": "(- (* PI l) (* (/ 1.0 F) (fma (/ 1.0 F) (tan (* PI l)) (fma (- (tan (* PI l))) (- (/ 1.0 F)) (* (/ 1.0 F) (- (tan (* PI l))))))))",
    "output_parens": 19,
    "avg_bits_err_input": 16.27470222508504,
    "avg_bits_err_output": 12.274923091808688,
    "avg_bits_err_improve": 3.999779133276352,
    "time": 30029.436279296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (24)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (/ 1.0 (sin B)))",
    "output": "(- (/ 1.0 (sin B)) (* (/ 1.0 (tan B)) (- (- x -1.0) 1.0)))",
    "output_parens": 8,
    "avg_bits_err_input": 0.21018872187554086,
    "avg_bits_err_output": 0.21228964124079802,
    "avg_bits_err_improve": -0.0021009193652571645,
    "time": 30895.69775390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (23)",
    "input": "(+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) (- (/ 1.0 2.0)))))",
    "output": "(if (<= (+ (- (* x (/ 1.0 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2.0) (* 2.0 x)) -0.5))) 2e+170) (fma (- (/ 1.0 (tan B))) x (* (pow (fma x 2.0 (fma F F 2.0)) -0.5) (/ F (sin B)))) (+ (- (* x (/ 1.0 (tan B)))) (log (pow (exp (pow (fma F F (fma 2.0 x 2.0)) -0.5)) (/ F (sin B))))))",
    "output_parens": 38,
    "avg_bits_err_input": 13.931669761833206,
    "avg_bits_err_output": 13.733815212509645,
    "avg_bits_err_improve": 0.1978545493235604,
    "time": 50857.163818359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "VandenBroeck and Keller, Equation (20)",
    "input": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f))))))))",
    "output": "(- (* (/ 1.0 (/ PI 4.0)) (log (/ (+ (exp (* (/ PI 4.0) f)) (exp (- (* (/ PI 4.0) f)))) (- (expm1 (* (/ PI 4.0) f)) (expm1 (* (/ PI 4.0) (- f))))))))",
    "output_parens": 22,
    "avg_bits_err_input": 61.35569690165737,
    "avg_bits_err_output": 2.0194368458635052,
    "avg_bits_err_improve": 59.336260055793865,
    "time": 79494.32641601562,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (7)",
    "input": "(/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ x 1.0) (- x 1.0)) (+ (* l l) (* 2.0 (* t t)))) (* l l))))",
    "output": "(if (<= t -1e-109) (/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- l (* (/ (+ 1.0 x) (+ -1.0 x)) l)))))) (if (<= t 1.05e-162) (/ (* (sqrt 2.0) t) (sqrt (fma l (- l) (* (/ (+ 1.0 x) (+ x -1.0)) (+ (* t (+ t t)) (* l l)))))) (/ (* (sqrt 2.0) t) (sqrt (- (* (/ (+ 1.0 x) (+ -1.0 x)) (* t (+ t t))) (* l (- l (* (/ (+ 1.0 x) (+ -1.0 x)) l))))))))",
    "output_parens": 52,
    "avg_bits_err_input": 42.76990330589846,
    "avg_bits_err_output": 35.7032835751013,
    "avg_bits_err_improve": 7.066619730797157,
    "time": 31270.908203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3b), real",
    "input": "(* (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))) (sin th))",
    "output": "(* (expm1 (log1p (/ (sin ky) (sqrt (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))) (sin th))",
    "output_parens": 12,
    "avg_bits_err_input": 3.964076345249619,
    "avg_bits_err_output": 4.017939360910243,
    "avg_bits_err_improve": -0.053863015660624125,
    "time": 37299.71435546875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (3a)",
    "input": "(sqrt (* (/ 1.0 2.0) (+ 1.0 (/ 1.0 (sqrt (+ 1.0 (* (pow (/ (* 2.0 l) Om) 2.0) (+ (pow (sin kx) 2.0) (pow (sin ky) 2.0)))))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ 1.0 (- (+ 1.0 (sqrt (+ (pow (* (/ (+ l l) Om) (sin kx)) 2.0) (+ 1.0 (pow (* (/ (+ l l) Om) (sin ky)) 2.0))))) 1.0)))))",
    "output_parens": 19,
    "avg_bits_err_input": 0.941,
    "avg_bits_err_output": 0.007375,
    "avg_bits_err_improve": 0.9336249999999999,
    "time": 19803.144775390625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (2)",
    "input": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (pow (/ t l) 2.0))))))",
    "output": "(asin (sqrt (/ (- 1.0 (pow (/ Om Omc) 2.0)) (+ 1.0 (* 2.0 (* (/ t l) (/ t l)))))))",
    "output_parens": 11,
    "avg_bits_err_input": 10.513191713756571,
    "avg_bits_err_output": 10.51344171375657,
    "avg_bits_err_improve": -0.00024999999999941735,
    "time": 63880.849853515625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (13)",
    "input": "(sqrt (* (* (* 2.0 n) U) (- (- t (* 2.0 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2.0)) (- U U*)))))",
    "output": "(if (<= U -8e-297) (* (sqrt (- U)) (sqrt (* (- (* 2.0 (/ (* l l) Om)) (- t (* n (* (pow (/ l Om) 2.0) (- U U*))))) (* 2.0 n)))) (* (sqrt U) (sqrt (* n (* (- (- t (* 2.0 (/ (* l l) Om))) (* n (* (pow (/ l Om) 2.0) (- U U*)))) 2.0)))))",
    "output_parens": 33,
    "avg_bits_err_input": 34.81510642911647,
    "avg_bits_err_output": 30.12347036094142,
    "avg_bits_err_improve": 4.69163606817505,
    "time": 40994.438232421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10-)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (- (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= t -4.8e+135) (/ 2.0 (- (* 1.0 (- (* (/ (pow t 3.0) (* l l)) (* (sin (+ (- PI k) 0.0)) (tan k))))) (* (sin k) (* (tan k) (* (/ (pow t 3.0) (* l l)) (- -1.0 (pow (/ k t) 2.0))))))) (if (<= t -7.5e-107) (/ 2.0 (* (tan k) (* (sin k) (* (/ (pow t 3.0) (* l l)) (pow (/ k t) 2.0))))) (/ 2.0 (* (pow (/ k t) 2.0) (fma (sin k) (- (tan k)) (* (sin k) (* (tan k) (+ (/ (pow t 3.0) (* l l)) 1.0))))))))",
    "output_parens": 55,
    "avg_bits_err_input": 47.393965477818895,
    "avg_bits_err_output": 36.8675517280056,
    "avg_bits_err_improve": 10.526413749813294,
    "time": 57544.366943359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Toniolo and Linder, Equation (10+)",
    "input": "(/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0)))",
    "output": "(if (<= (/ 2.0 (* (* (* (/ (pow t 3.0) (* l l)) (sin k)) (tan k)) (+ (+ 1.0 (pow (/ k t) 2.0)) 1.0))) 1e+286) (/ 2.0 (* (sin k) (* (tan k) (* (/ (pow t 3.0) (* l l)) (+ 2.0 (pow (/ k t) 2.0)))))) (/ 2.0 (* (+ 2.0 (pow (/ k t) 2.0)) (+ (fma (sin k) (tan k) (* (tan k) (- (sin k)))) (* (/ (pow t 3.0) (* l l)) (* (sin k) (tan k)))))))",
    "output_parens": 47,
    "avg_bits_err_input": 32.28531013236232,
    "avg_bits_err_output": 29.982259986995853,
    "avg_bits_err_improve": 2.3030501453664662,
    "time": 38657.36279296875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (64)",
    "input": "(+ (* (/ (cos th) (sqrt 2.0)) (* a1 a1)) (* (/ (cos th) (sqrt 2.0)) (* a2 a2)))",
    "output": "(* (/ (cos th) (sqrt 2.0)) (+ (* a1 a1) (* a2 a2)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5056808297076038,
    "avg_bits_err_output": 0.5060983109579644,
    "avg_bits_err_improve": -0.00041748125036067396,
    "time": 40919.658203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Migdal et al, Equation (51)",
    "input": "(* (/ 1.0 (sqrt k)) (pow (* (* 2.0 PI) n) (/ (- 1.0 k) 2.0)))",
    "output": "(* (pow (* 2.0 (* PI n)) (/ (- 1.0 k) 2.0)) (+ (+ (pow k -0.5) 1.0) -1.0))",
    "output_parens": 9,
    "avg_bits_err_input": 0.5319846978978081,
    "avg_bits_err_output": 0.4933900141094367,
    "avg_bits_err_improve": 0.03859468378837139,
    "time": 51008.15966796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (4)",
    "input": "(+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2.0))) U)",
    "output": "(+ (+ (* (cos (/ K 2.0)) (* J (- (exp l) (exp (- l))))) (fma (- (exp l)) (- (* (cos (/ K 2.0)) J)) (* (exp l) (- (* (cos (/ K 2.0)) J))))) U)",
    "output_parens": 23,
    "avg_bits_err_input": 17.644283046851097,
    "avg_bits_err_output": 17.649222157207213,
    "avg_bits_err_improve": -0.004939110356115606,
    "time": 31334.297119140625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (32)",
    "input": "(* (cos (- (/ (* K (+ m n)) 2.0) M)) (exp (- (- (pow (- (/ (+ m n) 2.0) M) 2.0)) (- l (fabs (- m n))))))",
    "output": "(* (- (+ (cos (- (/ (* K (+ m n)) 2.0) M)) 1.0) 1.0) (exp (- (- (fabs (- n m)) l) (pow (- (/ (+ m n) 2.0) M) 2.0))))",
    "output_parens": 17,
    "avg_bits_err_input": 15.451455712274758,
    "avg_bits_err_output": 15.45240245097524,
    "avg_bits_err_improve": -0.0009467387004828964,
    "time": 22458.825439453125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Maksimov and Kolovsky, Equation (3)",
    "input": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output": "(* (* (* -2.0 J) (cos (/ K 2.0))) (sqrt (+ 1.0 (pow (/ U (* (* 2.0 J) (cos (/ K 2.0)))) 2.0))))",
    "output_parens": 13,
    "avg_bits_err_input": 17.888448120312592,
    "avg_bits_err_output": 17.888448120312592,
    "avg_bits_err_improve": 0,
    "time": 37211.93701171875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (9a)",
    "input": "(* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l)))))",
    "output": "(if (<= (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))) 2e+254) (* w0 (sqrt (- 1.0 (* (pow (/ (* M D) (* 2.0 d)) 2.0) (/ h l))))) (* w0 (sqrt (- 1.0 (log (pow (exp (/ h l)) (pow (- (+ (/ (* M D) (+ d d)) 1.0) 1.0) 2.0)))))))",
    "output_parens": 31,
    "avg_bits_err_input": 13.773766496309056,
    "avg_bits_err_output": 9.741085455338164,
    "avg_bits_err_improve": 4.032681040970893,
    "time": 9359.4541015625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (3)",
    "input": "(* c0 (sqrt (/ A (* V l))))",
    "output": "(* c0 (sqrt (/ A (* V l))))",
    "output_parens": 4,
    "avg_bits_err_input": 19.38393505942606,
    "avg_bits_err_output": 19.38393505942606,
    "avg_bits_err_improve": 0,
    "time": 22428.726318359375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (13)",
    "input": "(* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M)))))",
    "output": "(if (<= (* (/ c0 (* 2.0 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))) (- INFINITY)) (* (/ c0 (* 2.0 w)) (fma (sqrt (- (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (sqrt (+ (/ (* d (* c0 d)) (* D (* w (* D h)))) M)) (/ (* d (* c0 d)) (* D (* w (* D h)))))) (* (/ c0 (* 2.0 w)) (+ (/ (* d (* d c0)) (* D (* D (* w h)))) (sqrt (- (pow (/ (* d (* d c0)) (* D (* D (* w h)))) 2.0) (* M M))))))",
    "output_parens": 75,
    "avg_bits_err_input": 59.63760002667698,
    "avg_bits_err_output": 56.281875407381634,
    "avg_bits_err_improve": 3.3557246192953443,
    "time": 37123.6298828125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Henrywood and Agarwal, Equation (12)",
    "input": "(* (* (pow (/ d h) (/ 1.0 2.0)) (pow (/ d l) (/ 1.0 2.0))) (- 1.0 (* (* (/ 1.0 2.0) (pow (/ (* M D) (* 2.0 d)) 2.0)) (/ h l))))",
    "output": "(- (* (sqrt (/ d l)) (- (- (sqrt (/ d h))))) (* (- (- (sqrt (/ d h)))) (* (/ h l) (* (pow (/ (* M D) (+ d d)) 2.0) (* (sqrt (/ d l)) 0.5)))))",
    "output_parens": 23,
    "avg_bits_err_input": 26.269140892190727,
    "avg_bits_err_output": 26.20480810252543,
    "avg_bits_err_improve": 0.06433278966529699,
    "time": 51050.752197265625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example, simplified",
    "input": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output": "(- 1.0 (sqrt (* 0.5 (+ 1.0 (/ 1.0 (hypot 1.0 x))))))",
    "output_parens": 6,
    "avg_bits_err_input": 15.558024646213862,
    "avg_bits_err_output": 15.558024646213862,
    "avg_bits_err_improve": 0,
    "time": 100495.53930664062,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (22+)",
    "input": "(/ 4.0 (* (* (* 3.0 PI) (- 1.0 (* v v))) (sqrt (- 2.0 (* 6.0 (* v v))))))",
    "output": "(/ 4.0 (* PI (* (sqrt (- 2.0 (* v (* v 6.0)))) (- 3.0 (* (* v v) 3.0)))))",
    "output_parens": 10,
    "avg_bits_err_input": 0.9827924812503607,
    "avg_bits_err_output": 0.014459962500721157,
    "avg_bits_err_improve": 0.9683325187496395,
    "time": 12077.18408203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Equation (20:1,3)",
    "input": "(/ (- 1.0 (* 5.0 (* v v))) (* (* (* PI t) (sqrt (* 2.0 (- 1.0 (* 3.0 (* v v)))))) (- 1.0 (* v v))))",
    "output": "(/ (- 1.0 (- (exp (log1p (* 5.0 (* v v)))) 1.0)) (fma t (* (sqrt (- 2.0 (* v (* v 6.0)))) (* PI (- 1.0 (* v v)))) 0.0))",
    "output_parens": 16,
    "avg_bits_err_input": 0.41964857393116367,
    "avg_bits_err_output": 0.35177603737344826,
    "avg_bits_err_improve": 0.06787253655771541,
    "time": 28471.040283203125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 2",
    "input": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output": "(* (* (/ (sqrt 2.0) 4.0) (sqrt (- 1.0 (* 3.0 (* v v))))) (- 1.0 (* v v)))",
    "output_parens": 10,
    "avg_bits_err_input": 0.013146240625180288,
    "avg_bits_err_output": 0.013146240625180288,
    "avg_bits_err_improve": 0,
    "time": 5007.735107421875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix B, 1",
    "input": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output": "(acos (/ (- 1.0 (* 5.0 (* v v))) (- (* v v) 1.0)))",
    "output_parens": 7,
    "avg_bits_err_input": 0.5191202699468207,
    "avg_bits_err_output": 0.5191202699468207,
    "avg_bits_err_improve": 0,
    "time": 9636.964111328125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Falkner and Boettcher, Appendix A",
    "input": "(/ (* a (pow k m)) (+ (+ 1.0 (* 10.0 k)) (* k k)))",
    "output": "(/ (- (* a (+ (pow k m) 1.0)) a) (- (* k (+ k 10.0)) -1.0))",
    "output_parens": 8,
    "avg_bits_err_input": 1.96427427963445,
    "avg_bits_err_output": 1.9726380560501486,
    "avg_bits_err_improve": -0.008363776415698743,
    "time": 16717.168212890625,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bulmash initializePoisson",
    "input": "(+ (/ NdChar (+ 1.0 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT)))))",
    "output": "(+ (/ NdChar (+ 1.0 (exp (/ (- mu (- (- Ec Vef) EDonor)) KbT)))) (/ NaChar (+ 1.0 (exp (/ (- (+ (+ Vef Ev) EAccept) mu) KbT)))))",
    "output_parens": 15,
    "avg_bits_err_input": 0.017326569372752045,
    "avg_bits_err_output": 0.017326569372752045,
    "avg_bits_err_improve": 0,
    "time": 6664.7734375,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (26)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (* b b))) 1.0)",
    "output": "(- (+ (* (+ (fma b (* b (* a a)) (pow b 4.0)) (* a (* (fma a a (* b b)) a))) 1.0) (* 4.0 (* b b))) 1.0)",
    "output_parens": 14,
    "avg_bits_err_input": 0.17891093358955718,
    "avg_bits_err_output": 0.06857108358667256,
    "avg_bits_err_improve": 0.11033985000288461,
    "time": 29439.280517578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (25)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (+ 1.0 a)) (* (* b b) (- 1.0 (* 3.0 a)))))) 1.0)",
    "output_parens": 15,
    "avg_bits_err_input": 0.1845460060198135,
    "avg_bits_err_output": 0.1845460060198135,
    "avg_bits_err_improve": 0,
    "time": 36008.381591796875,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Bouland and Aaronson, Equation (24)",
    "input": "(- (+ (pow (+ (* a a) (* b b)) 2.0) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output": "(- (+ (- (+ (pow a 4.0) (fma (* a a) (fma b b 1.0) (fma b (* b (fma a a 1.0)) (pow b 4.0)))) (fma b b (* a a))) (* 4.0 (+ (* (* a a) (- 1.0 a)) (* (* b b) (+ 3.0 a))))) 1.0)",
    "output_parens": 22,
    "avg_bits_err_input": 0.1884003703942341,
    "avg_bits_err_output": 0.023055810003922848,
    "avg_bits_err_improve": 0.16534456039031126,
    "time": 32318.889892578125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  },
  {
    "test": "Given's Rotation SVD example",
    "input": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output": "(sqrt (* 0.5 (+ 1.0 (/ x (sqrt (+ (* (* 4.0 p) p) (* x x)))))))",
    "output_parens": 9,
    "avg_bits_err_input": 13.537728423626795,
    "avg_bits_err_output": 13.537728423626795,
    "avg_bits_err_improve": 0,
    "time": 14277.563720703125,
    "seed": 30,
    "npts": 256,
    "herbie_iters": 4,
    "config": "enumo-ruler-rat"
  }
]
